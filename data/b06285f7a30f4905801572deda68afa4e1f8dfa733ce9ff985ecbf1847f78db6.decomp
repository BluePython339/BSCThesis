sub_411355
div [ eax - 0x4c63ec57 ]
loop rwxdata
jmp [ 0xffffffffa0e6c8c8 ]
and eax 0xa0e6c8c8
das
add eax 0xc8c85c60
enter 0x58c8 0x54
push eax
dec esp
enter 0xc8c8 0xc8
dec eax
inc esp
inc eax
cmp al 0xc8
enter 0xc8c8 0x38
xor al 0x30
sub al 0xc8
enter 0xc8c8 0x28
and al 0x20
sbb al 0xc8
enter 0xc8c8 0x14
sbb [ eax + edx ] cl
xchg ecx eax
xchg ecx eax
xchg ecx eax
out 0xb4 eax
mov al 0x60
push 0x9117b73e
insb
xchg ebx eax
ja rwxdata
sub al 0x28
and al 0x20
sbb [ ecx ] ebx
sbb [ ecx ] ebx
sbb al 0x18
adc al 0x10
sbb [ ecx ] ebx
sbb [ ecx ] ebx
mov al 0x78
mov al 0xe7
stc
jl rwxdata
inc ecx
inc ebx
cmp [ fs : esp + edx * 4 - 0x68 ] 0x64
fsubr st0
fmul [ eax + 0x6473c8e7 ]
mov [ eax - 0x50 ] ss
pop eax
shl [ ecx - 0x6e6e6543 ] 0x1
int3
or al 0x8
add al 0x48
xor dh [ edx ]
xor dh [ esi ]
add eax 0x64403c38
in al 0x39
xor al [ eax + edi * 2 - 0x4f ]
je rwxdata
mov al 0x80
mov al 0x84
mov al 0x88
mov al 0x7c
lahf
iretd
cmpsb [ esi ] [ edi ]
or cl [ ecx + 0x64485d ]
add [ ecx - 0x22 ] ch
scasd [ edi ]
mov al [ 0x425a4353 ]
pop es
pop ecx
lahf
aas
inc [ esi ]
pop eax
pop ds
push esp
inc ebp
dec ebp
push eax
inc ebx
push edx
inc esp
dec ecx
dec edi
push ebx
fstpnce st4
dec eax
push ebx
push edx
jns rwxdata
insb
das
add ah [ eax ]
cmp cl [ ebx + 0x52 ]
push esp
sar esi 0xf6
dec edi
push edx
dec ecx
push esi
inc ebp
pop edi
push edx
mov [ edi + 0x56 ] ecx
inc ecx
inc edx
dec esp
inc ebp
ucomiss xmm5 [ ebx + 0x1 ]
sti
inc esi
dec ecx
pop eax
dec ebp
sbb eax [ ecx + 0x4d ]
inc esp
dec ecx
push ebx
dec ebx
push ebp
dec esi
int3
je rwxdata
inc ebp
inc esp
sbb ecx ebp
sub eax [ ebx + 0x27 ]
stc
xchg ebp ebx
push es
dec edi
insd
push edx
outsd
outsd
je rwxdata
dec ecx
push eax
popfd
int 0x2f
and esi [ ebx + 0x6e ]
outsd
and [ ecx + 0x70 ] ch
inc esp
dec esi
int 0x9e
cld
stc
pop es
push ebx
dec esp
dec eax
dec edi
inc esp
dec esi
dec esi
dec ebp
xor ecx [ ebx + 0x479ec1d8 ]
push ebp
push ebx
rsqrtps xmm2 [ edi + eax + 0x60 ]
jle rwxdata
push eax
pop es
and eax 0x454b1375
pop ecx
push ebx
inc ebx
dec ebp
and ecx [ esi + 0x7f ]
mov esi 0x4341fb1d
sub_411d0c
das
in al dx
nop
lea ecx [ edi ]
psadbw mm3 [ edi + 0x3c ]
xchg edx eax
or edi [ ecx + 0x21 ]
pop ds
xor al 0x1b
mov dl 0x21
sbb esi [ ebx + 0x3f ]
imul ebp [ ecx + 0x1f ]
and [ ebx ] ebx
mov dl 0x21
sar [ edi ] 0x1

mov dl 0xbf
mov ch 0xfc
and ch al
outsd
bound ebx [ esi ]
movsb [ edi ] [ esi ]
cmpsd [ esi ] [ edi ]
adc eax 0x2608c9a0
aaa
leave
pop edi
or al 0xc9
test [ esp + ecx * 4 ] ebx
cmc
enter 0x90fd 0xc
fst [ eax - 0x13ced021 ]
nop
or al 0xc9
push esp
jmp rwxdata
xor esp ebp
sub_411db5
in al 0x2f
jg rwxdata
push cs
in eax dx
imul [ edi + 0x17246414 ]
jb rwxdata
pop ss
jbe rwxdata
clc
mov edi 0x8648f38e
in al 0x42
sbb al 0x41
cdq
mov al 0x87
insb
div ecx
div [ esi ]
inc ebx
xor dh [ esi ]
inc ebp
dec edi
adc [ edi + 0x43243643 ] bh
push ecx
adc ch [ edi ]
0x64364364 0xe95f
xor ah [ ebx + eax * 2 ]
aaa
pop edi
push 0x24
int1
push es
inc ebx
jb rwxdata
sbb eax 0xbccc1ff6
mov al 0x43
add eax 0x7ff4e53f
push ds
clc
nop
or al 0xc9
test [ edi + esi * 2 ] esp
fst [ eax + 0x4f20d90c ]
or esp [ esi - 0x3d1b79f1 ]
inc ebx
pop ds
inc edx
pop eax
mov edi 0x390b07a7
and al 0x6f
ror [ ecx ] 0x8d
xor [ edx + esi * 8 - 0x6dc9bc70 ] bl
pop esi
cvtdq2ps xmm6 xmm2
pop esi
fsub [ ecx ]
mov ecx 0xbff82640
sub_411f03
not [ 0x2438c864 ]
jpe rwxdata
inc ebx
jb rwxdata
out dx eax
test [ esi + 0x22e4864 ] 0xd1
inc esp
dec eax
xchg [ eax + ecx * 8 - 0x51 ] ah
in eax dx
cmp [ edx + 0x21 ] dh
xchg [ ecx + esi + 0x1f ] ebp
inc ebp
xchg edi eax
inc ebx
and al 0x43
iretd
xchg ebx ecx
hlt
sub_411f29
pop edx
paddsb mmx1 mmx0
and [ ecx + 0x11cff7b0 ] edi
and al bh
or al 0xd9
nop
pop esp
mov [ ebx ] gs
outsd
dec ebp
nop
or al 0xd9
nop
lea ebp [ edi ]
cwde
in al 0xc2
push cs
leave
rcl [ edi ] 0x1
neg [ edi ]
mov bl 0x86
insb
dec eax
xchg [ eax ] bl
sbb [ edi ] ecx
sbb cl [ eax - 0x7a ]
insb
dec eax
sbb ecx [ edi - 0x59 ]
insb
dec eax
xchg [ ebp + edi * 4 + 0xf ] ch
scasd [ edi ]
retn
sub_412154
fst [ eax + 0x243f590c ]
das
nop
pop ss
inc esi
or al 0x2d
pop ds
outsb
pop eax
je rwxdata
cdq
dec eax
aas
mov ah 0x2f
pop ss
inc edx
push cs
and esi esi
pop es
hlt
_start
pushad
mov esi rwxdata
lea edi [ esi - 0xb000 ]
push edi
or ebp 0xffffffff
jmp rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
nop
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
mov eax 0x1
jb rwxdata
adc eax eax
add ebx ebx
jae rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
add ebx ebx
jne rwxdata
jne rwxdata
xor ecx ecx
sub eax 0x3
jb rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
jae rwxdata
add ebx ebx
jne rwxdata
shl eax 0x8
mov al [ esi ]
inc esi
xor eax 0xffffffff
je rwxdata
adc ecx ecx
add ebx ebx
jne rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
pop esi
mov edi esi
mov ecx 0x4ca
mov ebp eax
adc ecx ecx
jne rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
mov al [ edi ]
inc edi
sub al 0xe8
cmp [ edi ] 0x9
jne rwxdata
cmp ebp 0xfffff300
adc ecx 0x1
lea edx [ edi + ebp ]
cmp ebp 0xfffffffc
jbe rwxdata
inc ecx
mov eax [ edi ]
mov bl [ edi + 0x4 ]
shr ax 0x8
rol eax 0x10
xchg ah al
sub eax edi
sub bl 0xe8
add eax esi
mov [ edi ] eax
add edi 0x5
mov al bl
loop rwxdata
mov eax [ edx ]
add edx 0x4
mov [ edi ] eax
add edi 0x4
sub ecx 0x4
ja rwxdata
mov al [ edx ]
inc edx
mov [ edi ] al
inc edi
dec ecx
jne rwxdata
adc ecx ecx
add ebx ebx
jae rwxdata
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
cmp al 0x1
ja rwxdata
lea edi [ esi + 0x10000 ]
add edi ecx
jmp rwxdata
jmp rwxdata
add ebx ebx
jne rwxdata
jne rwxdata
mov ebp [ esi + 0x120e4 ]
lea edi [ esi - 0x1000 ]
mov ebx 0x1000
push eax
push esp
push 0x4
push ebx
push edi
call ebp
lea eax [ edi + 0x1f7 ]
and [ eax ] 0x7f
and [ eax + 0x28 ] 0x7f
pop eax
push eax
push esp
push eax
push ebx
push edi
call ebp
pop eax
popad
lea eax [ esp - 0x80 ]
mov ebx [ edi + 0x4 ]
lea eax [ eax + esi + 0x12000 ]
add ebx esi
push eax
add edi 0x8
call [ esi + 0x120dc ]
xchg ebp eax
add ebx ebx
jne rwxdata
add ecx 0x2
mov ebx [ esi ]
sub esi 0xfffffffc
adc ebx ebx
jae rwxdata
push 0x0
cmp esp eax
jne rwxdata
sub esp 0xffffff80
jmp rwxdata
mov eax [ edi ]
or eax eax
je rwxdata
mov ecx edi
jns rwxdata
push edi
dec eax
[ edi ]
push ebp
call [ esi + 0x120e0 ]
or eax eax
je rwxdata
movzx eax [ edi ]
inc edi
push eax
inc edi
mov ecx 0xaef24857
call [ esi + 0x120f0 ]
mov [ ebx ] eax
add ebx 0x4
jmp rwxdata
mov al [ edi ]
inc edi
or al al
je rwxdata
sub_411301
les edi [ bp + di + 0x536c ]
dec ebp
mov [ eax ] es
sbb [ ds : ebp + 0x1325cfc0 ] al
or dl [ esi - 0x7f3f7cfb ]
add edi [ eax + 0x78a34c1b ]
inc ebx
push ss
0x5893e8a 0xa5e8
sub_411328
sub eax 0xe220c155
0x725f
sub_41146a
push esp
lodsb [ esi ]
pop es
0xa6560fd8 0x890a
sub_411cf7
push cs
pop edi
retn
sub_411cfa
das
inc ebx
inc ebx
or bl [ edi ]
stosd [ edi ]
aas
insb
test [ ecx ] ah
mov ecx 0x77ccf590
iretd
sub_411db4
iretd
sub_412301
or eax 0xfca1fc1
cdq
xchg [ eax + ecx * 2 - 0x7a ] ah
test [ edx + 0x63 ] ah
dec esp
enter 0xb0b 0xaf
adc bh al
retn
sub_41235a
mov [ edi ] ebp
sub eax [ bp - 0x379c ]
pop ds
0x1fc9
sub_412b0c
daa
and [ eax + 0x6e ] bl
add eax 0xe62494ac
mov dh 0x0
add [ eax ] al
adc al 0xab
add [ edx ] dl
add [ eax ] al
jmp [ eax - 0x42 ]
