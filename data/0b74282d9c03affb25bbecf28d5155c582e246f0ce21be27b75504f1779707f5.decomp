sub_401000
push ebp
mov ebp esp
sub esp 0x5c
cmp [ ebp + 0xc ] 0xf
je r-xdata
push ebx
push esi
mov esi [ rw-data ]
lea eax [ ebp - 0x5c ]
push edi
push eax
push [ ebp + 0x8 ]
call [ BeginPaint@IAT ]
and [ ebp - 0xc ] 0x0
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
call [ GetClientRect@IAT ]
mov edi [ ebp - 0x10 ]
and [ ebp - 0x10 ] 0x0
mov ebx [ DeleteObject@IAT ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x46
mov eax [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp - 0x18 ] edi
jl r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
jmp r-xdata
or [ eax + 0x18 ] 0x10
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
movzx eax [ esi + 0x52 ]
movzx edx [ esi + 0x56 ]
imul edx [ ebp - 0x18 ]
mov ecx edi
sub ecx [ ebp - 0x18 ]
imul eax ecx
add eax edx
mov [ ebp + 0x10 ] ecx
cdq
idiv edi
xor edx edx
mov dh al
movzx eax [ esi + 0x51 ]
imul eax ecx
movzx ecx [ esi + 0x55 ]
imul ecx [ ebp - 0x18 ]
add eax ecx
mov ecx edx
cdq
idiv edi
movzx edx [ esi + 0x54 ]
imul edx [ ebp - 0x18 ]
mov cl al
movzx eax [ esi + 0x50 ]
imul eax [ ebp + 0x10 ]
add eax edx
cdq
idiv edi
shl ecx 0x8
movzx eax al
or ecx eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ecx
call [ CreateBrushIndirect@IAT ]
add [ ebp - 0x10 ] 0x4
mov [ ebp + 0x14 ] eax
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0xc ]
call [ FillRect@IAT ]
push [ ebp + 0x14 ]
call ebx
add [ ebp - 0x18 ] 0x4
cmp [ esi + 0x58 ] 0xffffffff
je r-xdata
leave
retn 0x10
lea eax [ ebp - 0x5c ]
push eax
push [ ebp + 0x8 ]
call [ EndPaint@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
push [ esi + 0x34 ]
call [ CreateFontIndirectA@IAT ]
test eax eax
mov [ ebp + 0x14 ] eax
je r-xdata
mov edi [ ebp + 0xc ]
push 0x1
push edi
mov [ ebp - 0x1c ] 0x10
mov [ ebp - 0x18 ] 0x8
call [ SetBkMode@IAT ]
push [ esi + 0x58 ]
push edi
call [ SetTextColor@IAT ]
push [ ebp + 0x14 ]
mov esi [ SelectObject@IAT ]
push edi
call esi
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x1c ]
push 0x820
push eax
push 0xffffffff
push rw-data
push edi
call [ DrawTextA@IAT ]
push [ ebp + 0xc ]
push edi
call esi
push [ ebp + 0x14 ]
call ebx
sub_40117d
mov ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov edx ecx
push ebx
imul edx edx 0x418
push esi
push edi
mov edx [ edx + eax + 0x8 ]
test dl 0x2
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
lea esi [ ecx + 0x1 ]
xor edi edi
cmp esi [ rw-data ]
jae r-xdata
mov ecx esi
imul ecx ecx 0x418
lea eax [ ecx + eax + 0x8 ]
test cl 0x4
je r-xdata
inc edi
jmp r-xdata
test cl 0x10
jne r-xdata
mov ecx edi
dec edi
test ecx ecx
je r-xdata
inc esi
add eax 0x418
cmp esi [ rw-data ]
jb r-xdata
mov ebx ecx
xor ebx edx
and ebx 0x1
xor ebx ecx
mov [ eax ] ebx
jmp r-xdata
mov ecx [ eax ]
test cl 0x2
je r-xdata
sub_4011ef
push ebp
mov ebp esp
push ecx
push ecx
mov edx [ ebp + 0x8 ]
push ebx
push esi
mov esi edx
imul esi esi 0x418
mov ebx [ rw-data ]
xor ecx ecx
add esi ebx
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov eax [ esi + 0x8 ]
test al 0x2
je r-xdata
cmp edx [ rw-data ]
jae r-xdata
cmp [ ebp + 0xc ] ecx
je r-xdata
xor eax eax
mov eax edx
imul eax eax 0x418
lea edi [ eax + ebx + 0x8 ]
lea eax [ edx + 0x1 ]
mov ecx [ edi ]
test cl 0x2
je r-xdata
and al 0xbe
inc edx
mov [ esi + 0x8 ] eax
test cl 0x4
jne r-xdata
push 0x1
push edx
call sub_4011ef
mov ecx [ edi ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test cl 0x40
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test cl 0x1
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ esi + 0x8 ]
and cl 0x7f
or ecx 0x1
mov [ esi + 0x8 ] ecx
jmp r-xdata
or [ esi + 0x8 ] 0x40
jmp r-xdata
inc [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
jmp r-xdata
cmp eax [ rw-data ]
mov edx eax
jb r-xdata
sub_401299
mov ecx [ esp + 0x4 ]
mov eax [ rw-data ]
push esi
xor esi esi
cmp ecx 0x20
jae r-xdata
pop esi
retn 0x4
cmp [ rw-data ] esi
jbe r-xdata
lea edx [ eax + 0x8 ]
push edi
inc esi
add edx 0x418
cmp esi [ rw-data ]
jb r-xdata
xor edi edi
inc edi
shl edi cl
test [ edx - 0x4 ] edi
je r-xdata
mov eax [ edx ]
test al 0x6
jne r-xdata
pop edi
and al 0xfe
or al 0x1
jmp r-xdata
mov [ edx ] eax
sub_4012e2
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
and [ ebp - 0x4 ] 0x0
push ebx
push esi
add eax 0x94
push edi
mov edi [ rw-data ]
mov [ ebp - 0x8 ] eax
inc [ ebp - 0x4 ]
add [ ebp - 0x8 ] 0x4
cmp [ ebp - 0x4 ] 0x20
jb r-xdata
cmp ebx edi
jae r-xdata
mov eax [ ebp - 0x8 ]
xor ebx ebx
cmp [ eax ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x4
je r-xdata
mov esi [ rw-data ]
add esi 0x8
inc ebx
add esi 0x418
cmp ebx edi
jb r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi ]
test dl 0x6
jne r-xdata
cmp ebx edi
mov ecx [ ebp - 0x4 ]
xor eax eax
inc eax
and edx 0x1
shl eax cl
mov ecx [ esi - 0x4 ]
and ecx eax
mov eax ecx
mov ecx [ ebp - 0x4 ]
shl edx cl
cmp eax edx
jne r-xdata
cmp [ eax + ebx * 4 ] 0x0
je r-xdata
sub_401389
push esi
mov esi [ esp + 0x8 ]
jmp r-xdata
test esi esi
jge r-xdata
mov eax esi
mov ecx [ rw-data ]
imul eax eax 0x1c
add eax ecx
cmp [ eax ] 0x1
je r-xdata
xor eax eax
push eax
call sub_401434
cmp eax 0x7fffffff
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
push eax
call sub_40136d
test eax eax
jne r-xdata
pop esi
retn 0x8
dec eax
mov ecx esi
mov esi eax
sub eax ecx
inc eax
inc esi
jmp r-xdata
add [ rw-data ] eax
push 0x0
push [ rw-data ]
push 0x7530
push [ rw-data ]
call [ MulDiv@IAT ]
push eax
push 0x402
push [ esp + 0x18 ]
call [ SendMessageA@IAT ]
cmp [ esp + 0xc ] 0x0
je r-xdata
sub_401434
push ebp
mov ebp esp
sub esp 0x1a4
mov eax [ rw-data ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x7
pop ecx
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x34 ] eax
xor ebx ebx
[ edi ] [ esi ]
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
mov esi eax
mov edi edx
shl esi 0xa
mov ecx rw-data
mov [ ebp - 0x4 ] ebx
shl edi 0xa
add esi ecx
add edi ecx
lea ecx [ ebp - 0x24 ]
mov [ rw-data ] ecx
mov ecx [ ebp - 0x28 ]
add ecx 0xfffffffe
cmp ecx 0x41
ja r-xdata
mov eax [ ebp - 0x4 ]
add [ rw-data ] eax
jmp [ ecx * 4 + jump_table_4028ae ]
push ebx
push eax
inc [ rw-data ]
cmp [ ebp - 0x34 ] ebx
je r-xdata
push eax
call sub_40136d
dec eax
push ebx
push eax
call sub_401389
jmp r-xdata
push ebx
push eax
call sub_404ea5
jmp r-xdata
push ebx
call sub_4029ea
cmp eax 0x1
jg r-xdata
push [ ebp - 0x34 ]
call [ SetForegroundWindow@IAT ]
jmp r-xdata
shl eax 0x2
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
lea esi [ eax * 4 + rw-data ]
xor eax eax
mov ecx [ esi ]
cmp ecx ebx
sete al
and ecx [ ebp - 0x18 ]
mov eax [ ebp + eax * 4 - 0x24 ]
mov [ esi ] ecx
jmp r-xdata
push [ edx * 4 + rw-data ]
mov ecx [ rw-data ]
mov esi [ ShowWindow@IAT ]
cmp ecx ebx
je r-xdata
push 0xfffffff0
call sub_402a07
push [ ebp - 0x20 ]
push eax
call [ SetFileAttributesA@IAT ]
push 0xfffffff0
call sub_402a07
mov edi eax
push edi
call sub_4056de
mov esi eax
cmp esi ebx
je r-xdata
push ebx
call sub_402a07
push eax
call sub_405e9c
jmp r-xdata
push 0xffffffd0
call sub_402a07
push 0xffffffdf
mov esi eax
call sub_402a07
push 0x13
mov edi eax
call sub_402a07
push edi
push esi
call [ MoveFileA@IAT ]
test eax eax
je r-xdata
push ebx
call sub_402a07
mov esi eax
lea eax [ ebp + 0x8 ]
push eax
push edi
push 0x400
push esi
call [ GetFullPathNameA@IAT ]
test eax eax
je r-xdata
push 0xffffffff
call sub_402a07
lea ecx [ ebp + 0x8 ]
push ecx
push esi
push 0x400
push ebx
push eax
push ebx
call [ SearchPathA@IAT ]
test eax eax
push 0xffffffef
call sub_402a07
push eax
push esi
call sub_405875
jmp r-xdata
push 0x31
call sub_402a07
mov esi eax
mov eax [ ebp - 0x24 ]
and eax 0x7
push esi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x8 ] eax
call sub_4056b2
push esi
mov esi rw-data
test eax eax
je r-xdata
push ebx
jmp r-xdata
push 0x31
call sub_402a07
push [ ebp - 0x24 ]
push eax
call sub_4053c9
cmp eax ebx
je r-xdata
push 0xfffffff0
push 0x1
call sub_402a07
push eax
call lstrlenA
jmp r-xdata
push 0x2
call sub_4029ea
push 0x3
mov [ ebp + 0x8 ] eax
call sub_4029ea
push 0x1
mov edi eax
call sub_402a07
cmp [ ebp - 0x1c ] ebx
mov [ ebp - 0x30 ] eax
mov [ esi ] bl
je r-xdata
push 0x20
call sub_402a07
push 0x31
mov esi eax
call sub_402a07
cmp [ ebp - 0x14 ] ebx
push eax
push esi
jne r-xdata
xor edi edi
inc edi
push edi
call sub_402a07
push 0x400
push esi
push eax
mov [ ebp + 0x8 ] eax
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
je r-xdata
push ebx
call sub_4029ea
push 0x1
mov esi eax
call sub_4029ea
cmp [ ebp - 0x10 ] ebx
jne r-xdata
push 0x1
call sub_4029ea
push 0x2
mov edi eax
call sub_4029ea
mov ecx eax
mov eax [ ebp - 0x18 ]
cmp eax 0xc
ja r-xdata
push 0x1
call sub_402a07
push 0x2
mov edi eax
call sub_4029ea
push eax
push edi
push esi
call [ wsprintfA@IAT ]
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov edi [ rw-data ]
cmp eax ebx
je r-xdata
push 0x3
call sub_4029ea
push 0x4
mov [ ebp - 0x34 ] eax
call sub_4029ea
test [ ebp - 0x10 ] 0x1
mov [ ebp + 0x8 ] eax
je r-xdata
push ebx
call sub_4029ea
push eax
call [ IsWindow@IAT ]
push 0x2
call sub_4029ea
push eax
push 0x1
call sub_4029ea
push eax
call [ GetDlgItem@IAT ]
jmp r-xdata
mov eax [ rw-data ]
add eax edx
push eax
push 0xffffffeb
push ebx
call sub_4029ea
push eax
call [ SetWindowLongA@IAT ]
jmp r-xdata
push edx
push [ ebp - 0x34 ]
call [ GetDlgItem@IAT ]
mov esi eax
lea eax [ ebp - 0x40 ]
push eax
push esi
call [ GetClientRect@IAT ]
mov eax [ ebp - 0x34 ]
push 0x10
imul eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x38 ]
imul eax [ ebp - 0x1c ]
push eax
push ebx
push ebx
call sub_402a07
push eax
push ebx
call [ LoadImageA@IAT ]
push eax
push ebx
push 0x172
push esi
call [ SendMessageA@IAT ]
cmp eax ebx
je r-xdata
push [ ebp - 0x34 ]
call [ GetDC@IAT ]
mov edi eax
push 0x48
push 0x5a
push edi
call [ GetDeviceCaps@IAT ]
push eax
push 0x2
call sub_4029ea
push eax
call [ MulDiv@IAT ]
push edi
push [ ebp - 0x34 ]
neg eax
mov [ rw-data ] eax
call [ ReleaseDC@IAT ]
push 0x3
call sub_4029ea
mov [ rw-data ] eax
mov al [ ebp - 0x14 ]
push [ ebp - 0x20 ]
mov cl al
and cl 0x1
mov [ rw-data ] 0x1
mov [ rw-data ] cl
mov cl al
and cl 0x2
and al 0x4
push rw-data
mov [ rw-data ] cl
mov [ rw-data ] al
call sub_405bba
push rw-data
call [ CreateFontIndirectA@IAT ]
jmp r-xdata
push ebx
call sub_4029ea
push 0x1
mov esi eax
call sub_4029ea
cmp [ ebp - 0x18 ] ebx
push eax
push esi
jne r-xdata
push ebx
call sub_402a07
push 0x31
mov esi eax
call sub_402a07
push 0x22
mov ebx eax
call sub_402a07
push 0x15
mov edi eax
call sub_402a07
push 0xffffffec
call sub_401423
mov al [ edi ]
push [ ebp - 0x18 ]
neg al
sbb eax eax
push rw-data
and eax edi
push eax
mov al [ esi ]
neg al
sbb eax eax
push ebx
and eax esi
push eax
push [ ebp - 0x34 ]
call [ ShellExecuteA@IAT ]
cmp eax 0x21
jge r-xdata
push ebx
call sub_402a07
mov esi eax
push esi
push 0xffffffeb
call sub_404ea5
push esi
call sub_405368
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
push 0x2
call sub_402a07
push eax
call sub_405e9c
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
push 0xffffffee
call sub_402a07
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
push ecx
push eax
call GetFileVersionInfoSizeA
mov [ esi ] bl
cmp eax ebx
mov [ ebp - 0x8 ] eax
mov [ edi ] bl
mov [ ebp - 0x4 ] 0x1
je r-xdata
cmp [ rw-data ] ebx
mov [ ebp - 0x4 ] 0x1
jl r-xdata
push 0xfffffff0
call sub_402a07
push 0xffffffdf
mov [ ebp - 0x2c ] eax
call sub_402a07
push 0x2
mov esi eax
call sub_402a07
push 0xffffffcd
mov [ ebp - 0x30 ] eax
call sub_402a07
push 0x45
mov [ ebp - 0x8 ] eax
call sub_402a07
push esi
mov [ ebp - 0x44 ] eax
call sub_4056b2
test eax eax
jne r-xdata
push ebx
call sub_402a07
push 0x11
mov esi eax
call sub_402a07
push 0x23
mov edi eax
call sub_402a07
push esi
mov [ ebp + 0x8 ] eax
call sub_405e9c
test eax eax
jne r-xdata
cmp eax 0xbadf00d
je r-xdata
xor esi esi
xor edi edi
cmp eax ebx
je r-xdata
mov ax [ rw-data ]
push 0x1
mov [ ebp + 0xa ] ax
call sub_402a07
push 0x12
mov edi eax
call sub_402a07
push 0xffffffdd
mov [ ebp - 0x2c ] eax
call sub_402a07
push eax
push 0x3ff
lea eax [ ebp + 0xa ]
push esi
push eax
push [ ebp - 0x2c ]
push edi
call [ GetPrivateProfileStringA@IAT ]
cmp [ esi ] 0xa
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
jne r-xdata
push eax
call sub_402afc
mov esi [ ebp - 0x14 ]
mov edi eax
mov eax [ ebp - 0x10 ]
push 0x2
mov [ ebp - 0x2c ] eax
call sub_402a07
push 0x11
mov [ ebp - 0x44 ] eax
call sub_402a07
lea ecx [ ebp + 0x8 ]
push ebx
push ecx
mov ecx [ rw-data ]
or ecx 0x2
push ebx
push ecx
push ebx
push ebx
push ebx
push eax
push edi
mov [ ebp - 0x4 ] 0x1
call [ RegCreateKeyExA@IAT ]
test eax eax
jne r-xdata
push 0x20019
call sub_402b11
push 0x33
mov edi eax
call sub_402a07
cmp edi ebx
mov [ esi ] bl
je r-xdata
push 0x20019
call sub_402b11
push 0x3
mov edi eax
call sub_4029ea
cmp edi ebx
mov [ esi ] bl
je r-xdata
cmp [ esi ] bl
je r-xdata
push 0xffffffed
call sub_402a07
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push eax
call sub_405846
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0x2
mov [ ebp - 0x30 ] ebx
call sub_4029ea
cmp eax 0x1
mov [ ebp - 0x34 ] eax
jl r-xdata
cmp [ esi ] bl
je r-xdata
cmp [ esi ] bl
je r-xdata
cmp [ edi ] bl
je r-xdata
push 0x2
call sub_402a07
lea ecx [ ebp - 0x1a4 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
jne r-xdata
push 0xfffffff0
mov [ ebp - 0x8 ] 0xfffffd66
call sub_402a07
mov esi eax
push esi
mov [ ebp - 0x44 ] esi
call sub_4056b2
test eax eax
jne r-xdata
push ebx
call sub_4029ea
cmp eax [ rw-data ]
mov [ ebp + 0x8 ] eax
jae r-xdata
push ebx
call sub_4029ea
cmp eax 0x20
jae r-xdata
mov ecx [ rw-data ]
push ebx
and ecx eax
push ecx
push 0xb
push [ ebp - 0x34 ]
call [ SendMessageA@IAT ]
cmp [ ebp - 0x24 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax 0x7fffffff
jmp r-xdata
push ebx
call [ PostQuitMessage@IAT ]
jmp r-xdata
push eax
call [ Sleep@IAT ]
jmp r-xdata
xor eax eax
inc eax
mov ecx [ eax + rw-data ]
mov [ eax + rw-data ] ecx
jmp r-xdata
mov ecx [ eax + rw-data ]
push 0x1
mov [ eax + rw-data ] ecx
call sub_4029ea
mov ecx [ ebp - 0x24 ]
mov [ ecx * 4 + rw-data ] eax
jmp r-xdata
call sub_405af6
jmp r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
push edx
push ecx
call esi
mov eax [ ebp - 0x24 ]
jmp r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push 0x5c
push esi
call sub_405670
mov esi eax
push ebx
push edi
mov al [ esi ]
mov [ esi ] bl
mov [ ebp + 0xb ] al
call [ CreateDirectoryA@IAT ]
test eax eax
jne r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xffffffe3
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ edi ] bl
mov eax [ ebp + 0x8 ]
cmp eax esi
jbe r-xdata
jmp r-xdata
test eax eax
push rw-data
push esi
call sub_405b98
push eax
call sub_405645
push eax
call lstrcatA
push esi
call sub_405b98
jmp r-xdata
call sub_402a07
push [ ebp - 0x20 ]
push eax
call sub_405475
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp eax [ ebp - 0x1c ]
je r-xdata
push eax
jmp r-xdata
push eax
call lstrlenA
cmp edi ebx
jge r-xdata
cmp [ ebp + 0x8 ] ebx
je r-xdata
call [ lstrcmpA@IAT ]
jmp r-xdata
call [ lstrcmpiA@IAT ]
mov [ ebp - 0x4 ] edi
mov [ esi ] bl
cmp [ ebp - 0x1c ] ebx
je r-xdata
cmp esi eax
jae r-xdata
cmp esi eax
jl r-xdata
push edi
jmp r-xdata
jmp [ eax * 4 + jump_table_4029b6 ]
cmp edx ebx
je r-xdata
dec eax
cmp edi ebx
je r-xdata
test [ ebp - 0x10 ] 0x2
je r-xdata
push 0x33
call sub_402a07
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
jmp r-xdata
push eax
call [ DeleteObject@IAT ]
jmp r-xdata
call [ EnableWindow@IAT ]
jmp r-xdata
call [ ShowWindow@IAT ]
jmp r-xdata
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
mov [ esi ] bl
mov [ edi ] bl
jmp r-xdata
mov ebx eax
push [ ebx + 0x14 ]
push edi
call sub_405af6
push [ ebx + 0x18 ]
jmp r-xdata
push eax
push 0x40
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
push 0xffffffe7
jmp r-xdata
push 0xfffffff0
call sub_402a07
push 0x1
mov esi eax
call sub_402a07
cmp [ ebp - 0x14 ] ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
cmp eax ebx
jl r-xdata
push 0x21
call sub_402a07
mov eax [ ebp - 0x34 ]
push esi
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] 0x2
call lstrlenA
push edi
mov [ eax + esi + 0x1 ] bl
call lstrlenA
mov [ eax + edi + 0x1 ] bl
mov eax [ ebp + 0x8 ]
mov cx [ ebp - 0x1c ]
push eax
push ebx
mov [ ebp - 0x5c ] esi
mov [ ebp - 0x58 ] edi
mov [ ebp - 0x4a ] eax
mov [ ebp - 0x54 ] cx
call sub_404ea5
lea eax [ ebp - 0x64 ]
push eax
call [ SHFileOperationA@IAT ]
test eax eax
je r-xdata
push ebx
push 0xfffffff9
call sub_404ea5
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
push 0x200010
push 0xffffffe8
push ebx
call sub_405bba
push eax
cmp edx ebx
je r-xdata
push ebx
call sub_402a07
mov edx [ ebp - 0x20 ]
mov esi eax
jne r-xdata
push 0x22
call sub_402a07
mov ecx [ ebp - 0x14 ]
and ecx 0x2
push ecx
push eax
push [ ebp - 0x20 ]
call sub_402afc
push eax
call sub_402a47
mov edi eax
push 0x2
call sub_402b11
mov esi eax
cmp esi ebx
je r-xdata
cmp esi 0x1
mov edi rw-data
jne r-xdata
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x2c ] 0x400
push ecx
lea ecx [ ebp + 0x8 ]
push esi
push ecx
push ebx
push eax
push edi
call [ RegQueryValueExA@IAT ]
xor ecx ecx
inc ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] ebx
mov ecx 0x3ff
mov [ ebp + 0x8 ] ecx
je r-xdata
push esi
call sub_405b0f
push eax
jmp r-xdata
mov [ esi ] bl
push 0x11
call sub_402a07
push eax
call lstrlenA
push 0x1
call sub_4029ea
mov [ rw-data ] al
xor eax eax
inc eax
jmp r-xdata
mov ecx 0x3ff
cmp eax ecx
jle r-xdata
push [ ebp - 0x18 ]
push ebx
push 0x2
call sub_4029ea
push eax
push esi
call sub_405b0f
push eax
call [ SetFilePointer@IAT ]
cmp [ ebp - 0x20 ] ebx
jl r-xdata
push esi
call sub_405b0f
push eax
call [ FindClose@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x1a4 ]
push eax
push edi
call sub_405b0f
push eax
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push eax
push edi
call sub_405af6
mov [ edi ] bl
push esi
call sub_405821
push 0x2
push 0x40000000
push esi
call sub_405846
cmp eax 0xffffffff
mov [ ebp + 0x8 ] eax
je r-xdata
push 0xffffffed
call sub_402a07
mov esi eax
mov eax [ ebp - 0x1c ]
imul esi esi 0x418
add esi [ rw-data ]
cmp eax ebx
jl r-xdata
cmp [ ebp - 0x18 ] ebx
je r-xdata
push ebx
push ebx
push [ ebp - 0x34 ]
call [ InvalidateRect@IAT ]
push eax
push ecx
call esi
jmp r-xdata
push 0xfffffff5
jmp r-xdata
push 0xffffffe6
call sub_401423
push edi
push rw-data
call sub_405b98
push edi
call [ SetCurrentDirectoryA@IAT ]
test eax eax
jne r-xdata
mov al [ ebp + 0xb ]
mov [ esi ] al
inc esi
cmp al bl
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
push esi
call sub_405e9c
test eax eax
je r-xdata
call sub_401423
jmp r-xdata
push 0x400
push edi
push edi
call [ GetShortPathNameA@IAT ]
jmp r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
cmp [ eax ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
call sub_405e9c
xor ecx ecx
cmp eax ebx
je r-xdata
push esi
call sub_405e03
mov edi rw-data
mov eax [ ebp - 0x18 ]
jmp r-xdata
cmp eax [ ebp - 0x14 ]
jne r-xdata
push esi
jmp r-xdata
cmp edi eax
jle r-xdata
add edi eax
js r-xdata
test eax eax
jne r-xdata
mov [ esi + 0x3ff ] bl
jmp r-xdata
push esi
push [ ebp + 0x8 ]
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
jbe r-xdata
jle r-xdata
add edi ecx
jmp r-xdata
sub edi ecx
jmp r-xdata
imul ecx edi
mov edi ecx
jmp r-xdata
cmp ecx ebx
je r-xdata
or edi ecx
jmp r-xdata
and edi ecx
jmp r-xdata
xor edi ecx
jmp r-xdata
xor eax eax
cmp edi ebx
sete al
jmp r-xdata
cmp edi ebx
jne r-xdata
cmp edi ebx
je r-xdata
cmp ecx ebx
je r-xdata
shl edi cl
jmp r-xdata
sar edi cl
push 0x404
push 0x40
call [ GlobalAlloc@IAT ]
push [ ebp - 0x24 ]
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call sub_405bba
mov eax [ rw-data ]
mov [ esi ] eax
mov [ rw-data ] esi
jmp r-xdata
cmp edi ebx
je r-xdata
mov edi [ edi ]
cmp eax ebx
jne r-xdata
cmp [ ebp - 0x28 ] 0x21
push 0x1
jne r-xdata
push 0x44
call sub_402a07
mov [ ebp + 0x8 ] eax
push [ ebp + 0x8 ]
mov esi [ WaitForSingleObject@IAT ]
jmp r-xdata
push eax
push [ ebp - 0x8 ]
push ebx
push [ ebp - 0x30 ]
call GetFileVersionInfoA
test eax eax
je r-xdata
push 0x8
push ebx
push esi
call [ LoadLibraryExA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
push esi
call [ GetModuleHandleA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
push 0xfffffff0
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x34 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
mov edi eax
cmp edi ebx
jl r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
push 0x11
call sub_402a07
mov edi eax
jmp r-xdata
push 0x33
call sub_402a07
push eax
push esi
call [ RegDeleteValueA@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
jmp r-xdata
cmp esi 0x4
jne r-xdata
push 0x23
call sub_402a07
push edi
call lstrlenA
inc eax
mov [ esi ] bl
mov [ ebp - 0x4 ] ecx
jmp r-xdata
cmp [ ebp + 0x8 ] 0x4
je r-xdata
push ebx
push ebx
push ebx
lea ecx [ ebp + 0x8 ]
push ebx
push ecx
push esi
push eax
push edi
call [ RegEnumValueA@IAT ]
test eax eax
jne r-xdata
push ecx
push esi
push eax
push edi
call [ RegEnumKeyA@IAT ]
jmp r-xdata
call [ CloseHandle@IAT ]
jmp r-xdata
lea ecx [ ebp + 0x8 ]
push ebx
push ecx
push eax
push rw-data
push esi
call sub_405b0f
push eax
call [ WriteFile@IAT ]
jmp r-xdata
cmp [ esi ] bl
je r-xdata
cmp [ esi ] bl
je r-xdata
mov [ ebp - 0x34 ] ecx
jmp r-xdata
lea eax [ ebp - 0x178 ]
push eax
push esi
jmp r-xdata
call sub_405b98
jmp r-xdata
cmp [ ebp - 0x8 ] ebx
push 0xfffffff3
pop esi
jge r-xdata
mov eax [ rw-data ]
mov esi [ GlobalAlloc@IAT ]
push eax
push 0x40
mov [ ebp - 0x30 ] eax
call esi
mov edi eax
cmp edi ebx
je r-xdata
or ecx 0xffffffff
sub ecx eax
mov [ ebp - 0x1c ] ecx
je r-xdata
mov ecx [ esi + eax * 4 ]
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
inc [ ebp - 0x4 ]
jmp r-xdata
inc [ ebp - 0x4 ]
push edi
call [ GetFileAttributesA@IAT ]
test al 0x10
jne r-xdata
push edi
push esi
call sub_405a4c
push 0xffffffe4
jmp r-xdata
push esi
call sub_405e9c
cmp eax ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x1
setne al
inc eax
push eax
push 0x40000000
push esi
call sub_405846
cmp eax 0xffffffff
mov [ ebp - 0x34 ] eax
jne r-xdata
push esi
call sub_405821
mov eax [ ebp + 0x8 ]
add eax 0xfffffffd
or eax 0x80000000
and eax ecx
neg eax
sbb eax eax
inc eax
mov [ ebp + 0x8 ] eax
lea ecx [ ebp - 0x18 ]
add eax 0x14
push ecx
push eax
call [ CompareFileTime@IAT ]
mov ecx eax
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x30 ]
add eax edi
push eax
push esi
call sub_405b98
mov edi [ ebp + 0x8 ]
cmp edi ebx
je r-xdata
mov edi eax
mov eax [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
xor edi edi
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax edi
cdq
idiv ecx
mov edi eax
jmp r-xdata
xor edi edi
inc edi
jmp r-xdata
jmp r-xdata
xor edi edi
jmp r-xdata
cmp ecx ebx
je r-xdata
mov eax edi
cdq
idiv ecx
mov edi edx
jmp r-xdata
lea eax [ edi + 0x4 ]
push eax
push esi
call sub_405b98
mov eax [ edi ]
push edi
mov [ rw-data ] eax
cmp edi ebx
je r-xdata
call sub_402a07
push 0x12
mov edi eax
call sub_402a07
mov cl [ eax ]
neg cl
sbb ecx ecx
and ecx eax
mov al [ edi ]
neg al
sbb eax eax
push ecx
and eax edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x34 ]
call [ FindWindowExA@IAT ]
call sub_4029ea
push 0x2
mov edi eax
call sub_4029ea
mov ecx [ ebp - 0x10 ]
sar ecx 0x2
je r-xdata
push 0x64
push [ ebp + 0x8 ]
call esi
cmp eax 0x102
je r-xdata
push [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
push rw-data
push [ ebp + 0x8 ]
call VerQueryValueA
test eax eax
je r-xdata
push 0xfffffff6
jmp r-xdata
push [ ebp + 0x8 ]
push edi
call GetProcAddress
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp edi ebx
jge r-xdata
mov eax [ ebp + 0x8 ]
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov edi eax
mov eax [ ebp + 0x8 ]
push rw-data
push eax
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov ecx [ ebp - 0x14 ]
mov esi 0xff
mov eax ecx
sar eax 0x8
and eax esi
je r-xdata
push 0xffffffcd
call sub_402a07
push eax
push ebx
push edi
push esi
call [ WritePrivateProfileStringA@IAT ]
jmp r-xdata
push 0x22
call sub_402a07
mov ebx eax
cmp edi ebx
je r-xdata
cmp esi 0x3
jne r-xdata
push 0x3
call sub_4029ea
push esi
mov [ rw-data ] eax
pop eax
push edi
push [ esi ]
xor eax eax
cmp [ ebp - 0x14 ] ebx
push esi
sete al
mov [ ebp - 0x4 ] eax
call sub_405af6
jmp r-xdata
cmp [ ebp + 0x8 ] ecx
je r-xdata
mov [ esi + 0x3ff ] bl
mov esi [ ebp - 0x30 ]
push esi
mov [ ebp + 0xb ] bl
call sub_405b0f
cmp [ ebp - 0x34 ] ebx
mov [ ebp - 0x8 ] eax
jle r-xdata
push eax
push esi
jmp r-xdata
push 0xffffffef
pop esi
push [ ebp - 0x44 ]
call [ DeleteFileA@IAT ]
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
push ebx
call sub_4030c0
push [ ebp - 0x30 ]
push edi
call sub_40308e
push [ ebp - 0x1c ]
push 0x40
call esi
mov esi eax
cmp esi ebx
mov [ ebp - 0x2c ] esi
je r-xdata
push [ ebp - 0x14 ]
lea eax [ esi + 0x18 ]
push eax
call sub_405bba
or [ esi + 0x9 ] 0x1
push 0x1
call sub_4029ea
mov [ ebp - 0x20 ] eax
jmp r-xdata
push ecx
jmp r-xdata
add esi 0x18
push esi
push edi
mov ecx [ rw-data ]
push [ ecx + eax * 4 + 0x94 ]
push edi
call sub_405bba
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x20 ]
mov [ edx + eax * 4 + 0x94 ] ecx
jmp r-xdata
push ebx
call sub_4012e2
push eax
call sub_401299
push ebx
push ebx
call sub_4011ef
jmp r-xdata
add eax 0x2c
push eax
push [ ebp + 0x8 ]
call sub_405b98
jmp r-xdata
push [ ebp - 0x8 ]
push 0xffffffea
call sub_404ea5
inc [ rw-data ]
push ebx
push ebx
push [ ebp - 0x34 ]
push [ ebp - 0x1c ]
call sub_402e6c
dec [ rw-data ]
cmp [ ebp - 0x18 ] 0xffffffff
mov edi eax
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
jge r-xdata
add edi 0x4
mov esi rw-data
push edi
push esi
call sub_405b98
mov eax [ rw-data ]
add eax 0x4
push eax
push edi
call sub_405b98
mov eax [ rw-data ]
push esi
add eax 0x4
push eax
jmp r-xdata
push [ ebp - 0x8 ]
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x34 ]
push eax
push edi
call [ SendMessageA@IAT ]
jmp r-xdata
lea edx [ ebp - 0x8 ]
push edx
push ecx
push ebx
push [ ebp + 0x8 ]
push [ ebp - 0x34 ]
push eax
push edi
call [ SendMessageTimeoutA@IAT ]
neg eax
sbb eax eax
inc eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
push 0xf
call sub_405efc
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call [ GetExitCodeProcess@IAT ]
cmp [ ebp - 0x20 ] ebx
jl r-xdata
call [ GlobalFree@IAT ]
jmp r-xdata
mov eax [ ebp - 0x34 ]
push [ eax + 0x8 ]
push esi
call sub_405af6
mov eax [ ebp - 0x34 ]
push [ eax + 0xc ]
push edi
call sub_405af6
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
push 0xfffffff7
call sub_404ea5
cmp [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push 0xfffffff4
jmp r-xdata
mov eax [ ebp + 0x8 ]
sar ecx 0x10
mov edx [ eax ]
push ecx
push eax
call [ edx + 0x34 ]
mov eax [ ebp - 0x8 ]
cmp [ eax ] bl
je r-xdata
mov ecx [ ebp + 0x8 ]
push eax
push ecx
mov edx [ ecx ]
call [ edx + 0x3c ]
mov ecx [ ebp - 0x14 ]
push eax
push edi
push [ ebp - 0x2c ]
push ebx
push [ ebp - 0x44 ]
push [ ebp + 0x8 ]
call [ RegSetValueExA@IAT ]
test eax eax
jne r-xdata
push 0xc00
push edi
push ebx
push [ ebp - 0x18 ]
call sub_402e6c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
jne r-xdata
mov esi [ ebp - 0x30 ]
lea eax [ ebp - 0x8 ]
push ebx
push eax
push [ ebp - 0x30 ]
push edi
push [ ebp + 0x8 ]
call [ WriteFile@IAT ]
push edi
call [ GlobalFree@IAT ]
push ebx
push ebx
push [ ebp + 0x8 ]
push 0xffffffff
call sub_402e6c
mov [ ebp - 0x8 ] eax
push [ ebp - 0x1c ]
push esi
push ebx
push [ ebp - 0x20 ]
call sub_402e6c
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40117d
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x20 ]
mov [ esi + eax * 4 ] ecx
cmp [ ebp - 0x18 ] ebx
je r-xdata
push edi
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push ebx
push eax
push [ ebp - 0x34 ]
call [ SetFileTime@IAT ]
cmp [ ebp - 0x14 ] 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push 0xffffffe2
call sub_404ea5
cmp [ ebp + 0x8 ] 0x2
jmp r-xdata
push rw-data
push edi
call sub_405b98
push esi
push rw-data
call sub_405b98
push [ ebp - 0x10 ]
push rw-data
call sub_405bba
push edi
push rw-data
call sub_405b98
mov eax [ ebp - 0x24 ]
sar eax 0x3
push eax
push rw-data
call sub_4053c9
sub eax 0x4
je r-xdata
cmp edi 0x400
jge r-xdata
push esi
call lstrlenA
add edi eax
jns r-xdata
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x24 ] ebx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push [ ebp - 0x8 ]
push edi
call sub_405af6
jmp r-xdata
push edi
call sub_4035e3
test eax eax
je r-xdata
push rw-data
push rw-data
push rw-data
push 0x400
push [ ebp - 0x34 ]
call esi
add esp 0x14
jmp r-xdata
push [ ebp - 0x1c ]
call sub_401423
call esi
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp - 0x30 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x2c ]
mov eax [ ebp + 0x8 ]
push [ ebp - 0x44 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
cmp edi ebx
jl r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp + 0x8 ]
and edx esi
mov ecx [ eax ]
push edx
push [ ebp - 0x8 ]
push eax
call [ ecx + 0x44 ]
push [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] ebx
mov [ esi + edi ] bl
cmp esi ebx
jmp r-xdata
cmp [ ebp - 0x2c ] 0x1
jne r-xdata
cmp [ esi ] bl
jne r-xdata
cmp edi 0xfffffffe
jne r-xdata
push [ ebp - 0x34 ]
call [ CloseHandle@IAT ]
cmp edi ebx
jge r-xdata
cmp [ ebp + 0x8 ] 0x3
jl r-xdata
dec eax
je r-xdata
mov [ edi + esi ] bl
jmp r-xdata
mov [ ebp + 0x8 ] ebx
mov edi ebx
mov [ ebp - 0x4 ] 0x1
push edi
call [ FreeLibrary@IAT ]
jmp r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x34 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov esi rw-data
push 0x400
push esi
push 0xffffffff
push [ ebp - 0x2c ]
mov edi 0x80004005
push ebx
push ebx
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
call [ RegCloseKey@IAT ]
jmp r-xdata
cmp [ ebp - 0x18 ] ebx
jne r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
add esi 0x8
push ecx
add eax edi
push esi
push eax
mov [ ebp - 0x38 ] ecx
call sub_405801
add esi [ ebp - 0x38 ]
push [ ebp - 0x2c ]
call [ GlobalFree@IAT ]
push 0xffffffee
push esi
call sub_405bba
push 0xffffffe9
push esi
call sub_405bba
push [ ebp - 0x8 ]
push esi
call lstrcatA
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
push esi
push 0xfffffffa
jmp r-xdata
mov eax [ ebp - 0x34 ]
push 0x1
push esi
push eax
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
movzx eax [ ebp - 0x9 ]
push eax
push edi
call sub_405af6
jmp r-xdata
cmp [ ebp + 0xb ] 0xd
je r-xdata
call sub_4053c9
push 0x200010
push esi
jmp r-xdata
xor eax eax
call sub_404ea5
jmp r-xdata
mov al [ ebp - 0x9 ]
cmp [ ebp + 0xb ] al
je r-xdata
cmp [ ebp + 0xb ] 0xa
je r-xdata
push 0x1
push ebx
push 0xffffffff
push [ ebp - 0x8 ]
call [ SetFilePointer@IAT ]
jmp r-xdata
cmp al 0xd
je r-xdata
mov al [ ebp - 0x9 ]
mov [ esi + edi ] al
inc esi
cmp al bl
mov [ ebp + 0xb ] al
je r-xdata
mov [ esi + edi ] al
inc esi
jmp r-xdata
cmp al 0xa
jne r-xdata
cmp esi [ ebp - 0x34 ]
jl r-xdata
lea eax [ ebp - 0x2c ]
push ebx
push eax
lea eax [ ebp - 0x9 ]
push 0x1
push eax
push [ ebp - 0x8 ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
jmp r-xdata
sub_402a07
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
mov eax esi
jge r-xdata
mov edx [ rw-data ]
mov ecx eax
and ecx 0xf
sar eax 0x4
push [ edx + ecx * 4 ]
shl eax 0xa
add eax rw-data
push eax
call sub_405bba
test esi esi
mov edi eax
jge r-xdata
neg eax
mov eax edi
pop edi
pop esi
retn 0x4
push edi
call sub_405e03
sub_402a47
push ebp
mov ebp esp
sub esp 0x10c
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
mov eax [ rw-data ]
or al 0x8
xor ebx ebx
push eax
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
mov esi [ RegEnumKeyA@IAT ]
mov edi 0x105
jmp r-xdata
lea eax [ ebp - 0x10c ]
push edi
push eax
push ebx
push [ ebp - 0x4 ]
call esi
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
push 0x2
call sub_405ec3
cmp eax ebx
je r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x10c ]
push ebx
push eax
push [ ebp - 0x4 ]
call sub_402a47
test eax eax
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push ebx
push [ rw-data ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
jmp r-xdata
xor eax eax
inc eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegDeleteKeyA@IAT ]
test eax eax
jne r-xdata
jmp r-xdata
sub_402b11
push ebp
mov ebp esp
lea eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
or eax [ ebp + 0x8 ]
push eax
push 0x0
push 0x22
call sub_402a07
push eax
mov eax [ rw-data ]
push [ eax + 0x4 ]
call sub_402afc
push eax
call [ RegOpenKeyExA@IAT ]
neg eax
sbb eax eax
not eax
and eax [ ebp + 0x8 ]
pop ebp
retn 0x4
sub_402b4c
push ebp
mov ebp esp
sub esp 0x40
cmp [ ebp + 0xc ] 0x110
jne r-xdata
cmp [ ebp + 0xc ] 0x113
jne r-xdata
push 0x0
push 0xfa
push 0x1
push [ ebp + 0x8 ]
call [ SetTimer@IAT ]
mov [ ebp + 0xc ] 0x113
xor eax eax
leave
retn 0x10
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
jl r-xdata
push eax
push 0x64
push ecx
call [ MulDiv@IAT ]
push eax
lea eax [ ebp - 0x40 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x8 ]
call [ SetWindowTextA@IAT ]
lea eax [ ebp - 0x40 ]
push eax
push 0x406
push [ ebp + 0x8 ]
call SetDlgItemTextA
mov ecx eax
sub_402bcf
push esi
xor esi esi
cmp [ esp + 0x8 ] esi
je r-xdata
cmp [ rw-data ] esi
je r-xdata
mov eax [ rw-data ]
cmp eax esi
je r-xdata
call [ GetTickCount@IAT ]
cmp eax [ rw-data ]
jbe r-xdata
push esi
call sub_405efc
pop esi
retn
mov [ rw-data ] esi
pop esi
retn
push eax
call [ DestroyWindow@IAT ]
pop esi
retn
push esi
push sub_402b4c
push esi
push 0x6f
push [ rw-data ]
call [ CreateDialogParamA@IAT ]
push 0x5
push eax
mov [ rw-data ] eax
call [ ShowWindow@IAT ]
sub_402c33
push ebp
mov ebp esp
sub esp 0x28
push ebx
push esi
xor ebx ebx
push edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call [ GetTickCount@IAT ]
mov esi rw-data
push 0x400
add eax 0x3e8
push esi
push ebx
mov [ rw-data ] eax
call [ GetModuleFileNameA@IAT ]
push 0x3
push 0x80000000
push esi
call sub_405846
mov edi eax
cmp edi 0xffffffff
mov [ ebp - 0xc ] edi
mov [ rw-data ] edi
jne r-xdata
push esi
mov esi rw-data
push esi
call sub_405b98
push esi
call sub_40568c
push eax
push rw-data
call sub_405b98
push ebx
push edi
call [ GetFileSize@IAT ]
cmp eax ebx
mov [ rw-data ] eax
mov esi eax
jle r-xdata
mov eax rw-data
jmp r-xdata
push 0x1
call sub_402bcf
cmp [ rw-data ] ebx
pop ecx
je r-xdata
mov ebx rw-data
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax rw-data
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push edi
push ebx
call sub_40308e
test eax eax
je r-xdata
mov edi eax
push [ ebp - 0x14 ]
push 0x40
call [ GlobalAlloc@IAT ]
mov esi eax
mov eax [ rw-data ]
add eax 0x1c
push eax
call sub_4030c0
push [ ebp - 0x14 ]
push esi
push ebx
push 0xffffffff
call sub_402e6c
cmp eax [ ebp - 0x14 ]
je r-xdata
push [ rw-data ]
call sub_4030c0
lea eax [ ebp + 0x8 ]
push 0x4
push eax
call sub_40308e
test eax eax
je r-xdata
push 0x1
call sub_402bcf
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
test [ ebp - 0x28 ] 0x1
mov [ rw-data ] esi
mov eax [ esi ]
mov [ rw-data ] eax
je r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
test [ ebp + 0x8 ] 0x2
jne r-xdata
push 0x1c
lea eax [ ebp - 0x28 ]
push ebx
push eax
call sub_405801
mov eax [ ebp - 0x28 ]
test eax 0xfffffff0
jne r-xdata
push 0x8
lea eax [ esi + 0x44 ]
pop ecx
inc [ rw-data ]
cmp esi [ rw-data ]
jge r-xdata
push 0x0
call sub_402bcf
pop ecx
cmp [ ebp - 0x24 ] 0xdeadbeef
jne r-xdata
sub eax 0x8
add [ eax ] esi
dec ecx
jne r-xdata
push 0x1
push ebx
push ebx
push [ ebp - 0xc ]
call [ SetFilePointer@IAT ]
mov [ esi + 0x3c ] eax
add esi 0x4
push 0x40
push esi
push rw-data
call sub_405801
xor eax eax
add [ rw-data ] edi
sub esi edi
test esi esi
jg r-xdata
push edi
push ebx
push [ ebp - 0x8 ]
call sub_405f35
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x18 ] 0x74736e49
jne r-xdata
mov eax [ rw-data ]
mov edi esi
neg eax
sbb eax eax
and eax 0x7e00
add eax 0x200
cmp esi eax
jl r-xdata
xor ebx ebx
cmp [ ebp - 0x1c ] 0x74666f73
jne r-xdata
cmp [ ebp - 0x20 ] 0x6c6c754e
jne r-xdata
or [ ebp + 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
and eax 0x2
or [ rw-data ] eax
mov eax [ ebp - 0x10 ]
cmp eax esi
mov [ rw-data ] ecx
jg r-xdata
test [ ebp + 0x8 ] 0x8
jne r-xdata
inc [ ebp - 0x4 ]
lea esi [ eax - 0x4 ]
cmp edi esi
jbe r-xdata
test [ ebp + 0x8 ] 0x4
jne r-xdata
mov edi esi
jmp r-xdata
sub_402e6c
push ebp
mov ebp esp
sub esp 0x58
push ebx
push esi
mov esi [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] esi
test edi edi
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x8 ] 0x8000
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
mov [ ebp - 0xc ] rw-data
lea eax [ ebp + 0x14 ]
push 0x4
push eax
call sub_40308e
test eax eax
je r-xdata
mov ecx [ rw-data ]
add ecx eax
push ecx
call sub_4030c0
push 0xfffffffd
test [ ebp + 0x17 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
test edi edi
je r-xdata
mov ebx [ GetTickCount@IAT ]
call ebx
and [ rw-data ] 0x0
and [ rw-data ] 0x0
and [ ebp + 0x14 ] 0x7fffffff
mov [ ebp - 0x10 ] eax
mov eax rw-data
mov [ rw-data ] 0x8
mov [ rw-data ] eax
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
mov [ rw-data ] rw-data
mov [ ebp + 0x8 ] eax
jle r-xdata
cmp [ ebp + 0x14 ] 0x0
jg r-xdata
cmp [ ebp + 0x14 ] esi
jge r-xdata
mov eax [ ebp - 0x4 ]
mov esi 0x4000
cmp [ ebp + 0x14 ] esi
jge r-xdata
mov esi [ ebp - 0x8 ]
cmp [ ebp + 0x14 ] esi
jge r-xdata
jmp r-xdata
push esi
push edi
call sub_40308e
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
mov edi rw-data
push esi
push edi
call sub_40308e
test eax eax
je r-xdata
mov esi [ ebp + 0x14 ]
mov edi rw-data
push esi
push edi
call sub_40308e
test eax eax
je r-xdata
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] esi
sub [ ebp + 0x14 ] esi
mov [ rw-data ] edi
mov [ rw-data ] esi
lea eax [ ebp + 0x10 ]
push 0x0
push eax
push esi
push edi
push [ ebp + 0xc ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
push 0xfffffffc
jmp r-xdata
mov esi [ rw-data ]
sub esi edi
call ebx
test [ rw-data ] 0x1
mov edi eax
je r-xdata
push 0xfffffffe
jmp r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
pop eax
jmp r-xdata
xor eax eax
cmp esi eax
je r-xdata
sub eax [ ebp - 0x10 ]
cmp eax 0xc8
ja r-xdata
add [ ebp - 0x4 ] esi
sub [ ebp + 0x14 ] esi
cmp [ ebp + 0x14 ] eax
jg r-xdata
cmp [ ebp + 0x10 ] eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push [ ebp + 0x8 ]
sub eax [ ebp + 0x14 ]
push 0x64
push eax
call [ MulDiv@IAT ]
push eax
lea eax [ ebp - 0x58 ]
push rw-data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x58 ]
push eax
push 0x0
call sub_404ea5
mov [ ebp - 0x10 ] edi
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
add [ ebp - 0x4 ] esi
sub [ ebp - 0x8 ] esi
mov [ ebp - 0xc ] eax
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
push rw-data
mov [ rw-data ] edi
mov [ rw-data ] eax
call sub_405fa3
test eax eax
mov [ ebp - 0x18 ] eax
jl r-xdata
jmp r-xdata
cmp [ ebp - 0x14 ] esi
jne r-xdata
add [ ebp - 0x4 ] esi
jmp r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
sub_40308e
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
lea eax [ ebp + 0xc ]
push 0x0
push eax
push esi
push [ ebp + 0x8 ]
push [ rw-data ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_4030d7
push esi
mov esi rw-data
push esi
call sub_405e03
push esi
call sub_4056b2
test eax eax
jne r-xdata
push esi
call sub_405645
push 0x0
push esi
call [ CreateDirectoryA@IAT ]
push esi
push rw-data
call sub_405875
pop esi
retn
pop esi
retn
_start
sub esp 0x184
push ebx
push ebp
push esi
xor ebx ebx
push edi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x10 ] rw-data
mov [ esp + 0x20 ] ebx
mov [ esp + 0x14 ] 0x20
call [ InitCommonControls@IAT ]
push 0x8001
call [ SetErrorMode@IAT ]
push ebx
call [ OleInitialize@IAT ]
push 0x8
mov [ rw-data ] eax
call sub_405ec3
mov [ rw-data ] eax
push ebx
lea eax [ esp + 0x38 ]
push 0x160
push eax
push ebx
push rw-data
call [ SHGetFileInfoA@IAT ]
push rw-data
push rw-data
call sub_405b98
call [ GetCommandLineA@IAT ]
mov ebp rw-data
push eax
push ebp
call sub_405b98
push ebx
call [ GetModuleHandleA@IAT ]
cmp [ rw-data ] 0x22
mov [ rw-data ] eax
mov eax ebp
jne r-xdata
push [ esp + 0x14 ]
push eax
call sub_405670
push eax
call [ CharNextA@IAT ]
mov [ esp + 0x1c ] eax
jmp r-xdata
mov [ esp + 0x14 ] 0x22
mov eax rw-data
mov cl [ eax ]
cmp cl bl
jne r-xdata
cmp cl 0x20
jne r-xdata
jmp r-xdata
cmp [ eax ] 0x22
mov [ esp + 0x14 ] 0x20
jne r-xdata
inc eax
cmp [ eax ] 0x20
je r-xdata
mov esi [ GetTempPathA@IAT ]
mov edi rw-data
push edi
push 0x400
call esi
call sub_4030d7
test eax eax
jne r-xdata
cmp [ eax ] 0x2f
jne r-xdata
inc eax
mov [ esp + 0x14 ] 0x22
push rw-data
call [ DeleteFileA@IAT ]
push [ esp + 0x20 ]
call sub_402c33
cmp eax ebx
mov [ esp + 0x10 ] eax
jne r-xdata
push 0x3fb
push edi
call [ GetWindowsDirectoryA@IAT ]
push rw-data
push edi
call lstrcatA
call sub_4030d7
test eax eax
jne r-xdata
push [ esp + 0x14 ]
push eax
call sub_405670
cmp [ eax ] 0x22
jne r-xdata
inc eax
cmp [ eax ] 0x53
jne r-xdata
call sub_403569
call [ OleUninitialize@IAT ]
cmp [ esp + 0x10 ] ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push edi
push 0x3fc
call esi
push rw-data
push edi
call lstrcatA
mov esi [ SetEnvironmentVariableA@IAT ]
push edi
push rw-data
call esi
push edi
push rw-data
call esi
call sub_4030d7
test eax eax
je r-xdata
inc eax
movsx ecx [ rw-data ]
movsx edx [ rw-data ]
shl ecx 0x8
or ecx edx
movsx edx [ rw-data ]
shl ecx 0x8
or ecx edx
movsx edx [ rw-data ]
shl ecx 0x8
or ecx edx
cmp [ eax ] ecx
jne r-xdata
mov cl [ eax + 0x1 ]
cmp cl 0x20
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x200010
push [ esp + 0x14 ]
call sub_4053c9
push 0x2
call [ ExitProcess@IAT ]
or [ rw-data ] 0xffffffff
call sub_403643
mov [ esp + 0x18 ] eax
push ebx
push ebp
call sub_405670
mov esi eax
cmp esi ebp
jb r-xdata
movsx ecx [ rw-data ]
movsx edx [ rw-data ]
shl ecx 0x8
or ecx edx
movsx edx [ rw-data ]
shl ecx 0x8
or ecx edx
movsx edx [ rw-data ]
shl ecx 0x8
or ecx edx
cmp [ eax - 0x2 ] ecx
je r-xdata
mov cl [ eax + 0x4 ]
cmp cl 0x20
je r-xdata
mov [ rw-data ] 0x1
cmp cl bl
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push 0x3
call sub_405ec3
push 0x4
mov ebp eax
call sub_405ec3
push 0x5
mov esi eax
call sub_405ec3
cmp ebp ebx
mov edi eax
je r-xdata
cmp esi ebp
mov [ esp + 0x10 ] rw-data
jb r-xdata
movsx eax [ rw-data ]
movsx ecx [ rw-data ]
shl eax 0x8
or eax ecx
movsx ecx [ rw-data ]
shl eax 0x8
or eax ecx
movsx ecx [ rw-data ]
shl eax 0x8
or eax ecx
mov [ eax - 0x2 ] bl
add eax 0x2
push eax
push rw-data
call sub_405b98
or [ esp + 0x20 ] 0x4
cmp cl bl
jne r-xdata
push [ esp + 0x18 ]
call [ ExitProcess@IAT ]
mov [ esp + 0x18 ] eax
push ebx
push 0x2
call [ ExitWindowsEx@IAT ]
test eax eax
jne r-xdata
cmp esi ebx
je r-xdata
push rw-data
push edi
call lstrcatA
mov esi rw-data
push esi
push edi
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov [ esi ] bl
add esi 0x4
push esi
call sub_405733
test eax eax
je r-xdata
dec esi
cmp esi ebp
jae r-xdata
push 0x9
call sub_40140b
cmp edi ebx
je r-xdata
push ebx
push edi
call [ CreateDirectoryA@IAT ]
push edi
call [ SetCurrentDirectoryA@IAT ]
cmp [ rw-data ] bl
jne r-xdata
push esi
push rw-data
call sub_405b98
push esi
push rw-data
call sub_405b98
mov [ esp + 0x10 ] ebx
cmp [ esi ] eax
je r-xdata
lea eax [ esp + 0x1c ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call ebp
test eax eax
je r-xdata
push [ esp + 0x1c ]
push rw-data
call sub_405b98
movsx cx [ rw-data ]
xor eax eax
push 0x1a
mov ah [ rw-data ]
pop ebp
or eax ecx
mov esi rw-data
mov [ rw-data ] ax
push esi
push rw-data
call sub_405b98
lea eax [ esp + 0x28 ]
push eax
push rw-data
push ebx
call esi
push ebx
push ebx
lea eax [ esp + 0x2c ]
push ebx
push eax
push ebx
push [ esp + 0x30 ]
mov [ esp + 0x3c ] 0x1
mov [ esp + 0x48 ] 0x2
call edi
inc [ rw-data ]
dec ebp
jne r-xdata
push 0x1
push esi
push rw-data
call [ CopyFileA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push [ eax + 0x120 ]
push esi
call sub_405bba
push esi
call [ DeleteFileA@IAT ]
cmp [ esp + 0x10 ] ebx
je r-xdata
push ebx
push edi
call sub_405a4c
jmp r-xdata
push ebx
push esi
call sub_405a4c
mov eax [ rw-data ]
push [ eax + 0x124 ]
push esi
call sub_405bba
push esi
call sub_405368
cmp eax ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esp + 0x10 ] ebx
sub_4035ae
push esi
mov esi [ rw-data ]
push 0x0
call sub_403593
test esi esi
je r-xdata
and [ rw-data ] 0x0
pop esi
retn
push edi
mov edi esi
mov esi [ esi ]
push [ edi + 0x8 ]
call [ FreeLibrary@IAT ]
push edi
call [ GlobalFree@IAT ]
test esi esi
jne r-xdata
pop edi
sub_403601
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4035e3
test eax eax
jne r-xdata
push 0xc
push 0x40
call [ GlobalAlloc@IAT ]
test eax eax
je r-xdata
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esp + 0xc ]
mov [ eax + 0x8 ] esi
mov [ eax + 0x4 ] ecx
mov ecx [ rw-data ]
mov [ eax ] ecx
mov [ rw-data ] eax
xor eax eax
jmp r-xdata
pop esi
retn 0x8
sub_403643
sub esp 0x10
push ebx
push ebp
push esi
mov esi [ rw-data ]
push edi
push 0x6
call sub_405ec3
xor ebx ebx
cmp eax ebx
je r-xdata
mov edi rw-data
push ebx
push edi
push ebx
push r--data
push 0x80000001
mov [ rw-data ] 0x30
mov [ rw-data ] 0x78
mov [ rw-data ] bl
call sub_405a7f
cmp [ rw-data ] bl
jne r-xdata
call eax
movzx eax ax
push eax
push rw-data
call sub_405af6
jmp r-xdata
push edi
push rw-data
call lstrcatA
push ebx
push edi
push r--data
push r--data
push 0x80000003
call sub_405a7f
call sub_403908
mov eax [ rw-data ]
mov ebp rw-data
and eax 0x20
push ebp
mov [ rw-data ] eax
mov [ rw-data ] 0x10000
call sub_405733
test eax eax
jne r-xdata
push ebp
call sub_405733
test eax eax
jne r-xdata
mov ecx [ esi + 0x48 ]
cmp ecx ebx
je r-xdata
push 0x8040
push ebx
push ebx
push 0x1
push 0x67
push [ rw-data ]
call [ LoadImageA@IAT ]
mov [ rw-data ] eax
cmp [ esi + 0x50 ] 0xffffffff
mov edi rw-data
je r-xdata
push [ esi + 0x118 ]
push ebp
call sub_405bba
mov edx [ esi + 0x4c ]
mov eax [ rw-data ]
mov edi rw-data
push ebx
add edx eax
push edi
add ecx eax
push edx
push ecx
push [ esi + 0x44 ]
call sub_405a7f
mov al [ rw-data ]
cmp al bl
je r-xdata
push ebx
call sub_40140b
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov esi rw-data
push edi
mov [ rw-data ] sub_401000
mov [ rw-data ] ecx
mov [ rw-data ] eax
mov [ rw-data ] esi
call [ RegisterClassA@IAT ]
test ax ax
je r-xdata
cmp al 0x22
jne r-xdata
call sub_403908
cmp [ rw-data ] ebx
jne r-xdata
push 0x2
pop eax
jmp r-xdata
xor eax eax
lea eax [ esp + 0x10 ]
push ebx
push eax
push ebx
push 0x30
call [ SystemParametersInfoA@IAT ]
push ebx
push [ rw-data ]
mov eax [ esp + 0x24 ]
sub eax [ esp + 0x1c ]
push ebx
push ebx
push eax
mov eax [ esp + 0x2c ]
sub eax [ esp + 0x24 ]
push eax
push [ esp + 0x2c ]
push [ esp + 0x2c ]
push 0x80000000
push ebx
push esi
push 0x80
call [ CreateWindowExA@IAT ]
mov [ rw-data ] eax
push edi
call lstrlenA
lea eax [ eax + edi - 0x4 ]
cmp eax edi
jbe r-xdata
mov edi rw-data
push 0x22
push edi
call sub_405670
mov [ eax ] bl
push ebx
call sub_404f77
test eax eax
je r-xdata
push 0x5
push [ rw-data ]
call [ ShowWindow@IAT ]
mov esi [ LoadLibraryA@IAT ]
push r--data
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
push edi
call sub_405645
push eax
push ebp
call sub_405b98
push rw-data
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push 0x1
call sub_40140b
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ GetClassInfoA@IAT ]
mov ebp r--data
push edi
push ebp
push ebx
call esi
test eax eax
jne r-xdata
push r--data
call esi
push edi
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x2
call sub_40140b
jmp r-xdata
mov eax [ rw-data ]
push ebx
add eax 0x69
push sub_4039d5
movzx eax ax
push ebx
push eax
push [ rw-data ]
call [ DialogBoxParamA@IAT ]
push 0x5
mov esi eax
call sub_40140b
push 0x1
call sub_403593
mov eax esi
jmp r-xdata
push edi
push r--data
push ebx
call esi
push edi
mov [ rw-data ] ebp
call [ RegisterClassA@IAT ]
push edi
call sub_40568c
test al 0x10
jne r-xdata
sub_403908
push ebx
push ebp
push esi
push edi
mov edi rw-data
mov ebx 0xffff
push edi
call sub_405b0f
cmp bx 0xffff
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x64 ]
mov edx ecx
imul ecx esi
neg edx
add ecx [ rw-data ]
xor ebx ebx
jmp r-xdata
mov ebx 0x3ff
jmp r-xdata
mov edx [ ecx + 0x2 ]
mov [ rw-data ] edx
mov edx [ ecx + 0x6 ]
mov [ rw-data ] edx
lea edx [ ecx + 0xa ]
test edx edx
jne r-xdata
test esi esi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
mov [ rw-data ] edx
movzx eax [ ecx ]
push eax
push edi
call sub_405af6
push 0xfffffffe
push rw-data
call sub_405bba
push eax
push [ rw-data ]
call [ SetWindowTextA@IAT ]
mov eax [ rw-data ]
mov esi [ rw-data ]
test eax eax
je r-xdata
add ecx edx
dec esi
mov bp [ ecx ]
xor bp ax
and ebp ebx
test bp bp
je r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi eax
add esi 0x418
dec edi
jne r-xdata
push eax
lea eax [ esi + 0x18 ]
push eax
call sub_405bba
mov eax [ esi ]
test eax eax
je r-xdata
sub_4039d5
sub esp 0x10
mov ecx 0x110
push ebx
mov ebx [ esp + 0x1c ]
push ebp
push esi
cmp ebx ecx
push edi
je r-xdata
mov eax [ esp + 0x2c ]
mov edi [ esp + 0x24 ]
cmp ebx ecx
mov [ rw-data ] eax
jne r-xdata
cmp ebx 0x408
je r-xdata
mov ecx [ rw-data ]
xor ebp ebp
mov esi ecx
shl esi 0x6
add esi [ rw-data ]
cmp ecx ebp
jl r-xdata
mov esi [ GetDlgItem@IAT ]
push 0x1
push edi
mov [ rw-data ] edi
call esi
push 0x2
push edi
mov [ rw-data ] eax
call esi
push 0xffffffff
push 0x1c
push edi
mov [ rw-data ] eax
call sub_403ea8
push [ rw-data ]
push 0xfffffff2
push edi
call [ SetClassLongA@IAT ]
push 0x4
call sub_40140b
mov [ rw-data ] eax
xor eax eax
inc eax
mov [ rw-data ] eax
mov edi [ esp + 0x24 ]
xor ebp ebp
cmp ebx 0x47
jne r-xdata
push 0x40b
call sub_403ef4
cmp eax 0x1
jne r-xdata
cmp ebx 0x5
jne r-xdata
push 0x13
push ebp
push ebp
push ebp
push ebp
push edi
push [ rw-data ]
call [ SetWindowPos@IAT ]
cmp [ rw-data ] ebp
jne r-xdata
push 0x1
call sub_40140b
cmp [ esi ] ebp
je r-xdata
push ebp
push [ esi + 0x10 ]
call sub_401389
test eax eax
je r-xdata
cmp ebx 0x40d
jne r-xdata
mov eax [ esp + 0x2c ]
dec eax
neg eax
sbb eax eax
and eax ebx
push eax
push [ rw-data ]
call [ ShowWindow@IAT ]
push [ rw-data ]
call [ DestroyWindow@IAT ]
push [ rw-data ]
mov [ rw-data ] ebp
push edi
call [ EndDialog@IAT ]
mov eax [ rw-data ]
cmp [ rw-data ] eax
jae r-xdata
xor eax eax
push 0x1
push ebp
push 0x40f
push [ rw-data ]
call [ SendMessageA@IAT ]
xor eax eax
cmp [ rw-data ] ebp
sete al
jmp r-xdata
cmp ebx 0x11
jne r-xdata
push [ rw-data ]
call [ DestroyWindow@IAT ]
mov eax [ esp + 0x2c ]
mov [ rw-data ] eax
jmp r-xdata
cmp [ rw-data ] ebp
je r-xdata
push [ esi + 0x24 ]
mov ebx [ esi + 0x14 ]
push rw-data
call sub_405bba
push [ esi + 0x20 ]
push 0xfffffc19
push edi
call sub_403ea8
push [ esi + 0x1c ]
push 0xfffffc1b
push edi
call sub_403ea8
push [ esi + 0x28 ]
push 0xfffffc1a
push edi
call sub_403ea8
push 0x3
push edi
call [ GetDlgItem@IAT ]
cmp [ rw-data ] ebp
mov [ esp + 0x2c ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x10
cmp ebx 0x111
jne r-xdata
push ebp
push ebp
push edi
call [ SetWindowLongA@IAT ]
xor eax eax
inc eax
jmp r-xdata
cmp [ rw-data ] ebp
jne r-xdata
push 0xa
push edi
call [ ShowWindow@IAT ]
mov [ rw-data ] 0x1
mov ecx ebx
and ecx 0x8
push ecx
push eax
call [ ShowWindow@IAT ]
mov eax ebx
and eax 0x100
push eax
push [ esp + 0x30 ]
call [ EnableWindow@IAT ]
mov eax ebx
and eax 0x2
push eax
call sub_403eca
and ebx 0x4
push ebx
push [ rw-data ]
call [ EnableWindow@IAT ]
cmp ebx ebp
je r-xdata
and bx 0xfefd
or ebx 0x4
push [ esp + 0x30 ]
push [ esp + 0x30 ]
push ebx
call sub_403f0f
jmp r-xdata
movzx esi [ esp + 0x2c ]
push esi
push edi
call [ GetDlgItem@IAT ]
mov edi eax
cmp edi ebp
je r-xdata
push 0x1
push ebp
jmp r-xdata
cmp esi 0x1
jne r-xdata
push ebp
push ebp
push 0xf3
push edi
call [ SendMessageA@IAT ]
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
push [ rw-data ]
push ebp
push 0x2
push 0x401
push edi
call ebx
push [ rw-data ]
jmp r-xdata
push 0xf060
push ebp
push edi
call [ GetSystemMenu@IAT ]
push eax
call [ EnableMenuItem@IAT ]
mov ebx [ SendMessageA@IAT ]
push 0x1
push ebp
push 0xf4
push [ esp + 0x38 ]
call ebx
cmp [ rw-data ] ebp
je r-xdata
cmp esi 0x3
jne r-xdata
push esi
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
shl eax 0x6
add esi eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp [ esi ] ebp
je r-xdata
call sub_403edd
mov ebx rw-data
push rw-data
push ebx
call sub_405b98
push [ esi + 0x18 ]
push ebx
call lstrlenA
add eax ebx
push eax
call sub_405bba
push ebx
push edi
call [ SetWindowTextA@IAT ]
push ebp
push [ esi + 0x8 ]
call sub_401389
test eax eax
jne r-xdata
push 0x2
pop edi
cmp esi edi
jne r-xdata
cmp [ rw-data ] ebp
jle r-xdata
call sub_403e81
jmp r-xdata
cmp [ esi + 0x4 ] 0x5
jne r-xdata
push [ esp + 0x30 ]
push [ esp + 0x30 ]
push 0x111
push [ rw-data ]
call [ SendMessageA@IAT ]
cmp [ rw-data ] ebp
je r-xdata
push 0xffffffff
jmp r-xdata
push [ rw-data ]
call [ DestroyWindow@IAT ]
mov [ rw-data ] esi
cmp [ esi ] ebp
jle r-xdata
cmp [ rw-data ] ebp
jne r-xdata
push 0x3
call sub_40140b
test eax eax
jne r-xdata
push edi
call sub_40140b
mov [ rw-data ] edi
mov eax [ esi + 0x4 ]
push esi
push [ eax * 4 + rw-data ]
mov ax [ esi ]
add ax [ rw-data ]
push edi
movzx eax ax
push eax
push [ rw-data ]
call [ CreateDialogParamA@IAT ]
cmp eax ebp
mov [ rw-data ] eax
je r-xdata
cmp [ rw-data ] ebp
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push [ esi + 0x2c ]
push 0x6
push eax
call sub_403ea8
lea eax [ esp + 0x10 ]
push eax
push 0x3fa
push edi
call [ GetDlgItem@IAT ]
push eax
call [ GetWindowRect@IAT ]
lea eax [ esp + 0x10 ]
push eax
push edi
call [ ScreenToClient@IAT ]
push 0x15
push ebp
push ebp
push [ esp + 0x20 ]
push [ esp + 0x20 ]
push ebp
push [ rw-data ]
call [ SetWindowPos@IAT ]
push ebp
push [ esi + 0xc ]
call sub_401389
cmp [ rw-data ] ebp
jne r-xdata
jmp r-xdata
push 0x78
push 0x8
push [ rw-data ]
call [ ShowWindow@IAT ]
push 0x405
call sub_403ef4
jmp r-xdata
sub_403f0f
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
add eax 0xfffffecd
cmp eax 0x5
ja r-xdata
xor eax eax
push 0xffffffeb
push [ ebp + 0x10 ]
call [ GetWindowLongA@IAT ]
mov esi eax
test esi esi
je r-xdata
test [ esi + 0x14 ] 0x2
mov eax [ esi ]
push edi
mov edi [ GetSysColor@IAT ]
je r-xdata
test [ esi + 0x14 ] 0x1
je r-xdata
push eax
call edi
push [ esi + 0x10 ]
push [ ebp + 0xc ]
call [ SetBkMode@IAT ]
mov eax [ esi + 0x4 ]
test [ esi + 0x14 ] 0x8
mov [ ebp - 0x8 ] eax
je r-xdata
push eax
push [ ebp + 0xc ]
call [ SetTextColor@IAT ]
test [ esi + 0x14 ] 0x4
pop edi
je r-xdata
push eax
call edi
mov [ ebp - 0x8 ] eax
test [ esi + 0x14 ] 0x10
je r-xdata
push eax
push [ ebp + 0xc ]
call [ SetBkColor@IAT ]
mov eax [ esi + 0xc ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
pop esi
leave
retn 0xc
lea eax [ ebp - 0xc ]
push eax
call [ CreateBrushIndirect@IAT ]
mov [ esi + 0xc ] eax
push eax
call [ DeleteObject@IAT ]
sub_403fbc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push [ ebp + 0x10 ]
add ecx eax
push ecx
push [ ebp + 0xc ]
call [ lstrcpynA@IAT ]
push [ ebp + 0xc ]
call [ lstrlenA@IAT ]
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
add [ rw-data ] eax
xor eax eax
pop ebp
retn 0x10
sub_403ff1
push ebp
mov ebp esp
sub esp 0xc
cmp [ ebp + 0xc ] 0x110
push ebx
push esi
push edi
jne r-xdata
cmp [ ebp + 0xc ] 0x111
mov ebx [ GetDlgItem@IAT ]
mov esi [ SendMessageA@IAT ]
jne r-xdata
mov ebx [ ebp + 0x14 ]
mov edi [ ebx + 0x30 ]
test edi edi
jge r-xdata
cmp [ ebp + 0xc ] 0x4e
jne r-xdata
mov eax [ ebp + 0x10 ]
shr eax 0x10
test ax ax
jne r-xdata
mov eax [ rw-data ]
push [ ebx + 0x34 ]
add edi eax
push 0x22
movsx eax [ edi ]
mov [ ebp + 0x14 ] eax
mov eax [ ebx + 0x14 ]
push [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
mov esi eax
inc edi
not esi
shr esi 0x5
and esi 0x1
and eax 0x1
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] sub_403fbc
or esi eax
call sub_403ea8
push [ ebx + 0x38 ]
push 0x23
push [ ebp + 0x8 ]
call sub_403ea8
xor eax eax
push 0x1
test esi esi
sete al
add eax 0x40a
push eax
push [ ebp + 0x8 ]
call [ CheckDlgButton@IAT ]
push esi
call sub_403eca
push 0x3e8
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov ebx eax
push ebx
call sub_403edd
mov esi [ SendMessageA@IAT ]
push 0x0
push 0x1
push 0x45b
push ebx
call esi
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
lea eax [ edi * 4 + 0x4 ]
sub ecx eax
mov edi [ ecx ]
cmp [ ebp + 0xc ] 0x40b
jne r-xdata
push 0x3e8
push [ ebp + 0x8 ]
call ebx
mov edi [ ebp + 0x14 ]
cmp [ edi + 0x8 ] 0x70b
jne r-xdata
mov edi [ ebp + 0x14 ]
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push 0x0
push 0x443
push ebx
call esi
push 0x4010000
push 0x0
push 0x445
push ebx
call esi
push edi
call lstrlenA
xor edi edi
push eax
push edi
push 0x435
push ebx
call esi
lea eax [ ebp - 0xc ]
mov [ rw-data ] edi
push eax
push [ ebp + 0x14 ]
push 0x449
push ebx
call esi
mov [ rw-data ] edi
xor eax eax
jmp r-xdata
neg eax
push eax
call [ GetSysColor@IAT ]
inc [ rw-data ]
cmp [ edi + 0x8 ] 0x700
jne r-xdata
cmp [ edi + 0xc ] 0x201
jne r-xdata
mov ecx [ rw-data ]
lea edi [ ecx + 0x14 ]
test [ edi ] 0x20
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x10
push edi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_403f0f
cmp [ edi + 0xc ] 0x100
jne r-xdata
mov ecx [ edi + 0x1c ]
mov edx [ edi + 0x18 ]
mov [ ebp - 0x8 ] ecx
sub ecx edx
cmp ecx 0x800
mov [ ebp - 0xc ] edx
mov [ ebp - 0x4 ] rw-data
jae r-xdata
push eax
push eax
push 0xf0
push 0x40a
push [ ebp + 0x8 ]
call ebx
push eax
call esi
mov ecx [ edi ]
and eax 0x1
and ecx 0xfffffffe
push eax
or ecx eax
mov [ edi ] ecx
call sub_403eca
call sub_40427b
cmp [ edi + 0x10 ] 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
push ecx
push 0x0
push 0x44b
push eax
call esi
mov edi [ LoadCursorA@IAT ]
push 0x7f02
push 0x0
call edi
mov ebx [ SetCursor@IAT ]
push eax
call ebx
push 0x1
push 0x0
push 0x0
push [ ebp - 0x4 ]
push rw-data
push [ ebp + 0x8 ]
call [ ShellExecuteA@IAT ]
push 0x7f00
push 0x0
call edi
push eax
call ebx
mov edi [ ebp + 0x14 ]
cmp [ edi + 0x10 ] 0x1b
jne r-xdata
push 0x0
push 0x1
push 0x111
push [ rw-data ]
call esi
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x10
push [ rw-data ]
call esi
sub_40429f
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x110
push esi
mov esi [ ebp + 0x14 ]
jne r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_403f0f
pop esi
pop ebp
retn 0x10
push [ esi + 0x30 ]
push 0x1d
push [ ebp + 0x8 ]
call sub_403ea8
mov eax [ esi + 0x3c ]
shl eax 0xa
add eax rw-data
push eax
push 0x3e8
push [ ebp + 0x8 ]
call SetDlgItemTextA
sub_4042e6
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
push ebx
mov [ ebp - 0x20 ] eax
push esi
mov ebx [ eax + 0x3c ]
mov eax [ eax + 0x38 ]
shl ebx 0xa
add ebx rw-data
cmp [ ebp + 0xc ] 0x40b
push edi
mov [ ebp - 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x110
mov esi [ ebp + 0x8 ]
jne r-xdata
push ebx
push 0x3fb
call sub_4053ad
push ebx
call sub_405e03
cmp [ ebp + 0xc ] 0x111
jne r-xdata
push 0x3fb
push esi
call [ GetDlgItem@IAT ]
push ebx
mov edi eax
call sub_4056b2
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x40f
je r-xdata
movzx eax [ ebp + 0x10 ]
cmp eax 0x3fb
jne r-xdata
push ebx
push edi
mov [ rw-data ] esi
call [ SetWindowTextA@IAT ]
mov eax [ ebp + 0x14 ]
push [ eax + 0x34 ]
push 0x1
push esi
call sub_403ea8
mov eax [ ebp + 0x14 ]
push [ eax + 0x30 ]
push 0x14
push esi
call sub_403ea8
push edi
call sub_403edd
push 0x7
call sub_405ec3
test eax eax
je r-xdata
push ebx
call sub_4056de
test eax eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
and [ ebp - 0x8 ] 0x0
push ebx
push 0x3fb
call sub_4053ad
push ebx
call sub_405733
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x405
jne r-xdata
cmp eax 0x3e9
jne r-xdata
mov ecx [ ebp + 0x10 ]
shr ecx 0x10
cmp cx 0x300
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_403f0f
pop edi
pop esi
pop ebx
leave
retn 0x10
push 0x1
push edi
call eax
push ebx
call sub_405645
mov esi rw-data
push ebx
push esi
call sub_405b98
xor edi edi
push edi
call sub_405ec3
cmp eax edi
mov [ ebp - 0xc ] eax
je r-xdata
mov [ ebp - 0x4 ] 0x1
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x44 ]
push [ ebp - 0x8 ]
[ edi ]
mov edi rw-data
push rw-data
mov [ ebp - 0x48 ] esi
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x34 ] sub_404628
mov [ ebp - 0x30 ] ebx
call sub_405bba
mov [ ebp - 0x3c ] eax
lea eax [ ebp - 0x48 ]
push eax
mov [ ebp - 0x38 ] 0x41
call [ SHBrowseForFolderA@IAT ]
test eax eax
je r-xdata
mov [ ebp + 0xc ] 0x40f
push ebx
push esi
call sub_405b98
push esi
call sub_4056de
test eax eax
je r-xdata
xor eax eax
cmp eax esi
je r-xdata
mov [ ebp + 0xc ] 0x40f
push eax
call [ CoTaskMemFree@IAT ]
push ebx
call sub_405645
mov eax [ rw-data ]
mov eax [ eax + 0x11c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetDiskFreeSpaceA@IAT ]
test eax eax
je r-xdata
and [ eax ] 0x0
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call [ ebp - 0xc ]
test eax eax
jne r-xdata
inc [ rw-data ]
push ebx
push 0x3fb
push esi
call SetDlgItemTextA
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebp + 0xc ]
mov eax [ ebp - 0x10 ]
mov esi 0x400
imul eax [ ebp - 0x18 ]
push esi
push [ ebp - 0xc ]
push eax
call [ MulDiv@IAT ]
mov edi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
mov [ ebp - 0xc ] 0xa
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
shrd eax edx cl
shr edx cl
mov [ ebp - 0x24 ] edx
mov edi eax
mov [ ebp - 0x8 ] 0x1
jmp r-xdata
test edi edi
je r-xdata
push eax
push 0x0
call sub_405bba
push edi
mov edi rw-data
push edi
call [ lstrcmpiA@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
cmp [ ecx + 0x10 ] ebx
je r-xdata
cmp edi eax
jae r-xdata
push 0x5
call sub_404743
xor ebx ebx
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi 0x400
push esi
call sub_40568c
mov edi eax
and [ edi ] 0x0
dec edi
cmp edi esi
mov [ edi ] 0x5c
jne r-xdata
and [ edi ] al
push edi
push ebx
call lstrcatA
mov eax [ ebp - 0x4 ]
cmp eax ebx
mov [ rw-data ] eax
jne r-xdata
push eax
push 0xfffffffb
push 0x3ff
call sub_40468e
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0x2
mov eax [ ebp - 0x20 ]
test [ eax + 0x14 ] esi
je r-xdata
push 0x7
call sub_40140b
mov [ ebp - 0x4 ] eax
push rw-data
push esi
push [ ebp + 0x8 ]
call SetDlgItemTextA
push edi
push 0xfffffffc
push esi
call sub_40468e
jmp r-xdata
xor eax eax
cmp [ ebp - 0x4 ] ebx
sete al
push eax
call sub_403eca
cmp [ ebp - 0x4 ] ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
call sub_40427b
sub_404628
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x1
push esi
mov esi [ SendMessageA@IAT ]
jne r-xdata
cmp [ ebp + 0xc ] 0x2
jne r-xdata
push [ ebp + 0x14 ]
push 0x3fb
call sub_4053ad
push [ ebp + 0x14 ]
push 0x1
push 0x466
push [ ebp + 0x8 ]
call esi
xor eax eax
pop esi
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call [ SHGetPathFromIDListA@IAT ]
test eax eax
je r-xdata
xor eax eax
push 0x7
call sub_40140b
test eax eax
jne r-xdata
inc eax
jmp r-xdata
push eax
push 0x0
push 0x465
push [ ebp + 0x8 ]
call esi
sub_40468e
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
push 0x14
cmp esi 0x100000
pop edi
push 0xffffffdc
pop ebx
jae r-xdata
cmp esi 0x400
jae r-xdata
push 0xa
pop edi
push 0xffffffdd
pop ebx
cmp esi 0xffff3333
jae r-xdata
push 0xffffffde
xor edi edi
pop ebx
lea eax [ ebp - 0x20 ]
push 0xffffffdf
push eax
call sub_405bba
push eax
lea eax [ ebp - 0x40 ]
push ebx
push eax
call sub_405bba
push eax
mov eax esi
and eax 0xffffff
mov ecx edi
push 0xa
xor edx edx
lea eax [ eax + eax * 4 ]
add eax eax
shr eax cl
pop ecx
div ecx
mov ecx edi
shr esi cl
push edx
push esi
push rw-data
mov esi rw-data
push [ ebp + 0xc ]
push esi
call sub_405bba
push esi
mov edi eax
call lstrlenA
add edi eax
push edi
call [ wsprintfA@IAT ]
add esp 0x18
push esi
push [ ebp + 0x8 ]
push [ rw-data ]
call SetDlgItemTextA
pop edi
pop esi
pop ebx
leave
retn 0xc
xor eax eax
mov ecx edi
inc eax
push 0x14
shl eax cl
pop ecx
cdq
idiv ecx
add esi eax
sub_404743
mov edx [ rw-data ]
mov ecx [ rw-data ]
xor eax eax
test edx edx
je r-xdata
retn 0x4
push esi
add ecx 0x418
dec edx
jne r-xdata
mov esi [ esp + 0x8 ]
add eax [ ecx + esi * 4 ]
test [ ecx + 0x8 ] 0x1
je r-xdata
pop esi
sub_404770
push ebp
mov ebp esp
sub esp 0x38
push esi
mov esi [ SendMessageA@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push 0x0
push 0x9
push 0x110a
push edi
call esi
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x38 ]
push eax
push 0x0
push 0x110c
push edi
mov [ ebp - 0x38 ] 0x4
call esi
mov eax [ ebp - 0x14 ]
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
movsx eax ax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
push edi
mov [ ebp - 0x10 ] ecx
call [ ScreenToClient@IAT ]
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x1111
push edi
call esi
test [ ebp - 0x8 ] 0x66
jne r-xdata
mov eax [ ebp - 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
leave
retn 0x8
sub_4047f0
push esi
push edi
mov esi rw-data
mov edi rw-data
push esi
push edi
call sub_405b98
push [ esp + 0x10 ]
push esi
call sub_405af6
push [ esp + 0xc ]
call sub_40140b
push edi
push esi
call sub_405b98
pop edi
pop esi
retn 0x8
sub_404822
push ebp
mov ebp esp
sub esp 0x50
push ebx
push esi
mov esi [ GetDlgItem@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push 0x3f9
push edi
call esi
push 0x408
push edi
mov [ ebp - 0x8 ] eax
call esi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov esi [ SendMessageA@IAT ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
xor ebx ebx
add eax 0x94
cmp [ ebp + 0xc ] 0x110
mov [ ebp - 0x14 ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x405
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x1c ] ebx
shl eax 0x2
push eax
push 0x40
mov [ ebp - 0xc ] 0x2
mov [ rw-data ] edi
call [ GlobalAlloc@IAT ]
push 0x6e
mov [ rw-data ] eax
push [ rw-data ]
call [ LoadBitmapA@IAT ]
or [ rw-data ] 0xffffffff
push sub_404e19
push 0xfffffffc
mov edi eax
push [ ebp - 0x4 ]
call [ SetWindowLongA@IAT ]
push ebx
push 0x6
push 0x21
push 0x10
push 0x10
mov [ rw-data ] eax
call [ ImageList_Create@IAT ]
push 0xff00ff
push edi
push eax
mov [ rw-data ] eax
call [ ImageList_AddMasked@IAT ]
push [ rw-data ]
push 0x2
push 0x1109
push [ ebp - 0x4 ]
call esi
push ebx
push ebx
push 0x111c
push [ ebp - 0x4 ]
call esi
cmp eax 0x10
jge r-xdata
mov ecx [ ebp + 0x14 ]
xor ecx ecx
mov [ ebp + 0x10 ] ebx
inc ecx
mov [ ebp + 0xc ] 0x40f
mov [ ebp + 0x14 ] ecx
jmp r-xdata
push edi
call [ DeleteObject@IAT ]
xor edi edi
push ebx
push 0x10
push 0x111b
push [ ebp - 0x4 ]
call esi
cmp [ ebp + 0xc ] eax
mov [ ebp - 0xc ] ecx
je r-xdata
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0xc ] 0x4e
mov eax 0x413
je r-xdata
inc edi
cmp edi 0x21
jl r-xdata
cmp edi 0x20
je r-xdata
test [ rw-data ] 0x2
jne r-xdata
cmp [ ecx + 0x4 ] 0x408
jne r-xdata
cmp [ ebp + 0xc ] 0x111
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + edi * 4 ]
cmp eax ebx
je r-xdata
mov edi [ ebp + 0x14 ]
mov ebx [ ebp - 0xc ]
push [ edi + ebx * 4 + 0x30 ]
push 0x15
push [ ebp + 0x8 ]
call sub_403ea8
push [ edi + ebx * 4 + 0x34 ]
push 0x16
push [ ebp + 0x8 ]
call sub_403ea8
xor edi edi
xor ebx ebx
cmp [ rw-data ] edi
jle r-xdata
push eax
push ebx
call sub_405bba
push eax
push ebx
push 0x143
push [ ebp - 0x8 ]
call esi
push edi
push eax
push 0x151
push [ ebp - 0x8 ]
call esi
mov [ ebp - 0xc ] ebx
cmp [ ebp - 0xc ] ebx
je r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
mov eax 0x200
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x10 ] 0x3f9
jne r-xdata
push 0xfffffff0
push [ ebp - 0x4 ]
call [ GetWindowLongA@IAT ]
and al 0xfb
push eax
push 0xfffffff0
push [ ebp - 0x4 ]
call [ SetWindowLongA@IAT ]
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x8 ]
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0xfffffe6e
jne r-xdata
xor ecx ecx
cmp [ ebp + 0xc ] eax
setne cl
push ecx
push [ ebp - 0x4 ]
call sub_404770
mov edi eax
cmp edi ebx
jl r-xdata
mov ecx [ ebp + 0x14 ]
cmp [ ecx + 0x8 ] 0xfffffffe
jne r-xdata
cmp [ ebp + 0xc ] 0x40b
jne r-xdata
push ebx
push ebx
push eax
push [ ebp - 0x4 ]
call esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_403f0f
pop edi
pop esi
pop ebx
leave
retn 0x10
mov eax [ ebp + 0x10 ]
shr eax 0x10
cmp ax 0x1
jne r-xdata
push [ ebp - 0x4 ]
call sub_403edd
xor ebx ebx
push 0x5
push [ ebp - 0x8 ]
call [ ShowWindow@IAT ]
push [ ebp - 0x8 ]
call sub_403edd
jmp r-xdata
mov edx [ ebp - 0x18 ]
inc edi
add edx 0x418
cmp edi [ rw-data ]
mov [ ebp - 0x18 ] edx
jl r-xdata
mov [ ebp - 0x38 ] eax
mov eax [ edx ]
push 0x20
mov edx eax
pop ecx
mov [ ebp - 0x50 ] ebx
and edx ecx
mov [ ebp - 0x4c ] 0xffff0002
test al 0x2
mov [ ebp - 0x48 ] 0xd
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x24 ] edi
mov [ ebp - 0x40 ] edx
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0xfffffe6a
jne r-xdata
push [ eax + 0x5c ]
push ebx
push 0x419
push [ ebp - 0x4 ]
call esi
imul eax eax 0x418
mov ecx [ ebp - 0x10 ]
lea ecx [ eax + ecx + 0x8 ]
mov eax [ ecx ]
test al 0x10
jne r-xdata
cmp [ ebp + 0xc ] 0x40f
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push ebx
push ebx
push 0x147
push [ ebp - 0x8 ]
call esi
cmp eax 0xffffffff
je r-xdata
lea eax [ edx + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
test al 0x4
je r-xdata
lea eax [ ebp - 0x50 ]
mov [ ebp - 0x48 ] 0x4d
push eax
push 0x0
push 0x1100
mov [ ebp - 0x28 ] 0x1
push [ ebp - 0x4 ]
call esi
mov ecx [ rw-data ]
mov [ ebp - 0x1c ] 0x1
mov [ ecx + edi * 4 ] eax
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
jmp r-xdata
cmp [ eax + 0xc ] 0x2
mov ecx [ ebp - 0x10 ]
mov eax [ eax + 0x5c ]
jne r-xdata
test al 0x40
je r-xdata
cmp [ ebp + 0xc ] 0x420
jne r-xdata
push ebx
push ebx
call sub_4011ef
mov eax [ ebp + 0x10 ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push eax
call [ ImageList_Destroy@IAT ]
push ebx
push eax
push 0x150
push [ ebp - 0x8 ]
call esi
mov edi eax
cmp edi 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
push 0x0
push 0x1100
push [ ebp - 0x4 ]
call esi
mov ecx [ rw-data ]
mov [ ecx + edi * 4 ] eax
push ebx
push 0x3
push 0x110a
push [ ebp - 0x4 ]
call esi
mov ebx eax
jmp r-xdata
imul eax eax 0x418
lea eax [ eax + ecx + 0x8 ]
and [ eax ] 0xffffffdf
imul eax eax 0x418
lea eax [ eax + ecx + 0x8 ]
or [ eax ] 0x20
jmp r-xdata
xor eax 0x1
xor eax 0x80
test al al
jns r-xdata
test [ rw-data ] 0x1
je r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp eax 0xffffffff
je r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
push eax
call [ GlobalFree@IAT ]
push 0x20
pop edi
mov eax [ ebp - 0x14 ]
cmp [ eax + edi * 4 ] ebx
jne r-xdata
and al 0xfe
jmp r-xdata
or al 0x1
jmp r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x20
mov esi [ ShowWindow@IAT ]
sete al
shl eax 0x3
mov edi eax
push edi
push [ ebp - 0x4 ]
call esi
push edi
push 0x3fe
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
push eax
call esi
push ebx
push ebx
call sub_4011ef
mov eax [ rw-data ]
cmp [ rw-data ] ebx
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x38 ] 0xf030
mov [ ebp - 0x10 ] ebx
jle r-xdata
push [ rw-data ]
call sub_4012e2
mov edi eax
push edi
call sub_401299
xor eax eax
xor ecx ecx
cmp edi ebx
jle r-xdata
push eax
push 0x8
call sub_4047f0
dec eax
push edi
call sub_401299
push edi
push ebx
push 0x420
push [ ebp + 0x8 ]
call esi
or [ ebp + 0x10 ] 0xffffffff
mov [ ebp + 0x14 ] ebx
mov [ ebp + 0xc ] 0x40f
push edi
mov [ ecx ] eax
call sub_40117d
mov eax [ rw-data ]
inc edi
not eax
shr eax 0x8
and eax 0x1
mov [ ebp + 0x10 ] edi
mov [ ebp + 0x14 ] eax
mov [ ebp + 0xc ] 0x40f
push 0x1
push ebx
push [ ebp - 0x4 ]
call [ InvalidateRect@IAT ]
mov eax [ rw-data ]
cmp [ eax + 0x10 ] ebx
je r-xdata
lea edi [ eax + 0x8 ]
push ebx
push ecx
push 0x14e
push [ ebp - 0x8 ]
call esi
mov [ ebp + 0x14 ] edi
mov [ ebp + 0xc ] 0x420
mov edx [ ebp - 0x14 ]
cmp [ edx + eax * 4 ] ebx
je r-xdata
push 0x5
call sub_404743
push eax
push 0xfffffffb
push 0x3ff
call sub_40468e
inc [ ebp - 0x10 ]
add edi 0x418
mov eax [ ebp - 0x10 ]
cmp eax [ rw-data ]
jl r-xdata
mov ecx [ edi ]
mov [ ebp - 0x40 ] eax
test ch 0x1
mov [ ebp - 0x44 ] 0x8
je r-xdata
inc eax
cmp eax edi
jl r-xdata
inc ecx
mov eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax [ eax + ecx * 4 ]
cmp eax ebx
je r-xdata
test cl 0x40
je r-xdata
lea eax [ edi + 0x10 ]
mov [ ebp - 0x44 ] 0x9
mov [ ebp - 0x34 ] eax
and [ edi + 0x1 ] 0xfe
mov eax ecx
and eax 0x1
inc eax
test cl 0x10
je r-xdata
push 0x3
pop eax
jmp r-xdata
mov edx ecx
push [ ebp - 0x40 ]
shl eax 0xb
and edx 0x8
or eax edx
mov edx ecx
sar ecx 0x5
add eax eax
and edx 0x20
and ecx 0x1
or eax edx
inc ecx
mov [ ebp - 0x3c ] eax
push ecx
push 0x1102
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x44 ]
push eax
push ebx
push 0x110d
push [ ebp - 0x4 ]
call esi
add eax 0x3
sub_404e19
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
cmp ebx 0x102
push edi
jne r-xdata
cmp ebx 0x200
jne r-xdata
cmp [ ebp + 0x10 ] 0x20
jne r-xdata
mov edi [ ebp + 0x14 ]
push [ ebp + 0x8 ]
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
mov edi [ ebp + 0x14 ]
push 0x413
call sub_403ef4
xor eax eax
jmp r-xdata
push edi
push [ ebp + 0x10 ]
push ebx
push [ ebp + 0x8 ]
push [ rw-data ]
call [ CallWindowProcA@IAT ]
cmp [ rw-data ] edi
je r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_404770
mov edi eax
mov ebx 0x419
jmp r-xdata
pop edi
pop ebx
pop ebp
retn 0x10
push edi
push 0x6
mov [ rw-data ] edi
call sub_4047f0
jmp r-xdata
cmp ebx 0x419
jne r-xdata
sub_404ea5
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
cmp eax ebx
push edi
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
mov eax [ rw-data ]
mov esi rw-data
mov edi eax
mov [ ebp - 0x8 ] eax
and edi 0x1
jne r-xdata
push esi
call lstrlenA
cmp [ ebp + 0xc ] ebx
mov [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
push esi
call sub_405bba
test [ ebp - 0x8 ] 0x4
jne r-xdata
push [ ebp + 0xc ]
call lstrlenA
add eax [ ebp + 0x8 ]
cmp eax 0x800
jae r-xdata
test [ ebp - 0x8 ] 0x2
jne r-xdata
push esi
push [ rw-data ]
call [ SetWindowTextA@IAT ]
push [ ebp + 0xc ]
push esi
call lstrcatA
cmp edi ebx
je r-xdata
push ebx
push ebx
push 0x1004
mov [ ebp - 0x1c ] esi
push [ ebp - 0x4 ]
mov esi [ SendMessageA@IAT ]
mov [ ebp - 0x30 ] 0x1
call esi
sub eax edi
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax 0x1007
sub eax edi
push ebx
push eax
push [ ebp - 0x4 ]
call esi
push ebx
push [ ebp - 0x2c ]
push 0x1013
push [ ebp - 0x4 ]
call esi
mov eax [ ebp + 0x8 ]
mov [ eax + rw-data ] bl
sub_404f77
push esi
mov esi [ rw-data ]
push edi
mov edi [ rw-data ]
push 0x0
call [ OleInitialize@IAT ]
or [ rw-data ] eax
push 0x0
call sub_403ef4
test edi edi
je r-xdata
push 0x404
call sub_403ef4
call [ OleUninitialize@IAT ]
mov eax [ rw-data ]
pop edi
pop esi
retn 0x4
add esi 0xc
add esi 0x418
test edi edi
jne r-xdata
push [ esp + 0xc ]
push [ esi ]
call sub_401389
test eax eax
jne r-xdata
dec edi
test [ esi - 0x4 ] 0x1
je r-xdata
jmp r-xdata
inc [ rw-data ]
sub_404fe3
push ebp
mov ebp esp
sub esp 0x40
push ebx
push esi
push edi
mov edi [ rw-data ]
xor ebx ebx
cmp [ ebp + 0xc ] 0x110
mov [ ebp - 0x4 ] edi
jne r-xdata
cmp [ ebp + 0xc ] 0x405
jne r-xdata
or [ ebp - 0x30 ] 0xffffffff
or [ ebp - 0x24 ] 0xffffffff
xor eax eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x38 ] 0x2
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
stosd [ edi ]
stosd [ edi ]
mov eax [ rw-data ]
mov edi [ GetDlgItem@IAT ]
push 0x403
mov ecx [ eax + 0x5c ]
mov eax [ eax + 0x60 ]
push [ ebp + 0x8 ]
mov [ ebp + 0xc ] ecx
mov [ ebp + 0x10 ] eax
call edi
push 0x3ee
mov [ rw-data ] eax
push [ ebp + 0x8 ]
call edi
push 0x3f8
mov [ rw-data ] eax
push [ ebp + 0x8 ]
call edi
push [ rw-data ]
mov [ rw-data ] eax
mov [ ebp - 0x4 ] eax
call sub_403edd
push 0x4
call sub_404743
mov [ rw-data ] eax
lea eax [ ebp - 0x18 ]
push eax
mov [ rw-data ] ebx
push [ ebp - 0x4 ]
call [ GetClientRect@IAT ]
push 0x15
call [ GetSystemMetrics@IAT ]
mov ecx [ ebp - 0x10 ]
mov esi [ SendMessageA@IAT ]
sub ecx eax
lea eax [ ebp - 0x38 ]
push eax
push ebx
push 0x101b
mov [ ebp - 0x30 ] ecx
push [ ebp - 0x4 ]
call esi
mov eax 0x4000
push eax
push eax
push 0x1036
push [ ebp - 0x4 ]
call esi
cmp [ ebp + 0xc ] ebx
jl r-xdata
cmp [ ebp + 0xc ] 0x111
mov esi [ ShowWindow@IAT ]
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push ebx
push 0x3ec
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
push eax
push sub_404f77
push ebx
push ebx
call [ CreateThread@IAT ]
push eax
call [ CloseHandle@IAT ]
cmp [ ebp + 0x10 ] ebx
jl r-xdata
push [ ebp + 0xc ]
push ebx
push 0x1001
push [ ebp - 0x4 ]
call esi
push [ ebp + 0xc ]
push ebx
push 0x1026
push [ ebp - 0x4 ]
call esi
cmp [ ebp + 0xc ] 0x404
jne r-xdata
cmp [ ebp + 0x10 ] 0x403
jne r-xdata
mov eax [ ebp + 0x14 ]
push [ eax + 0x30 ]
push 0x1b
push [ ebp + 0x8 ]
call sub_403ea8
test [ rw-data ] 0x3
je r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x1024
push [ ebp - 0x4 ]
call esi
cmp [ ebp + 0xc ] 0x7b
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_403f0f
push ebx
push [ rw-data ]
call esi
push 0x8
push edi
call esi
push edi
call sub_403edd
push 0x3ec
push [ ebp + 0x8 ]
call edi
push 0x75300000
mov edi eax
push ebx
push 0x401
push edi
call esi
test [ rw-data ] 0x4
je r-xdata
push ebx
push [ rw-data ]
call [ ShowWindow@IAT ]
test [ rw-data ] 0x2
jne r-xdata
cmp [ ebp + 0x10 ] edi
jne r-xdata
push 0x8
push [ rw-data ]
call esi
cmp [ rw-data ] ebx
jne r-xdata
push 0x78
mov [ rw-data ] 0x2
call sub_403e81
xor eax eax
jmp r-xdata
push [ ebp + 0x10 ]
push ebx
push 0x409
push edi
call esi
push [ ebp + 0xc ]
push ebx
push 0x2001
push edi
call esi
jmp r-xdata
mov [ rw-data ] ebx
push 0x8
push [ ebp - 0x4 ]
call [ ShowWindow@IAT ]
jmp r-xdata
push ebx
push ebx
push 0x1004
push edi
call [ SendMessageA@IAT ]
cmp eax ebx
mov [ ebp + 0xc ] eax
jle r-xdata
push 0x1
call sub_403e81
mov eax [ rw-data ]
push ebx
push [ eax + 0x34 ]
call sub_404ea5
pop edi
pop esi
pop ebx
leave
retn 0x10
push [ rw-data ]
call sub_403edd
call [ CreatePopupMenu@IAT ]
push 0xffffffe1
push ebx
mov esi eax
call sub_405bba
push eax
push 0x1
push ebx
push esi
call [ AppendMenuA@IAT ]
mov eax [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
movsx ecx ax
shr eax 0x10
movsx eax ax
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetWindowRect@IAT ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] rw-data
mov [ ebp - 0x28 ] 0xfff
mov [ ebp + 0x8 ] eax
mov edi 0x102d
push ebx
push [ ebp + 0x8 ]
push ebx
push eax
push ecx
push 0x180
push esi
call [ TrackPopupMenu@IAT ]
xor esi esi
inc esi
cmp eax esi
jne r-xdata
dec [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x8 ]
push edi
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
cmp [ ebp + 0x8 ] ebx
lea esi [ esi + eax + 0x2 ]
jne r-xdata
push ebx
call [ OpenClipboard@IAT ]
call [ EmptyClipboard@IAT ]
push esi
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ ebp + 0x8 ] eax
call [ GlobalLock@IAT ]
mov esi eax
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x2c ] esi
push eax
push ebx
push edi
push [ ebp - 0x4 ]
call [ SendMessageA@IAT ]
add esi eax
mov [ esi ] 0xd
inc esi
mov [ esi ] 0xa
inc esi
inc ebx
cmp ebx [ ebp + 0xc ]
jl r-xdata
push [ ebp + 0x8 ]
call [ GlobalUnlock@IAT ]
push [ ebp + 0x8 ]
push 0x1
call [ SetClipboardData@IAT ]
call [ CloseClipboard@IAT ]
sub_405368
push ebp
mov ebp esp
sub esp 0x10
lea eax [ ebp - 0x10 ]
mov [ rw-data ] 0x44
push eax
xor eax eax
push rw-data
push eax
push eax
push eax
push eax
push eax
push eax
push [ ebp + 0x8 ]
push eax
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
leave
retn 0x4
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
mov eax [ ebp - 0x10 ]
sub_4053c9
mov eax [ esp + 0x8 ]
mov ecx eax
and ecx 0x1fffff
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
shr eax 0x15
jne r-xdata
mov eax [ rw-data ]
push rw-data
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] rw-data
mov [ rw-data ] ecx
call [ MessageBoxIndirectA@IAT ]
xor ecx 0x180000
retn 0x8
sub_40542d
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
call sub_405821
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
test [ esp + 0x10 ] 0x1
push esi
je r-xdata
call [ DeleteFileA@IAT ]
call [ RemoveDirectoryA@IAT ]
jmp r-xdata
test [ esp + 0x10 ] 0x4
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
test eax eax
je r-xdata
push edi
push esi
call [ SetFileAttributesA@IAT ]
pop edi
pop esi
retn 0x8
sub_405475
push ebp
mov ebp esp
sub esp 0x14c
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax ebx
and eax 0x4
push edi
mov [ ebp - 0x4 ] eax
call sub_405733
test bl 0x8
mov [ ebp - 0xc ] eax
je r-xdata
mov [ ebp + 0x8 ] ebx
and [ ebp + 0x8 ] 0x1
je r-xdata
push edi
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
inc eax
add [ rw-data ] eax
jmp r-xdata
mov esi rw-data
push edi
push esi
call sub_405b98
cmp [ ebp + 0x8 ] 0x0
je r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push edi
call sub_40568c
push rw-data
push esi
call lstrcatA
jmp r-xdata
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
test bl 0x2
je r-xdata
push rw-data
push edi
call lstrcatA
cmp [ rw-data ] 0x5c
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x120 ]
push 0x3f
push eax
lea esi [ ebp - 0x120 ]
call sub_405670
cmp [ eax ] 0x0
je r-xdata
push edi
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
push esi
add ebx edi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
je r-xdata
push edi
call sub_405e9c
test eax eax
je r-xdata
inc [ rw-data ]
jmp r-xdata
and [ ebx - 0x1 ] 0x0
cmp [ esi ] 0x2e
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
call sub_405645
mov eax [ ebp - 0x4 ]
or al 0x1
push eax
push edi
call sub_40542d
test eax eax
jne r-xdata
push esi
push ebx
call sub_405b98
test [ ebp - 0x14c ] 0x10
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
lea esi [ ebp - 0x1c ]
push edi
push 0xffffffe5
call sub_404ea5
cmp [ ebp - 0x4 ] esi
je r-xdata
push [ ebp - 0x4 ]
push edi
call sub_40542d
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
and eax 0x3
cmp al 0x3
jne r-xdata
lea eax [ ebp - 0x14c ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
cmp al 0x2e
jne r-xdata
push edi
push 0xfffffff1
call sub_404ea5
push esi
push edi
call sub_405a4c
jmp r-xdata
push edi
push 0xfffffff2
call sub_404ea5
cmp [ ebp - 0x4 ] eax
je r-xdata
push [ ebp + 0xc ]
push edi
call sub_405475
jmp r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
cmp [ esi + 0x2 ] 0x0
je r-xdata
inc [ rw-data ]
jmp r-xdata
push edi
push 0xfffffff1
call sub_404ea5
push 0x0
push edi
call sub_405a4c
jmp r-xdata
sub_405645
push esi
mov esi [ esp + 0x8 ]
push esi
call lstrlenA
add eax esi
push eax
push esi
call [ CharPrevA@IAT ]
cmp [ eax ] 0x5c
je r-xdata
mov eax esi
pop esi
retn 0x4
push rw-data
push esi
call lstrcatA
sub_40568c
push esi
mov esi [ esp + 0x8 ]
push esi
call lstrlenA
add eax esi
and [ eax ] 0x0
inc eax
pop esi
retn 0x4
push eax
push esi
call [ CharPrevA@IAT ]
cmp eax esi
ja r-xdata
cmp [ eax ] 0x5c
je r-xdata
sub_4056b2
mov edx [ esp + 0x4 ]
mov cl [ edx ]
mov al cl
or al 0x20
cmp cl 0x5c
jne r-xdata
cmp al 0x61
jl r-xdata
cmp [ edx + 0x1 ] cl
je r-xdata
xor eax eax
cmp al 0x7a
jg r-xdata
xor eax eax
inc eax
jmp r-xdata
cmp [ edx + 0x1 ] 0x3a
jne r-xdata
retn 0x4
sub_4056de
push ebx
push esi
mov esi [ CharNextA@IAT ]
push edi
mov edi [ esp + 0x10 ]
push edi
call esi
mov ebx eax
push ebx
call esi
mov cl [ edi ]
test cl cl
je r-xdata
cmp cl 0x5c
jne r-xdata
cmp [ ebx ] 0x3a
jne r-xdata
xor eax eax
cmp [ edi + 0x1 ] cl
jne r-xdata
cmp [ ebx + 0x1 ] 0x5c
jne r-xdata
push 0x2
pop esi
push eax
call esi
jmp r-xdata
inc eax
test esi esi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push 0x5c
push eax
dec esi
call sub_405670
cmp [ eax ] 0x0
je r-xdata
jmp r-xdata
sub_405733
push esi
push edi
push [ esp + 0xc ]
mov esi rw-data
push esi
call sub_405b98
push esi
call sub_4056de
mov edi eax
test edi edi
jne r-xdata
push edi
call sub_405e03
test [ rw-data ] 0x80
je r-xdata
xor eax eax
jmp r-xdata
sub edi esi
jmp r-xdata
mov al [ edi ]
test al al
je r-xdata
pop edi
pop esi
retn 0x4
push esi
call lstrlenA
cmp eax edi
push esi
jg r-xdata
cmp al 0x5c
je r-xdata
call sub_405e9c
test eax eax
je r-xdata
call sub_405645
push esi
call [ GetFileAttributesA@IAT ]
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov eax ecx
push esi
call sub_40568c
test [ eax ] 0x10
je r-xdata
sub_4057ab
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ lstrlenA@IAT ]
push [ ebp + 0xc ]
call edi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call edi
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov bl [ eax + esi ]
and [ eax + esi ] 0x0
push esi
call [ lstrcmpiA@IAT ]
test eax eax
mov eax [ ebp - 0x4 ]
mov [ eax + esi ] bl
je r-xdata
xor eax eax
mov eax esi
jmp r-xdata
push esi
call [ CharNextA@IAT ]
mov esi eax
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_405801
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
test esi esi
jle r-xdata
pop esi
retn 0xc
mov eax [ esp + 0xc ]
sub eax ecx
mov dl [ eax + ecx ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
sub_405821
push esi
push [ esp + 0x8 ]
call [ GetFileAttributesA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
retn 0x4
and al 0xfe
push eax
push [ esp + 0xc ]
call [ SetFileAttributesA@IAT ]
sub_405846
push [ esp + 0x4 ]
call [ GetFileAttributesA@IAT ]
mov ecx eax
push 0x0
inc ecx
neg ecx
sbb ecx ecx
and ecx eax
push ecx
push [ esp + 0x14 ]
push 0x0
push 0x1
push [ esp + 0x1c ]
push [ esp + 0x1c ]
call [ CreateFileA@IAT ]
retn 0xc
sub_405875
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x64
pop edi
mov eax esi
jmp r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ rw-data ]
dec edi
mov [ ebp + 0x8 ] eax
call [ GetTickCount@IAT ]
push 0x1a
xor edx edx
pop ecx
div ecx
push esi
lea eax [ ebp + 0x8 ]
push 0x0
push eax
push [ ebp + 0xc ]
add [ ebp + 0xa ] dl
call [ GetTempFileNameA@IAT ]
test eax eax
jne r-xdata
and [ esi ] 0x0
sub_4058be
push ecx
push ebx
push ebp
push esi
push edi
mov edi rw-data
push rw-data
push edi
call [ lstrcpyA@IAT ]
mov esi [ esp + 0x1c ]
mov ebp [ GetShortPathNameA@IAT ]
test esi esi
mov ebx 0x400
je r-xdata
mov esi rw-data
push ebx
push esi
push [ esp + 0x20 ]
call ebp
test eax eax
je r-xdata
push 0x1
push 0x0
push esi
call sub_405846
push eax
call [ CloseHandle@IAT ]
push ebx
push edi
push esi
call ebp
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
cmp eax ebx
jg r-xdata
cmp eax ebx
jg r-xdata
push esi
push edi
push rw-data
push rw-data
call [ wsprintfA@IAT ]
mov ebx eax
mov eax [ rw-data ]
add esp 0x10
push [ eax + 0x128 ]
push esi
call sub_405bba
push 0x4
push 0xc0000000
push esi
call sub_405846
mov ebp eax
cmp ebp 0xffffffff
mov [ esp + 0x1c ] ebp
je r-xdata
push 0x0
push ebp
call [ GetFileSize@IAT ]
mov edi eax
lea eax [ edi + ebx + 0xa ]
push eax
push 0x40
call [ GlobalAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
push ebp
call [ CloseHandle@IAT ]
lea eax [ esp + 0x10 ]
push 0x0
push eax
push edi
push esi
push ebp
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp edi [ esp + 0x10 ]
jne r-xdata
push rw-data
push esi
call sub_4057ab
test eax eax
jne r-xdata
add eax 0xa
push rw-data
push eax
call sub_4057ab
mov ebp eax
test ebp ebp
je r-xdata
lea eax [ esi + edi ]
push rw-data
push eax
call [ lstrcpyA@IAT ]
add edi 0xa
jmp r-xdata
mov ebp [ esp + 0x1c ]
lea ecx [ esi + edi ]
lea eax [ ecx + ebx ]
jmp r-xdata
mov eax edi
cmp ecx ebp
ja r-xdata
mov dl [ ecx ]
mov [ eax ] dl
dec eax
dec ecx
sub ebp esi
inc ebp
mov eax ebp
mov ebp [ esp + 0x1c ]
jmp r-xdata
push ebx
add eax esi
push rw-data
push eax
call sub_405801
xor eax eax
push eax
push eax
push eax
push ebp
call [ SetFilePointer@IAT ]
lea eax [ esp + 0x10 ]
push 0x0
add edi ebx
push eax
push edi
push esi
push ebp
call [ WriteFile@IAT ]
push esi
call [ GlobalFree@IAT ]
sub_405a4c
push 0x1
call sub_405ec3
test eax eax
je r-xdata
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call sub_4058be
pop ecx
pop ecx
push 0x5
push [ esp + 0xc ]
push [ esp + 0xc ]
call eax
test eax eax
jne r-xdata
inc [ rw-data ]
retn 0x8
sub_405a7f
push ebp
mov ebp esp
push ebx
lea eax [ ebp + 0x18 ]
push esi
push eax
mov eax [ ebp + 0x18 ]
xor ebx ebx
neg eax
sbb eax eax
mov esi [ ebp + 0x14 ]
and eax 0x100
or eax 0x20019
mov [ esi ] bl
push eax
push ebx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x14
lea eax [ ebp + 0xc ]
mov [ ebp + 0xc ] 0x400
push eax
lea eax [ ebp + 0x14 ]
push esi
push eax
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0x18 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
mov [ esi ] bl
cmp [ ebp + 0x14 ] 0x1
je r-xdata
push [ ebp + 0x18 ]
mov [ esi + 0x3ff ] bl
call [ RegCloseKey@IAT ]
cmp [ ebp + 0x14 ] 0x2
je r-xdata
sub_405b0f
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp [ ecx ] 0x2d
mov [ ebp - 0x4 ] 0x1
mov al 0xa
mov bl 0x39
jne r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc ecx
or [ ebp - 0x4 ] 0xffffffff
movsx edx [ ecx ]
inc ecx
cmp edx 0x30
jl r-xdata
inc ecx
mov dl [ ecx ]
cmp dl 0x30
jl r-xdata
cmp al 0x10
jne r-xdata
movsx esi bl
cmp edx esi
jg r-xdata
and dl 0xdf
cmp dl 0x58
jne r-xdata
cmp dl 0x37
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax edi
pop edi
pop esi
pop ebx
leave
retn 0x4
mov esi edx
and esi 0xffffffdf
cmp esi 0x41
jl r-xdata
sub edx 0x30
jmp r-xdata
mov al 0x10
inc ecx
mov al 0x8
mov bl 0x37
cmp esi 0x46
jg r-xdata
movsx esi al
imul esi edi
add esi edx
mov edi esi
jmp r-xdata
and edx 0x7
add edx 0x9
sub_405bba
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0xc ]
test eax eax
jge r-xdata
mov ecx [ rw-data ]
push ebx
add ecx eax
mov eax rw-data
cmp [ ebp + 0x8 ] eax
push esi
push edi
mov edi eax
jb r-xdata
mov ecx [ rw-data ]
lea eax [ eax * 4 + 0x4 ]
sub ecx eax
mov eax [ ecx ]
mov dl [ ecx ]
test dl dl
jne r-xdata
mov edx [ ebp + 0x8 ]
sub edx eax
cmp edx 0x800
jae r-xdata
mov esi edi
sub esi eax
cmp esi 0x400
jge r-xdata
and [ edi ] 0x0
cmp [ ebp + 0x8 ] 0x0
pop edi
pop esi
pop ebx
je r-xdata
mov edi [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
jmp r-xdata
inc ecx
cmp dl 0x4
mov [ ebp + 0xc ] ecx
jae r-xdata
leave
retn 0x8
push eax
push [ ebp + 0x8 ]
call sub_405b98
jne r-xdata
movsx eax [ ecx + 0x1 ]
movsx ecx [ ecx ]
mov esi eax
mov ebx ecx
and esi 0x7f
and ebx 0x7f
shl esi 0x7
or esi ebx
mov ebx ecx
add [ ebp + 0xc ] 0x2
or bh 0x80
mov [ ebp - 0x18 ] ebx
mov ebx ecx
mov ecx eax
mov [ ebp - 0x14 ] ebx
or ch 0x80
cmp dl 0x2
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jne r-xdata
mov [ edi ] dl
inc edi
mov dl [ ecx ]
mov [ edi ] dl
inc edi
inc ecx
jmp r-xdata
cmp dl 0x3
jne r-xdata
push 0x2
pop esi
call [ GetVersion@IAT ]
test eax eax
jns r-xdata
cmp dl 0x1
jne r-xdata
cmp esi 0x1d
jne r-xdata
mov [ ebp - 0x4 ] 0x1
cmp ax 0x5a04
je r-xdata
push edi
call lstrlenA
mov ecx [ ebp + 0xc ]
add edi eax
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
sub eax esi
push eax
push edi
call sub_405bba
mov eax esi
shl eax 0xa
add eax rw-data
push eax
push edi
call sub_405b98
push [ rw-data ]
push edi
call sub_405af6
jmp r-xdata
test bl bl
jns r-xdata
push 0x4
pop esi
cmp [ ebp - 0xc ] 0x23
je r-xdata
jmp r-xdata
add esi 0xffffffeb
cmp esi 0x7
jae r-xdata
cmp ebx 0x25
jne r-xdata
mov eax ebx
and ebx 0x3f
add ebx [ rw-data ]
and eax 0x40
push eax
push edi
push ebx
push r--data
push 0x80000002
call sub_405a7f
cmp [ edi ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x2e
je r-xdata
push edi
call sub_405e03
jmp r-xdata
cmp ebx 0x24
jne r-xdata
push 0x400
push edi
call [ GetSystemDirectoryA@IAT ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1a
jne r-xdata
push [ ebp - 0xc ]
push edi
call sub_405bba
jmp r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
test esi esi
jne r-xdata
push 0x400
push edi
call [ GetWindowsDirectoryA@IAT ]
xor esi esi
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
push r--data
push edi
call lstrcatA
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
xor ecx ecx
dec esi
cmp eax ecx
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + esi * 4 - 0x18 ]
push [ rw-data ]
call [ SHGetSpecialFolderLocation@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] ecx
je r-xdata
and [ edi ] 0x0
push edi
push [ ebp - 0x8 ]
call [ SHGetPathFromIDListA@IAT ]
push [ ebp - 0x8 ]
mov ebx eax
call [ CoTaskMemFree@IAT ]
test ebx ebx
jne r-xdata
push edi
push ecx
push ecx
push [ ebp + esi * 4 - 0x18 ]
push [ rw-data ]
call eax
test eax eax
je r-xdata
sub_405e03
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
cmp [ esi ] 0x5c
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ esi + 0x1 ] 0x5c
jne r-xdata
mov al [ esi ]
mov ebx esi
test al al
mov edi esi
je r-xdata
push esi
call sub_4056b2
test eax eax
je r-xdata
cmp [ esi + 0x2 ] 0x3f
jne r-xdata
and [ edi ] 0x0
push ebp
mov ebp [ CharNextA@IAT ]
inc esi
inc esi
cmp [ esi + 0x3 ] 0x5c
jne r-xdata
and [ edi ] 0x0
cmp ebx edi
jb r-xdata
cmp al 0x5c
jne r-xdata
push esi
call ebp
mov esi eax
mov al [ esi ]
test al al
jne r-xdata
push eax
push rw-data
call sub_405670
cmp [ eax ] 0x0
jne r-xdata
add esi 0x4
push edi
push ebx
call [ CharPrevA@IAT ]
mov edi eax
mov al [ edi ]
cmp al 0x20
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
cmp al 0x1f
jbe r-xdata
pop ebp
push esi
call ebp
sub eax esi
push eax
push esi
push edi
call sub_405801
push edi
call ebp
mov edi eax
sub_405e9c
push esi
mov esi rw-data
push esi
push [ esp + 0xc ]
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
push eax
call [ FindClose@IAT ]
mov eax esi
jmp r-xdata
pop esi
retn 0x4
sub_405ec3
mov eax [ esp + 0x4 ]
push esi
mov esi eax
push edi
shl esi 0x3
mov edi [ esi + rw-data ]
push edi
call [ GetModuleHandleA@IAT ]
test eax eax
jne r-xdata
push [ esi + rw-data ]
push eax
call [ GetProcAddress@IAT ]
push edi
call [ LoadLibraryA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
retn 0x4
sub_405efc
push ebp
mov ebp esp
sub esp 0x1c
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ PeekMessageA@IAT ]
jmp r-xdata
push 0x1
push esi
push esi
lea eax [ ebp - 0x1c ]
push 0x0
push eax
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
pop edi
pop esi
leave
retn 0x4
sub_405f35
cmp [ rw-data ] 0x0
push esi
jne r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
test edx edx
not eax
jbe r-xdata
xor ecx ecx
not eax
pop esi
retn 0xc
mov ecx [ esp + 0xc ]
push edi
mov edx eax
and dl 0x1
neg dl
sbb edx edx
and edx 0xedb88320
shr eax 0x1
xor eax edx
dec esi
jne r-xdata
mov [ ecx * 4 + rw-data ] eax
inc ecx
cmp ecx 0x100
jl r-xdata
movzx edi [ ecx ]
mov esi eax
and esi 0xff
xor esi edi
shr eax 0x8
mov esi [ esi * 4 + rw-data ]
xor eax esi
inc ecx
dec edx
jne r-xdata
pop edi
push 0x8
mov eax ecx
pop esi
sub_405fa3
push ebp
mov ebp esp
sub esp 0x44
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov ecx [ eax ]
lea esi [ eax + 0x10 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x38 ] ecx
mov ecx [ esi + 0x9ba8 ]
mov ebx [ esi + 0x518 ]
mov [ ebp - 0x34 ] eax
mov eax [ esi + 0x51c ]
mov [ ebp - 0x40 ] eax
mov eax [ esi + 0x9ba4 ]
cmp ecx eax
mov [ ebp - 0x30 ] ecx
jae r-xdata
mov eax [ esi + 0x9ba0 ]
sub eax ecx
sub eax ecx
dec eax
jmp r-xdata
mov eax [ esi ]
cmp eax 0xf
jbe r-xdata
mov [ ebp - 0x2c ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_4069f2 ]
jmp r-xdata
cmp ebx 0x3
jb r-xdata
or edi 0xffffffff
mov [ esi ] 0x11
cmp ebx 0x20
jb r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
cmp ebx 0xe
jb r-xdata
mov eax [ esi + 0x4 ]
shr eax 0xa
add eax 0x4
cmp [ esi + 0x8 ] eax
jae r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov edx eax
and eax 0x1f
shr edx 0x5
and edx 0x1f
lea eax [ edx + eax + 0x102 ]
cmp ecx eax
jb r-xdata
movzx eax [ esi + 0x10 ]
mov [ esi + 0xc ] eax
mov eax [ esi + 0x14 ]
mov [ esi + 0x8 ] eax
mov [ esi ] 0x1
mov eax [ esi + 0xc ]
jmp r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
mov eax [ esi + 0xc ]
jmp r-xdata
mov eax [ esi + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov edx [ esi + 0xc ]
mov ecx eax
sub ecx esi
sub ecx 0x1ba0
cmp ecx edx
jae r-xdata
mov eax [ ebp - 0x2c ]
mov edi [ ebp - 0x30 ]
test eax eax
jne r-xdata
cmp ebx 0x7
jbe r-xdata
mov eax [ ebp - 0x30 ]
push [ ebp + 0x8 ]
mov [ esi + 0x9ba8 ] eax
call sub_406a32
mov ecx [ esi + 0x9ba8 ]
mov edx [ esi + 0x9ba4 ]
cmp ecx edx
mov [ ebp - 0x30 ] ecx
jae r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
sub ebx 0x3
shr [ ebp - 0x40 ] 0x3
and eax 0x7
mov ecx eax
and cl 0x1
neg cl
sbb ecx ecx
and ecx 0x7
shr eax 0x1
add ecx 0x8
sub eax 0x0
mov [ esi + 0x514 ] ecx
je r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
xor ebx ebx
and eax 0xffff
mov [ ebp - 0x40 ] ebx
cmp eax ebx
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ ebp - 0x40 ]
xor edi edi
mov [ esi + 0x51c ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x518 ] ebx
mov [ eax + 0x4 ] edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov eax [ ebp - 0x40 ]
and eax 0x3fff
mov ecx eax
mov [ esi + 0x4 ] eax
and ecx 0x1f
cmp cl 0x1d
ja r-xdata
cmp [ esi + 0x8 ] 0x13
jb r-xdata
jmp r-xdata
mov eax [ esi + 0x50c ]
jmp r-xdata
mov eax [ esi + 0x4 ]
and [ esi + 0x510 ] 0x0
and [ ebp - 0xc ] 0x0
mov edi eax
shr eax 0x5
and edi 0x1f
mov ecx 0x101
and eax 0x1f
add edi ecx
inc eax
lea edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea eax [ esi + 0x520 ]
push edx
push eax
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0x9
push eax
lea eax [ ebp - 0x18 ]
push eax
push r--data
push r--data
push ecx
lea eax [ esi + 0xc ]
push edi
push eax
mov [ ebp - 0x10 ] 0x6
call sub_406a9a
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp ebx eax
jb r-xdata
cmp ebx eax
jb r-xdata
cmp ebx eax
jb r-xdata
cmp ebx eax
jb r-xdata
mov ecx eax
sub ecx edx
mov ecx [ esi + 0x9ba0 ]
sub ecx edx
sub ecx esi
lea ecx [ ecx + eax - 0x1ba0 ]
jmp r-xdata
mov cl [ esi + 0x8 ]
mov [ edi ] cl
inc edi
dec eax
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] eax
jmp r-xdata
mov ecx [ esi + 0x9ba0 ]
cmp edi ecx
jne r-xdata
sub ebx 0x8
inc [ ebp - 0x34 ]
dec [ ebp - 0x38 ]
mov eax [ esi + 0x9ba0 ]
sub eax ecx
mov eax edx
sub eax ecx
dec eax
jmp r-xdata
mov eax [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
mov ecx ebx
movzx eax [ eax ]
shl eax cl
or [ ebp - 0x40 ] eax
inc [ ebp - 0x38 ]
add ebx 0x8
mov ecx ebx
mov [ esi ] 0x9
and ecx 0x7
shr [ ebp - 0x40 ] cl
sub ebx ecx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
mov ecx ebx
movzx eax [ eax ]
shl eax cl
or [ ebp - 0x40 ] eax
inc [ ebp - 0x38 ]
add ebx 0x8
mov eax [ esi + 0x514 ]
push 0xa
pop eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x38 ]
push eax
mov [ eax ] ecx
mov ecx [ ebp - 0x30 ]
mov [ esi + 0x9ba8 ] ecx
call sub_406a32
mov eax edi
pop edi
pop esi
pop ebx
leave
retn 0x4
cmp eax [ ebp - 0x34 ]
jb r-xdata
mov ecx [ esi + 0x9ba0 ]
mov edx [ ebp - 0x30 ]
cmp edx ecx
jne r-xdata
mov eax [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
mov ecx ebx
movzx eax [ eax ]
shl eax cl
or [ ebp - 0x40 ] eax
inc [ ebp - 0x38 ]
add ebx 0x8
and eax 0x3e0
cmp eax 0x3a0
ja r-xdata
mov eax [ esi + 0x8 ]
movsx eax [ eax + r--data ]
and [ esi + eax * 4 + 0xc ] 0x0
inc [ esi + 0x8 ]
lea ecx [ ebp - 0x8 ]
lea edi [ esi + 0x50c ]
push ecx
lea ecx [ esi + 0x520 ]
push ecx
lea ecx [ esi + 0x510 ]
xor eax eax
push edi
push ecx
push eax
mov [ ebp - 0x8 ] eax
push eax
push 0x13
lea eax [ esi + 0xc ]
push 0x13
push eax
mov [ edi ] 0x7
call sub_406a9a
test eax eax
jne r-xdata
cmp ebx 0x3
jb r-xdata
cmp ebx eax
jb r-xdata
test eax eax
jne r-xdata
or eax 0xffffffff
cmp [ ebp - 0x34 ] 0x0
je r-xdata
movzx eax [ eax * 2 + rw-data ]
and eax [ ebp - 0x40 ]
mov ecx [ esi + 0x8 ]
lea eax [ ecx + eax * 4 ]
movzx ecx [ eax + 0x1 ]
shr [ ebp - 0x40 ] cl
sub ebx ecx
movzx ecx [ eax ]
test ecx ecx
jne r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
movzx ecx [ eax * 2 + rw-data ]
and ecx [ ebp - 0x40 ]
add [ esi + 0x4 ] ecx
mov ecx eax
shr [ ebp - 0x40 ] cl
sub ebx eax
movzx eax [ esi + 0x11 ]
mov [ esi + 0xc ] eax
mov eax [ esi + 0x18 ]
mov [ esi + 0x8 ] eax
mov [ esi ] 0x3
cmp [ ebp - 0x34 ] 0x0
je r-xdata
movzx eax [ eax * 2 + rw-data ]
and eax [ ebp - 0x40 ]
mov ecx [ esi + 0x8 ]
lea eax [ ecx + eax * 4 ]
movzx ecx [ eax + 0x1 ]
shr [ ebp - 0x40 ] cl
sub ebx ecx
movzx ecx [ eax ]
test cl 0x10
je r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
movzx ecx [ eax * 2 + rw-data ]
and ecx [ ebp - 0x40 ]
add [ esi + 0xc ] ecx
mov ecx eax
shr [ ebp - 0x40 ] cl
sub ebx eax
mov [ esi ] 0x5
and [ esi ] 0x0
jmp r-xdata
mov edi [ ebp - 0x2c ]
cmp [ esi + 0x4 ] 0x0
mov [ ebp - 0x20 ] ecx
je r-xdata
push [ ebp + 0x8 ]
mov [ esi + 0x9ba8 ] edi
call sub_406a32
mov edi [ esi + 0x9ba8 ]
mov ecx [ esi + 0x9ba4 ]
cmp edi ecx
mov [ ebp - 0x30 ] edi
jae r-xdata
mov eax [ esi + 0x9ba4 ]
lea edx [ esi + 0x1ba0 ]
cmp eax edx
je r-xdata
xor edi edi
jmp r-xdata
mov eax [ esi + 0x514 ]
cmp eax 0x8
mov [ esi ] eax
jne r-xdata
cmp ecx edx
mov [ ebp - 0x2c ] eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
dec eax
je r-xdata
mov [ esi ] eax
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx eax
mov edi ecx
jb r-xdata
mov eax [ ebp - 0x34 ]
push [ ebp + 0x8 ]
mov [ esi + 0x9ba8 ] edx
call sub_406a32
mov edx [ esi + 0x9ba8 ]
mov ecx [ esi + 0x9ba4 ]
cmp edx ecx
mov [ ebp - 0x30 ] edx
jae r-xdata
mov eax [ esi + 0x9ba4 ]
lea edi [ esi + 0x1ba0 ]
cmp eax edi
je r-xdata
shr [ ebp - 0x40 ] 0xe
sub ebx 0xe
and [ esi + 0x8 ] 0x0
mov [ esi ] 0xc
mov [ esi ] 0x11
jmp r-xdata
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ebp - 0x40 ]
and eax 0x7
sub ebx 0x3
movsx ecx [ ecx + r--data ]
shr [ ebp - 0x40 ] 0x3
mov [ esi + ecx * 4 + 0xc ] eax
mov ecx [ esi + 0x4 ]
inc [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
shr ecx 0xa
add ecx 0x4
cmp eax ecx
jb r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
movzx eax [ eax * 2 + rw-data ]
and eax [ ebp - 0x40 ]
mov ecx [ esi + 0x510 ]
lea eax [ ecx + eax * 4 ]
movzx edx [ eax + 0x1 ]
movzx eax [ eax + 0x2 ]
cmp eax 0x10
mov [ ebp - 0x14 ] eax
jae r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ esi + 0x520 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push r--data
push r--data
push 0x0
push [ ebp - 0x14 ]
lea eax [ esi + edi * 4 + 0xc ]
push eax
call sub_406a9a
test eax eax
jne r-xdata
mov ecx [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
movzx edx [ ecx ]
mov ecx ebx
shl edx cl
or [ ebp - 0x40 ] edx
inc [ ebp - 0x38 ]
add ebx 0x8
test cl 0x10
je r-xdata
movzx eax [ eax + 0x2 ]
mov [ esi + 0x8 ] eax
mov [ esi ] 0x6
jmp r-xdata
mov ecx [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
movzx edx [ ecx ]
mov ecx ebx
shl edx cl
or [ ebp - 0x40 ] edx
inc [ ebp - 0x38 ]
add ebx 0x8
mov ecx [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
movzx edx [ ecx ]
mov ecx ebx
shl edx cl
or [ ebp - 0x40 ] edx
inc [ ebp - 0x38 ]
add ebx 0x8
test cl 0x40
jne r-xdata
and ecx 0xf
mov [ esi + 0x8 ] ecx
movzx eax [ eax + 0x2 ]
mov [ esi + 0xc ] eax
mov [ esi ] 0x4
jmp r-xdata
mov ecx [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
movzx edx [ ecx ]
mov ecx ebx
shl edx cl
or [ ebp - 0x40 ] edx
inc [ ebp - 0x38 ]
add ebx 0x8
mov ecx [ ebp - 0x20 ]
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
dec edi
cmp ecx [ esi + 0x9ba0 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x2c ] edi
jne r-xdata
mov edi [ esi + 0x9ba0 ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x9ba0 ]
sub eax edi
mov eax ecx
sub eax edi
dec eax
jmp r-xdata
mov edi edx
cmp edi eax
jae r-xdata
mov eax [ ebp - 0x40 ]
mov ecx [ ebp + 0x8 ]
mov [ esi + 0x51c ] eax
mov eax [ ebp - 0x34 ]
mov [ esi + 0x518 ] ebx
mov [ ecx + 0x4 ] eax
xor edi edi
inc edi
jmp r-xdata
mov al [ rw-data ]
mov [ esi + 0x10 ] al
mov al [ rw-data ]
mov [ esi + 0x11 ] al
mov eax [ rw-data ]
mov [ esi + 0x14 ] eax
mov eax [ rw-data ]
mov [ esi + 0x18 ] eax
and [ ebp - 0x8 ] 0x0
mov eax rw-data
mov [ esi ] 0xb
jmp r-xdata
dec eax
jne r-xdata
push edi
push [ ebp - 0x38 ]
push [ ebp - 0x30 ]
call sub_405801
add [ ebp - 0x38 ] edi
sub [ ebp - 0x34 ] edi
add [ ebp - 0x30 ] edi
sub [ ebp - 0x2c ] edi
sub [ esi + 0x4 ] edi
jne r-xdata
mov edi eax
mov eax [ esi + 0x9ba0 ]
sub eax edx
mov eax ecx
sub eax edx
dec eax
jmp r-xdata
mov edx edi
cmp edx eax
mov [ ebp - 0x30 ] edx
jae r-xdata
and [ esi + 0x8 ] eax
mov [ esi ] 0xd
jmp r-xdata
mov eax [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
mov ecx ebx
movzx eax [ eax ]
shl eax cl
or [ ebp - 0x40 ] eax
inc [ ebp - 0x38 ]
add ebx 0x8
jmp r-xdata
mov ecx [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
movzx edx [ ecx ]
mov ecx ebx
shl edx cl
or [ ebp - 0x40 ] edx
inc [ ebp - 0x38 ]
add ebx 0x8
cmp eax 0x12
jne r-xdata
mov ecx edx
sub ebx edx
shr [ ebp - 0x40 ] cl
mov ecx [ esi + 0x8 ]
mov [ esi + ecx * 4 + 0xc ] eax
inc [ esi + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x10 ]
test eax eax
jne r-xdata
test cl 0x40
je r-xdata
and ecx 0xf
mov [ esi + 0x8 ] ecx
movzx eax [ eax + 0x2 ]
mov [ esi + 0x4 ] eax
mov [ esi ] 0x2
jmp r-xdata
mov [ esi + 0xc ] ecx
movzx ecx [ eax + 0x2 ]
lea eax [ eax + ecx * 4 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec [ esi + 0x4 ]
jne r-xdata
lea ecx [ esi + 0x1ba0 ]
mov [ ebp - 0x20 ] ecx
push [ ebp + 0x8 ]
mov [ esi + 0x9ba8 ] eax
call sub_406a32
mov eax [ esi + 0x9ba8 ]
mov ecx [ esi + 0x9ba4 ]
cmp eax ecx
mov [ ebp - 0x30 ] eax
jae r-xdata
mov ecx [ esi + 0x9ba4 ]
lea edx [ esi + 0x1ba0 ]
cmp ecx edx
je r-xdata
test eax eax
je r-xdata
lea edx [ esi + 0x1ba0 ]
cmp ecx edx
je r-xdata
mov edx [ esi + 0x9ba0 ]
cmp edi edx
mov [ ebp - 0x8 ] edx
jne r-xdata
sub ecx edi
mov eax ecx
sub eax edi
dec eax
jmp r-xdata
movsx ecx cl
mov [ eax ] ecx
add eax 0x4
cmp eax rw-data
jl r-xdata
cmp eax rw-data
jge r-xdata
test eax eax
je r-xdata
lea edx [ esi + 0x1ba0 ]
cmp edx ecx
je r-xdata
mov edi [ esi + 0x9ba0 ]
mov [ ebp - 0x2c ] eax
cmp edx edi
jne r-xdata
sub ecx edx
mov eax ecx
sub eax edx
dec eax
jmp r-xdata
add eax 0xfffffff2
mov [ ebp - 0x8 ] 0x3
jmp r-xdata
push 0x7
mov [ ebp - 0x8 ] 0xb
pop eax
jmp r-xdata
mov cl [ ebp - 0x4 ]
and [ esi ] 0x0
mov [ esi + 0x11 ] al
mov eax [ ebp - 0x18 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x1c ]
mov [ esi + 0x10 ] cl
mov [ esi + 0x18 ] eax
cmp edi 0x101
jg r-xdata
test cl 0x20
je r-xdata
test edi edi
jne r-xdata
jmp r-xdata
mov edi [ esi + 0x9ba0 ]
sub edi eax
mov edi ecx
sub edi eax
dec edi
jmp r-xdata
mov eax edx
cmp eax ecx
jae r-xdata
mov edi edx
cmp edi ecx
mov [ ebp - 0x30 ] edi
jae r-xdata
test eax eax
jne r-xdata
cmp eax rw-data
mov cl 0x8
jle r-xdata
lea eax [ ebp - 0x8 ]
mov edi rw-data
push eax
push rw-data
push rw-data
push rw-data
push r--data
push r--data
push 0x101
push 0x120
push edi
call sub_406a9a
push 0x1e
pop ecx
push 0x5
pop eax
[ edi ]
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push rw-data
push rw-data
push r--data
push r--data
push 0x0
push 0x1e
push rw-data
call sub_406a9a
inc [ rw-data ]
cmp eax rw-data
jge r-xdata
inc cl
jmp r-xdata
mov [ ebp - 0x30 ] edx
jae r-xdata
test eax eax
mov [ ebp - 0x2c ] eax
jne r-xdata
lea ecx [ eax + edx ]
cmp ebx ecx
jb r-xdata
mov [ esi ] 0x7
jmp r-xdata
test edi edi
je r-xdata
lea edx [ esi + 0x1ba0 ]
cmp ecx edx
je r-xdata
mov edx [ esi + 0x9ba0 ]
cmp eax edx
mov [ ebp - 0x8 ] edx
jne r-xdata
sub edi eax
sub ecx eax
dec ecx
mov edi ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
sub eax edi
sub ecx edi
dec ecx
mov eax ecx
jmp r-xdata
mov cl 0x7
sub edi edx
mov eax edi
sub ecx edx
dec ecx
mov eax ecx
jmp r-xdata
cmp [ ebp - 0x34 ] 0x0
je r-xdata
mov ecx edx
sub ebx edx
shr [ ebp - 0x40 ] cl
movzx ecx [ eax * 2 + rw-data ]
and ecx [ ebp - 0x40 ]
mov edx [ ebp - 0x8 ]
sub ebx eax
add edx ecx
mov ecx eax
mov eax [ esi + 0x4 ]
shr [ ebp - 0x40 ] cl
mov ecx [ esi + 0x8 ]
mov edi eax
shr edi 0x5
and edi 0x1f
and eax 0x1f
lea eax [ edi + eax + 0x102 ]
lea edi [ edx + ecx ]
cmp edi eax
ja r-xdata
mov eax edx
cmp eax ecx
mov [ ebp - 0x30 ] eax
jae r-xdata
test edi edi
jne r-xdata
mov [ ebp - 0x2c ] eax
mov ecx [ ebp - 0x38 ]
dec [ ebp - 0x34 ]
movzx edi [ ecx ]
mov ecx ebx
shl edi cl
or [ ebp - 0x40 ] edi
inc [ ebp - 0x38 ]
add ebx 0x8
cmp [ ebp - 0x14 ] 0x10
jne r-xdata
mov edi [ ebp - 0x8 ]
sub edi eax
sub ecx eax
dec ecx
mov edi ecx
jmp r-xdata
xor edi edi
cmp ecx 0x1
jb r-xdata
mov [ eax ] edi
inc ecx
add eax 0x4
dec edx
jne r-xdata
mov [ esi + 0x8 ] ecx
mov edi [ esi + ecx * 4 + 0x8 ]
jmp r-xdata
lea eax [ esi + ecx * 4 + 0xc ]
sub_406a32
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esi + 0x9bb4 ]
mov eax [ esi + 0xc ]
sub ebx edi
cmp ebx eax
jb r-xdata
mov ebx [ esi + 0x9bb0 ]
push ebx
push edi
push [ esi + 0x8 ]
sub eax ebx
mov [ esi + 0xc ] eax
call sub_405801
add [ esi + 0x8 ] ebx
mov eax [ esi + 0x9bb0 ]
add edi ebx
cmp edi eax
jne r-xdata
mov ebx eax
mov [ esi + 0x9bb4 ] edi
pop edi
pop esi
pop ebx
retn 0x4
cmp [ esi + 0x9bb8 ] eax
lea edi [ esi + 0x1bb0 ]
jne r-xdata
mov ebx [ esi + 0x9bb8 ]
cmp edi ebx
jbe r-xdata
mov [ esi + 0x9bb8 ] edi
jmp r-xdata
sub_406a9a
push ebp
mov ebp esp
sub esp 0xec
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x10
xor eax eax
pop ecx
lea edi [ ebp - 0x70 ]
[ edi ]
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ecx ]
add ecx 0x4
lea eax [ ebp + eax * 4 - 0x70 ]
inc [ eax ]
dec edx
jne r-xdata
cmp [ ebp - 0x70 ] esi
jne r-xdata
mov esi [ ebp + 0x20 ]
xor ebx ebx
inc ebx
push 0xf
mov edi [ esi ]
mov ecx ebx
mov [ ebp + 0x20 ] edi
pop edx
mov eax [ ebp + 0x1c ]
and [ eax ] 0x0
mov eax [ ebp + 0x20 ]
and [ eax ] 0x0
xor eax eax
jmp r-xdata
cmp edi ecx
mov [ ebp - 0x4 ] ecx
jae r-xdata
inc ecx
cmp ecx edx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x24
cmp [ ebp + edx * 4 - 0x70 ] eax
jne r-xdata
mov [ ebp + 0x20 ] ecx
xor eax eax
cmp [ ebp + ecx * 4 - 0x70 ] eax
jne r-xdata
cmp [ ebp + 0x20 ] edx
mov [ ebp - 0x18 ] edx
jbe r-xdata
dec edx
jne r-xdata
mov edi [ ebp + 0x20 ]
mov [ esi ] edi
shl ebx cl
jmp r-xdata
mov [ ebp + 0x20 ] edx
cmp ecx edx
jb r-xdata
sub ebx [ ebp + ecx * 4 - 0x70 ]
js r-xdata
mov esi edx
shl esi 0x2
lea ecx [ ebp + esi - 0x70 ]
mov edi [ ecx ]
sub ebx edi
mov [ ebp - 0x30 ] ebx
js r-xdata
or eax 0xffffffff
inc ecx
add ebx ebx
add edi ebx
mov [ ebp - 0xac ] eax
mov [ ecx ] edi
xor ecx ecx
dec edx
je r-xdata
mov ebx [ ebp + 0x8 ]
xor edi edi
xor edi edi
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
lea ecx [ ebp + ecx * 4 - 0xb0 ]
mov edx [ ecx ]
mov [ edx * 4 + rw-data ] edi
inc edx
mov [ ecx ] edx
add ecx [ ebp + edi - 0x6c ]
add edi 0x4
dec edx
mov [ ebp + edi - 0xac ] ecx
jne r-xdata
mov ecx [ ebx ]
add ebx 0x4
cmp ecx eax
je r-xdata
mov ecx [ ebp + esi - 0xb0 ]
mov ebx [ ebp + 0x20 ]
or [ ebp - 0xc ] 0xffffffff
and [ ebp - 0x24 ] 0x0
mov [ ebp + 0xc ] ecx
mov ecx [ ebp - 0x4 ]
neg ebx
cmp ecx [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xb0 ] eax
mov [ ebp - 0x20 ] rw-data
mov [ ebp - 0xec ] eax
jg r-xdata
xor eax eax
cmp [ ebp - 0x30 ] eax
je r-xdata
lea edx [ ecx - 0x1 ]
lea ecx [ ebp + ecx * 4 - 0x70 ]
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x1c ] ecx
cmp [ ebp - 0x18 ] 0x1
je r-xdata
inc [ ebp - 0x4 ]
add [ ebp - 0x1c ] 0x4
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x28 ]
cmp ecx [ ebp - 0x18 ]
jle r-xdata
jmp r-xdata
mov ecx [ ebp - 0x1c ]
mov esi [ ecx ]
test esi esi
je r-xdata
mov ecx [ ebp + 0x20 ]
dec esi
add ecx ebx
mov [ ebp - 0x2c ] esi
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x14 ] ecx
jle r-xdata
mov cl [ ebp - 0x4 ]
mov esi [ ebp - 0x20 ]
sub cl bl
mov [ ebp + 0x9 ] cl
mov ecx [ ebp + 0xc ]
lea ecx [ ecx * 4 + rw-data ]
cmp esi ecx
jb r-xdata
inc esi
mov [ ebp - 0x10 ] esi
mov ecx [ esi ]
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov [ ebp + 0x8 ] 0xc0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
sub ecx [ ebp - 0x14 ]
inc edx
shl edx cl
cmp edx [ ebp - 0x10 ]
jbe r-xdata
mov esi [ ebp + 0x20 ]
sub ecx [ ebp + 0x10 ]
mov edx [ ebp + 0x18 ]
add ecx ecx
mov dl [ ecx + edx ]
add dl 0x50
add [ ebp - 0x20 ] 0x4
mov [ ebp + 0x8 ] dl
mov edx [ ebp + 0x14 ]
mov cx [ ecx + edx ]
cmp ecx 0x100
setb cl
dec cl
and ecx 0x60
mov [ ebp + 0x8 ] cl
mov cx [ esi ]
add esi 0x4
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
xor edi edi
sub ecx ebx
inc edi
mov esi edi
shl esi cl
mov ecx ebx
shr edx cl
jmp r-xdata
mov edx [ ebp + 0x28 ]
xor eax eax
inc eax
mov edx [ edx ]
shl eax cl
mov [ ebp - 0x24 ] eax
lea edi [ edx + eax ]
cmp edi 0x5a0
ja r-xdata
mov edi [ ebp - 0x1c ]
or eax 0xffffffff
sub eax [ ebp - 0x2c ]
add edx eax
cmp ecx esi
jae r-xdata
cmp edx [ ebp - 0x24 ]
jb r-xdata
mov [ ebp + 0xa ] cx
mov eax [ ebp + 0x24 ]
lea eax [ eax + edx * 4 ]
mov edx [ ebp - 0xc ]
lea esi [ ebp + edx * 4 - 0xec ]
mov edx [ ebp + 0x28 ]
mov [ edx ] edi
mov edx [ ebp - 0xc ]
test edx edx
mov [ esi ] eax
je r-xdata
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov [ eax + edx * 4 ] ecx
add edx esi
mov ecx [ ebp - 0x28 ]
mov esi [ ebp - 0x8 ]
mov edx edi
shl edx cl
jmp r-xdata
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
mov edi [ ebp - 0x8 ]
mov esi [ esi - 0x4 ]
mov [ ebp + edx * 4 - 0xb0 ] edi
mov dl [ ebp + 0x20 ]
mov [ ebp + 0x9 ] dl
mov [ ebp + 0x8 ] cl
mov edx edi
mov ecx ebx
shr edx cl
mov ecx eax
sub ecx esi
sar ecx 0x2
sub ecx edx
mov [ ebp + 0xa ] cx
mov ecx [ ebp + 0x8 ]
mov [ esi + edx * 4 ] ecx
jmp r-xdata
inc ecx
cmp ecx esi
jb r-xdata
test esi edx
jne r-xdata
mov esi [ ebp - 0x18 ]
inc [ ebp - 0xc ]
sub esi [ ebp - 0x14 ]
cmp esi [ ebp + 0x20 ]
jbe r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx ecx
add ecx [ ebp + 0x20 ]
cmp [ ebp - 0x4 ] ecx
mov [ ebp - 0x14 ] ecx
jg r-xdata
add edi 0x4
add edx edx
mov eax [ edi ]
cmp edx eax
jbe r-xdata
xor esi edx
shr edx 0x1
mov ecx edi
xor esi edx
mov [ ebp - 0x10 ] ecx
mov ecx ebx
mov edx edi
mov [ ebp - 0x8 ] esi
shl edx cl
dec edx
and edx esi
mov ecx edx
mov edx [ ebp - 0xc ]
cmp ecx [ ebp + edx * 4 - 0xb0 ]
je r-xdata
sub edx eax
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
sub ebx [ ebp + 0x20 ]
mov esi edi
dec edx
mov ecx ebx
shl esi cl
dec esi
and esi [ ebp - 0x8 ]
cmp esi [ ebp + edx * 4 - 0xb0 ]
jne r-xdata
mov esi [ ebp - 0x2c ]
mov [ ebp - 0xc ] edx
sub_40136d
mov eax [ esp + 0x4 ]
test eax eax
jge r-xdata
retn 0x4
inc eax
mov ecx rw-data
shl eax 0xa
sub ecx eax
push ecx
call sub_405b0f
sub_4029ea
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push [ ecx + eax * 4 ]
push 0x0
call sub_405bba
push eax
call sub_405b0f
retn 0x4
sub_402afc
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
retn 0x4
mov eax [ rw-data ]
add eax 0x80000001
sub_4030c0
push 0x0
push 0x0
push [ esp + 0xc ]
push [ rw-data ]
call [ SetFilePointer@IAT ]
retn 0x4
sub_403569
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
call sub_4035ae
push 0x7
push rw-data
call sub_405475
retn
push eax
call [ CloseHandle@IAT ]
or [ rw-data ] 0xffffffff
sub_403593
push esi
mov esi [ rw-data ]
jmp r-xdata
test esi esi
jne r-xdata
push [ esp + 0x8 ]
call [ esi + 0x4 ]
mov esi [ esi ]
pop ecx
pop esi
retn 0x4
sub_4035e3
mov eax [ rw-data ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx [ esp + 0x4 ]
je r-xdata
inc eax
xor eax eax
jmp r-xdata
mov eax [ eax ]
retn 0x4
sub_40427b
cmp [ rw-data ] 0x0
mov eax [ rw-data ]
jne r-xdata
push 0x1
push 0x1
push 0xf4
push eax
call [ SendMessageA@IAT ]
retn
mov eax [ rw-data ]
SetDlgItemTextA
jmp [ SetDlgItemTextA@IAT ]
sub_4053ad
push 0x400
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ rw-data ]
call [ GetDlgItemTextA@IAT ]
retn 0x8
sub_405670
mov eax [ esp + 0x4 ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl [ esp + 0x8 ]
je r-xdata
retn 0x8
push eax
call [ CharNextA@IAT ]
sub_405af6
push [ esp + 0x8 ]
push r--data
push [ esp + 0xc ]
call [ wsprintfA@IAT ]
add esp 0xc
retn 0x8
lstrlenA
jmp [ lstrlenA@IAT ]
lstrcatA
jmp [ lstrcatA@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
