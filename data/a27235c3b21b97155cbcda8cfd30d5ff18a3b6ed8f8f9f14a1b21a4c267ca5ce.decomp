sub_10001000
sub esp 0x70
push ebx
push ebp
mov ebp [ esp + 0x7c ]
mov [ esp + 0xc ] 0x1
mov eax [ ebp ]
mov ebx [ ebp + 0x4 ]
add eax 0x80
mov [ esp + 0x8 ] ebx
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
push esi
mov esi [ eax ]
push edi
add esi ebx
push 0x14
push esi
mov [ esp + 0x20 ] esi
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
pop ebp
xor eax eax
pop ebx
add esp 0x70
retn
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x70
retn
mov edx [ esi + 0xc ]
test edx edx
je r-xdata
mov ecx 0x18
xor eax eax
lea edi [ esp + 0x1d ]
mov [ esp + 0x1c ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
add edx ebx
push 0x63
lea eax [ esp + 0x20 ]
push edx
push eax
call strncpy
add esp 0xc
lea ecx [ esp + 0x1c ]
push ecx
call [ LoadLibraryA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov [ esp + 0x14 ] 0x0
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
lea eax [ edx * 4 + 0x4 ]
push eax
push ecx
call realloc
add esp 0x8
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
mov [ eax + edx * 4 ] ebx
mov edx [ ebp + 0xc ]
inc edx
mov [ ebp + 0xc ] edx
mov eax [ esi ]
test eax eax
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ esp + 0x10 ]
lea ebp [ edx + eax ]
mov edi ebp
mov ecx [ esp + 0x10 ]
mov edi [ esi + 0x10 ]
lea ebp [ eax + ecx ]
mov eax ecx
add edi eax
jmp r-xdata
add esi 0x14
push 0x14
push esi
mov [ esp + 0x20 ] esi
call [ IsBadReadPtr@IAT ]
test eax eax
jne r-xdata
test eax 0x80000000
je r-xdata
mov eax [ ebp ]
test eax eax
je r-xdata
mov ebp [ esp + 0x84 ]
mov ebx [ esp + 0x10 ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
lea esi [ eax + ecx + 0x2 ]
and eax 0xffff
mov esi eax
jmp r-xdata
push 0x1
push esi
call [ IsBadStringPtrA@IAT ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp + 0x4 ]
add ebp 0x4
add edi 0x4
test eax eax
jne r-xdata
push esi
push ebx
call [ GetProcAddress@IAT ]
test eax eax
mov [ edi ] eax
je r-xdata
mov esi [ esp + 0x18 ]
sub_10001170
sub esp 0x8
mov eax [ esp + 0x14 ]
push ebx
xor edx edx
push ebp
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
xor ebp ebp
push esi
mov dx [ eax + 0x14 ]
cmp [ eax + 0x6 ] bp
push edi
mov [ esp + 0x10 ] ecx
lea ebx [ edx + eax + 0x18 ]
jbe r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
lea eax [ esp + 0x14 ]
push eax
push rw-data
push 0x1000
call [ RegOpenKeyA@IAT ]
sub eax 0x5
mov ecx 0x5
mov esi [ esp + 0x10 ]
sub ecx eax
push 0x4
push 0x1000
mov edx [ ebx + ecx * 4 ]
mov [ rw-data ] edx
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x10 ]
add ecx esi
push eax
push ecx
call [ VirtualAlloc@IAT ]
mov edx eax
test edx edx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov ecx [ ebx + 0x10 ]
xor eax eax
mov esi ecx
mov edi edx
shr ecx 0x2
[ edi ]
mov ecx esi
add ebx 0x28
and ecx 0x3
[ edi ]
mov ecx [ rw-data ]
mov esi [ ebx - 0x14 ]
mov edi [ esp + 0x1c ]
mov eax ecx
add esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
inc ebp
[ edi ] [ esi ]
mov ecx [ esp + 0x24 ]
mov [ ebx - 0x20 ] edx
mov edx [ ecx ]
mov ax [ edx + 0x6 ]
cmp ebp eax
jl r-xdata
sub_10001250
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
mov ebp [ VirtualAlloc@IAT ]
push edi
mov ebx [ esi + 0x3c ]
push 0x4
add ebx esi
push 0x2000
mov eax [ ebx + 0x50 ]
mov ecx [ ebx + 0x34 ]
push eax
push ecx
call ebp
mov edi eax
test edi edi
mov [ esp + 0x10 ] edi
jne r-xdata
push 0x14
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov ebp eax
xor eax eax
push 0x4
push 0x1000
mov [ ebp + 0x4 ] edi
mov [ ebp + 0xc ] eax
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x10 ] eax
mov eax [ ebx + 0x50 ]
push eax
push edi
call [ VirtualAlloc@IAT ]
mov ecx [ ebx + 0x54 ]
push 0x4
push 0x1000
push ecx
push edi
call [ VirtualAlloc@IAT ]
mov ecx [ ebx + 0x54 ]
mov edi [ esi + 0x3c ]
add ecx edi
mov edi eax
mov edx ecx
push ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebx
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x20 ]
mov esi [ esp + 0x18 ]
push ecx
mov edx [ ecx + 0x3c ]
add eax edx
mov [ ebp ] eax
mov [ eax + 0x34 ] esi
call sub_10001170
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebx + 0x50 ]
push 0x4
push 0x2000
push edx
push eax
call ebp
test eax eax
mov [ esp + 0x10 ] eax
jne r-xdata
push ebp
call sub_10001570
add esp 0x4
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov ecx [ ebx + 0x34 ]
mov eax esi
sub eax ecx
je r-xdata
mov edi [ esp + 0x10 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push ebp
call sub_10001000
add esp 0x4
test eax eax
je r-xdata
push eax
push ebp
call sub_10001450
add esp 0x8
push ebp
call sub_10001390
mov eax [ ebp ]
add esp 0x4
mov eax [ eax + 0x28 ]
test eax eax
je r-xdata
pop edi
mov eax ebp
pop esi
pop ebp
pop ebx
pop ecx
retn
add eax esi
test eax eax
je r-xdata
push 0x0
push 0x1
push esi
call eax
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] 0x1
sub_10001390
push ecx
mov eax [ esp + 0x8 ]
push ebx
xor ecx ecx
push ebp
mov ebx [ eax ]
xor ebp ebp
mov cx [ ebx + 0x14 ]
cmp [ ebx + 0x6 ] bp
lea eax [ ecx + ebx + 0x18 ]
jbe r-xdata
pop ebp
pop ebx
pop ecx
retn
push esi
push edi
lea edi [ eax + 0x24 ]
lea ecx [ edx + ecx * 2 ]
test eax 0x4000000
lea edx [ esi + ecx * 2 ]
mov esi [ edx * 4 + rw-data ]
je r-xdata
mov edx [ edi - 0x14 ]
mov eax [ edi - 0x1c ]
push 0x4000
push edx
push eax
call [ VirtualFree@IAT ]
jmp r-xdata
mov edx [ edi - 0x14 ]
mov ecx edx
test ecx ecx
jne r-xdata
or esi 0x200
mov edx [ esp + 0x18 ]
xor eax eax
inc ebp
add edi 0x28
mov ebx [ edx ]
mov ax [ ebx + 0x6 ]
cmp ebp eax
jl r-xdata
jbe r-xdata
test al 0x40
je r-xdata
mov eax [ edi ]
mov ecx eax
mov edx eax
shr ecx 0x1d
shr edx 0x1e
mov esi eax
and ecx 0x1
and edx 0x1
shr esi 0x1f
test eax 0x2000000
je r-xdata
pop edi
pop esi
mov ecx [ edi - 0x1c ]
lea eax [ esp + 0x10 ]
push eax
push esi
push edx
push ecx
call [ VirtualProtect@IAT ]
test al 0x80
je r-xdata
mov ecx [ ebx + 0x20 ]
jmp r-xdata
mov ecx [ ebx + 0x24 ]
test ecx ecx
sub_10001450
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
mov eax [ eax ]
add eax 0xa0
mov ecx [ eax + 0x4 ]
test ecx ecx
jbe r-xdata
pop ebx
retn
mov ecx [ eax ]
mov eax [ ecx + ebx ]
add ecx ebx
test eax eax
jbe r-xdata
push ebp
push esi
push edi
add ecx [ ecx + 0x4 ]
mov eax [ ecx ]
test eax eax
ja r-xdata
xor eax eax
mov ax [ edx ]
mov ebp eax
and ebp 0xfffff000
cmp ebp 0x3000
jne r-xdata
lea edi [ eax + ebx ]
mov eax [ ecx + 0x4 ]
sub eax 0x8
xor esi esi
test eax 0xfffffffe
lea edx [ ecx + 0x8 ]
jbe r-xdata
pop edi
pop esi
pop ebp
mov eax [ ecx + 0x4 ]
inc esi
sub eax 0x8
add edx 0x2
shr eax 0x1
cmp esi eax
jb r-xdata
mov ebp [ esp + 0x18 ]
and eax 0xfff
add eax edi
add [ eax ] ebp
sub_100014d0
mov ecx [ esp + 0x4 ]
push ebx
push ebp
push esi
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
add ecx 0x78
push edi
mov [ esp + 0x14 ] eax
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov esi [ ecx ]
mov ecx [ esi + eax + 0x18 ]
add esi eax
test ecx ecx
je r-xdata
mov edx [ esi + 0x14 ]
test edx edx
je r-xdata
mov edi [ esi + 0x20 ]
mov ebx [ esi + 0x24 ]
add edi eax
add ebx eax
xor ebp ebp
test ecx ecx
jbe r-xdata
jmp r-xdata
mov ecx [ edi ]
mov edx [ esp + 0x18 ]
add ecx eax
push ecx
push edx
call _stricmp
add esp 0x8
test eax eax
je r-xdata
xor eax eax
mov ax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x18 ]
inc ebp
add edi 0x4
add ebx 0x2
cmp ebp eax
jb r-xdata
cmp eax [ esi + 0x14 ]
ja r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esi + 0x1c ]
pop edi
pop esi
pop ebp
lea edx [ ecx + eax * 4 ]
mov ecx [ esp + 0x8 ]
pop ebx
mov eax [ edx + ecx ]
add eax ecx
retn
sub_10001570
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esi ]
mov eax [ esi + 0x4 ]
push 0x0
push 0x0
mov edx [ ecx + 0x28 ]
push eax
add edx eax
call edx
mov [ esi + 0x10 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push edi
xor edi edi
test eax eax
jle r-xdata
push esi
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push eax
call [ VirtualFree@IAT ]
mov ecx [ esi + 0x8 ]
push ecx
call free
add esp 0x4
pop edi
push ebx
mov ebx [ FreeLibrary@IAT ]
mov eax [ esi + 0xc ]
inc edi
cmp edi eax
jl r-xdata
push eax
call ebx
mov eax [ esi + 0x8 ]
mov eax [ eax + edi * 4 ]
cmp eax 0xffffffff
je r-xdata
pop ebx
sub_10001620
sub esp 0x338
push esi
push edi
call sub_10001600
mov ecx 0xcd
xor eax eax
lea edi [ esp + 0x9 ]
mov esi rw-data
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x4b
lea edi [ esp + 0x8 ]
[ edi ] [ esi ]
mov ecx [ rw-data ]
lea eax [ esp + 0x208 ]
push 0x12c
push eax
push ecx
call [ GetModuleFileNameA@IAT ]
mov ecx [ rw-data ]
mov edx [ esp + 0x670 ]
mov eax [ esp + 0x674 ]
push ecx
mov [ esp + 0x338 ] edx
mov [ esp + 0x33c ] eax
call sub_10001250
add esp 0x4
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x338
retn
push rw-data
push eax
call sub_100014d0
add esp 0x8
test eax eax
je r-xdata
sub esp 0x338
mov ecx 0xce
lea esi [ esp + 0x340 ]
mov edi esp
[ edi ] [ esi ]
call eax
pop edi
pop esi
add esp 0x338
retn
sub_100016e0
mov eax [ rw-data ]
sub esp 0x104
test eax eax
jne r-xdata
mov ecx [ esp + 0x108 ]
push ecx
push eax
call [ GetProcAddress@IAT ]
test eax eax
jne r-xdata
lea eax [ esp ]
push 0x104
push eax
call [ GetSystemDirectoryA@IAT ]
lea ecx [ esp ]
push rw-data
push ecx
call [ lstrcatA@IAT ]
lea edx [ esp ]
push edx
call [ LoadLibraryA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
add esp 0x104
retn 0x4
push 0xfffffffe
call [ ExitProcess@IAT ]
push 0xffffffff
call [ ExitProcess@IAT ]
sub_10001750
push ebp
mov ebp esp
sub esp 0x6bc
push ebx
push esi
push edi
xor ebx ebx
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x383 ]
mov [ ebp - 0x384 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x384 ]
push 0x12b
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea ecx [ ebp - 0x384 ]
push ecx
call _strlwr
mov eax [ ebp + 0xc ]
mov edi 0x1
add esp 0x4
cmp eax edi
je r-xdata
cmp [ rw-data ] edi
jne r-xdata
cmp eax 0x2
jne r-xdata
mov esi [ ebp + 0x8 ]
push esi
call [ DisableThreadLibraryCalls@IAT ]
mov [ rw-data ] edi
mov ecx 0xcd
xor eax eax
lea edi [ ebp - 0x6bb ]
mov [ ebp - 0x6bc ] bl
mov [ ebp - 0x258 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x257 ]
lea edx [ ebp - 0x258 ]
[ edi ]
stosw [ edi ]
push 0x12b
push edx
push esi
mov [ rw-data ] esi
stosb [ edi ]
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x258 ]
push eax
call _strlwr
mov ecx 0x4a
xor eax eax
lea edi [ ebp - 0x12b ]
mov [ ebp - 0x12c ] bl
[ edi ]
add esp 0x4
lea ecx [ ebp - 0x12c ]
stosw [ edi ]
push 0x12c
push ecx
stosb [ edi ]
call [ GetWindowsDirectoryA@IAT ]
lea edx [ ebp - 0x12c ]
push edx
call _strlwr
lea eax [ ebp - 0x384 ]
push rw-data
push eax
call strstr
add esp 0xc
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
pop edi
pop esi
mov eax 0x1
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov [ ebp + 0xc ] ebx
mov [ ebp + 0xc ] ebp
mov eax [ ebp + 0xc ]
sub esp 0x338
lea esi [ ebp - 0x6bc ]
mov edi esp
mov eax [ eax ]
mov [ ebp - 0x390 ] 0x1
mov ecx [ eax + 0x4 ]
mov [ ebp - 0x38c ] ecx
mov ecx 0xce
[ edi ] [ esi ]
call sub_10001620
add esp 0x338
lea ecx [ ebp - 0x12c ]
lea edx [ ebp - 0x258 ]
push ecx
push edx
call strstr
add esp 0x8
test eax eax
jne r-xdata
sub esp 0x338
mov ecx 0xce
lea esi [ ebp - 0x6bc ]
mov edi esp
mov [ ebp - 0x390 ] 0x3
[ edi ] [ esi ]
call sub_10001620
add esp 0x338
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_10002654
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_10002654
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10001750
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_10002654
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_10002654
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_10001600
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
mov [ rw-data ] 0x35800
mov [ rw-data ] rw-data
ordinal_2
push 0x2
call sub_100016e0
jmp eax
CloseDriver
push rw-data
call sub_100016e0
jmp eax
DefDriverProc
push rw-data
call sub_100016e0
jmp eax
DriverCallback
push rw-data
call sub_100016e0
jmp eax
DrvGetModuleHandle
push rw-data
call sub_100016e0
jmp eax
GetDriverModuleHandle
push rw-data
call sub_100016e0
jmp eax
MigrateAllDrivers
push rw-data
call sub_100016e0
jmp eax
MigrateSoundEvents
push rw-data
call sub_100016e0
jmp eax
NotifyCallbackData
push rw-data
call sub_100016e0
jmp eax
OpenDriver
push rw-data
call sub_100016e0
jmp eax
PlaySound
push rw-data
call sub_100016e0
jmp eax
PlaySoundA
push rw-data
call sub_100016e0
jmp eax
PlaySoundW
push rw-data
call sub_100016e0
jmp eax
SendDriverMessage
push rw-data
call sub_100016e0
jmp eax
WOW32DriverCallback
push rw-data
call sub_100016e0
jmp eax
WOW32ResolveMultiMediaHandle
push rw-data
call sub_100016e0
jmp eax
WOWAppExit
push rw-data
call sub_100016e0
jmp eax
WinmmLogoff
push rw-data
call sub_100016e0
jmp eax
WinmmLogon
push rw-data
call sub_100016e0
jmp eax
aux32Message
push rw-data
call sub_100016e0
jmp eax
auxGetDevCapsA
push rw-data
call sub_100016e0
jmp eax
auxGetDevCapsW
push rw-data
call sub_100016e0
jmp eax
auxGetNumDevs
push rw-data
call sub_100016e0
jmp eax
auxGetVolume
push rw-data
call sub_100016e0
jmp eax
auxOutMessage
push rw-data
call sub_100016e0
jmp eax
auxSetVolume
push rw-data
call sub_100016e0
jmp eax
gfxAddGfx
push rw-data
call sub_100016e0
jmp eax
gfxBatchChange
push rw-data
call sub_100016e0
jmp eax
gfxCreateGfxFactoriesList
push rw-data
call sub_100016e0
jmp eax
gfxCreateZoneFactoriesList
push rw-data
call sub_100016e0
jmp eax
gfxDestroyDeviceInterfaceList
push rw-data
call sub_100016e0
jmp eax
gfxEnumerateGfxs
push rw-data
call sub_100016e0
jmp eax
_gfxLogoff@0
push rw-data
call sub_100016e0
jmp eax
_gfxLogon@4
push rw-data
call sub_100016e0
jmp eax
gfxModifyGfx
push rw-data
call sub_100016e0
jmp eax
gfxOpenGfx
push rw-data
call sub_100016e0
jmp eax
gfxRemoveGfx
push rw-data
call sub_100016e0
jmp eax
joy32Message
push rw-data
call sub_100016e0
jmp eax
joyConfigChanged
push rw-data
call sub_100016e0
jmp eax
joyGetDevCapsA
push rw-data
call sub_100016e0
jmp eax
joyGetDevCapsW
push rw-data
call sub_100016e0
jmp eax
joyGetNumDevs
push rw-data
call sub_100016e0
jmp eax
joyGetPos
push rw-data
call sub_100016e0
jmp eax
joyGetPosEx
push rw-data
call sub_100016e0
jmp eax
joyGetThreshold
push rw-data
call sub_100016e0
jmp eax
joyReleaseCapture
push rw-data
call sub_100016e0
jmp eax
joySetCapture
push rw-data
call sub_100016e0
jmp eax
joySetThreshold
push rw-data
call sub_100016e0
jmp eax
mci32Message
push rw-data
call sub_100016e0
jmp eax
mciDriverNotify
push rw-data
call sub_100016e0
jmp eax
mciDriverYield
push rw-data
call sub_100016e0
jmp eax
mciExecute
push rw-data
call sub_100016e0
jmp eax
mciFreeCommandResource
push rw-data
call sub_100016e0
jmp eax
mciGetCreatorTask
push rw-data
call sub_100016e0
jmp eax
mciGetDeviceIDA
push rw-data
call sub_100016e0
jmp eax
mciGetDeviceIDFromElementIDA
push rw-data
call sub_100016e0
jmp eax
mciGetDeviceIDFromElementIDW
push rw-data
call sub_100016e0
jmp eax
mciGetDeviceIDW
push rw-data
call sub_100016e0
jmp eax
mciGetDriverData
push rw-data
call sub_100016e0
jmp eax
mciGetErrorStringA
push rw-data
call sub_100016e0
jmp eax
mciGetErrorStringW
push rw-data
call sub_100016e0
jmp eax
mciGetYieldProc
push rw-data
call sub_100016e0
jmp eax
mciLoadCommandResource
push rw-data
call sub_100016e0
jmp eax
mciSendCommandA
push rw-data
call sub_100016e0
jmp eax
mciSendCommandW
push rw-data
call sub_100016e0
jmp eax
mciSendStringA
push rw-data
call sub_100016e0
jmp eax
mciSendStringW
push rw-data
call sub_100016e0
jmp eax
mciSetDriverData
push rw-data
call sub_100016e0
jmp eax
mciSetYieldProc
push rw-data
call sub_100016e0
jmp eax
mid32Message
push rw-data
call sub_100016e0
jmp eax
midiConnect
push rw-data
call sub_100016e0
jmp eax
midiDisconnect
push rw-data
call sub_100016e0
jmp eax
midiInAddBuffer
push rw-data
call sub_100016e0
jmp eax
midiInClose
push rw-data
call sub_100016e0
jmp eax
midiInGetDevCapsA
push rw-data
call sub_100016e0
jmp eax
midiInGetDevCapsW
push rw-data
call sub_100016e0
jmp eax
midiInGetErrorTextA
push rw-data
call sub_100016e0
jmp eax
midiInGetErrorTextW
push rw-data
call sub_100016e0
jmp eax
midiInGetID
push rw-data
call sub_100016e0
jmp eax
midiInGetNumDevs
push rw-data
call sub_100016e0
jmp eax
midiInMessage
push rw-data
call sub_100016e0
jmp eax
midiInOpen
push rw-data
call sub_100016e0
jmp eax
midiInPrepareHeader
push rw-data
call sub_100016e0
jmp eax
midiInReset
push rw-data
call sub_100016e0
jmp eax
midiInStart
push rw-data
call sub_100016e0
jmp eax
midiInStop
push rw-data
call sub_100016e0
jmp eax
midiInUnprepareHeader
push rw-data
call sub_100016e0
jmp eax
midiOutCacheDrumPatches
push rw-data
call sub_100016e0
jmp eax
midiOutCachePatches
push rw-data
call sub_100016e0
jmp eax
midiOutClose
push rw-data
call sub_100016e0
jmp eax
midiOutGetDevCapsA
push rw-data
call sub_100016e0
jmp eax
midiOutGetDevCapsW
push rw-data
call sub_100016e0
jmp eax
midiOutGetErrorTextA
push rw-data
call sub_100016e0
jmp eax
midiOutGetErrorTextW
push rw-data
call sub_100016e0
jmp eax
midiOutGetID
push rw-data
call sub_100016e0
jmp eax
midiOutGetNumDevs
push rw-data
call sub_100016e0
jmp eax
midiOutGetVolume
push rw-data
call sub_100016e0
jmp eax
midiOutLongMsg
push rw-data
call sub_100016e0
jmp eax
midiOutMessage
push rw-data
call sub_100016e0
jmp eax
midiOutOpen
push rw-data
call sub_100016e0
jmp eax
midiOutPrepareHeader
push rw-data
call sub_100016e0
jmp eax
midiOutReset
push rw-data
call sub_100016e0
jmp eax
midiOutSetVolume
push rw-data
call sub_100016e0
jmp eax
midiOutShortMsg
push rw-data
call sub_100016e0
jmp eax
midiOutUnprepareHeader
push rw-data
call sub_100016e0
jmp eax
midiStreamClose
push rw-data
call sub_100016e0
jmp eax
midiStreamOpen
push rw-data
call sub_100016e0
jmp eax
midiStreamOut
push rw-data
call sub_100016e0
jmp eax
midiStreamPause
push rw-data
call sub_100016e0
jmp eax
midiStreamPosition
push rw-data
call sub_100016e0
jmp eax
midiStreamProperty
push rw-data
call sub_100016e0
jmp eax
midiStreamRestart
push rw-data
call sub_100016e0
jmp eax
midiStreamStop
push rw-data
call sub_100016e0
jmp eax
mixerClose
push rw-data
call sub_100016e0
jmp eax
mixerGetControlDetailsA
push rw-data
call sub_100016e0
jmp eax
mixerGetControlDetailsW
push rw-data
call sub_100016e0
jmp eax
mixerGetDevCapsA
push rw-data
call sub_100016e0
jmp eax
mixerGetDevCapsW
push rw-data
call sub_100016e0
jmp eax
mixerGetID
push rw-data
call sub_100016e0
jmp eax
mixerGetLineControlsA
push rw-data
call sub_100016e0
jmp eax
mixerGetLineControlsW
push rw-data
call sub_100016e0
jmp eax
mixerGetLineInfoA
push rw-data
call sub_100016e0
jmp eax
mixerGetLineInfoW
push rw-data
call sub_100016e0
jmp eax
mixerGetNumDevs
push rw-data
call sub_100016e0
jmp eax
mixerMessage
push rw-data
call sub_100016e0
jmp eax
mixerOpen
push rw-data
call sub_100016e0
jmp eax
mixerSetControlDetails
push rw-data
call sub_100016e0
jmp eax
mmDrvInstall
push rw-data
call sub_100016e0
jmp eax
mmGetCurrentTask
push rw-data
call sub_100016e0
jmp eax
mmTaskBlock
push rw-data
call sub_100016e0
jmp eax
mmTaskCreate
push rw-data
call sub_100016e0
jmp eax
mmTaskSignal
push rw-data
call sub_100016e0
jmp eax
mmTaskYield
push rw-data
call sub_100016e0
jmp eax
mmioAdvance
push rw-data
call sub_100016e0
jmp eax
mmioAscend
push rw-data
call sub_100016e0
jmp eax
mmioClose
push rw-data
call sub_100016e0
jmp eax
mmioCreateChunk
push rw-data
call sub_100016e0
jmp eax
mmioDescend
push rw-data
call sub_100016e0
jmp eax
mmioFlush
push rw-data
call sub_100016e0
jmp eax
mmioGetInfo
push rw-data
call sub_100016e0
jmp eax
mmioInstallIOProcA
push rw-data
call sub_100016e0
jmp eax
mmioInstallIOProcW
push rw-data
call sub_100016e0
jmp eax
mmioOpenA
push rw-data
call sub_100016e0
jmp eax
mmioOpenW
push rw-data
call sub_100016e0
jmp eax
mmioRead
push rw-data
call sub_100016e0
jmp eax
mmioRenameA
push rw-data
call sub_100016e0
jmp eax
mmioRenameW
push rw-data
call sub_100016e0
jmp eax
mmioSeek
push rw-data
call sub_100016e0
jmp eax
mmioSendMessage
push rw-data
call sub_100016e0
jmp eax
mmioSetBuffer
push rw-data
call sub_100016e0
jmp eax
mmioSetInfo
push rw-data
call sub_100016e0
jmp eax
mmioStringToFOURCCA
push rw-data
call sub_100016e0
jmp eax
mmioStringToFOURCCW
push rw-data
call sub_100016e0
jmp eax
mmioWrite
push rw-data
call sub_100016e0
jmp eax
mmsystemGetVersion
push rw-data
call sub_100016e0
jmp eax
mod32Message
push rw-data
call sub_100016e0
jmp eax
mxd32Message
push rw-data
call sub_100016e0
jmp eax
sndPlaySoundA
push rw-data
call sub_100016e0
jmp eax
sndPlaySoundW
push rw-data
call sub_100016e0
jmp eax
tid32Message
push rw-data
call sub_100016e0
jmp eax
timeBeginPeriod
push rw-data
call sub_100016e0
jmp eax
timeEndPeriod
push rw-data
call sub_100016e0
jmp eax
timeGetDevCaps
push rw-data
call sub_100016e0
jmp eax
timeGetSystemTime
push rw-data
call sub_100016e0
jmp eax
timeGetTime
push rw-data
call sub_100016e0
jmp eax
timeKillEvent
push rw-data
call sub_100016e0
jmp eax
timeSetEvent
push rw-data
call sub_100016e0
jmp eax
waveInAddBuffer
push rw-data
call sub_100016e0
jmp eax
waveInClose
push rw-data
call sub_100016e0
jmp eax
waveInGetDevCapsA
push rw-data
call sub_100016e0
jmp eax
waveInGetDevCapsW
push rw-data
call sub_100016e0
jmp eax
waveInGetErrorTextA
push rw-data
call sub_100016e0
jmp eax
waveInGetErrorTextW
push rw-data
call sub_100016e0
jmp eax
waveInGetID
push rw-data
call sub_100016e0
jmp eax
waveInGetNumDevs
push rw-data
call sub_100016e0
jmp eax
waveInGetPosition
push rw-data
call sub_100016e0
jmp eax
waveInMessage
push rw-data
call sub_100016e0
jmp eax
waveInOpen
push rw-data
call sub_100016e0
jmp eax
waveInPrepareHeader
push rw-data
call sub_100016e0
jmp eax
waveInReset
push rw-data
call sub_100016e0
jmp eax
waveInStart
push rw-data
call sub_100016e0
jmp eax
waveInStop
push rw-data
call sub_100016e0
jmp eax
waveInUnprepareHeader
push rw-data
call sub_100016e0
jmp eax
waveOutBreakLoop
push rw-data
call sub_100016e0
jmp eax
waveOutClose
push rw-data
call sub_100016e0
jmp eax
waveOutGetDevCapsA
push rw-data
call sub_100016e0
jmp eax
waveOutGetDevCapsW
push rw-data
call sub_100016e0
jmp eax
waveOutGetErrorTextA
push rw-data
call sub_100016e0
jmp eax
waveOutGetErrorTextW
push rw-data
call sub_100016e0
jmp eax
waveOutGetID
push rw-data
call sub_100016e0
jmp eax
waveOutGetNumDevs
push rw-data
call sub_100016e0
jmp eax
waveOutGetPitch
push rw-data
call sub_100016e0
jmp eax
waveOutGetPlaybackRate
push rw-data
call sub_100016e0
jmp eax
waveOutGetPosition
push rw-data
call sub_100016e0
jmp eax
waveOutGetVolume
push rw-data
call sub_100016e0
jmp eax
waveOutMessage
push rw-data
call sub_100016e0
jmp eax
waveOutOpen
push rw-data
call sub_100016e0
jmp eax
waveOutPause
push rw-data
call sub_100016e0
jmp eax
waveOutPrepareHeader
push rw-data
call sub_100016e0
jmp eax
waveOutReset
push rw-data
call sub_100016e0
jmp eax
waveOutRestart
push rw-data
call sub_100016e0
jmp eax
waveOutSetPitch
push rw-data
call sub_100016e0
jmp eax
waveOutSetPlaybackRate
push rw-data
call sub_100016e0
jmp eax
waveOutSetVolume
push rw-data
call sub_100016e0
jmp eax
waveOutUnprepareHeader
push rw-data
call sub_100016e0
jmp eax
waveOutWrite
push rw-data
call sub_100016e0
jmp eax
wid32Message
push rw-data
call sub_100016e0
jmp eax
winmmDbgOut
push rw-data
call sub_100016e0
jmp eax
winmmSetDebugLevel
push rw-data
call sub_100016e0
jmp eax
wod32Message
push rw-data
call sub_100016e0
jmp eax
realloc
jmp [ realloc@IAT ]
strncpy
jmp [ strncpy@IAT ]
free
jmp [ free@IAT ]
strstr
jmp [ strstr@IAT ]
_initterm
jmp [ _initterm@IAT ]
_stricmp
jmp [ _stricmp@IAT ]
_strlwr
jmp [ _strlwr@IAT ]
