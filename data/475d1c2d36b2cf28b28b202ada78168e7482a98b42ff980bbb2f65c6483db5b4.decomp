sub_18017321f
push 0xffffffffe8b4a27e
jmp rwxdata
jmp rwxdata
push 0x2f4ec741
jmp rwxdata
jmp rwxdata
push r8
jmp rwxdata
jmp rwxdata
push rax
jmp rwxdata
push r15
jmp rwxdata
push r11
jmp rwxdata
jmp rwxdata
push rbp
jmp rwxdata
jmp rwxdata
push rdx
jne rwxdata
jmp rwxdata
push r10
jmp rwxdata
push r10
jmp rwxdata
push r12
jmp rwxdata
jmp rwxdata
push rcx
jmp rwxdata
push r12
jmp rwxdata
jmp rwxdata
push rcx
jmp rwxdata
push r9
jmp rwxdata
jmp rwxdata
push r13
jmp rwxdata
push r9
jmp rwxdata
jmp rwxdata
push r13
je rwxdata
push r14
jmp rwxdata
jmp rwxdata
push r14
jmp rwxdata
not rax
pushfq
not r13d
inc al
push rsi
jb rwxdata
push r14
jmp rwxdata
not esi
lea r12 [ rsp - 0x5f8d688e ]
push rbx
setns ah
not rax
mov esi 0x4120086d
push rdi
not ax
lea rdi [ rbp - 0x2553d77c ]
push rdx
dec si
jmp rwxdata
mov r12d ebx
movzx bp bl
push rbx
dec si
jns rwxdata
push [ rwxdata ]
setpo dl
movsx ax bl
jmp rwxdata
xchg bp si
seto bh
movsx r13 cl
xchg r13w ax
push rdi
inc al
setl ah
inc r13
movsx bp bl
push rdx
dec ah
dec r13w
dec r13w
push [ rwxdata ]
setl ah
mov rax 0x0
dec r13
lea rsi [ rbx + 0x7f7ae960 ]
mov r13 rax
dec bp
push rax
bswap rsi
mov esi [ rsp + 0xa0 ]
movsx r12d dl
jmp rwxdata
mov ah al
bswap eax
push rdi
dec r13d
push rdx
movsx ax bl
movsx r13w dl
xchg bp ax
push [ rwxdata ]
js rwxdata
inc eax
mov rax 0x0
bswap r13w
mov r13w bx
setle bh
lea rbp [ rbp + 0x7bfb670d ]
mov r13 rax
seto bh
movzx si bl
dec r12w
push rax
jmp rwxdata
lea rdi [ rdx - 0x26094b83 ]
xchg r12w ax
inc esi
btr bp si
btc di dx
movzx r12 al
ror esi 0x8
ror bp cl
add bp bp
sub rbp 0xffffffffec23f2f7
not esi
cmc
sbb edi 0x209ac0fa
mov rbp rsp
cmc
rcr di cl
sub rsp 0x140
bsr di si
shr di 0x9
cmp ch dh
bsr r12w bp
and rsp 0xfffffffffffffff0
neg r12w
cmc
inc r12d
mov rdi rsp
setae bh
shrd r12d esp cl
lea r12 [ rwxdata ]
btr ax cx
btc rbx rcx
or bx bp
mov rax 0x100000000
clc
shl bx cl
add rsi rax
stc
sub al bh
bsf bx bx
mov rbx rsi
sets dh
cmc
add rsi [ rbp ]
movzx edx bl
mov al [ rsi - 0x1 ]
neg dx
neg dx
sub al bl
sbb dh 0x39
cmc
neg dl
rcr dh 0x3
add al 0x56
shl dx 0x3
not al
cmc
ror dl cl
movzx dx dl
neg al
shl dx 0x4
sub rsi 0x1
bswap dx
rol dx 0xf
sub bl al
lea rdx [ rbp + 0x2a8d9d65 ]
clc
movzx rax al
mov dx bx
bt di si
movzx edx dl
mov rdx [ r12 + rax * 8 ]
stc
ror rdx 0x1d
test ah cl
stc
test bx 0x9c50
test esi 0x4dd3f04d
add rdx r13
jmp rdx
mov ax dx
mov al dl
setge bl
mov rax 0x0
xchg si di
mov r13 rax
bswap si
bswap si
movzx rsi cl
jmp rwxdata
mov rax 0x0
movsx r13w cl
movsx rsi bl
not r13w
setle dl
mov r13 rax
xchg edi esi
bswap si
jmp rwxdata
lea rsi [ rsp + 0x75b45fa5 ]
dec edi
mov esi [ rsp + 0xa0 ]
bswap ebp
lea rbp [ rsi - 0x788633d8 ]
movsx bp cl
inc esi
bswap di
lea rbp [ rbp - 0x58554b91 ]
jmp rwxdata
push rax
jmp rwxdata
push rax
inc esi
not si
xchg si bp
mov esi [ rsp + 0xa0 ]
bswap di
inc esi
bts bp di
xchg rbp rdi
jmp rwxdata
ror esi 0x8
rcr ebp 0x12
bswap ebp
movzx di cl
not esi
and bp sp
rcr di 0xe
movzx edx cl
mov rbp rsp
lea rax [ rsi + 0xd5b6526 ]
xadd di dx
test cl 0x2
sub rsp 0x140
movzx eax al
lea rax [ 0xffffffffaf4d7341 ]
bsf edx esi
sbb edi edi
and rsp 0xfffffffffffffff0
inc di
bts r12w dx
mov rdi rsp
neg ebx
jmp rwxdata
lea rax [ rsi * 8 + 0x5fa0df5d ]
lea rsi [ rax * 8 + 0x4490a16e ]
dec si
mov esi [ rsp + 0xa0 ]
not dx
jmp rwxdata
setb al
ror esi 0x8
adc edi esp
xadd di bp
not esi
inc bp
bsf rdi rcx
bt sp bp
inc bp
mov rbp rsp
stc
jle rwxdata
lea r12 [ rwxdata ]
sub bh 0xc0
setne ah
bswap ax
mov rax 0x100000000
bswap dx
add rsi rax
bt eax ebp
inc bx
rcr dh 0x5
mov rbx rsi
neg al
and dl 0xb4
add rsi [ rbp ]
movsx dx bl
movzx dx dl
test dl bh
cmc
mov al [ rsi - 0x1 ]
add rdx 0xffffffffa1bcad1d
add edx 0x50fa8e2e
dec dh
neg dh
sub al bl
clc
dec dh
shl dl cl
add al 0x56
add dl 0x29
adc dl 0xf8
rcr dl 0x4
inc dx
not al
add dl al
add dx 0x658
rcl dx cl
neg al
rcl dl cl
sub rsi 0x1
adc edx 0x7cfb8be5
movsx edx dl
ror dl cl
sub bl al
rol dh cl
cmc
rcl dh cl
rcl rdx cl
movzx rax al
rcl edx 0x1e
movzx rdx bl
rcr rdx 0x10
mov rdx [ r12 + rax * 8 ]
clc
ror rdx 0x1d
stc
test bx bx
add rdx r13
jmp rdx
jmp rwxdata
shr rdi 0x9
sub rsp 0x140
movsx rdi bl
jmp rwxdata
sub rsp 0x140
sub bl 0x34
btc di bx
and rsp 0xfffffffffffffff0
bsf r12w di
cmp bh 0x7a
mov rdi rsp
sub r12w ax
stc
shr bl 0x2
lea r12 [ rwxdata ]
clc
mov rax 0x100000000
clc
adc dh dl
btc dx 0x3
add rsi rax
test al dl
lea rdx [ rbp + 0x375736a6 ]
btr bx bp
mov rbx rsi
shld edx esi 0x7
inc dl
ror al 0x1
add rsi [ rbp ]
neg dl
jmp rwxdata
lea r12 [ rax + 0x216126fa ]
inc esi
rcl di cl
jmp rwxdata
movsx r12 dl
btr dx 0xf
and rsp 0xfffffffffffffff0
sbb edi ebp
jmp rwxdata
mov al [ rsi - 0x1 ]
xor dl ah
or dh dh
dec dl
sub al bl
and dx 0x6bf3
add al 0x56
rcl dl cl
lea rdx [ rbx + 0x3f91e674 ]
bt si 0x1
and dl ch
not al
add edx esi
neg al
and dx 0x2b1f
sar dh 0x4
shld rdx rdi cl
sub rsi 0x1
shl rdx 0x27
sub bl al
movzx dx al
mov rdx rbx
cmc
jmp rwxdata
rcr bp 0xb
btr di sp
ror esi 0x8
movsx bp dl
xchg bp bx
not esi
cmc
btc bp 0x4
bsf r12 rbx
mov rbp rsp
stc
xchg bx r12w
sub rsp 0x140
jmp rwxdata
mov rdi rsp
xor bl bl
test bl 0x25
btr ax 0xb
shr edx cl
lea r12 [ rwxdata ]
jmp rwxdata
movzx rax al
movzx dx al
rcl dl cl
cmc
rcr dl cl
mov rdx [ r12 + rax * 8 ]
jmp rwxdata
bsr r12w si
bsf r12w dx
and rsp 0xfffffffffffffff0
movsx di dl
shld ebx ebp 0xf
mov rdi rsp
and r12w bp
ror r12w 0xb
lea r12 [ rwxdata ]
not bl
mov rax 0x100000000
mov bh 0xcc
shr rdx cl
lea rbx [ rsp + 0x3b152d3a ]
add rsi rax
adc bl 0x3e
shld dx si 0xe
mov rbx rsi
or al dl
add rsi [ rbp ]
sbb edx 0x5f5b5c80
clc
dec dx
mov al [ rsi - 0x1 ]
not dx
neg dh
sub al bl
dec dx
ror edx cl
add al 0x56
movsx dx dl
sar dl cl
bswap dx
not al
sets dl
rcl edx cl
neg al
sbb dx 0x6fc3
sar dh cl
sub rsi 0x1
adc dx cx
bts dx 0x3
bt eax 0x4
rcl dx 0x6
sub bl al
bt edi 0xb
bt cx bp
movzx rax al
movsx edx al
mov dh dl
rol dh 0x7
seta dl
mov rdx [ r12 + rax * 8 ]
clc
jmp rwxdata
shl al 0x2
mov bx si
mov rax 0x100000000
bts ebx edi
cmp al cl
xor dh 0xaa
sub dx si
add rsi rax
stc
mov rbx rsi
shrd edx eax 0x11
cmp bh bl
ror dh cl
add rsi [ rbp ]
and dh 0xed
mov al [ rsi - 0x1 ]
and edx edi
adc dh dh
shr dx 0x1
sub al bl
sar dl 0x1
neg edx
add al 0x56
bt sp 0xb
dec rdx
btc dx bp
stc
not al
shl dx cl
bsr dx bp
neg al
lea rdx [ rsi + 0x1b2ba2e8 ]
sub rsi 0x1
sbb edx 0x5f83435e
cmc
sub bl al
cmc
bt cx 0x9
cmc
movzx rax al
mov dl 0x25
mov rdx [ r12 + rax * 8 ]
bt ax 0x7
clc
bt sp ax
ror rdx 0x1d
bt sp 0x4
stc
add rdx r13
jmp rdx
ror rdx 0x1d
cmc
add rdx r13
jmp rdx
jmp rwxdata
cmc
ror rdx 0x1d
cmp bh bl
bt sp 0xa
cmc
stc
add rdx r13
jmp rdx
sub_18017829d
push 0xffffffffe922017e
jmp rwxdata
push 0x553fe6b0
jmp rwxdata
jmp rwxdata
push r8
jge rwxdata
jmp rwxdata
push rax
jmp rwxdata
push rax
jne rwxdata
jmp rwxdata
jmp rwxdata
push r15
jmp rwxdata
push r15
jmp rwxdata
push r15
jmp rwxdata
jmp rwxdata
push r11
jmp rwxdata
jmp rwxdata
push r11
jmp rwxdata
jmp rwxdata
push r11
jmp rwxdata
jmp rwxdata
push rbp
jmp rwxdata
jmp rwxdata
push rbp
jmp rwxdata
push rdx
jmp rwxdata
push rbp
jmp rwxdata
push rdx
jmp rwxdata
jmp rwxdata
jmp rwxdata
jmp rwxdata
push r10
jmp rwxdata
push rdx
jmp rwxdata
push r10
jmp rwxdata
jmp rwxdata
push r10
jmp rwxdata
jmp rwxdata
push r12
jmp rwxdata
jmp rwxdata
push r12
jmp rwxdata
push rcx
jmp rwxdata
push r12
jmp rwxdata
push rcx
jmp rwxdata
jmp rwxdata
jmp rwxdata
jmp rwxdata
push r9
jmp rwxdata
push rcx
jmp rwxdata
push r9
jmp rwxdata
push r13
jmp rwxdata
push r9
jmp rwxdata
jmp rwxdata
jmp rwxdata
push r13
jmp rwxdata
push r13
jmp rwxdata
push r14
jmp rwxdata
push r14
jmp rwxdata
jmp rwxdata
not rax
pushfq
not r13d
inc al
push rsi
jb rwxdata
push r14
jmp rwxdata
not esi
lea r12 [ rsp - 0x5f8d688e ]
push rbx
setns ah
not rax
mov esi 0x4120086d
push rdi
not ax
lea rdi [ rbp - 0x2553d77c ]
push rdx
dec si
jmp rwxdata
mov r12d ebx
movzx bp bl
push rbx
dec si
jns rwxdata
push [ rwxdata ]
setpo dl
movsx ax bl
jmp rwxdata
xchg bp si
seto bh
movsx r13 cl
xchg r13w ax
push rdi
inc al
setl ah
inc r13
movsx bp bl
push rdx
dec ah
dec r13w
dec r13w
push [ rwxdata ]
setl ah
mov rax 0x0
dec r13
lea rsi [ rbx + 0x7f7ae960 ]
mov r13 rax
dec bp
push rax
bswap rsi
mov esi [ rsp + 0xa0 ]
movsx r12d dl
jmp rwxdata
mov ah al
bswap eax
push rdi
dec r13d
push rdx
movsx ax bl
movsx r13w dl
xchg bp ax
push [ rwxdata ]
js rwxdata
inc eax
mov rax 0x0
bswap r13w
mov r13w bx
setle bh
lea rbp [ rbp + 0x7bfb670d ]
mov r13 rax
seto bh
movzx si bl
dec r12w
push rax
jmp rwxdata
lea rdi [ rdx - 0x26094b83 ]
xchg r12w ax
inc esi
btr bp si
btc di dx
movzx r12 al
ror esi 0x8
ror bp cl
add bp bp
sub rbp 0xffffffffec23f2f7
not esi
cmc
sbb edi 0x209ac0fa
mov rbp rsp
cmc
rcr di cl
sub rsp 0x140
bsr di si
shr di 0x9
cmp ch dh
bsr r12w bp
and rsp 0xfffffffffffffff0
neg r12w
cmc
inc r12d
mov rdi rsp
setae bh
shrd r12d esp cl
lea r12 [ rwxdata ]
btr ax cx
btc rbx rcx
or bx bp
mov rax 0x100000000
clc
shl bx cl
add rsi rax
stc
sub al bh
bsf bx bx
mov rbx rsi
sets dh
cmc
add rsi [ rbp ]
movzx edx bl
mov al [ rsi - 0x1 ]
neg dx
neg dx
sub al bl
sbb dh 0x39
cmc
neg dl
rcr dh 0x3
add al 0x56
shl dx 0x3
not al
cmc
ror dl cl
movzx dx dl
neg al
shl dx 0x4
sub rsi 0x1
bswap dx
rol dx 0xf
sub bl al
lea rdx [ rbp + 0x2a8d9d65 ]
clc
movzx rax al
mov dx bx
bt di si
movzx edx dl
mov rdx [ r12 + rax * 8 ]
stc
ror rdx 0x1d
test ah cl
stc
test bx 0x9c50
test esi 0x4dd3f04d
add rdx r13
jmp rdx
mov ax dx
mov al dl
setge bl
mov rax 0x0
xchg si di
mov r13 rax
bswap si
bswap si
movzx rsi cl
jmp rwxdata
mov rax 0x0
movsx r13w cl
movsx rsi bl
not r13w
setle dl
mov r13 rax
xchg edi esi
bswap si
jmp rwxdata
lea rsi [ rsp + 0x75b45fa5 ]
dec edi
mov esi [ rsp + 0xa0 ]
bswap ebp
lea rbp [ rsi - 0x788633d8 ]
movsx bp cl
inc esi
bswap di
lea rbp [ rbp - 0x58554b91 ]
jmp rwxdata
push rax
jmp rwxdata
push rax
inc esi
not si
xchg si bp
mov esi [ rsp + 0xa0 ]
bswap di
inc esi
bts bp di
xchg rbp rdi
jmp rwxdata
ror esi 0x8
rcr ebp 0x12
bswap ebp
movzx di cl
not esi
and bp sp
rcr di 0xe
movzx edx cl
mov rbp rsp
lea rax [ rsi + 0xd5b6526 ]
xadd di dx
test cl 0x2
sub rsp 0x140
movzx eax al
lea rax [ 0xffffffffaf4d7341 ]
bsf edx esi
sbb edi edi
and rsp 0xfffffffffffffff0
inc di
bts r12w dx
mov rdi rsp
neg ebx
jmp rwxdata
lea rax [ rsi * 8 + 0x5fa0df5d ]
lea rsi [ rax * 8 + 0x4490a16e ]
dec si
mov esi [ rsp + 0xa0 ]
not dx
jmp rwxdata
setb al
ror esi 0x8
adc edi esp
xadd di bp
not esi
inc bp
bsf rdi rcx
bt sp bp
inc bp
mov rbp rsp
stc
jle rwxdata
lea r12 [ rwxdata ]
sub bh 0xc0
setne ah
bswap ax
mov rax 0x100000000
bswap dx
add rsi rax
bt eax ebp
inc bx
rcr dh 0x5
mov rbx rsi
neg al
and dl 0xb4
add rsi [ rbp ]
movsx dx bl
movzx dx dl
test dl bh
cmc
mov al [ rsi - 0x1 ]
add rdx 0xffffffffa1bcad1d
add edx 0x50fa8e2e
dec dh
neg dh
sub al bl
clc
dec dh
shl dl cl
add al 0x56
add dl 0x29
adc dl 0xf8
rcr dl 0x4
inc dx
not al
add dl al
add dx 0x658
rcl dx cl
neg al
rcl dl cl
sub rsi 0x1
adc edx 0x7cfb8be5
movsx edx dl
ror dl cl
sub bl al
rol dh cl
cmc
rcl dh cl
rcl rdx cl
movzx rax al
rcl edx 0x1e
movzx rdx bl
rcr rdx 0x10
mov rdx [ r12 + rax * 8 ]
clc
ror rdx 0x1d
stc
test bx bx
add rdx r13
jmp rdx
jmp rwxdata
shr rdi 0x9
sub rsp 0x140
movsx rdi bl
jmp rwxdata
sub rsp 0x140
sub bl 0x34
btc di bx
and rsp 0xfffffffffffffff0
bsf r12w di
cmp bh 0x7a
mov rdi rsp
sub r12w ax
stc
shr bl 0x2
lea r12 [ rwxdata ]
clc
mov rax 0x100000000
clc
adc dh dl
btc dx 0x3
add rsi rax
test al dl
lea rdx [ rbp + 0x375736a6 ]
btr bx bp
mov rbx rsi
shld edx esi 0x7
inc dl
ror al 0x1
add rsi [ rbp ]
neg dl
jmp rwxdata
lea r12 [ rax + 0x216126fa ]
inc esi
rcl di cl
jmp rwxdata
movsx r12 dl
btr dx 0xf
and rsp 0xfffffffffffffff0
sbb edi ebp
jmp rwxdata
mov al [ rsi - 0x1 ]
xor dl ah
or dh dh
dec dl
sub al bl
and dx 0x6bf3
add al 0x56
rcl dl cl
lea rdx [ rbx + 0x3f91e674 ]
bt si 0x1
and dl ch
not al
add edx esi
neg al
and dx 0x2b1f
sar dh 0x4
shld rdx rdi cl
sub rsi 0x1
shl rdx 0x27
sub bl al
movzx dx al
mov rdx rbx
cmc
jmp rwxdata
rcr bp 0xb
btr di sp
ror esi 0x8
movsx bp dl
xchg bp bx
not esi
cmc
btc bp 0x4
bsf r12 rbx
mov rbp rsp
stc
xchg bx r12w
sub rsp 0x140
jmp rwxdata
mov rdi rsp
xor bl bl
test bl 0x25
btr ax 0xb
shr edx cl
lea r12 [ rwxdata ]
jmp rwxdata
movzx rax al
movzx dx al
rcl dl cl
cmc
rcr dl cl
mov rdx [ r12 + rax * 8 ]
jmp rwxdata
bsr r12w si
bsf r12w dx
and rsp 0xfffffffffffffff0
movsx di dl
shld ebx ebp 0xf
mov rdi rsp
and r12w bp
ror r12w 0xb
lea r12 [ rwxdata ]
not bl
mov rax 0x100000000
mov bh 0xcc
shr rdx cl
lea rbx [ rsp + 0x3b152d3a ]
add rsi rax
adc bl 0x3e
shld dx si 0xe
mov rbx rsi
or al dl
add rsi [ rbp ]
sbb edx 0x5f5b5c80
clc
dec dx
mov al [ rsi - 0x1 ]
not dx
neg dh
sub al bl
dec dx
ror edx cl
add al 0x56
movsx dx dl
sar dl cl
bswap dx
not al
sets dl
rcl edx cl
neg al
sbb dx 0x6fc3
sar dh cl
sub rsi 0x1
adc dx cx
bts dx 0x3
bt eax 0x4
rcl dx 0x6
sub bl al
bt edi 0xb
bt cx bp
movzx rax al
movsx edx al
mov dh dl
rol dh 0x7
seta dl
mov rdx [ r12 + rax * 8 ]
clc
jmp rwxdata
shl al 0x2
mov bx si
mov rax 0x100000000
bts ebx edi
cmp al cl
xor dh 0xaa
sub dx si
add rsi rax
stc
mov rbx rsi
shrd edx eax 0x11
cmp bh bl
ror dh cl
add rsi [ rbp ]
and dh 0xed
mov al [ rsi - 0x1 ]
and edx edi
adc dh dh
shr dx 0x1
sub al bl
sar dl 0x1
neg edx
add al 0x56
bt sp 0xb
dec rdx
btc dx bp
stc
not al
shl dx cl
bsr dx bp
neg al
lea rdx [ rsi + 0x1b2ba2e8 ]
sub rsi 0x1
sbb edx 0x5f83435e
cmc
sub bl al
cmc
bt cx 0x9
cmc
movzx rax al
mov dl 0x25
mov rdx [ r12 + rax * 8 ]
bt ax 0x7
clc
bt sp ax
ror rdx 0x1d
bt sp 0x4
stc
add rdx r13
jmp rdx
ror rdx 0x1d
cmc
add rdx r13
jmp rdx
jmp rwxdata
cmc
ror rdx 0x1d
cmp bh bl
bt sp 0xa
cmc
stc
add rdx r13
jmp rdx
_TLS_Entry_0
jl rwxdata
jmp sub_18017321f
push 0xffffffffe8b4a27e
jmp rwxdata
push 0x2f4ec741
jmp rwxdata
jmp rwxdata
push r8
jmp rwxdata
jmp rwxdata
push rax
jmp rwxdata
push r15
jmp rwxdata
push r11
jmp rwxdata
jmp rwxdata
push rbp
jmp rwxdata
jmp rwxdata
push rdx
jne rwxdata
jmp rwxdata
push r10
jmp rwxdata
push r10
jmp rwxdata
push r12
jmp rwxdata
jmp rwxdata
push rcx
jmp rwxdata
push r12
jmp rwxdata
jmp rwxdata
push rcx
jmp rwxdata
push r9
jmp rwxdata
jmp rwxdata
push r13
jmp rwxdata
push r9
jmp rwxdata
jmp rwxdata
push r13
je rwxdata
push r14
jmp rwxdata
jmp rwxdata
push r14
jmp rwxdata
not rax
pushfq
not r13d
inc al
push rsi
jb rwxdata
push r14
jmp rwxdata
not esi
lea r12 [ rsp - 0x5f8d688e ]
push rbx
setns ah
not rax
mov esi 0x4120086d
push rdi
not ax
lea rdi [ rbp - 0x2553d77c ]
push rdx
dec si
jmp rwxdata
mov r12d ebx
movzx bp bl
push rbx
dec si
jns rwxdata
push [ rwxdata ]
setpo dl
movsx ax bl
jmp rwxdata
xchg bp si
seto bh
movsx r13 cl
xchg r13w ax
push rdi
inc al
setl ah
inc r13
movsx bp bl
push rdx
dec ah
dec r13w
dec r13w
push [ rwxdata ]
setl ah
mov rax 0x0
dec r13
lea rsi [ rbx + 0x7f7ae960 ]
mov r13 rax
dec bp
push rax
bswap rsi
mov esi [ rsp + 0xa0 ]
movsx r12d dl
jmp rwxdata
mov ah al
bswap eax
push rdi
dec r13d
push rdx
movsx ax bl
movsx r13w dl
xchg bp ax
push [ rwxdata ]
js rwxdata
inc eax
mov rax 0x0
bswap r13w
mov r13w bx
setle bh
lea rbp [ rbp + 0x7bfb670d ]
mov r13 rax
seto bh
movzx si bl
dec r12w
push rax
jmp rwxdata
lea rdi [ rdx - 0x26094b83 ]
xchg r12w ax
inc esi
btr bp si
btc di dx
movzx r12 al
ror esi 0x8
ror bp cl
add bp bp
sub rbp 0xffffffffec23f2f7
not esi
cmc
sbb edi 0x209ac0fa
mov rbp rsp
cmc
rcr di cl
sub rsp 0x140
bsr di si
shr di 0x9
cmp ch dh
bsr r12w bp
and rsp 0xfffffffffffffff0
neg r12w
cmc
inc r12d
mov rdi rsp
setae bh
shrd r12d esp cl
lea r12 [ rwxdata ]
btr ax cx
btc rbx rcx
or bx bp
mov rax 0x100000000
clc
shl bx cl
add rsi rax
stc
sub al bh
bsf bx bx
mov rbx rsi
sets dh
cmc
add rsi [ rbp ]
movzx edx bl
mov al [ rsi - 0x1 ]
neg dx
neg dx
sub al bl
sbb dh 0x39
cmc
neg dl
rcr dh 0x3
add al 0x56
shl dx 0x3
not al
cmc
ror dl cl
movzx dx dl
neg al
shl dx 0x4
sub rsi 0x1
bswap dx
rol dx 0xf
sub bl al
lea rdx [ rbp + 0x2a8d9d65 ]
clc
movzx rax al
mov dx bx
bt di si
movzx edx dl
mov rdx [ r12 + rax * 8 ]
stc
ror rdx 0x1d
test ah cl
stc
test bx 0x9c50
test esi 0x4dd3f04d
add rdx r13
jmp rdx
mov ax dx
mov al dl
setge bl
mov rax 0x0
xchg si di
mov r13 rax
bswap si
bswap si
movzx rsi cl
jmp rwxdata
mov rax 0x0
movsx r13w cl
movsx rsi bl
not r13w
setle dl
mov r13 rax
xchg edi esi
bswap si
jmp rwxdata
lea rsi [ rsp + 0x75b45fa5 ]
dec edi
mov esi [ rsp + 0xa0 ]
bswap ebp
lea rbp [ rsi - 0x788633d8 ]
movsx bp cl
inc esi
bswap di
lea rbp [ rbp - 0x58554b91 ]
jmp rwxdata
push rax
jmp rwxdata
push rax
inc esi
not si
xchg si bp
mov esi [ rsp + 0xa0 ]
bswap di
inc esi
bts bp di
xchg rbp rdi
jmp rwxdata
ror esi 0x8
rcr ebp 0x12
bswap ebp
movzx di cl
not esi
and bp sp
rcr di 0xe
movzx edx cl
mov rbp rsp
lea rax [ rsi + 0xd5b6526 ]
xadd di dx
test cl 0x2
sub rsp 0x140
movzx eax al
lea rax [ 0xffffffffaf4d7341 ]
bsf edx esi
sbb edi edi
and rsp 0xfffffffffffffff0
inc di
bts r12w dx
mov rdi rsp
neg ebx
jmp rwxdata
lea rax [ rsi * 8 + 0x5fa0df5d ]
lea rsi [ rax * 8 + 0x4490a16e ]
dec si
mov esi [ rsp + 0xa0 ]
not dx
jmp rwxdata
setb al
ror esi 0x8
adc edi esp
xadd di bp
not esi
inc bp
bsf rdi rcx
bt sp bp
inc bp
mov rbp rsp
stc
jle rwxdata
lea r12 [ rwxdata ]
sub bh 0xc0
setne ah
bswap ax
mov rax 0x100000000
bswap dx
add rsi rax
bt eax ebp
inc bx
rcr dh 0x5
mov rbx rsi
neg al
and dl 0xb4
add rsi [ rbp ]
movsx dx bl
movzx dx dl
test dl bh
cmc
mov al [ rsi - 0x1 ]
add rdx 0xffffffffa1bcad1d
add edx 0x50fa8e2e
dec dh
neg dh
sub al bl
clc
dec dh
shl dl cl
add al 0x56
add dl 0x29
adc dl 0xf8
rcr dl 0x4
inc dx
not al
add dl al
add dx 0x658
rcl dx cl
neg al
rcl dl cl
sub rsi 0x1
adc edx 0x7cfb8be5
movsx edx dl
ror dl cl
sub bl al
rol dh cl
cmc
rcl dh cl
rcl rdx cl
movzx rax al
rcl edx 0x1e
movzx rdx bl
rcr rdx 0x10
mov rdx [ r12 + rax * 8 ]
clc
ror rdx 0x1d
stc
test bx bx
add rdx r13
jmp rdx
jmp rwxdata
shr rdi 0x9
sub rsp 0x140
movsx rdi bl
jmp rwxdata
sub rsp 0x140
sub bl 0x34
btc di bx
and rsp 0xfffffffffffffff0
bsf r12w di
cmp bh 0x7a
mov rdi rsp
sub r12w ax
stc
shr bl 0x2
lea r12 [ rwxdata ]
clc
mov rax 0x100000000
clc
adc dh dl
btc dx 0x3
add rsi rax
test al dl
lea rdx [ rbp + 0x375736a6 ]
btr bx bp
mov rbx rsi
shld edx esi 0x7
inc dl
ror al 0x1
add rsi [ rbp ]
neg dl
jmp rwxdata
lea r12 [ rax + 0x216126fa ]
inc esi
rcl di cl
jmp rwxdata
movsx r12 dl
btr dx 0xf
and rsp 0xfffffffffffffff0
sbb edi ebp
jmp rwxdata
mov al [ rsi - 0x1 ]
xor dl ah
or dh dh
dec dl
sub al bl
and dx 0x6bf3
add al 0x56
rcl dl cl
lea rdx [ rbx + 0x3f91e674 ]
bt si 0x1
and dl ch
not al
add edx esi
neg al
and dx 0x2b1f
sar dh 0x4
shld rdx rdi cl
sub rsi 0x1
shl rdx 0x27
sub bl al
movzx dx al
mov rdx rbx
cmc
jmp rwxdata
rcr bp 0xb
btr di sp
ror esi 0x8
movsx bp dl
xchg bp bx
not esi
cmc
btc bp 0x4
bsf r12 rbx
mov rbp rsp
stc
xchg bx r12w
sub rsp 0x140
jmp rwxdata
mov rdi rsp
xor bl bl
test bl 0x25
btr ax 0xb
shr edx cl
lea r12 [ rwxdata ]
jmp rwxdata
movzx rax al
movzx dx al
rcl dl cl
cmc
rcr dl cl
mov rdx [ r12 + rax * 8 ]
jmp rwxdata
bsr r12w si
bsf r12w dx
and rsp 0xfffffffffffffff0
movsx di dl
shld ebx ebp 0xf
mov rdi rsp
and r12w bp
ror r12w 0xb
lea r12 [ rwxdata ]
not bl
mov rax 0x100000000
mov bh 0xcc
shr rdx cl
lea rbx [ rsp + 0x3b152d3a ]
add rsi rax
adc bl 0x3e
shld dx si 0xe
mov rbx rsi
or al dl
add rsi [ rbp ]
sbb edx 0x5f5b5c80
clc
dec dx
mov al [ rsi - 0x1 ]
not dx
neg dh
sub al bl
dec dx
ror edx cl
add al 0x56
movsx dx dl
sar dl cl
bswap dx
not al
sets dl
rcl edx cl
neg al
sbb dx 0x6fc3
sar dh cl
sub rsi 0x1
adc dx cx
bts dx 0x3
bt eax 0x4
rcl dx 0x6
sub bl al
bt edi 0xb
bt cx bp
movzx rax al
movsx edx al
mov dh dl
rol dh 0x7
seta dl
mov rdx [ r12 + rax * 8 ]
clc
jmp rwxdata
shl al 0x2
mov bx si
mov rax 0x100000000
bts ebx edi
cmp al cl
xor dh 0xaa
sub dx si
add rsi rax
stc
mov rbx rsi
shrd edx eax 0x11
cmp bh bl
ror dh cl
add rsi [ rbp ]
and dh 0xed
mov al [ rsi - 0x1 ]
and edx edi
adc dh dh
shr dx 0x1
sub al bl
sar dl 0x1
neg edx
add al 0x56
bt sp 0xb
dec rdx
btc dx bp
stc
not al
shl dx cl
bsr dx bp
neg al
lea rdx [ rsi + 0x1b2ba2e8 ]
sub rsi 0x1
sbb edx 0x5f83435e
cmc
sub bl al
cmc
bt cx 0x9
cmc
movzx rax al
mov dl 0x25
mov rdx [ r12 + rax * 8 ]
bt ax 0x7
clc
bt sp ax
ror rdx 0x1d
bt sp 0x4
stc
add rdx r13
jmp rdx
ror rdx 0x1d
cmc
add rdx r13
jmp rdx
jmp rwxdata
cmc
ror rdx 0x1d
cmp bh bl
bt sp 0xa
cmc
stc
add rdx r13
jmp rdx
_start
jmp j_sub_18017829d
j_sub_18017829d
jmp sub_18017829d
