sub_4249e2
push 0x9afd6efd
lea esp [ esp + 0x10 ]
jae rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
stc
clc
call sub_4e95dc
mov eax eax
mov ebp 0x420a0c61
xchg esp eax
add dh ch
xchg ebp eax
into
in eax 0xe6
in eax dx
0xcdc4eef1 0xe2dd
sub_424c8f
jmp rwxdata
[ edi ] [ esi ]
pop esi
not si
pushfd
pushfd
mov esi [ esp + 0x30 ]
push ebp
push ebx
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_4e63f2
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4e17f1
sub ebx edi
add al 0xd8
pop ecx
or al [ edx - 0x34 ]
dec ecx
inc eax
xchg ebp eax
movsd [ edi ] [ esi ]
inc ebp
sub eax 0x358e5d16
lea esi [ edx - 0x5176ff00 ]
int3
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_424ca1
push 0x92c7db86
xor eax eax
jmp rwxdata
pushad
mov [ esp + 0x8 ] dl
jmp rwxdata
lea esp [ esp + 0x28 ]
call sub_42560c
push ebx
pushfd
pushad
lea esp [ esp + 0x28 ]
jae rwxdata
mov al 0xde
lodsb [ esi ]
pushad
pushfd
mov [ esp ] 0x2fed
not al
mov [ esp ] 0x5f3b
call sub_4e7525
[ edi ] [ esi ]
pop esi
not si
pushfd
pushfd
mov esi [ esp + 0x30 ]
push ebp
push ebx
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
jmp rwxdata
push 0xf8a4d147
pushad
mov bl 0x2
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
inc ecx
not al
mov al [ esp ]
mov [ esp + 0x4 ] al
mov al 0x10
lea esp [ esp + 0x24 ]
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
pushad
push 0x9f992778
pushfd
pushfd
lea esp [ esp + 0x2c ]
call sub_42560c
pushfd
pushad
adc al al
pushad
pushfd
pushfd
lea esp [ esp + 0x4c ]
jae rwxdata
pushad
push 0x30826566
mov [ esp ] dx
call sub_4e179f
push ebx
lea esp [ esp + 0x4 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_4e63f2
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_4e6d6b
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp sub_4e9c52
call sub_424ca1
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4e17f1
sub ebx edi
add al 0xd8
pop ecx
or al [ edx - 0x34 ]
dec ecx
inc eax
xchg ebp eax
movsd [ edi ] [ esi ]
inc ebp
sub eax 0x358e5d16
lea esi [ edx - 0x5176ff00 ]
int3
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_424cd4
lea esp [ esp + 0x4 ]
jle rwxdata
pushfd
push 0xb0e0333
push 0x96e5822b
push [ esp + 0x4 ]
mov [ esp + 0xc ] 0x37740108
jmp rwxdata
pushfd
mov [ esp ] 0x37740108
pushfd
call sub_4e6f56
pushad
pushfd
pushfd
mov [ esp + 0x30 ] 0xb9d887c2
mov [ esp + 0x4 ] 0x6666
pushfd
mov [ esp + 0x4 ] di
mov [ esp ] 0xd5
lea esp [ esp + 0x34 ]
jmp sub_4eb913
sub_42505b
lea esp [ esp + 0x48 ]
je rwxdata
mov bl 0x82
adc bh bh
xor bh al
shl bh cl
mov bx [ esi ]
clc
call sub_4dc530
push 0x3a85ad70
cmp ebx 0x3
push ecx
lea esp [ esp + 0x8 ]
je rwxdata
pushfd
cmc
sbb bl 0xb9
mov bx [ esi ]
pushad
and ebx 0xfff
bt bx 0xd
pushfd
cmc
add [ ebx + edi ] edx
lea esp [ esp + 0x28 ]
pushad
push 0xbbd175a5
lea esp [ esp + 0x24 ]
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp rwxdata
jmp sub_4e4e41
sub_4250a1
pushfd
mov ebx [ esp + 0x4 ]
movsx si bl
push [ esp ]
mov si 0xc2a5
lea esi [ eax * 8 + 0x70564433 ]
mov edi [ esp + 0xc ]
lea esi [ ecx - 0x42ca88f9 ]
pop esi
mov esi [ esp + 0xc ]
push ebx
pushad
call j_sub_42f303
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_4e6d6b
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp sub_4e9c52
sub_4255f1
mov [ esp ] 0x40
stosb [ edi ]
mov [ esp ] 0xd3
mov [ esp ] 0xba
push 0x25920b29
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_4e63f2
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4e17f1
sub ebx edi
add al 0xd8
pop ecx
or al [ edx - 0x34 ]
dec ecx
inc eax
xchg ebp eax
movsd [ edi ] [ esi ]
inc ebp
sub eax 0x358e5d16
lea esi [ edx - 0x5176ff00 ]
int3
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_42cccc
lea esi [ esp + 0x4 ]
add esp 0x4
clc
sub edi 0x4
bt di di
push [ edi ]
pushfd
mov [ esp ] 0x1b8d329d
cmp edi ebx
mov [ esp ] 0x1c
push 0x907e7b46
pushad
jmp rwxdata
lea esp [ esp + 0x28 ]
ja rwxdata
cmc
jmp rwxdata
xor al ch
pushad
xor al 0x3a
shl al 0x7
sub ebx edi
mov di dx
add al ch
dec al
lea esp [ esp + 0x20 ]
add ebx esp
mov al dl
mov al 0x13
cmp cx 0x1e0b
mov edi ebx
not al
adc al 0x65
not al
mov al 0x2e
call sub_4e5206
sub_42f5a0
lea esp [ esp + 0x4 ]
jne rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
push 0xc8070629
inc esi
push 0xa0ee37ac
inc edi
pushad
lea esp [ esp + 0x28 ]
jmp sub_4e0194
sub_42f5c0
pushad
jmp rwxdata
mov esp esi
pushfd
push [ esp ]
pushad
lea esp [ esp + 0x28 ]
jmp rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_42fa39
cmp eax 0x7f
push esi
lea esp [ esp + 0xc ]
ja rwxdata
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
call sub_4e7b99
not bl
jmp rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_4e3d9c
sub_42fc0c
shl eax 0x8
pushfd
push [ esp + 0x4 ]
lodsb [ esi ]
pushfd
push 0xde99be18
not al
jmp rwxdata
call sub_437a94
jmp rwxdata
pushad
lea esp [ esp + 0x34 ]
je rwxdata
jmp rwxdata
pushfd
movsx edx al
jmp sub_4e6307
cmc
add eax 0x1e998473
push edx
pop ebp
lds esp [ 0x28255544 ]
movsb [ edi ] [ esi ]
loop rwxdata
pushfd
sbb [ edx + 0x7325741b ] bh
aam 0x58
aaa
jmp 0xffffffffb751ae53
fstp [ eax + eax * 8 - 0x79 ]
jbe rwxdata
sbb eax 0xfd03de23
mov eax 0xba17db70
clc
mov [ 0x16a7405c ] eax
movsb [ edi ] [ esi ]
dec esi
imul edi edx 0x10
sub eax 0xf407130f
dec edx
push 0x566978f
jae rwxdata
outsd
fwait
adc al 0xda
jle rwxdata
dec esi
xor edx [ eax ]
adc dh [ ebx - 0x5 ]
loopne rwxdata
cdq
push ds
mov ah 0xe2
cmp [ eax - 0x61 ] al
mov [ esi + eax - 0x4f ] es
xor eax eax
bt si 0x6
cmc
test si 0x6b2
clc
or ebx ebx
call j_sub_4e8312
nop
fisttp [ esi - 0x6e ]
push ebx
or al [ edx - 0x4b ]
jno rwxdata
xchg ch dh
sub_42fe48
lea esp [ esp + 0x24 ]
call sub_42560c
push 0x42798f75
jns rwxdata
dec eax
xchg edi eax
cmp edi [ ebx - 0x3205142f ]
or [ esp + eax ] ebp
inc ecx
adc [ edx ] cl
cwde
xchg esp eax
shr ebx 0x1
cli
int 0x9
sub al 0x4
call sub_4e2d7a
rcr [ 0x6fad20e ] 0x1
inc edx
cmc
add [ esi ] eax
0xc2893a09 0x5601
mov [ ebp + 0x3d6c3dc5 ] gs
movsd [ edi ] [ esi ]
popad
mov eax [ 0xffffffffadce1561 ]
outsb
adc al 0xda
mov edi 0x3d6cbaae
or ah [ 0x2740a2be ]
add al 0x60
shl [ edx - 0x4c ] cl
mov [ 0xffffffffa19c619e ] eax
loope rwxdata
sub_430357
cld
push [ esp + 0x3e ]
popf
mov [ esp ] 0x7166
inc esi
push edi
lea esp [ esp + 0x44 ]
ja rwxdata
call sub_4dc61f
call sub_42fe48
add [ eax ] al
add [ eax ] al
adc dl dl
pushfd
pushfd
push esi
push [ esp + 0xc ]
retn 0x10
sub_430499
sub cl bl
bsf cx ax
mov ecx [ esi + 0x4 ]
stc
or ecx ecx
push ebx
lea esp [ esp + 0x8 ]
je rwxdata
mov edi 0x838201de
setb cl
mov si cx
pop esi
setb cl
jmp rwxdata
neg edi
bts bx 0x1
shl edi 0x1
add [ ebp - 0x4 ] ecx
shld bx bx 0x3
sar bx 0x1
shrd di sp cl
sub ecx 0x8
sar bl cl
xchg di bx
bswap bx
shr ecx 0x1
shl bh 0x6
mov edi [ esi ]
add bh 0x96
shl bx cl
add edi [ ebp + 0x10 ]
call sub_4e1ebd
movzx cx bl
not cx
pop edi
mov ch 0xb2
movsx cx cl
pop ebx
pushfd
call sub_4e0b71
and [ ebp + 0xa ] 0x420a42e6
rcr ebp 0x51
mov [ esi - 0x3 ] edi
fisub [ edx + ebp * 8 ]
sub_4304fc
lea esp [ esp + 0x8 ]
jne rwxdata
pushfd
pushfd
push esi
push [ esp + 0xc ]
retn 0x10
push ebx
pushfd
pushad
not dl
pushf
pop [ esp + 0x26 ]
jmp rwxdata
setne dl
mov dl [ esi ]
stc
mov [ esp ] 0xa31c
pushfd
not dl
call sub_4e1db8
sub_430697
lea esp [ esp + 0x54 ]
call sub_4e6d5e
cmc
clc
cmp ch 0xd7
js rwxdata
cmc
cmc
cmc
cmp eax 0x7d00
pushad
pushad
jmp rwxdata
cmp eax 0x7d00
push ebp
mov [ esp ] 0xdb
pushfd
lea esp [ esp + 0x8 ]
jae rwxdata
lea esp [ esp + 0x40 ]
jae rwxdata
call sub_4e7b99
cmc
bt ecx 0x6
cmp ah 0x5
jmp rwxdata
cmc
push ebp
push ebp
stc
cmp ah 0x5
call sub_4e1afb
xor al 0xd
mov bl 0xa6
jns rwxdata
pushad
push esi
lea esp [ esp + 0x24 ]
jae rwxdata
xchg ecx eax
sub [ ecx + 0x5e ] 0x8c
adc [ ecx ] 0x62
js rwxdata
inc edx
mov dl 0x23
sbb al [ ecx - 0x4f3d0242 ]
lodsd [ esi ]
setns bl
inc ecx
push 0x166a32ab
call sub_42fa39
aad 0x5f
mov eax [ ebp - 0x8 ]
test dl 0x2
shl eax 0x1
jmp rwxdata
mov bl 0x47
push edi
dec esp
or dh [ ecx ]
push ebp
scasd [ edi ]
sub cl [ ecx - 0x1728a09 ]
add ebp [ eax ]
mov dh 0x60
test [ edi + 0x70 ] dl
mov [ eax + 0x2344c2ea ] bh
xor cl [ edi - 0x14 ]
or [ ecx - 0x50 ] al
pop esp
aaa
out 0xd6 eax
cmp bl [ ecx - 0x2b ]
push es
mov al [ 0xffffffffcc3b357f ]
cmp al [ edx ]
sub edi [ ebp + 0x6cc8bb1c ]
sti
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
not bl
jmp rwxdata
jmp rwxdata
jge rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
je rwxdata
or [ ebx - 0x67 ] dl
sub cl ch
jpe rwxdata
xchg esp eax
lds ebp [ ebx - 0x73a29d5a ]
outsb
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_4e3d9c
jmp rwxdata
pushad
mov [ ebp - 0x4 ] eax
mov [ esp + 0x4 ] edx
mov [ esp + 0x1c ] eax
pushad
mov [ esp + 0x38 ] 0x0
pop eax
lea eax [ LocalAlloc@IAT ]
mov [ esp + 0x8 ] esp
mov [ esp + 0x30 ] rwxdata
mov [ esp ] dl
mov [ esp ] ch
pushfd
push [ eax ]
pop [ esp + 0x30 ]
mov [ esp + 0x4 ] 0xc5
push [ esp + 0x4 ]
pushfd
push [ esp + 0x38 ]
retn 0x3c
bound ebp [ edi - 0x39012705 ]
jmp rwxdata
imul ebx [ eax - 0x63ea26ae ] 0xb46dfe4e
dec esi
scasb [ edi ]
xor [ esi ] eax
xchg ebx eax
test eax 0xc20a2924
int1
push edi
sub al 0xd8
fldcw [ esi ]
cmp ebx esp
shl [ eax ] 0x4c
into
pop edi
cmp [ edx + 0xa ] 0x42
movsb [ edi ] [ esi ]
mov eax 0xddbd783e
adc bh cl
fsubr [ edi + 0x4b3b1284 ]
xlat
pop ds
jmp rwxdata
cmc
sub al 0x12
add eax 0x1e998473
push edx
pop ebp
lds esp [ 0x28255544 ]
movsb [ edi ] [ esi ]
loop rwxdata
pushfd
sbb [ edx + 0x7325741b ] bh
aam 0x58
aaa
jmp 0xffffffffb751ae53
fstp [ eax + eax * 8 - 0x79 ]
jbe rwxdata
sbb eax 0xfd03de23
mov eax 0xba17db70
clc
mov [ 0x16a7405c ] eax
movsb [ edi ] [ esi ]
dec esi
imul edi edx 0x10
sub eax 0xf407130f
dec edx
push 0x566978f
jae rwxdata
outsd
fwait
adc al 0xda
jle rwxdata
dec esi
xor edx [ eax ]
adc dh [ ebx - 0x5 ]
loopne rwxdata
cdq
push ds
mov ah 0xe2
cmp [ eax - 0x61 ] al
mov [ esi + eax - 0x4f ] es
xor eax eax
bt si 0x6
cmc
test si 0x6b2
clc
or ebx ebx
call j_sub_4e8312
nop
fisttp [ esi - 0x6e ]
push ebx
or al [ edx - 0x4b ]
jno rwxdata
xchg ch dh
sub_4306d5
mov [ esp ] 0x26
neg al
test dh 0xbb
pushfd
push 0x7c285284
stc
not al
cmp bh 0x32
sub al 0xee
pushfd
test bh dl
cmp ah 0x67
cmp al [ edi ]
pushfd
not al
lea edi [ edi + 0x1 ]
setg ah
movzx ax dl
jmp rwxdata
mov eax [ esp + 0x44 ]
jmp rwxdata
mov [ esp + 0x4 ] 0x5742fea4
call sub_4dc7b7
rol [ edi ] 0x1
enter 0x2424 0xa
inc edx
shr [ ebp - 0x7e1dfb52 ] 0x1
cmpsb [ esi ] [ edi ]
fsubr st1
enter 0xa4e5 0xb1
cmp [ ecx ] bl
mov [ ebp - 0x5c4301fb ] bh
test [ edi - 0x6ed7c45c ] 0xa025f933
inc eax
xchg [ edx + esi * 4 - 0x54794861 ] edi
xor al [ edi + 0x7d ]
aam 0x1b
pop ebp
pop esp
enter 0xd587 0x88
fadd [ edi ]
sub eax 0xdc33f8b4
movsd [ edi ] [ esi ]
or al 0xfe
dec esi
loope rwxdata
xchg edx eax
sbb esp [ eax + 0x303102 ]
push ds
0x5bcff0a3 0xa9cb
xchg ah ah
push eax
inc ebp
xchg cl cl
mov [ ebp - 0x2237e5cb ] ss
loop rwxdata
loop rwxdata
push edi
xor esp ecx
rol [ ebx + 0x1e ] 0x1
pop esi
loope rwxdata
pop edx
mov eax 0x7d0dba52
adc [ edx ] al
iretd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x2d ] dh
push cs
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x21 ] dl
push cs
add [ esi + 0x21 ] dl
push cs
add [ ecx + 0xe ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x21 ] bl
push cs
add [ ebx - 0x32 ] bl
xor ebp [ ebx + 0x582cdf30 ]
mov esp 0xe2d729fd
sub_430706
lea esp [ esp + 0x28 ]
ja rwxdata
call sub_42f5c0
pop ebp
pop esi
adc edi edi
dec edi
or al [ edx - 0x28 ]
and eax 0xb47e75fe
dec ebp
jpe rwxdata
pushfd
imul edx edx 0xa
push esp
add edx eax
push 0x4c56b86e
push ebp
pushfd
lea esp [ esp + 0x14 ]
jmp rwxdata
add al 0xc3
outsd

jb rwxdata
rcl al cl
ror al cl
cmp bp bx
add edi 0x1
neg al
add al dl
not al
mov al [ edi ]
jmp rwxdata
idiv [ esi ]
in eax dx
dec edx
inc ebp
add ebx [ edi ]
in eax 0x1f
or al 0x58
push esi
movsb [ edi ] [ esi ]
mov bh 0x46
idiv [ ebx - 0x686ff7b0 ]
and [ eax - 0x7b ] edx
cmc
and eax 0xf83585a4
jle rwxdata
pushfd
test bl dh
test al al
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
xor bl dh
sub [ esi ] esp
loop rwxdata
and ch [ ebx ]
out 0x3c eax
mov bl 0x5f
push ebx
into
retn
ror cl 0x5
mov edi edx
sub ch dh
stc
not al
mov ecx edi
adc al al
mov al [ ecx ]
pushad
mov ah al
clc
cmp dl 0x72
bt dx 0xa
stc
add al 0xee
stc
cmc
cmp bl ch
not al
pushfd
jmp sub_4e3bcd
bt ax cx
jmp rwxdata
fcmovu st6
loope rwxdata
push ds
jmp rwxdata
0x7aea58ca 0xd54
mov eax [ 0x29de32e8 ]
loop rwxdata
pushad
sub al 0x30
mov [ esp ] 0xf4
cmp al 0x9
pushfd
jmp sub_4e6f51
sub_4307f2
not esi
setns bl
movzx edi dl
pop ebx
movsx si cl
pushad
mov edi [ esp + 0x20 ]
pushad
movzx si al
mov esi [ esp + 0x44 ]
jmp rwxdata
mov esp ebp
jmp rwxdata
jmp rwxdata
pop ebp
pushad
mov [ esp + 0x4 ] 0x9a
push [ esp + 0x20 ]
retn 0x2c
sub_430c4d
lea esp [ esp + 0x10 ]
jne rwxdata
jmp rwxdata
shld di sp 0x1
mov edi [ edx + 0x24 ]
pushfd
mov [ esp ] al
add edi eax
call $+5
mov [ esp + 0x4 ] edx
test ecx 0xb08175d5
pushad
movzx ecx [ edi + ecx * 2 ]
add esp 0x28
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
pushfd
pushad
push 0x842f5182
mov [ esp + 0x24 ] eax
setge al
mov al 0x9e
not al
pushfd
lodsb [ esi ]
bt ax bp
clc
sub al 0xa3
clc
push ecx
clc
pushfd
xor al 0xa8
jmp rwxdata
call sub_4306d5
sub_437ac2
lea esp [ esp + 0x8 ]
ja rwxdata
pushfd
add esp 0x4
jo rwxdata
stc
pushfd
add ah 0x20
add esp 0x4
pushfd
push [ esp ]
cmp al dl
or al al
call sub_4e51d5
into
add ecx [ 0x4206f818 ]
aas
retn 0xbeff
stc
bt bp 0x7
or al al
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] 0xd9
lea esp [ esp + 0x4 ]
je rwxdata
stc
jmp rwxdata
cmp bp 0x49e8
cmc
pushfd
bt di dx
cmp al ah
jmp sub_437e2a
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_437c37
mov [ esp + 0x4 ] 0xe2
push edx
lea esp [ esp + 0x10 ]
call sub_42560c
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
mov al 0xde
lodsb [ esi ]
pushad
pushfd
mov [ esp ] 0x2fed
not al
mov [ esp ] 0x5f3b
call sub_4e7525
[ edi ] [ esi ]
pop esi
not si
pushfd
pushfd
mov esi [ esp + 0x30 ]
push ebp
push ebx
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
jmp rwxdata
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
push 0x61166f96
mov bl 0x2
pushfd
jmp rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
push ebx
inc ecx
pushfd
setae al
not al
mov al 0x10
mov [ esp + 0xc ] 0x6d
mov [ esp ] 0xbb
jmp rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_4e63f2
push [ esp + 0x4 ]
lea esp [ esp + 0x14 ]
call sub_42560c
pushad
adc al al
mov [ esp + 0xc ] ah
lea esp [ esp + 0x20 ]
jae rwxdata
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4e17f1
sub ebx edi
add al 0xd8
pop ecx
or al [ edx - 0x34 ]
dec ecx
inc eax
xchg ebp eax
movsd [ edi ] [ esi ]
inc ebp
sub eax 0x358e5d16
lea esi [ edx - 0x5176ff00 ]
int3
pushad
push 0x9f992778
pushfd
pushfd
lea esp [ esp + 0x2c ]
call sub_42560c
pushfd
pushad
adc al al
pushad
pushfd
pushfd
lea esp [ esp + 0x4c ]
jae rwxdata
pushfd
lea esp [ esp + 0x4 ]
jne rwxdata
jmp rwxdata
pushad
push 0x30826566
mov [ esp ] dx
call sub_4e179f
push ebx
lea esp [ esp + 0x4 ]
jae rwxdata
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_4e6d6b
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp sub_4e9c52
call sub_424ca1
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
not bl
jmp rwxdata
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
stosb [ edi ]
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_4e3d9c
sub_437d50
call sub_42505b
push ebx
push edx
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_4e1739
call sub_4e7cae
sahf
mov ecx 0x9c3964a
inc edx
lodsb [ esi ]
push cs
cld
jpe rwxdata
bound edx [ ebp - 0x1e ]
int 0x5f
or [ eax - 0x7ac996a1 ] bl
mov bl 0xaf
push cs
xchg [ edx + 0x47 ] edi
popad
jns rwxdata
push ss
sbb eax 0xa4db9e4b
or [ eax ] eax
add [ edi + ebp * 2 + 0x63 ] cl
popad
insb
inc esi
jb rwxdata
mov ch 0x48
jne rwxdata
fcom [ edi - 0x54e7a120 ]
mov dh 0x2d
mov eax 0xb9a49f31
jb rwxdata
lodsb [ esi ]
test [ ebx + 0x49b41c0f ] al
adc edi [ edi ]
dec ebp
and cl [ esi + 0x461e3bad ]
add eax 0x41ad667b
ror [ esi - 0x3d90da52 ] cl
dec esi
cdq
stosd [ edi ]
sbb dl [ edi ]
nop
imul ecx
add al 0x54
add [ eax ] al
pushad
mov [ esp + 0x1c ] 0x19e4c52c
mov [ esp ] si
lea esp [ esp + 0x1c ]
jmp rwxdata
add [ gs : ebp - 0x17f7db9c ] cl
adc dl [ eax ]
add al ch
xor [ ebp - 0x46620000 ] 0x4a
xchg esi eax
retn
jmp rwxdata
lahf
movsb [ edi ] [ esi ]
mov ecx 0x84acf172
or [ edi ] 0x1c
mov ah 0x49
adc dh [ ebx - 0x20 ]
cld
sub ch dh
shl [ 0x689053ae ] 0x1
mov eax [ gs : 0xffffffffb5a65ca4 ]
and edx [ edx + ebp * 2 - 0x4d ]
lea esp [ edx + 0x22 ]
push ecx
jpe rwxdata
sub [ ecx + ecx * 8 ] dh
loop rwxdata
push edi
pushad
jmp rwxdata
xchg edi eax
mov al [ 0xffffffffa5458218 ]
lea esp [ ecx - 0xd ]
pop edx
mov edx 0xe69a6819
int 0x4f
out dx al
push ebp
mov ebp 0x31b9321b
fild [ edx - 0x4a69524a ]
add al 0x1d
dec ebx
sahf
inc ebp
movsd [ edi ] [ esi ]
lahf
mov al 0x41
dec edx
0x3431e7b9 0x13ca
call sub_4ea4c5
sub_437e1a
push eax
jmp rwxdata
lea esp [ esp + 0xc ]
je rwxdata
shr bh 0x1
sub bl ch
bsf bx di
stc
mov bx [ esi ]
pushfd
mov [ esp ] 0xdb91
jmp rwxdata
bt bx 0xc
pushad
pushad
cmp ebx 0x2
mov [ esp ] 0xe2766b68
call sub_437d50
and ebx 0xfff
bt esp edx
add esp 0x4
jpo rwxdata
push 0x2f069c78
bt si 0xa
cmc
call sub_430395
pushad
add [ ebx + edi ] ax
pushad
push 0xa02bac20
push [ esp ]
lea esp [ esp + 0x48 ]
jmp rwxdata
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_4e4e41
sub_437e2a
push 0xde633361
pushfd
push [ esp + 0x4 ]
lea esp [ esp + 0x10 ]
jne rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
call sub_4e5475
pushad
pushfd
pushfd
mov [ esp + 0x30 ] 0xb9d887c2
mov [ esp + 0x4 ] 0x6666
pushfd
mov [ esp + 0x4 ] di
mov [ esp ] 0xd5
lea esp [ esp + 0x34 ]
jmp sub_4eb913
sub_438002
push 0xc932b4c4
jmp rwxdata
lea esp [ esp + 0x30 ]
je rwxdata
movzx di cl
pop ebx
not di
pushfd
mov edi [ esp + 0x4 ]
mov bp 0x2fa5
xchg bp si
xchg bp si
mov esi [ esp + 0x8 ]
not bp
mov [ esp + 0x8 ] 0xda610d8c
pop ebp
mov ebp [ esp + 0x8 ]
pushad
mov [ esp + 0x4 ] 0xe7
mov [ esp + 0x4 ] 0x5f
pushfd
push [ esp + 0x30 ]
retn 0x3c
call sub_430517
sub_43821f
pushfd
pushad
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4dc7b7
lea esp [ esp + 0x4c ]
ja rwxdata
cmc
bt bx 0x8
cmc
cmp ecx [ ebp - 0x4 ]
push 0x947ef7c7
call sub_4dc93b
cmp eax 0x1a3ad6d1
or al [ edx + 0x1d ]
add ecx ebp
cdq
stosb [ edi ]
call 0x236f60aa
retn 0x5860
pushad
jmp rwxdata
lea esp [ esp + 0x20 ]
jb rwxdata
bt eax ecx
jmp rwxdata
call sub_4e162c
cmpsb [ esi ] [ edi ]
fwait
cmp ecx [ ebp - 0x8 ]
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
and si cx
sub ecx 0x1
sar edi 0x1f
mov [ ebp - 0x4 ] ecx
bt dx di
stc
mov ecx [ ebp - 0x8 ]
adc di 0x9262
inc si
add ecx [ ebp - 0x4 ]
dec di
shr ecx 0x1
btr si 0x2
pushfd
ror edi cl
cmc
mov edi [ ebx + ecx * 4 ]
btr si si
shl si cl
add edi eax
call j_sub_4e19ea
adc bl [ ebx ]
pushfd
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
pushfd
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jbe rwxdata
pop esi
mov esi esp
inc [ eax ]
add [ eax ] al
and [ edx ] al
adc al 0x20
inc edx
add [ eax ] bl
and [ edx ] al
cmp [ ecx + 0x4e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esi
push 0x4e
add [ eax ] al
add [ ebx ] bh
dec ebp
clc
or al [ edx + 0x57 ]
dec ebx
retn
sub_4dc7fa
push [ esp ]
lea esp [ esp + 0x8 ]
ja rwxdata
rol ah cl
xor ah 0x79
add ah ch
sbb ah bl
mov ah [ esi ]
push 0xd1ab8eb8
cmp ah 0x41
jmp rwxdata
dec ah
setge ah
add al 0x20
mov [ esp ] 0xaf47
pushfd
mov [ esp ] al
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
add esp 0x4
jo rwxdata
stc
bt si 0x3
cmp ah 0x5a
pushfd
call sub_437ac2
iretd
pushfd
push [ esp ]
cmp al dl
or al al
call sub_4e51d5
into
add ecx [ 0x4206f818 ]
aas
retn 0xbeff
stc
bt bp 0x7
or al al
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] 0xd9
lea esp [ esp + 0x4 ]
je rwxdata
stc
jmp rwxdata
cmp bp 0x49e8
cmc
pushfd
bt di dx
cmp al ah
jmp sub_437e2a
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_4dcad4
mov [ esp + 0x8 ] al
lea esp [ esp + 0xc ]
jae rwxdata
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_4e6d6b
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp sub_4e9c52
stc
jg rwxdata
push esi
pushfd
sub eax eax
mov [ esp + 0x4 ] bl
call sub_437c37
clc
xor eax eax
call j_sub_4e55e0
sub_4dcb0e
pushfd
jmp rwxdata
push [ esp + 0x8 ]
dec dl
jmp rwxdata
jmp rwxdata
clc
rol dl 0x1
cmc
cmp bl 0x1b
call sub_430357
stosd [ edi ]
lodsb [ esi ]
sub eax 0x420a03c1
xor al 0x48
dec ebp
dec esp
jns rwxdata
scasd [ edi ]
into
xchg edi eax
xor [ edx + 0x7f ] esi
sbb [ ebp - 0x2b8f2cc1 ] ebp
nop
sti
popad
pop eax
imul edi ecx 0x4599b831
mov al [ eax ]
and eax 0x49cda5a4
push 0xd9714445
xor [ esi - 0xf ] ebp
bswap edx
mov al 0x52
jmp 0xfffffffff6eeaea7
sub_4dcbc5
lea esp [ esp + 0x2c ]
je rwxdata
mov edi 0x838201de
setb cl
mov si cx
pop esi
setb cl
jmp rwxdata
pushfd
test dh 0x2
bts bx 0x8
or di si
add [ ebp - 0x4 ] ecx
cmp ecx esp
sub ecx 0x8
bsf bx ax
shr ecx 0x1
sbb di si
xadd bx di
clc
mov edi [ esi ]
rcl bl 0x1
pushfd
rol bx 0xe
add edi [ ebp + 0x10 ]
shld bx si 0xd
add esi 0x8
lea esp [ esp + 0x8 ]
jmp rwxdata
movzx cx bl
not cx
pop edi
mov ch 0xb2
movsx cx cl
pop ebx
pushfd
call sub_4e0b71
and [ ebp + 0xa ] 0x420a42e6
rcr ebp 0x51
mov [ esi - 0x3 ] edi
fisub [ edx + ebp * 8 ]
pushad
mov bx [ esi ]
pushfd
cmc
cmc
pushfd
shr ebx 0xc
cmc
clc
cmp ah bl
cmp ebx 0x1
call sub_4dcceb
into
pop es
enter 0x224 0xa
inc edx
add edi esi
out 0xd7 eax
int3
sub_4dcceb
pushfd
mov [ esp + 0x8 ] ebx
jmp rwxdata
lea esp [ esp + 0x30 ]
je rwxdata
shr bh 0x1
sub bl ch
bsf bx di
stc
mov bx [ esi ]
pushfd
mov [ esp ] 0xdb91
jmp rwxdata
bt bx bx
test bl 0x5a
cmp ebx 0x2
push 0x83dc2749
call sub_42f58d
pop ss
pushfd
jmp rwxdata
and ebx 0xfff
bt esp edx
add esp 0x4
jpo rwxdata
pushad
mov [ esp + 0x1c ] 0xc4040107
push 0x128ca9f0
mov [ esp + 0x1c ] 0x42207e49
mov [ esp + 0x4 ] 0xd4
push ecx
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
push 0x2f069c78
bt si 0xa
cmc
call sub_430395
pushad
add [ ebx + edi ] ax
pushad
push 0xa02bac20
push [ esp ]
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4eaa94
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_4e4e41
sub_4dff41
call sub_42fbbd
lea esp [ esp + 0x30 ]
je rwxdata
shr bh 0x1
sub bl ch
bsf bx di
stc
mov bx [ esi ]
pushfd
mov [ esp ] 0xdb91
jmp rwxdata
bt bx bx
test bl 0x5a
cmp ebx 0x2
push 0x83dc2749
call sub_42f58d
pop ss
pushfd
jmp rwxdata
and ebx 0xfff
bt esp edx
add esp 0x4
jpo rwxdata
pushad
mov [ esp + 0x1c ] 0xc4040107
push 0x128ca9f0
mov [ esp + 0x1c ] 0x42207e49
mov [ esp + 0x4 ] 0xd4
push ecx
pushfd
lea esp [ esp + 0x24 ]
jmp rwxdata
push 0x2f069c78
bt si 0xa
cmc
call sub_430395
pushad
add [ ebx + edi ] ax
pushad
push 0xa02bac20
push [ esp ]
lea esp [ esp + 0x48 ]
jmp rwxdata
call sub_4eaa94
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_4e4e41
sub_4dff6b
mov esp esi
push 0x433badd5
pushad
lea esp [ esp + 0x24 ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4e0b71
setpo ch
movzx cx dl
mov ecx [ esp + 0x8 ]
pushfd
mov [ esp ] 0xd9
push 0xdfa1fb9c
mov [ esp + 0x4 ] 0x74
mov esp ebp
movsx ebp cl
pop ebp
pushad
pushad
mov [ esp ] sp
mov [ esp + 0x4 ] dl
push [ esp + 0x40 ]
retn 0x54
sub_4e1201
pushfd
jmp rwxdata
[ edi ]
mov [ esp ] 0x98
lea esp [ esp + 0xc ]
jne rwxdata
call sub_42f5c0
pop ebp
pop esi
adc edi edi
dec edi
or al [ edx - 0x28 ]
and eax 0xb47e75fe
dec ebp
jpe rwxdata
mov eax 0xe52a99cb
bswap ax
movsx ax bl
movsx ax dl
mov [ edi - 0x1 ] 0x0
movsx eax cl
push ebx
setg al
movzx eax al
movsx ax bl
lea eax [ ebx - 0x64cb9a1a ]
lea eax [ rwxdata ]
call sub_4dcaf1
add al 0xc3
outsd

jb rwxdata
idiv [ esi ]
in eax dx
dec edx
inc ebp
add ebx [ edi ]
in eax 0x1f
or al 0x58
push esi
movsb [ edi ] [ esi ]
mov bh 0x46
idiv [ ebx - 0x686ff7b0 ]
and [ eax - 0x7b ] edx
cmc
and eax 0xf83585a4
jle rwxdata
xor bl dh
sub [ esi ] esp
loop rwxdata
and ch [ ebx ]
out 0x3c eax
mov bl 0x5f
push ebx
into
retn
fcmovu st6
loope rwxdata
push ds
0x7aea58ca 0xd54
mov eax [ 0x29de32e8 ]
loop rwxdata
sub_4e1715
pushad
lea esp [ esp + 0x28 ]
call sub_4e1739
jg rwxdata
push 0x103feca1
call sub_4dff6b
push 0x904300ef
mov esp esi
pushad
pushad
pushfd
push ebp
lea esp [ esp + 0x48 ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4e1739
not ah
aad 0x89
movzx eax dl
push ebp
test al 0xeb
mov ebp esp
lahf
sub esp 0x18
pushfd
mov [ esp ] esi
rol ax 0x9
push edi
shr ax 0x4
daa
bsr ax cx
push ebx
lea eax [ ecx - 0x6eda8a42 ]
sar al cl
push edx
sub al bh
ror eax 0x4
rcl ah cl
mov eax [ ebp + 0x8 ]
pushad
clc
test dh 0xe5
stc
test eax eax
push [ esp ]
lea esp [ esp + 0x24 ]
je rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
movsx si cl
mov esi [ eax + 0x3c ]
shrd dx bx 0xc
add esi eax
and dl 0x76
mov edx [ esi + 0x78 ]
pushad
stc
call sub_4e64df
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4e179f
lea esp [ esp + 0x28 ]
jne rwxdata
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
jmp rwxdata
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
not bl
jmp rwxdata
stosb [ edi ]
pushfd
mov [ esp ] bl
lea esp [ esp + 0x24 ]
jmp rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_4e3d9c
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_4e63f2
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4e17f1
sub ebx edi
add al 0xd8
pop ecx
or al [ edx - 0x34 ]
dec ecx
inc eax
xchg ebp eax
movsd [ edi ] [ esi ]
inc ebp
sub eax 0x358e5d16
lea esi [ edx - 0x5176ff00 ]
int3
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_4e17f1
call sub_4dcad4
je rwxdata
movsx esi cl
mov esi [ eax + 0x3c ]
shrd dx bx 0xc
add esi eax
and dl 0x76
mov edx [ esi + 0x78 ]
pushad
stc
call sub_4e64df
xchg [ edx + 0x13 ] bl
or al [ edx + 0x7d ]
mov [ edx - 0x69a2d1e7 ] ebx
lodsb [ esi ]
jb rwxdata
hlt
jbe rwxdata
jmp 0x53273207
sub_4e18bd
push 0xbe709aab
lea esp [ esp + 0x30 ]
call sub_4e1739
pushad
jmp rwxdata
push 0x3cbea641
mov esp esi
push edi
push [ esp ]
pushfd
lea esp [ esp + 0xc ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4e19ea
mov si [ esp + 0x4 ]
pop esi
mov esi [ ebp + 0xc ]
lea esp [ esp + 0x4 ]
jmp rwxdata
pushfd
pushad
push 0x842f5182
mov [ esp + 0x24 ] eax
setge al
mov al 0x9e
not al
pushfd
lodsb [ esi ]
bt ax bp
clc
sub al 0xa3
clc
push ecx
clc
pushfd
xor al 0xa8
jmp rwxdata
call sub_4306d5
sub_4e1afb
lea esp [ esp + 0xc ]
jae rwxdata
setns bl
inc ecx
test al ah
jmp rwxdata
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
not bl
jmp rwxdata
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_4e3d9c
sub_4e1cc0
lea esp [ esp + 0xc ]
jae rwxdata
pushad
push 0x9f992778
pushfd
pushfd
lea esp [ esp + 0x2c ]
call sub_42560c
pushfd
pushad
adc al al
pushad
pushfd
pushfd
lea esp [ esp + 0x4c ]
jae rwxdata
call sub_4e61bc
call sub_424cd4
pushad
push 0x30826566
mov [ esp ] dx
call sub_4e179f
push ebx
lea esp [ esp + 0x4 ]
jae rwxdata
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_4e6d6b
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp sub_4e9c52
call sub_424ca1
sub_4e1d96
test ah 0xa8
mov edi [ edi + ecx * 4 ]
cmp ah ah
push edx
mov [ esp + 0x8 ] ebx
test edi edi
push ebx
lea esp [ esp + 0x14 ]
je rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
test cl 0x16
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
add eax edi
clc
cmp eax edx
push 0x843e1ac9
mov [ esp ] ch
lea esp [ esp + 0x4 ]
jb rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
bt esi 0x13
cmp eax [ ebp - 0x10 ]
jmp rwxdata
jmp rwxdata
push edi
lea esp [ esp + 0x4 ]
jae rwxdata
pushad
rcr cl cl
mov ebx eax
inc cl
mov edi eax
push 0x4b780c13
mov ecx 0x104
test ch 0xfa
cmc
xor al al
jmp rwxdata
[ edi ]
call sub_4e1f5c
test [ esi + 0xa162fc3 ] ebx
inc edx
adc eax 0x2bd79f56
jae rwxdata
adc bh [ ecx - 0x77835e5 ]
dec esp
pop ss
pop ebp
add [ edi ] al
out 0x46 eax
lodsb [ esi ]
sub [ ebx - 0x60d7131b ] dl
aad 0x3d
movsd [ edi ] [ esi ]
inc ebx
push edx
dec ebx
rol [ edx - 0x58 ] cl
sbb [ ecx - 0x53 ] edi
and al 0x11
aad 0x36
test [ edx - 0x13a01f0 ] edi
mov ch 0x9a
int1
sub_4e1db8
rol dl 0x1
call sub_4dcb0e
pushad
clc
add ecx edx
push 0x585098a7
push esi
mov [ ebp - 0x10 ] ecx
bsf cx bp
mov ecx [ ebp + 0xc ]
stc
push ebx
cmp ecx 0xffff
mov [ esp ] 0x4bc
mov [ esp + 0x4 ] esi
lea esp [ esp + 0x30 ]
jbe rwxdata
clc
jpe rwxdata
xadd di bx
shld edi esp cl
rcr ebx cl
btc di 0x8
mov edi [ edx + 0x24 ]
shr cx 0xe
xchg cl bh
add edi eax
pushfd
and ch dl
and cl bh
mov ebx [ edx + 0x20 ]
setb ch
xor ecx edx
shld ecx edi cl
movsx cx al
add ebx eax
movzx cx dl
not cl
bts ecx 0x1e
mov [ ebp - 0x8 ] 0x0
clc
bsr cx ax
pushad
mov ecx [ edx + 0x18 ]
add esp 0x24
bt eax ecx
jmp rwxdata
test si ax
pushad
call sub_42fc00
cmc
sub ecx [ edx + 0x10 ]
cmc
test si 0xd682
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
cmp ecx [ edx + 0x14 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
and si cx
sub ecx 0x1
sar edi 0x1f
mov [ ebp - 0x4 ] ecx
bt dx di
stc
mov ecx [ ebp - 0x8 ]
adc di 0x9262
inc si
add ecx [ ebp - 0x4 ]
dec di
shr ecx 0x1
btr si 0x2
pushfd
ror edi cl
cmc
mov edi [ ebx + ecx * 4 ]
btr si si
shl si cl
add edi eax
call j_sub_4e19ea
adc bl [ ebx ]
pushfd
jo rwxdata
pushad
mov [ esp ] 0x41314364
push edi
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
pushfd
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jbe rwxdata
pop esi
mov esi esp
inc [ eax ]
add [ eax ] al
and [ edx ] al
adc al 0x20
inc edx
add [ eax ] bl
and [ edx ] al
cmp [ ecx + 0x4e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esi
push 0x4e
add [ eax ] al
add [ ebx ] bh
dec ebp
clc
or al [ edx + 0x57 ]
dec ebx
retn
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
sub_4e1ebd
cmc
add bl 0xdb
rol bx cl
add esi 0x8
add bh 0xcb
and bl 0xc3
xor bl 0xbb
btr bx dx
mov bx [ esi ]
stc
shr ebx 0xc
cmp al dh
clc
cmp ebx 0x1
call sub_437e1a
insd
pop esi
mov dl 0xa7
sbb cl [ edx ]
inc edx
push edx
aas
xchg edi eax
pop edi
mov cl bl
push edi
mov al [ 0xffffffffecdbe4ff ]
mov [ 0x4ca639a9 ] al
adc [ eax + 0x1d3c048e ] 0x3c3a8136
adc al 0x36
jl rwxdata
btc si ax
call sub_42cccc
aam 0x9c
mov bl 0xa3
xchg esp eax
mov al [ 0xffffffffbe61147e ]
mov dh 0xcc
rcr eax 0x1
stc
dec ecx
movsd [ edi ] [ esi ]
int3
sub_4e1f5c
pushfd
push [ esp ]
pushfd
lea esp [ esp + 0x34 ]
jne rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
mov si 0xe5db
adc cl 0xd3
cmp ah bh
seto cl
mov ecx edi
mov si 0x3eea
sub ecx ebx
neg si
btr si sp
btc si ax
call sub_42cccc
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4e2d7a
adc ecx ecx
pushfd
call sub_42f7e3
mov [ esp ] 0xaf47
pushfd
mov [ esp ] al
lea esp [ esp + 0x8 ]
jb rwxdata
pushfd
add esp 0x4
jo rwxdata
stc
bt si 0x3
cmp ah 0x5a
pushfd
call sub_437ac2
iretd
pushfd
push [ esp ]
cmp al dl
or al al
call sub_4e51d5
into
add ecx [ 0x4206f818 ]
aas
retn 0xbeff
stc
bt bp 0x7
or al al
jmp rwxdata
jmp rwxdata
pushfd
mov [ esp ] 0xd9
lea esp [ esp + 0x4 ]
je rwxdata
stc
jmp rwxdata
cmp bp 0x49e8
cmc
pushfd
bt di dx
cmp al ah
jmp sub_437e2a
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_4e361d
jmp rwxdata
pushad
clc
add ecx edx
push 0x585098a7
push esi
mov [ ebp - 0x10 ] ecx
bsf cx bp
mov ecx [ ebp + 0xc ]
stc
push ebx
cmp ecx 0xffff
mov [ esp ] 0x4bc
mov [ esp + 0x4 ] esi
lea esp [ esp + 0x30 ]
jbe rwxdata
clc
jpe rwxdata
xadd di bx
shld edi esp cl
rcr ebx cl
btc di 0x8
mov edi [ edx + 0x24 ]
shr cx 0xe
xchg cl bh
add edi eax
pushfd
and ch dl
and cl bh
mov ebx [ edx + 0x20 ]
setb ch
xor ecx edx
shld ecx edi cl
movsx cx al
add ebx eax
movzx cx dl
not cl
bts ecx 0x1e
mov [ ebp - 0x8 ] 0x0
clc
bsr cx ax
pushad
mov ecx [ edx + 0x18 ]
add esp 0x24
bt eax ecx
jmp rwxdata
test si ax
pushad
call sub_42fc00
cmc
sub ecx [ edx + 0x10 ]
cmc
test si 0xd682
jmp rwxdata
cmp ecx [ ebp - 0x8 ]
cmp ecx [ edx + 0x14 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
and si cx
sub ecx 0x1
sar edi 0x1f
mov [ ebp - 0x4 ] ecx
bt dx di
stc
mov ecx [ ebp - 0x8 ]
adc di 0x9262
inc si
add ecx [ ebp - 0x4 ]
dec di
shr ecx 0x1
btr si 0x2
pushfd
ror edi cl
cmc
mov edi [ ebx + ecx * 4 ]
btr si si
shl si cl
add edi eax
call j_sub_4e19ea
adc bl [ ebx ]
pushfd
jo rwxdata
pushad
mov [ esp ] 0x41314364
push edi
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
pushfd
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jbe rwxdata
pop esi
mov esi esp
inc [ eax ]
add [ eax ] al
and [ edx ] al
adc al 0x20
inc edx
add [ eax ] bl
and [ edx ] al
cmp [ ecx + 0x4e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esi
push 0x4e
add [ eax ] al
add [ ebx ] bh
dec ebp
clc
or al [ edx + 0x57 ]
dec ebx
retn
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
sub_4e3706
lea esp [ esp + 0x50 ]
jb rwxdata
rol ah cl
xor ah 0x79
add ah ch
sbb ah bl
mov ah [ esi ]
push 0xd1ab8eb8
cmp ah 0x41
jmp rwxdata
jmp rwxdata
mov [ esp ] 0xaf47
pushfd
mov [ esp ] al
lea esp [ esp + 0x8 ]
jb rwxdata
stc
cmp ah 0xd4
cmp al 0x5a
call j_sub_4dc7fa
lea esp [ esp + 0x1c ]
je rwxdata
pushfd
add esp 0x4
jo rwxdata
stc
bt si 0x3
cmp ah 0x5a
pushfd
call sub_437ac2
iretd
mov edi 0x838201de
setb cl
mov si cx
pop esi
setb cl
jmp rwxdata
pushad
push 0xc1a1244
bt ecx ebx
cmp di 0x6ac0
or ecx ecx
pushad
lea esp [ esp + 0x44 ]
je rwxdata
pushfd
push [ esp ]
cmp al dl
or al al
call sub_4e51d5
into
add ecx [ 0x4206f818 ]
aas
retn 0xbeff
stc
bt bp 0x7
or al al
jmp rwxdata
movzx cx bl
not cx
pop edi
mov ch 0xb2
movsx cx cl
pop ebx
pushfd
call sub_4e0b71
and [ ebp + 0xa ] 0x420a42e6
rcr ebp 0x51
mov [ esi - 0x3 ] edi
fisub [ edx + ebp * 8 ]
shr eax 0x1d
bts ax 0xd
dec ax
jl rwxdata
jmp rwxdata
inc ch
clc
bts ecx edi
sub ebx ebx
call sub_4e0ba2
push ecx
jpe rwxdata
sub ebx ebx
aad 0xae
btc ax 0xe
mov [ ebp - 0x4 ] ebx
mov al bh
test bl ch
mov eax edx
clc
adc ch ah
shr eax 0x10
movsx cx al
movzx ecx al
mov ecx [ esi + 0x4 ]
call j_sub_4e5954
jmp rwxdata
pushfd
mov [ esp ] 0xd9
lea esp [ esp + 0x4 ]
je rwxdata
dec ebx
out dx al
xor al 0x2
jecxz rwxdata
ja rwxdata
pushad
mov [ esp + 0x1c ] 0xc2c0137
push [ esp + 0x8 ]
jmp rwxdata
stc
jmp rwxdata
cmp bp 0x49e8
cmc
pushfd
bt di dx
cmp al ah
jmp sub_437e2a
pop edi
push edi
retn 0x54be
sbb bh 0xf
rcl cl 0xd0
or al [ edx + 0x63 ]

pushfd
mov [ esp + 0x4 ] 0xb5
mov [ esp + 0x20 ] 0x213f3d2a
pushfd
push 0xbe91bdc3
mov [ esp ] ax
lea esp [ esp + 0x28 ]
jmp rwxdata
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
xchg edx eax
shl esi 0xf5
je rwxdata
movsb [ edi ] [ esi ]
dec esi
into
cdq
add [ esi + 0x42a73dfe ] 0x7
mov ah bl
pop ebx
rol [ eax - 0x2e3ff021 ] 0xd0
jne rwxdata
call sub_4eaa94
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
0xdddc28d1 0x91b4
push ebx
fidiv [ 0xffffffffac9dbaaf ]
lahf
pop esp
fwait
insb
cmp bl al
inc ebx
pop edi
xchg [ ebx + 0x7d93a8d3 ] al
mov dh 0xd8
push ds
aam 0xe3
adc esi ebp
cmp [ edx - 0x5d29f853 ] 0x9615a301
fbld [ edx ]
sub ebp ebp
cld
cli
pop esi
mov esp 0x7c7c6bca
sbb eax 0x7d5cf48e
arpl [ ebp + eax * 8 + 0x5d62a6ab ] dx
mov [ esi - 0x2 ] gs
mov dh 0x8d
and al 0x40
jae rwxdata
call sub_4e7b99
cmc
push ebp
push ebp
stc
cmp ah 0x5
call sub_4e1afb
xor al 0xd
mov bl 0xa6
jns rwxdata
xchg ecx eax
sub [ ecx + 0x5e ] 0x8c
adc [ ecx ] 0x62
js rwxdata
inc edx
mov dl 0x23
sbb al [ ecx - 0x4f3d0242 ]
lodsd [ esi ]
mov bl 0x47
push edi
dec esp
or dh [ ecx ]
push ebp
scasd [ edi ]
sub cl [ ecx - 0x1728a09 ]
add ebp [ eax ]
mov dh 0x60
test [ edi + 0x70 ] dl
mov [ eax + 0x2344c2ea ] bh
xor cl [ edi - 0x14 ]
or [ ecx - 0x50 ] al
pop esp
aaa
out 0xd6 eax
cmp bl [ ecx - 0x2b ]
push es
mov al [ 0xffffffffcc3b357f ]
cmp al [ edx ]
sub edi [ ebp + 0x6cc8bb1c ]
sti
jge rwxdata
or [ ebx - 0x67 ] dl
sub cl ch
jpe rwxdata
xchg esp eax
lds ebp [ ebx - 0x73a29d5a ]
outsb
bound ebp [ edi - 0x39012705 ]
jmp rwxdata
imul ebx [ eax - 0x63ea26ae ] 0xb46dfe4e
dec esi
scasb [ edi ]
xor [ esi ] eax
xchg ebx eax
test eax 0xc20a2924
int1
push edi
sub al 0xd8
fldcw [ esi ]
cmp ebx esp
shl [ eax ] 0x4c
into
pop edi
cmp [ edx + 0xa ] 0x42
movsb [ edi ] [ esi ]
mov eax 0xddbd783e
adc bh cl
fsubr [ edi + 0x4b3b1284 ]
xlat
pop ds
jmp rwxdata
sub al 0x12
sub_4e3bcd
bt cx bp
call sub_4e469e
mov esp 0x3f0fd372
or al [ edx + 0x1b ]
mov bl 0xbc
cli
add [ esi + 0x735c1758 ] dl
dec esp
sub ebx [ eax ]
jbe rwxdata
push edi
inc esi
imul esi ebp 0xffffffb3
in al dx
dec ebp
imul edi edi 0xffffffdc
sub [ ebx - 0x41d3bf36 ] bl
js rwxdata
push ss
daa
sahf
iretd
imul edi [ ebp + 0x3f2fc3be ] 0xa
inc edx
fisubr [ edi + 0x4f30138c ]
or [ ecx + 0x65e99622 ] ebp
sub_4e3d9c
[ edi ] [ esi ]
pop esi
mov esi edi
mov esi [ esp + 0x44 ]
pushfd
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_4e63f2
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4e17f1
sub ebx edi
add al 0xd8
pop ecx
or al [ edx - 0x34 ]
dec ecx
inc eax
xchg ebp eax
movsd [ edi ] [ esi ]
inc ebp
sub eax 0x358e5d16
lea esi [ edx - 0x5176ff00 ]
int3
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_4e41c5
push 0xe22330a9
mov [ esp ] 0x7e100138
jmp rwxdata
pushfd
mov [ esp ] 0x36c7677b
push 0xde565282
pushad
pushad
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] eax
jmp rwxdata
jmp rwxdata
push esi
mov [ esp + 0x3c ] ebx
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] esi
mov [ esp ] ebx
push 0xbcf07293
push [ esp ]
mov [ esp + 0x44 ] ebp
pushfd
call sub_4ec378
sub_4e44c7
pushfd
call sub_430c4d
cmpsd [ esi ] [ edi ]
arpl ax si
sub al 0x40
or al [ edx + 0x38 ]
jno rwxdata
sbb [ ebp + 0x3464e3de ] edx
iretd
cmp eax 0xe7b08718
shl [ edi + 0x432c17c0 ] 0x98
cmpsb [ esi ] [ edi ]
push 0x17ff8047
sahf
jb rwxdata
sahf
sti
rcl [ ebx - 0x41 ] 0xf
add al 0x8b
movsb [ edi ] [ esi ]
add dh ah
dec edx
fdivr st7
in al dx
fwait
xchg esp eax
test eax 0x3c6015a2
adc al 0x37
arpl [ eax + 0x59 ] dx
and ecx ebp
mov [ 0xffffffff9e404394 ] eax
sub_4e469e
neg al
pushfd
mov [ esp ] dl
cmc
clc
xor al 0xa8
mov [ esp ] 0x9e73f47d
jmp rwxdata
cmc
cmc
add al 0xa3
pushfd
clc
cmc
cmc
mov [ ecx ] al
cmc
test dh dh
jmp rwxdata
add ecx 0x1
pushfd
pushfd
jmp rwxdata
test ah ah
lea esp [ esp + 0x38 ]
jbe rwxdata
push 0x6a602596
pushad
pushad
lea esp [ esp + 0x44 ]
jne rwxdata
pushad
pushad
lea esp [ esp + 0x40 ]
jne rwxdata
adc al al
mov al [ ecx ]
pushad
mov ah al
clc
cmp dl 0x72
bt dx 0xa
stc
add al 0xee
stc
cmc
cmp bl ch
not al
pushfd
jmp sub_4e3bcd
pushad
push 0x6222049
push eax
mov [ esp + 0x24 ] edi
jmp sub_4e3d83
pushfd
mov [ esp ] bl
pushfd
lea esp [ esp + 0x8 ]
js rwxdata
pushfd
mov [ esp ] ah
pushad
pushad
mov [ esp + 0x40 ] edi
mov [ esp + 0x4 ] 0x257a67f4
pushfd
mov [ esp + 0x40 ] ebx
call sub_4e5234
sub ecx [ esi + edx * 4 ]
add bh [ edx - 0x41e9bdf7 ]
mov esi edx
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x4 ]
jg rwxdata

jmp rwxdata
push ebx
push ecx
call sub_4e1715
test cl 0x2
clc
add dl dl
push esi
call sub_4304fc
push ebx
push edx
pushfd
jmp rwxdata
jmp rwxdata
lea esp [ esp + 0x8 ]
call sub_4e1739
call sub_4e7cae
sahf
mov ecx 0x9c3964a
inc edx
lodsb [ esi ]
push cs
cld
jpe rwxdata
bound edx [ ebp - 0x1e ]
int 0x5f
or [ eax - 0x7ac996a1 ] bl
mov bl 0xaf
push cs
xchg [ edx + 0x47 ] edi
popad
jns rwxdata
push ss
sbb eax 0xa4db9e4b
or [ eax ] eax
add [ edi + ebp * 2 + 0x63 ] cl
popad
insb
inc esi
jb rwxdata
mov ch 0x48
jne rwxdata
fcom [ edi - 0x54e7a120 ]
mov dh 0x2d
mov eax 0xb9a49f31
jb rwxdata
lodsb [ esi ]
test [ ebx + 0x49b41c0f ] al
adc edi [ edi ]
dec ebp
and cl [ esi + 0x461e3bad ]
add eax 0x41ad667b
ror [ esi - 0x3d90da52 ] cl
dec esi
cdq
stosd [ edi ]
sbb dl [ edi ]
nop
imul ecx
add al 0x54
add [ eax ] al
pushad
mov [ esp + 0x1c ] 0x19e4c52c
mov [ esp ] si
lea esp [ esp + 0x1c ]
jmp rwxdata
add [ gs : ebp - 0x17f7db9c ] cl
adc dl [ eax ]
add al ch
xor [ ebp - 0x46620000 ] 0x4a
xchg esi eax
retn
jmp rwxdata
lahf
movsb [ edi ] [ esi ]
mov ecx 0x84acf172
or [ edi ] 0x1c
mov ah 0x49
adc dh [ ebx - 0x20 ]
cld
sub ch dh
shl [ 0x689053ae ] 0x1
mov eax [ gs : 0xffffffffb5a65ca4 ]
and edx [ edx + ebp * 2 - 0x4d ]
lea esp [ edx + 0x22 ]
push ecx
jpe rwxdata
sub [ ecx + ecx * 8 ] dh
loop rwxdata
push edi
pushad
jmp rwxdata
xchg edi eax
mov al [ 0xffffffffa5458218 ]
lea esp [ ecx - 0xd ]
pop edx
mov edx 0xe69a6819
int 0x4f
out dx al
push ebp
mov ebp 0x31b9321b
fild [ edx - 0x4a69524a ]
add al 0x1d
dec ebx
sahf
inc ebp
movsd [ edi ] [ esi ]
lahf
mov al 0x41
dec edx
0x3431e7b9 0x13ca
call sub_4ea4c5
sub_4e4e12
pushad
mov [ esp + 0x8 ] 0xd75f0cbb
lea esp [ esp + 0x28 ]
je rwxdata
pushfd
cmc
sbb bl 0xb9
mov bx [ esi ]
pushad
and ebx 0xfff
bt bx 0xd
pushfd
cmc
add [ ebx + edi ] edx
lea esp [ esp + 0x28 ]
pushad
mov [ esp + 0x4 ] bh
push eax
lea esp [ esp + 0x24 ]
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp rwxdata
jmp sub_4e4e41
sub_4e4e47
lea esp [ esp + 0xc ]
jne rwxdata
pushad
pushfd
xchg ecx eax
push 0xc03f9784
push 0xd5fb471a
call sub_4e9a4f
pushfd
lea esp [ esp + 0x4 ]
call sub_4e6d5e
push ebx
push esp
push 0x1e67b168
lea esp [ esp + 0xc ]
jmp rwxdata
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
dec bl
xchg ebp eax
not bl
jmp rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_4e3d9c
sub_4e51d5
pushad
mov [ esp ] 0xd5
push [ esp + 0x10 ]
lea esp [ esp + 0x30 ]
je rwxdata
stc
jmp rwxdata
bt dx 0x8
clc
cmp al ah
call sub_42f5a0
mov bl 0x82
adc bh bh
xor bh al
shl bh cl
mov bx [ esi ]
clc
call sub_4dc530
or ah ah
pushfd
push 0xa4b213c9
lea esp [ esp + 0x8 ]
je rwxdata
push 0xcf569f76
pushfd
pushfd
push [ esp + 0xc ]
retn 0x10
pushfd
cmp ah 0x2e
lea esp [ esp + 0x4 ]
sub_4e5234
call sub_4e36f3
mov dl 0xa7
inc esp
cwde
push esi
or al [ edx - 0x41 ]
inc edx
jpo rwxdata
mov [ esi ] edx
dec edx
pop ecx
xchg [ ebx + 0x4f ] ebp
test al ch
outsd
push esi
xor esp [ edx - 0x66f5f3f9 ]
jne rwxdata
sahf
lodsb [ esi ]
add [ ebx - 0x70 ] al
xchg edi eax
int 0x7c
jecxz rwxdata
mov edi 0xc79cffff
add al 0x24
cmp [ ecx ] al
clc
jpo rwxdata
iretd
pop ss
std
adc bh [ ecx - 0x39e8237a ]
jmp rwxdata
sar [ ecx - 0x50 ] cl
and [ esi ] esi
je rwxdata
jns rwxdata
jno rwxdata
pushad
mov [ esp ] 0xe1
push 0x332d0b8f
mov [ esp + 0x24 ] 0xa027b27d
push 0x5021189a
lea esp [ esp + 0x28 ]
jmp rwxdata
mov ecx ecx
js rwxdata
jecxz rwxdata
xor [ edx + edi * 8 + 0x29 ] ch
pop edx
and esi 0xffffffeb
fmul [ ebp + 0x57f1ed9e ]
mov dl [ ebx + ebx + 0x5ce9738f ]
or bl [ ecx - 0x730438b ]
jge rwxdata
and bl al
sar [ eax - 0xc ] 0x5f
mov ch 0x10
call sub_4eb8c5
fcomip st6
xlat
jbe rwxdata
inc ebp
sar [ edx - 0x58fc017c ] 0x67
xor [ edx + edi * 8 + 0x35 ] ch
mov ch 0x3a
xor al 0xd
sub eax 0xce9d0ef4
adc al 0xda
test eax 0x643ec4a6
jno rwxdata
jae rwxdata
push ebx
scasd [ edi ]
loop rwxdata
in eax dx
xor [ esi + 0xa ] edx
inc edx
push ss
in al dx
arpl [ esp + ebx * 4 + 0xe ] dx
push edx
pushfd
and esi [ ecx + 0x6f02959 ]
sar [ ecx ] 0x1
and eax 0x4300ac9e
nop
xchg [ 0xfffffffffd8eb922 ] ch
fcmovb st1
dec [ esi - 0x79 ]
rcl [ ecx ] cl
and [ ecx + 0x2a ] cl
pop ebp
jle rwxdata
and al 0x31
mov eax 0x8b35c9b9
0x570b
retn
mov [ 0x5631ed68 ] al
or al [ edx + 0x16 ]
pop esp
aam 0x20
inc ecx
mov ecx 0x6dbe1ba4
je rwxdata
inc ebp
test dh bh
pop ds
mov al [ 0x5930b18 ]
dec edx
mov ah 0x9a
fwait
into
inc esi
xor eax 0xdc4d6406
push ds
mov ss [ ebp - 0x61 ]
dec esi
push ebp
test eax 0x1b2220f
push ds
xchg ecx ecx
add [ edi + ebx + 0x55 ] al
in al 0x78
sar [ ecx + 0x32 ] cl
adc esi edx
push cs
test al 0xe5
jno rwxdata
lodsb [ esi ]
inc ebx
stosd [ edi ]
mov eax [ 0xffffffffa9b0b9e4 ]
or [ 0xffffffff966b12bf ] dl
xlat
jl rwxdata
lahf
retn
mov [ 0x2f67b36b ] eax
sub al al
push esi
mov cl ch
adc eax 0x4169ba99
pop ebp
call [ cs : esp + ebx * 4 + 0x551dd4ad ]
mov ch 0x1b
dec edx
arpl [ esi - 0x34d0bb61 ] bx
dec ebx

jmp 0xffffffffc3dca4a1
adc al [ eax - 0x42 ]
in eax 0xe6
and eax 0x81626ded
jle rwxdata
push eax
mov es bx
jpo rwxdata
xor [ ebx ] ebx
ja rwxdata
xchg ebx eax
cmp al 0xd5
pop ebp
and [ ebp - 0x2d048589 ] dh
sbb ebp ebx
sub al 0x30
xor eax [ esi - 0x79 ]
add ecx esp
mov dl 0x91
pop edx
std
mov [ ebp - 0x4a ] ebp
shl [ ebx + 0x3f ] 0x45
sbb [ ebx + 0x5c ] ch
cmpsb [ esi ] [ edi ]
push es
xchg ebx eax
add eax 0xf8c002f4
leave
push ecx
cmp al 0xea
or [ esi ] dl
push esi
in eax dx
mov ch [ fs : ecx ]
in eax 0x2f
sahf
loop rwxdata
push edi
add [ eax ] al
sti
rcr [ ecx ] cl
out 0xf2 eax
and eax 0x3b0a5868
push ebx
lea esp [ esp + 0xc ]
jb rwxdata
0x973a9b29 0xdb84
push cs
test al 0xbf
cmc
out dx al
jle rwxdata
pushfd
jmp j_sub_4e3d7e
inc edi
pushfd
mov [ esp ] ah
lea esp [ esp + 0x4 ]
jmp sub_4e0194
push cs
lea eax [ edi ]
stosb [ edi ]
and al cl
loopne rwxdata
adc eax esi
fucomip st0
mov bl 0x71
sub_4e55e0
pushfd
lea esp [ esp + 0x8 ]
call sub_42560c
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
mov al 0xde
lodsb [ esi ]
pushad
pushfd
mov [ esp ] 0x2fed
not al
mov [ esp ] 0x5f3b
call sub_4e7525
[ edi ] [ esi ]
pop esi
not si
pushfd
pushfd
mov esi [ esp + 0x30 ]
push ebp
push ebx
push [ esp + 0xc ]
lea esp [ esp + 0x40 ]
jmp rwxdata
pushad
mov bl 0x2
dec al
pushfd
mov [ esp + 0x8 ] bl
push 0xcbea0a20
inc ecx
pushfd
mov al 0x10
mov [ esp + 0x4 ] 0x6d82
lea esp [ esp + 0x2c ]
call sub_42560c
pushfd
mov [ esp ] cl
mov [ esp ] 0x9bdeb8d8
pushfd
adc al al
mov [ esp ] al
call sub_4e1cc0
lodsb [ esi ]
cdq
pushad
lea esp [ esp + 0x20 ]
call sub_42560c
jpe rwxdata
push edi
pushfd
mov [ esp + 0x4 ] 0xe8
push 0x9ab53a45
lea esp [ esp + 0xc ]
jae rwxdata
pushfd
pushad
lea esp [ esp + 0x24 ]
jae rwxdata
mov bl 0xc9
mov bl al
seta al
push eax
lodsb [ esi ]
jmp rwxdata
pushfd
clc
push 0x72412f8e
cmp esp 0x376b65c3
xor ecx ecx
pushad
jmp rwxdata
push 0xe0aef381
call sub_4e63f2
cmc
rcr bl cl
not al
jmp rwxdata
pushfd
pushfd
lea esp [ esp + 0x30 ]
call sub_42560c
push 0x20f399a8
call sub_4e17f1
sub ebx edi
add al 0xd8
pop ecx
or al [ edx - 0x34 ]
dec ecx
inc eax
xchg ebp eax
movsd [ edi ] [ esi ]
inc ebp
sub eax 0x358e5d16
lea esi [ edx - 0x5176ff00 ]
int3
jmp rwxdata
push 0xda522651
rol al 0x1
dec bl
pushfd
dec al
ror bl 0x1
rol al 0x1
jmp rwxdata
pushfd
not bl
stosb [ edi ]
setle bl
setl bl
mov bl 0x2
lea esp [ esp + 0x10 ]
sub_4e5954
pushad
test ah 0xf6
or ecx ecx
call sub_437c56
aam 0xed
push ebx
inc esi
pop ebp
or al [ edx + 0x61 ]
jge rwxdata
int3
or [ ecx ] dl
push eax
mov [ ecx ] edx
and [ esi + 0x63 ] ch
sub al [ edi ]
cmpsd [ si ] [ di ]
out 0x3f eax
scasb [ edi ]
jae rwxdata
0xc0bc6630 0x809b
and al 0x42
aam 0xea
xor [ esi - 0x44 ] ah
rcr [ ebx + 0x5068cd80 ] 0x34

sub_4e5c52
inc ecx
lea esp [ esp + 0x8 ]
setns bl
inc ecx
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
not bl
jmp rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_4e3d9c
sub_4e5d08
mov [ esp + 0x24 ] 0x7e100138
pushad
mov [ esp + 0x40 ] 0x36c7677b
push 0x80731ca4
push 0x2afea37c
lea esp [ esp + 0x48 ]
jmp rwxdata
pushad
pushad
mov [ esp + 0x3c ] eax
jmp rwxdata
jmp rwxdata
push esi
mov [ esp + 0x3c ] ebx
pushfd
push [ esp + 0xc ]
mov [ esp + 0x40 ] esi
mov [ esp ] ebx
push 0xbcf07293
push [ esp ]
mov [ esp + 0x44 ] ebp
pushfd
call sub_4ec378
sub_4e5e18
push edx
lea esp [ esp + 0x8 ]
jb rwxdata
jmp rwxdata
jb rwxdata
jb rwxdata
pushad
jmp rwxdata
pushad
push [ esp + 0x20 ]
retn 0x24
pushfd
pushfd
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
call sub_42fe48
add [ eax ] al
add [ eax ] al
sub_4e5e31
pop ebx
not bh
push 0x73c90fed
mov ebx [ esp + 0x4 ]
push [ esp + 0x4 ]
lea esp [ esp + 0xc ]
jae rwxdata
pushad
mov [ esp + 0x4 ] dl
pushad
mov esp ebp
lea ebp [ ebp + 0x4c1d7cd0 ]
pushad
call sub_4e11f4
xchg edi eax
enter 0x2d38 0x85
pop es
inc edx
cmp [ eax - 0x7a190e67 ] ebx
mov edx 0xdac1fa10
jbe rwxdata
pushfd
push [ esp ]
mov esp ebp
jmp rwxdata
and ah cl
scasd [ edi ]
sub ch [ edi ]
sub eax 0x14d1875e
sub [ edi - 0x17cbe893 ] dh
fwait
int3
add ah [ ecx ]
inc edx
into
out 0xc eax
and esp eax
xor al 0xe
push ss
push edx
mov dl 0xf5
push 0xffffff8a
insb
out dx al
push ss
mov edi 0x89f3e12d
xor cl 0xe6
clc
pop ecx
mov [ edx + 0x3d88fe10 ] eax
dec ebp
outsb
test [ esi + 0x1d ] ch
xor ch [ ecx + 0x5a ]
xchg ch bl
cmp al 0xe6
mov esi 0xc126f6cd
bswap bp
pop ebp
push 0xed667bc1
push [ esp + 0x4 ]
retn 0xc
sub_4e61bc
lea esp [ esp + 0x4 ]
test bl 0xa5
push esi
xor si 0x9e5d
btr si sp
or esi 0xf45b6628
mov esi edi
push 0x9aed1480
pushfd
sub esi eax
pushad
mov [ esp ] 0xc403
call sub_424c8f
test bh 0x7c
stc
cmp eax 0x7f
pushfd
pushad
lea esp [ esp + 0x24 ]
ja rwxdata
pushad
pushad
call sub_4255f1
jg rwxdata
dec bl
xchg ebp eax
aaa
dec ah
shld ax cx cl
mov eax ebp
pushfd
sar bl cl
mov bl 0x1
add esp 0x4
not bl
jmp rwxdata
mov eax [ esi - 0x31 ]
mov eax 0xeecac9e1
xchg esp eax
mov [ esi ] esp
sbb [ edi + 0x65 ] 0xa
inc edx
js rwxdata
dec bl
inc ecx
not bl
pushfd
pushad
mov bl ah
inc ecx
ror bl cl
rcr bl 0x2
xchg ebp eax
bsf ax bp
movsx ax cl
mov eax ebp
sbb bl 0xc7
pushad
or bl 0xdb
rol bl 0x1
mov bl 0x1
clc
cmp bl dh
jmp rwxdata
jne rwxdata
and al 0x4
aas
adc al 0x60
add esp [ edx ]
or [ edi + edx * 4 ] bh
ficom [ eax ]
sar [ edx + 0x23729d1a ] 0x61
call 0xffffffffe1482958
add al 0xe3
inc eax
arpl [ ebx - 0x20ab1705 ] dx
mov al [ fs : 0xffffffffa03cfdaf ]
sbb esp [ eax + 0x50bcd3ce ]
or al [ edx - 0x5b ]
xor ecx ebp
pop ebx
jl rwxdata
0x9a8deed1 0xf6e1
in eax 0xda
shl [ edx ] 0x1
push eax
sahf
in eax 0xb6
mov ebp 0x752e0d96
bound eax [ 0x5764e535 ]
mov [ esp + 0x40 ] esi
lea esi [ ecx * 8 - 0x69642c67 ]
mov esi edi
clc
pushfd
test bp 0xa1e
sub esi eax
call sub_4e3d9c
hlt
jl rwxdata
jpo rwxdata
sbb [ ebx - 0x1e4730ba ] ecx
leave
0x94ee
loop rwxdata
adc [ eax ] dh
0xa34a
in al 0x8b
xlat
inc ebx
mov esi 0x36ecf093
out dx al
add dh [ ebp + 0x2f ]
pop es
mov eax 0x54a120c
mov [ ecx ] gs
xor bl 0xe0
push 0x758dd329
jg rwxdata
in eax 0x64
push edi
mov dl 0xdb
jpe rwxdata
push cs
add edi esi
out 0x99 eax
lodsd [ esi ]
fiadd [ esi ]
lodsb [ esi ]
lodsb [ esi ]
jge rwxdata
mov ch 0xc
add dl [ edx - 0x2b ]
or eax 0x3a495b14
jno rwxdata
push es
jle rwxdata
shl [ edi + 0x71 ] 0x83
int 0x5e
mov ah [ esi - 0x72 ]
je rwxdata
pop ecx
stosb [ edi ]
dec ebp
das
and ah [ ebx - 0x62 ]
iretd
test [ eax + 0x17 ] eax
push 0x2e
sbb al 0xa3
adc [ edx + edx * 2 - 0x1801fcf2 ] ch
cdq
sub_4e63f2
sub ecx ecx
mov [ esp ] bh
pushad
jmp rwxdata
lea esp [ esp + 0x28 ]
call sub_42560c
jmp rwxdata
push ebx
lea esp [ esp + 0x4 ]
jae rwxdata
push esp
pushfd
pushad
lea esp [ esp + 0x28 ]
call sub_4e6d6b
pushfd
push [ esp ]
mov [ esp + 0x4 ] al
bt si 0x2
sub ecx ebx
jmp sub_4e9c52
call sub_424ca1
sub_4e64df
bt ebx edi
test edx edx
pushfd
lea esp [ esp + 0x28 ]
je rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
cmp ah cl
movsx cx bl
cmc
add edx eax
btc cx di
dec cl
sar ecx cl
mov ecx [ esi + 0x7c ]
call sub_4e361d
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4e6508
pushad
pushfd
lea esp [ esp + 0x28 ]
jne rwxdata
jmp rwxdata
cmc
shld ecx esi 0x11
stc
mov ecx [ ebp - 0x4 ]
bt bx 0x6
cmp [ ebp + 0x14 ] ecx
push 0x7dab4447
lea esp [ esp + 0x4 ]
ja rwxdata
pushad
mov bx [ esi ]
pushfd
cmc
cmc
pushfd
shr ebx 0xc
cmc
clc
cmp ah bl
cmp ebx 0x1
call sub_4dcceb
into
pop es
enter 0x224 0xa
inc edx
add edi esi
out 0xd7 eax
int3
movsx cx al
movzx ecx al
mov ecx [ esi + 0x4 ]
call j_sub_4e5954
jmp rwxdata
mov edi 0x838201de
setb cl
mov si cx
pop esi
setb cl
jmp rwxdata
pushad
mov [ esp + 0x1c ] 0xc2c0137
push [ esp + 0x8 ]
jmp rwxdata
movzx cx bl
not cx
pop edi
mov ch 0xb2
movsx cx cl
pop ebx
pushfd
call sub_4e0b71
and [ ebp + 0xa ] 0x420a42e6
rcr ebp 0x51
mov [ esi - 0x3 ] edi
fisub [ edx + ebp * 8 ]
pushfd
mov [ esp + 0x4 ] 0xb5
mov [ esp + 0x20 ] 0x213f3d2a
pushfd
push 0xbe91bdc3
mov [ esp ] ax
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_4eaa94
sub_4e68ba
pushfd
pushad
lea esp [ esp + 0x2c ]
call sub_4e0194
pushad
mov [ esp ] 0xbb
mov [ esp + 0x4 ] 0x84
lea esp [ esp + 0x20 ]
jne rwxdata
clc
pushad
mov [ esp ] ch
cmp ch bl
add ecx 0xffffffff
pushfd
lea esp [ esp + 0x24 ]
je rwxdata
not eax
mov eax [ edx + 0x8 ]
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
jmp rwxdata
test bh 0xc9
add edx 0x11c
pushad
push [ esp + 0x4 ]
push ecx
push edx
lea esp [ esp + 0x2c ]
jmp rwxdata
bt si 0x6
cmc
test si 0x6b2
clc
or ebx ebx
call j_sub_4e8312
nop
fisttp [ esi - 0x6e ]
push ebx
or al [ edx - 0x4b ]
jno rwxdata
cmc
movzx si cl
xchg di si
lea esi [ esi + 0x1a2cf32a ]
push ebp
movzx esi [ edx + 0x1a ]
jmp j_sub_4e9daf
add eax 0x1e998473
push edx
pop ebp
lds esp [ 0x28255544 ]
movsb [ edi ] [ esi ]
loop rwxdata
pushfd
sbb [ edx + 0x7325741b ] bh
aam 0x58
aaa
jmp 0xffffffffb751ae53
fstp [ eax + eax * 8 - 0x79 ]
jbe rwxdata
sbb eax 0xfd03de23
mov eax 0xba17db70
clc
mov [ 0x16a7405c ] eax
movsb [ edi ] [ esi ]
dec esi
imul edi edx 0x10
sub eax 0xf407130f
dec edx
push 0x566978f
jae rwxdata
outsd
fwait
adc al 0xda
jle rwxdata
dec esi
xor edx [ eax ]
adc dh [ ebx - 0x5 ]
loopne rwxdata
cdq
push ds
mov ah 0xe2
cmp [ eax - 0x61 ] al
mov [ esi + eax - 0x4f ] es
xor eax eax
xchg ch dh
sub_4e7b99
mov bl [ esp ]
mov [ esp ] cl
call sub_4e5c52
into
pop esp
jbe rwxdata
jg rwxdata
cmpsb [ esi ] [ edi ]
fnstenv [ edi + ecx * 2 - 0x6a ]
je rwxdata
inc edx
lds edi [ eax ]
sub eax 0xd0e1a19c
push esi
shl [ esi - 0x69b08b27 ] 0x74
js rwxdata
push 0x85dc7f0
ud0 ebp [ esi - 0x70 ]
sbb al 0x97
inc edi
retn
or ecx [ eax - 0x6f ]
push edi
and bh [ eax - 0x3 ]
push 0x4d
scasd [ edi ]
test [ ebx ] bh
loop rwxdata
dec eax
xchg ecx eax
in al dx
push ebx
jno rwxdata
or ebx edx
inc ecx
movsd [ edi ] [ esi ]
or bl [ esi - 0x69 ]
dec esi
mov edx [ edx - 0x71 ]
pop ss
scasb [ edi ]
cmp ebx 0x3
mov cl bl
sti
jbe 0x4f2e5a7c
sbb [ 0xfffffffffd782257 ] ebp
lodsb [ esi ]
mov eax 0xb3571707

xchg esi eax
or al 0xfb
mov [ ecx + 0x3612ecb4 ] bl
inc esp
inc eax
test eax 0xf1be7ee3
lahf
mov [ 0xffffffffae3fe531 ] al
or eax 0x4f57a3a8
inc ebx
out dx al
sub_4e7cae
push ebx
mov esp esi
pushad
lea esp [ esp + 0x20 ]
jmp rwxdata
mov edi 0xed563073
bswap edx
jo rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4e7cbb
mov [ esp ] 0x818c0137
pushfd
jmp rwxdata
jmp rwxdata
mov [ esp ] 0xe41f17dd
pushfd
pushad
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_4ebe9e
sub_4e8102
mov [ esp ] 0x3956
lea esp [ esp + 0x28 ]
jae rwxdata
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
push edi
pushad
push ecx
lea esp [ esp + 0x28 ]
jmp rwxdata
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
sub_4e8312
mov [ esp ] 0xe7
lea esp [ esp + 0x4 ]
je rwxdata
movsx edi al
bswap di
pop edi
setb bh
bswap si
xchg si bx
xchg si bx
pop esi
call sub_4e5e31
jb rwxdata
movzx si dl
not si
mov si bp
mov esi eax
push 0xf1d3ac9c
movsx ax dl
mov [ esp ] ebx
movsx ax cl
setbe ah
movzx ax dl
lea eax [ LocalFree@IAT ]
push 0x91a5511f
push [ esp ]
call sub_42508c
cmp ecx [ edx + 0x14 ]
pushad
lea esp [ esp + 0x20 ]
jae rwxdata
pushad
jmp rwxdata
pushfd
pushfd
pushad
pushfd
push [ esp + 0x2c ]
retn 0x30
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
pushad
mov [ esp ] 0x41314364
push edi
pushfd
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_42fe48
add [ eax ] al
add [ eax ] al
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
bsr di cx
adc di 0x84fd
mov edi [ edx + 0x1c ]
pushfd
mov [ esp ] 0xd2
call sub_424bc7
sub_4e95dc
add ecx 0x1
pushad
mov [ ebp - 0x8 ] ecx
push edi
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
bt dx di
stc
mov ecx [ ebp - 0x8 ]
adc di 0x9262
inc si
add ecx [ ebp - 0x4 ]
dec di
shr ecx 0x1
btr si 0x2
pushfd
ror edi cl
cmc
mov edi [ ebx + ecx * 4 ]
btr si si
shl si cl
add edi eax
call j_sub_4e19ea
adc bl [ ebx ]
pushfd
jo rwxdata
pop esi
mov esi esp
inc [ eax ]
add [ eax ] al
and [ edx ] al
adc al 0x20
inc edx
add [ eax ] bl
and [ edx ] al
cmp [ ecx + 0x4e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esi
push 0x4e
add [ eax ] al
add [ ebx ] bh
dec ebp
clc
pushfd
mov [ esp ] dl
lea esp [ esp + 0x4 ]
jbe rwxdata
or al [ edx + 0x57 ]
dec ebx
retn
xor dl 0x41
shl esi 0xc
push edi
rol dl 0x1
xor eax eax
lea esp [ esp + 0x4 ]
mov edi 0xed563073
bswap edx
jo rwxdata
and si cx
sub ecx 0x1
sar edi 0x1f
mov [ ebp - 0x4 ] ecx
mov edx edx
lea edx [ ebx * 2 + 0x140ad5b0 ]
setns dh
pop edx
jmp sub_4307f2
xchg edx ebx
pop edx
jmp sub_4250a1
sub_4e9a4f
dec eax
stc
mov [ esp ] al
stc
call sub_42fc0c
pushfd
mov [ esp + 0x4 ] 0xb5
mov [ esp + 0x20 ] 0x213f3d2a
pushfd
push 0xbe91bdc3
mov [ esp ] ax
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_4eaa94
sub_4e9daf
lea esi [ esi + edx + 0x1c ]
not di
movzx edi cl
mov edi [ ebp + 0x8 ]
call sub_4e68ba
pushfd
test bl dh
test al al
pushfd
pushfd
pushfd
lea esp [ esp + 0x10 ]
je rwxdata
ror cl 0x5
mov edi edx
sub ch dh
stc
not al
mov ecx edi
adc al al
mov al [ ecx ]
pushad
mov ah al
clc
cmp dl 0x72
bt dx 0xa
stc
add al 0xee
stc
cmc
cmp bl ch
not al
pushfd
jmp sub_4e3bcd
bt ax cx
jmp rwxdata
jmp rwxdata
pushad
sub al 0x30
mov [ esp ] 0xf4
cmp al 0x9
pushfd
jmp sub_4e6f51
sub_4e9f86
lea esp [ esp + 0x4 ]
jpo rwxdata
jmp rwxdata
xchg [ ebp ] eax
pushad
pushfd
mov [ esp + 0x8 ] 0xbf2b67f7
mov [ esp + 0x20 ] rwxdata
pushad
mov [ esp + 0x3c ] eax
push edx
push 0xe85c4e66
mov [ esp + 0x8 ] al
pushfd
push [ esp + 0x48 ]
retn 0x4c
pushfd
push [ esp ]
xchg [ ebp ] eax
pushad
pushfd
jmp rwxdata
call sub_4ea48f
push 0xee63286
push [ esp + 0x10 ]
mov [ esp ] 0xb6
mov [ ebp + 0x4 ] eax
jmp rwxdata
jmp rwxdata
pushfd
pushfd
pop [ esp + 0x30 ]
push esp
mov [ esp + 0x8 ] 0x44
push 0x90fcd1ae
pushfd
push [ esp + 0x3c ]
pop [ ebp ]
push [ esp ]
push 0xec3931de
mov [ esp ] ch
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4ea05d
call sub_4ec320
setpe ah
jl rwxdata
mov dx sp
xchg dl al
push edi
bswap ax
mov edx [ ebp ]
pushad
not ah
pushad
mov eax [ ebp + 0x4 ]
jmp rwxdata
not al
pushad
mov edx [ ebp ]
lahf
mov ax [ esp + 0x8 ]
mov eax [ ebp + 0x4 ]
pushad
pushfd
mov [ esp + 0x8 ] eax
div [ ebp + 0x8 ]
call sub_4eb83a
xor ax cx
mov eax [ ebp ]
neg dl
add dh al
mov edx [ ebp + 0x4 ]
cmp bx bp
test ch ch
add ebp 0x8
call j_sub_4ea584
pushfd
pop [ esp + 0x50 ]
call j_sub_4ec299
call sub_4eb124
mov [ esp ] 0x81
push esp
pushfd
div [ ebp + 0x8 ]
pushfd
mov [ ebp + 0x4 ] edx
mov [ esp ] cl
mov [ ebp + 0x8 ] eax
call sub_4ec111
sub_4ea0bb
and ebx 0xff0
pushfd
cmc
test edx edx
cmp ebx 0xfe0
jmp rwxdata
push 0x6d6bf94a
jmp rwxdata
lea esp [ esp + 0xc ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_4ea4b5
bsr ebx edi
adc bh ch
rcl bh cl
rcr bx 0xe
xor [ ebp + 0xc ] 0x20
sub_4ea216
test di 0xe7ff
add ebp 0x2
push edx
mov [ esp ] al
push ebp
mov [ eax + edi ] dl
push [ esp ]
push 0xff3e3df
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4ea2c2
mov [ esp ] al
mov [ esp ] 0x1f
cmp ebp eax
pushad
jmp rwxdata
push 0x7652f3ee
lea esp [ esp + 0x28 ]
ja rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
lahf
xadd ah cl
aad 0x4f
mov edx esp
jle rwxdata
movzx ax dl
sbb ch ch
lea ecx [ edi + 0x40 ]
rcl di 0xb
shl ax 0x6
sub ecx edx
bt sp 0x6
lahf
lea eax [ ebp - 0x80 ]
cmc
sbb di di
and al 0xfc
neg edi
shl di 0xf
sbb edi 0xcca9dbd
sub eax ecx
jmp rwxdata
daa
shrd ax bx cl
lea ecx [ edi + 0x40 ]
aaa
das
clc
sub ecx edx
ror di 0x6
lea edi [ ecx * 8 - 0x16c9a026 ]
aas
lea eax [ ebp - 0x80 ]
shl di cl
bswap di
lea edi [ ebp * 8 + 0x38afb322 ]
and al 0xfc
bsr di di
mov di cx
sub eax ecx
lea edi [ esi * 2 + 0x29878978 ]
mov esp eax
mov di 0x2915
bswap di
push 0x2855f3b4
mov edi eax
pushfd
pop [ esp ]
movsx di dl
push esi
not di
std
mov esi edx
bswap edi
ja rwxdata
pushad
movzx edi al
mov esp eax
movsx edi cl
movsx di cl
pushfd
pushfd
xchg [ esp ] esi
lea esi [ ebp * 8 + 0x21d4c8f2 ]
call sub_4ea5a3
bswap di
pushad
jmp rwxdata
not edi
pushad
lea edi [ ecx + eax - 0x40 ]
mov [ esp ] ch
pushfd
call sub_4eb54e
lea edi [ ecx + eax - 0x40 ]
mov [ esp ] 0xc4d4
xchg [ esp + 0x1c ] edi
not edi
pushad
mov edi eax
pushfd
jmp rwxdata
std
call sub_4eb1a4
sub_4ea3d0
mov [ esp + 0x8 ] bh
mov [ esp + 0x8 ] esi
pushfd
mov [ esp + 0x8 ] ebp
pushad
mov [ esp + 0x24 ] edx
pushfd
pushfd
jmp rwxdata
mov [ esp + 0x28 ] esi
push 0x8c691dd5
push 0x69e8e5c7
mov [ esp + 0x2c ] edi
mov [ esp ] 0x4c
lea esp [ esp + 0x2c ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4ea584
push [ esp ]
pushfd
mov [ eax ] edx
push 0xf65e9b8b
pushfd
push 0xdca92d94
mov [ esp + 0xc ] 0xb8
lea esp [ esp + 0x18 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4ea5a3
pop edi
movsx si dl
mov esi edx
jmp rwxdata
jmp rwxdata
lea edi [ ecx + eax - 0x40 ]
cld
push edi
pushad
not edi
mov edi eax
pushfd
cld
jmp rwxdata
pushfd
push ecx
call sub_4eb082
sub_4ea62d
pushad
mov [ esp ] 0x991fbb6f
mov [ ebp ] eax
mov [ esp + 0x4 ] 0xad
pushfd
mov [ esp + 0x4 ] al
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4ea67a
mov [ ebp ] ax
mov [ esp + 0x4 ] 0x9e
push ebx
lea esp [ esp + 0x2c ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4ea80a
mov [ esp + 0x28 ] edi
mov [ esp + 0x4 ] 0x32a5
pushfd
lea esp [ esp + 0x2c ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4ea849
pushad
mov [ esp + 0x14 ] al
mov [ esp + 0x14 ] 0xc2
sub ebp 0x2
mov [ esp + 0x10 ] dh
cmc
shr al cl
jmp rwxdata
mov [ esp ] 0x250e
push edi
mov [ ebp + 0x4 ] ax
push 0xb8fd6aa5
pushfd
push ebx
pushfd
pop [ esp + 0x34 ]
pushfd
jmp rwxdata
jmp rwxdata
push [ esp + 0x38 ]
pop [ ebp ]
pushfd
lea esp [ esp + 0x40 ]
jmp sub_4ea4b5
sub_4ea871
mov [ esp + 0x8 ] ebx
push [ esp ]
push [ esp + 0x8 ]
jmp rwxdata
push 0xc3bf0e99
mov [ esp + 0x10 ] esi
pushfd
pushad
mov [ esp + 0x30 ] ebp
push 0xc46c1d00
push 0xe1058677
pushfd
lea esp [ esp + 0x3c ]
jb rwxdata
pushad
pushfd
mov [ esp + 0x20 ] edx
push 0x1de0f1a3
pushfd
call sub_4ebc28
push edx
jmp rwxdata
pushfd
mov [ esp ] esi
jmp rwxdata
push edi
pushfd
lea esp [ esp + 0x4 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4eaaea
push [ esp + 0x50 ]
pop [ ebp ]
mov [ esp ] 0x3c
mov [ esp + 0x4 ] ah
mov [ esp + 0xc ] bh
lea esp [ esp + 0x54 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4eab8c
pushfd
mov [ esp + 0x24 ] esi
push [ esp + 0x4 ]
mov [ esp + 0x24 ] ebp
jmp rwxdata
mov [ esp + 0x4 ] dh
mov [ esp + 0x20 ] edx
mov [ esp + 0x8 ] 0xdb
pushfd
jmp rwxdata
pushad
mov [ esp + 0x40 ] esi
jmp rwxdata
call j_sub_4ebbbd
sub_4eb082
[ edi ] [ esi ]
btc si 0x2
mov edi [ esp + 0x30 ]
cmc
add esi 0xac05aaec
mov esi [ esp + 0x34 ]
mov [ esp + 0x8 ] 0x4f
push [ esp + 0x38 ]
popfd
pushfd
mov [ esp ] di
pushfd
pushfd
lea esp [ esp + 0x48 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4eb0b2
pushfd
mov [ esp + 0xc ] esi
jmp rwxdata
mov [ esp + 0x8 ] edi
mov [ esp ] 0xc8
lea esp [ esp + 0x8 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4eb1a4
cld
pushfd
[ edi ] [ esi ]
shl esi 0x1f
neg di
pop esi
mov edi [ esp + 0x44 ]
clc
rol esi cl
mov esi [ esp + 0x48 ]
std
push [ esp + 0x4c ]
popfd
mov [ esp + 0x10 ] dh
mov [ esp + 0x8 ] 0xde
mov [ esp ] cl
mov [ esp ] esp
lea esp [ esp + 0x50 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4eb1fd
mov [ esp + 0x24 ] esi
pushad
jmp rwxdata
mov [ esp + 0x40 ] ebp
pushfd
jmp rwxdata
mov [ esp ] ch
mov [ esp + 0x40 ] edx
mov [ esp + 0x4 ] 0x8
pushfd
jmp rwxdata
mov [ esp + 0x40 ] esi
jmp rwxdata
mov [ esp + 0x3c ] edi
push 0x71cc5b1c
mov [ esp + 0x4 ] bx
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4eb21f
xor eax ebx
pushad
mov [ esp ] ecx
pushad
push 0x99e309f3
neg eax
push [ esp ]
dec eax
cmp bx ax
cmc
cmp bh bh
cmp dl bl
bswap eax
cmp dh 0xbe
stc
pushfd
stc
xor ebx eax
cmp bh 0x5
clc
sub ebp 0x4
clc
call $+5
add esi 0x4
jmp rwxdata
mov [ esp + 0x14 ] esp
mov [ ebp ] eax
mov [ esp + 0x4 ] 0xc9
mov [ esp ] dl
mov [ esp ] ch
mov [ esp + 0x4 ] ch
lea esp [ esp + 0x50 ]
jmp sub_4ea4b5
sub_4eb40c
push 0xd3032c59
mov [ esp + 0x24 ] edi
mov [ esp + 0xc ] ebx
lea esp [ esp + 0x24 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4eb5ee
push ebp
push ebx
mov [ esp ] 0x7f
pushfd
mov [ esp + 0x4 ] edx
lea esp [ esp + 0x4 ]
ja rwxdata
pushad
mov [ esp + 0x1c ] esi
call sub_4ea3a4
pushfd
mov [ esp ] esi
pushfd
push esp
jmp rwxdata
mov [ esp + 0x4 ] edi
pushfd
pushfd
push eax
lea esp [ esp + 0x10 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4eb83a
pushfd
mov [ ebp + 0x4 ] edx
push 0x16192d20
call sub_4eb957
movsx cx al
movsx cx dl
mov ecx [ ebp - 0x4 ]
pushad
pushad
jmp rwxdata
lea ebp [ ebp + ecx * 4 ]
pushfd
pushfd
mov [ esp + 0x4 ] 0xd80c67b7
jmp sub_4eba7c
sub_4eba7c
mov [ ebp ] eax
pushfd
push esp
mov [ esp + 0x4 ] 0x85f8
lea esp [ esp + 0x50 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4ebbbd
mov [ esp + 0x40 ] edi
mov [ esp ] esp
lea esp [ esp + 0x40 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4ebc28
mov [ esp + 0x28 ] esi
push 0xa474d679
pushfd
mov [ esp + 0x2c ] edi
pushfd
mov [ esp ] di
mov [ esp + 0x4 ] 0xe396e044
lea esp [ esp + 0x30 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4ebd2f
push [ esp + 0x10 ]
lea esp [ esp + 0x20 ]
jne rwxdata
not bh
pushfd
lea ebx [ esi - 0x3bfa3b41 ]
lea ebx [ edi * 2 - 0x4d1ae68a ]
mov ebx [ esp + 0x4 ]
mov [ esp + 0x4 ] dl
lea esp [ esp + 0x8 ]
jmp sub_4ea4b5
xor bl 0x74
mov ebx eax
cmc
test dl 0x2f
call sub_4ea0bb
sub_4ebd5d
mov [ esp + 0x44 ] edi
mov [ esp ] 0x5
push esi
push esp
pushfd
lea esp [ esp + 0x50 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4ebf39
bt ax bx
rol esi 0xe
lea ebp [ eax + 0x3077a4b8 ]
dec esi
cmp esi 0x98ef26ae
add ch 0xf2
pushad
lea ebp [ esp + 0x40 ]
shrd di bx cl
bt bx ax
sub esp 0x80
rcl di cl
mov edi esp
shl bh 0x7
bt sp di
mov ebx esi
bsf cx dx
bswap cx
add esi [ ebp ]
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4ec22b
mov [ esp + 0x30 ] edi
pushfd
mov [ esp ] 0x5a72
push 0x4918884c
pushfd
lea esp [ esp + 0x3c ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4ec299
mov [ esp ] bh
push [ esp + 0x54 ]
pop [ ebp ]
mov [ esp ] sp
mov [ esp ] cx
mov [ esp + 0x4 ] ax
mov [ esp + 0x8 ] 0xa
lea esp [ esp + 0x58 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4ec2e5
mov [ esp ] bl
mov [ esp + 0x24 ] ebp
pushfd
pushfd
mov [ esp + 0x28 ] edx
mov [ esp ] di
mov [ esp + 0x24 ] esi
mov [ esp + 0x18 ] cx
push ebx
mov [ esp ] dx
push edx
mov [ esp + 0x28 ] edi
push [ esp + 0x4 ]
push [ esp ]
mov [ esp + 0x10 ] 0xfad3
lea esp [ esp + 0x30 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_4ec320
[ edi ] [ esi ]
add esi 0x9d1f4232
shl si cl
mov edi [ esp + 0x58 ]
shl si 0xa
shr si cl
test cl 0xe9
mov esi [ esp + 0x5c ]
test ah 0x57
clc
cmc
test si ax
push [ esp + 0x60 ]
popfd
mov [ esp + 0x8 ] 0xa4
mov [ esp + 0x8 ] 0x43
lea esp [ esp + 0x64 ]
jmp rwxdata
movzx ecx cl
mov al [ esi ]
sub cl ah
shrd cx dx 0xa
cmp esi esi
rcr ch 0x1
xor al bl
rcl cx 0xa
pushad
rol al 0x5
lea ecx [ edi - 0x3fe56ec1 ]
bswap cx
sar cl 0x4
not al
movzx ecx cl
xor al 0xd6
shrd ecx ecx 0x10
setb cl
shl ch 0x1
shl cx cl
xor bl al
btr ecx 0x6
rcr cx 0x8
shr cl cl
rcr cl cl
movzx eax al
mov ch [ esp ]
pushfd
lea esi [ esi + 0x1 ]
adc cx si
cmp al dh
neg ecx
mov ecx [ eax * 4 + rwxdata ]
test cl 0x7d
pushfd
bt si si
stc
neg ecx
jmp sub_4eb96e
sub_4ec378
push [ esp ]
mov [ esp + 0x4c ] edx
pushfd
mov [ esp + 0x4c ] esi
jmp rwxdata
jmp rwxdata
mov [ esp + 0x4 ] dl
push 0x19be167d
mov [ esp + 0x4c ] edi
push 0xccde9e3a
mov [ esp + 0x8 ] 0xa5
lea esp [ esp + 0x50 ]
jmp rwxdata
push esp
pop ebp
pushad
xchg [ esp + 0x1c ] ecx
mov [ esp + 0x4 ] edx
pushfd
pop [ esp + 0x18 ]
setpo al
bswap di
push [ rwxdata ]
pop [ esp + 0x14 ]
not bp
push ecx
mov [ esp + 0x14 ] 0x0
push edx
mov esi 0xa45d92b3
lea ebp [ ebp - 0x690aa7a4 ]
dec si
mov esi [ esp + 0x48 ]
movsx di dl
pushfd
inc esi
ror bh cl
call sub_4ebf39
push [ esp ]
lea esp [ esp + 0x50 ]
cpuid
stc
pushfd
test bh 0xcc
sub ebp 0xc
stc
stc
mov [ esp ] edx
stc
cmp [ ebp + 0xc ] 0x1
pushfd
push 0x94a75f15
mov [ esp + 0x8 ] bl
mov [ ebp + 0xc ] eax
jmp rwxdata
mov [ ebp + 0x8 ] ebx
push 0xe6bd763d
mov [ ebp + 0x4 ] ecx
pushfd
jmp rwxdata
pushfd
mov [ esp + 0x8 ] edi
mov [ ebp ] edx
call sub_4ebd2f
sub_424bc7
add edi eax
clc
call sub_4e1d96
movsd [ edi ] [ esi ]
dec ebp
jmp rwxdata
j_sub_4e19ea
jmp sub_4e19ea
sub_42508c
mov [ esp + 0x8 ] rwxdata
mov [ esp ] 0x1e8eb087
pushad
jmp rwxdata
push 0x6c85c9bd
push [ eax ]
pop [ esp + 0x28 ]
push 0x7bef5375
pushfd
push [ esp + 0x30 ]
retn 0x34
sub_42f303
mov esp ebp
jmp rwxdata
pushfd
mov ebp [ esp + 0x4 ]
pushfd
pushfd
push [ esp + 0x10 ]
retn 0x1c
j_sub_4e9daf
jmp sub_4e9daf
sub_42f58d
lea esp [ esp + 0x8 ]
je rwxdata
mov bl 0x82
adc bh bh
xor bh al
shl bh cl
mov bx [ esi ]
clc
call sub_4dc530
stc
cmp ebx 0x3
call sub_42fa4e
sub_42f7e3
push [ esp + 0x4 ]
lea esp [ esp + 0x14 ]
call sub_42560c
call sub_4e5e18
jmp rwxdata
pop ebp
pushad
mov [ esp + 0x4 ] 0x9a
push [ esp + 0x20 ]
retn 0x2c
sub_42fa4e
call sub_4e4e12
cmp ebp ebp
push esi
mov bh dh
push es
inc edx
mov al 0xf3
clc
sub_42fbbd
adc ecx ecx
pushad
pushfd
lea esp [ esp + 0x30 ]
jmp rwxdata
call sub_4e7b99
sub_42fc00
sub ecx [ edx + 0x10 ]
clc
cmp ecx [ edx + 0x14 ]
call sub_4e8102
sub_42fc22
mov [ esp + 0x4 ] 0xcc
mov [ esp + 0x20 ] eax
push 0x40319fa4
pushad
push [ esp + 0x44 ]
retn 0x48
sub_430395
add [ ebx + edi ] ax
push [ esp ]
mov [ esp ] 0xe2
push 0xa714840b
lea esp [ esp + 0x10 ]
jmp rwxdata
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_4e4e41
sub_43048b
rol al 0x1
mov [ esp + 0xc ] al
stc
shr eax 0x1
call sub_438002
sub_430517
mov [ esp ] cx
call sub_4dff41
pushad
pushfd
xchg ecx eax
push 0xc03f9784
push 0xd5fb471a
call sub_4e9a4f
sub_437a94
rol al 0x1
mov [ esp ] 0xa9
mov [ esp ] 0xe1
dec al
push edx
stc
jmp rwxdata
push ecx
rol al 0x1
call sub_430697
sub_437c56
mov [ esp ] 0x3d4
call sub_4dcbc5
0x78b468cb 0x4207
j_sub_4e3d7e
jmp sub_4e3d7e
sub_4dc530
and ebx 0xfff
cmc
jmp sub_4e3d69
sub_4dc61f
adc dl dl
push 0x9a58c947
mov [ esp + 0x4 ] esp
pushad
mov [ esp ] dx
push [ esp + 0x28 ]
retn 0x2c
sub_4dc93b
call sub_4249e2

sub_4dcaf1
mov [ esp ] bl
mov [ esp ] rwxdata
jmp sub_4e6848
_start
push edi
pushad
pushad
mov [ esp + 0x40 ] 0x32900138
pushfd
call sub_4e46b4
j_sub_42f303
jmp sub_42f303
sub_4e018d
dec al
jmp sub_43048b
sub_4e0194
cmp eax ebx
pushad
mov al [ edi ]
cmp dh cl
pushfd
pushad
cmp al 0x41
push 0xe3365342
jmp rwxdata
pushfd
call sub_4e3706
j_sub_430706
jmp sub_430706
sub_4e091b
inc edi
pushad
push [ esp ]
lea esp [ esp + 0x2c ]
jmp sub_4e0194
sub_4e0ba2
daa
mov [ ebp - 0x4 ] ebx
bsr ecx ecx
bt di 0xd
mov eax edx
cmp ebx edx
shr eax 0x10
xor ecx 0x2b551d57
jmp sub_430499
sub_4e11f4
mov ebp [ esp + 0x24 ]
pushfd
pushfd
push [ esp + 0x30 ]
retn 0x38
sub_4e139d
mov [ esp + 0x3c ] 0xad8db9b3
pushfd
pushfd
mov [ esp + 0x4 ] di
lea esp [ esp + 0x44 ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_4ebe9e
sub_4e162c
cmp [ edi - 0x1 ] 0x0
call sub_4e44c7
jmp sub_4e4e41
sub_4e1a0c
pushfd
mov [ esp + 0x20 ] rwxdata
push ebx
jmp rwxdata
push [ eax ]
pop [ esp + 0x20 ]
pushad
mov [ esp ] 0x9
push [ esp + 0x40 ]
retn 0x44
j_sub_4e55e0
jmp sub_4e55e0
sub_4e36f3
push [ esp + 0x4 ]
pushfd
lea esp [ esp + 0x50 ]
call sub_4e1739
call sub_43821f
sub_4e3d69
cmc
mov [ esp ] 0xf3
add [ ebx + edi ] dx
pushfd
push ecx
pushfd
lea esp [ esp + 0x10 ]
jmp rwxdata
jmp rwxdata
add esi 0x2
jmp rwxdata
jmp sub_4e4e41
sub_4e3d7e
call sub_4e091b
sub_4e3d83
pushfd
mov [ esp + 0x24 ] ebx
pushfd
mov [ esp + 0x14 ] 0xac
call sub_4e18bd
test si ax
pushad
call sub_42fc00
sub_4e46b4
push ecx
push 0xf1df98f0
mov [ esp + 0x4c ] 0x62634d65
mov [ esp + 0x4 ] bx
mov [ esp + 0x8 ] di
lea esp [ esp + 0x4c ]
jmp rwxdata
push 0x4bc9b65b
mov [ esp ] eax
pushfd
mov [ esp ] ebx
call sub_4ebe9e
sub_4e4e41
dec ecx
call sub_4e6508
sub_4e5206
call sub_4e1201
pushfd
mov [ esp ] 0x7bf80138
push ecx
pushad
mov [ esp ] 0xe1
push 0x332d0b8f
mov [ esp + 0x24 ] 0xa027b27d
push 0x5021189a
lea esp [ esp + 0x28 ]
jmp rwxdata
call sub_4eb8c5
sub_4e5475
inc esi
push 0x25f2e700
push 0x533b0a58
lea esp [ esp + 0xc ]
jb rwxdata
pushfd
jmp j_sub_4e3d7e
inc edi
pushfd
mov [ esp ] ah
lea esp [ esp + 0x4 ]
jmp sub_4e0194
sub_4e5cfb
jle sub_4e41c5
sub_4e5d01
pushad
sub_4e5d02
push 0xe5dcd568
sub_4e5d07
pushfd
sub_4e6307
lea edx [ ebx + 0x4 ]
lea esp [ esp + 0x4 ]
movzx si cl
xchg di si
lea esi [ esi + 0x1a2cf32a ]
push ebp
movzx esi [ edx + 0x1a ]
jmp j_sub_4e9daf
sub_4e63fd
mov [ esp ] 0xb9d887c2
pushfd
pushfd
push [ esp + 0x4 ]
pushad
lea esp [ esp + 0x2c ]
jmp sub_4eb913
sub_4e6848
pushad
call sub_42fc22
_TLS_Entry_0
call sub_4e7cbb
sub_4e6d5e
bt ax bx
pushad
pushad
cmc
sub ecx ecx
lea esp [ esp + 0x40 ]
sub_4e6d6b
pushad
jmp rwxdata
jmp rwxdata
inc ecx
lea esp [ esp + 0x20 ]
pushad
jmp rwxdata
call sub_42fe48
add [ eax ] al
add [ eax ] al
j_sub_4e8312
jmp sub_4e8312
sub_4e6f51
call j_sub_430706
sub_4e6f56
lea esp [ esp + 0x8 ]
jae rwxdata
call sub_4e63fd
push 0xb9d887c2
pushad
lea esp [ esp + 0x20 ]
jmp sub_4eb913
sub_4e7525
bt dx 0x5
stc
rol al 0x1
jmp sub_4e018d
j_sub_4e5954
jmp sub_4e5954
j_sub_4dc7fa
jmp sub_4dc7fa
sub_4e9c52
pushfd
jmp sub_4e4e47
sub_4ea356
cld
call sub_4ea05d
sub_4ea3a4
call sub_4eb40c
sub_4ea48f
mov [ esp + 0x2c ] rwxdata
jmp rwxdata
call sub_4ea952
lea ebp [ ebp + ecx * 4 ]
pushfd
pushfd
mov [ esp + 0x4 ] 0xd80c67b7
jmp sub_4eba7c
sub_4ea4b5
rcr ax cl
bt si 0xe
lea eax [ edi + 0x50 ]
call sub_4ea2c2
sub_4ea4c5
mov [ esp + 0x24 ] eax
mov [ esp + 0x4 ] 0x82
call sub_4ea9b6
sub_4ea542
call sub_4ec085
sub_4ea64b
call sub_4eb9a0
sub_4ea6ab
call sub_4eb4d8
j_sub_4eaaea
jmp sub_4eaaea
sub_4ea8cf
bt ecx 0x7
sub ebp 0x4
mov [ esp + 0x4 ] al
mov [ esp ] bl
mov [ ebp ] eax
mov [ esp + 0x4 ] al
mov [ esp + 0x4 ] al
push 0x45d15dcd
pushfd
lea esp [ esp + 0x40 ]
jmp sub_4ea4b5
sub_4ea952
mov [ esp + 0x2c ] eax
pushfd
push 0x3bac19c1
mov [ esp + 0x4 ] 0xf5
push [ esp + 0x34 ]
retn 0x38
sub_4ea96f
mov [ esp + 0x4 ] dl
mov [ esp + 0x4 ] esi
pushad
mov [ esp + 0x20 ] ebp
push 0xe2ff0f60
mov [ esp ] bh
mov [ esp + 0x18 ] bl
pushfd
mov [ esp + 0x24 ] edx
call sub_4ec36a
sub_4ea9b6
mov [ esp + 0x14 ] dl
jmp sub_4eaa1f
j_sub_4ec299
jmp sub_4ec299
sub_4eaa1f
mov [ esp + 0x24 ] ebx
jmp rwxdata
jmp sub_4eab8c
sub_4eaa75
pushad
mov [ esp + 0x24 ] eax
push [ esp ]
jmp rwxdata
mov [ esp + 0x24 ] ebx
call sub_4eb1fd
sub_4eaa94
pushfd
mov [ esp + 0x4 ] eax
jmp rwxdata
call sub_4ec055
sub_4eb07c
pushfd
call sub_4ec22b
sub_4eb124
mov [ esp ] eax
mov eax [ fs : eax ]
call j_sub_4ea62d
adc al ch
mov al [ ebp ]
pushfd
stc
mov cl [ ebp + 0x2 ]
call sub_4ea849
j_sub_4eb92e
jmp sub_4eb92e
j_sub_4ea584
jmp sub_4ea584
sub_4eb4d8
pushfd
mov [ esp + 0x28 ] ebp
mov [ esp ] ah
mov [ esp + 0x24 ] edx
pushad
mov [ esp + 0x40 ] esi
call sub_4eb744
sub_4eb54e
xchg [ esp + 0x24 ] edi
cld
pushad
mov edi eax
mov [ esp ] esi
call sub_4ea542
j_sub_4ebbbd
jmp sub_4ebbbd
sub_4eb744
mov [ esp + 0x8 ] 0x50
call sub_4ebd5d
j_sub_4ebd4b
jmp sub_4ebd4b
sub_4eb8c5
call sub_4eaa75
sub_4eb913
push esi
push ebp
mov [ esp ] 0xac
mov [ esp ] 0x2
mov [ esp + 0x4 ] eax
push [ esp ]
mov [ esp + 0x4 ] ebx
push eax
jmp sub_4ea96f
sub_4eb92e
mov [ esp + 0x24 ] esi
call sub_4ec2e5
sub_4eb957
mov [ ebp + 0x8 ] eax
mov [ esp ] dh
mov [ esp + 0x4 ] 0x66cd
pushfd
pop [ esp + 0x50 ]
jmp j_sub_4eaaea
sub_4eb96e
test dl ah
mov [ esp ] 0x80
stc
add ecx 0x0
jmp sub_4ec2cf
sub_4eb9a0
inc esi
push ecx
push 0x27e43e74
mov [ ebp ] ax
pushfd
lea esp [ esp + 0x50 ]
jmp sub_4ea4b5
sub_4eb9d6
pushfd
push [ esp + 0x2c ]
pop [ ebp ]
mov [ esp + 0x14 ] edi
lea esp [ esp + 0x30 ]
jmp sub_4ea4b5
sub_4eba6c
sbb dh dl
shl dx 0x3
clc
mov dx [ ebp ]
jmp sub_4ea216
sub_4ebac1
call sub_4ebdc2
sub_4ebb79
mov [ ebp ] ax
pushad
pushfd
mov [ esp ] 0x30666113
lea esp [ esp + 0x30 ]
jmp sub_4ea4b5
sub_4ebd4b
mov [ esp + 0x20 ] esi
call sub_4ea6ab
j_sub_4ea62d
jmp sub_4ea62d
sub_4ebdc2
mov [ esp + 0x4 ] 0xf198
jmp sub_4ea871
sub_4ebe9e
lea esp [ esp + 0x4 ]
jge rwxdata
pushad
jmp rwxdata
push esp
mov [ esp ] cl
mov [ esp ] esi
jmp sub_4eb5ee
call j_sub_4ebd4b
sub_4ebf13
mov [ esp + 0x8 ] 0x5f
jmp sub_4ea64b
sub_4ec055
mov [ esp + 0x4 ] ebx
push 0x8acc97b2
call sub_4ea3d0
sub_4ec085
call sub_4ea356
sub_4ec111
mov [ esp + 0x4 ] 0xe2a3
jmp rwxdata
pushfd
pop [ esp + 0x50 ]
call j_sub_4ec299
call sub_4eb124
sub_4ec2cf
pushfd
mov [ esp + 0x28 ] ecx
pushfd
mov [ esp ] al
push 0xbddf9cf3
pushfd
push [ esp + 0x34 ]
retn 0x38
sub_4ec36a
push 0xece3a10a
mov [ esp + 0x28 ] esi
jmp rwxdata
call sub_4ea80a
