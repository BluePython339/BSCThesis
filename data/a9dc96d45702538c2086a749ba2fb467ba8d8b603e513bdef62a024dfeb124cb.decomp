sub_180001000
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x38
mov r8d 0x10
mov rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0x40 ]
call sub_180012e40
test eax eax
jne r-xdata
mov [ rsp + 0x20 ] 0x0
mov [ rsp + 0x20 ] 0x1
jmp r-xdata
mov eax [ rsp + 0x20 ]
add rsp 0x38
retn
sub_180001080
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call sub_180001110
mov rax [ rsp + 0x30 ]
lea rcx [ r--data ]
mov [ rax ] rcx
mov rax [ rsp + 0x30 ]
mov [ rax + 0x8 ] 0x0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov rax [ rsp + 0x30 ]
add rsp 0x28
retn
sub_1800010d0
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call sub_180001140
mov eax [ rsp + 0x38 ]
and eax 0x1
test eax eax
je r-xdata
mov rax [ rsp + 0x30 ]
add rsp 0x28
retn
mov rcx [ rsp + 0x30 ]
call j_sub_18000e204
sub_1800011a0
mov [ rsp + 0x8 ] rcx
sub rsp 0x48
mov rax [ rsp + 0x50 ]
mov eax [ rax + 0x8 ]
dec eax
mov [ rsp + 0x30 ] eax
mov rax [ rsp + 0x50 ]
mov ecx [ rsp + 0x30 ]
mov [ rax + 0x8 ] ecx
cmp [ rsp + 0x30 ] 0x0
jne r-xdata
mov rax [ rsp + 0x50 ]
mov eax [ rax + 0x8 ]
mov rax [ rsp + 0x50 ]
mov [ rsp + 0x28 ] rax
mov rax [ rsp + 0x28 ]
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
je r-xdata
mov [ rsp + 0x38 ] 0x0
mov rax [ rsp + 0x20 ]
mov rax [ rax ]
mov edx 0x1
mov rcx [ rsp + 0x20 ]
call [ rax + 0x18 ]
mov [ rsp + 0x38 ] rax
jmp r-xdata
add rsp 0x48
retn
xor eax eax
jmp r-xdata
sub_180001220
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
lea rdx [ r--data ]
mov rcx [ rsp + 0x38 ]
call sub_180001050
test eax eax
je r-xdata
lea rdx [ r--data ]
mov rcx [ rsp + 0x38 ]
call sub_180001050
test eax eax
je r-xdata
mov rax [ rsp + 0x40 ]
mov rcx [ rsp + 0x30 ]
mov [ rax ] rcx
jmp r-xdata
mov rax [ rsp + 0x40 ]
mov [ rax ] 0x0
mov eax 0x80004002
jmp r-xdata
mov rax [ rsp + 0x40 ]
mov rcx [ rsp + 0x30 ]
mov [ rax ] rcx
jmp r-xdata
mov rax [ rsp + 0x40 ]
mov rax [ rax ]
mov rcx [ rsp + 0x40 ]
mov rcx [ rcx ]
mov rax [ rax ]
call [ rax + 0x8 ]
xor eax eax
add rsp 0x28
retn
sub_1800012b0
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call sub_180001110
mov rax [ rsp + 0x30 ]
lea rcx [ r--data ]
mov [ rax ] rcx
mov rax [ rsp + 0x30 ]
mov [ rax + 0x8 ] 0x0
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov rax [ rsp + 0x30 ]
add rsp 0x28
retn
sub_180001300
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call sub_180001340
mov eax [ rsp + 0x38 ]
and eax 0x1
test eax eax
je r-xdata
mov rax [ rsp + 0x30 ]
add rsp 0x28
retn
mov rcx [ rsp + 0x30 ]
call j_sub_18000e204
sub_180001370
mov [ rsp + 0x8 ] rcx
sub rsp 0x48
mov rax [ rsp + 0x50 ]
mov eax [ rax + 0x8 ]
dec eax
mov [ rsp + 0x30 ] eax
mov rax [ rsp + 0x50 ]
mov ecx [ rsp + 0x30 ]
mov [ rax + 0x8 ] ecx
cmp [ rsp + 0x30 ] 0x0
jne r-xdata
mov rax [ rsp + 0x50 ]
mov eax [ rax + 0x8 ]
mov rax [ rsp + 0x50 ]
mov [ rsp + 0x28 ] rax
mov rax [ rsp + 0x28 ]
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
je r-xdata
mov [ rsp + 0x38 ] 0x0
mov rax [ rsp + 0x20 ]
mov rax [ rax ]
mov edx 0x1
mov rcx [ rsp + 0x20 ]
call [ rax + 0x28 ]
mov [ rsp + 0x38 ] rax
jmp r-xdata
add rsp 0x48
retn
xor eax eax
jmp r-xdata
sub_1800013f0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
lea rdx [ r--data ]
mov rcx [ rsp + 0x38 ]
call sub_180001050
test eax eax
je r-xdata
lea rdx [ r--data ]
mov rcx [ rsp + 0x38 ]
call sub_180001050
test eax eax
je r-xdata
mov rax [ rsp + 0x40 ]
mov rcx [ rsp + 0x30 ]
mov [ rax ] rcx
jmp r-xdata
mov rax [ rsp + 0x40 ]
mov [ rax ] 0x0
mov eax 0x80004002
jmp r-xdata
mov rax [ rsp + 0x40 ]
mov rcx [ rsp + 0x30 ]
mov [ rax ] rcx
jmp r-xdata
mov rax [ rsp + 0x40 ]
mov rax [ rax ]
mov rcx [ rsp + 0x40 ]
mov rcx [ rcx ]
mov rax [ rax ]
call [ rax + 0x8 ]
xor eax eax
add rsp 0x28
retn
sub_180001480
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x68
mov [ rsp + 0x28 ] 0x0
cmp [ rsp + 0x78 ] 0x0
je r-xdata
mov edx 0x8
mov rcx [ rsp + 0x88 ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax 0x80040110
jmp r-xdata
mov rax [ rsp + 0x88 ]
mov [ rax ] 0x0
mov ecx 0x10
call sub_18000dd64
mov [ rsp + 0x38 ] rax
cmp [ rsp + 0x38 ] 0x0
je r-xdata
mov eax 0x80004003
jmp r-xdata
add rsp 0x68
retn
mov [ rsp + 0x50 ] 0x0
mov rcx [ rsp + 0x38 ]
call sub_180001080
mov [ rsp + 0x50 ] rax
jmp r-xdata
mov rax [ rsp + 0x20 ]
mov rax [ rax ]
mov r8 [ rsp + 0x88 ]
mov rdx [ rsp + 0x80 ]
mov rcx [ rsp + 0x20 ]
call [ rax ]
mov [ rsp + 0x28 ] eax
cmp [ rsp + 0x28 ] 0x0
jge r-xdata
mov eax 0x8007000e
jmp r-xdata
mov rax [ rsp + 0x50 ]
mov [ rsp + 0x30 ] rax
mov rax [ rsp + 0x30 ]
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
mov eax [ rsp + 0x28 ]
mov rax [ rsp + 0x20 ]
mov [ rsp + 0x48 ] rax
mov rax [ rsp + 0x48 ]
mov [ rsp + 0x40 ] rax
cmp [ rsp + 0x40 ] 0x0
je r-xdata
mov [ rsp + 0x58 ] 0x0
mov rax [ rsp + 0x40 ]
mov rax [ rax ]
mov edx 0x1
mov rcx [ rsp + 0x40 ]
call [ rax + 0x18 ]
mov [ rsp + 0x58 ] rax
jmp r-xdata
sub_1800015b0
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
cmp [ rsp + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
retn
sub_1800015f0
sub rsp 0x288
lea rax [ rw-data ]
add rax 0xd
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx ] rax
mov rax [ rw-data ]
cmp [ rax ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x26
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x30 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x30 ]
mov [ rax + 0x8 ] rcx
cmp [ rsp + 0x30 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x3c
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x38 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x38 ]
mov [ rax + 0x10 ] rcx
cmp [ rsp + 0x38 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
add rsp 0x288
retn
lea rax [ rw-data ]
add rax 0x50
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x40 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x40 ]
mov [ rax + 0x18 ] rcx
cmp [ rsp + 0x40 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x95
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x48 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x48 ]
mov [ rax + 0x20 ] rcx
cmp [ rsp + 0x48 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x9e
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x50 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x50 ]
mov [ rax + 0x28 ] rcx
cmp [ rsp + 0x50 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0xaa
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x58 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x58 ]
mov [ rax + 0x30 ] rcx
cmp [ rsp + 0x58 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0xb4
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x60 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x60 ]
mov [ rax + 0x38 ] rcx
cmp [ rsp + 0x60 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0xc0
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x68 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x68 ]
mov [ rax + 0x40 ] rcx
cmp [ rsp + 0x68 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0xcc
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x70 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x70 ]
mov [ rax + 0x48 ] rcx
cmp [ rsp + 0x70 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0xd9
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x78 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x78 ]
mov [ rax + 0x50 ] rcx
cmp [ rsp + 0x78 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0xe5
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x80 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x80 ]
mov [ rax + 0x58 ] rcx
cmp [ rsp + 0x80 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0xee
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x88 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x88 ]
mov [ rax + 0x60 ] rcx
cmp [ rsp + 0x88 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0xfa
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x90 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x90 ]
mov [ rax + 0x68 ] rcx
cmp [ rsp + 0x90 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x103
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x98 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x98 ]
mov [ rax + 0x70 ] rcx
cmp [ rsp + 0x98 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x127
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xa0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xa0 ]
mov [ rax + 0x88 ] rcx
cmp [ rsp + 0xa0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x130
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xa8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xa8 ]
mov [ rax + 0xa8 ] rcx
cmp [ rsp + 0xa8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x13d
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xb0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xb0 ]
mov [ rax + 0x110 ] rcx
cmp [ rsp + 0xb0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x147
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xb8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xb8 ]
mov [ rax + 0x90 ] rcx
cmp [ rsp + 0xb8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x1a2
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xc0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xc0 ]
mov [ rax + 0xb8 ] rcx
cmp [ rsp + 0xc0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x1ae
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xc8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xc8 ]
mov [ rax + 0xc0 ] rcx
cmp [ rsp + 0xc8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x1e3
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xd0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xd0 ]
mov [ rax + 0xc8 ] rcx
cmp [ rsp + 0xd0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x1f6
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xd8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xd8 ]
mov [ rax + 0xd8 ] rcx
cmp [ rsp + 0xd8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x20b
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xe0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xe0 ]
mov [ rax + 0xe0 ] rcx
cmp [ rsp + 0xe0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x220
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xe8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xe8 ]
mov [ rax + 0xe8 ] rcx
cmp [ rsp + 0xe8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x23a
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xf0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xf0 ]
mov [ rax + 0xf8 ] rcx
cmp [ rsp + 0xf0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x247
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xf8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xf8 ]
mov [ rax + 0x100 ] rcx
cmp [ rsp + 0xf8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x280
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x100 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x100 ]
mov [ rax + 0x118 ] rcx
cmp [ rsp + 0x100 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x290
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x108 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x108 ]
mov [ rax + 0x260 ] rcx
cmp [ rsp + 0x108 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x2b8
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x110 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x110 ]
mov [ rax + 0x270 ] rcx
cmp [ rsp + 0x110 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x358
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x118 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x118 ]
mov [ rax + 0x210 ] rcx
cmp [ rsp + 0x118 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x22d
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x120 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x120 ]
mov [ rax + 0xf0 ] rcx
cmp [ rsp + 0x120 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x2f6
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x128 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x128 ]
mov [ rax + 0x120 ] rcx
cmp [ rsp + 0x128 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x3c
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x130 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x130 ]
mov [ rax + 0x10 ] rcx
cmp [ rsp + 0x130 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x1f0
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x138 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x138 ]
mov [ rax + 0xd0 ] rcx
cmp [ rsp + 0x138 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x376
mov rcx rax
call [ LoadLibraryA@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x383
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x140 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x140 ]
mov [ rax + 0x128 ] rcx
cmp [ rsp + 0x140 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x392
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x148 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x148 ]
mov [ rax + 0x130 ] rcx
cmp [ rsp + 0x148 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x3a3
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x150 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x150 ]
mov [ rax + 0x138 ] rcx
cmp [ rsp + 0x150 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x3b1
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x158 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x158 ]
mov [ rax + 0x140 ] rcx
cmp [ rsp + 0x158 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x6a3
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x160 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x160 ]
mov [ rax + 0x2e0 ] rcx
cmp [ rsp + 0x160 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x6b7
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x168 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x168 ]
mov [ rax + 0x2e8 ] rcx
cmp [ rsp + 0x168 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x6c7
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x170 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x170 ]
mov [ rax + 0x2b0 ] rcx
cmp [ rsp + 0x170 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x6d4
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x178 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x178 ]
mov [ rax + 0x2b8 ] rcx
cmp [ rsp + 0x178 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x6e5
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x180 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x180 ]
mov [ rax + 0x2c0 ] rcx
cmp [ rsp + 0x180 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x6f4
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x188 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x188 ]
mov [ rax + 0x2c8 ] rcx
cmp [ rsp + 0x188 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x700
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x190 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x190 ]
mov [ rax + 0x2d0 ] rcx
cmp [ rsp + 0x190 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x70f
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x198 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x198 ]
mov [ rax + 0x2d8 ] rcx
cmp [ rsp + 0x198 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rsp + 0x20 ] 0x0
lea rax [ rw-data ]
add rax 0x43d
mov rcx rax
call [ LoadLibraryA@IAT ]
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x448
mov rdx rax
mov rcx [ rsp + 0x20 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1a0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1a0 ]
mov [ rax + 0x180 ] rcx
cmp [ rsp + 0x1a0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x44f
mov rdx rax
mov rcx [ rsp + 0x20 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1a8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1a8 ]
mov [ rax + 0x188 ] rcx
cmp [ rsp + 0x1a8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x456
mov rdx rax
mov rcx [ rsp + 0x20 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1b0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1b0 ]
mov [ rax + 0x198 ] rcx
cmp [ rsp + 0x1b0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x45b
mov rdx rax
mov rcx [ rsp + 0x20 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1b8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1b8 ]
mov [ rax + 0x1a0 ] rcx
cmp [ rsp + 0x1b8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x480
mov rdx rax
mov rcx [ rsp + 0x20 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1c0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1c0 ]
mov [ rax + 0x1c0 ] rcx
cmp [ rsp + 0x1c0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x475
mov rdx rax
mov rcx [ rsp + 0x20 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1c8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1c8 ]
mov [ rax + 0x1c8 ] rcx
cmp [ rsp + 0x1c8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x4d7
mov rcx rax
call [ LoadLibraryA@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x4e2
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1d0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1d0 ]
mov [ rax + 0x1e0 ] rcx
cmp [ rsp + 0x1d0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x4f6
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1d8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1d8 ]
mov [ rax + 0x1e8 ] rcx
cmp [ rsp + 0x1d8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x3bd
mov rcx rax
call [ LoadLibraryA@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x364
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1e0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1e0 ]
mov [ rax + 0x1b8 ] rcx
cmp [ rsp + 0x1e0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x461
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1e8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1e8 ]
mov [ rax + 0x1a8 ] rcx
cmp [ rsp + 0x1e8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x46b
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1f0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1f0 ]
mov [ rax + 0x278 ] rcx
cmp [ rsp + 0x1f0 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x647
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x1f8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x1f8 ]
mov [ rax + 0x2a0 ] rcx
cmp [ rsp + 0x1f8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x659
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x200 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x200 ]
mov [ rax + 0x190 ] rcx
cmp [ rsp + 0x200 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rsp + 0x28 ] 0x0
lea rax [ rw-data ]
add rax 0x66d
mov rcx rax
call [ LoadLibraryA@IAT ]
mov [ rsp + 0x28 ] rax
cmp [ rsp + 0x28 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x679
mov rdx rax
mov rcx [ rsp + 0x28 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x208 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x208 ]
mov [ rax + 0x178 ] rcx
cmp [ rsp + 0x208 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x68e
mov rdx rax
mov rcx [ rsp + 0x28 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x210 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x210 ]
mov [ rax + 0x2a8 ] rcx
cmp [ rsp + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x525
mov rcx rax
call [ LoadLibraryA@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x724
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x218 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x218 ]
mov [ rax + 0x258 ] rcx
cmp [ rsp + 0x218 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x732
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x220 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x220 ]
mov [ rax + 0x2f8 ] rcx
cmp [ rsp + 0x220 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x743
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x228 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x228 ]
mov [ rax + 0x218 ] rcx
cmp [ rsp + 0x228 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x756
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x230 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x230 ]
mov [ rax + 0x250 ] rcx
cmp [ rsp + 0x230 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x770
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x238 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x238 ]
mov [ rax + 0x248 ] rcx
cmp [ rsp + 0x238 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x784
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x240 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x240 ]
mov [ rax + 0x238 ] rcx
cmp [ rsp + 0x240 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x795
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x248 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x248 ]
mov [ rax + 0x230 ] rcx
cmp [ rsp + 0x248 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x7a7
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x250 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x250 ]
mov [ rax + 0x220 ] rcx
cmp [ rsp + 0x250 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x7c2
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x258 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x258 ]
mov [ rax + 0x240 ] rcx
cmp [ rsp + 0x258 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x7e5
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x260 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x260 ]
mov [ rax + 0x228 ] rcx
cmp [ rsp + 0x260 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x825
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x268 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x268 ]
mov [ rax + 0x300 ] rcx
cmp [ rsp + 0x268 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x2cd
mov [ rsp + 0x270 ] rax
lea rcx [ rw-data ]
add rcx 0x314
call [ LoadLibraryA@IAT ]
mov rcx [ rsp + 0x270 ]
mov rdx rcx
mov rcx rax
call [ GetProcAddress@IAT ]
mov [ rsp + 0x278 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x278 ]
mov [ rax + 0x268 ] rcx
cmp [ rsp + 0x278 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x589
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x578
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x567
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
sub_180002d70
sub rsp 0x48
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x38 ] rax
mov [ rsp + 0x30 ] 0x5a
mov [ rsp + 0x31 ] 0x4f
mov [ rsp + 0x32 ] 0xb8
mov [ rsp + 0x33 ] 0x17
mov [ rsp + 0x34 ] 0x4e
mov [ rsp + 0x35 ] 0x68
lea r9 [ rsp + 0x30 ]
xor r8d r8d
mov edx 0x838
lea rcx [ rw-data ]
call sub_180005e40
lea rcx [ rw-data ]
call [ LoadLibraryA@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x7f6
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x36d
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov rcx [ rsp + 0x38 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x48
retn
mov [ rsp + 0x28 ] 0x29
mov [ rsp + 0x29 ] 0x67
mov [ rsp + 0x2a ] 0x7f
mov [ rsp + 0x2b ] 0x2d
mov [ rsp + 0x2c ] 0x5e
mov [ rsp + 0x2d ] 0x41
lea r9 [ rsp + 0x28 ]
xor r8d r8d
mov edx 0x46f
lea rcx [ rw-data ]
call sub_180005e40
lea rax [ rw-data ]
add rax 0x1a
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x6a
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x82
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x8b
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
xor r8d r8d
xor edx edx
xor ecx ecx
call [ rw-data ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov r8d 0x308
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
call sub_1800015f0
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
xor eax eax
mov eax 0x1
jmp r-xdata
sub_180002fe0
sub rsp 0x28
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov r8 [ rw-data ]
xor edx edx
mov rcx [ rw-data ]
call [ HeapFree@IAT ]
add rsp 0x28
retn
mov [ rw-data ] 0x0
mov rcx [ rw-data ]
call [ HeapDestroy@IAT ]
sub_180003040
sub rsp 0x68
mov [ rsp + 0x50 ] 0x0
add rsp 0x68
retn
cmp [ rsp + 0x50 ] 0xffffffff
jne r-xdata
cmp [ rsp + 0x28 ] 0x16
jne r-xdata
jmp r-xdata
lea rcx [ rsp + 0x20 ]
call [ rw-data ]
lea rcx [ rsp + 0x20 ]
call [ rw-data ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor r9d r9d
xor r8d r8d
xor edx edx
lea rcx [ rsp + 0x20 ]
call [ rw-data ]
mov [ rsp + 0x50 ] eax
cmp [ rsp + 0x50 ] 0x0
je r-xdata
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x110 ]
mov ecx 0x3e8
mov rax [ rw-data ]
call [ rax + 0xd0 ]
jmp r-xdata
sub_1800030d0
mov [ rsp + 0x8 ] rcx
sub rsp 0x38
lea rax [ rw-data ]
add rax 0x75
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov ecx 0x1
call rax
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x18 ]
call sub_18000ab10
test eax eax
je r-xdata
xor r9d r9d
xor r8d r8d
mov edx 0x1
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xa8 ]
mov [ rw-data ] rax
call sub_180004b80
call sub_180004be0
call sub_18000bc40
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1a8 ]
test eax eax
je r-xdata
call sub_18000b380
mov eax 0x1
jmp r-xdata
call sub_180008120
call sub_1800080e0
call sub_18000d400
mov [ rsp + 0x20 ] rax
mov r9d 0xffffffff
xor r8d r8d
mov edx 0x4
lea rcx [ rw-data ]
call sub_18000d540
call sub_180003040
mov edx 0xffffffff
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1a8 ]
test eax eax
je r-xdata
call sub_180009690
add rsp 0x38
retn
call sub_18000bbe0
call sub_180004bc0
call sub_18000b380
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x8 ]
mov eax 0x1
call sub_180009720
mov edx 0xffffffff
mov rcx [ rsp + 0x20 ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
sub_180003250
sub rsp 0x58
mov [ rsp + 0x48 ] rsp
mov [ rsp + 0x30 ] 0x0
lea r8 [ r--data ]
mov edx 0x1
xor ecx ecx
call [ CreateMutexA@IAT ]
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
call sub_180002d70
test eax eax
je r-xdata
mov eax [ rsp + 0x30 ]
mov [ rsp + 0x34 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x48 ]
call sub_180010450
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rsp + 0x30 ]
mov [ rsp + 0x38 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x48 ]
call sub_180010450
mov eax [ rsp + 0x30 ]
mov [ rsp + 0x40 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x48 ]
call sub_180010450
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
lea r8 [ sub_1800030d0 ]
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xf0 ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rsp + 0x30 ]
jmp r-xdata
call sub_180002fe0
jmp r-xdata
mov eax [ rsp + 0x30 ]
mov [ rsp + 0x3c ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x48 ]
call sub_180010450
add rsp 0x58
retn
mov [ rsp + 0x30 ] 0x1
cmp [ rsp + 0x30 ] 0x0
jne r-xdata
sub_180003370
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x38
mov eax [ rsp + 0x48 ]
mov [ rsp + 0x20 ] eax
cmp [ rsp + 0x20 ] 0x1
je r-xdata
mov rax [ rsp + 0x40 ]
mov [ rw-data ] rax
mov rcx [ rsp + 0x40 ]
call [ DisableThreadLibraryCalls@IAT ]
jmp r-xdata
mov eax 0x1
add rsp 0x38
retn
sub_1800033c0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x48
mov [ rsp + 0x20 ] 0x0
mov [ rsp + 0x24 ] 0x0
mov rax [ rsp + 0x58 ]
mov eax [ rax ]
mov [ rsp + 0x2c ] eax
mov [ rsp + 0x28 ] 0x0
mov rax [ rsp + 0x58 ]
add rax 0x4
mov [ rsp + 0x58 ] rax
mov eax [ rsp + 0x50 ]
sub rax 0x4
mov [ rsp + 0x50 ] eax
mov [ rsp + 0x30 ] 0x0
jmp r-xdata
mov eax [ rsp + 0x2c ]
cmp [ rsp + 0x30 ] eax
jae r-xdata
xor eax eax
mov rax [ rsp + 0x58 ]
mov eax [ rax ]
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x58 ]
add rax 0x4
mov [ rsp + 0x58 ] rax
mov eax [ rsp + 0x50 ]
sub rax 0x4
mov [ rsp + 0x50 ] eax
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x20 ]
mov [ rsp + 0x24 ] eax
mov eax [ rsp + 0x24 ]
inc eax
mov ecx [ rsp + 0x50 ]
sub ecx eax
mov eax ecx
mov [ rsp + 0x50 ] eax
cmp [ rsp + 0x50 ] 0x0
jge r-xdata
mov r8d [ rsp + 0x24 ]
mov rdx [ rsp + 0x58 ]
mov ecx [ rsp + 0x20 ]
call sub_18000b3e0
mov [ rsp + 0x28 ] eax
cmp [ rsp + 0x28 ] 0x0
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov eax [ rsp + 0x24 ]
inc eax
mov eax eax
mov rcx [ rsp + 0x58 ]
add rcx rax
mov rax rcx
mov [ rsp + 0x58 ] rax
jmp r-xdata
mov eax [ rsp + 0x28 ]
jmp r-xdata
add rsp 0x48
retn
mov eax [ rsp + 0x30 ]
inc eax
mov [ rsp + 0x30 ] eax
sub_1800034e0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
push rdi
mov eax 0x1040
call sub_180012de0
sub rsp rax
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x1038 ] rax
mov [ rsp + 0x1030 ] 0x0
xor eax eax
mov [ rsp + 0x30 ] ax
lea rax [ rsp + 0x32 ]
mov rdi rax
xor eax eax
mov ecx 0x7fe
[ rdi ]
xor eax eax
mov [ rsp + 0x830 ] ax
lea rax [ rsp + 0x832 ]
mov rdi rax
xor eax eax
mov ecx 0x7fe
[ rdi ]
lea rax [ rw-data ]
add rax 0x830
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov r8d 0x400
lea rdx [ rsp + 0x30 ]
mov rcx [ rw-data ]
call rax
test eax eax
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x1030 ] eax
lea rcx [ rsp + 0x30 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8 rax
lea rdx [ rsp + 0x30 ]
lea rcx [ rsp + 0x830 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
lea rcx [ rsp + 0x830 ]
mov rax [ rw-data ]
call [ rax + 0x190 ]
lea rax [ rw-data ]
add rax 0x102
mov rdx rax
lea rcx [ rsp + 0x830 ]
mov rax [ rw-data ]
call [ rax + 0x58 ]
lea rax [ rw-data ]
add rax 0x254
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov r8d 0x1
lea rdx [ rsp + 0x830 ]
lea rcx [ rsp + 0x30 ]
call rax
test eax eax
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x1030 ] eax
mov r8d [ rsp + 0x1050 ]
mov rdx [ rsp + 0x1058 ]
lea rcx [ rsp + 0x30 ]
call sub_180006c60
mov [ rsp + 0x1030 ] eax
jmp r-xdata
mov eax [ rsp + 0x1030 ]
mov rcx [ rsp + 0x1038 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x1040
pop rdi
retn
jmp r-xdata
sub_180003690
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
push rdi
sub rsp 0x110
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x100 ] rax
mov [ rsp + 0x40 ] 0x0
mov [ rsp + 0xf8 ] 0x0
mov [ rsp + 0x5c ] 0x0
mov [ rsp + 0x58 ] 0x0
mov rax [ rsp + 0x128 ]
mov eax [ rax ]
mov [ rsp + 0xf0 ] eax
mov rax [ rsp + 0x128 ]
add rax 0x4
mov [ rsp + 0x128 ] rax
mov eax [ rsp + 0x120 ]
sub rax 0x4
mov [ rsp + 0x120 ] eax
mov rax [ rsp + 0x128 ]
mov [ rsp + 0x40 ] rax
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x20 ]
inc eax
mov ecx [ rsp + 0x120 ]
sub ecx eax
mov eax ecx
mov [ rsp + 0x120 ] eax
cmp [ rsp + 0x120 ] 0x0
jge r-xdata
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x20 ]
inc eax
cdqe
mov rcx [ rsp + 0x128 ]
add rcx rax
mov rax rcx
mov [ rsp + 0x128 ] rax
mov rax [ rsp + 0x128 ]
mov eax [ rax ]
mov [ rsp + 0x48 ] eax
mov rax [ rsp + 0x128 ]
add rax 0x4
mov [ rsp + 0x128 ] rax
mov rax [ rsp + 0x128 ]
mov [ rsp + 0xf8 ] rax
mov eax [ rsp + 0x48 ]
add rax 0x4
mov ecx [ rsp + 0x120 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x120 ] eax
cmp [ rsp + 0x120 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov [ rsp + 0x50 ] 0x0
xor eax eax
mov [ rsp + 0x70 ] ax
lea rax [ rsp + 0x72 ]
mov rdi rax
xor eax eax
mov ecx 0x7e
[ rdi ]
lea rax [ rw-data ]
add rax 0x201
mov r9 [ rsp + 0x40 ]
mov r8 rax
mov edx 0x40
lea rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x6
mov [ rsp + 0x20 ] 0x2
xor r9d r9d
xor r8d r8d
mov edx 0x40000000
lea rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x50 ] rax
cmp [ rsp + 0x50 ] 0xffffffffffffffff
jne r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x100 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x110
pop rdi
retn
lea r9 [ rw-data ]
xor r8d r8d
lea rdx [ rw-data ]
mov rcx [ rsp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x38 ]
test eax eax
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x5c ]
mov r8d [ rsp + 0x48 ]
mov rdx [ rsp + 0xf8 ]
mov rcx [ rsp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
test eax eax
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov rcx [ rsp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
mov edx [ rsp + 0xf0 ]
mov rcx [ rsp + 0x40 ]
call sub_18000b740
jmp r-xdata
sub_180003970
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
push rdi
sub rsp 0x80
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x70 ] rax
mov [ rsp + 0x48 ] 0x0
mov [ rsp + 0x50 ] 0x0
lea rax [ rsp + 0x58 ]
mov rdi rax
xor eax eax
mov ecx 0x10
[ rdi ]
mov [ rsp + 0x28 ] 0x0
lea rax [ rsp + 0x29 ]
mov rdi rax
xor eax eax
mov ecx 0x1f
[ rdi ]
mov [ rsp + 0x4c ] 0x0
lea r9 [ rsp + 0x50 ]
mov r8 [ rw-data ]
mov rdx [ rw-data ]
mov rcx [ rw-data ]
call sub_180005180
mov [ rsp + 0x4c ] eax
cmp [ rsp + 0x4c ] 0x0
je r-xdata
mov [ rsp + 0x68 ] 0x0
jmp r-xdata
mov eax [ rsp + 0x4c ]
jmp r-xdata
cmp [ rsp + 0x68 ] 0xa
jge r-xdata
mov rcx [ rsp + 0x70 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x80
pop rdi
retn
lea rcx [ rsp + 0x50 ]
call sub_1800052d0
xor eax eax
mov eax [ rsp + 0x68 ]
add eax 0xa
mov edx eax
lea rcx [ rsp + 0x50 ]
call sub_1800057a0
mov [ rsp + 0x48 ] al
movzx eax [ rsp + 0x48 ]
inc eax
cdqe
cmp rax 0x20
jbe r-xdata
movzx eax [ rsp + 0x48 ]
test eax eax
jle r-xdata
jmp r-xdata
jmp r-xdata
mov eax [ rsp + 0x68 ]
add eax 0xa
lea r9 [ rsp + 0x28 ]
mov r8d eax
mov rdx [ rw-data ]
lea rcx [ rsp + 0x50 ]
call sub_1800056b0
movzx eax [ rsp + 0x48 ]
mov [ rsp + rax + 0x28 ] 0xa
movzx eax [ rsp + 0x48 ]
inc eax
cdqe
mov [ rsp + rax + 0x28 ] 0x0
lea rcx [ rsp + 0x28 ]
mov rax [ rw-data ]
call [ rax + 0x20 ]
mov r8d eax
lea rdx [ rsp + 0x28 ]
mov rcx [ rsp + 0xa0 ]
call sub_18000a2e0
mov eax [ rsp + 0x68 ]
inc eax
mov [ rsp + 0x68 ] eax
sub_180003ae0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov [ rsp + 0x24 ] 0x0
mov [ rsp + 0x20 ] 0x31
mov r8d 0x1
lea rdx [ rsp + 0x20 ]
mov ecx 0x8
call sub_18000b3e0
mov [ rsp + 0x24 ] eax
cmp [ rsp + 0x24 ] 0x0
je r-xdata
call sub_180009690
mov eax [ rsp + 0x24 ]
jmp r-xdata
add rsp 0x38
retn
sub_180003b30
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov [ rsp + 0x24 ] 0x0
mov [ rsp + 0x20 ] 0x30
mov r8d 0x1
lea rdx [ rsp + 0x20 ]
mov ecx 0x8
call sub_18000b3e0
mov [ rsp + 0x24 ] eax
cmp [ rsp + 0x24 ] 0x0
je r-xdata
call sub_180009720
mov eax [ rsp + 0x24 ]
jmp r-xdata
add rsp 0x38
retn
sub_180003be0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
movsxd rax [ rsp + 0x40 ]
mov [ rsp + 0x20 ] rax
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov rcx [ rsp + 0x20 ]
cmp rcx rax
jae r-xdata
mov rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0x48 ]
call sub_1800069f0
mov eax 0xeeeeeef4
jmp r-xdata
add rsp 0x38
retn
sub_180003c40
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov [ rsp + 0x20 ] 0x0
xor eax eax
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov [ rsp + 0x20 ] eax
mov eax [ rsp + 0x20 ]
mov ecx [ rsp + 0x40 ]
sub ecx eax
mov eax ecx
mov [ rsp + 0x40 ] eax
cmp [ rsp + 0x40 ] 0x0
jge r-xdata
mov r8 [ rsp + 0x48 ]
mov edx [ rsp + 0x20 ]
mov ecx 0x6
call sub_180005050
mov eax [ rsp + 0x20 ]
mov rcx [ rsp + 0x48 ]
add rcx rax
mov rax rcx
mov [ rsp + 0x48 ] rax
jmp r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
cmp [ rsp + 0x40 ] 0x0
jbe r-xdata
add rsp 0x38
retn
sub_180003cd0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov rax [ rsp + 0x48 ]
mov [ rsp + 0x20 ] rax
mov rcx [ rsp + 0x20 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x40 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x40 ] eax
cmp [ rsp + 0x40 ] 0x0
jge r-xdata
mov rcx [ rsp + 0x20 ]
call [ rw-data ]
inc eax
cdqe
mov rcx [ rsp + 0x48 ]
lea rax [ rcx + rax * 2 ]
mov [ rsp + 0x48 ] rax
mov rax [ rsp + 0x48 ]
mov eax [ rax ]
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x48 ]
add rax 0x4
mov [ rsp + 0x48 ] rax
mov eax [ rsp + 0x28 ]
add rax 0x4
mov ecx [ rsp + 0x40 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x40 ] eax
mov rcx [ rsp + 0x20 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x20 ]
mov rcx [ rsp + 0x50 ]
call sub_18000a2e0
cmp [ rsp + 0x40 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov r8d [ rsp + 0x28 ]
mov rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0x20 ]
call sub_180006c60
mov eax 0xeeeeeef4
jmp r-xdata
add rsp 0x38
retn
sub_180003dc0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
push rdi
sub rsp 0x440
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x438 ] rax
mov rcx [ rsp + 0x458 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x458 ]
mov rcx [ rsp + 0x460 ]
call sub_18000a2e0
movsxd rax [ rsp + 0x450 ]
mov [ rsp + 0x430 ] rax
mov rcx [ rsp + 0x458 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov rcx [ rsp + 0x430 ]
cmp rcx rax
jae r-xdata
lea rax [ rw-data ]
add rax 0x179
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rsp + 0x458 ]
call rax
test eax eax
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x458 ]
mov rax [ rw-data ]
call [ rax + 0x50 ]
test eax eax
je r-xdata
xor eax eax
mov [ rsp + 0x30 ] ax
lea rax [ rsp + 0x32 ]
mov rdi rax
xor eax eax
mov ecx 0x3fe
[ rdi ]
lea rax [ rw-data ]
add rax 0xc4
mov r9 [ rsp + 0x458 ]
mov r8 rax
mov edx 0x200
lea rcx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
mov rdx [ rsp + 0x460 ]
lea rcx [ rsp + 0x30 ]
call sub_18000c240
jmp r-xdata
mov rcx [ rsp + 0x438 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x440
pop rdi
retn
mov rax [ rw-data ]
call [ rax + 0x48 ]
xor eax eax
jmp r-xdata
sub_180003f20
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov rax [ rsp + 0x48 ]
mov [ rsp + 0x20 ] rax
mov rcx [ rsp + 0x20 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x40 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x40 ] eax
cmp [ rsp + 0x40 ] 0x0
jge r-xdata
mov rcx [ rsp + 0x20 ]
call [ rw-data ]
inc eax
cdqe
mov rcx [ rsp + 0x48 ]
lea rax [ rcx + rax * 2 ]
mov [ rsp + 0x48 ] rax
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x40 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x40 ] eax
cmp [ rsp + 0x40 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x278 ]
mov [ rsp + 0x2c ] eax
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
inc eax
cdqe
mov rcx [ rsp + 0x48 ]
lea rax [ rcx + rax * 2 ]
mov [ rsp + 0x48 ] rax
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x40 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x40 ] eax
cmp [ rsp + 0x40 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
add rsp 0x38
retn
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x278 ]
mov [ rsp + 0x28 ] eax
mov r9 [ rsp + 0x50 ]
mov r8d [ rsp + 0x28 ]
mov edx [ rsp + 0x2c ]
mov rcx [ rsp + 0x20 ]
call sub_180006d30
mov eax 0xeeeeeef4
jmp r-xdata
sub_180004050
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov [ rsp + 0x20 ] 0x0
xor eax eax
mov rax [ rsp + 0x48 ]
mov eax [ rax ]
mov [ rsp + 0x20 ] eax
mov eax [ rsp + 0x20 ]
mov ecx [ rsp + 0x40 ]
sub ecx eax
mov eax ecx
mov [ rsp + 0x40 ] eax
cmp [ rsp + 0x40 ] 0x0
jge r-xdata
mov rax [ rsp + 0x48 ]
add rax 0x4
mov [ rsp + 0x48 ] rax
mov rax [ rsp + 0x48 ]
mov eax [ rax ]
mov [ rsp + 0x24 ] eax
mov rax [ rsp + 0x48 ]
add rax 0x4
mov [ rsp + 0x48 ] rax
mov eax [ rsp + 0x20 ]
sub rax 0x8
mov r8 [ rsp + 0x48 ]
mov edx eax
mov ecx [ rsp + 0x24 ]
call sub_180005050
mov eax [ rsp + 0x20 ]
mov rcx [ rsp + 0x48 ]
lea rax [ rcx + rax - 0x8 ]
mov [ rsp + 0x48 ] rax
jmp r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
cmp [ rsp + 0x40 ] 0x0
jbe r-xdata
add rsp 0x38
retn
sub_180004100
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x58
mov [ rsp + 0x34 ] 0x0
mov eax [ rsp + 0x60 ]
sub rax 0x4
mov [ rsp + 0x60 ] eax
mov rax [ rsp + 0x68 ]
add rax 0x4
mov [ rsp + 0x68 ] rax
cmp [ rsp + 0x60 ] 0x0
jge r-xdata
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x38 ] 0x0
mov eax [ rsp + 0x60 ]
mov [ rsp + 0x40 ] rax
lea rcx [ rw-data ]
add rcx 0x260
mov rdx rcx
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
lea r9 [ rsp + 0x30 ]
mov r8d 0x40
mov rcx [ rsp + 0x40 ]
mov rdx rcx
mov rcx [ rsp + 0x68 ]
call rax
test eax eax
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x34 ] eax
lea rax [ rsp + 0x30 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
mov r8 [ rsp + 0x68 ]
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xf0 ]
mov [ rsp + 0x38 ] rax
cmp [ rsp + 0x38 ] 0x0
je r-xdata
add rsp 0x58
retn
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x34 ] eax
mov edx 0xffffffff
mov rcx [ rsp + 0x38 ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
lea rax [ rw-data ]
add rax 0x302
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
lea rdx [ rsp + 0x34 ]
mov rcx [ rsp + 0x38 ]
call rax
jmp r-xdata
mov eax [ rsp + 0x34 ]
jmp r-xdata
sub_180004240
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x58
mov [ rsp + 0x20 ] 0x0
mov rax [ rsp + 0x68 ]
mov [ rsp + 0x28 ] rax
mov rcx [ rsp + 0x28 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x60 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x60 ] eax
cmp [ rsp + 0x60 ] 0x0
jge r-xdata
mov rcx [ rsp + 0x28 ]
call sub_18000c550
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x28 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x28 ]
mov rcx [ rsp + 0x70 ]
call sub_18000a2e0
mov eax 0xeeeeeef1
mov rcx [ rsp + 0x28 ]
call [ rw-data ]
cdqe
mov rcx [ rsp + 0x28 ]
lea rax [ rcx + rax * 2 + 0x2 ]
mov [ rsp + 0x30 ] rax
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x60 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x60 ] eax
cmp [ rsp + 0x60 ] 0x0
jge r-xdata
add rsp 0x58
retn
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
cdqe
mov rcx [ rsp + 0x30 ]
lea rax [ rcx + rax * 2 + 0x2 ]
mov [ rsp + 0x40 ] rax
mov rcx [ rsp + 0x40 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x60 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x60 ] eax
cmp [ rsp + 0x60 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x278 ]
mov [ rsp + 0x38 ] eax
mov r9d [ rsp + 0x38 ]
mov r8 [ rsp + 0x30 ]
mov rdx [ rsp + 0x20 ]
mov rcx [ rsp + 0x70 ]
call sub_18000c630
jmp r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
sub_1800043b0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x68
mov [ rsp + 0x30 ] 0x0
mov rax [ rsp + 0x78 ]
mov [ rsp + 0x38 ] rax
mov rcx [ rsp + 0x38 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x70 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x70 ] eax
cmp [ rsp + 0x70 ] 0x0
jge r-xdata
mov rcx [ rsp + 0x38 ]
call sub_18000c550
mov [ rsp + 0x30 ] rax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x38 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x38 ]
mov rcx [ rsp + 0x80 ]
call sub_18000a2e0
mov eax 0xeeeeeef1
mov rcx [ rsp + 0x38 ]
call [ rw-data ]
cdqe
mov rcx [ rsp + 0x38 ]
lea rax [ rcx + rax * 2 + 0x2 ]
mov [ rsp + 0x48 ] rax
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x70 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x70 ] eax
cmp [ rsp + 0x70 ] 0x0
jge r-xdata
add rsp 0x68
retn
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
cdqe
mov rcx [ rsp + 0x48 ]
lea rax [ rcx + rax * 2 + 0x2 ]
mov [ rsp + 0x50 ] rax
mov rcx [ rsp + 0x50 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x70 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x70 ] eax
cmp [ rsp + 0x70 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x50 ]
call [ rw-data ]
cdqe
mov rcx [ rsp + 0x50 ]
lea rax [ rcx + rax * 2 + 0x2 ]
mov [ rsp + 0x40 ] rax
mov rcx [ rsp + 0x40 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x70 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x70 ] eax
cmp [ rsp + 0x70 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rax [ rsp + 0x80 ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x40 ]
mov r8 [ rsp + 0x50 ]
mov rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0x30 ]
call sub_18000cfb0
jmp r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
sub_180004560
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x48
mov [ rsp + 0x20 ] 0x0
mov rax [ rsp + 0x58 ]
mov [ rsp + 0x28 ] rax
mov rcx [ rsp + 0x28 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x50 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x50 ] eax
cmp [ rsp + 0x50 ] 0x0
jge r-xdata
mov rcx [ rsp + 0x28 ]
call sub_18000c550
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x28 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x28 ]
mov rcx [ rsp + 0x60 ]
call sub_18000a2e0
mov eax 0xeeeeeef1
mov rcx [ rsp + 0x28 ]
call [ rw-data ]
cdqe
mov rcx [ rsp + 0x28 ]
lea rax [ rcx + rax * 2 + 0x2 ]
mov [ rsp + 0x30 ] rax
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x50 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x50 ] eax
cmp [ rsp + 0x50 ] 0x0
jge r-xdata
add rsp 0x48
retn
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
cdqe
mov rcx [ rsp + 0x30 ]
lea rax [ rcx + rax * 2 + 0x2 ]
mov [ rsp + 0x38 ] rax
mov rcx [ rsp + 0x38 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x50 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x50 ] eax
cmp [ rsp + 0x50 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov r9 [ rsp + 0x60 ]
mov r8 [ rsp + 0x38 ]
mov rdx [ rsp + 0x30 ]
mov rcx [ rsp + 0x20 ]
call sub_18000d0c0
jmp r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
sub_1800046f0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0x50 ]
call sub_18000a2e0
movsxd rax [ rsp + 0x40 ]
mov [ rsp + 0x20 ] rax
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov rcx [ rsp + 0x20 ]
cmp rcx rax
jae r-xdata
xor edx edx
mov rcx [ rsp + 0x48 ]
call sub_18000c0b0
mov eax 0xeeeeeef4
jmp r-xdata
add rsp 0x38
retn
sub_180004770
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0x50 ]
call sub_18000a2e0
lea rax [ rw-data ]
add rax 0xe6
mov r8d 0x4
mov rdx rax
mov rcx [ rsp + 0x50 ]
call sub_18000a2e0
movsxd rax [ rsp + 0x40 ]
mov [ rsp + 0x20 ] rax
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov rcx [ rsp + 0x20 ]
cmp rcx rax
jae r-xdata
mov rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0x48 ]
call sub_18000c240
mov eax 0xeeeeeef4
jmp r-xdata
add rsp 0x38
retn
sub_1800048c0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x1e8
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x1d8 ] rax
cmp [ rw-data ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x4c1
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
lea rdx [ rsp + 0x30 ]
mov cx 0x202
call rax
cmp [ rw-data ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x49d
mov rcx rax
call [ LoadLibraryA@IAT ]
mov [ rw-data ] rax
mov rax [ rw-data ]
cmp [ rax + 0x160 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x407
mov rcx rax
call [ LoadLibraryA@IAT ]
mov [ rw-data ] rax
mov rax [ rw-data ]
cmp [ rax + 0x168 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x40f
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x160 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x160 ] 0x0
jne r-xdata
mov rax [ rw-data ]
cmp [ rax + 0x170 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x41d
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x168 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x168 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov rax [ rw-data ]
cmp [ rax + 0x1d0 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x42f
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x170 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x170 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov rcx [ rsp + 0x1d8 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x1e8
retn
mov rax [ rw-data ]
cmp [ rax + 0x1d8 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x4b7
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x1d0 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x1d0 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov r8 [ rsp + 0x200 ]
xor edx edx
xor ecx ecx
call sub_18000a570
mov [ rsp + 0x1d0 ] eax
lea rax [ rw-data ]
add rax 0x4cc
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
call rax
mov eax [ rsp + 0x1d0 ]
lea rax [ rw-data ]
add rax 0x4a9
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x1d8 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x1d8 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
sub_180004b80
sub rsp 0x28
mov r8d 0x1a0
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x1
xor eax eax
jmp r-xdata
add rsp 0x28
retn
sub_180004be0
sub rsp 0x28
xor r8d r8d
lea rdx [ sub_1800033c0 ]
xor ecx ecx
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003690 ]
mov ecx 0x1
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003940 ]
mov ecx 0x2
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003ae0 ]
mov ecx 0x3
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003b30 ]
mov ecx 0x4
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003b80 ]
mov ecx 0x5
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003be0 ]
mov ecx 0x6
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003cd0 ]
mov ecx 0x7
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003dc0 ]
mov ecx 0x8
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180004240 ]
mov ecx 0x9
call sub_180004df0
xor r8d r8d
lea rdx [ sub_1800043b0 ]
mov ecx 0xa
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180004560 ]
mov ecx 0xb
call sub_180004df0
xor r8d r8d
lea rdx [ sub_1800046c0 ]
mov ecx 0xc
call sub_180004df0
xor r8d r8d
lea rdx [ sub_1800046f0 ]
mov ecx 0xd
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180004810 ]
mov ecx 0xe
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003970 ]
mov ecx 0xf
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180004850 ]
mov ecx 0x11
call sub_180004df0
xor r8d r8d
lea rdx [ sub_1800034e0 ]
mov ecx 0x12
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003f20 ]
mov ecx 0x13
call sub_180004df0
xor r8d r8d
lea rdx [ sub_1800048c0 ]
mov ecx 0x14
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003bb0 ]
mov ecx 0x16
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180004770 ]
mov ecx 0x10
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180004880 ]
mov ecx 0x15
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180003c40 ]
mov ecx 0x17
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180004050 ]
mov ecx 0x18
call sub_180004df0
xor r8d r8d
lea rdx [ sub_180004100 ]
mov ecx 0x19
call sub_180004df0
add rsp 0x28
retn
sub_180004df0
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov [ rsp + 0x20 ] 0x0
cmp [ rsp + 0x50 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ rsp + 0x20 ] eax
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov [ rsp + 0x20 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
cmp [ rsp + 0x20 ] eax
jae r-xdata
mov [ rsp + 0x20 ] 0x0
jmp r-xdata
mov eax [ rsp + 0x20 ]
imul rax rax 0x10
mov rcx [ rw-data ]
mov edx [ rsp + 0x40 ]
cmp [ rcx + rax + 0x8 ] edx
jne r-xdata
mov eax [ rw-data ]
cmp [ rsp + 0x20 ] eax
jae r-xdata
jmp r-xdata
mov eax 0xeeeeeef5
jmp r-xdata
mov eax [ rw-data ]
cmp [ rsp + 0x20 ] eax
jne r-xdata
mov eax [ rsp + 0x20 ]
imul rax rax 0x10
mov rcx [ rw-data ]
cmp [ rcx + rax + 0x8 ] 0x0
jne r-xdata
mov eax [ rsp + 0x20 ]
inc eax
mov [ rsp + 0x20 ] eax
add rsp 0x38
retn
jmp r-xdata
mov eax [ rw-data ]
inc eax
mov eax eax
imul rax rax 0x10
mov r9 rax
mov r8 [ rw-data ]
mov edx 0x8
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x60 ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ rsp + 0x20 ]
imul rax rax 0x10
mov rcx [ rw-data ]
cmp [ rcx + rax ] 0x0
jne r-xdata
mov eax [ rsp + 0x20 ]
imul rax rax 0x10
mov rcx [ rw-data ]
mov edx [ rsp + 0x40 ]
mov [ rcx + rax + 0x8 ] edx
mov eax [ rsp + 0x20 ]
imul rax rax 0x10
mov rcx [ rw-data ]
mov rdx [ rsp + 0x48 ]
mov [ rcx + rax ] rdx
mov eax 0x1
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
xor eax eax
jmp r-xdata
mov eax [ rsp + 0x20 ]
inc eax
mov [ rsp + 0x20 ] eax
jmp r-xdata
sub_180004f60
mov [ rsp + 0x8 ] ecx
sub rsp 0x18
mov [ rsp ] 0x0
mov [ rsp ] 0x0
jmp r-xdata
mov eax [ rw-data ]
cmp [ rsp ] eax
jae r-xdata
mov eax [ rw-data ]
cmp [ rsp ] eax
je r-xdata
mov eax [ rsp ]
imul rax rax 0x10
mov rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
cmp [ rcx + rax + 0x8 ] edx
jne r-xdata
add rsp 0x18
retn
mov eax [ rsp ]
imul rax rax 0x10
mov rcx [ rw-data ]
mov [ rcx + rax + 0x8 ] 0x0
mov eax [ rsp ]
imul rax rax 0x10
mov rcx [ rw-data ]
mov [ rcx + rax ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ rsp ]
inc eax
mov [ rsp ] eax
sub_180004ff0
mov [ rsp + 0x8 ] ecx
sub rsp 0x18
mov [ rsp ] 0x0
mov [ rsp ] 0x0
jmp r-xdata
mov eax [ rw-data ]
cmp [ rsp ] eax
jae r-xdata
xor eax eax
mov eax [ rsp ]
imul rax rax 0x10
mov rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
cmp [ rcx + rax + 0x8 ] edx
jne r-xdata
jmp r-xdata
mov eax [ rsp ]
imul rax rax 0x10
mov rcx [ rw-data ]
mov rax [ rcx + rax ]
jmp r-xdata
mov eax [ rsp ]
inc eax
mov [ rsp ] eax
add rsp 0x18
retn
sub_180005050
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] ecx
sub rsp 0x48
mov [ rsp + 0x20 ] 0x0
mov [ rsp + 0x2c ] 0x0
mov [ rsp + 0x28 ] 0x1
mov [ rsp + 0x30 ] 0x0
mov ecx [ rsp + 0x50 ]
call sub_180004ff0
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
lea r8 [ rsp + 0x30 ]
mov rdx [ rsp + 0x60 ]
mov ecx [ rsp + 0x58 ]
call [ rsp + 0x20 ]
mov [ rsp + 0x2c ] eax
mov [ rsp + 0x2c ] 0xeeeeeeef
mov [ rsp + 0x28 ] 0x0
jmp r-xdata
mov rcx [ rsp + 0x30 ]
call sub_18000a420
mov r9d [ rsp + 0x50 ]
mov r8d [ rsp + 0x2c ]
mov edx eax
mov rcx [ rsp + 0x30 ]
call sub_18000d540
mov rcx [ rsp + 0x30 ]
call sub_18000a460
mov eax [ rsp + 0x28 ]
add rsp 0x48
retn
sub_180005100
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x38
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x20 ] 0x0
mov rax [ rsp + 0x40 ]
cmp [ rax ] 0x75df9115
je r-xdata
mov rax [ rsp + 0x40 ]
mov eax [ rax + 0x4 ]
mov [ rsp + 0x28 ] eax
mov eax [ rsp + 0x48 ]
sub rax 0x8
mov [ rsp + 0x48 ] eax
cmp [ rsp + 0x48 ] 0x0
jbe r-xdata
xor eax eax
jmp r-xdata
mov [ rsp + 0x20 ] 0x0
mov rax [ rsp + 0x40 ]
add rax 0x8
mov [ rsp + 0x20 ] rax
jmp r-xdata
add rsp 0x38
retn
mov r8 [ rsp + 0x20 ]
mov edx [ rsp + 0x48 ]
mov ecx [ rsp + 0x28 ]
call sub_180005050
sub_180005180
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x48
mov [ rsp + 0x34 ] 0x0
mov rax [ rsp + 0x68 ]
mov [ rsp + 0x20 ] rax
mov r9d 0xf003f
xor r8d r8d
mov rdx [ rsp + 0x58 ]
mov rcx [ rsp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x138 ]
mov [ rsp + 0x34 ] eax
mov rax [ rsp + 0x68 ]
cmp [ rax ] 0x0
jne r-xdata
mov [ rsp + 0x30 ] 0x0
lea rax [ rsp + 0x30 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
mov rdx [ rsp + 0x60 ]
mov rax [ rsp + 0x68 ]
mov rcx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x130 ]
mov [ rsp + 0x34 ] eax
cmp [ rsp + 0x34 ] 0x0
je r-xdata
mov eax [ rsp + 0x34 ]
jmp r-xdata
mov eax [ rsp + 0x30 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov rcx [ rsp + 0x68 ]
mov [ rcx + 0x8 ] rax
mov rax [ rsp + 0x68 ]
cmp [ rax + 0x8 ] 0x0
jne r-xdata
mov eax [ rsp + 0x34 ]
jmp r-xdata
add rsp 0x48
retn
lea rax [ rsp + 0x30 ]
mov [ rsp + 0x28 ] rax
mov rax [ rsp + 0x68 ]
mov rax [ rax + 0x8 ]
mov [ rsp + 0x20 ] rax
xor r9d r9d
xor r8d r8d
mov rdx [ rsp + 0x60 ]
mov rax [ rsp + 0x68 ]
mov rcx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x130 ]
mov [ rsp + 0x34 ] eax
cmp [ rsp + 0x34 ] 0x0
je r-xdata
mov eax 0xffffffff
jmp r-xdata
mov rax [ rsp + 0x68 ]
mov ecx [ rsp + 0x30 ]
mov [ rax + 0x10 ] ecx
xor eax eax
mov eax [ rsp + 0x34 ]
jmp r-xdata
sub_1800052d0
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rax [ rsp + 0x30 ]
cmp [ rax ] 0x0
je r-xdata
mov rax [ rsp + 0x30 ]
cmp [ rax + 0x8 ] 0x0
je r-xdata
mov rax [ rsp + 0x30 ]
mov rcx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x140 ]
add rsp 0x28
retn
mov rax [ rsp + 0x30 ]
mov r8 [ rax + 0x8 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
sub_180005330
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x68
mov [ rsp + 0x40 ] 0x0
mov [ rsp + 0x3c ] 0x0
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x48 ] 0x0
jmp r-xdata
mov eax [ rsp + 0x80 ]
cmp [ rsp + 0x48 ] eax
jae r-xdata
mov eax [ rsp + 0x80 ]
add eax 0x6
mov eax eax
mov rcx [ rsp + 0x70 ]
mov rcx [ rcx + 0x8 ]
movzx eax [ rcx + rax ]
mov [ rsp + 0x3c ] eax
mov eax [ rsp + 0x40 ]
mov ecx [ rsp + 0x3c ]
lea eax [ rax + rcx + 0x1a ]
mov [ rsp + 0x38 ] eax
mov rax [ rsp + 0x70 ]
mov ecx [ rsp + 0x38 ]
mov eax [ rax + 0x10 ]
sub eax ecx
mov [ rsp + 0x44 ] eax
mov eax [ rsp + 0x44 ]
mov ecx [ rsp + 0x90 ]
add ecx eax
mov eax ecx
mov eax eax
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x30 ] rax
cmp [ rsp + 0x30 ] 0x0
jne r-xdata
mov eax [ rsp + 0x48 ]
add eax 0x6
mov eax eax
mov rcx [ rsp + 0x70 ]
mov rcx [ rcx + 0x8 ]
movzx eax [ rcx + rax ]
mov ecx [ rsp + 0x40 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x40 ] eax
jmp r-xdata
cmp [ rsp + 0x44 ] 0x0
je r-xdata
mov eax 0xeeeeeef2
jmp r-xdata
mov eax [ rsp + 0x48 ]
inc eax
mov [ rsp + 0x48 ] eax
cmp [ rsp + 0x90 ] 0x0
je r-xdata
mov eax [ rsp + 0x3c ]
cmp [ rsp + 0x90 ] eax
je r-xdata
add rsp 0x68
retn
mov eax [ rsp + 0x3c ]
cmp [ rsp + 0x90 ] eax
je r-xdata
mov eax [ rsp + 0x90 ]
mov r8d eax
mov rdx [ rsp + 0x88 ]
mov rcx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x3c ]
mov ecx [ rsp + 0x40 ]
add ecx eax
mov eax ecx
mov rcx [ rsp + 0x70 ]
mov rcx [ rcx + 0x8 ]
add rcx 0x1a
mov rdx [ rsp + 0x70 ]
mov r9 [ rdx + 0x8 ]
mov r8d eax
mov edx [ rsp + 0x44 ]
call sub_180005e40
mov eax [ rsp + 0x44 ]
mov ecx [ rsp + 0x38 ]
mov rdx [ rsp + 0x70 ]
add rcx [ rdx + 0x8 ]
mov edx [ rsp + 0x90 ]
mov r8 [ rsp + 0x30 ]
add r8 rdx
mov rdx r8
mov [ rsp + 0x50 ] rdx
mov r8d eax
mov rdx rcx
mov rax [ rsp + 0x50 ]
mov rcx rax
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x90 ]
mov ecx [ rsp + 0x40 ]
mov rdx [ rsp + 0x70 ]
mov rdx [ rdx + 0x8 ]
lea rcx [ rdx + rcx + 0x1a ]
mov r8d eax
mov rdx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov rax [ rsp + 0x70 ]
mov rax [ rax + 0x8 ]
add rax 0x1a
mov rcx [ rsp + 0x70 ]
mov r9 [ rcx + 0x8 ]
mov r8d [ rsp + 0x40 ]
mov edx [ rsp + 0x90 ]
mov rcx rax
call sub_180005e40
mov eax [ rsp + 0x80 ]
add eax 0x6
mov eax eax
mov rcx [ rsp + 0x70 ]
mov rcx [ rcx + 0x8 ]
movzx edx [ rsp + 0x90 ]
mov [ rax + rcx ] dl
mov eax [ rsp + 0x3c ]
mov ecx [ rsp + 0x90 ]
sub ecx eax
mov eax ecx
mov rcx [ rsp + 0x70 ]
add eax [ rcx + 0x10 ]
mov rcx [ rsp + 0x70 ]
mov [ rcx + 0x10 ] eax
mov rax [ rsp + 0x70 ]
mov eax [ rax + 0x10 ]
mov r9d eax
mov rax [ rsp + 0x70 ]
mov r8 [ rax + 0x8 ]
mov edx 0x8
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x60 ]
mov rcx [ rsp + 0x70 ]
mov [ rcx + 0x8 ] rax
mov rax [ rsp + 0x70 ]
cmp [ rax + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov eax [ rsp + 0x3c ]
jmp r-xdata
mov eax [ rsp + 0x44 ]
mov ecx [ rsp + 0x90 ]
add ecx eax
mov eax ecx
mov eax eax
mov ecx [ rsp + 0x40 ]
mov rdx [ rsp + 0x70 ]
mov rdx [ rdx + 0x8 ]
lea rcx [ rdx + rcx + 0x1a ]
mov r8d eax
mov rdx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x44 ]
mov ecx [ rsp + 0x90 ]
add ecx eax
mov eax ecx
mov rcx [ rsp + 0x70 ]
mov rcx [ rcx + 0x8 ]
add rcx 0x1a
mov rdx [ rsp + 0x70 ]
mov r9 [ rdx + 0x8 ]
mov r8d [ rsp + 0x40 ]
mov edx eax
call sub_180005e40
jmp r-xdata
mov r8 [ rsp + 0x30 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
mov eax 0xeeeeeef2
jmp r-xdata
mov rax [ rsp + 0x70 ]
mov eax [ rax + 0x10 ]
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x70 ]
mov rax [ rax + 0x8 ]
mov [ rsp + 0x20 ] rax
mov r9d 0x3
xor r8d r8d
mov rdx [ rsp + 0x78 ]
mov rax [ rsp + 0x70 ]
mov rcx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x128 ]
mov [ rsp + 0x3c ] eax
mov r8 [ rsp + 0x30 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
cmp [ rsp + 0x3c ] 0x0
je r-xdata
sub_1800056b0
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x38
mov [ rsp + 0x24 ] 0x0
mov [ rsp + 0x28 ] 0x0
jmp r-xdata
mov eax [ rsp + 0x50 ]
cmp [ rsp + 0x28 ] eax
jae r-xdata
mov eax [ rsp + 0x50 ]
add eax 0x6
mov eax eax
mov rcx [ rsp + 0x40 ]
mov rcx [ rcx + 0x8 ]
movzx eax [ rcx + rax ]
mov [ rsp + 0x20 ] eax
cmp [ rsp + 0x20 ] 0x0
je r-xdata
mov eax [ rsp + 0x28 ]
add eax 0x6
mov eax eax
mov rcx [ rsp + 0x40 ]
mov rcx [ rcx + 0x8 ]
movzx eax [ rcx + rax ]
mov ecx [ rsp + 0x24 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x24 ] eax
jmp r-xdata
xor eax eax
mov rax [ rsp + 0x40 ]
mov rax [ rax + 0x8 ]
add rax 0x1a
mov rcx [ rsp + 0x40 ]
mov r9 [ rcx + 0x8 ]
mov r8d [ rsp + 0x24 ]
mov edx [ rsp + 0x20 ]
mov rcx rax
call sub_180005e40
mov eax [ rsp + 0x20 ]
mov ecx [ rsp + 0x24 ]
mov rdx [ rsp + 0x40 ]
mov rdx [ rdx + 0x8 ]
lea rcx [ rdx + rcx + 0x1a ]
mov r8d eax
mov rdx rcx
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax 0x1
jmp r-xdata
mov eax [ rsp + 0x28 ]
inc eax
mov [ rsp + 0x28 ] eax
add rsp 0x38
retn
sub_180005800
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0xc8
mov rax [ rsp + 0xe8 ]
mov [ rax ] 0x0
mov [ rsp + 0x80 ] 0x0
mov [ rsp + 0x7c ] 0x0
mov [ rsp + 0x58 ] 0xffffffffffffffff
mov [ rsp + 0x74 ] 0x0
mov [ rsp + 0x48 ] 0x0
mov [ rsp + 0x70 ] 0x0
mov [ rsp + 0x50 ] 0x0
mov [ rsp + 0x78 ] 0x0
mov [ rsp + 0x68 ] 0x0
mov [ rsp + 0x40 ] 0x0
mov [ rsp + 0x60 ] 0x0
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x6
mov [ rsp + 0x20 ] 0x4
xor r9d r9d
xor r8d r8d
mov edx 0x80000000
mov rcx [ rsp + 0xe0 ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x58 ] rax
cmp [ rsp + 0x58 ] 0xffffffffffffffff
jne r-xdata
xor edx edx
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x70 ]
mov [ rsp + 0x48 ] eax
lea rax [ rw-data ]
add rax 0x3d4
mov [ rsp + 0x20 ] 0xf0000000
mov r9d 0x1
mov r8 rax
xor edx edx
lea rcx [ rsp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x2d8 ]
test eax eax
jne r-xdata
jmp r-xdata
lea rax [ rsp + 0x68 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
mov r8d [ rsp + 0xd8 ]
mov rdx [ rsp + 0xd0 ]
mov rcx [ rsp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x2d0 ]
test eax eax
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x70 ] eax
cmp [ rsp + 0x70 ] 0x80090016
je r-xdata
cmp [ rsp + 0x74 ] 0x0
jne r-xdata
lea r9 [ rsp + 0x40 ]
mov r8d 0x1
mov edx 0x6603
mov rcx [ rsp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x2c8 ]
test eax eax
jne r-xdata
jmp r-xdata
lea rax [ rw-data ]
add rax 0x3d4
mov [ rsp + 0x20 ] 0xf0000008
mov r9d 0x1
mov r8 rax
xor edx edx
lea rcx [ rsp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x2d8 ]
test eax eax
jne r-xdata
jmp r-xdata
cmp [ rsp + 0x40 ] 0x0
je r-xdata
mov rcx [ rsp + 0x60 ]
call sub_18000a460
mov rax [ rsp + 0xe8 ]
mov [ rax ] 0x0
mov [ rsp + 0xa0 ] 0x0
lea rax [ rsp + 0xa0 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
mov r8d 0x1
mov rdx [ rsp + 0x68 ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x2c0 ]
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
cmp [ rsp + 0x68 ] 0x0
je r-xdata
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x2e8 ]
mov [ rsp + 0x9c ] 0x0
mov [ rsp + 0x94 ] 0x4
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x94 ]
lea r8 [ rsp + 0x9c ]
mov edx 0x8
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x2b8 ]
test eax eax
jne r-xdata
jmp r-xdata
cmp [ rsp + 0x50 ] 0x0
je r-xdata
mov rcx [ rsp + 0x68 ]
mov rax [ rw-data ]
call [ rax + 0x2e8 ]
xor edx edx
mov eax [ rsp + 0x9c ]
mov ecx 0x8
div ecx
mov [ rsp + 0x9c ] eax
xor edx edx
mov eax [ rsp + 0x48 ]
mov ecx 0x400
div ecx
mov eax edx
mov [ rsp + 0x98 ] eax
cmp [ rsp + 0x98 ] 0x0
jne r-xdata
jmp r-xdata
cmp [ rsp + 0x58 ] 0xffffffffffffffff
je r-xdata
xor edx edx
mov rcx [ rsp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x2e0 ]
mov [ rsp + 0xac ] 0x1
mov [ rsp + 0xac ] 0x0
jmp r-xdata
mov eax [ rsp + 0x74 ]
add rsp 0xc8
retn
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
mov eax [ rsp + 0x9c ]
mov [ rsp + 0x94 ] eax
xor edx edx
mov eax [ rsp + 0x48 ]
div [ rsp + 0x9c ]
mov eax edx
mov ecx [ rsp + 0x9c ]
sub ecx eax
mov eax ecx
mov [ rsp + 0x94 ] eax
jmp r-xdata
xor edx edx
mov eax [ rsp + 0x48 ]
mov ecx 0x400
div ecx
mov ecx [ rsp + 0xac ]
lea eax [ rax + rcx - 0x1 ]
mov [ rsp + 0x88 ] eax
xor edx edx
mov eax [ rsp + 0x48 ]
div [ rsp + 0x9c ]
mov eax edx
test eax eax
je r-xdata
mov [ rsp + 0x90 ] 0x4
mov eax [ rsp + 0x90 ]
mov rcx [ rsp + 0x60 ]
add rcx rax
mov rax rcx
lea rcx [ rsp + 0xa0 ]
mov [ rsp + 0x28 ] rcx
mov [ rsp + 0x20 ] rax
xor r9d r9d
mov r8d 0x1
mov rdx [ rsp + 0x68 ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x2c0 ]
test eax eax
jne r-xdata
jmp r-xdata
mov eax [ rsp + 0x94 ]
mov ecx [ rsp + 0x48 ]
add ecx eax
mov eax ecx
add eax [ rsp + 0xa0 ]
mov eax eax
add rax 0x4
mov r8 rax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x60 ] rax
cmp [ rsp + 0x60 ] 0x0
jne r-xdata
mov rax [ rsp + 0x60 ]
mov ecx [ rsp + 0xa0 ]
mov [ rax ] ecx
mov eax [ rsp + 0xa0 ]
mov ecx [ rsp + 0x90 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x90 ] eax
mov [ rsp + 0x8c ] 0x0
mov eax [ rsp + 0x90 ]
mov rcx [ rsp + 0x60 ]
add rcx rax
mov rax rcx
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x8c ]
mov r8d [ rsp + 0x48 ]
mov rdx rax
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x68 ]
test eax eax
jne r-xdata
jmp r-xdata
mov [ rsp + 0x8c ] 0x0
mov [ rsp + 0xa4 ] 0x0
jmp r-xdata
jmp r-xdata
mov eax [ rsp + 0x88 ]
cmp [ rsp + 0xa4 ] eax
ja r-xdata
mov rax [ rsp + 0xe8 ]
mov rcx [ rsp + 0x60 ]
mov [ rax ] rcx
mov eax [ rsp + 0x90 ]
mov ecx [ rsp + 0x8c ]
add ecx eax
mov eax ecx
mov [ rsp + 0x74 ] eax
mov eax [ rsp + 0x88 ]
cmp [ rsp + 0xa4 ] eax
jne r-xdata
mov [ rsp + 0xb0 ] 0x400
cmp [ rsp + 0x98 ] 0x0
je r-xdata
mov [ rsp + 0xb4 ] 0x0
mov [ rsp + 0xb4 ] 0x1
jmp r-xdata
mov eax [ rsp + 0x98 ]
mov [ rsp + 0xb0 ] eax
jmp r-xdata
jmp r-xdata
mov eax [ rsp + 0xa8 ]
mov ecx [ rsp + 0x8c ]
add ecx eax
mov eax ecx
mov [ rsp + 0x8c ] eax
jmp r-xdata
mov eax [ rsp + 0xa4 ]
imul eax eax 0x400
mov eax eax
mov rcx [ rsp + 0x60 ]
add rcx rax
mov rax rcx
mov ecx [ rsp + 0x90 ]
add rax rcx
mov ecx [ rsp + 0x9c ]
mov [ rsp + 0x30 ] ecx
lea rcx [ rsp + 0xa8 ]
mov [ rsp + 0x28 ] rcx
mov [ rsp + 0x20 ] rax
xor r9d r9d
mov r8d [ rsp + 0xb4 ]
xor edx edx
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x2b0 ]
test eax eax
je r-xdata
mov eax [ rsp + 0xb0 ]
mov [ rsp + 0xa8 ] eax
mov eax [ rsp + 0x94 ]
mov ecx [ rsp + 0xa8 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x9c ] eax
mov eax [ rsp + 0x88 ]
cmp [ rsp + 0xa4 ] eax
jne r-xdata
jmp r-xdata
mov eax [ rsp + 0xa4 ]
inc eax
mov [ rsp + 0xa4 ] eax
sub_180005e40
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x48
mov [ rsp ] 0x0
mov [ rsp + 0x8 ] 0x0
mov [ rsp + 0x4 ] 0x0
xor edx edx
mov eax [ rsp + 0x60 ]
mov ecx 0x6
div ecx
mov [ rsp ] eax
jmp r-xdata
mov eax [ rsp + 0x58 ]
mov ecx [ rsp + 0x60 ]
add ecx eax
mov eax ecx
xor edx edx
mov ecx 0x6
div ecx
cmp [ rsp ] eax
jae r-xdata
xor edx edx
mov eax [ rsp + 0x60 ]
mov ecx 0x6
div ecx
cmp [ rsp ] eax
jne r-xdata
xor edx edx
mov eax [ rsp + 0x60 ]
mov ecx 0x6
div ecx
cmp [ rsp ] eax
jne r-xdata
mov [ rsp + 0x20 ] 0x0
xor edx edx
mov eax [ rsp + 0x60 ]
mov ecx 0x6
div ecx
mov eax edx
mov [ rsp + 0x20 ] eax
jmp r-xdata
mov [ rsp + 0xc ] 0x0
xor edx edx
mov eax [ rsp + 0x60 ]
mov ecx 0x6
div ecx
mov eax edx
mov [ rsp + 0xc ] eax
jmp r-xdata
mov eax [ rsp + 0x60 ]
mov ecx [ rsp + 0x58 ]
add ecx eax
mov eax ecx
xor edx edx
mov ecx 0x6
div ecx
mov eax edx
cmp [ rsp + 0x8 ] eax
jae r-xdata
mov eax [ rsp + 0x20 ]
mov [ rsp + 0x8 ] eax
jmp r-xdata
cmp [ rsp + 0x8 ] 0x6
jae r-xdata
mov eax [ rsp + 0xc ]
mov [ rsp + 0x8 ] eax
jmp r-xdata
add rsp 0x48
retn
mov eax [ rsp ]
imul eax eax 0x6
add eax [ rsp + 0x8 ]
mov ecx [ rsp + 0x8 ]
mov rdx [ rsp + 0x68 ]
movzx ecx [ rdx + rcx ]
imul eax ecx
shr eax 0x7
mov [ rsp + 0x24 ] eax
mov ecx [ rsp + 0x8 ]
inc ecx
xor edx edx
mov eax ecx
mov ecx 0x6
div ecx
mov eax edx
mov eax eax
mov rcx [ rsp + 0x68 ]
movzx eax [ rcx + rax ]
mov ecx [ rsp + 0x24 ]
xor ecx eax
mov eax ecx
mov [ rsp + 0x28 ] eax
mov ecx [ rsp + 0x8 ]
add ecx 0x2
xor edx edx
mov eax ecx
mov ecx 0x6
div ecx
mov eax edx
mov eax eax
mov rcx [ rsp + 0x68 ]
movzx eax [ rcx + rax ]
mov [ rsp + 0x2c ] eax
mov ecx [ rsp ]
imul ecx ecx 0x6
add ecx [ rsp + 0x8 ]
mov edx [ rsp + 0x8 ]
add edx 0x3
mov [ rsp + 0x30 ] edx
xor edx edx
mov r8d [ rsp + 0x30 ]
mov eax r8d
mov r8d 0x6
div r8d
mov eax edx
mov eax eax
mov rdx [ rsp + 0x68 ]
movzx eax [ rdx + rax ]
xor ecx eax
mov eax ecx
mov ecx [ rsp + 0x2c ]
and ecx eax
mov eax ecx
mov ecx [ rsp + 0x28 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x4 ] al
mov eax [ rsp ]
imul eax eax 0x6
add eax [ rsp + 0x8 ]
mov eax eax
movzx ecx [ rsp + 0x4 ]
mov rdx [ rsp + 0x50 ]
movzx eax [ rdx + rax ]
xor eax ecx
mov ecx [ rsp ]
imul ecx ecx 0x6
add ecx [ rsp + 0x8 ]
mov ecx ecx
mov rdx [ rsp + 0x50 ]
mov [ rdx + rcx ] al
jmp r-xdata
jmp r-xdata
mov eax [ rsp ]
imul eax eax 0x6
add eax [ rsp + 0x8 ]
mov ecx [ rsp + 0x8 ]
mov rdx [ rsp + 0x68 ]
movzx ecx [ rdx + rcx ]
imul eax ecx
shr eax 0x7
mov [ rsp + 0x10 ] eax
mov ecx [ rsp + 0x8 ]
inc ecx
xor edx edx
mov eax ecx
mov ecx 0x6
div ecx
mov eax edx
mov eax eax
mov rcx [ rsp + 0x68 ]
movzx eax [ rcx + rax ]
mov ecx [ rsp + 0x10 ]
xor ecx eax
mov eax ecx
mov [ rsp + 0x14 ] eax
mov ecx [ rsp + 0x8 ]
add ecx 0x2
xor edx edx
mov eax ecx
mov ecx 0x6
div ecx
mov eax edx
mov eax eax
mov rcx [ rsp + 0x68 ]
movzx eax [ rcx + rax ]
mov [ rsp + 0x18 ] eax
mov ecx [ rsp ]
imul ecx ecx 0x6
add ecx [ rsp + 0x8 ]
mov edx [ rsp + 0x8 ]
add edx 0x3
mov [ rsp + 0x1c ] edx
xor edx edx
mov r8d [ rsp + 0x1c ]
mov eax r8d
mov r8d 0x6
div r8d
mov eax edx
mov eax eax
mov rdx [ rsp + 0x68 ]
movzx eax [ rdx + rax ]
xor ecx eax
mov eax ecx
mov ecx [ rsp + 0x18 ]
and ecx eax
mov eax ecx
mov ecx [ rsp + 0x14 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x4 ] al
mov eax [ rsp ]
imul eax eax 0x6
add eax [ rsp + 0x8 ]
mov eax eax
movzx ecx [ rsp + 0x4 ]
mov rdx [ rsp + 0x50 ]
movzx eax [ rdx + rax ]
xor eax ecx
mov ecx [ rsp ]
imul ecx ecx 0x6
add ecx [ rsp + 0x8 ]
mov ecx ecx
mov rdx [ rsp + 0x50 ]
mov [ rdx + rcx ] al
jmp r-xdata
mov eax [ rsp + 0x8 ]
inc eax
mov [ rsp + 0x8 ] eax
mov eax [ rsp ]
inc eax
mov [ rsp ] eax
mov eax [ rsp + 0x8 ]
inc eax
mov [ rsp + 0x8 ] eax
sub_180006140
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8b
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x68
mov [ rsp + 0x58 ] rsp
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x20 ]
mov [ rsp + 0x30 ] eax
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x20 ]
mov [ rsp + 0x38 ] eax
mov eax [ rsp + 0x38 ]
mov ecx [ rsp + 0x30 ]
add ecx eax
mov eax ecx
mov eax eax
add rax 0xf
mov [ rsp + 0x34 ] eax
cmp [ rsp + 0x70 ] 0x0
je r-xdata
mov eax [ rsp + 0x34 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x70 ] rax
movzx eax [ rsp + 0x80 ]
cmp eax 0x1
jne r-xdata
mov eax [ rsp + 0x78 ]
mov rcx [ rsp + 0x70 ]
movzx edx [ rsp + 0x80 ]
mov [ rcx + rax ] dl
mov eax [ rsp + 0x78 ]
inc rax
mov [ rsp + 0x78 ] eax
mov eax [ rsp + 0x38 ]
mov ecx [ rsp + 0x78 ]
mov rdx [ rsp + 0x70 ]
add rdx rcx
mov rcx rdx
mov r8d eax
mov rdx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x38 ]
mov ecx [ rsp + 0x78 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x78 ] eax
mov eax [ rsp + 0x30 ]
mov ecx [ rsp + 0x78 ]
mov rdx [ rsp + 0x70 ]
add rdx rcx
mov rcx rdx
mov r8d eax
mov rdx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x30 ]
mov ecx [ rsp + 0x78 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x78 ] eax
mov eax [ rsp + 0x30 ]
mov ecx [ rsp + 0x38 ]
add ecx eax
mov eax ecx
mov ecx [ rsp + 0x78 ]
mov rdx [ rsp + 0x70 ]
mov [ rdx + rcx ] eax
mov eax [ rsp + 0x78 ]
add rax 0x4
mov [ rsp + 0x78 ] eax
mov eax [ rsp + 0x78 ]
add rax 0x4
mov ecx [ rsp + 0x78 ]
mov rdx [ rsp + 0x70 ]
mov [ rdx + rcx ] eax
mov eax [ rsp + 0x78 ]
add rax 0x4
mov [ rsp + 0x78 ] eax
mov rax [ rw-data ]
call [ rax ]
mov ecx eax
mov rax [ rw-data ]
call [ rax + 0x1a0 ]
mov [ rsp + 0x44 ] 0x0
jmp r-xdata
mov [ rsp + 0x48 ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x58 ]
call sub_180010450
cmp [ rsp + 0x78 ] 0x0
je r-xdata
movzx eax [ rsp + 0x44 ]
cmp eax 0x6
jge r-xdata
mov eax [ rsp + 0x34 ]
mov ecx [ rsp + 0x78 ]
add ecx eax
mov eax ecx
mov eax eax
mov r9d eax
mov r8 [ rsp + 0x70 ]
mov edx 0x8
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x60 ]
mov [ rsp + 0x70 ] rax
jmp r-xdata
mov eax [ rsp + 0x78 ]
add eax 0x6
mov [ rsp + 0x78 ] eax
mov eax [ rsp + 0x78 ]
mov rcx [ rsp + 0x70 ]
lea rax [ rcx + rax - 0x6 ]
mov ecx [ rsp + 0x78 ]
sub ecx 0x6
mov r9 rax
xor r8d r8d
mov edx ecx
mov rcx [ rsp + 0x70 ]
call sub_180005e40
mov [ rsp + 0x40 ] 0x0
lea rax [ rsp + 0x40 ]
mov [ rsp + 0x20 ] rax
xor r9d r9d
mov r8d 0x1
mov edx [ rsp + 0x78 ]
mov rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x2a8 ]
mov [ rsp + 0x3c ] eax
cmp [ rsp + 0x3c ] 0x1
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x198 ]
movzx ecx [ rsp + 0x44 ]
mov edx [ rsp + 0x78 ]
add edx ecx
mov ecx edx
mov ecx ecx
mov rdx [ rsp + 0x70 ]
mov [ rdx + rcx ] al
jmp r-xdata
cmp [ rsp + 0x70 ] 0x0
jne r-xdata
mov eax [ rsp + 0x40 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov rcx [ rsp + 0x88 ]
mov [ rcx ] rax
mov rax [ rsp + 0x88 ]
cmp [ rax ] 0x0
je r-xdata
mov [ rsp + 0x4c ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x58 ]
call sub_180010450
movzx eax [ rsp + 0x44 ]
inc al
mov [ rsp + 0x44 ] al
mov [ rsp + 0x54 ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x58 ]
call sub_180010450
lea rax [ rsp + 0x40 ]
mov [ rsp + 0x20 ] rax
mov rax [ rsp + 0x88 ]
mov r9 [ rax ]
mov r8d 0x1
mov edx [ rsp + 0x78 ]
mov rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x2a8 ]
mov [ rsp + 0x3c ] eax
cmp [ rsp + 0x3c ] 0x1
je r-xdata
add rsp 0x68
retn
jmp r-xdata
mov [ rsp + 0x50 ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x58 ]
call sub_180010450
mov rax [ rsp + 0x90 ]
mov ecx [ rsp + 0x40 ]
mov [ rax ] ecx
mov rcx [ rsp + 0x70 ]
call sub_18000a460
mov eax 0x1
jmp r-xdata
sub_1800064c0
mov [ rsp + 0x20 ] r9b
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
push rdi
mov eax 0x1550
call sub_180012de0
sub rsp rax
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x1540 ] rax
mov [ rsp + 0x60 ] 0x0
lea rax [ rsp + 0x64 ]
mov rdi rax
xor eax eax
mov ecx 0x24c
[ rdi ]
mov [ rsp + 0x1520 ] 0xffffffffffffffff
mov [ rsp + 0x518 ] 0xffffffffffffffff
mov [ rsp + 0x2b0 ] 0x0
lea rax [ rsp + 0x2b4 ]
mov rdi rax
xor eax eax
mov ecx 0x24c
[ rdi ]
xor eax eax
mov [ rsp + 0xd20 ] ax
lea rax [ rsp + 0xd22 ]
mov rdi rax
xor eax eax
mov ecx 0x7fe
[ rdi ]
xor eax eax
mov [ rsp + 0x520 ] ax
lea rax [ rsp + 0x522 ]
mov rdi rax
xor eax eax
mov ecx 0x7fe
[ rdi ]
mov [ rsp + 0x500 ] 0x1
lea rax [ rw-data ]
add rax 0x11c
mov rcx [ rsp + 0x1568 ]
mov [ rsp + 0x20 ] rcx
mov r9 [ rsp + 0x1560 ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0x520 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rdx [ rsp + 0x60 ]
lea rcx [ rsp + 0x520 ]
mov rax [ rw-data ]
call [ rax + 0xa0 ]
mov [ rsp + 0x1520 ] rax
cmp [ rsp + 0x1580 ] 0x0
je r-xdata
jmp r-xdata
cmp [ rsp + 0x500 ] 0x0
je r-xdata
mov [ rsp + 0x1528 ] 0x0
lea rax [ rsp + 0x152c ]
mov rdi rax
xor eax eax
mov ecx 0x4
[ rdi ]
mov eax [ rsp + 0x74 ]
mov [ rsp + 0x1528 ] eax
mov eax [ rsp + 0x78 ]
mov [ rsp + 0x152c ] eax
mov rax [ rsp + 0x1528 ]
cmp [ rsp + 0x1580 ] rax
jge r-xdata
cmp [ rsp + 0x1520 ] 0xffffffffffffffff
je r-xdata
lea rdx [ rsp + 0x60 ]
mov rcx [ rsp + 0x1520 ]
mov rax [ rw-data ]
call [ rax + 0x80 ]
test eax eax
jne r-xdata
lea rdx [ rsp + 0x508 ]
lea rcx [ rsp + 0x74 ]
mov rax [ rw-data ]
call [ rax + 0x98 ]
movzx eax [ rsp + 0x508 ]
movzx ecx [ rsp + 0x50a ]
movzx edx [ rsp + 0x50e ]
lea rdi [ rw-data ]
add rdi 0x126
mov r8d [ rsp + 0x80 ]
mov [ rsp + 0x40 ] r8d
mov [ rsp + 0x38 ] eax
mov [ rsp + 0x30 ] ecx
mov [ rsp + 0x28 ] edx
lea rax [ rsp + 0x8c ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x1560 ]
mov r8 rdi
mov edx 0x400
lea rcx [ rsp + 0xd20 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rcx [ rsp + 0xd20 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0xd20 ]
mov rcx [ rsp + 0x1570 ]
call sub_18000a2e0
cmp [ rsp + 0x1588 ] 0x1
jne r-xdata
mov [ rsp + 0x153c ] 0x0
mov [ rsp + 0x153c ] 0x1
jmp r-xdata
movzx eax [ rsp + 0x1578 ]
test eax eax
je r-xdata
mov rcx [ rsp + 0x1520 ]
mov rax [ rw-data ]
call [ rax + 0x78 ]
cmp [ rsp + 0x1520 ] 0xffffffffffffffff
jne r-xdata
mov eax [ rsp + 0x60 ]
and eax 0x10
test eax eax
jne r-xdata
mov eax [ rsp + 0x153c ]
mov [ rsp + 0x500 ] eax
mov rcx [ rsp + 0x1540 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x1550
pop rdi
retn
lea rax [ rw-data ]
add rax 0x160
mov r9 [ rsp + 0x1560 ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0xd20 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rdx [ rsp + 0x2b0 ]
lea rcx [ rsp + 0xd20 ]
mov rax [ rw-data ]
call [ rax + 0xa0 ]
mov [ rsp + 0x518 ] rax
mov [ rsp + 0x1530 ] 0x0
lea rax [ rw-data ]
add rax 0x11c
lea rcx [ rsp + 0x8c ]
mov [ rsp + 0x20 ] rcx
mov r9 [ rsp + 0x1560 ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0xd20 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
mov [ rsp + 0x1538 ] 0x0
lea rdx [ rsp + 0x1530 ]
lea rcx [ rsp + 0xd20 ]
call sub_1800069f0
mov [ rsp + 0x1538 ] eax
mov rcx [ rsp + 0x1530 ]
call sub_18000a420
mov r9d 0x6
mov r8d [ rsp + 0x1538 ]
mov edx eax
mov rcx [ rsp + 0x1530 ]
call sub_18000d540
mov rcx [ rsp + 0x1530 ]
call sub_18000a460
mov eax [ rsp + 0x2b0 ]
and eax 0x10
test eax eax
je r-xdata
jmp r-xdata
lea rdx [ rsp + 0x2b0 ]
mov rcx [ rsp + 0x518 ]
mov rax [ rw-data ]
call [ rax + 0x80 ]
test eax eax
jne r-xdata
lea rax [ rw-data ]
add rax 0x1f9
mov rdx rax
lea rcx [ rsp + 0x2dc ]
call [ rw-data ]
test eax eax
je r-xdata
cmp [ rsp + 0x518 ] 0xffffffffffffffff
je r-xdata
cmp [ rsp + 0x518 ] 0xffffffffffffffff
jne r-xdata
lea rax [ rw-data ]
add rax 0x1f7
mov rdx rax
lea rcx [ rsp + 0x2dc ]
call [ rw-data ]
test eax eax
je r-xdata
mov rcx [ rsp + 0x518 ]
mov rax [ rw-data ]
call [ rax + 0x78 ]
lea rax [ rw-data ]
add rax 0x168
lea rcx [ rsp + 0x2dc ]
mov [ rsp + 0x20 ] rcx
mov r9 [ rsp + 0x1560 ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0x520 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
mov eax [ rsp + 0x1588 ]
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x1580 ]
mov [ rsp + 0x20 ] rax
movzx r9d [ rsp + 0x1578 ]
mov r8 [ rsp + 0x1570 ]
mov rdx [ rsp + 0x1568 ]
lea rcx [ rsp + 0x520 ]
call sub_1800064c0
sub_1800069f0
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x98
mov [ rsp + 0x88 ] rsp
mov [ rsp + 0x40 ] 0x0
mov [ rsp + 0x70 ] 0x0
mov [ rsp + 0x68 ] 0xffffffffffffffff
mov rax [ rw-data ]
cmp [ rax + 0xb0 ] 0x0
jne r-xdata
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x80
mov [ rsp + 0x20 ] 0x3
xor r9d r9d
mov r8d 0x3
mov edx 0x80000000
mov rcx [ rsp + 0xa0 ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x68 ] rax
cmp [ rsp + 0x68 ] 0xffffffffffffffff
jne r-xdata
lea rax [ rw-data ]
add rax 0x18a
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0xb0 ] rax
mov rax [ rw-data ]
cmp [ rax + 0xb0 ] 0x0
jne r-xdata
xor edx edx
mov rcx [ rsp + 0x68 ]
mov rax [ rw-data ]
call [ rax + 0x70 ]
mov [ rsp + 0x40 ] eax
lea r9 [ rsp + 0x60 ]
lea r8 [ rsp + 0x58 ]
lea rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0x68 ]
mov rax [ rw-data ]
call [ rax + 0xb8 ]
lea rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0xb0 ]
mov rcx [ rsp + 0xa0 ]
mov rax [ rw-data ]
call [ rax + 0x2a0 ]
mov [ rsp + 0x78 ] rax
mov rcx [ rsp + 0x78 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x78 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a2e0
mov r8d 0x8
lea rdx [ rsp + 0x60 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a2e0
mov r8d 0x8
lea rdx [ rsp + 0x58 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a2e0
mov r8d 0x8
lea rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a2e0
mov r8d 0x8
lea rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a2e0
mov r8d [ rsp + 0x40 ]
mov rdx [ rsp + 0x68 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a490
mov [ rsp + 0x70 ] eax
cmp [ rsp + 0x70 ] 0x0
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x70 ] eax
mov eax [ rsp + 0x70 ]
mov [ rsp + 0x80 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x88 ]
call sub_180010450
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
cmp [ rsp + 0x68 ] 0xffffffffffffffff
je r-xdata
mov rcx [ rsp + 0xa0 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0xa0 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a2e0
add rsp 0x98
retn
mov eax [ rsp + 0x70 ]
jmp r-xdata
mov rcx [ rsp + 0x68 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
sub_180006c60
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x58
mov [ rsp + 0x48 ] 0x0
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x80
mov [ rsp + 0x20 ] 0x2
xor r9d r9d
xor r8d r8d
mov edx 0x40000000
mov rcx [ rsp + 0x60 ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x40 ] rax
cmp [ rsp + 0x40 ] 0xffffffffffffffff
jne r-xdata
lea r9 [ rw-data ]
xor r8d r8d
lea rdx [ rw-data ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x38 ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x48 ]
mov r8d [ rsp + 0x70 ]
mov rdx [ rsp + 0x68 ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
xor eax eax
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
add rsp 0x58
retn
sub_180006d30
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x88
mov [ rsp + 0x70 ] rsp
mov [ rsp + 0x4c ] 0x0
mov [ rsp + 0x48 ] 0x0
mov [ rsp + 0x40 ] 0xffffffffffffffff
mov [ rsp + 0x50 ] 0x0
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x80
mov [ rsp + 0x20 ] 0x3
xor r9d r9d
mov r8d 0x3
mov edx 0x80000000
mov rcx [ rsp + 0x90 ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x40 ] rax
cmp [ rsp + 0x40 ] 0xffffffffffffffff
jne r-xdata
xor edx edx
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x70 ]
mov [ rsp + 0x60 ] eax
mov eax [ rsp + 0x60 ]
cmp [ rsp + 0x98 ] eax
jbe r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x48 ] eax
mov eax [ rsp + 0x48 ]
mov [ rsp + 0x64 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x70 ]
call sub_180010450
mov eax [ rsp + 0xa0 ]
mov ecx [ rsp + 0x98 ]
add ecx eax
mov eax ecx
cmp eax [ rsp + 0x60 ]
jbe r-xdata
mov [ rsp + 0x48 ] 0xeeeeeef3
mov eax [ rsp + 0x48 ]
mov [ rsp + 0x68 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x70 ]
call sub_180010450
xor r9d r9d
xor r8d r8d
mov edx [ rsp + 0x98 ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0xc0 ]
mov rcx [ rsp + 0x90 ]
mov rax [ rw-data ]
call [ rax + 0x2a0 ]
mov [ rsp + 0x58 ] rax
mov rcx [ rsp + 0x58 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x58 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a2e0
mov r8d 0x4
lea rdx [ rsp + 0x98 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a2e0
mov r8d [ rsp + 0xa0 ]
mov rdx [ rsp + 0x40 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a490
mov [ rsp + 0x48 ] eax
cmp [ rsp + 0x48 ] 0x0
je r-xdata
mov eax [ rsp + 0x98 ]
mov ecx [ rsp + 0x60 ]
sub ecx eax
mov eax ecx
mov [ rsp + 0xa0 ] eax
cmp [ rsp + 0x40 ] 0xffffffffffffffff
je r-xdata
mov rcx [ rsp + 0x90 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x90 ]
mov rcx [ rsp + 0xa8 ]
call sub_18000a2e0
mov eax [ rsp + 0x48 ]
jmp r-xdata
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
add rsp 0x88
retn
sub_180006f50
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0xb0
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0xa0 ] rax
mov [ rsp + 0x90 ] rsp
mov [ rsp + 0x38 ] 0x0
mov [ rsp + 0x78 ] 0x0
mov [ rsp + 0x68 ] 0x0
mov [ rsp + 0x48 ] 0x0
lea rax [ rsp + 0x49 ]
mov rdi rax
xor eax eax
mov ecx 0x1f
[ rdi ]
lea rax [ rw-data ]
add rax 0x1bd
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x30 ] rax
cmp [ rsp + 0x30 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x1cb
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x70 ] rax
cmp [ rsp + 0x70 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
xor edx edx
xor ecx ecx
call [ rsp + 0x70 ]
mov [ rsp + 0x80 ] eax
mov eax [ rsp + 0x80 ]
inc eax
mov eax eax
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x38 ] rax
cmp [ rsp + 0x38 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov rcx [ rsp + 0xa0 ]
xor rcx rsp
call sub_18000dc90
add rsp 0xb0
pop rdi
retn
mov rdx [ rsp + 0x38 ]
mov ecx [ rsp + 0x80 ]
call [ rsp + 0x70 ]
test eax eax
jne r-xdata
mov [ rsp + 0x88 ] 0xeeeeeef2
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x90 ]
call sub_180010450
movsxd rax [ rsp + 0x68 ]
mov rcx [ rsp + 0x38 ]
movsx eax [ rcx + rax ]
test eax eax
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x8c ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x90 ]
call sub_180010450
mov rcx [ rsp + 0x38 ]
call sub_18000a460
xor eax eax
jmp r-xdata
movsxd rax [ rsp + 0x68 ]
mov rcx [ rsp + 0x38 ]
add rcx rax
mov rax rcx
mov rcx rax
call [ rsp + 0x30 ]
mov [ rsp + 0x84 ] eax
mov eax [ rsp + 0x84 ]
mov [ rsp + 0x98 ] eax
cmp [ rsp + 0x98 ] 0x2
je r-xdata
lea rax [ rw-data ]
add rax 0x17e
mov [ rsp + 0x78 ] rax
jmp r-xdata
cmp [ rsp + 0x98 ] 0x3
je r-xdata
movsxd rax [ rsp + 0x68 ]
mov rcx [ rsp + 0x38 ]
add rcx rax
mov rax rcx
lea rcx [ rw-data ]
add rcx 0x174
mov rdx [ rsp + 0x78 ]
mov [ rsp + 0x20 ] rdx
mov r9 rax
mov r8 rcx
mov edx 0x20
lea rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x1c0 ]
lea rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x20 ]
mov r8d eax
lea rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0xc0 ]
call sub_18000a2e0
mov eax [ rsp + 0x68 ]
add eax 0x4
mov [ rsp + 0x68 ] eax
jmp r-xdata
lea rax [ rw-data ]
add rax 0x188
mov [ rsp + 0x78 ] rax
jmp r-xdata
cmp [ rsp + 0x98 ] 0x4
je r-xdata
lea rax [ rw-data ]
add rax 0x18e
mov [ rsp + 0x78 ] rax
jmp r-xdata
cmp [ rsp + 0x98 ] 0x5
je r-xdata
lea rax [ rw-data ]
add rax 0x195
mov [ rsp + 0x78 ] rax
jmp r-xdata
jmp r-xdata
lea rax [ rw-data ]
add rax 0x19b
mov [ rsp + 0x78 ] rax
sub_180007230
mov [ rsp + 0x20 ] r9d
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
push rdi
sub rsp 0x80
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x78 ] rax
mov rax [ rsp + 0x98 ]
mov [ rsp + 0x50 ] rax
mov rcx [ rsp + 0x50 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x90 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x90 ] eax
cmp [ rsp + 0x90 ] 0x0
jge r-xdata
mov rcx [ rsp + 0x50 ]
call [ rw-data ]
inc eax
cdqe
mov rcx [ rsp + 0x98 ]
lea rax [ rcx + rax * 2 ]
mov [ rsp + 0x98 ] rax
mov rax [ rsp + 0x98 ]
mov [ rsp + 0x30 ] rax
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x90 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x90 ] eax
cmp [ rsp + 0x90 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
inc eax
cdqe
mov rcx [ rsp + 0x98 ]
lea rax [ rcx + rax * 2 ]
mov [ rsp + 0x98 ] rax
mov rcx [ rsp + 0x98 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x90 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x90 ] eax
cmp [ rsp + 0x90 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x78 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x80
pop rdi
retn
mov rcx [ rsp + 0x98 ]
mov rax [ rw-data ]
call [ rax + 0x278 ]
mov [ rsp + 0x3c ] al
mov rcx [ rsp + 0x98 ]
call [ rw-data ]
inc eax
cdqe
mov rcx [ rsp + 0x98 ]
lea rax [ rcx + rax * 2 ]
mov [ rsp + 0x98 ] rax
mov rcx [ rsp + 0x98 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov ecx [ rsp + 0x90 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x90 ] eax
cmp [ rsp + 0x90 ] 0x0
jge r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov rcx [ rsp + 0x98 ]
mov rax [ rw-data ]
call [ rax + 0x278 ]
mov [ rsp + 0x48 ] eax
mov [ rsp + 0x40 ] 0x0
lea rax [ rsp + 0x44 ]
mov rdi rax
xor eax eax
mov ecx 0x4
[ rdi ]
cmp [ rsp + 0x48 ] 0xffffffff
je r-xdata
mov eax 0xeeeeeef4
jmp r-xdata
mov [ rsp + 0x40 ] 0x0
xor eax eax
mov [ rsp + 0x68 ] ax
lea rax [ rsp + 0x6a ]
mov rdi rax
xor eax eax
mov ecx 0xe
[ rdi ]
mov [ rsp + 0x58 ] 0x0
lea rax [ rsp + 0x5c ]
mov rdi rax
xor eax eax
mov ecx 0x4
[ rdi ]
lea rcx [ rsp + 0x68 ]
mov rax [ rw-data ]
call [ rax + 0x90 ]
lea rax [ rw-data ]
add rax 0x2b8
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
lea rdx [ rsp + 0x58 ]
lea rcx [ rsp + 0x68 ]
call rax
mov eax [ rsp + 0x58 ]
mov [ rsp + 0x40 ] eax
mov eax [ rsp + 0x5c ]
mov [ rsp + 0x44 ] eax
movsxd rax [ rsp + 0x48 ]
mov rcx 0xc92a69c000
imul rax rcx
mov rcx [ rsp + 0x40 ]
sub rcx rax
mov rax rcx
mov [ rsp + 0x40 ] rax
jmp r-xdata
mov rax [ rw-data ]
cmp [ rax + 0x80 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x10f
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x78 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x78 ] 0x0
jne r-xdata
mov rax [ rw-data ]
cmp [ rax + 0x78 ] 0x0
jne r-xdata
mov rax [ rw-data ]
cmp [ rax + 0xa0 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x119
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x80 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x80 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov rax [ rw-data ]
cmp [ rax + 0x98 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x16a
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0xa0 ] rax
mov rax [ rw-data ]
cmp [ rax + 0xa0 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov eax [ rsp + 0xa8 ]
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x40 ]
mov [ rsp + 0x20 ] rax
movzx r9d [ rsp + 0x3c ]
mov r8 [ rsp + 0xa0 ]
mov rdx [ rsp + 0x30 ]
mov rcx [ rsp + 0x50 ]
call sub_1800064c0
mov rax [ rsp + 0xa0 ]
mov rcx [ rax ]
call sub_18000a420
mov [ rsp + 0x38 ] eax
cmp [ rsp + 0x38 ] 0x0
je r-xdata
lea rax [ rw-data ]
add rax 0x155
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x98 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x98 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov rcx [ rsp + 0x50 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0xa0 ]
call sub_18000a2e0
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x30 ]
mov rcx [ rsp + 0xa0 ]
call sub_18000a2e0
mov eax 0xeeeeeef0
jmp r-xdata
cmp [ rsp + 0x38 ] 0xffffffff
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
xor eax eax
sub_180007700
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x68
mov [ rsp + 0x48 ] 0x0
mov [ rsp + 0x4c ] 0x0
xor eax eax
mov [ rsp + 0x50 ] ax
mov [ rsp + 0x40 ] 0xffffffffffffffff
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x6
mov [ rsp + 0x20 ] 0x4
xor r9d r9d
xor r8d r8d
mov edx 0xc0000000
mov rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x40 ] rax
cmp [ rsp + 0x40 ] 0xffffffffffffffff
je r-xdata
cmp [ rsp + 0x4c ] 0x1
jne r-xdata
xor edx edx
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x70 ]
test eax eax
je r-xdata
mov eax [ rsp + 0x4c ]
add rsp 0x68
retn
movzx eax [ rsp + 0x50 ]
movzx ecx [ rw-data ]
add ecx eax
mov eax ecx
mov [ rw-data ] ax
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x48 ]
mov r8d 0x2
lea rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x48 ]
mov r8d 0x2
lea rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x68 ]
jmp r-xdata
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x48 ]
mov r8d [ rsp + 0x80 ]
mov rdx [ rsp + 0x78 ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
test eax eax
je r-xdata
mov rax [ rsp + 0x78 ]
movzx eax [ rax ]
movzx ecx [ rsp + 0x50 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x50 ] ax
mov rax [ rsp + 0x78 ]
add rax 0x2
mov [ rsp + 0x78 ] rax
mov eax [ rsp + 0x80 ]
sub rax 0x2
mov [ rsp + 0x80 ] eax
mov r9d 0x2
xor r8d r8d
xor edx edx
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0xc0 ]
cmp eax 0xffffffff
je r-xdata
xor r9d r9d
xor r8d r8d
xor edx edx
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0xc0 ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x48 ]
mov r8d 0x2
lea rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
lea r9 [ rw-data ]
xor r8d r8d
lea rdx [ rw-data ]
mov rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x38 ]
mov [ rsp + 0x4c ] 0x1
sub_180007910
sub rsp 0x78
mov [ rsp + 0x58 ] 0x0
mov [ rsp + 0x50 ] 0x0
mov [ rsp + 0x40 ] 0x1
mov [ rsp + 0x48 ] 0x0
mov [ rsp + 0x44 ] 0x0
lea rax [ rsp + 0x50 ]
mov [ rsp + 0x20 ] rax
lea r9 [ rsp + 0x58 ]
xor r8d r8d
xor edx edx
xor ecx ecx
call sub_18000d940
test eax eax
je r-xdata
add rsp 0x78
retn
cmp [ rsp + 0x58 ] 0x0
je r-xdata
cmp [ rsp + 0x50 ] 0x0
je r-xdata
mov rax [ rsp + 0x58 ]
mov [ rsp + 0x48 ] rax
mov [ rsp + 0x68 ] 0x0
mov [ rsp + 0x60 ] 0x0
mov rax [ rsp + 0x58 ]
add rax 0x6
mov [ rsp + 0x58 ] rax
mov eax [ rsp + 0x50 ]
sub eax 0x6
mov [ rsp + 0x50 ] eax
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x0
lea rax [ rsp + 0x60 ]
mov [ rsp + 0x20 ] rax
xor r9d r9d
mov r8d 0x1
mov edx [ rsp + 0x50 ]
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x178 ]
mov [ rsp + 0x40 ] eax
cmp [ rsp + 0x40 ] 0x0
je r-xdata
mov rcx [ rsp + 0x48 ]
call sub_18000a460
mov eax [ rsp + 0x60 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x68 ] rax
cmp [ rsp + 0x68 ] 0x0
je r-xdata
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x0
lea rax [ rsp + 0x60 ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x68 ]
mov r8d 0x1
mov edx [ rsp + 0x50 ]
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x178 ]
mov [ rsp + 0x40 ] eax
cmp [ rsp + 0x40 ] 0x0
je r-xdata
mov r8 [ rsp + 0x68 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
mov r8d [ rsp + 0x60 ]
mov rdx [ rsp + 0x68 ]
mov rcx [ rw-data ]
call sub_180007700
sub_180007aa0
sub rsp 0xb8
mov [ rsp + 0xa0 ] rsp
mov [ rsp + 0x58 ] 0xffffffffffffffff
mov [ rsp + 0x78 ] 0x0
mov [ rsp + 0x40 ] 0x0
mov [ rsp + 0x50 ] 0x0
mov [ rsp + 0x60 ] 0x0
mov [ rsp + 0x48 ] 0x0
mov [ rsp + 0x70 ] 0x0
mov [ rsp + 0x80 ] 0x0
mov [ rsp + 0x7c ] 0x0
mov [ rsp + 0x44 ] 0x0
mov [ rsp + 0x68 ] 0x0
movzx eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x6
mov [ rsp + 0x20 ] 0x3
xor r9d r9d
xor r8d r8d
mov edx 0xc0000000
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x58 ] rax
cmp [ rsp + 0x58 ] 0xffffffffffffffff
jne r-xdata
add rsp 0xb8
retn
xor edx edx
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x70 ]
mov [ rsp + 0x40 ] eax
mov eax [ rsp + 0x40 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x80 ] rax
cmp [ rsp + 0x80 ] 0x0
jne r-xdata
mov [ rsp + 0x8c ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0xa0 ]
call sub_180010450
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x78 ]
mov r8d [ rsp + 0x40 ]
mov rdx [ rsp + 0x80 ]
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x68 ]
mov rax [ rsp + 0x80 ]
mov eax [ rax + 0x2 ]
mov [ rsp + 0x50 ] eax
mov eax [ rsp + 0x50 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x70 ] rax
cmp [ rsp + 0x70 ] 0x0
jne r-xdata
mov [ rsp + 0x90 ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0xa0 ]
call sub_180010450
mov [ rsp + 0x68 ] 0x6
mov eax [ rsp + 0x50 ]
mov ecx [ rsp + 0x68 ]
mov rdx [ rsp + 0x80 ]
add rdx rcx
mov rcx rdx
mov r8d eax
mov rdx rcx
mov rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x50 ]
sub eax 0x6
mov [ rsp + 0x88 ] eax
mov rax [ rsp + 0x70 ]
add rax 0x6
mov r9 [ rsp + 0x70 ]
xor r8d r8d
mov edx [ rsp + 0x88 ]
mov rcx rax
call sub_180005e40
mov eax [ rsp + 0x50 ]
mov ecx [ rsp + 0x68 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x68 ] eax
movzx eax [ rw-data ]
dec ax
mov [ rw-data ] ax
xor r9d r9d
xor r8d r8d
xor edx edx
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0xc0 ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x78 ]
mov r8d 0x2
lea rdx [ rw-data ]
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
mov eax [ rsp + 0x68 ]
mov ecx [ rsp + 0x40 ]
sub ecx eax
mov eax ecx
test eax eax
je r-xdata
mov [ rsp + 0x94 ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0xa0 ]
call sub_180010450
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0xc8 ]
lea r9 [ rw-data ]
xor r8d r8d
lea rdx [ rw-data ]
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x38 ]
mov rax [ rsp + 0x70 ]
add rax 0x6
mov edx [ rsp + 0x88 ]
mov rcx rax
call sub_180005100
mov [ rsp + 0x98 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0xa0 ]
call sub_180010450
nop
cmp [ rsp + 0x58 ] 0xffffffffffffffff
je r-xdata
mov eax [ rsp + 0x68 ]
mov ecx [ rsp + 0x40 ]
sub ecx eax
mov eax ecx
mov ecx [ rsp + 0x68 ]
mov rdx [ rsp + 0x80 ]
add rdx rcx
mov rcx rdx
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x78 ]
mov r8d eax
mov rdx rcx
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
mov rcx [ rsp + 0x70 ]
call sub_18000a460
mov rcx [ rsp + 0x80 ]
call sub_18000a460
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
sub_180007e40
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0x40
mov [ rsp + 0x38 ] rsp
mov [ rsp + 0x20 ] 0x0
lea rax [ rsp + 0x28 ]
mov rdi rax
xor eax eax
mov ecx 0x8
[ rdi ]
mov rax [ rw-data ]
mov [ rsp + 0x20 ] rax
mov rax [ rw-data ]
mov [ rsp + 0x28 ] rax
cmp [ rw-data ] 0x0
je r-xdata
mov r9d 0xffffffff
xor r8d r8d
lea rdx [ rsp + 0x20 ]
mov ecx 0x2
mov rax [ rw-data ]
call [ rax + 0x260 ]
cmp eax 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
call sub_180007aa0
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
mov edx 0x2710
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
jne r-xdata
mov [ rsp + 0x30 ] 0x1
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x38 ]
call sub_180010450
add rsp 0x40
pop rdi
retn
jmp r-xdata
mov [ rsp + 0x34 ] 0x1
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x38 ]
call sub_180010450
xor eax eax
cmp eax 0x1
je r-xdata
sub_180007f50
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0x50
mov [ rsp + 0x40 ] rsp
mov [ rsp + 0x20 ] 0x0
mov ecx 0x2710
mov rax [ rw-data ]
call [ rax + 0xd0 ]
mov [ rsp + 0x28 ] 0x0
lea rax [ rsp + 0x30 ]
mov rdi rax
xor eax eax
mov ecx 0x8
[ rdi ]
mov rax [ rw-data ]
mov [ rsp + 0x28 ] rax
mov rax [ rw-data ]
mov [ rsp + 0x30 ] rax
cmp [ rw-data ] 0x0
je r-xdata
mov r9d 0xffffffff
xor r8d r8d
lea rdx [ rsp + 0x28 ]
mov ecx 0x2
mov rax [ rw-data ]
call [ rax + 0x260 ]
cmp eax 0x1
jne r-xdata
xor eax eax
jmp r-xdata
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
mov [ rw-data ] 0x0
call sub_180007910
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe0 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1a8 ]
mov [ rsp + 0x20 ] eax
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xd8 ]
mov edx [ rsp + 0x20 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
jne r-xdata
mov [ rsp + 0x38 ] 0x1
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x40 ]
call sub_180010450
add rsp 0x50
pop rdi
retn
jmp r-xdata
mov [ rsp + 0x3c ] 0x1
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x40 ]
call sub_180010450
xor eax eax
cmp eax 0x1
je r-xdata
sub_1800080e0
sub rsp 0x48
mov [ rsp + 0x30 ] 0x0
lea rax [ rsp + 0x30 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
lea r8 [ sub_180007f50 ]
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xf0 ]
add rsp 0x48
retn
sub_180008120
sub rsp 0x68
mov [ rsp + 0x40 ] 0x0
xor r8d r8d
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xf8 ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rsp + 0x48 ] 0xffffffffffffffff
mov [ rsp + 0x50 ] 0x0
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x6
mov [ rsp + 0x20 ] 0x3
xor r9d r9d
xor r8d r8d
mov edx 0x80000000
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x48 ] rax
cmp [ rsp + 0x48 ] 0xffffffffffffffff
je r-xdata
xor eax eax
jmp r-xdata
lea rax [ rsp + 0x40 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
lea r8 [ sub_180007e40 ]
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xf0 ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x50 ]
mov r8d 0x2
lea rdx [ rw-data ]
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x68 ]
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
movzx eax [ rw-data ]
cmp eax 0x14
jle r-xdata
add rsp 0x68
retn
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x50 ]
xor eax eax
mov [ rw-data ] ax
sub_180008240
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x58
mov [ rsp + 0x40 ] 0x0
xor edx edx
lea rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x250 ]
test eax eax
je r-xdata
xor eax eax
lea rax [ rw-data ]
add rax 0x424
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
xor edx edx
mov rcx rax
mov rax [ rw-data ]
call [ rax + 0x258 ]
mov rcx [ rsp + 0x60 ]
mov [ rcx ] rax
mov rax [ rsp + 0x60 ]
cmp [ rax ] 0x0
je r-xdata
mov [ rsp + 0x44 ] 0x1b7740
mov r9d 0x4
lea r8 [ rsp + 0x44 ]
mov edx 0x6
mov rax [ rsp + 0x60 ]
mov rcx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x300 ]
mov r9d 0x4
lea r8 [ rsp + 0x44 ]
mov edx 0x5
mov rax [ rsp + 0x60 ]
mov rcx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x300 ]
mov [ rsp + 0x38 ] 0x0
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x3
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
mov r8w 0x50
mov rdx [ rsp + 0x68 ]
mov rax [ rsp + 0x60 ]
mov rcx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x2f8 ]
mov [ rsp + 0x48 ] rax
mov rax [ rsp + 0x60 ]
mov rcx [ rsp + 0x48 ]
mov [ rax + 0x8 ] rcx
cmp [ rsp + 0x48 ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
add rsp 0x58
retn
sub_180008380
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rax [ rsp + 0x30 ]
cmp [ rax + 0x8 ] 0x0
je r-xdata
mov rax [ rsp + 0x30 ]
cmp [ rax ] 0x0
je r-xdata
mov rax [ rsp + 0x30 ]
mov rcx [ rax + 0x8 ]
mov rax [ rw-data ]
call [ rax + 0x248 ]
add rsp 0x28
retn
mov rax [ rsp + 0x30 ]
mov rcx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x248 ]
sub_1800083d0
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0x90
mov [ rsp + 0x48 ] 0x0
lea rax [ rsp + 0x50 ]
mov rdi rax
xor eax eax
mov ecx 0x30
[ rdi ]
mov [ rsp + 0x88 ] 0x1
mov [ rsp + 0x40 ] 0x0
mov [ rsp + 0x8c ] 0x0
lea rax [ rw-data ]
add rax 0x432
lea rcx [ rw-data ]
add rcx 0x42d
mov [ rsp + 0x38 ] 0x0
mov [ rsp + 0x30 ] 0x84000200
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
mov r8 rax
mov rdx rcx
mov rax [ rsp + 0xa0 ]
mov rcx [ rax + 0x8 ]
mov rax [ rw-data ]
call [ rax + 0x238 ]
mov [ rsp + 0x80 ] rax
cmp [ rsp + 0x80 ] 0x0
je r-xdata
mov [ rsp + 0x88 ] 0x0
mov [ rsp + 0x48 ] 0x38
mov eax [ rsp + 0xb0 ]
mov [ rsp + 0x74 ] eax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
lea rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x218 ]
test eax eax
je r-xdata
mov [ rsp + 0x88 ] 0x0
lea r9 [ rsp + 0x40 ]
mov r8d [ rsp + 0xb0 ]
mov rdx [ rsp + 0xa8 ]
mov rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x230 ]
test eax eax
jne r-xdata
mov rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x248 ]
jmp r-xdata
xor r9d r9d
xor r8d r8d
lea rdx [ rsp + 0x8c ]
mov rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ rsp + 0x88 ] 0x0
mov eax [ rsp + 0x88 ]
add rsp 0x90
pop rdi
retn
mov [ rsp + 0x88 ] 0x0
cmp [ rsp + 0x8c ] 0x0
je r-xdata
xor r9d r9d
xor r8d r8d
xor edx edx
mov rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x240 ]
cmp [ rsp + 0x88 ] 0x0
je r-xdata
mov eax [ rsp + 0x8c ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov rcx [ rsp + 0xb8 ]
mov [ rcx ] rax
lea r9 [ rsp + 0x40 ]
mov r8d [ rsp + 0x8c ]
mov rax [ rsp + 0xb8 ]
mov rdx [ rax ]
mov rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x228 ]
mov rax [ rsp + 0xc0 ]
mov eax [ rax ]
add eax [ rsp + 0x40 ]
mov rcx [ rsp + 0xc0 ]
mov [ rcx ] eax
lea rax [ rw-data ]
add rax 0x41e
mov rdx rax
mov rax [ rsp + 0xb8 ]
mov rcx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x1b8 ]
mov rcx [ rsp + 0xb8 ]
cmp rax [ rcx ]
je r-xdata
cmp [ rsp + 0x8c ] 0x0
je r-xdata
mov rax [ rsp + 0xc0 ]
cmp [ rax ] 0x6
jne r-xdata
mov rax [ rsp + 0xb8 ]
mov rcx [ rax ]
call sub_18000a460
mov rax [ rsp + 0xb8 ]
mov [ rax ] 0x0
mov rax [ rsp + 0xc0 ]
mov [ rax ] 0x0
mov [ rsp + 0x88 ] 0x0
jmp r-xdata
mov rax [ rsp + 0xc0 ]
mov eax [ rax ]
add eax [ rsp + 0x8c ]
mov eax eax
mov r9d eax
mov rax [ rsp + 0xb8 ]
mov r8 [ rax ]
mov edx 0x8
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x60 ]
mov rcx [ rsp + 0xb8 ]
mov [ rcx ] rax
mov rax [ rsp + 0xc0 ]
mov eax [ rax ]
mov rcx [ rsp + 0xb8 ]
add rax [ rcx ]
lea r9 [ rsp + 0x40 ]
mov r8d [ rsp + 0x8c ]
mov rdx rax
mov rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x228 ]
mov rax [ rsp + 0xc0 ]
mov eax [ rax ]
add eax [ rsp + 0x40 ]
mov rcx [ rsp + 0xc0 ]
mov [ rcx ] eax
jmp r-xdata
jmp r-xdata
mov rax [ rsp + 0xb8 ]
mov rcx [ rax ]
call sub_18000a460
mov rax [ rsp + 0xb8 ]
mov [ rax ] 0x0
mov rax [ rsp + 0xc0 ]
mov [ rax ] 0x0
mov [ rsp + 0x88 ] 0x1
xor r9d r9d
xor r8d r8d
lea rdx [ rsp + 0x8c ]
mov rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x220 ]
test eax eax
je r-xdata
sub_1800087c0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
push rsi
push rdi
sub rsp 0xa08
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x9f8 ] rax
cmp [ rsp + 0xa20 ] 0x0
jge r-xdata
mov [ rsp + 0x48 ] 0x0
lea rax [ rsp + 0x4c ]
mov rdi rax
xor eax eax
mov ecx 0x14
[ rdi ]
cmp [ rsp + 0xa20 ] 0x0
jne r-xdata
mov r9 [ rsp + 0xa30 ]
mov r8 [ rsp + 0xa28 ]
mov edx [ rsp + 0xa20 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1f0 ]
jmp r-xdata
mov r9 [ rsp + 0xa30 ]
mov r8 [ rsp + 0xa28 ]
mov edx [ rsp + 0xa20 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1f0 ]
mov rax [ rsp + 0xa30 ]
mov [ rsp + 0x60 ] rax
cmp [ rsp + 0xa28 ] 0x100
je r-xdata
mov rcx [ rsp + 0x9f8 ]
xor rcx rsp
call sub_18000dc90
add rsp 0xa08
pop rdi
pop rsi
retn
mov [ rsp + 0x7c ] 0x0
mov [ rsp + 0x80 ] 0x0
xor eax eax
mov [ rsp + 0x90 ] ax
lea rax [ rsp + 0x92 ]
mov rdi rax
xor eax eax
mov ecx 0x7fe
[ rdi ]
mov rax [ rsp + 0x60 ]
mov eax [ rax ]
and eax 0xff
mov [ rsp + 0x890 ] eax
mov rax [ rsp + 0x60 ]
mov eax [ rax + 0x4 ]
mov [ rsp + 0x78 ] eax
mov eax [ rsp + 0x78 ]
shl eax 0x10
mov [ rsp + 0x78 ] eax
mov [ rsp + 0x84 ] 0x0
xor eax eax
mov [ rsp + 0x68 ] ax
lea rax [ rsp + 0x6a ]
mov rdi rax
xor eax eax
mov ecx 0xe
[ rdi ]
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1b0 ]
test eax eax
je r-xdata
cmp [ rsp + 0xa28 ] 0x104
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x1e8 ]
mov [ rsp + 0x898 ] rax
mov rax [ rsp + 0x898 ]
cmp [ rw-data ] rax
je r-xdata
mov r8d 0x800
xor edx edx
lea rcx [ rsp + 0x90 ]
mov rax [ rw-data ]
call [ rax + 0x180 ]
mov r8d 0x400
lea rdx [ rsp + 0x90 ]
mov ecx [ rsp + 0x78 ]
mov rax [ rw-data ]
call [ rax + 0x108 ]
mov [ rsp + 0x7c ] eax
cmp [ rsp + 0x7c ] 0x0
je r-xdata
mov [ rsp + 0x8a0 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xd8 ]
cmp [ rsp + 0x890 ] 0x20
jne r-xdata
lea rdx [ rsp + 0x8a0 ]
mov rcx [ rsp + 0x898 ]
mov rax [ rw-data ]
call [ rax + 0x288 ]
mov [ rsp + 0x84 ] eax
mov r8d [ rsp + 0x8a0 ]
mov edx 0x1
mov ecx 0x410
mov rax [ rw-data ]
call [ rax + 0x210 ]
mov [ rsp + 0x8a8 ] rax
mov eax 0x2d
mov [ rsp + 0x90 ] ax
mov eax 0x2d
mov [ rsp + 0x92 ] ax
mov eax 0x5b
mov [ rsp + 0x94 ] ax
mov eax [ rsp + 0x80 ]
add eax 0x3
mov [ rsp + 0x80 ] eax
cmp [ rsp + 0x8a8 ] 0x0
je r-xdata
lea rax [ rw-data ]
add rax 0xe6
mov r8d 0x4
mov rdx rax
lea rcx [ rw-data ]
call sub_18000a2e0
cmp [ rsp + 0x890 ] 0xd
jne r-xdata
mov eax 0x20
mov [ rsp + 0x90 ] ax
xor eax eax
mov [ rsp + 0x92 ] ax
mov [ rsp + 0x7c ] 0x1
mov eax [ rsp + 0x7c ]
mov ecx [ rsp + 0x80 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x80 ] eax
mov eax [ rsp + 0x80 ]
mov ecx 0x5d
mov [ rsp + rax * 2 + 0x90 ] cx
mov eax [ rsp + 0x80 ]
inc eax
mov eax eax
mov ecx 0x2d
mov [ rsp + rax * 2 + 0x90 ] cx
mov eax [ rsp + 0x80 ]
add eax 0x2
mov eax eax
mov ecx 0x2d
mov [ rsp + rax * 2 + 0x90 ] cx
mov eax [ rsp + 0x80 ]
add eax 0x3
mov eax eax
mov ecx 0xa
mov [ rsp + rax * 2 + 0x90 ] cx
mov eax [ rsp + 0x80 ]
add eax 0x4
mov eax eax
mov ecx 0x5b
mov [ rsp + rax * 2 + 0x90 ] cx
mov eax [ rsp + 0x80 ]
add eax 0x5
mov [ rsp + 0x80 ] eax
mov eax 0x400
sub eax [ rsp + 0x80 ]
mov ecx [ rsp + 0x80 ]
lea rcx [ rsp + rcx * 2 + 0x90 ]
mov r8d eax
mov rdx rcx
mov rcx [ rsp + 0x898 ]
mov rax [ rw-data ]
call [ rax + 0x208 ]
mov [ rsp + 0x7c ] eax
mov eax [ rsp + 0x7c ]
mov ecx [ rsp + 0x80 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x80 ] eax
mov eax [ rsp + 0x80 ]
mov ecx 0x5d
mov [ rsp + rax * 2 + 0x90 ] cx
mov eax [ rsp + 0x80 ]
inc eax
mov eax eax
mov ecx 0xa
mov [ rsp + rax * 2 + 0x90 ] cx
mov eax [ rsp + 0x80 ]
add eax 0x2
mov eax eax
mov ecx 0xa
mov [ rsp + rax * 2 + 0x90 ] cx
mov eax [ rsp + 0x80 ]
add eax 0x3
mov [ rsp + 0x80 ] eax
mov eax [ rsp + 0x80 ]
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0x90 ]
lea rcx [ rw-data ]
call sub_18000a2e0
mov rax [ rsp + 0x898 ]
mov [ rw-data ] rax
mov eax 0x400
sub eax [ rsp + 0x80 ]
mov ecx [ rsp + 0x80 ]
lea rcx [ rsp + rcx * 2 + 0x90 ]
mov r9d eax
mov r8 rcx
xor edx edx
mov rcx [ rsp + 0x8a8 ]
mov rax [ rw-data ]
call [ rax + 0x268 ]
mov [ rsp + 0x7c ] eax
mov rcx [ rsp + 0x8a8 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
cmp [ rsp + 0x7c ] 0x1
jne r-xdata
mov eax 0xa
mov [ rsp + 0x90 ] ax
xor eax eax
mov [ rsp + 0x92 ] ax
mov [ rsp + 0x7c ] 0x1
mov r8d 0x2
lea rdx [ r--data ]
lea rcx [ rw-data ]
call sub_18000a2e0
lea rdx [ r--data ]
lea rcx [ rsp + 0x90 ]
mov rax [ rw-data ]
call [ rax + 0x58 ]
lea rcx [ rsp + 0x90 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0x90 ]
lea rcx [ rw-data ]
call sub_18000a2e0
mov [ rsp + 0x8b0 ] 0x0
lea rax [ rsp + 0x8b1 ]
mov rdi rax
xor eax eax
mov ecx 0xff
[ rdi ]
mov [ rsp + 0x9d8 ] 0x0
xor edx edx
mov rcx [ rsp + 0x898 ]
mov rax [ rw-data ]
call [ rax + 0x288 ]
mov [ rsp + 0x84 ] eax
mov rax [ rw-data ]
call [ rax + 0x280 ]
mov r8d 0x1
mov edx [ rsp + 0x84 ]
mov ecx eax
mov rax [ rw-data ]
call [ rax + 0x298 ]
lea rcx [ rsp + 0x8b0 ]
mov rax [ rw-data ]
call [ rax + 0x200 ]
mov rax [ rw-data ]
call [ rax + 0x280 ]
xor r8d r8d
mov edx [ rsp + 0x84 ]
mov ecx eax
mov rax [ rw-data ]
call [ rax + 0x298 ]
mov ecx [ rsp + 0x84 ]
mov rax [ rw-data ]
call [ rax + 0x290 ]
mov [ rsp + 0x9b0 ] rax
xor eax eax
mov [ rsp + 0x9b8 ] ax
lea rax [ rsp + 0x9ba ]
mov rdi rax
xor eax eax
mov ecx 0x1e
[ rdi ]
mov rax [ rsp + 0x9b0 ]
mov [ rsp + 0x30 ] rax
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x20 ] 0x10
lea r9 [ rsp + 0x9b8 ]
lea r8 [ rsp + 0x8b0 ]
mov rax [ rsp + 0x60 ]
mov edx [ rax + 0x4 ]
mov rax [ rsp + 0x60 ]
mov ecx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x1f8 ]
mov [ rsp + 0x9d8 ] eax
cmp [ rsp + 0x9d8 ] 0x0
jge r-xdata
cmp [ rsp + 0x48 ] 0x0
je r-xdata
lea rax [ rsp + 0x9e0 ]
mov rdi rax
mov rsi [ rsp + 0x60 ]
mov ecx 0x18
[ rdi ] [ rsi ]
lea rax [ rsp + 0x48 ]
lea rcx [ rsp + 0x9e0 ]
mov rdi rax
mov rsi rcx
mov ecx 0x18
[ rdi ] [ rsi ]
cmp [ rsp + 0x9d8 ] 0x0
jle r-xdata
mov r8d 0x100
xor edx edx
lea rcx [ rsp + 0x8b0 ]
mov rax [ rw-data ]
call [ rax + 0x180 ]
mov rax [ rsp + 0x9b0 ]
mov [ rsp + 0x30 ] rax
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x20 ] 0x10
lea r9 [ rsp + 0x9b8 ]
lea r8 [ rsp + 0x8b0 ]
mov edx [ rsp + 0x4c ]
mov ecx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x1f8 ]
mov [ rsp + 0x48 ] 0x0
jmp r-xdata
jmp r-xdata
jmp r-xdata
movsxd rax [ rsp + 0x9d8 ]
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0x9b8 ]
lea rcx [ rw-data ]
call sub_18000a2e0
mov rax [ rsp + 0x9b0 ]
mov [ rsp + 0x30 ] rax
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x20 ] 0x10
lea r9 [ rsp + 0x9b8 ]
lea r8 [ rsp + 0x8b0 ]
mov rax [ rsp + 0x60 ]
mov edx [ rax + 0x4 ]
mov rax [ rsp + 0x60 ]
mov ecx [ rax ]
mov rax [ rw-data ]
call [ rax + 0x1f8 ]
test eax eax
jge r-xdata
sub_180008f80
sub rsp 0x38
mov [ rsp + 0x20 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rsp + 0x20 ]
add rsp 0x38
retn
lea rax [ rw-data ]
add rax 0x541
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
call rax
mov [ rsp + 0x20 ] eax
mov [ rw-data ] 0x0
sub_180008fe0
sub rsp 0x38
cmp [ rw-data ] 0x0
je r-xdata
lea rax [ rw-data ]
add rax 0x26f
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
xor ecx ecx
call rax
mov [ rsp + 0x20 ] rax
lea rcx [ rw-data ]
add rcx 0x555
mov rdx rcx
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
xor r9d r9d
mov rcx [ rsp + 0x20 ]
mov r8 rcx
lea rdx [ sub_1800087c0 ]
mov ecx 0xd
call rax
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
call sub_180008f80
xor eax eax
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
add rsp 0x38
retn
sub_180009080
sub rsp 0x38
mov rcx [ rw-data ]
call sub_18000a420
mov [ rsp + 0x20 ] eax
cmp [ rsp + 0x20 ] 0xffffffff
je r-xdata
add rsp 0x38
retn
mov r9d 0xfffffffe
xor r8d r8d
mov edx [ rsp + 0x20 ]
mov rcx [ rw-data ]
call sub_18000d540
test eax eax
je r-xdata
mov rcx [ rw-data ]
call sub_18000a460
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
sub_1800090e0
mov [ rsp + 0x8 ] rcx
sub rsp 0x38
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x20 ] 0x0
mov [ rsp + 0x24 ] 0x0
mov [ rsp + 0x2c ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe0 ]
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
add rsp 0x38
retn
call sub_180009080
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xd8 ]
mov edx 0xea60
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
jne r-xdata
mov rcx [ rw-data ]
call sub_18000a420
mov [ rsp + 0x20 ] eax
cmp [ rsp + 0x20 ] 0xffffffff
je r-xdata
mov eax [ rsp + 0x28 ]
add eax 0xea60
mov [ rsp + 0x28 ] eax
jmp r-xdata
jmp r-xdata
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe0 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1a8 ]
mov [ rsp + 0x24 ] eax
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1a8 ]
mov [ rsp + 0x2c ] eax
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xd8 ]
mov eax [ rsp + 0x24 ]
cmp [ rsp + 0x20 ] eax
ja r-xdata
xor edx edx
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
je r-xdata
call sub_180009080
mov [ rsp + 0x28 ] 0x0
mov eax [ rsp + 0x2c ]
cmp [ rsp + 0x28 ] eax
jbe r-xdata
sub_180009230
mov [ rsp + 0x8 ] rcx
sub rsp 0xc8
mov [ rsp + 0x68 ] 0x0
mov [ rw-data ] 0x0
lea rax [ rw-data ]
add rax 0x50a
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x70 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x70 ]
mov [ rax + 0x1f0 ] rcx
cmp [ rsp + 0x70 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x519
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x78 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x78 ]
mov [ rax + 0x1f8 ] rcx
cmp [ rsp + 0x78 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x48a
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x80 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x80 ]
mov [ rax + 0x200 ] rcx
cmp [ rsp + 0x80 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
add rsp 0xc8
retn
lea rax [ rw-data ]
add rax 0x532
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x88 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x88 ]
mov [ rax + 0x208 ] rcx
cmp [ rsp + 0x88 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x2a7
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x90 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x90 ]
mov [ rax + 0x108 ] rcx
cmp [ rsp + 0x90 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x5b4
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x98 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0x98 ]
mov [ rax + 0x1b0 ] rcx
cmp [ rsp + 0x98 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x5cc
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xa0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xa0 ]
mov [ rax + 0x280 ] rcx
cmp [ rsp + 0xa0 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x5f7
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xa8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xa8 ]
mov [ rax + 0x288 ] rcx
cmp [ rsp + 0xa8 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x610
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xb0 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xb0 ]
mov [ rax + 0x290 ] rcx
cmp [ rsp + 0xb0 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x622
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0xb8 ] rax
mov rax [ rw-data ]
mov rcx [ rsp + 0xb8 ]
mov [ rax + 0x298 ] rcx
cmp [ rsp + 0xb8 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
mov [ rsp + 0x30 ] 0x0
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x18 ]
call sub_180008fe0
mov [ rsp + 0x68 ] eax
cmp [ rsp + 0x68 ] 0x0
jne r-xdata
mov eax 0x1
jmp r-xdata
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x8 ]
mov eax [ rsp + 0x68 ]
lea rax [ rsp + 0x30 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
lea r8 [ sub_1800090e0 ]
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xf0 ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x68 ] eax
xor r9d r9d
xor r8d r8d
xor edx edx
lea rcx [ rsp + 0x38 ]
call [ rw-data ]
mov [ rsp + 0x6c ] eax
cmp [ rsp + 0x6c ] 0x0
je r-xdata
call sub_180008f80
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0xea60
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
je r-xdata
jmp r-xdata
cmp [ rsp + 0x6c ] 0xffffffff
je r-xdata
call sub_180009080
mov edx 0xffffffff
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x118 ]
xor edx edx
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
jne r-xdata
jmp r-xdata
lea rcx [ rsp + 0x38 ]
call [ rw-data ]
lea rcx [ rsp + 0x38 ]
call [ rw-data ]
sub_180009690
sub rsp 0x48
mov [ rsp + 0x30 ] 0x0
xor r9d r9d
xor r8d r8d
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xa8 ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
lea rax [ rw-data ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
lea r8 [ sub_180009230 ]
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xf0 ]
mov [ rw-data ] rax
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
add rsp 0x48
retn
sub_180009720
sub rsp 0x28
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x110 ]
lea rax [ rw-data ]
add rax 0x634
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
xor r9d r9d
xor r8d r8d
mov edx 0x12
mov ecx [ rw-data ]
call rax
mov edx 0xffffffff
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
je r-xdata
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
mov edx 0xffffffff
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
je r-xdata
mov edx 0xffffffff
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x118 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0xffffffff
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x118 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
xor eax eax
add rsp 0x28
retn
call sub_180009080
mov rcx [ rw-data ]
call sub_18000a460
sub_180009830
mov [ rsp + 0x8 ] ecx
cmp [ rsp + 0x8 ] 0x0
jne r-xdata
xor edx edx
mov eax [ rsp + 0x8 ]
mov ecx 0x2
div ecx
mov eax edx
test eax eax
je r-xdata
mov eax 0xc
jmp r-xdata
mov eax [ rsp + 0x8 ]
imul eax eax 0x3
xor edx edx
mov ecx 0x2
div ecx
add eax 0xc
mov eax [ rsp + 0x8 ]
inc eax
mov [ rsp + 0x8 ] eax
retn
sub_180009880
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
mov eax 0xc0a8
call sub_180012de0
sub rsp rax
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0xc090 ] rax
mov [ rsp + 0xc040 ] 0x0
mov [ rsp + 0xc044 ] 0x0
mov [ rsp + 0xc048 ] 0x9
mov [ rsp + 0x28 ] 0x100
mov [ rw-data ] 0x0
mov rax [ rsp + 0xc0c0 ]
mov [ rax ] 0x21575a4c
mov rax [ rsp + 0xc0c0 ]
mov ecx [ rsp + 0xc0b8 ]
mov [ rax + 0x4 ] ecx
mov edx [ rsp + 0xc0b8 ]
mov rcx [ rsp + 0xc0b0 ]
call sub_18000a050
mov rcx [ rsp + 0xc0c0 ]
mov [ rcx + 0x8 ] eax
mov eax [ rsp + 0xc040 ]
add eax 0xc
mov [ rsp + 0xc040 ] eax
mov [ rsp + 0x24 ] 0x0
mov [ rsp + 0xc04c ] 0x100
mov [ rsp + 0xc050 ] 0x0
jmp r-xdata
cmp [ rsp + 0xc050 ] 0xff
jg r-xdata
mov [ rsp + 0x20 ] 0x0
movsxd rax [ rsp + 0xc050 ]
imul rax rax 0xc
mov [ rsp + rax + 0x40 ] 0x0
movsxd rax [ rsp + 0xc050 ]
imul rax rax 0xc
mov [ rsp + rax + 0x48 ] 0x0
movsxd rax [ rsp + 0xc050 ]
imul rax rax 0xc
mov [ rsp + rax + 0x44 ] 0x1
jmp r-xdata
movzx eax [ rsp + 0xc044 ]
test eax eax
je r-xdata
mov eax [ rsp + 0x20 ]
mov rcx [ rsp + 0xc0b0 ]
movzx eax [ rcx + rax ]
mov [ rsp + 0xc05c ] eax
mov eax [ rsp + 0xc05c ]
imul rax rax 0xc
cmp [ rsp + rax + 0x48 ] 0x0
je r-xdata
mov eax [ rsp + 0xc050 ]
inc eax
mov [ rsp + 0xc050 ] eax
mov eax [ rsp + 0xc040 ]
mov [ rsp + 0xc08c ] eax
mov eax [ rsp + 0xc040 ]
inc eax
mov [ rsp + 0xc08c ] eax
jmp r-xdata
cmp [ rsp + 0x24 ] 0xf00
jne r-xdata
mov [ rsp + 0xc060 ] 0x1
mov eax [ rsp + 0xc05c ]
imul rax rax 0xc
mov eax [ rsp + rax + 0x48 ]
mov [ rsp + 0xc064 ] eax
mov eax [ rsp + 0xc08c ]
mov rcx [ rsp + 0xc090 ]
xor rcx rsp
call sub_18000dc90
add rsp 0xc0a8
retn
cmp [ rsp + 0x24 ] 0xf00
jge r-xdata
movsxd rax [ rsp + 0xc04c ]
imul rax rax 0xc
mov eax [ rsp + rax + 0x40 ]
mov rcx [ rsp + 0xc0b0 ]
movzx eax [ rcx + rax ]
mov [ rsp + 0xc06d ] al
movsxd rax [ rsp + 0xc04c ]
imul rax rax 0xc
movzx ecx [ rsp + 0xc06d ]
imul rcx rcx 0xc
mov eax [ rsp + rax + 0x48 ]
mov [ rsp + rcx + 0x48 ] eax
mov eax [ rsp + 0xc04c ]
inc eax
mov [ rsp + 0xc04c ] eax
mov eax [ rsp + 0xc04c ]
cdq
and edx 0xfff
add eax edx
sar eax 0xc
test eax eax
je r-xdata
cmp [ rsp + 0xc064 ] 0x0
je r-xdata
mov eax [ rsp + 0xc04c ]
dec eax
mov [ rsp + 0xc058 ] eax
cmp [ rsp + 0xc058 ] 0xff
jne r-xdata
mov eax [ rsp + 0x24 ]
mov ecx [ rsp + 0xc04c ]
add ecx eax
mov eax ecx
mov [ rsp + 0xc058 ] eax
jmp r-xdata
mov [ rsp + 0xc04c ] 0x100
mov eax [ rsp + 0xc064 ]
imul rax rax 0xc
mov ecx [ rsp + 0xc060 ]
cmp [ rsp + rax + 0x44 ] ecx
jbe r-xdata
mov eax [ rsp + 0x20 ]
mov rcx [ rsp + 0xc0b0 ]
movzx eax [ rcx + rax ]
mov [ rsp + 0xc054 ] eax
mov eax [ rsp + 0xc058 ]
add eax 0xf00
mov [ rsp + 0xc058 ] eax
mov eax [ rsp + 0xc064 ]
imul rax rax 0xc
mov eax [ rsp + rax + 0x48 ]
mov [ rsp + 0xc064 ] eax
jmp r-xdata
mov eax [ rsp + 0xc064 ]
imul rax rax 0xc
mov eax [ rsp + rax + 0x44 ]
add eax [ rsp + 0x20 ]
cmp eax [ rsp + 0xc0b8 ]
ja r-xdata
mov eax [ rsp + 0xc054 ]
imul rax rax 0xc
mov ecx [ rsp + 0xc058 ]
mov [ rsp + rax + 0x48 ] ecx
mov eax [ rsp + 0xc058 ]
imul rax rax 0xc
mov ecx [ rsp + 0x20 ]
mov [ rsp + rax + 0x40 ] ecx
mov eax [ rsp + 0xc05c ]
imul rax rax 0xc
mov eax [ rsp + rax + 0x44 ]
inc eax
mov ecx [ rsp + 0xc058 ]
imul rcx rcx 0xc
mov [ rsp + rcx + 0x44 ] eax
mov eax [ rsp + 0xc058 ]
imul rax rax 0xc
mov [ rsp + rax + 0x48 ] 0x0
cmp [ rsp + 0x24 ] 0xf00
jge r-xdata
mov eax [ rsp + 0xc054 ]
imul rax rax 0xc
mov eax [ rsp + rax + 0x48 ]
mov [ rsp + 0xc054 ] eax
jmp r-xdata
mov eax [ rsp + 0xc060 ]
mov ecx [ rsp + 0x20 ]
add ecx eax
mov eax ecx
cmp eax [ rsp + 0xc0b8 ]
jae r-xdata
mov eax [ rsp + 0xc060 ]
mov ecx [ rsp + 0x20 ]
add ecx eax
mov eax ecx
mov eax eax
mov rcx [ rsp + 0xc0b0 ]
movzx eax [ rcx + rax ]
mov ecx [ rsp + 0xc064 ]
imul rcx rcx 0xc
mov ecx [ rsp + rcx + 0x40 ]
add ecx [ rsp + 0xc060 ]
mov ecx ecx
mov rdx [ rsp + 0xc0b0 ]
movzx ecx [ rdx + rcx ]
cmp eax ecx
jne r-xdata
mov eax [ rsp + 0xc058 ]
imul rax rax 0xc
mov eax [ rsp + rax + 0x44 ]
mov ecx [ rsp + 0x20 ]
lea eax [ rcx + rax - 0x1 ]
mov [ rsp + 0x20 ] eax
mov eax [ rsp + 0x20 ]
mov [ rw-data ] eax
mov eax [ rsp + 0xc048 ]
mov ecx 0x1
mov [ rsp + 0xc07c ] ecx
movzx ecx al
mov eax [ rsp + 0xc07c ]
shl eax cl
cmp eax [ rsp + 0x28 ]
jne r-xdata
mov eax [ rsp + 0x24 ]
inc eax
mov [ rsp + 0x24 ] eax
mov eax [ rsp + 0xc054 ]
imul rax rax 0xc
cmp [ rsp + rax + 0x48 ] 0x0
je r-xdata
mov [ rsp + 0xc06c ] 0x1
mov [ rsp + 0xc068 ] 0x0
mov [ rsp + 0xc070 ] 0x0
jmp r-xdata
cmp [ rsp + 0xc048 ] 0xc
jge r-xdata
movzx eax [ rsp + 0xc06c ]
test eax eax
je r-xdata
mov eax [ rsp + 0xc064 ]
imul rax rax 0xc
mov eax [ rsp + rax + 0x44 ]
cmp [ rsp + 0xc068 ] eax
jae r-xdata
mov eax [ rsp + 0xc048 ]
cmp [ rsp + 0xc070 ] eax
jge r-xdata
mov eax [ rsp + 0xc048 ]
inc eax
mov [ rsp + 0xc048 ] eax
mov eax [ rsp + 0xc064 ]
imul rax rax 0xc
mov eax [ rsp + rax + 0x44 ]
mov [ rsp + 0xc060 ] eax
mov eax [ rsp + 0xc064 ]
mov [ rsp + 0xc05c ] eax
mov eax [ rsp + 0xc068 ]
mov ecx [ rsp + 0x20 ]
add ecx eax
mov eax ecx
mov eax eax
mov rcx [ rsp + 0xc0b0 ]
movzx eax [ rcx + rax ]
mov ecx [ rsp + 0xc064 ]
imul rcx rcx 0xc
mov ecx [ rsp + rcx + 0x40 ]
add ecx [ rsp + 0xc068 ]
mov ecx ecx
mov rdx [ rsp + 0xc0b0 ]
movzx ecx [ rdx + rcx ]
cmp eax ecx
je r-xdata
mov eax [ rsp + 0x28 ]
inc eax
mov [ rsp + 0x28 ] eax
jmp r-xdata
mov eax [ rsp + 0xc040 ]
mov rcx [ rsp + 0xc0c0 ]
movzx eax [ rcx + rax ]
mov [ rsp + 0xc078 ] al
mov eax [ rsp + 0xc070 ]
mov ecx 0x1
mov [ rsp + 0xc080 ] ecx
movzx ecx al
mov eax [ rsp + 0xc080 ]
shl eax cl
and eax [ rsp + 0xc05c ]
mov [ rsp + 0xc074 ] eax
cmp [ rsp + 0xc074 ] 0x0
je r-xdata
mov eax [ rsp + 0xc068 ]
inc eax
mov [ rsp + 0xc068 ] eax
jmp r-xdata
mov [ rsp + 0xc06c ] 0x0
mov eax [ rsp + 0xc0b8 ]
cmp [ rsp + 0x20 ] eax
jae r-xdata
movzx eax [ rsp + 0xc044 ]
mov ecx 0x7
sub ecx eax
mov eax ecx
mov ecx 0x1
mov [ rsp + 0xc088 ] ecx
movzx ecx al
mov eax [ rsp + 0xc088 ]
shl eax cl
not eax
movzx ecx [ rsp + 0xc078 ]
and ecx eax
mov eax ecx
mov [ rsp + 0xc078 ] al
movzx eax [ rsp + 0xc044 ]
mov ecx 0x7
sub ecx eax
mov eax ecx
mov ecx 0x1
mov [ rsp + 0xc084 ] ecx
movzx ecx al
mov eax [ rsp + 0xc084 ]
shl eax cl
movzx ecx [ rsp + 0xc078 ]
or ecx eax
mov eax ecx
mov [ rsp + 0xc078 ] al
jmp r-xdata
movzx eax [ rsp + 0xc06c ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ rsp + 0xc040 ]
inc eax
mov [ rsp + 0xc040 ] eax
mov eax [ rsp + 0xc040 ]
mov rcx [ rsp + 0xc0c0 ]
mov [ rcx + rax ] 0x0
mov eax [ rsp + 0xc040 ]
mov rcx [ rsp + 0xc0c0 ]
movzx edx [ rsp + 0xc078 ]
mov [ rcx + rax ] dl
movzx eax [ rsp + 0xc044 ]
inc eax
cdq
and edx 0x7
add eax edx
and eax 0x7
sub eax edx
mov [ rsp + 0xc044 ] al
movzx eax [ rsp + 0xc044 ]
test eax eax
jne r-xdata
mov eax [ rsp + 0xc070 ]
inc eax
mov [ rsp + 0xc070 ] eax
sub_180009f50
sub rsp 0x28
mov [ rsp + 0x4 ] 0x0
mov [ rsp ] 0x0
jmp r-xdata
movsxd rax [ rsp ]
cmp rax 0xe
jae r-xdata
mov [ rsp ] 0x0
jmp r-xdata
movsxd rax [ rsp ]
lea rcx [ rw-data ]
movzx eax [ rcx + rax ]
mov ecx 0x1f
sub ecx eax
mov eax ecx
mov ecx 0x1
mov [ rsp + 0x10 ] ecx
movzx ecx al
mov eax [ rsp + 0x10 ]
shl eax cl
mov ecx [ rsp + 0x4 ]
or ecx eax
mov eax ecx
mov [ rsp + 0x4 ] eax
jmp r-xdata
cmp [ rsp ] 0x100
jge r-xdata
mov eax [ rsp ]
inc eax
mov [ rsp ] eax
mov [ rw-data ] 0x0
add rsp 0x28
retn
mov eax [ rsp ]
mov [ rsp + 0xc ] eax
mov [ rsp + 0x8 ] 0x0
jmp r-xdata
cmp [ rsp + 0x8 ] 0x8
jge r-xdata
movsxd rax [ rsp ]
lea rcx [ rw-data ]
mov edx [ rsp + 0xc ]
mov [ rcx + rax * 4 ] edx
jmp r-xdata
mov eax [ rsp + 0xc ]
and eax 0x1
test eax eax
je r-xdata
mov eax [ rsp ]
inc eax
mov [ rsp ] eax
mov eax [ rsp + 0xc ]
shr eax 0x1
mov [ rsp + 0x14 ] eax
mov eax [ rsp + 0xc ]
shr eax 0x1
mov ecx [ rsp + 0x4 ]
xor ecx eax
mov eax ecx
mov [ rsp + 0x14 ] eax
jmp r-xdata
mov eax [ rsp + 0x8 ]
inc eax
mov [ rsp + 0x8 ] eax
mov eax [ rsp + 0x14 ]
mov [ rsp + 0xc ] eax
jmp r-xdata
sub_18000a050
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x38
mov [ rsp + 0x20 ] 0xffffffff
cmp [ rsp + 0x40 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rsp + 0x20 ]
xor eax 0xffffffff
mov [ rsp + 0x20 ] eax
call sub_180009f50
add rsp 0x38
retn
cmp [ rsp + 0x48 ] 0x0
je r-xdata
mov rax [ rsp + 0x40 ]
movzx eax [ rax ]
mov ecx [ rsp + 0x20 ]
xor ecx eax
mov eax ecx
and eax 0xff
cdqe
lea rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
shr edx 0x8
mov eax [ rcx + rax * 4 ]
xor eax edx
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x40 ]
inc rax
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0x40 ]
movzx eax [ rax ]
mov ecx [ rsp + 0x20 ]
xor ecx eax
mov eax ecx
and eax 0xff
cdqe
lea rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
shr edx 0x8
mov eax [ rcx + rax * 4 ]
xor eax edx
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x40 ]
inc rax
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0x40 ]
movzx eax [ rax ]
mov ecx [ rsp + 0x20 ]
xor ecx eax
mov eax ecx
and eax 0xff
cdqe
lea rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
shr edx 0x8
mov eax [ rcx + rax * 4 ]
xor eax edx
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x40 ]
inc rax
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0x40 ]
movzx eax [ rax ]
mov ecx [ rsp + 0x20 ]
xor ecx eax
mov eax ecx
and eax 0xff
cdqe
lea rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
shr edx 0x8
mov eax [ rcx + rax * 4 ]
xor eax edx
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x40 ]
inc rax
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0x40 ]
movzx eax [ rax ]
mov ecx [ rsp + 0x20 ]
xor ecx eax
mov eax ecx
and eax 0xff
cdqe
lea rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
shr edx 0x8
mov eax [ rcx + rax * 4 ]
xor eax edx
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x40 ]
inc rax
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0x40 ]
movzx eax [ rax ]
mov ecx [ rsp + 0x20 ]
xor ecx eax
mov eax ecx
and eax 0xff
cdqe
lea rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
shr edx 0x8
mov eax [ rcx + rax * 4 ]
xor eax edx
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x40 ]
inc rax
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0x40 ]
movzx eax [ rax ]
mov ecx [ rsp + 0x20 ]
xor ecx eax
mov eax ecx
and eax 0xff
cdqe
lea rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
shr edx 0x8
mov eax [ rcx + rax * 4 ]
xor eax edx
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x40 ]
inc rax
mov [ rsp + 0x40 ] rax
mov rax [ rsp + 0x40 ]
movzx eax [ rax ]
mov ecx [ rsp + 0x20 ]
xor ecx eax
mov eax ecx
and eax 0xff
cdqe
lea rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
shr edx 0x8
mov eax [ rcx + rax * 4 ]
xor eax edx
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x40 ]
inc rax
mov [ rsp + 0x40 ] rax
mov eax [ rsp + 0x48 ]
sub eax 0x8
mov [ rsp + 0x48 ] eax
jmp r-xdata
mov eax [ rsp + 0x20 ]
xor eax 0xffffffff
mov rax [ rsp + 0x40 ]
movzx eax [ rax ]
mov ecx [ rsp + 0x20 ]
xor ecx eax
mov eax ecx
and eax 0xff
cdqe
lea rcx [ rw-data ]
mov edx [ rsp + 0x20 ]
shr edx 0x8
mov eax [ rcx + rax * 4 ]
xor eax edx
mov [ rsp + 0x20 ] eax
mov rax [ rsp + 0x40 ]
inc rax
mov [ rsp + 0x40 ] rax
mov eax [ rsp + 0x48 ]
dec eax
mov [ rsp + 0x48 ] eax
cmp [ rsp + 0x48 ] 0x0
jne r-xdata
cmp [ rsp + 0x48 ] 0x8
jb r-xdata
sub_18000a2e0
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x48
mov rax [ rsp + 0x50 ]
mov rax [ rax ]
mov [ rsp + 0x28 ] rax
mov eax [ rsp + 0x60 ]
mov [ rsp + 0x20 ] eax
mov [ rsp + 0x24 ] 0x0
mov [ rsp + 0x30 ] 0xffffffff
cmp [ rsp + 0x58 ] 0x0
je r-xdata
mov [ rsp + 0x30 ] 0x0
mov eax [ rsp + 0x30 ]
cmp [ rsp + 0x28 ] 0x0
jne r-xdata
mov r8 [ rsp + 0x28 ]
xor edx edx
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x88 ]
mov [ rsp + 0x24 ] eax
mov eax [ rsp + 0x24 ]
mov ecx [ rsp + 0x20 ]
add ecx eax
mov eax ecx
mov [ rsp + 0x20 ] eax
mov eax [ rsp + 0x20 ]
mov r9d eax
mov r8 [ rsp + 0x28 ]
mov edx 0x8
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x60 ]
mov [ rsp + 0x28 ] rax
mov eax [ rsp + 0x20 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x28 ] rax
jmp r-xdata
mov eax [ rsp + 0x60 ]
mov ecx [ rsp + 0x24 ]
mov rdx [ rsp + 0x28 ]
add rdx rcx
mov rcx rdx
mov r8d eax
mov rdx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov ecx [ rsp + 0x24 ]
mov rdx [ rsp + 0x28 ]
add rdx rcx
mov rcx rdx
cmp rax rcx
je r-xdata
mov eax 0xeeeeeef2
jmp r-xdata
cmp [ rsp + 0x28 ] 0x0
jne r-xdata
mov rax [ rsp + 0x50 ]
mov rcx [ rsp + 0x28 ]
mov [ rax ] rcx
mov eax [ rsp + 0x30 ]
jmp r-xdata
add rsp 0x48
retn
sub_18000a420
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
cmp [ rsp + 0x30 ] 0x0
jne r-xdata
mov r8 [ rsp + 0x30 ]
xor edx edx
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x88 ]
xor eax eax
jmp r-xdata
add rsp 0x28
retn
sub_18000a490
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x48
mov rax [ rsp + 0x50 ]
mov rcx [ rax ]
call sub_18000a420
mov [ rsp + 0x30 ] eax
mov rax [ rsp + 0x50 ]
cmp [ rax ] 0x0
je r-xdata
mov eax [ rsp + 0x60 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov rcx [ rsp + 0x50 ]
mov [ rcx ] rax
mov eax [ rsp + 0x60 ]
mov ecx [ rsp + 0x30 ]
add ecx eax
mov eax ecx
mov eax eax
mov r9d eax
mov rax [ rsp + 0x50 ]
mov r8 [ rax ]
mov edx 0x8
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x60 ]
mov rcx [ rsp + 0x50 ]
mov [ rcx ] rax
jmp r-xdata
mov eax 0xeeeeeef2
jmp r-xdata
mov [ rsp + 0x34 ] 0x0
mov eax [ rsp + 0x30 ]
mov rcx [ rsp + 0x50 ]
add rax [ rcx ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x34 ]
mov r8d [ rsp + 0x60 ]
mov rdx rax
mov rcx [ rsp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x68 ]
jmp r-xdata
mov rax [ rsp + 0x50 ]
cmp [ rax ] 0x0
je r-xdata
add rsp 0x48
retn
xor eax eax
sub_18000a570
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
push rdi
sub rsp 0x1a0
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x190 ] rax
mov [ rsp + 0x54 ] 0x0
mov [ rsp + 0x48 ] 0x0
mov [ rsp + 0x58 ] 0x0
mov [ rsp + 0x30 ] 0x0
lea rax [ rsp + 0x30 ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x1b8 ]
xor r8d r8d
xor edx edx
mov ecx 0x2
mov rax [ rw-data ]
call [ rax + 0x170 ]
mov [ rsp + 0x50 ] eax
cmp [ rsp + 0x50 ] 0x0
je r-xdata
mov [ rsp + 0x38 ] 0x3e8
mov eax [ rsp + 0x38 ]
imul rax rax 0x30
mov [ rsp + 0x3c ] eax
mov eax [ rsp + 0x3c ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x58 ] rax
cmp [ rsp + 0x58 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x54 ] eax
jmp r-xdata
lea r9 [ rsp + 0x3c ]
mov r8 [ rsp + 0x58 ]
lea rdx [ rsp + 0x38 ]
mov rcx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x168 ]
mov [ rsp + 0x50 ] eax
cmp [ rsp + 0x50 ] 0x0
je r-xdata
mov [ rsp + 0x54 ] 0xeeeeeef2
jmp r-xdata
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov rcx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x160 ]
mov [ rsp + 0x30 ] 0x0
mov r8d 0x800
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x48 ] rax
cmp [ rsp + 0x48 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x54 ] eax
jmp r-xdata
mov rcx [ rsp + 0x48 ]
call sub_18000a460
mov rcx [ rsp + 0x58 ]
call sub_18000a460
mov eax [ rsp + 0x54 ]
mov rcx [ rsp + 0x190 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x1a0
pop rdi
retn
mov rcx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x160 ]
mov [ rsp + 0x40 ] 0x0
jmp r-xdata
mov [ rsp + 0x54 ] 0xeeeeeef2
jmp r-xdata
mov eax [ rsp + 0x38 ]
cmp [ rsp + 0x40 ] eax
jae r-xdata
mov eax [ rsp + 0x40 ]
imul rax rax 0x30
mov rcx [ rsp + 0x58 ]
cmp [ rcx + rax + 0x18 ] 0x0
je r-xdata
lea rax [ rw-data ]
add rax 0xe8
mov rdx rax
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x58 ]
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0x1c0 ]
call sub_18000a2e0
cmp [ rsp + 0x1b0 ] 0x4
jae r-xdata
mov eax [ rsp + 0x40 ]
imul rax rax 0x30
mov rcx [ rsp + 0x58 ]
cmp [ rcx + rax + 0x8 ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ rsp + 0x40 ]
imul rax rax 0x30
mov rcx [ rsp + 0x58 ]
add rcx rax
mov rax rcx
mov ecx [ rsp + 0x1b0 ]
inc ecx
mov r8 [ rsp + 0x1c0 ]
mov rdx rax
call sub_18000a570
mov eax [ rsp + 0x40 ]
imul rax rax 0x30
mov rcx [ rsp + 0x58 ]
cmp [ rcx + rax + 0x8 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x1a1
mov rcx rax
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
lea rcx [ rw-data ]
add rcx 0x1a1
mov r8 rax
mov rdx rcx
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x40 ]
inc eax
mov [ rsp + 0x40 ] eax
mov eax [ rsp + 0x40 ]
imul rax rax 0x30
mov rcx [ rsp + 0x58 ]
cmp [ rcx + rax + 0x8 ] 0x2
jne r-xdata
lea rax [ rw-data ]
add rax 0x1b5
mov rcx rax
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
lea rcx [ rw-data ]
add rcx 0x1b5
mov r8 rax
mov rdx rcx
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x40 ]
imul rax rax 0x30
mov rcx [ rsp + 0x58 ]
cmp [ rcx + rax + 0x8 ] 0x3
jne r-xdata
lea rax [ rw-data ]
add rax 0x1c9
mov rcx rax
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
lea rcx [ rw-data ]
add rcx 0x1c9
mov r8 rax
mov rdx rcx
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov [ rsp + 0x60 ] 0x0
jmp r-xdata
lea rax [ rw-data ]
add rax 0x1db
mov rcx rax
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
lea rcx [ rw-data ]
add rcx 0x1db
mov r8 rax
mov rdx rcx
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x1b0 ]
cmp [ rsp + 0x60 ] eax
jae r-xdata
mov eax [ rsp + 0x40 ]
imul rax rax 0x30
mov rcx [ rsp + 0x58 ]
mov rdx [ rcx + rax + 0x18 ]
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x58 ]
mov eax [ rsp + 0x40 ]
imul rax rax 0x30
mov rcx [ rsp + 0x58 ]
cmp [ rcx + rax + 0x8 ] 0x2
jne r-xdata
lea rax [ rw-data ]
add rax 0x1ef
mov rdx rax
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x58 ]
jmp r-xdata
mov [ rsp + 0x70 ] 0x0
lea rax [ rsp + 0x71 ]
mov rdi rax
xor eax eax
mov ecx 0xff
[ rdi ]
mov eax [ rsp + 0x40 ]
imul rax rax 0x30
mov rcx [ rsp + 0x58 ]
mov rax [ rcx + rax + 0x18 ]
add rax 0x4
lea rcx [ rw-data ]
add rcx 0x403
mov r9 rax
mov r8 rcx
mov edx 0x100
lea rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x1c0 ]
lea rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x1d8 ]
mov [ rsp + 0x170 ] rax
cmp [ rsp + 0x170 ] 0x0
je r-xdata
mov eax [ rsp + 0x60 ]
inc eax
mov [ rsp + 0x60 ] eax
mov rax [ rsp + 0x170 ]
movsx rax [ rax + 0x12 ]
mov rcx [ rsp + 0x170 ]
mov rcx [ rcx + 0x18 ]
mov r8 rax
mov rdx [ rcx ]
lea rcx [ rsp + 0x64 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov ecx [ rsp + 0x64 ]
mov rax [ rw-data ]
call [ rax + 0x1d0 ]
mov [ rsp + 0x178 ] rax
lea rcx [ rw-data ]
add rcx 0x1fd
mov [ rsp + 0x180 ] rcx
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
mov ecx 0x400
sub ecx eax
mov eax ecx
cdqe
mov [ rsp + 0x188 ] rax
mov rcx [ rsp + 0x48 ]
call [ rw-data ]
cdqe
mov rcx [ rsp + 0x48 ]
lea rax [ rcx + rax * 2 ]
mov rcx [ rsp + 0x178 ]
mov r9 rcx
mov rcx [ rsp + 0x180 ]
mov r8 rcx
mov rcx [ rsp + 0x188 ]
mov rdx rcx
mov rcx rax
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
sub_18000ab10
push rdi
sub rsp 0x300
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x2f8 ] rax
mov [ rsp + 0x2e8 ] rsp
mov [ rsp + 0x48 ] 0x0
lea rax [ rsp + 0x50 ]
mov rdi rax
xor eax eax
mov ecx 0x10
[ rdi ]
mov [ rsp + 0x40 ] 0x0
mov [ rsp + 0x44 ] 0x0
lea rax [ rw-data ]
add rax 0x42
mov [ rw-data ] rax
lea rax [ rw-data ]
add rax 0xa8
mov [ rw-data ] rax
mov r8d 0x208
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x60 ] rax
cmp [ rsp + 0x60 ] 0x0
jne r-xdata
mov rdx [ rsp + 0x60 ]
mov ecx 0x104
mov rax [ rw-data ]
call [ rax + 0x100 ]
mov rcx [ rsp + 0x60 ]
call [ rw-data ]
mov [ rsp + 0x2f0 ] eax
lea rcx [ rw-data ]
call [ rw-data ]
mov ecx [ rsp + 0x2f0 ]
lea eax [ rcx + rax + 0x1 ]
cdqe
shl rax 0x1
mov [ rsp + 0x40 ] eax
mov eax [ rsp + 0x40 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rsp + 0x44 ] 0xeeeeeef2
mov eax [ rsp + 0x44 ]
mov [ rsp + 0x2cc ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x2e8 ]
call sub_180010450
lea rax [ rw-data ]
add rax 0x38
mov ecx [ rsp + 0x40 ]
lea rdx [ rw-data ]
mov [ rsp + 0x20 ] rdx
mov r9 [ rsp + 0x60 ]
mov r8 rax
mov edx ecx
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
mov eax [ rsp + 0x40 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rsp + 0x44 ] 0xeeeeeef2
mov eax [ rsp + 0x44 ]
mov [ rsp + 0x2d0 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x2e8 ]
call sub_180010450
lea rax [ rw-data ]
add rax 0x1c
lea rcx [ rw-data ]
add rcx 0x38
mov edx [ rsp + 0x40 ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x60 ]
mov r8 rcx
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rax [ rw-data ]
add rax 0x2e2
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov edx 0x104
mov rcx [ rsp + 0x60 ]
call rax
lea rax [ rw-data ]
add rax 0xb2
mov rdx rax
mov rcx [ rsp + 0x60 ]
mov rax [ rw-data ]
call [ rax + 0x58 ]
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x80
mov [ rsp + 0x20 ] 0x3
xor r9d r9d
mov r8d 0x3
mov edx 0x80000000
mov rcx [ rsp + 0x60 ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x68 ] rax
mov r8 [ rsp + 0x60 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
cmp [ rsp + 0x68 ] 0xffffffffffffffff
jne r-xdata
mov [ rsp + 0x44 ] 0xeeeeeef2
mov eax [ rsp + 0x44 ]
mov [ rsp + 0x2d4 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x2e8 ]
call sub_180010450
xor r9d r9d
xor r8d r8d
lea rdx [ rw-data ]
mov rcx [ rsp + 0x68 ]
mov rax [ rw-data ]
call [ rax + 0xb8 ]
mov rcx [ rsp + 0x68 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
lea rcx [ rsp + 0x78 ]
mov rax [ rw-data ]
call [ rax + 0x90 ]
lea rax [ rw-data ]
add rax 0x2b8
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
lea rdx [ rw-data ]
lea rcx [ rsp + 0x78 ]
call rax
jmp r-xdata
lea rcx [ rsp + 0x48 ]
call sub_1800052d0
lea rcx [ rsp + 0x48 ]
call sub_1800052d0
xor eax eax
mov [ rsp + 0x90 ] ax
lea rax [ rsp + 0x92 ]
mov rdi rax
xor eax eax
mov ecx 0x206
[ rdi ]
lea rax [ rsp + 0x90 ]
mov [ rsp + 0x20 ] rax
xor r9d r9d
xor r8d r8d
mov edx 0x23
xor ecx ecx
call [ SHGetFolderPathW@IAT ]
test eax eax
jl r-xdata
lea r9 [ rsp + 0x48 ]
mov r8 [ rw-data ]
mov rdx [ rw-data ]
mov rcx 0xffffffff80000001
call sub_180005180
mov [ rsp + 0x44 ] eax
cmp [ rsp + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] 0xffffffff80000001
lea rcx [ rsp + 0x48 ]
call sub_1800052d0
lea r9 [ rsp + 0x48 ]
mov r8 [ rw-data ]
mov rdx [ rw-data ]
mov rcx 0xffffffff80000002
call sub_180005180
mov [ rsp + 0x44 ] eax
cmp [ rsp + 0x44 ] 0x0
je r-xdata
mov [ rsp + 0x2f4 ] 0x0
mov [ rsp + 0x2f4 ] 0x1
jmp r-xdata
cmp [ rsp + 0x2c8 ] 0xa
jge r-xdata
mov [ rsp + 0x2c0 ] 0x0
lea rax [ rsp + 0x2c0 ]
mov [ rsp + 0x20 ] rax
mov r9d 0x20006
xor r8d r8d
mov rdx [ rw-data ]
mov rcx 0xffffffff80000001
mov rax [ rw-data ]
call [ rax + 0x138 ]
mov [ rsp + 0x44 ] eax
cmp [ rsp + 0x2c0 ] 0x0
je r-xdata
mov eax [ rsp + 0x44 ]
mov [ rsp + 0x2d8 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x2e8 ]
call sub_180010450
jmp r-xdata
jmp r-xdata
lea rdx [ r--data ]
lea rcx [ rsp + 0x90 ]
mov rax [ rw-data ]
call [ rax + 0x58 ]
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x80
mov [ rsp + 0x20 ] 0x4
xor r9d r9d
mov r8d 0x1
mov edx 0x80000000
lea rcx [ rsp + 0x90 ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x2a0 ] rax
cmp [ rsp + 0x2a0 ] 0x0
je r-xdata
mov eax [ rsp + 0x2f4 ]
mov [ rsp + 0x88 ] eax
cmp [ rsp + 0x88 ] 0x0
je r-xdata
lea rcx [ rsp + 0x48 ]
call sub_1800052d0
cmp [ rsp + 0x44 ] 0x0
je r-xdata
mov edx [ rsp + 0x2c8 ]
lea rcx [ rsp + 0x48 ]
call sub_1800057a0
movzx eax al
mov [ rsp + 0x40 ] eax
mov eax [ rsp + 0x40 ]
inc eax
mov eax eax
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
movsxd rcx [ rsp + 0x2c8 ]
lea rdx [ rw-data ]
mov [ rdx + rcx * 8 ] rax
movsxd rax [ rsp + 0x2c8 ]
lea rcx [ rw-data ]
cmp [ rcx + rax * 8 ] 0x0
jne r-xdata
mov [ rw-data ] 0xffffffff80000002
mov eax [ rsp + 0x58 ]
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x50 ]
mov [ rsp + 0x20 ] rax
mov r9d 0x3
xor r8d r8d
mov rdx [ rw-data ]
mov rcx [ rsp + 0x2c0 ]
mov rax [ rw-data ]
call [ rax + 0x128 ]
mov [ rsp + 0x44 ] eax
mov rcx [ rsp + 0x2c0 ]
mov rax [ rw-data ]
call [ rax + 0x140 ]
cmp [ rsp + 0x44 ] 0x0
je r-xdata
jmp r-xdata
lea r9 [ rsp + 0x48 ]
mov r8 [ rw-data ]
mov rdx [ rw-data ]
mov rcx 0xffffffff80000001
call sub_180005180
mov [ rsp + 0x44 ] eax
cmp [ rsp + 0x44 ] 0x0
je r-xdata
mov [ rsp + 0x2b0 ] 0x0
mov [ rsp + 0x2b4 ] 0x0
xor edx edx
mov rcx [ rsp + 0x2a0 ]
mov rax [ rw-data ]
call [ rax + 0x70 ]
mov [ rsp + 0x2b4 ] eax
mov eax [ rsp + 0x2b4 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x2b8 ] rax
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x2b0 ]
mov r8d [ rsp + 0x2b4 ]
mov rdx [ rsp + 0x2b8 ]
mov rcx [ rsp + 0x2a0 ]
mov rax [ rw-data ]
call [ rax + 0x68 ]
mov rcx [ rsp + 0x2a0 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
lea r8 [ rsp + 0x2a8 ]
mov rdx [ rw-data ]
mov rcx 0xffffffff80000001
call [ RegCreateKeyW@IAT ]
mov eax [ rsp + 0x2b4 ]
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x2b8 ]
mov [ rsp + 0x20 ] rax
mov r9d 0x3
xor r8d r8d
mov rdx [ rw-data ]
mov rcx [ rsp + 0x2a8 ]
call [ RegSetValueExW@IAT ]
mov rcx [ rsp + 0x2a8 ]
call [ RegCloseKey@IAT ]
xor eax eax
jmp r-xdata
call sub_18000b380
movsxd rax [ rsp + 0x2c8 ]
lea rcx [ rw-data ]
mov r9 [ rcx + rax * 8 ]
mov r8d [ rsp + 0x2c8 ]
mov rdx [ rw-data ]
lea rcx [ rsp + 0x48 ]
call sub_1800056b0
test eax eax
je r-xdata
mov [ rsp + 0x44 ] 0xeeeeeef2
mov eax [ rsp + 0x44 ]
mov [ rsp + 0x2e0 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x2e8 ]
call sub_180010450
mov [ rsp + 0x2c8 ] 0x0
jmp r-xdata
mov [ rw-data ] 0xffffffff80000002
lea rcx [ rsp + 0x48 ]
call sub_1800052d0
lea r9 [ rsp + 0x48 ]
mov r8 [ rw-data ]
mov rdx [ rw-data ]
mov rcx 0xffffffff80000001
call sub_180005180
mov [ rsp + 0x44 ] eax
cmp [ rsp + 0x44 ] 0x0
jne r-xdata
mov rcx [ rsp + 0x2f8 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x300
pop rdi
retn
jmp r-xdata
movsxd rax [ rsp + 0x2c8 ]
lea rcx [ rw-data ]
mov edx [ rsp + 0x40 ]
mov rax [ rcx + rax * 8 ]
mov [ rdx + rax ] 0x0
mov eax [ rsp + 0x44 ]
mov [ rsp + 0x2dc ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x2e8 ]
call sub_180010450
mov [ rw-data ] 0xffffffff80000001
jmp r-xdata
mov eax [ rsp + 0x2c8 ]
inc eax
mov [ rsp + 0x2c8 ] eax
jmp r-xdata
jmp r-xdata
sub_18000b380
sub rsp 0x38
mov [ rsp + 0x20 ] 0x0
jmp r-xdata
cmp [ rsp + 0x20 ] 0xa
jge r-xdata
mov rcx [ rw-data ]
call sub_18000a460
mov rcx [ rw-data ]
call sub_18000a460
add rsp 0x38
retn
movsxd rax [ rsp + 0x20 ]
lea rcx [ rw-data ]
mov rcx [ rcx + rax * 8 ]
call sub_18000a460
jmp r-xdata
mov eax [ rsp + 0x20 ]
inc eax
mov [ rsp + 0x20 ] eax
sub_18000b3e0
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
push rdi
sub rsp 0x80
mov [ rsp + 0x60 ] rsp
mov [ rsp + 0x38 ] 0x0
lea rax [ rsp + 0x40 ]
mov rdi rax
xor eax eax
mov ecx 0x10
[ rdi ]
mov [ rsp + 0x30 ] 0x0
lea r9 [ rsp + 0x38 ]
mov r8 [ rw-data ]
mov rdx [ rw-data ]
mov rcx [ rw-data ]
call sub_180005180
mov [ rsp + 0x30 ] eax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov edx [ rsp + 0x90 ]
lea rcx [ rsp + 0x38 ]
call sub_1800057a0
movzx eax al
mov [ rsp + 0x50 ] eax
mov eax [ rsp + 0xa0 ]
mov [ rsp + 0x20 ] eax
mov r9 [ rsp + 0x98 ]
mov r8d [ rsp + 0x90 ]
mov rdx [ rw-data ]
lea rcx [ rsp + 0x38 ]
call sub_180005330
mov [ rsp + 0x30 ] eax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov eax [ rsp + 0x30 ]
mov [ rsp + 0x54 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x60 ]
call sub_180010450
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe0 ]
mov eax [ rsp + 0xa0 ]
cmp [ rsp + 0x50 ] eax
je r-xdata
mov eax [ rsp + 0x30 ]
mov [ rsp + 0x58 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x60 ]
call sub_180010450
mov eax [ rsp + 0xa0 ]
mov ecx [ rsp + 0x90 ]
lea rdx [ rw-data ]
mov [ rsp + 0x70 ] rdx
mov r8d eax
mov rdx [ rsp + 0x98 ]
mov rax [ rsp + 0x70 ]
mov rcx [ rax + rcx * 8 ]
mov rax [ rw-data ]
call [ rax + 0x188 ]
mov eax [ rsp + 0x90 ]
lea rcx [ rw-data ]
mov edx [ rsp + 0xa0 ]
mov rax [ rcx + rax * 8 ]
mov [ rdx + rax ] 0x0
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xd8 ]
nop
lea rcx [ rsp + 0x38 ]
call sub_1800052d0
xor eax eax
jmp r-xdata
mov eax [ rsp + 0xa0 ]
inc eax
mov eax eax
mov ecx [ rsp + 0x90 ]
lea rdx [ rw-data ]
mov r9d eax
mov r8 [ rdx + rcx * 8 ]
mov edx 0x8
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x60 ]
mov [ rsp + 0x68 ] rax
mov eax [ rsp + 0x90 ]
lea rcx [ rw-data ]
mov rdx [ rsp + 0x68 ]
mov [ rcx + rax * 8 ] rdx
cmp [ rsp + 0x68 ] 0x0
jne r-xdata
add rsp 0x80
pop rdi
retn
mov [ rsp + 0x5c ] 0xeeeeeef2
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x60 ]
call sub_180010450
sub_18000b5f0
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0x70
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x38 ] 0x0
lea rax [ rsp + 0x40 ]
mov rdi rax
xor eax eax
mov ecx 0x30
[ rdi ]
mov rcx [ rsp + 0x80 ]
call [ LoadLibraryA@IAT ]
mov [ rsp + 0x28 ] rax
cmp [ rsp + 0x28 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x207
mov rdx rax
mov rcx [ rsp + 0x28 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
lea rax [ sub_180004df0 ]
mov [ rsp + 0x38 ] rax
lea rax [ sub_1800069f0 ]
mov [ rsp + 0x40 ] rax
lea rax [ sub_18000d540 ]
mov [ rsp + 0x48 ] rax
lea rax [ sub_180004f60 ]
mov [ rsp + 0x50 ] rax
mov rax [ rw-data ]
mov [ rsp + 0x58 ] rax
mov rax [ rw-data ]
mov [ rsp + 0x60 ] rax
lea rax [ sub_18000a2e0 ]
mov [ rsp + 0x68 ] rax
mov [ rsp + 0x30 ] 0x0
lea rcx [ rsp + 0x38 ]
call [ rsp + 0x20 ]
mov [ rsp + 0x30 ] eax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov rcx [ rsp + 0x28 ]
mov rax [ rw-data ]
call [ rax + 0x120 ]
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
add rsp 0x70
pop rdi
retn
mov eax [ rsp + 0x88 ]
lea rcx [ rw-data ]
mov rdx [ rsp + 0x28 ]
mov [ rcx + rax * 8 ] rdx
xor eax eax
mov rcx [ rsp + 0x28 ]
mov rax [ rw-data ]
call [ rax + 0x120 ]
mov eax [ rsp + 0x30 ]
jmp r-xdata
sub_18000b740
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0x70
mov [ rsp + 0x60 ] rsp
mov [ rsp + 0x38 ] 0x0
lea rax [ rsp + 0x40 ]
mov rdi rax
xor eax eax
mov ecx 0x10
[ rdi ]
mov [ rsp + 0x30 ] 0x0
cmp [ rsp + 0x88 ] 0x9
ja r-xdata
mov [ rsp + 0x50 ] 0xeeeeeef6
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x60 ]
call sub_180010450
cmp [ rw-data ] 0xa
jne r-xdata
mov edx [ rsp + 0x88 ]
mov rcx [ rsp + 0x80 ]
call sub_18000b5f0
mov [ rsp + 0x30 ] eax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov [ rsp + 0x54 ] 0xeeeeeef7
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x60 ]
call sub_180010450
mov eax [ rsp + 0x88 ]
lea rcx [ rw-data ]
cmp [ rcx + rax * 8 ] 0x0
je r-xdata
lea r9 [ rsp + 0x38 ]
mov r8 [ rw-data ]
mov rdx [ rw-data ]
mov rcx [ rw-data ]
call sub_180005180
mov [ rsp + 0x30 ] eax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov eax [ rsp + 0x30 ]
mov [ rsp + 0x58 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x60 ]
call sub_180010450
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x20 ]
mov ecx [ rsp + 0x88 ]
add ecx 0xa
mov [ rsp + 0x20 ] eax
mov r9 [ rsp + 0x80 ]
mov r8d ecx
mov rdx [ rw-data ]
lea rcx [ rsp + 0x38 ]
call sub_180005330
mov [ rsp + 0x30 ] eax
lea rcx [ rsp + 0x38 ]
call sub_1800052d0
mov eax [ rsp + 0x30 ]
jmp r-xdata
mov eax [ rsp + 0x30 ]
mov [ rsp + 0x5c ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x60 ]
call sub_180010450
add rsp 0x70
pop rdi
retn
sub_18000b8d0
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] ecx
push rdi
sub rsp 0x110
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x108 ] rax
mov [ rsp + 0x100 ] rsp
mov [ rsp + 0x38 ] 0x0
lea rax [ rsp + 0x40 ]
mov rdi rax
xor eax eax
mov ecx 0x10
[ rdi ]
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x20 ] 0x0
cmp [ rsp + 0x128 ] 0x0
je r-xdata
mov eax [ rsp + 0x120 ]
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x120 ] 0x9
ja r-xdata
mov rcx [ rsp + 0x20 ]
mov rax [ rw-data ]
call [ rax + 0x120 ]
cmp [ rsp + 0x128 ] 0x0
je r-xdata
mov ecx [ rsp + 0x128 ]
call [ rsp + 0x50 ]
mov eax 0xeeeeeef8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ rsp + 0x120 ]
lea rcx [ rw-data ]
mov [ rcx + rax * 8 ] 0x0
lea r9 [ rsp + 0x38 ]
mov r8 [ rw-data ]
mov rdx [ rw-data ]
mov rcx [ rw-data ]
call sub_180005180
mov [ rsp + 0x30 ] eax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov rcx [ rsp + 0x108 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x110
pop rdi
retn
mov eax [ rsp + 0x120 ]
lea rcx [ rw-data ]
cmp [ rcx + rax * 8 ] 0x0
jne r-xdata
mov eax [ rsp + 0x120 ]
add eax 0xa
mov edx eax
lea rcx [ rsp + 0x38 ]
call sub_1800057a0
movzx eax al
mov [ rsp + 0x58 ] eax
cmp [ rsp + 0x58 ] 0x0
jbe r-xdata
mov eax [ rsp + 0x30 ]
mov [ rsp + 0xf0 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x100 ]
call sub_180010450
mov eax [ rsp + 0x120 ]
lea rcx [ rw-data ]
mov rax [ rcx + rax * 8 ]
mov [ rsp + 0x20 ] rax
jmp r-xdata
lea rcx [ rsp + 0x38 ]
call sub_1800052d0
mov rcx [ rsp + 0x28 ]
call sub_18000a460
mov eax [ rsp + 0x58 ]
inc eax
mov eax eax
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x28 ] rax
cmp [ rsp + 0x28 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x20c
mov rdx rax
mov rcx [ rsp + 0x20 ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x50 ] rax
cmp [ rsp + 0x50 ] 0x0
je r-xdata
mov eax [ rsp + 0x120 ]
add eax 0xa
mov r9 [ rsp + 0x28 ]
mov r8d eax
mov rdx [ rw-data ]
lea rcx [ rsp + 0x38 ]
call sub_1800056b0
test eax eax
je r-xdata
mov [ rsp + 0xf4 ] 0xeeeeeef2
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x100 ]
call sub_180010450
mov eax [ rsp + 0x58 ]
mov rcx [ rsp + 0x28 ]
mov [ rcx + rax ] 0x0
mov eax [ rsp + 0x120 ]
add eax 0xa
mov r8d eax
mov rdx [ rw-data ]
lea rcx [ rsp + 0x38 ]
call sub_1800057c0
mov [ rsp + 0x30 ] eax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
xor eax eax
mov [ rsp + 0x70 ] ax
lea rax [ rsp + 0x72 ]
mov rdi rax
xor eax eax
mov ecx 0x7e
[ rdi ]
lea rax [ rw-data ]
add rax 0x201
mov r9 [ rsp + 0x28 ]
mov r8 rax
mov edx 0x40
lea rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rcx [ rsp + 0x70 ]
mov rax [ rw-data ]
call [ rax + 0x50 ]
nop
mov eax [ rsp + 0x30 ]
mov [ rsp + 0xf8 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x100 ]
call sub_180010450
sub_18000bbe0
sub rsp 0x38
mov [ rsp + 0x20 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
cmp [ rsp + 0x20 ] eax
jae r-xdata
add rsp 0x38
retn
mov eax [ rsp + 0x20 ]
lea rcx [ rw-data ]
cmp [ rcx + rax * 8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rsp + 0x20 ]
lea rcx [ rw-data ]
xor edx edx
mov ecx [ rcx + rax * 8 ]
call sub_18000b8d0
mov eax [ rsp + 0x20 ]
inc eax
mov [ rsp + 0x20 ] eax
sub_18000bc40
push rdi
sub rsp 0xa0
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x98 ] rax
mov [ rsp + 0x70 ] 0x0
mov [ rsp + 0x78 ] 0x0
lea rax [ rsp + 0x80 ]
mov rdi rax
xor eax eax
mov ecx 0x10
[ rdi ]
mov [ rsp + 0x30 ] 0x0
lea rax [ rsp + 0x31 ]
mov rdi rax
xor eax eax
mov ecx 0x3f
[ rdi ]
lea r9 [ rsp + 0x78 ]
mov r8 [ rw-data ]
mov rdx [ rw-data ]
mov rcx [ rw-data ]
call sub_180005180
test eax eax
je r-xdata
mov [ rsp + 0x90 ] 0x0
jmp r-xdata
jmp r-xdata
cmp [ rsp + 0x90 ] 0xa
jge r-xdata
mov rcx [ rsp + 0x98 ]
xor rcx rsp
call sub_18000dc90
add rsp 0xa0
pop rdi
retn
lea rcx [ rsp + 0x78 ]
call sub_1800052d0
movsxd rax [ rsp + 0x90 ]
lea rcx [ rw-data ]
mov [ rcx + rax * 8 ] 0x0
mov eax [ rsp + 0x90 ]
add eax 0xa
mov edx eax
lea rcx [ rsp + 0x78 ]
call sub_1800057a0
mov [ rsp + 0x70 ] al
movzx eax [ rsp + 0x70 ]
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov eax [ rsp + 0x90 ]
add eax 0xa
lea r9 [ rsp + 0x30 ]
mov r8d eax
mov rdx [ rw-data ]
lea rcx [ rsp + 0x78 ]
call sub_1800056b0
test eax eax
je r-xdata
mov eax [ rsp + 0x90 ]
inc eax
mov [ rsp + 0x90 ] eax
movzx eax [ rsp + 0x70 ]
mov [ rsp + rax + 0x30 ] 0x0
mov edx [ rsp + 0x90 ]
lea rcx [ rsp + 0x30 ]
call sub_18000b5f0
sub_18000bda0
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0xac0
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0xab8 ] rax
mov [ rsp + 0x850 ] 0x0
lea rax [ rsp + 0x854 ]
mov rdi rax
xor eax eax
mov ecx 0x234
[ rdi ]
mov [ rsp + 0x840 ] 0x0
xor eax eax
mov [ rsp + 0x40 ] ax
lea rax [ rsp + 0x42 ]
mov rdi rax
xor eax eax
mov ecx 0x7fe
[ rdi ]
lea rax [ rw-data ]
add rax 0x595
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov [ rsp + 0x848 ] rax
cmp [ rsp + 0x848 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x31f
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
xor edx edx
mov ecx 0x2
call rax
mov [ rsp + 0x840 ] rax
cmp [ rsp + 0x840 ] 0xffffffffffffffff
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov [ rsp + 0x850 ] 0x238
lea rax [ rw-data ]
add rax 0x5a4
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
lea rdx [ rsp + 0x850 ]
mov rcx [ rsp + 0x840 ]
call rax
mov [ rsp + 0xa90 ] eax
jmp r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
mov rcx [ rsp + 0xab8 ]
xor rcx rsp
call sub_18000dc90
add rsp 0xac0
pop rdi
retn
cmp [ rsp + 0xa90 ] 0x0
je r-xdata
mov rcx [ rsp + 0x840 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
xor eax eax
mov r8d [ rsp + 0x858 ]
mov edx 0x1
mov ecx 0x410
mov rax [ rw-data ]
call [ rax + 0x210 ]
mov [ rsp + 0xa98 ] rax
lea rax [ rw-data ]
add rax 0x213
mov ecx [ rsp + 0x858 ]
mov [ rsp + 0x20 ] ecx
lea r9 [ rsp + 0x87c ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
cmp [ rsp + 0xa98 ] 0x0
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0xaa8 ] eax
lea rcx [ rw-data ]
add rcx 0x309
mov [ rsp + 0xab0 ] rcx
lea rcx [ rsp + 0x40 ]
call [ rw-data ]
cdqe
lea rax [ rsp + rax * 2 + 0x40 ]
mov ecx [ rsp + 0xaa8 ]
mov r9d ecx
mov rcx [ rsp + 0xab0 ]
mov r8 rcx
mov edx 0x400
mov rcx rax
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rcx [ rsp + 0x40 ]
call [ rw-data ]
cdqe
mov ecx 0x400
sub rcx rax
mov rax rcx
mov [ rsp + 0xaa0 ] rax
lea rcx [ rsp + 0x40 ]
call [ rw-data ]
cdqe
lea rax [ rsp + rax * 2 + 0x40 ]
mov rcx [ rsp + 0xaa0 ]
mov r9d ecx
mov r8 rax
xor edx edx
mov rcx [ rsp + 0xa98 ]
mov rax [ rw-data ]
call [ rax + 0x268 ]
mov rcx [ rsp + 0xa98 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
lea rax [ rw-data ]
add rax 0xe8
mov rdx rax
lea rcx [ rsp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x58 ]
jmp r-xdata
lea rdx [ rsp + 0x850 ]
mov rcx [ rsp + 0x840 ]
call [ rsp + 0x848 ]
mov [ rsp + 0xa90 ] eax
lea rcx [ rsp + 0x40 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0x40 ]
mov rcx [ rsp + 0xad0 ]
call sub_18000a2e0
jmp r-xdata
sub_18000c0b0
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0xe0
mov [ rsp + 0x70 ] 0x0
lea rax [ rsp + 0x78 ]
mov rdi rax
xor eax eax
mov ecx 0x60
[ rdi ]
mov [ rsp + 0x50 ] 0x0
lea rax [ rsp + 0x58 ]
mov rdi rax
xor eax eax
mov ecx 0x10
[ rdi ]
mov [ rsp + 0x70 ] 0x68
mov [ rsp + 0xac ] 0x80
lea rax [ rw-data ]
add rax 0x338
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
lea rcx [ rsp + 0x50 ]
mov [ rsp + 0x48 ] rcx
lea rcx [ rsp + 0x70 ]
mov [ rsp + 0x40 ] rcx
mov [ rsp + 0x38 ] 0x0
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x8000000
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
mov rdx [ rsp + 0xf0 ]
xor ecx ecx
call rax
test eax eax
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
cmp [ rsp + 0xf8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov rax [ rsp + 0xf8 ]
mov rcx [ rsp + 0x50 ]
mov [ rax ] rcx
add rsp 0xe0
pop rdi
retn
sub_18000c1b0
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov [ rsp + 0x20 ] 0x0
mov r8d [ rsp + 0x40 ]
xor edx edx
mov ecx 0x1
mov rax [ rw-data ]
call [ rax + 0x210 ]
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x347
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
xor edx edx
mov rcx [ rsp + 0x20 ]
call rax
test eax eax
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
xor eax eax
mov rax [ rw-data ]
call [ rax + 0x48 ]
jmp r-xdata
add rsp 0x38
retn
sub_18000c240
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0x6a0
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x690 ] rax
xor eax eax
mov [ rsp + 0x50 ] ax
lea rax [ rsp + 0x52 ]
mov rdi rax
xor eax eax
mov ecx 0x3fe
[ rdi ]
xor eax eax
mov [ rsp + 0x460 ] ax
lea rax [ rsp + 0x462 ]
mov rdi rax
xor eax eax
mov ecx 0x206
[ rdi ]
mov [ rsp + 0x450 ] 0x0
mov [ rsp + 0x458 ] 0x0
lea rax [ rw-data ]
add rax 0x233
mov [ rsp + 0x680 ] rax
lea rcx [ rw-data ]
add rcx 0x5df
mov rdx rcx
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov r8d 0x200
lea rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0x680 ]
call rax
test eax eax
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x450 ] eax
lea rdx [ rsp + 0x460 ]
mov ecx 0x104
mov rax [ rw-data ]
call [ rax + 0x100 ]
test eax eax
je r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x450 ] eax
lea rax [ rw-data ]
add rax 0x243
mov rdx rax
lea rcx [ rsp + 0x460 ]
mov rax [ rw-data ]
call [ rax + 0x58 ]
lea rax [ rw-data ]
add rax 0x253
mov [ rsp + 0x688 ] rax
lea rcx [ rsp + 0x50 ]
call [ rw-data ]
cdqe
lea rax [ rsp + rax * 2 + 0x50 ]
lea rcx [ rsp + 0x460 ]
mov [ rsp + 0x20 ] rcx
mov r9 [ rsp + 0x6b0 ]
mov rcx [ rsp + 0x688 ]
mov r8 rcx
mov edx 0x200
mov rcx rax
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rdx [ rsp + 0x458 ]
lea rcx [ rsp + 0x50 ]
call sub_18000c0b0
mov [ rsp + 0x450 ] eax
cmp [ rsp + 0x450 ] 0x0
jne r-xdata
mov eax [ rsp + 0x450 ]
mov eax [ rsp + 0x450 ]
jmp r-xdata
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1a8 ]
mov edx eax
mov rcx [ rsp + 0x458 ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
je r-xdata
mov rcx [ rsp + 0x690 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x6a0
pop rdi
retn
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x80
mov [ rsp + 0x20 ] 0x3
xor r9d r9d
mov r8d 0x1
mov edx 0x80000000
lea rcx [ rsp + 0x460 ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x670 ] rax
cmp [ rsp + 0x670 ] 0xffffffffffffffff
je r-xdata
lea rax [ rw-data ]
add rax 0x347
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
xor edx edx
mov rcx [ rsp + 0x458 ]
call rax
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x450 ] eax
xor edx edx
mov rcx [ rsp + 0x670 ]
mov rax [ rw-data ]
call [ rax + 0x70 ]
mov [ rsp + 0x678 ] eax
cmp [ rsp + 0x678 ] 0x0
jbe r-xdata
jmp r-xdata
mov rcx [ rsp + 0x670 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
cmp [ rsp + 0x450 ] 0x0
jne r-xdata
mov r8d [ rsp + 0x678 ]
mov rdx [ rsp + 0x670 ]
mov rcx [ rsp + 0x6b8 ]
call sub_18000a490
mov [ rsp + 0x450 ] eax
jmp r-xdata
jmp r-xdata
lea rcx [ rsp + 0x460 ]
mov rax [ rw-data ]
call [ rax + 0x50 ]
jmp r-xdata
sub_18000c550
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
lea rax [ rw-data ]
add rax 0x26f
mov rdx rax
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
test eax eax
jne r-xdata
lea rax [ rw-data ]
add rax 0x279
mov rdx rax
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
test eax eax
jne r-xdata
mov rax 0xffffffff80000002
jmp r-xdata
lea rax [ rw-data ]
add rax 0x283
mov rdx rax
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
test eax eax
jne r-xdata
mov rax 0xffffffff80000001
jmp r-xdata
add rsp 0x28
retn
lea rax [ rw-data ]
add rax 0x28d
mov rdx rax
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
test eax eax
jne r-xdata
mov rax 0xffffffff80000005
jmp r-xdata
lea rax [ rw-data ]
add rax 0x297
mov rdx rax
mov rcx [ rsp + 0x30 ]
call [ rw-data ]
test eax eax
jne r-xdata
mov rax 0xffffffff80000000
jmp r-xdata
xor eax eax
mov rax 0xffffffff80000003
jmp r-xdata
sub_18000c630
mov [ rsp + 0x20 ] r9d
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0x910
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x900 ] rax
mov [ rsp + 0x8f0 ] rsp
mov [ rsp + 0x888 ] 0x0
mov [ rsp + 0x68 ] 0x0
mov [ rsp + 0x8c8 ] 0x0
mov [ rsp + 0x8a0 ] 0x0
mov [ rsp + 0x890 ] 0x0
mov [ rsp + 0x8b0 ] 0x0
mov [ rsp + 0x880 ] 0x0
mov [ rsp + 0x8c0 ] 0x0
mov [ rsp + 0x8a8 ] 0x0
mov [ rsp + 0x8b8 ] 0x0
mov [ rsp + 0x898 ] 0x0
mov [ rsp + 0x8b4 ] 0x0
xor eax eax
mov [ rsp + 0x80 ] ax
lea rax [ rsp + 0x82 ]
mov rdi rax
xor eax eax
mov ecx 0x7fe
[ rdi ]
lea rax [ rsp + 0x888 ]
mov [ rsp + 0x20 ] rax
mov r9d 0x20019
xor r8d r8d
mov rdx [ rsp + 0x930 ]
mov rcx [ rsp + 0x928 ]
mov rax [ rw-data ]
call [ rax + 0x138 ]
mov [ rsp + 0x8b4 ] eax
cmp [ rsp + 0x888 ] 0x0
jne r-xdata
mov rax [ rw-data ]
cmp [ rax + 0x158 ] 0x0
jne r-xdata
mov rcx [ rsp + 0x930 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rsp + 0x930 ]
mov rcx [ rsp + 0x920 ]
call sub_18000a2e0
mov eax [ rsp + 0x8b4 ]
mov [ rsp + 0x8d4 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x8f0 ]
call sub_180010450
mov rax [ rw-data ]
cmp [ rax + 0x150 ] 0x0
jne r-xdata
lea rax [ rw-data ]
add rax 0x3e6
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x158 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x158 ] 0x0
jne r-xdata
lea rax [ rsp + 0x60 ]
mov [ rsp + 0x58 ] rax
mov [ rsp + 0x50 ] 0x0
lea rax [ rsp + 0x8a0 ]
mov [ rsp + 0x48 ] rax
lea rax [ rsp + 0x8c8 ]
mov [ rsp + 0x40 ] rax
lea rax [ rsp + 0x68 ]
mov [ rsp + 0x38 ] rax
mov [ rsp + 0x30 ] 0x0
lea rax [ rsp + 0x8b8 ]
mov [ rsp + 0x28 ] rax
lea rax [ rsp + 0x8a8 ]
mov [ rsp + 0x20 ] rax
xor r9d r9d
xor r8d r8d
xor edx edx
mov rcx [ rsp + 0x888 ]
mov rax [ rw-data ]
call [ rax + 0x158 ]
mov [ rsp + 0x8b4 ] eax
cmp [ rsp + 0x8b4 ] 0x0
je r-xdata
lea rax [ rw-data ]
add rax 0x3d8
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x150 ] rax
mov rax [ rw-data ]
cmp [ rax + 0x150 ] 0x0
jne r-xdata
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x8d8 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x8f0 ]
call sub_180010450
mov eax [ rsp + 0x8c8 ]
inc eax
mov eax eax
shl rax 0x1
mov r8 rax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x880 ] rax
cmp [ rsp + 0x880 ] 0x0
jne r-xdata
mov eax [ rsp + 0x8b4 ]
mov [ rsp + 0x8e0 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x8f0 ]
call sub_180010450
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov [ rsp + 0x8dc ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x8f0 ]
call sub_180010450
mov eax [ rsp + 0x8a0 ]
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x8c0 ] rax
cmp [ rsp + 0x8c0 ] 0x0
jne r-xdata
mov [ rsp + 0x8e4 ] 0xeeeeeef2
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x8f0 ]
call sub_180010450
lea rax [ rw-data ]
add rax 0x29f
mov r9 [ rsp + 0x930 ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rcx [ rsp + 0x80 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0x80 ]
mov rcx [ rsp + 0x920 ]
call sub_18000a2e0
mov eax [ rsp + 0x8c8 ]
inc eax
mov [ rsp + 0x8a4 ] eax
mov eax [ rsp + 0x8a0 ]
mov [ rsp + 0x8ac ] eax
mov [ rsp + 0x8cc ] 0x0
jmp r-xdata
mov r8 [ rsp + 0x880 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x8e8 ] 0xeeeeeef2
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x8f0 ]
call sub_180010450
mov eax [ rsp + 0x68 ]
cmp [ rsp + 0x8cc ] eax
jae r-xdata
mov r8 [ rsp + 0x880 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
mov r8 [ rsp + 0x8c0 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
mov eax [ rsp + 0x8b8 ]
inc eax
mov eax eax
shl rax 0x1
mov r8 rax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x898 ] rax
cmp [ rsp + 0x898 ] 0x0
jne r-xdata
mov eax [ rsp + 0x8c8 ]
inc eax
mov [ rsp + 0x8a4 ] eax
mov eax [ rsp + 0x8a0 ]
inc eax
mov [ rsp + 0x8ac ] eax
lea rax [ rsp + 0x8ac ]
mov [ rsp + 0x38 ] rax
mov rax [ rsp + 0x8c0 ]
mov [ rsp + 0x30 ] rax
lea rax [ rsp + 0x890 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x8a4 ]
mov r8 [ rsp + 0x880 ]
mov edx [ rsp + 0x8cc ]
mov rcx [ rsp + 0x888 ]
mov rax [ rw-data ]
call [ rax + 0x150 ]
mov [ rsp + 0x8b4 ] eax
cmp [ rsp + 0x8b4 ] 0x0
jne r-xdata
mov rax [ rw-data ]
cmp [ rax + 0x148 ] 0x0
jne r-xdata
mov [ rsp + 0x8ec ] 0xeeeeeef2
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x8f0 ]
call sub_180010450
jmp r-xdata
lea rax [ rw-data ]
add rax 0x2b3
mov r9 [ rsp + 0x880 ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rcx [ rsp + 0x80 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0x80 ]
mov rcx [ rsp + 0x920 ]
call sub_18000a2e0
mov eax [ rsp + 0x890 ]
mov [ rsp + 0x8f8 ] eax
cmp [ rsp + 0x8f8 ] 0x0
jbe r-xdata
mov [ rsp + 0x8d0 ] 0x0
jmp r-xdata
lea rax [ rw-data ]
add rax 0x3ca
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rcx [ rw-data ]
mov [ rcx + 0x148 ] rax
mov eax [ rsp + 0x8cc ]
inc eax
mov [ rsp + 0x8cc ] eax
cmp [ rsp + 0x8f8 ] 0x2
jbe r-xdata
mov eax [ rsp + 0x8a8 ]
cmp [ rsp + 0x8d0 ] eax
jae r-xdata
lea rax [ rw-data ]
add rax 0x2d3
mov r9 [ rsp + 0x8c0 ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rcx [ rsp + 0x80 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0x80 ]
mov rcx [ rsp + 0x920 ]
call sub_18000a2e0
jmp r-xdata
cmp [ rsp + 0x8f8 ] 0x3
je r-xdata
mov r8 [ rsp + 0x898 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
nop
cmp [ rsp + 0x888 ] 0x0
je r-xdata
mov eax [ rsp + 0x8b8 ]
inc eax
mov [ rsp + 0x8a4 ] eax
lea rax [ rsp + 0x60 ]
mov [ rsp + 0x38 ] rax
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x0
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x8a4 ]
mov r8 [ rsp + 0x898 ]
mov edx [ rsp + 0x8d0 ]
mov rcx [ rsp + 0x888 ]
mov rax [ rw-data ]
call [ rax + 0x148 ]
test eax eax
jne r-xdata
lea rax [ rw-data ]
add rax 0x315
mov r8d 0x1a
mov rdx rax
mov rcx [ rsp + 0x920 ]
call sub_18000a2e0
mov r8d [ rsp + 0x8ac ]
mov rdx [ rsp + 0x8c0 ]
mov rcx [ rsp + 0x920 ]
call sub_18000a2e0
lea rax [ rw-data ]
add rax 0xe8
mov r8d 0x2
mov rdx rax
mov rcx [ rsp + 0x920 ]
call sub_18000a2e0
cmp [ rsp + 0x8f8 ] 0x4
je r-xdata
xor eax eax
jmp r-xdata
mov rcx [ rsp + 0x888 ]
mov rax [ rw-data ]
call [ rax + 0x140 ]
mov [ rsp + 0x8fc ] 0x0
mov [ rsp + 0x8fc ] 0x1
jmp r-xdata
lea rax [ rw-data ]
add rax 0x2f3
mov rcx [ rsp + 0x8c0 ]
mov r9d [ rcx ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rcx [ rsp + 0x80 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0x80 ]
mov rcx [ rsp + 0x920 ]
call sub_18000a2e0
jmp r-xdata
cmp [ rsp + 0x8f8 ] 0x7
je r-xdata
mov rcx [ rsp + 0x900 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x910
pop rdi
retn
jmp r-xdata
cmp [ rsp + 0x938 ] 0x0
je r-xdata
mov eax [ rsp + 0x8fc ]
mov [ rsp + 0x8b4 ] eax
cmp [ rsp + 0x8b4 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rsp + 0x8d0 ]
inc eax
mov [ rsp + 0x8d0 ] eax
lea rax [ rw-data ]
add rax 0x32f
mov r9 [ rsp + 0x898 ]
mov r8 rax
mov edx 0x400
lea rcx [ rsp + 0x80 ]
mov rax [ rw-data ]
call [ rax + 0x1c8 ]
lea rcx [ rsp + 0x80 ]
call [ rw-data ]
cdqe
shl rax 0x1
mov r8d eax
lea rdx [ rsp + 0x80 ]
mov rcx [ rsp + 0x920 ]
call sub_18000a2e0
mov r9d [ rsp + 0x938 ]
mov r8 [ rsp + 0x898 ]
mov rdx [ rsp + 0x888 ]
mov rcx [ rsp + 0x920 ]
call sub_18000c630
jmp r-xdata
sub_18000cfb0
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x58
mov [ rsp + 0x48 ] rsp
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x38 ] 0x0
lea rax [ rsp + 0x30 ]
mov [ rsp + 0x20 ] rax
mov r9d 0x20006
xor r8d r8d
mov rdx [ rsp + 0x68 ]
mov rcx [ rsp + 0x60 ]
mov rax [ rw-data ]
call [ rax + 0x138 ]
mov [ rsp + 0x38 ] eax
cmp [ rsp + 0x38 ] 0x0
je r-xdata
mov rcx [ rsp + 0x78 ]
call [ rw-data ]
inc eax
cdqe
shl rax 0x1
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x78 ]
mov [ rsp + 0x20 ] rax
mov r9d 0x1
xor r8d r8d
mov rdx [ rsp + 0x70 ]
mov rcx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x128 ]
mov [ rsp + 0x38 ] eax
cmp [ rsp + 0x38 ] 0x0
je r-xdata
mov eax [ rsp + 0x38 ]
mov [ rsp + 0x3c ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x48 ]
call sub_180010450
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov eax [ rsp + 0x38 ]
mov [ rsp + 0x40 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x48 ]
call sub_180010450
nop
xor eax eax
jmp r-xdata
mov rcx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x140 ]
add rsp 0x58
retn
sub_18000d0c0
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x58
mov [ rsp + 0x48 ] rsp
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x38 ] 0x0
lea rax [ rsp + 0x30 ]
mov [ rsp + 0x20 ] rax
mov r9d 0x2
xor r8d r8d
mov rdx [ rsp + 0x68 ]
mov rcx [ rsp + 0x60 ]
mov rax [ rw-data ]
call [ rax + 0x138 ]
mov [ rsp + 0x38 ] eax
cmp [ rsp + 0x38 ] 0x0
je r-xdata
lea rax [ rw-data ]
add rax 0x3f7
mov rdx rax
mov rcx [ rw-data ]
call [ GetProcAddress@IAT ]
mov rdx [ rsp + 0x70 ]
mov rcx [ rsp + 0x30 ]
call rax
mov [ rsp + 0x38 ] eax
cmp [ rsp + 0x38 ] 0x0
je r-xdata
mov eax [ rsp + 0x38 ]
mov [ rsp + 0x3c ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x48 ]
call sub_180010450
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov eax [ rsp + 0x38 ]
mov [ rsp + 0x40 ] eax
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x48 ]
call sub_180010450
nop
xor eax eax
jmp r-xdata
mov rcx [ rsp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x140 ]
add rsp 0x58
retn
sub_18000d1c0
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0x80
mov [ rsp + 0x70 ] rsp
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x38 ] 0x0
mov [ rsp + 0x48 ] 0x0
mov [ rsp + 0x40 ] 0x0
mov ecx 0x2710
mov rax [ rw-data ]
call [ rax + 0xd0 ]
mov [ rsp + 0x58 ] 0x0
lea rax [ rsp + 0x60 ]
mov rdi rax
xor eax eax
mov ecx 0x8
[ rdi ]
mov rax [ rw-data ]
mov [ rsp + 0x58 ] rax
mov rax [ rw-data ]
mov [ rsp + 0x60 ] rax
cmp [ rw-data ] 0x0
je r-xdata
movzx eax [ rw-data ]
test eax eax
je r-xdata
mov rcx [ rsp + 0x38 ]
call sub_18000a460
mov [ rsp + 0x38 ] 0x0
xor eax eax
jmp r-xdata
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
mov [ rw-data ] 0x0
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe0 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x1a8 ]
mov [ rsp + 0x50 ] eax
lea rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xd8 ]
mov edx [ rsp + 0x50 ]
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x10 ]
test eax eax
jne r-xdata
mov r9d 0xffffffff
xor r8d r8d
lea rdx [ rsp + 0x58 ]
mov ecx 0x2
mov rax [ rw-data ]
call [ rax + 0x260 ]
cmp eax 0x1
jne r-xdata
add rsp 0x80
pop rdi
retn
jmp r-xdata
mov [ rsp + 0x6c ] 0x1
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x70 ]
call sub_180010450
mov [ rsp + 0x38 ] 0x0
lea rax [ rw-data ]
add rax 0x33f
lea r9 [ rsp + 0x38 ]
mov r8 [ rw-data ]
mov edx 0x94
mov rcx rax
call sub_180005800
mov [ rsp + 0x30 ] eax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov [ rsp + 0x68 ] 0x1
lea rdx [ r-xdata ]
mov rcx [ rsp + 0x70 ]
call sub_180010450
xor eax eax
cmp eax 0x1
je r-xdata
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
lea rax [ rsp + 0x40 ]
mov [ rsp + 0x20 ] rax
lea r9 [ rsp + 0x48 ]
mov r8b 0x1
mov edx [ rsp + 0x30 ]
mov rcx [ rsp + 0x38 ]
call sub_18000d940
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] ax
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x50 ]
mov [ rsp + 0x30 ] 0x0
sub_18000d400
sub rsp 0x68
mov [ rsp + 0x58 ] 0x0
mov [ rsp + 0x50 ] 0x0
xor r8d r8d
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xf8 ]
mov [ rw-data ] rax
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x6
mov [ rsp + 0x20 ] 0x3
xor r9d r9d
xor r8d r8d
mov edx 0x80000000
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x48 ] rax
cmp [ rsp + 0x48 ] 0xffffffffffffffff
je r-xdata
xor eax eax
jmp r-xdata
lea rax [ rsp + 0x40 ]
mov [ rsp + 0x28 ] rax
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
lea r8 [ sub_18000d1c0 ]
xor edx edx
xor ecx ecx
mov rax [ rw-data ]
call [ rax + 0xf0 ]
mov [ rsp + 0x50 ] rax
mov rax [ rsp + 0x50 ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x58 ]
mov r8d 0x2
lea rdx [ rw-data ]
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x68 ]
xor edx edx
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x70 ]
mov [ rsp + 0x58 ] eax
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
cmp [ rsp + 0x58 ] 0xe4e1c0
jbe r-xdata
add rsp 0x68
retn
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x50 ]
xor eax eax
mov [ rw-data ] ax
sub_18000d540
mov [ rsp + 0x20 ] r9d
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
push rdi
sub rsp 0xc0
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0xb0 ] rax
mov [ rsp + 0xa8 ] rsp
mov [ rsp + 0x40 ] 0x0
mov [ rsp + 0x88 ] 0x0
mov [ rsp + 0x58 ] 0xb2745daf
mov eax [ rsp + 0xe0 ]
mov [ rsp + 0x60 ] eax
mov eax [ rsp + 0xe8 ]
mov [ rsp + 0x74 ] eax
lea rcx [ rsp + 0x64 ]
mov rax [ rw-data ]
call [ rax + 0x90 ]
mov [ rsp + 0x78 ] 0x0
lea rax [ rsp + 0x80 ]
mov rdi rax
xor eax eax
mov ecx 0x8
[ rdi ]
mov rax [ rw-data ]
mov [ rsp + 0x78 ] rax
mov rax [ rw-data ]
mov [ rsp + 0x80 ] rax
mov r9d 0xffffffff
xor r8d r8d
lea rdx [ rsp + 0x78 ]
mov ecx 0x2
mov rax [ rw-data ]
call [ rax + 0x260 ]
cmp eax 0x1
jne r-xdata
cmp [ rsp + 0xd0 ] 0x0
je r-xdata
mov [ rsp + 0x94 ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0xa8 ]
call sub_180010450
mov eax [ rsp + 0xd8 ]
mov [ rsp + 0x5c ] eax
mov [ rsp + 0x30 ] 0x0
mov [ rsp + 0x28 ] 0x6
mov [ rsp + 0x20 ] 0x4
xor r9d r9d
xor r8d r8d
mov edx 0xc0000000
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x40 ]
mov [ rsp + 0x48 ] rax
cmp [ rsp + 0x48 ] 0xffffffffffffffff
jne r-xdata
mov ecx [ rsp + 0xd8 ]
call sub_180009830
mov eax eax
mov r8d eax
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x88 ] rax
cmp [ rsp + 0x88 ] 0x0
je r-xdata
movzx eax [ rw-data ]
inc ax
mov [ rw-data ] ax
xor r9d r9d
xor r8d r8d
xor edx edx
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0xc0 ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x40 ]
mov r8d 0x2
lea rdx [ rw-data ]
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
test eax eax
jne r-xdata
mov [ rsp + 0x98 ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0xa8 ]
call sub_180010450
mov r8 [ rsp + 0x88 ]
mov edx [ rsp + 0xd8 ]
mov rcx [ rsp + 0xd0 ]
call sub_180009880
mov [ rsp + 0x90 ] eax
mov eax [ rsp + 0xd8 ]
cmp [ rsp + 0x90 ] eax
jbe r-xdata
mov r9d 0x2
xor r8d r8d
xor edx edx
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0xc0 ]
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x40 ]
mov r8d 0x20
lea rdx [ rsp + 0x58 ]
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
test eax eax
jne r-xdata
mov [ rsp + 0x9c ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0xa8 ]
call sub_180010450
mov rax [ rsp + 0x88 ]
mov [ rsp + 0xd0 ] rax
mov eax [ rsp + 0x90 ]
mov [ rsp + 0xd8 ] eax
mov r8 [ rsp + 0x88 ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x88 ] 0x0
jmp r-xdata
cmp [ rsp + 0xd0 ] 0x0
je r-xdata
mov [ rsp + 0xa0 ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0xa8 ]
call sub_180010450
lea r9 [ rw-data ]
xor r8d r8d
lea rdx [ rw-data ]
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x38 ]
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
nop
mov rcx [ rsp + 0x88 ]
call sub_18000a460
cmp [ rw-data ] 0x0
je r-xdata
mov [ rsp + 0x20 ] 0x0
lea r9 [ rsp + 0x40 ]
mov r8d [ rsp + 0xd8 ]
mov rdx [ rsp + 0xd0 ]
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x30 ]
test eax eax
jne r-xdata
mov eax 0x1
jmp r-xdata
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
mov [ rsp + 0xa4 ] 0x0
lea rdx [ r-xdata ]
mov rcx [ rsp + 0xa8 ]
call sub_180010450
mov rcx [ rsp + 0xb0 ]
xor rcx rsp
call sub_18000dc90
add rsp 0xc0
pop rdi
retn
sub_18000d940
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8b
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x48
mov [ rsp + 0x34 ] 0x0
mov [ rsp + 0x38 ] 0x0
mov [ rsp + 0x30 ] 0x1
lea rax [ rsp + 0x34 ]
mov [ rsp + 0x20 ] rax
lea r9 [ rsp + 0x38 ]
movzx r8d [ rsp + 0x60 ]
mov edx [ rsp + 0x58 ]
mov rcx [ rsp + 0x50 ]
call sub_180006140
mov [ rsp + 0x30 ] eax
cmp [ rsp + 0x30 ] 0x0
je r-xdata
mov rcx [ rsp + 0x38 ]
call sub_18000a460
mov eax [ rsp + 0x30 ]
add rsp 0x48
retn
mov rax [ rsp + 0x70 ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x68 ]
mov r8d [ rsp + 0x34 ]
mov rdx [ rsp + 0x38 ]
mov rcx [ rw-data ]
call sub_18000da40
test eax eax
jne r-xdata
mov rax [ rsp + 0x70 ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x68 ]
mov r8d [ rsp + 0x34 ]
mov rdx [ rsp + 0x38 ]
mov rcx [ rw-data ]
call sub_18000da40
test eax eax
jne r-xdata
mov rax [ rsp + 0x70 ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x68 ]
mov r8d [ rsp + 0x34 ]
mov rdx [ rsp + 0x38 ]
mov rcx [ rw-data ]
call sub_18000da40
test eax eax
jne r-xdata
mov [ rsp + 0x30 ] 0x0
sub_18000da40
mov [ rsp + 0x20 ] r9
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x48
mov [ rsp + 0x38 ] 0x1
mov r8d 0x10
mov edx 0x8
mov rcx [ rw-data ]
call [ rw-data ]
mov [ rsp + 0x30 ] rax
cmp [ rsp + 0x30 ] 0x0
jne r-xdata
mov rdx [ rsp + 0x50 ]
mov rcx [ rsp + 0x30 ]
call sub_180008240
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov rax [ rsp + 0x70 ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x68 ]
mov r8d [ rsp + 0x60 ]
mov rdx [ rsp + 0x58 ]
mov rcx [ rsp + 0x30 ]
call sub_1800083d0
mov [ rsp + 0x38 ] eax
xor edx edx
mov rcx [ rsp + 0x30 ]
call sub_18000daf0
mov rcx [ rsp + 0x30 ]
call sub_18000a460
mov eax [ rsp + 0x38 ]
mov rcx [ rsp + 0x30 ]
call sub_18000a460
xor eax eax
jmp r-xdata
add rsp 0x48
retn
sub_18000daf0
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call sub_180008380
mov eax [ rsp + 0x38 ]
and eax 0x1
test eax eax
je r-xdata
mov rax [ rsp + 0x30 ]
add rsp 0x28
retn
mov rcx [ rsp + 0x30 ]
call j_sub_18000e204
DllGetClassObject
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x68
lea rdx [ r--data ]
mov rcx [ rsp + 0x70 ]
call sub_180001000
test eax eax
jne r-xdata
mov edx 0x8
mov rcx [ rsp + 0x80 ]
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax 0x80040111
jmp r-xdata
mov rax [ rsp + 0x80 ]
mov [ rax ] 0x0
mov ecx 0x10
call sub_18000dd64
mov [ rsp + 0x38 ] rax
cmp [ rsp + 0x38 ] 0x0
je r-xdata
mov eax 0x80004003
jmp r-xdata
add rsp 0x68
retn
mov [ rsp + 0x50 ] 0x0
mov rcx [ rsp + 0x38 ]
call sub_1800012b0
mov [ rsp + 0x50 ] rax
jmp r-xdata
mov rax [ rsp + 0x20 ]
mov rax [ rax ]
mov r8 [ rsp + 0x80 ]
mov rdx [ rsp + 0x78 ]
mov rcx [ rsp + 0x20 ]
call [ rax ]
mov [ rsp + 0x28 ] eax
cmp [ rsp + 0x28 ] 0x0
jge r-xdata
mov eax 0x8007000e
jmp r-xdata
mov rax [ rsp + 0x50 ]
mov [ rsp + 0x30 ] rax
mov rax [ rsp + 0x30 ]
mov [ rsp + 0x20 ] rax
cmp [ rsp + 0x20 ] 0x0
jne r-xdata
call sub_180003250
xor eax eax
mov rax [ rsp + 0x20 ]
mov [ rsp + 0x48 ] rax
mov rax [ rsp + 0x48 ]
mov [ rsp + 0x40 ] rax
cmp [ rsp + 0x40 ] 0x0
je r-xdata
mov [ rsp + 0x58 ] 0x0
mov rax [ rsp + 0x40 ]
mov rax [ rax ]
mov edx 0x1
mov rcx [ rsp + 0x40 ]
call [ rax + 0x28 ]
mov [ rsp + 0x58 ] rax
jmp r-xdata
sub_18000dcb8
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
lea rax [ r--data ]
mov ebx edx
mov rdi rcx
mov [ rcx ] rax
call sub_18000e244
test bl 0x1
je r-xdata
mov rax rdi
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rdi
call j_sub_18000e204
sub_18000dd04
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
lea rax [ r--data ]
mov ebx edx
mov rdi rcx
mov [ rcx ] rax
call sub_18000e468
test bl 0x1
je r-xdata
mov rax rdi
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rdi
call j_sub_18000e204
sub_18000dd64
push rbx
sub rsp 0x40
mov rbx rcx
jmp r-xdata
call sub_18000e648
test rax rax
je r-xdata
mov rcx rbx
call sub_18000e708
test eax eax
je r-xdata
add rsp 0x40
pop rbx
retn
mov eax [ rw-data ]
mov r8d 0x1
lea rbx [ r--data ]
test r8b al
jne r-xdata
mov rcx rbx
lea rdx [ rw-data ]
lea rcx [ rsp + 0x20 ]
call sub_18000e4b4
lea rdx [ r--data ]
lea rcx [ rsp + 0x20 ]
mov [ rsp + 0x20 ] rbx
call sub_18000e73c
int3
or eax r8d
lea rdx [ rsp + 0x58 ]
lea rcx [ rw-data ]
mov [ rw-data ] eax
lea rax [ r--data ]
mov [ rsp + 0x58 ] rax
call sub_18000e370
lea rcx [ sub_18001360c ]
mov [ rw-data ] rbx
call sub_18000e630
sub_18000de08
mov [ rsp + 0x18 ] r8
push rbx
sub rsp 0x20
mov rbx r8
cmp edx 0x1
jne r-xdata
test edx edx
jne r-xdata
call sub_18000fb34
test eax eax
jne r-xdata
cmp edx 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
jle r-xdata
call sub_18000ecdc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
cmp edx 0x3
jne r-xdata
call sub_18000e9dc
mov edx 0x2c8
mov ecx 0x1
call sub_18000ede0
mov rbx rax
test rax rax
je r-xdata
dec eax
mov [ rw-data ] eax
cmp [ rw-data ] edx
jne r-xdata
call sub_18000fac4
call [ GetCommandLineA@IAT ]
mov [ rw-data ] rax
call sub_18000f9d0
mov [ rw-data ] rax
call sub_18000f290
test eax eax
jns r-xdata
call sub_18000fb8c
jmp r-xdata
add rsp 0x20
pop rbx
retn
mov eax 0x1
xor ecx ecx
call sub_18000ec9c
mov rdx rax
mov ecx [ rw-data ]
call [ FlsSetValue@IAT ]
mov rcx rbx
test eax eax
je r-xdata
test rbx rbx
jne r-xdata
call sub_18000f258
call sub_18000f8d8
test eax eax
js r-xdata
call sub_18000e9e0
jmp r-xdata
call sub_18000e204
jmp r-xdata
xor edx edx
call sub_18000ea08
call [ GetCurrentThreadId@IAT ]
mov [ rbx ] eax
or [ rbx + 0x8 ] 0xffffffffffffffff
jmp r-xdata
test rbx rbx
jne r-xdata
call sub_18000f564
call sub_18000e9e0
call sub_18000fb8c
nop
call sub_18000f564
jmp r-xdata
call sub_18000f5d8
test eax eax
js r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
xor ecx ecx
call sub_18000f00c
test eax eax
jne r-xdata
call sub_18000e9e0
jmp r-xdata
inc [ rw-data ]
jmp r-xdata
sub_18000df5c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
mov [ rsp + 0x18 ] rdi
push r12
sub rsp 0x30
mov rsi r8
mov ebx edx
mov r12 rcx
mov eax 0x1
test edx edx
jne r-xdata
cmp edx 0x1
je r-xdata
cmp [ rw-data ] edx
jne r-xdata
mov r9 [ r--data ]
test r9 r9
je r-xdata
cmp edx 0x2
jne r-xdata
xor eax eax
jmp r-xdata
test eax eax
je r-xdata
call r9
mov [ rsp + 0x20 ] eax
mov r8 rsi
mov edx ebx
mov rcx r12
call sub_180003370
mov edi eax
mov [ rsp + 0x20 ] eax
cmp ebx 0x1
jne r-xdata
mov rbx [ rsp + 0x40 ]
mov rsi [ rsp + 0x48 ]
mov rdi [ rsp + 0x50 ]
add rsp 0x30
pop r12
retn
xor eax eax
jmp r-xdata
mov r8 rsi
mov edx ebx
mov rcx r12
call sub_18000de08
mov [ rsp + 0x20 ] eax
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
test eax eax
jne r-xdata
mov r8 rsi
mov edx ebx
mov rcx r12
call sub_18000de08
neg eax
sbb ecx ecx
and ecx edi
mov edi ecx
mov [ rsp + 0x20 ] ecx
je r-xdata
cmp ebx 0x3
jne r-xdata
mov r8 rsi
xor edx edx
mov rcx r12
call sub_180003370
mov r8 rsi
xor edx edx
mov rcx r12
call sub_18000de08
mov r11 [ r--data ]
test r11 r11
je r-xdata
mov eax edi
jmp r-xdata
mov rax [ r--data ]
test rax rax
je r-xdata
mov r8 rsi
xor edx edx
mov rcx r12
call r11
mov r8 rsi
mov edx ebx
mov rcx r12
call rax
mov edi eax
mov [ rsp + 0x20 ] eax
_start
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rdi r8
mov ebx edx
mov rsi rcx
cmp edx 0x1
jne r-xdata
mov r8 rdi
mov edx ebx
mov rcx rsi
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
jmp sub_18000df5c
call sub_18000fd90
sub_18000e0b8
mov [ rsp + 0x8 ] rcx
sub rsp 0x88
lea rcx [ rw-data ]
call [ RtlCaptureContext@IAT ]
mov rax [ rw-data ]
mov [ rsp + 0x58 ] rax
xor r8d r8d
lea rdx [ rsp + 0x60 ]
mov rcx [ rsp + 0x58 ]
call RtlLookupFunctionEntry
mov [ rsp + 0x50 ] rax
cmp [ rsp + 0x50 ] 0x0
je r-xdata
mov rax [ rsp + 0x88 ]
mov [ rw-data ] rax
lea rax [ rsp + 0x88 ]
add rax 0x8
mov [ rw-data ] rax
mov [ rsp + 0x38 ] 0x0
lea rax [ rsp + 0x48 ]
mov [ rsp + 0x30 ] rax
lea rax [ rsp + 0x40 ]
mov [ rsp + 0x28 ] rax
lea rax [ rw-data ]
mov [ rsp + 0x20 ] rax
mov r9 [ rsp + 0x50 ]
mov r8 [ rsp + 0x58 ]
mov rdx [ rsp + 0x60 ]
xor ecx ecx
call RtlVirtualUnwind
jmp r-xdata
call [ GetCurrentProcess@IAT ]
mov edx 0xc0000409
mov rcx rax
call [ TerminateProcess@IAT ]
add rsp 0x88
retn
mov ecx 0x1
call sub_18000fe44
mov rax [ rw-data ]
mov [ rw-data ] rax
mov rax [ rsp + 0x90 ]
mov [ rw-data ] rax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov rax [ rw-data ]
mov [ rsp + 0x68 ] rax
mov rax [ rw-data ]
mov [ rsp + 0x70 ] rax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
mov ecx 0x1
call sub_18000fe44
xor ecx ecx
call [ SetUnhandledExceptionFilter@IAT ]
lea rcx [ r--data ]
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
sub_18000e204
test rcx rcx
je r-xdata
retn
push rbx
sub rsp 0x20
mov r8 rcx
mov rcx [ rw-data ]
xor edx edx
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
add rsp 0x20
pop rbx
call sub_18000fe94
mov rbx rax
call [ GetLastError@IAT ]
mov ecx eax
call sub_18000fe4c
mov [ rbx ] eax
sub_18000e244
push rbx
sub rsp 0x30
mov rbx rcx
mov ecx 0xe
call sub_1800102d8
nop
mov rax [ rbx + 0x8 ]
test rax rax
je r-xdata
mov ecx 0xe
call sub_1800101d8
add rsp 0x30
pop rbx
retn
mov rcx [ rw-data ]
lea rdx [ rw-data ]
mov rcx [ rbx + 0x8 ]
call sub_18000e204
and [ rbx + 0x8 ] 0x0
cmp [ rcx ] rax
jne r-xdata
mov rdx rcx
jmp r-xdata
mov rax [ rcx + 0x8 ]
mov [ rdx + 0x8 ] rax
call sub_18000e204
jmp r-xdata
mov [ rsp + 0x20 ] rcx
test rcx rcx
je r-xdata
sub_18000e2c0
sub rdx rcx
mov r9 rdx
test cl 0x7
je r-xdata
mov r11 0x8101010101010100
mov al [ rcx ]
mov dl [ rcx + r9 ]
cmp al dl
jne r-xdata
mov rax [ rcx ]
mov rdx [ rcx + r9 ]
cmp rax rdx
jne r-xdata
sbb rax rax
sbb rax 0xffffffffffffffff
retn
inc rcx
test al al
je r-xdata
mov r10 0x7efefefefefefeff
add r10 rdx
xor rax 0xffffffffffffffff
add rcx 0x8
xor rax r10
test r11 rax
je r-xdata
xor eax eax
retn
test rcx 0x7
jne r-xdata
lea rdx [ rcx + r9 ]
and dx 0xfff
cmp dx 0xff8
ja r-xdata
jmp r-xdata
nop
test dl dl
je r-xdata
xor eax eax
retn
test dh dh
je r-xdata
shr rdx 0x10
test dl dl
je r-xdata
test dh dh
je r-xdata
shr rdx 0x10
test dl dl
je r-xdata
test dh dh
je r-xdata
shr edx 0x10
test dl dl
je r-xdata
test dh dh
jne r-xdata
sub_18000e3a0
test rdx rdx
je r-xdata
retn
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rdi rcx
mov rcx rdx
mov rbx rdx
call sub_180010390
mov rsi rax
lea rcx [ rax + 0x1 ]
call sub_18000e648
mov [ rdi + 0x8 ] rax
test rax rax
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
lea rdx [ rsi + 0x1 ]
mov r8 rbx
mov rcx rax
call sub_18001031c
mov [ rdi + 0x10 ] 0x1
sub_18000e424
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi rdx
mov rbx rcx
cmp rcx rdx
je r-xdata
mov rax rbx
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
call sub_18000e3fc
cmp [ rdi + 0x10 ] 0x0
je r-xdata
mov rax [ rdi + 0x8 ]
mov [ rbx + 0x8 ] rax
mov rdx [ rdi + 0x8 ]
mov rcx rbx
call sub_18000e3a0
jmp r-xdata
sub_18000e478
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
lea rax [ r--data ]
mov ebx edx
mov rdi rcx
mov [ rcx ] rax
call sub_18000e3fc
test bl 0x1
je r-xdata
mov rax rdi
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rcx rdi
call j_sub_18000e204
sub_18000e4e0
push rbx
sub rsp 0x20
mov edx 0x8
lea ecx [ rdx + 0x18 ]
call sub_18000ede0
mov rcx rax
mov rbx rax
call [ EncodePointer@IAT ]
mov [ rw-data ] rax
mov [ rw-data ] rax
test rbx rbx
jne r-xdata
and [ rbx ] 0x0
xor eax eax
lea eax [ rbx + 0x18 ]
jmp r-xdata
add rsp 0x20
pop rbx
retn
sub_18000e524
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
mov [ rsp + 0x18 ] rdi
push r12
push r13
push r14
sub rsp 0x20
mov r14 rcx
call sub_18000ef40
nop
mov rcx [ rw-data ]
call [ DecodePointer@IAT ]
mov r12 rax
mov rcx [ rw-data ]
call [ DecodePointer@IAT ]
mov rbx rax
cmp rax r12
jb r-xdata
xor ebx ebx
mov rdi rax
sub rdi r12
lea r13 [ rdi + 0x8 ]
cmp r13 0x8
jb r-xdata
mov rcx r12
call sub_1800104b4
mov rsi rax
cmp rax r13
jae r-xdata
mov rcx r14
call [ EncodePointer@IAT ]
mov [ rbx ] rax
lea rcx [ rbx + 0x8 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] rax
mov rbx r14
jmp r-xdata
mov edx 0x1000
cmp rax rdx
cmovb rdx rax
add rdx rax
cmp rdx rax
jb r-xdata
call sub_18000ef4c
mov rax rbx
mov rbx [ rsp + 0x40 ]
mov rsi [ rsp + 0x48 ]
mov rdi [ rsp + 0x50 ]
add rsp 0x20
pop r14
pop r13
pop r12
retn
xor ebx ebx
mov rcx r12
call sub_18000ee64
xor ebx ebx
test rax rax
jne r-xdata
mov rcx r12
call sub_18000ee64
test rax rax
je r-xdata
sar rdi 0x3
lea rbx [ rax + rdi * 8 ]
mov rcx rax
call [ EncodePointer@IAT ]
mov [ rw-data ] rax
jmp r-xdata
lea rdx [ rsi + 0x20 ]
cmp rdx rsi
jb r-xdata
sub_18000e648
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rbx rcx
cmp rcx 0xffffffffffffffe0
ja r-xdata
call sub_18000e708
call sub_18000fe94
mov [ rax ] 0xc
xor eax eax
mov edi 0x1
test rcx rcx
cmovne rdi rcx
mov r8 rdi
xor edx edx
call [ HeapAlloc@IAT ]
mov rsi rax
test rax rax
jne r-xdata
call sub_18001077c
mov ecx 0x1e
call sub_18001051c
mov ecx 0xff
call sub_18000ef28
mov rax rsi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
call sub_18000fe94
mov [ rax ] 0xc
mov rcx rbx
call sub_18000e708
test eax eax
je r-xdata
call sub_18000fe94
mov [ rax ] 0xc
jmp r-xdata
mov rcx [ rw-data ]
test rcx rcx
jne r-xdata
sub_18000e708
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ rw-data ]
call [ DecodePointer@IAT ]
test rax rax
je r-xdata
xor eax eax
mov rcx rbx
call rax
test eax eax
je r-xdata
mov eax 0x1
jmp r-xdata
add rsp 0x20
pop rbx
retn
sub_18000e73c
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rdi
push rbp
mov rbp rsp
sub rsp 0x60
mov rdi rdx
mov rbx rcx
lea rcx [ rbp - 0x40 ]
lea rdx [ r--data ]
mov r8d 0x40
call sub_1800107d0
lea rdx [ rbp + 0x10 ]
mov rcx rdi
mov [ rbp - 0x18 ] rbx
mov [ rbp - 0x10 ] rdi
call RtlPcToFileHeader
mov r11 rax
mov [ rbp + 0x10 ] rax
mov [ rbp - 0x8 ] rax
test rdi rdi
je r-xdata
mov r8d [ rbp - 0x28 ]
mov edx [ rbp - 0x3c ]
mov ecx [ rbp - 0x40 ]
lea r9 [ rbp - 0x20 ]
call [ RaiseException@IAT ]
lea r11 [ rsp + 0x60 ]
mov rbx [ r11 + 0x18 ]
mov rdi [ r11 + 0x20 ]
mov rsp r11
pop rbp
retn
test [ rdi ] 0x8
mov ecx 0x1994000
je r-xdata
mov eax [ rbp - 0x20 ]
test r11 r11
cmove eax ecx
mov [ rbp - 0x20 ] eax
mov [ rbp - 0x20 ] ecx
jmp r-xdata
sub_18000e7d0
mov r11 rsp
mov [ r11 + 0x8 ] rbx
mov [ r11 + 0x18 ] rbp
mov [ r11 + 0x20 ] rsi
mov [ r11 + 0x10 ] rdx
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x40
mov r15 [ r9 + 0x8 ]
mov r14 [ r9 ]
mov eax [ rcx + 0x4 ]
mov rdi [ r9 + 0x38 ]
sub r14 r15
mov r12 r9
mov r13 rdx
mov rbp rcx
test al 0x66
jne r-xdata
mov r8 [ r9 + 0x20 ]
xor ebp ebp
xor r13d r13d
sub r8 r15
test al 0x20
je r-xdata
movsxd rsi [ r9 + 0x48 ]
mov [ r11 - 0x38 ] rcx
mov [ r11 - 0x30 ] r8
mov rax rsi
cmp esi [ rdi ]
jae r-xdata
movsxd rsi [ r9 + 0x48 ]
mov rbx rsi
cmp esi [ rdi ]
jae r-xdata
xor edx edx
cmp [ rdi ] edx
jbe r-xdata
mov eax 0x1
add rax rax
lea rbx [ rdi + rax * 8 + 0xc ]
inc rbx
shl rbx 0x4
add rbx rdi
lea rcx [ rdi + 0x8 ]
inc esi
add rbx 0x10
cmp esi [ rdi ]
jae r-xdata
mov eax [ rbx - 0x4 ]
cmp r14 rax
jae r-xdata
inc esi
add rbx 0x10
cmp esi [ rdi ]
jb r-xdata
mov eax [ rbx - 0x8 ]
cmp r14 rax
jae r-xdata
inc edx
add rcx 0x10
cmp edx [ rdi ]
jae r-xdata
mov eax [ rcx ]
cmp r8 rax
jbe r-xdata
jmp r-xdata
cmp [ rbx + 0x4 ] 0x0
je r-xdata
mov eax [ rbx - 0xc ]
cmp r14 rax
jb r-xdata
test r13d r13d
je r-xdata
jmp r-xdata
mov eax edx
add rax rax
mov ecx [ rdi + rax * 8 + 0x10 ]
test ecx ecx
jne r-xdata
mov eax [ rbx - 0x8 ]
cmp r14 rax
jb r-xdata
cmp [ rbx ] 0x1
je r-xdata
test ebp ebp
je r-xdata
cmp r13d [ rbx ]
je r-xdata
mov eax [ rcx - 0x4 ]
cmp r8 rax
jb r-xdata
mov r13d ecx
mov ebp [ rdi + rax * 8 + 0xc ]
jmp r-xdata
cmp [ rbp ] 0xe06d7363
jne r-xdata
mov eax [ rbx ]
lea rcx [ rsp + 0x30 ]
mov rdx r13
add rax r15
call rax
test eax eax
js r-xdata
cmp [ rbx ] 0x0
jne r-xdata
cmp ebp [ rbx - 0x4 ]
je r-xdata
mov ecx [ rbx + 0x4 ]
mov r8d 0x1
mov rdx r13
add rcx r15
call sub_180010480
mov rax [ r12 + 0x40 ]
mov edx [ rbx + 0x4 ]
movsxd r9 [ rbp ]
mov [ rsp + 0x28 ] rax
mov rax [ r12 + 0x28 ]
add rdx r15
mov r8 rbp
mov rcx r13
mov [ rsp + 0x20 ] rax
call [ RtlUnwindEx@IAT ]
call sub_1800104b0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
jle r-xdata
mov rdx [ rsp + 0x78 ]
lea eax [ rsi + 0x1 ]
mov cl 0x1
mov [ r12 + 0x48 ] eax
mov r8d [ rbx - 0x4 ]
add r8 r15
call r8
lea rcx [ rw-data ]
call sub_180010b90
test eax eax
je r-xdata
lea r11 [ rsp + 0x40 ]
mov rbx [ r11 + 0x30 ]
mov rbp [ r11 + 0x40 ]
mov rsi [ r11 + 0x48 ]
mov rsp r11
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
mov edx 0x1
mov rcx rbp
call [ rw-data ]
sub_18000ea08
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi rdx
mov rbx rcx
lea rax [ r--data ]
mov [ rcx + 0xa0 ] rax
and [ rcx + 0x10 ] 0x0
mov [ rcx + 0x1c ] 0x1
mov [ rcx + 0xc8 ] 0x1
mov [ rcx + 0x174 ] 0x43
mov [ rcx + 0x1f7 ] 0x43
lea rax [ rw-data ]
mov [ rcx + 0xb8 ] rax
mov ecx 0xd
call sub_1800102d8
nop
mov rax [ rbx + 0xb8 ]
[ rax ]
mov ecx 0xd
call sub_1800101d8
mov ecx 0xc
call sub_1800102d8
nop
mov [ rbx + 0xc0 ] rdi
test rdi rdi
jne r-xdata
mov rcx [ rbx + 0xc0 ]
call sub_180010bd4
nop
mov ecx 0xc
call sub_1800101d8
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov rax [ rw-data ]
mov [ rbx + 0xc0 ] rax
sub_18000eac0
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
call [ GetLastError@IAT ]
mov ecx [ rw-data ]
mov edi eax
call [ FlsGetValue@IAT ]
mov rbx rax
test rax rax
jne r-xdata
mov ecx edi
call [ SetLastError@IAT ]
mov rax rbx
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
lea ecx [ rax + 0x1 ]
mov edx 0x2c8
call sub_18000ede0
mov rbx rax
test rax rax
je r-xdata
mov ecx [ rw-data ]
mov rdx rax
call [ FlsSetValue@IAT ]
mov rcx rbx
test eax eax
je r-xdata
call sub_18000e204
xor ebx ebx
xor edx edx
call sub_18000ea08
call [ GetCurrentThreadId@IAT ]
or [ rbx + 0x8 ] 0xffffffffffffffff
mov [ rbx ] eax
jmp r-xdata
sub_18000eb68
test rcx rcx
je r-xdata
retn
mov [ rsp + 0x10 ] rbx
push rdi
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx + 0x38 ]
test rcx rcx
je r-xdata
mov rcx [ rbx + 0x48 ]
test rcx rcx
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x58 ]
test rcx rcx
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x68 ]
test rcx rcx
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x70 ]
test rcx rcx
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x78 ]
test rcx rcx
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x80 ]
test rcx rcx
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0xa0 ]
lea rax [ r--data ]
cmp rcx rax
je r-xdata
call sub_18000e204
mov edi 0xd
mov ecx edi
call sub_1800102d8
nop
mov rcx [ rbx + 0xb8 ]
mov [ rsp + 0x30 ] rcx
test rcx rcx
je r-xdata
call sub_18000e204
mov ecx edi
call sub_1800101d8
mov ecx 0xc
call sub_1800102d8
nop
mov rdi [ rbx + 0xc0 ]
test rdi rdi
je r-xdata
[ rcx ]
jne r-xdata
mov ecx 0xc
call sub_1800101d8
mov rcx rbx
call sub_18000e204
mov rbx [ rsp + 0x38 ]
add rsp 0x20
pop rdi
mov rcx rdi
call sub_180010c60
cmp rdi [ rw-data ]
je r-xdata
lea rax [ rw-data ]
mov rcx [ rsp + 0x30 ]
cmp rcx rax
je r-xdata
lea rax [ rw-data ]
cmp rdi rax
je r-xdata
call sub_18000e204
nop
cmp [ rdi ] 0x0
jne r-xdata
mov rcx rdi
call sub_180010d04
nop
sub_18000ec9c
push rbx
sub rsp 0x20
mov rbx rcx
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
add rsp 0x20
pop rbx
retn
test rbx rbx
jne r-xdata
xor edx edx
call [ FlsSetValue@IAT ]
mov rcx rbx
call sub_18000eb68
call [ FlsGetValue@IAT ]
mov ecx [ rw-data ]
mov rbx rax
sub_18000ecdc
push rbx
sub rsp 0x20
call sub_18000ef58
call sub_1800100cc
test eax eax
je r-xdata
call sub_18000e9e0
xor eax eax
lea rcx [ sub_18000eb68 ]
call [ FlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
mov edx 0x2c8
mov ecx 0x1
call sub_18000ede0
mov rbx rax
test rax rax
je r-xdata
mov ecx [ rw-data ]
mov rdx rax
call [ FlsSetValue@IAT ]
test eax eax
je r-xdata
xor edx edx
mov rcx rbx
call sub_18000ea08
call [ GetCurrentThreadId@IAT ]
or [ rbx + 0x8 ] 0xffffffffffffffff
mov [ rbx ] eax
mov eax 0x1
jmp r-xdata
add rsp 0x20
pop rbx
retn
sub_18000ed60
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
sub rsp 0x20
mov edi [ rw-data ]
xor ebp ebp
mov rsi rcx
or r12d 0xffffffff
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
mov rdi [ rsp + 0x48 ]
mov rax rbx
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop r12
retn
test edi edi
je r-xdata
mov ecx ebp
call [ Sleep@IAT ]
mov edi [ rw-data ]
lea r11d [ rbp + 0x3e8 ]
cmp r11d edi
mov ebp r11d
cmova ebp r12d
cmp ebp r12d
jne r-xdata
mov rcx rsi
call sub_18000e648
mov rbx rax
test rax rax
jne r-xdata
sub_18000ede0
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
sub rsp 0x20
xor edi edi
mov rsi rdx
mov rbp rcx
or r12d 0xffffffff
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
mov rdi [ rsp + 0x48 ]
mov rax rbx
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop r12
retn
cmp [ rw-data ] eax
jbe r-xdata
mov ecx edi
call [ Sleep@IAT ]
lea r11d [ rdi + 0x3e8 ]
cmp r11d [ rw-data ]
mov edi r11d
cmova edi r12d
cmp edi r12d
jne r-xdata
xor r8d r8d
mov rdx rsi
mov rcx rbp
call sub_18001183c
mov rbx rax
test rax rax
jne r-xdata
sub_18000ee64
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
sub rsp 0x20
xor esi esi
mov rdi rdx
mov rbp rcx
or r12d 0xffffffff
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
mov rdi [ rsp + 0x48 ]
mov rax rbx
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop r12
retn
test rdi rdi
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
mov ecx esi
call [ Sleep@IAT ]
lea r11d [ rsi + 0x3e8 ]
cmp r11d [ rw-data ]
mov esi r11d
cmova esi r12d
cmp esi r12d
jne r-xdata
mov rdx rdi
mov rcx rbp
call sub_1800118d8
mov rbx rax
test rax rax
jne r-xdata
sub_18000eeec
push rbx
sub rsp 0x20
mov ebx ecx
lea rcx [ r--data ]
call [ GetModuleHandleW@IAT ]
test rax rax
je r-xdata
add rsp 0x20
pop rbx
retn
lea rdx [ r--data ]
mov rcx rax
call [ GetProcAddress@IAT ]
test rax rax
je r-xdata
mov ecx ebx
call rax
sub_18000ef58
push rbx
sub rsp 0x20
call EncodePointer
mov rcx rax
mov rbx rax
call sub_18000e700
mov rcx rbx
call sub_18000feb4
mov rcx rbx
call sub_180011c5c
mov rcx rbx
call sub_180011c54
mov rcx rbx
call sub_1800119f0
mov rcx rbx
add rsp 0x20
pop rbx
jmp sub_1800119d0
sub_18000ef9c
cmp rcx rdx
jae r-xdata
retn
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rdi rdx
mov rbx rcx
add rbx 0x8
cmp rbx rdi
jb r-xdata
call rax
mov rax [ rbx ]
test rax rax
je r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
sub_18000efd0
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
xor eax eax
mov rdi rdx
mov rbx rcx
cmp rcx rdx
jae r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
test eax eax
jne r-xdata
mov rcx [ rbx ]
test rcx rcx
je r-xdata
add rbx 0x8
cmp rbx rdi
jb r-xdata
call rcx
sub_18000f00c
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
cmp [ rw-data ] 0x0
mov ebx ecx
je r-xdata
call sub_180011c64
lea rdx [ r--data ]
lea rcx [ r--data ]
call sub_18000efd0
test eax eax
jne r-xdata
lea rcx [ rw-data ]
call sub_180010b90
test eax eax
je r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
lea rcx [ sub_18000fafc ]
call sub_18000e630
lea rbx [ r--data ]
lea rdi [ r--data ]
jmp r-xdata
mov ecx ebx
call [ rw-data ]
cmp rbx rdi
jb r-xdata
mov rax [ rbx ]
test rax rax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
add rbx 0x8
call rax
xor eax eax
lea rcx [ rw-data ]
call sub_180010b90
test eax eax
je r-xdata
xor r8d r8d
xor ecx ecx
lea edx [ r8 + 0x2 ]
call [ rw-data ]
sub_18000f0bc
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
mov [ rsp + 0x18 ] r8d
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x40
mov r12d r8d
mov ebx edx
mov r15d ecx
mov ecx 0x8
call sub_1800102d8
nop
cmp [ rw-data ] 0x1
je r-xdata
test r12d r12d
je r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] r12b
test ebx ebx
jne r-xdata
mov [ rw-data ] 0x1
mov ecx 0x8
call sub_1800101d8
mov ecx r15d
call sub_18000eeec
mov ecx r15d
call [ ExitProcess@IAT ]
mov ecx 0x8
call sub_1800101d8
test r12d r12d
jne r-xdata
lea rdx [ r--data ]
lea rcx [ r--data ]
call sub_18000ef9c
nop
mov rcx [ rw-data ]
call [ DecodePointer@IAT ]
mov rsi rax
mov [ rsp + 0x30 ] rax
test rax rax
je r-xdata
mov rbx [ rsp + 0x70 ]
mov rsi [ rsp + 0x78 ]
add rsp 0x40
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
lea rdx [ r--data ]
lea rcx [ r--data ]
call sub_18000ef9c
mov rcx [ rw-data ]
call [ DecodePointer@IAT ]
mov rdi rax
mov [ rsp + 0x20 ] rax
mov r14 rsi
mov [ rsp + 0x28 ] rsi
mov r13 rax
mov [ rsp + 0x38 ] rax
call EncodePointer
cmp [ rdi ] rax
jne r-xdata
cmp rdi rsi
jb r-xdata
jmp r-xdata
mov rcx [ rdi ]
call [ DecodePointer@IAT ]
mov rbx rax
call EncodePointer
mov [ rdi ] rax
call rbx
mov rcx [ rw-data ]
call [ DecodePointer@IAT ]
mov rbx rax
mov rcx [ rw-data ]
call [ DecodePointer@IAT ]
cmp r14 rbx
jne r-xdata
sub rdi 0x8
mov [ rsp + 0x20 ] rdi
cmp rdi rsi
jb r-xdata
mov r14 rbx
mov [ rsp + 0x28 ] rbx
mov rsi rbx
mov [ rsp + 0x30 ] rbx
mov r13 rax
mov [ rsp + 0x38 ] rax
mov rdi rax
mov [ rsp + 0x20 ] rax
jmp r-xdata
cmp r13 rax
je r-xdata
sub_18000f290
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rdi
push r12
push r13
push r14
sub rsp 0x90
lea rcx [ rsp + 0x20 ]
call [ GetStartupInfoW@IAT ]
mov edx 0x58
lea ebp [ rdx - 0x38 ]
mov ecx ebp
call sub_18000ede0
xor r14d r14d
mov rdx rax
test rax rax
jne r-xdata
mov [ rw-data ] rax
add rax 0xb00
mov ecx ebp
mov [ rw-data ] ecx
cmp rdx rax
jae r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ rsp + 0x62 ] r14w
je r-xdata
add rdx 0x9
lea r11 [ rsp + 0x90 ]
mov rbx [ r11 + 0x20 ]
mov rbp [ r11 + 0x28 ]
mov rdi [ r11 + 0x30 ]
mov rsp r11
pop r14
pop r13
pop r12
retn
mov r12d r14d
mov rbx r14
mov rax [ rsp + 0x68 ]
test rax rax
je r-xdata
or [ rdx - 0x9 ] 0xffffffffffffffff
mov [ rdx - 0x1 ] 0xa00
mov [ rdx + 0x3 ] r14d
mov [ rdx + 0x2f ] 0xa00
mov [ rdx + 0x31 ] 0xa
mov [ rdx + 0x47 ] r14d
mov [ rdx + 0x43 ] r14b
mov rax [ rw-data ]
add rdx 0x58
lea rcx [ rdx - 0x9 ]
add rax 0xb00
cmp rcx rax
jb r-xdata
mov ecx [ rw-data ]
lea eax [ r12 - 0x1 ]
mov [ rbx + rdi + 0x8 ] 0x81
neg eax
mov eax 0xfffffff6
sbb ecx ecx
add ecx 0xfffffff5
test r12d r12d
cmove ecx eax
call [ GetStdHandle@IAT ]
mov rbp rax
cmp rax 0xffffffffffffffff
je r-xdata
cmp [ rbx + rdi ] 0xfffffffffffffffe
je r-xdata
movsxd r12 [ rax ]
mov ebx 0x800
lea r13 [ rax + 0x4 ]
add r12 r13
cmp [ rax ] ebx
cmovl ebx [ rax ]
cmp ecx ebx
jge r-xdata
or [ rbx + rdi + 0x8 ] 0x40
mov [ rbx + rdi ] 0xfffffffffffffffe
test rax rax
je r-xdata
or [ rbx + rdi + 0x8 ] 0x80
jmp r-xdata
mov edi r14d
test ebx ebx
jle r-xdata
lea rdi [ rw-data ]
mov rdi [ rw-data ]
cmp [ rbx + rdi ] 0xffffffffffffffff
je r-xdata
mov ecx [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
mov rcx rax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
add rbx 0x58
inc r12d
cmp rbx 0x108
jl r-xdata
cmp [ r12 ] 0xffffffffffffffff
je r-xdata
mov ebx [ rw-data ]
mov edx [ rw-data ]
lea rcx [ rax + 0xb00 ]
mov [ rdi ] rax
add edx ebp
mov [ rw-data ] edx
cmp rax rcx
jae r-xdata
movzx eax al
mov [ rbx + rdi ] rbp
cmp eax 0x2
jne r-xdata
inc edi
inc r13
add r12 0x8
cmp edi ebx
jl r-xdata
cmp [ r12 ] 0xfffffffffffffffe
je r-xdata
add rdi 0x8
cmp edx ebx
jl r-xdata
lea rdx [ rax + 0x9 ]
cmp eax 0x3
jne r-xdata
or [ rbx + rdi + 0x8 ] 0x40
jmp r-xdata
test [ r13 ] 0x1
je r-xdata
mov edx 0x58
mov rcx rbp
call sub_18000ede0
test rax rax
je r-xdata
jmp r-xdata
or [ rdx - 0x9 ] 0xffffffffffffffff
and [ rdx + 0x2f ] 0x80
mov [ rdx - 0x1 ] 0xa00
mov [ rdx + 0x3 ] r14d
mov [ rdx + 0x30 ] 0xa0a
mov [ rdx + 0x47 ] r14d
mov [ rdx + 0x43 ] r14b
mov rax [ rdi ]
add rdx 0x58
lea rcx [ rdx - 0x9 ]
add rax 0xb00
cmp rcx rax
jb r-xdata
mov edx [ rw-data ]
lea rcx [ rbx + rdi + 0x10 ]
mov edx 0xfa0
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ rbx + rdi + 0x8 ] 0x8
test [ r13 ] 0x8
jne r-xdata
inc [ rbx + rdi + 0xc ]
jmp r-xdata
movsxd rbp edi
lea rcx [ rw-data ]
mov edx 0xfa0
mov rax rbp
and ebp 0x1f
sar rax 0x5
imul rbp rbp 0x58
add rbp [ rcx + rax * 8 ]
mov rax [ r12 ]
mov [ rbp ] rax
mov al [ r13 ]
lea rcx [ rbp + 0x10 ]
mov [ rbp + 0x8 ] al
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
mov rcx [ r12 ]
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ rbp + 0xc ]
sub_18000f564
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
lea rbx [ rw-data ]
mov esi 0x40
add rbx 0x8
dec rsi
jne r-xdata
lea rax [ rdi + 0xb00 ]
jmp r-xdata
mov rdi [ rbx ]
test rdi rdi
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
cmp rdi rax
jb r-xdata
cmp [ rdi + 0xc ] 0x0
je r-xdata
mov rcx [ rbx ]
call sub_18000e204
and [ rbx ] 0x0
mov rax [ rbx ]
add rdi 0x58
add rax 0xb00
lea rcx [ rdi + 0x10 ]
call [ DeleteCriticalSection@IAT ]
sub_18000f5d8
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x30
cmp [ rw-data ] 0x0
jne r-xdata
mov rbx [ rw-data ]
xor edi edi
test rbx rbx
jne r-xdata
call sub_180011814
mov al [ rbx ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
lea eax [ rdi + 0x1 ]
mov edx 0x8
movsxd rcx eax
call sub_18000ede0
mov rdi rax
mov [ rw-data ] rax
test rax rax
je r-xdata
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
add rsp 0x30
pop rdi
retn
mov rcx rbx
call sub_180010390
lea rbx [ rbx + rax + 0x1 ]
inc edi
mov rbx [ rw-data ]
cmp [ rbx ] 0x0
je r-xdata
mov rcx rbx
call sub_18000e204
and [ rw-data ] 0x0
and [ rdi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
mov rcx rbx
call sub_180010390
cmp [ rbx ] 0x3d
lea esi [ rax + 0x1 ]
je r-xdata
movsxd rax esi
add rbx rax
cmp [ rbx ] 0x0
jne r-xdata
movsxd rbp esi
mov edx 0x1
mov rcx rbp
call sub_18000ede0
mov [ rdi ] rax
test rax rax
je r-xdata
mov rbx [ rw-data ]
mov rcx [ rw-data ]
call sub_18000e204
and [ rw-data ] 0x0
jmp r-xdata
mov r8 rbx
mov rdx rbp
mov rcx rax
call sub_18001031c
test eax eax
jne r-xdata
and [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
xor edx edx
xor ecx ecx
call sub_180010008
int3
add rdi 0x8
sub_18000f708
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
push r13
push r14
sub rsp 0x20
mov r13 [ rsp + 0x60 ]
mov r14 r9
mov rdi r8
and [ r13 ] 0x0
mov r12 rdx
mov rbx rcx
mov [ r9 ] 0x1
test rdx rdx
je r-xdata
xor ebp ebp
mov [ rdx ] r8
add r12 0x8
inc [ r13 ]
test rdi rdi
je r-xdata
xor eax eax
test ebp ebp
mov sil 0x22
sete al
inc rbx
mov ebp eax
jmp r-xdata
movzx esi [ rbx ]
inc rbx
mov ecx esi
call sub_180011d18
test eax eax
je r-xdata
mov al [ rbx ]
mov [ rdi ] al
inc rdi
test ebp ebp
jne r-xdata
test sil sil
je r-xdata
inc [ r13 ]
test rdi rdi
je r-xdata
cmp [ rbx ] 0x22
jne r-xdata
cmp sil 0x20
je r-xdata
dec rbx
inc rbx
mov al [ rbx ]
mov [ rdi ] al
inc rdi
test rdi rdi
je r-xdata
cmp sil 0x9
jne r-xdata
test r12 r12
je r-xdata
cmp [ rbx ] 0x20
je r-xdata
xor esi esi
mov [ rdi - 0x1 ] 0x0
jmp r-xdata
inc [ r14 ]
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
mov rdi [ rsp + 0x58 ]
add rsp 0x20
pop r14
pop r13
pop r12
retn
and [ r12 ] 0x0
inc rbx
jmp r-xdata
cmp [ rbx ] 0x9
jne r-xdata
cmp [ rbx ] 0x0
je r-xdata
test r12 r12
je r-xdata
inc [ r14 ]
mov [ r12 ] rdi
add r12 0x8
cmp [ rbx ] 0x5c
je r-xdata
inc rbx
inc ecx
cmp [ rbx ] 0x22
jne r-xdata
test ecx ecx
jne r-xdata
test dl cl
jne r-xdata
dec ecx
test rdi rdi
je r-xdata
mov al [ rbx ]
test al al
je r-xdata
shr ecx 0x1
jmp r-xdata
test esi esi
je r-xdata
inc [ r13 ]
mov [ rdi ] 0x5c
inc rdi
test rdi rdi
je r-xdata
test esi esi
jne r-xdata
xor eax eax
xor edx edx
test esi esi
sete al
mov esi eax
lea rax [ rbx + 0x1 ]
cmp [ rax ] 0x22
jne r-xdata
inc [ r13 ]
jmp r-xdata
mov [ rdi ] 0x0
inc rdi
test edx edx
je r-xdata
cmp al 0x20
je r-xdata
mov rbx rax
jmp r-xdata
cmp [ rbx ] 0x0
je r-xdata
inc rbx
jmp r-xdata
movsx ecx al
call sub_180011d18
test rdi rdi
je r-xdata
cmp al 0x9
je r-xdata
mov edx 0x1
xor ecx ecx
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
inc [ r13 ]
inc rbx
inc [ r13 ]
mov al [ rbx ]
mov [ rdi ] al
inc rdi
jmp r-xdata
mov al [ rbx ]
inc rbx
mov [ rdi ] al
inc rdi
inc [ r13 ]
sub_18000f8d8
mov [ rsp + 0x18 ] rbx
mov [ rsp + 0x20 ] rsi
push rdi
sub rsp 0x30
cmp [ rw-data ] 0x0
jne r-xdata
lea rdi [ rw-data ]
mov r8d 0x104
xor ecx ecx
mov rdx rdi
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
mov rbx [ rw-data ]
mov [ rw-data ] rdi
test rbx rbx
je r-xdata
call sub_180011814
mov rbx rdi
cmp [ rbx ] 0x0
jne r-xdata
or eax 0xffffffff
movsxd rcx [ rsp + 0x48 ]
cmp rcx 0xffffffffffffffff
jae r-xdata
lea rax [ rsp + 0x48 ]
lea r9 [ rsp + 0x40 ]
xor r8d r8d
xor edx edx
mov rcx rbx
mov [ rsp + 0x20 ] rax
call sub_18000f708
movsxd rsi [ rsp + 0x40 ]
mov rcx 0x1fffffffffffffff
cmp rsi rcx
jae r-xdata
lea rdx [ rcx + rsi * 8 ]
cmp rdx rcx
jb r-xdata
mov rcx rdx
call sub_18000ed60
mov rdi rax
test rax rax
je r-xdata
lea r8 [ rax + rsi * 8 ]
lea rax [ rsp + 0x48 ]
lea r9 [ rsp + 0x40 ]
mov rdx rdi
mov rcx rbx
mov [ rsp + 0x20 ] rax
call sub_18000f708
mov r11d [ rsp + 0x40 ]
mov [ rw-data ] rdi
dec r11d
xor eax eax
mov [ rw-data ] r11d
jmp r-xdata
mov rbx [ rsp + 0x50 ]
mov rsi [ rsp + 0x58 ]
add rsp 0x30
pop rdi
retn
sub_18000f9d0
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
sub rsp 0x40
call [ GetEnvironmentStringsW@IAT ]
xor r12d r12d
mov rdi rax
test rax rax
je r-xdata
xor eax eax
mov rbx rax
cmp [ rax ] r12w
je r-xdata
mov [ rsp + 0x38 ] r12
sub rbx rax
mov [ rsp + 0x30 ] r12
sar rbx 0x1
mov r8 rax
xor edx edx
lea r9d [ rbx + 0x1 ]
xor ecx ecx
mov [ rsp + 0x28 ] r12d
mov [ rsp + 0x20 ] r12
call [ WideCharToMultiByte@IAT ]
movsxd rbp eax
test eax eax
je r-xdata
add rbx 0x2
cmp [ rbx ] r12w
jne r-xdata
mov rcx rdi
call [ FreeEnvironmentStringsW@IAT ]
mov rcx rbp
call sub_18000ed60
mov rsi rax
test rax rax
je r-xdata
add rbx 0x2
cmp [ rbx ] r12w
jne r-xdata
mov [ rsp + 0x38 ] r12
mov [ rsp + 0x30 ] r12
lea r9d [ rbx + 0x1 ]
mov r8 rdi
xor edx edx
xor ecx ecx
mov [ rsp + 0x28 ] ebp
mov [ rsp + 0x20 ] rax
call [ WideCharToMultiByte@IAT ]
test eax eax
jne r-xdata
mov rcx rdi
call [ FreeEnvironmentStringsW@IAT ]
mov rax rsi
jmp r-xdata
mov rcx rsi
call sub_18000e204
mov rsi r12
mov rbx [ rsp + 0x50 ]
mov rbp [ rsp + 0x58 ]
mov rsi [ rsp + 0x60 ]
mov rdi [ rsp + 0x68 ]
add rsp 0x40
pop r12
retn
sub_18000fac4
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
lea rbx [ r--data ]
lea rdi [ r--data ]
jmp r-xdata
cmp rbx rdi
jb r-xdata
mov rax [ rbx ]
test rax rax
je r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
add rbx 0x8
call rax
sub_18000fafc
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
lea rbx [ r--data ]
lea rdi [ r--data ]
jmp r-xdata
cmp rbx rdi
jb r-xdata
mov rax [ rbx ]
test rax rax
je r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
add rbx 0x8
call rax
sub_18000fb34
sub rsp 0x28
xor r8d r8d
mov edx 0x1000
xor ecx ecx
mov [ rsp + 0x30 ] 0x2
call [ HeapCreate@IAT ]
mov [ rw-data ] rax
test rax rax
je r-xdata
add rsp 0x28
retn
call [ GetVersion@IAT ]
cmp al 0x6
jae r-xdata
mov eax 0x1
mov rcx [ rw-data ]
lea r8 [ rsp + 0x30 ]
mov r9d 0x4
xor edx edx
call [ HeapSetInformation@IAT ]
sub_18000fbac
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
mov rsi rdx
mov edi ecx
call sub_18000eac0
xor r9d r9d
mov rbx rax
test rax rax
je r-xdata
xor eax eax
mov rdx [ rax + 0xa0 ]
mov rcx rdx
lea rax [ rdx + 0xc0 ]
cmp rcx rax
jae r-xdata
lea rax [ rdx + 0xc0 ]
add rcx 0x10
cmp rcx rax
jb r-xdata
mov rcx r9
cmp [ rcx ] edi
je r-xdata
cmp [ rcx ] edi
je r-xdata
mov r8 [ rcx + 0x8 ]
test r8 r8
je r-xdata
test rcx rcx
je r-xdata
cmp r8 0x5
jne r-xdata
cmp r8 0x1
jne r-xdata
mov [ rcx + 0x8 ] r9
lea eax [ r8 - 0x4 ]
jmp r-xdata
mov rbp [ rbx + 0xa8 ]
mov [ rbx + 0xa8 ] rsi
cmp [ rcx + 0x4 ] 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
add rsp 0x20
pop rdi
retn
mov [ rcx + 0x8 ] r9
mov ecx [ rcx + 0x4 ]
call r8
mov edx 0x30
mov rax [ rbx + 0xa0 ]
add rdx 0x10
mov [ rdx + rax - 0x8 ] r9
cmp rdx 0xc0
jl r-xdata
cmp [ rcx ] 0xc000008e
mov edi [ rbx + 0xb0 ]
jne r-xdata
cmp [ rcx ] 0xc0000090
jne r-xdata
mov [ rbx + 0xb0 ] 0x83
jmp r-xdata
cmp [ rcx ] 0xc0000091
jne r-xdata
mov [ rbx + 0xb0 ] 0x81
jmp r-xdata
mov edx [ rbx + 0xb0 ]
mov ecx 0x8
call r8
mov [ rbx + 0xb0 ] edi
jmp r-xdata
cmp [ rcx ] 0xc0000093
jne r-xdata
mov [ rbx + 0xb0 ] 0x84
jmp r-xdata
mov [ rbx + 0xa8 ] rbp
jmp r-xdata
cmp [ rcx ] 0xc000008d
jne r-xdata
mov [ rbx + 0xb0 ] 0x85
jmp r-xdata
cmp [ rcx ] 0xc000008f
jne r-xdata
mov [ rbx + 0xb0 ] 0x82
jmp r-xdata
cmp [ rcx ] 0xc0000092
jne r-xdata
mov [ rbx + 0xb0 ] 0x86
jmp r-xdata
cmp [ rcx ] 0xc00002b5
jne r-xdata
mov [ rbx + 0xb0 ] 0x8a
jmp r-xdata
cmp [ rcx ] 0xc00002b4
mov eax edi
mov edx 0x8e
cmove eax edx
mov [ rbx + 0xb0 ] eax
mov [ rbx + 0xb0 ] 0x8d
jmp r-xdata
sub_18000fd90
mov [ rsp + 0x18 ] rbx
push rdi
sub rsp 0x20
mov rax [ rw-data ]
and [ rsp + 0x30 ] 0x0
mov rdi 0x2b992ddfa232
cmp rax rdi
je r-xdata
lea rcx [ rsp + 0x30 ]
call [ GetSystemTimeAsFileTime@IAT ]
mov rbx [ rsp + 0x30 ]
call [ GetCurrentProcessId@IAT ]
mov r11d eax
xor rbx r11
call [ GetCurrentThreadId@IAT ]
mov r11d eax
xor rbx r11
call [ GetTickCount@IAT ]
lea rcx [ rsp + 0x38 ]
mov r11d eax
xor rbx r11
call [ QueryPerformanceCounter@IAT ]
mov r11 [ rsp + 0x38 ]
xor r11 rbx
mov rax 0xffffffffffff
and r11 rax
mov rax 0x2b992ddfa233
cmp r11 rdi
cmove r11 rax
mov [ rw-data ] r11
not r11
mov [ rw-data ] r11
not rax
mov [ rw-data ] rax
jmp r-xdata
mov rbx [ rsp + 0x40 ]
add rsp 0x20
pop rdi
retn
sub_18000fe4c
lea r9 [ rw-data ]
xor eax eax
mov rdx r9
lea r8d [ rax + 0x8 ]
cdqe
mov eax [ r9 + rax * 8 + 0x4 ]
retn
inc eax
add rdx r8
cmp eax 0x2d
jb r-xdata
cmp ecx [ rdx ]
je r-xdata
lea eax [ rcx - 0x13 ]
cmp eax 0x11
ja r-xdata
add ecx 0xffffff44
mov eax 0x16
cmp ecx 0xe
cmovbe eax r8d
retn
mov eax 0xd
retn
sub_18000febc
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rsi
push rbp
push rdi
push r12
lea rbp [ rsp - 0x4f0 ]
sub rsp 0x5f0
mov rax [ rw-data ]
xor rax rsp
mov [ rbp + 0x4e0 ] rax
mov edi r8d
mov esi edx
mov ebx ecx
cmp ecx 0xffffffff
je r-xdata
and [ rsp + 0x70 ] 0x0
lea rcx [ rsp + 0x74 ]
xor edx edx
mov r8d 0x94
call sub_180011dc0
lea r11 [ rsp + 0x70 ]
lea rax [ rbp + 0x10 ]
lea rcx [ rbp + 0x10 ]
mov [ rsp + 0x48 ] r11
mov [ rsp + 0x50 ] rax
call [ RtlCaptureContext@IAT ]
mov r12 [ rbp + 0x108 ]
lea rdx [ rsp + 0x40 ]
mov rcx r12
xor r8d r8d
call RtlLookupFunctionEntry
test rax rax
je r-xdata
call sub_18000fe44
mov rax [ rbp + 0x508 ]
mov [ rbp + 0x108 ] rax
lea rax [ rbp + 0x508 ]
mov [ rbp + 0xa8 ] rax
and [ rsp + 0x38 ] 0x0
mov rdx [ rsp + 0x40 ]
lea rcx [ rsp + 0x60 ]
mov [ rsp + 0x30 ] rcx
lea rcx [ rsp + 0x58 ]
mov r9 rax
mov [ rsp + 0x28 ] rcx
lea rcx [ rbp + 0x10 ]
mov r8 r12
mov [ rsp + 0x20 ] rcx
xor ecx ecx
call RtlVirtualUnwind
jmp r-xdata
mov rcx [ rbp + 0x4e0 ]
xor rcx rsp
call sub_18000dc90
lea r11 [ rsp + 0x5f0 ]
mov rbx [ r11 + 0x28 ]
mov rsi [ r11 + 0x30 ]
mov rsp r11
pop r12
pop rdi
pop rbp
retn
test edi edi
jne r-xdata
mov rax [ rbp + 0x508 ]
mov [ rsp + 0x70 ] esi
mov [ rsp + 0x74 ] edi
mov [ rbp - 0x80 ] rax
call [ IsDebuggerPresent@IAT ]
xor ecx ecx
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea rcx [ rsp + 0x48 ]
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
mov ecx ebx
call sub_18000fe44
sub_18001003c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x30
mov rbp rcx
mov rcx [ rw-data ]
mov ebx r9d
mov rdi r8
mov rsi rdx
call [ DecodePointer@IAT ]
mov r9d ebx
mov r8 rdi
mov rdx rsi
mov rcx rbp
test rax rax
je r-xdata
mov rax [ rsp + 0x60 ]
mov [ rsp + 0x20 ] rax
call sub_180010008
int3
mov r10 [ rsp + 0x60 ]
mov [ rsp + 0x20 ] r10
call rax
mov rbx [ rsp + 0x40 ]
mov rbp [ rsp + 0x48 ]
mov rsi [ rsp + 0x50 ]
add rsp 0x30
pop rdi
retn
sub_1800100cc
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
mov [ rsp + 0x18 ] rdi
push r12
sub rsp 0x20
lea r12 [ rw-data ]
xor esi esi
xor ebx ebx
mov rdi r12
inc ebx
add rdi 0x10
cmp ebx 0x24
jl r-xdata
movsxd rax esi
mov edx 0xfa0
inc esi
lea rcx [ rax + rax * 4 ]
lea rax [ rw-data ]
lea rcx [ rax + rcx * 8 ]
mov [ rdi ] rcx
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ rdi + 0x8 ] 0x1
jne r-xdata
mov eax 0x1
movsxd rax ebx
add rax rax
and [ r12 + rax * 8 ] 0x0
xor eax eax
jmp r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
mov rdi [ rsp + 0x40 ]
add rsp 0x20
pop r12
retn
sub_180010150
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
mov edi 0x24
lea rbx [ rw-data ]
mov esi edi
add rbx 0x10
dec rsi
jne r-xdata
cmp [ rbx + 0x8 ] 0x1
je r-xdata
mov rbp [ rbx ]
test rbp rbp
je r-xdata
lea rbx [ rw-data ]
mov rcx rbp
call [ DeleteCriticalSection@IAT ]
mov rcx rbp
call sub_18000e204
and [ rbx ] 0x0
add rbx 0x10
dec rdi
jne r-xdata
cmp [ rbx ] 0x1
jne r-xdata
mov rcx [ rbx - 0x8 ]
test rcx rcx
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
add rsp 0x20
pop rdi
retn
call [ DeleteCriticalSection@IAT ]
sub_1800101f0
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
mov [ rsp + 0x18 ] rdi
push r13
sub rsp 0x20
movsxd rbx ecx
mov esi 0x1
cmp [ rw-data ] 0x0
jne r-xdata
mov rdi rbx
add rdi rdi
lea r13 [ rw-data ]
cmp [ r13 + rdi * 8 ] 0x0
je r-xdata
call sub_18001077c
lea ecx [ rsi + 0x1d ]
call sub_18001051c
mov ecx 0xff
call sub_18000ef28
mov ecx 0x28
call sub_18000ed60
mov rbx rax
test rax rax
jne r-xdata
mov eax esi
jmp r-xdata
mov ecx 0xa
call sub_1800102d8
nop
mov rcx rbx
cmp [ r13 + rdi * 8 ] 0x0
jne r-xdata
call sub_18000fe94
mov [ rax ] 0xc
xor eax eax
jmp r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
mov rdi [ rsp + 0x40 ]
add rsp 0x20
pop r13
retn
call sub_18000e204
nop
mov edx 0xfa0
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ r13 + rdi * 8 ] rbx
jmp r-xdata
mov rcx rbx
call sub_18000e204
call sub_18000fe94
mov [ rax ] 0xc
xor esi esi
jmp r-xdata
mov rcx [ rw-data ]
call [ LeaveCriticalSection@IAT ]
jmp r-xdata
sub_1800102d8
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
movsxd rbx ecx
lea rdi [ rw-data ]
add rbx rbx
cmp [ rdi + rbx * 8 ] 0x0
jne r-xdata
mov rcx [ rdi + rbx * 8 ]
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
jmp [ EnterCriticalSection@IAT ]
call sub_1800101f0
test eax eax
jne r-xdata
lea ecx [ rax + 0x11 ]
call sub_18000f268
sub_18001031c
push rbx
sub rsp 0x20
test rcx rcx
je r-xdata
call sub_18000fe94
mov ebx 0x16
test rdx rdx
je r-xdata
test r8 r8
jne r-xdata
mov r9 rcx
sub r9 r8
mov [ rcx ] r8b
test rdx rdx
jne r-xdata
dec rdx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rcx ] dl
call sub_18000fe94
mov ebx 0x22
jmp r-xdata
mov al [ r8 ]
mov [ r9 + r8 ] al
inc r8
test al al
je r-xdata
add rsp 0x20
pop rbx
retn
mov [ rax ] ebx
call sub_1800100ac
mov eax ebx
sub_180010390
mov rax rcx
neg rcx
test rax 0x7
je r-xdata
mov r8 0x7efefefefefefeff
mov r11 0x8101010101010100
nop
mov rdx [ rax ]
mov r9 r8
add rax 0x8
add r9 rdx
not rdx
xor rdx r9
and rdx r11
je r-xdata
mov rdx [ rax - 0x8 ]
test dl dl
je r-xdata
lea rax [ rcx + rax - 0x1 ]
retn
test al 0x7
jne r-xdata
lea rax [ rcx + rax - 0x8 ]
retn
test dh dh
je r-xdata
mov dl [ rax ]
inc rax
test dl dl
je r-xdata
lea rax [ rcx + rax - 0x7 ]
retn
shr rdx 0x10
test dl dl
je r-xdata
lea rax [ rcx + rax - 0x6 ]
retn
test dh dh
je r-xdata
lea rax [ rcx + rax - 0x5 ]
retn
shr rdx 0x10
test dl dl
je r-xdata
lea rax [ rcx + rax - 0x4 ]
retn
test dh dh
je r-xdata
lea rax [ rcx + rax - 0x3 ]
retn
shr edx 0x10
test dl dl
je r-xdata
lea rax [ rcx + rax - 0x2 ]
retn
test dh dh
jne r-xdata
sub_1800104b4
sub rsp 0x28
test rcx rcx
jne r-xdata
mov r8 rcx
mov rcx [ rw-data ]
xor edx edx
add rsp 0x28
jmp [ HeapSize@IAT ]
call sub_18000fe94
mov [ rax ] 0x16
call sub_1800100ac
or rax 0xffffffffffffffff
add rsp 0x28
retn
sub_1800104f0
lea r8 [ r--data ]
xor eax eax
mov rdx r8
cdqe
add rax rax
mov rax [ r8 + rax * 8 + 0x8 ]
retn
inc eax
add rdx 0x10
cmp eax 0x16
jb r-xdata
cmp ecx [ rdx ]
je r-xdata
xor eax eax
retn
sub_18001051c
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rbp
mov [ rsp + 0x20 ] rsi
push rdi
push r12
push r13
sub rsp 0x250
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x240 ] rax
mov edi ecx
call sub_1800104f0
xor esi esi
mov rbx rax
test rax rax
je r-xdata
mov rcx [ rsp + 0x240 ]
xor rcx rsp
call sub_18000dc90
lea r11 [ rsp + 0x250 ]
mov rbx [ r11 + 0x28 ]
mov rbp [ r11 + 0x30 ]
mov rsi [ r11 + 0x38 ]
mov rsp r11
pop r13
pop r12
pop rdi
retn
lea ecx [ rsi + 0x3 ]
call sub_180012294
cmp eax 0x1
je r-xdata
mov ecx 0xfffffff4
call [ GetStdHandle@IAT ]
mov rdi rax
test rax rax
je r-xdata
lea ecx [ rsi + 0x3 ]
call sub_180012294
test eax eax
jne r-xdata
cmp rax 0xffffffffffffffff
je r-xdata
cmp edi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
mov edx esi
lea r8 [ rsp + 0x40 ]
lea rbp [ rw-data ]
mov r12d 0x314
lea r8 [ r--data ]
mov rcx rbp
mov edx r12d
call sub_180012228
xor ecx ecx
test eax eax
jne r-xdata
lea rcx [ rsp + 0x40 ]
mov [ rsp + 0x233 ] sil
call sub_180010390
lea r9 [ rsp + 0x30 ]
lea rdx [ rsp + 0x40 ]
mov rcx rdi
mov r8 rax
mov [ rsp + 0x20 ] rsi
call [ WriteFile@IAT ]
inc edx
inc r8
add rbx 0x2
cmp edx 0x1f4
jb r-xdata
xor r9d r9d
xor r8d r8d
xor edx edx
mov [ rsp + 0x20 ] rsi
call sub_180010008
int3
lea r13 [ rw-data ]
mov r8d 0x104
mov [ rw-data ] si
mov rdx r13
call [ GetModuleFileNameW@IAT ]
lea edi [ r12 - 0x19 ]
test eax eax
jne r-xdata
mov cl [ rbx ]
mov [ r8 ] cl
cmp [ rbx ] si
je r-xdata
mov rcx r13
call sub_18001220c
inc rax
cmp rax 0x3c
jbe r-xdata
lea r8 [ r--data ]
mov edx edi
mov rcx r13
call sub_180012228
test eax eax
je r-xdata
lea r8 [ r--data ]
mov rdx r12
mov rcx rbp
call sub_1800120b4
test eax eax
jne r-xdata
mov rcx r13
call sub_18001220c
lea r8 [ r--data ]
mov r9d 0x3
lea rcx [ rbp + rax * 2 - 0x44 ]
mov rax rcx
sub rax r13
sar rax 0x1
sub rdi rax
mov rdx rdi
call sub_18001213c
test eax eax
je r-xdata
xor r9d r9d
xor r8d r8d
xor edx edx
xor ecx ecx
mov [ rsp + 0x20 ] rsi
call sub_180010008
int3
xor r9d r9d
xor r8d r8d
xor edx edx
xor ecx ecx
mov [ rsp + 0x20 ] rsi
call sub_180010008
int3
mov r8 rbx
mov rdx r12
mov rcx rbp
call sub_1800120b4
test eax eax
jne r-xdata
xor r9d r9d
xor r8d r8d
xor edx edx
xor ecx ecx
mov [ rsp + 0x20 ] rsi
call sub_180010008
int3
xor r9d r9d
xor r8d r8d
xor edx edx
xor ecx ecx
mov [ rsp + 0x20 ] rsi
call sub_180010008
int3
lea rdx [ r--data ]
mov r8d 0x12010
mov rcx rbp
call sub_180011eac
jmp r-xdata
sub_18001077c
sub rsp 0x28
mov ecx 0x3
call sub_180012294
cmp eax 0x1
je r-xdata
mov ecx 0xfc
call sub_18001051c
mov ecx 0xff
call sub_18001051c
mov ecx 0x3
call sub_180012294
test eax eax
jne r-xdata
add rsp 0x28
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_1800107d0
mov r11 rcx
sub rdx rcx
jb r-xdata
add rcx r8
cmp r8 0x8
jb r-xdata
cmp r8 0x8
jb r-xdata
test r8 r8
jne r-xdata
test cl 0x7
je r-xdata
test r8 r8
jne r-xdata
test cl 0x7
je r-xdata
dec rcx
mov al [ rdx + rcx ]
dec r8
mov [ rcx ] al
jne r-xdata
mov rax r11
retn
mov r9 r8
shr r9 0x5
jne r-xdata
test cl 0x1
je r-xdata
mov al [ rdx + rcx ]
mov [ rcx ] al
inc rcx
dec r8
jne r-xdata
mov rax r11
retn
mov r9 r8
shr r9 0x5
jne r-xdata
test cl 0x1
je r-xdata
mov rax r11
retn
cmp r9 0x2000
jae r-xdata
mov r9 r8
shr r9 0x3
je r-xdata
test cl 0x2
je r-xdata
dec rcx
mov al [ rdx + rcx ]
dec r8
mov [ rcx ] al
mov rax r11
retn
cmp r9 0x2000
jae r-xdata
mov r9 r8
shr r9 0x3
je r-xdata
test cl 0x2
je r-xdata
mov al [ rdx + rcx ]
dec r8
mov [ rcx ] al
inc rcx
cmp rdx 0xfffffffffffff000
ja r-xdata
mov rax [ rdx + rcx - 0x8 ]
mov r10 [ rdx + rcx - 0x10 ]
sub rcx 0x20
mov [ rcx + 0x18 ] rax
mov [ rcx + 0x10 ] r10
mov rax [ rdx + rcx + 0x8 ]
mov r10 [ rdx + rcx ]
dec r9
mov [ rcx + 0x8 ] rax
mov [ rcx ] r10
jne r-xdata
sub rcx 0x8
mov rax [ rdx + rcx ]
dec r9
mov [ rcx ] rax
jne r-xdata
test cl 0x4
je r-xdata
sub rcx 0x2
mov ax [ rdx + rcx ]
sub r8 0x2
mov [ rcx ] ax
cmp rdx 0x1000
jb r-xdata
mov rax [ rdx + rcx ]
mov r10 [ rdx + rcx + 0x8 ]
add rcx 0x20
mov [ rcx - 0x20 ] rax
mov [ rcx - 0x18 ] r10
mov rax [ rdx + rcx - 0x10 ]
mov r10 [ rdx + rcx - 0x8 ]
dec r9
mov [ rcx - 0x10 ] rax
mov [ rcx - 0x8 ] r10
jne r-xdata
mov rax [ rdx + rcx ]
mov [ rcx ] rax
add rcx 0x8
dec r9
jne r-xdata
test cl 0x4
je r-xdata
mov ax [ rdx + rcx ]
sub r8 0x2
mov [ rcx ] ax
add rcx 0x2
mov eax 0x20
and r8 0x1f
jmp r-xdata
and r8 0x7
sub rcx 0x4
mov eax [ rdx + rcx ]
sub r8 0x4
mov [ rcx ] eax
mov eax 0x20
and r8 0x1f
jmp r-xdata
and r8 0x7
mov eax [ rdx + rcx ]
sub r8 0x4
mov [ rcx ] eax
add rcx 0x4
sub rcx 0x80
prefetchnta [ rdx + rcx ]
prefetchnta [ rdx + rcx + 0x40 ]
dec eax
jne r-xdata
add rcx 0x1000
mov eax 0x40
prefetchnta [ rdx + rcx ]
prefetchnta [ rdx + rcx + 0x40 ]
add rcx 0x80
dec eax
jne r-xdata
sub rcx 0x1000
mov eax 0x40
mov r9 [ rdx + rcx - 0x8 ]
mov r10 [ rdx + rcx - 0x10 ]
movnti [ rcx - 0x8 ] r9
movnti [ rcx - 0x10 ] r10
mov r9 [ rdx + rcx - 0x18 ]
mov r10 [ rdx + rcx - 0x20 ]
movnti [ rcx - 0x18 ] r9
movnti [ rcx - 0x20 ] r10
mov r9 [ rdx + rcx - 0x28 ]
mov r10 [ rdx + rcx - 0x30 ]
sub rcx 0x40
movnti [ rcx + 0x18 ] r9
movnti [ rcx + 0x10 ] r10
mov r9 [ rdx + rcx + 0x8 ]
mov r10 [ rdx + rcx ]
dec eax
movnti [ rcx + 0x8 ] r9
movnti [ rcx ] r10
jne r-xdata
sub r8 0x1000
cmp r8 0x1000
jae r-xdata
mov r9 [ rdx + rcx ]
mov r10 [ rdx + rcx + 0x8 ]
movnti [ rcx ] r9
movnti [ rcx + 0x8 ] r10
mov r9 [ rdx + rcx + 0x10 ]
mov r10 [ rdx + rcx + 0x18 ]
movnti [ rcx + 0x10 ] r9
movnti [ rcx + 0x18 ] r10
mov r9 [ rdx + rcx + 0x20 ]
mov r10 [ rdx + rcx + 0x28 ]
add rcx 0x40
movnti [ rcx - 0x20 ] r9
movnti [ rcx - 0x18 ] r10
mov r9 [ rdx + rcx - 0x10 ]
mov r10 [ rdx + rcx - 0x8 ]
dec eax
movnti [ rcx - 0x10 ] r9
movnti [ rcx - 0x8 ] r10
jne r-xdata
sub r8 0x1000
cmp r8 0x1000
jae r-xdata
[ rsp ] 0x0
jmp r-xdata
[ rsp ] 0x0
jmp r-xdata
sub_180010b10
mov rax rcx
mov ecx 0x5a4d
cmp [ rax ] cx
je r-xdata
movsxd rcx [ rax + 0x3c ]
add rcx rax
xor eax eax
cmp [ rcx ] 0x4550
jne r-xdata
xor eax eax
retn
retn
mov edx 0x20b
cmp [ rcx + 0x18 ] dx
sete al
sub_180010b40
movsxd r8 [ rcx + 0x3c ]
xor r9d r9d
mov r10 rdx
add r8 rcx
movzx eax [ r8 + 0x14 ]
movzx r11d [ r8 + 0x6 ]
lea rcx [ rax + r8 + 0x18 ]
test r11d r11d
je r-xdata
xor eax eax
retn
mov edx [ rcx + 0xc ]
cmp r10 rdx
jb r-xdata
inc r9d
add rcx 0x28
cmp r9d r11d
jb r-xdata
mov eax [ rcx + 0x8 ]
add eax edx
cmp r10 rax
jb r-xdata
mov rax rcx
retn
sub_180010b90
sub rsp 0x28
mov r8 rcx
lea r9 [ __dos_header ]
mov rcx r9
call sub_180010b10
test eax eax
je r-xdata
add rsp 0x28
retn
sub r8 r9
mov rdx r8
mov rcx r9
call sub_180010b40
test rax rax
je r-xdata
mov eax [ rax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
jmp r-xdata
sub_180010bd4
[ rcx ]
mov rax [ rcx + 0x110 ]
test rax rax
je r-xdata
mov rax [ rcx + 0x120 ]
test rax rax
je r-xdata
[ rax ]
mov rax [ rcx + 0x118 ]
test rax rax
je r-xdata
[ rax ]
mov rax [ rcx + 0x130 ]
test rax rax
je r-xdata
[ rax ]
lea rax [ rcx + 0x58 ]
mov r8d 0x6
[ rax ]
cmp [ rax - 0x8 ] 0x0
je r-xdata
mov rdx [ rax ]
test rdx rdx
je r-xdata
add rax 0x20
dec r8
jne r-xdata
mov rdx [ rax + 0x8 ]
test rdx rdx
je r-xdata
[ rdx ]
lea rdx [ rw-data ]
cmp [ rax - 0x10 ] rdx
je r-xdata
mov rax [ rcx + 0x158 ]
[ rax + 0x160 ]
retn
[ rdx ]
sub_180010c60
test rcx rcx
je r-xdata
mov rax rcx
retn
or r9d 0xffffffff
[ rcx ] r9d
mov rax [ rcx + 0x110 ]
test rax rax
je r-xdata
mov rax [ rcx + 0x120 ]
test rax rax
je r-xdata
[ rax ] r9d
mov rax [ rcx + 0x118 ]
test rax rax
je r-xdata
[ rax ] r9d
mov rax [ rcx + 0x130 ]
test rax rax
je r-xdata
[ rax ] r9d
lea rax [ rcx + 0x58 ]
mov r8d 0x6
[ rax ] r9d
cmp [ rax - 0x8 ] 0x0
je r-xdata
mov rdx [ rax ]
test rdx rdx
je r-xdata
add rax 0x20
dec r8
jne r-xdata
mov rdx [ rax + 0x8 ]
test rdx rdx
je r-xdata
[ rdx ] r9d
lea rdx [ rw-data ]
cmp [ rax - 0x10 ] rdx
je r-xdata
mov rax [ rcx + 0x158 ]
[ rax + 0x160 ] r9d
[ rdx ] r9d
sub_180010d04
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rax [ rcx + 0x128 ]
mov rbx rcx
test rax rax
je r-xdata
mov rax [ rbx + 0x130 ]
test rax rax
je r-xdata
lea rcx [ rw-data ]
cmp rax rcx
je r-xdata
mov rcx [ rbx + 0x158 ]
lea rax [ rw-data ]
cmp rcx rax
je r-xdata
cmp [ rax ] 0x0
jne r-xdata
mov rax [ rbx + 0x110 ]
test rax rax
je r-xdata
lea rdi [ rbx + 0x58 ]
mov esi 0x6
cmp [ rcx + 0x160 ] 0x0
jne r-xdata
mov rcx [ rbx + 0x138 ]
sub rcx 0xfe
call sub_18000e204
mov rcx [ rbx + 0x148 ]
mov edi 0x80
sub rcx rdi
call sub_18000e204
mov rcx [ rbx + 0x150 ]
sub rcx rdi
call sub_18000e204
mov rcx [ rbx + 0x130 ]
call sub_18000e204
cmp [ rax ] 0x0
jne r-xdata
cmp [ rdi - 0x8 ] 0x0
je r-xdata
mov rcx [ rdi ]
test rcx rcx
je r-xdata
call sub_1800122d4
mov rcx [ rbx + 0x158 ]
call sub_18000e204
mov rcx [ rbx + 0x120 ]
test rcx rcx
je r-xdata
add rdi 0x20
dec rsi
jne r-xdata
mov rcx [ rdi + 0x8 ]
test rcx rcx
je r-xdata
cmp [ rcx ] 0x0
jne r-xdata
mov rcx [ rbx + 0x118 ]
test rcx rcx
je r-xdata
cmp [ rcx ] 0x0
jne r-xdata
lea rax [ rw-data ]
cmp [ rdi - 0x10 ] rax
je r-xdata
mov rcx rbx
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
jmp sub_18000e204
cmp [ rcx ] 0x0
jne r-xdata
call sub_18000e204
mov rcx [ rbx + 0x110 ]
call sub_18000e204
mov rcx [ rbx + 0x128 ]
call sub_18000e204
cmp [ rcx ] 0x0
jne r-xdata
call sub_18000e204
mov rcx [ rbx + 0x128 ]
call sub_180012730
call sub_18000e204
call sub_18000e204
mov rcx [ rbx + 0x128 ]
call sub_1800126c4
sub_180010e80
push rbx
sub rsp 0x20
mov rbx rdx
test rdx rdx
je r-xdata
xor eax eax
test rcx rcx
je r-xdata
mov r10 [ rcx ]
cmp r10 rdx
je r-xdata
mov rax rbx
jmp r-xdata
mov [ rcx ] rdx
mov rcx rdx
call sub_180010bd4
test r10 r10
je r-xdata
add rsp 0x20
pop rbx
retn
mov rcx r10
call sub_180010c60
cmp [ r10 ] 0x0
jne r-xdata
lea rax [ rw-data ]
cmp r10 rax
je r-xdata
call sub_180010d04
sub_180010ed8
push rbx
sub rsp 0x20
call sub_18000eb44
mov rbx rax
mov ecx [ rax + 0xc8 ]
test [ rw-data ] ecx
je r-xdata
mov ecx 0xc
call sub_1800102d8
nop
lea rcx [ rbx + 0xc0 ]
mov rdx [ rw-data ]
call sub_180010e80
mov rbx rax
mov ecx 0xc
call sub_1800101d8
cmp [ rax + 0xc0 ] 0x0
je r-xdata
mov rax rbx
add rsp 0x20
pop rbx
retn
lea ecx [ rbx + 0x20 ]
call sub_18000f268
call sub_18000eb44
mov rbx [ rax + 0xc0 ]
jmp r-xdata
test rbx rbx
jne r-xdata
sub_180010f50
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rbp
mov [ rsp + 0x18 ] rsi
push rdi
sub rsp 0x20
lea rbx [ rcx + 0x1c ]
mov rbp rcx
mov esi 0x101
mov rcx rbx
mov r8d esi
xor edx edx
call sub_180011dc0
xor r11d r11d
lea rdi [ rbp + 0x10 ]
lea ecx [ r11 + 0x6 ]
movzx eax r11w
mov [ rbp + 0xc ] r11d
mov [ rbp + 0x4 ] r11
[ rdi ]
lea rdi [ rw-data ]
sub rdi rbp
mov al [ rdi + rbx ]
mov [ rbx ] al
inc rbx
dec rsi
jne r-xdata
lea rcx [ rbp + 0x11d ]
mov edx 0x100
mov al [ rcx + rdi ]
mov [ rcx ] al
inc rcx
dec rdx
jne r-xdata
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
add rsp 0x20
pop rdi
retn
sub_180010fdc
mov rax rsp
mov [ rax + 0x10 ] rbx
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push rbp
lea rbp [ rax - 0x488 ]
sub rsp 0x580
mov rax [ rw-data ]
xor rax rsp
mov [ rbp + 0x470 ] rax
mov rsi rcx
mov ecx [ rcx + 0x4 ]
lea rdx [ rsp + 0x50 ]
call [ GetCPInfo@IAT ]
mov ebx 0x100
test eax eax
je r-xdata
xor edx edx
lea rcx [ rsi + 0x1d ]
xor eax eax
lea rcx [ rsp + 0x70 ]
cmp r8d 0x19
ja r-xdata
or [ rcx ] 0x10
lea eax [ rdx + 0x20 ]
jmp r-xdata
mov [ rcx ] al
inc eax
inc rcx
cmp eax ebx
jb r-xdata
mov al [ rsp + 0x56 ]
mov [ rsp + 0x70 ] 0x20
lea rdi [ rsp + 0x56 ]
jmp r-xdata
mov [ rcx + 0x100 ] 0x0
or [ rcx ] 0x20
lea eax [ rdx - 0x20 ]
mov [ rcx + 0x100 ] al
jmp r-xdata
test al al
jne r-xdata
lea r8d [ rdx - 0x61 ]
lea eax [ r8 + 0x20 ]
cmp eax 0x19
ja r-xdata
mov rcx [ rbp + 0x470 ]
xor rcx rsp
call sub_18000dc90
lea r11 [ rsp + 0x580 ]
mov rbx [ r11 + 0x18 ]
mov rsi [ r11 + 0x20 ]
mov rdi [ r11 + 0x28 ]
mov rsp r11
pop rbp
retn
inc edx
inc rcx
cmp edx ebx
jb r-xdata
movzx edx [ rdi + 0x1 ]
movzx r8d al
cmp r8d edx
ja r-xdata
mov eax [ rsi + 0xc ]
and [ rsp + 0x38 ] 0x0
lea r8 [ rsp + 0x70 ]
mov [ rsp + 0x30 ] eax
mov eax [ rsi + 0x4 ]
mov r9d ebx
mov [ rsp + 0x28 ] eax
lea rax [ rbp + 0x270 ]
mov edx 0x1
xor ecx ecx
mov [ rsp + 0x20 ] rax
call sub_180012d00
and [ rsp + 0x40 ] 0x0
mov eax [ rsi + 0x4 ]
mov edx [ rsi + 0xc ]
mov [ rsp + 0x38 ] eax
lea rax [ rbp + 0x70 ]
mov [ rsp + 0x30 ] ebx
mov [ rsp + 0x28 ] rax
lea r9 [ rsp + 0x70 ]
mov r8d ebx
xor ecx ecx
mov [ rsp + 0x20 ] ebx
call sub_180012b08
and [ rsp + 0x40 ] 0x0
mov eax [ rsi + 0x4 ]
mov edx [ rsi + 0xc ]
mov [ rsp + 0x38 ] eax
lea rax [ rbp + 0x170 ]
mov [ rsp + 0x30 ] ebx
mov [ rsp + 0x28 ] rax
lea r9 [ rsp + 0x70 ]
mov r8d 0x200
xor ecx ecx
mov [ rsp + 0x20 ] ebx
call sub_180012b08
lea rdx [ rbp + 0x70 ]
lea r8 [ rbp + 0x170 ]
sub rdx rsi
lea r11 [ rbp + 0x270 ]
lea rcx [ rsi + 0x1d ]
sub r8 rsi
add rdi 0x2
mov al [ rdi ]
sub edx r8d
mov eax r8d
lea rcx [ rsp + r8 + 0x70 ]
lea r8d [ rdx + 0x1 ]
mov dl 0x20
call sub_180011dc0
test [ r11 ] 0x2
je r-xdata
or [ rcx ] 0x10
mov al [ rdx + rcx - 0x1d ]
jmp r-xdata
mov [ rcx + 0x100 ] 0x0
or [ rcx ] 0x20
mov al [ r8 + rcx - 0x1d ]
mov [ rcx + 0x100 ] al
jmp r-xdata
test [ r11 ] 0x1
je r-xdata
jmp r-xdata
inc rcx
add r11 0x2
dec rbx
jne r-xdata
sub_1800111cc
mov [ rsp + 0x10 ] rbx
push rdi
sub rsp 0x20
call sub_18000eb44
mov rdi rax
mov ecx [ rax + 0xc8 ]
test [ rw-data ] ecx
je r-xdata
mov ecx 0xd
call sub_1800102d8
nop
mov rbx [ rdi + 0xb8 ]
mov [ rsp + 0x30 ] rbx
cmp rbx [ rw-data ]
je r-xdata
cmp [ rax + 0xc0 ] 0x0
je r-xdata
mov ecx 0xd
call sub_1800101d8
test rbx rbx
je r-xdata
mov rbx [ rax + 0xb8 ]
jmp r-xdata
mov rax rbx
mov rbx [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
lea ecx [ rbx + 0x20 ]
call sub_18000f268
mov rax [ rw-data ]
mov [ rdi + 0xb8 ] rax
mov rax [ rw-data ]
mov [ rsp + 0x30 ] rax
[ rax ]
mov rbx [ rsp + 0x30 ]
[ rbx ]
jne r-xdata
test rbx rbx
jne r-xdata
lea rax [ rw-data ]
mov rcx [ rsp + 0x30 ]
cmp rcx rax
je r-xdata
call sub_18000e204
sub_180011288
push rbx
sub rsp 0x20
mov rbx rcx
mov [ rcx + 0x18 ] 0x0
test rdx rdx
jne r-xdata
movups xmm0 [ rdx ]
movdqu [ rcx ] xmm0
call sub_18000eb44
mov [ rbx + 0x10 ] rax
mov rdx [ rax + 0xc0 ]
mov [ rbx ] rdx
mov rcx [ rax + 0xb8 ]
mov [ rbx + 0x8 ] rcx
cmp rdx [ rw-data ]
je r-xdata
mov rax [ rw-data ]
cmp [ rbx + 0x8 ] rax
je r-xdata
mov eax [ rax + 0xc8 ]
test [ rw-data ] eax
jne r-xdata
mov rax [ rbx + 0x10 ]
test [ rax + 0xc8 ] 0x2
jne r-xdata
mov rax [ rbx + 0x10 ]
mov ecx [ rax + 0xc8 ]
test [ rw-data ] ecx
jne r-xdata
call sub_180010ed8
mov [ rbx ] rax
mov rax rbx
add rsp 0x20
pop rbx
retn
or [ rax + 0xc8 ] 0x2
mov [ rbx + 0x18 ] 0x1
jmp r-xdata
call sub_1800111cc
mov [ rbx + 0x8 ] rax
sub_18001132c
push rbx
sub rsp 0x40
mov ebx ecx
lea rcx [ rsp + 0x20 ]
xor edx edx
call sub_180011288
and [ rw-data ] 0x0
cmp ebx 0xfffffffe
jne r-xdata
cmp ebx 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp ebx 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
add rsp 0x40
pop rbx
retn
mov rcx [ rsp + 0x30 ]
and [ rcx + 0xc8 ] 0xfffffffd
jmp r-xdata
cmp [ rsp + 0x38 ] 0x0
je r-xdata
mov rax [ rsp + 0x20 ]
mov [ rw-data ] 0x1
mov eax [ rax + 0x4 ]
jmp r-xdata
cmp [ rsp + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov rax [ rsp + 0x30 ]
and [ rax + 0xc8 ] 0xfffffffd
sub_1800113bc
mov [ rsp + 0x18 ] rbx
push rbp
push rsi
push rdi
push r12
push r13
sub rsp 0x40
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x38 ] rax
mov rsi rdx
call sub_18001132c
xor ebx ebx
mov edi eax
test eax eax
jne r-xdata
lea r13 [ rw-data ]
mov ecx ebx
mov rbp rbx
mov rax r13
mov r12d 0x1
mov rcx rsi
call sub_180010f50
jmp r-xdata
lea rcx [ rsi + 0x1c ]
xor edx edx
mov r8d 0x101
call sub_180011dc0
lea r10 [ rbp + rbp * 2 ]
lea r11 [ rw-data ]
shl r10 0x4
mov ebp 0x4
lea r8 [ r10 + r13 + 0x10 ]
add ecx r12d
add rbp r12
add rax 0x30
cmp ecx 0x5
jb r-xdata
xor eax eax
add r8 0x8
add r11 r12
sub rbp r12
jne r-xdata
cmp [ rcx + 0x1 ] bl
je r-xdata
cmp [ rax ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov rcx r8
cmp [ r8 ] bl
je r-xdata
mov [ rsi + 0x4 ] edi
sub edi 0x3a4
mov [ rsi + 0x8 ] r12d
je r-xdata
movzx edx [ rcx ]
movzx eax [ rcx + 0x1 ]
cmp edx eax
ja r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi 0xfde9
je r-xdata
mov ebx 0x411
sub edi 0x4
je r-xdata
add rcx 0x2
cmp [ rcx ] bl
jne r-xdata
lea r9 [ rdx + rsi + 0x1d ]
mov rcx [ rsp + 0x38 ]
xor rcx rsp
call sub_18000dc90
mov rbx [ rsp + 0x80 ]
add rsp 0x40
pop r13
pop r12
pop rdi
pop rsi
pop rbp
retn
movzx ecx di
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
movzx eax [ rdi + rcx ]
mov [ rcx ] ax
add rcx 0x2
sub rdx r12
jne r-xdata
mov rcx rsi
call sub_180010fdc
mov ebx 0x804
jmp r-xdata
sub edi 0xd
je r-xdata
mov al [ r11 ]
add edx r12d
or [ r9 ] al
movzx eax [ rcx + 0x1 ]
add r9 r12
cmp edx eax
jbe r-xdata
lea rdx [ rsp + 0x20 ]
mov ecx edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
sub r10 rsi
mov [ rsi + 0xc ] ebx
lea rcx [ rsi + 0x10 ]
lea rdi [ r10 + r13 - 0xc ]
mov edx 0x6
mov ebx 0x412
jmp r-xdata
dec edi
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
lea rcx [ rsi + 0x1c ]
xor edx edx
mov r8d 0x101
call sub_180011dc0
mov [ rsi + 0x4 ] edi
mov [ rsi + 0xc ] ebx
cmp [ rsp + 0x20 ] r12d
jbe r-xdata
mov ebx 0x404
jmp r-xdata
mov [ rsi + 0x8 ] ebx
lea rax [ rsp + 0x26 ]
cmp [ rsp + 0x26 ] bl
je r-xdata
lea rax [ rsi + 0x1e ]
mov ecx 0xfe
cmp [ rax + 0x1 ] bl
je r-xdata
or [ rax ] 0x8
add rax r12
sub rcx r12
jne r-xdata
mov ecx [ rsi + 0x4 ]
sub ecx 0x3a4
je r-xdata
movzx edi [ rax ]
movzx ecx [ rax + 0x1 ]
cmp edi ecx
ja r-xdata
mov eax 0x411
sub ecx 0x4
je r-xdata
add rax 0x2
cmp [ rax ] bl
jne r-xdata
sub ecx edi
lea rdx [ rdi + rsi + 0x1d ]
add ecx r12d
lea rdi [ rsi + 0x10 ]
movzx eax bx
mov ecx 0x6
[ rdi ]
jmp r-xdata
mov eax 0x804
jmp r-xdata
sub ecx 0xd
je r-xdata
or [ rdx ] 0x4
add rdx r12
sub rcx r12
jne r-xdata
mov [ rsi + 0xc ] eax
mov [ rsi + 0x8 ] r12d
jmp r-xdata
mov eax 0x412
jmp r-xdata
dec ecx
je r-xdata
mov eax 0x404
jmp r-xdata
mov eax ebx
jmp r-xdata
sub_180011634
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rsi
mov [ rax + 0x18 ] rdi
mov [ rax + 0x20 ] r12
push r13
sub rsp 0x30
mov edi ecx
or r13d 0xffffffff
call sub_18000eb44
mov rsi rax
call sub_1800111cc
mov rbx [ rsi + 0xb8 ]
mov ecx edi
call sub_18001132c
mov r12d eax
cmp eax [ rbx + 0x4 ]
je r-xdata
xor edi edi
mov r13d edi
mov ecx 0x220
call sub_18000ed60
mov rbx rax
xor edi edi
test rax rax
je r-xdata
mov eax r13d
mov rbx [ rsp + 0x40 ]
mov rsi [ rsp + 0x48 ]
mov rdi [ rsp + 0x50 ]
mov r12 [ rsp + 0x58 ]
add rsp 0x30
pop r13
retn
mov rdx [ rsi + 0xb8 ]
mov rcx rax
mov r8d 0x220
call sub_1800107d0
mov [ rbx ] edi
mov rdx rbx
mov ecx r12d
call sub_1800113bc
mov r13d eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov rcx [ rsi + 0xb8 ]
lea r12 [ rw-data ]
[ rcx ]
jne r-xdata
lea r12 [ rw-data ]
cmp rbx r12
je r-xdata
mov [ rsi + 0xb8 ] rbx
[ rbx ]
test [ rsi + 0xc8 ] 0x2
jne r-xdata
mov rcx [ rsi + 0xb8 ]
cmp rcx r12
je r-xdata
call sub_18000fe94
mov [ rax ] 0x16
jmp r-xdata
mov rcx rbx
call sub_18000e204
test [ rw-data ] 0x1
jne r-xdata
call sub_18000e204
mov esi 0xd
mov ecx esi
call sub_1800102d8
nop
mov eax [ rbx + 0x4 ]
mov [ rw-data ] eax
mov eax [ rbx + 0x8 ]
mov [ rw-data ] eax
mov eax [ rbx + 0xc ]
mov [ rw-data ] eax
mov edx edi
lea r8 [ __dos_header ]
mov edx edi
movsxd rcx edx
movzx eax [ rbx + rcx * 2 + 0x10 ]
mov [ r8 + rcx * 2 + 0x1b088 ] ax
inc edx
jmp r-xdata
mov [ rsp + 0x20 ] edi
cmp edi 0x100
jge r-xdata
movsxd rcx edx
mov al [ rcx + rbx + 0x1c ]
mov [ rcx + r8 + 0x18b00 ] al
inc edx
jmp r-xdata
mov [ rsp + 0x20 ] edx
cmp edx 0x5
jge r-xdata
mov rax [ rw-data ]
[ rax ]
jne r-xdata
movsxd rcx edi
mov al [ rcx + rbx + 0x11d ]
mov [ rcx + r8 + 0x18c10 ] al
inc edi
jmp r-xdata
mov [ rsp + 0x20 ] edx
cmp edx 0x101
jge r-xdata
mov [ rw-data ] rbx
[ rbx ]
mov ecx esi
call sub_1800101d8
jmp r-xdata
mov rcx [ rw-data ]
cmp rcx r12
je r-xdata
call sub_18000e204
sub_18001183c
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
mov rbx r8
mov rdi rdx
test rcx rcx
je r-xdata
imul rdi rcx
mov eax 0x1
test rdi rdi
cmove rdi rax
xor edx edx
lea rax [ rdx - 0x20 ]
div rcx
cmp rax rdi
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov rcx [ rw-data ]
lea edx [ rax + 0x8 ]
mov r8 rdi
call [ HeapAlloc@IAT ]
test rax rax
jne r-xdata
call sub_18000fe94
mov [ rax ] 0xc
test rbx rbx
je r-xdata
mov rcx rdi
call sub_18000e708
test eax eax
jne r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
mov [ rbx ] 0xc
xor eax eax
cmp rdi 0xffffffffffffffe0
ja r-xdata
test rbx rbx
je r-xdata
xor eax eax
jmp r-xdata
mov [ rbx ] 0xc
jmp r-xdata
sub_1800118d8
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x20
mov rbx rdx
mov rdi rcx
test rcx rcx
jne r-xdata
test rdx rdx
jne r-xdata
mov rcx rdx
call sub_18000e648
jmp r-xdata
cmp rdx 0xffffffffffffffe0
ja r-xdata
call sub_18000e204
jmp r-xdata
mov rbx [ rsp + 0x30 ]
mov rsi [ rsp + 0x38 ]
add rsp 0x20
pop rdi
retn
mov rcx rbx
call sub_18000e708
call sub_18000fe94
mov [ rax ] 0xc
mov rcx [ rw-data ]
mov eax 0x1
test rbx rbx
cmove rbx rax
mov r8 rdi
xor edx edx
mov r9 rbx
call [ HeapReAlloc@IAT ]
mov rsi rax
test rax rax
jne r-xdata
xor eax eax
mov rax rsi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
call sub_18000fe94
mov rbx rax
call [ GetLastError@IAT ]
mov ecx eax
call sub_18000fe4c
mov [ rbx ] eax
mov rcx rbx
call sub_18000e708
test eax eax
je r-xdata
call sub_18000fe94
mov rbx rax
call [ GetLastError@IAT ]
mov ecx eax
call sub_18000fe4c
mov [ rbx ] eax
jmp r-xdata
cmp rbx 0xffffffffffffffe0
jbe r-xdata
sub_180011a20
mov [ rsp + 0x10 ] rbx
mov [ rsp + 0x18 ] rsi
push rdi
push r12
push r13
push r14
push r15
sub rsp 0x30
mov ebx ecx
xor edi edi
mov [ rsp + 0x60 ] edi
xor esi esi
mov edx ecx
sub edx 0x2
je r-xdata
lea r12 [ rw-data ]
mov rcx [ rw-data ]
sub edx 0x2
je r-xdata
test r13 r13
jne r-xdata
xor eax eax
jmp r-xdata
call sub_18000eac0
mov rsi rax
test rax rax
jne r-xdata
sub edx 0x2
je r-xdata
test edi edi
je r-xdata
lea ecx [ r13 + 0x3 ]
call sub_18000f24c
int3
mov rbx [ rsp + 0x68 ]
mov rsi [ rsp + 0x70 ]
add rsp 0x30
pop r15
pop r14
pop r13
pop r12
pop rdi
retn
mov rdx [ rax + 0xa0 ]
mov rcx rdx
movsxd r8 [ r--data ]
or eax 0xffffffff
jmp r-xdata
lea r12 [ rw-data ]
mov rcx [ rw-data ]
jmp r-xdata
sub edx 0x2
je r-xdata
cmp ebx 0x8
je r-xdata
xor ecx ecx
call sub_1800102d8
nop
mov rax r8
shl rax 0x4
add rax rdx
cmp rcx rax
jae r-xdata
add rcx 0x10
mov rax r8
shl rax 0x4
add rax rdx
cmp rcx rax
jb r-xdata
mov edi 0x1
mov [ rsp + 0x60 ] edi
call [ DecodePointer@IAT ]
mov r13 rax
sub edx 0x3
je r-xdata
mov r15 [ rsi + 0xa8 ]
mov [ rsp + 0x28 ] r15
and [ rsi + 0xa8 ] 0x0
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
xor ecx ecx
cmp [ rcx + 0x4 ] ebx
je r-xdata
cmp [ rcx + 0x4 ] ebx
je r-xdata
sub edx 0x4
je r-xdata
mov r14d [ rsp + 0x60 ]
mov r14d [ rsi + 0xb0 ]
mov [ rsi + 0xb0 ] 0x8c
jmp r-xdata
cmp ebx 0x4
je r-xdata
cmp r13 0x1
jne r-xdata
lea r12 [ rcx + 0x8 ]
mov r13 [ r12 ]
jmp r-xdata
lea r12 [ rw-data ]
mov rcx [ rw-data ]
jmp r-xdata
sub edx 0x6
je r-xdata
call EncodePointer
mov [ r12 ] rax
mov ecx [ r--data ]
mov edx ecx
mov [ rsp + 0x20 ] ecx
cmp ebx 0x8
jne r-xdata
mov r15 [ rsp + 0x28 ]
jmp r-xdata
lea r12 [ rw-data ]
mov rcx [ rw-data ]
jmp r-xdata
dec edx
je r-xdata
mov edi 0x8
cmp ebx edi
jne r-xdata
xor ecx ecx
call sub_1800101d8
test edi edi
je r-xdata
movsxd rcx edx
add rcx rcx
mov rax [ rsi + 0xa0 ]
and [ rax + rcx * 8 + 0x8 ] 0x0
inc edx
mov [ rsp + 0x20 ] edx
mov ecx [ r--data ]
jmp r-xdata
call sub_18000fe94
mov [ rax ] 0x16
call sub_1800100ac
jmp r-xdata
mov ecx ebx
call r13
mov edx [ rsi + 0xb0 ]
mov ecx edi
call r13
jmp r-xdata
mov eax [ r--data ]
add ecx eax
cmp edx ecx
jge r-xdata
mov [ rsi + 0xa8 ] r15
cmp ebx edi
jne r-xdata
cmp ebx 0xb
je r-xdata
cmp ebx edi
je r-xdata
mov [ rsi + 0xb0 ] r14d
jmp r-xdata
cmp ebx 0x4
jne r-xdata
sub_180011c64
mov [ rsp + 0x8 ] rbx
push rdi
sub rsp 0x20
lea rbx [ rw-data ]
mov edi 0xa
mov rcx [ rbx ]
call [ EncodePointer@IAT ]
mov [ rbx ] rax
add rbx 0x8
dec rdi
jne r-xdata
mov rbx [ rsp + 0x30 ]
add rsp 0x20
pop rdi
retn
sub_180011c9c
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x40
mov ebx edx
mov rdx rcx
lea rcx [ rsp + 0x20 ]
mov edi r9d
mov esi r8d
call sub_180011288
mov rax [ rsp + 0x28 ]
movzx r11d bl
test [ r11 + rax + 0x1d ] dil
jne r-xdata
mov eax 0x1
test esi esi
je r-xdata
mov rbx [ rsp + 0x50 ]
mov rsi [ rsp + 0x58 ]
add rsp 0x40
pop rdi
retn
mov rcx [ rsp + 0x30 ]
and [ rcx + 0xc8 ] 0xfffffffd
xor eax eax
mov rax [ rsp + 0x20 ]
mov rcx [ rax + 0x140 ]
movzx eax [ rcx + r11 * 2 ]
and eax esi
jmp r-xdata
cmp [ rsp + 0x38 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_180011d2c
push rbx
sub rsp 0x20
mov r11d [ r8 ]
mov rbx rdx
mov r9 rcx
and r11d 0xfffffff8
test [ r8 ] 0x4
mov r10 rcx
je r-xdata
movsxd rax r11d
mov rdx [ rax + r10 ]
mov rax [ rbx + 0x10 ]
mov ecx [ rax + 0x8 ]
add rcx [ rbx + 0x8 ]
test [ rcx + 0x3 ] 0xf
je r-xdata
mov eax [ r8 + 0x8 ]
movsxd r10 [ r8 + 0x4 ]
neg eax
add r10 rcx
movsxd rcx eax
and r10 rcx
xor r9 rdx
mov rcx r9
add rsp 0x20
pop rbx
jmp sub_18000dc90
movzx eax [ rcx + 0x3 ]
and eax 0xfffffff0
cdqe
add r9 rax
sub_180011dc0
mov rax rcx
cmp r8 0x8
jb r-xdata
test r8 r8
je r-xdata
movzx edx dl
mov r9 0x101010101010101
imul rdx r9
cmp r8 0x40
jb r-xdata
retn
mov [ rcx ] dl
inc rcx
dec r8
jne r-xdata
mov r9 r8
and r8 0x7
shr r9 0x3
je r-xdata
neg rcx
and ecx 0x7
je r-xdata
nop
nop
add rcx rax
mov r9 r8
and r8 0x3f
shr r9 0x6
jne r-xdata
sub r8 rcx
mov [ rax ] rdx
mov [ rcx ] rdx
add rcx 0x8
dec r9
jne r-xdata
cmp r9 0x1c00
jae r-xdata
movnti [ rcx ] rdx
movnti [ rcx + 0x8 ] rdx
movnti [ rcx + 0x10 ] rdx
add rcx 0x40
movnti [ rcx - 0x28 ] rdx
movnti [ rcx - 0x20 ] rdx
dec r9
movnti [ rcx - 0x18 ] rdx
movnti [ rcx - 0x10 ] rdx
movnti [ rcx - 0x8 ] rdx
jne r-xdata
mov [ rcx ] rdx
mov [ rcx + 0x8 ] rdx
mov [ rcx + 0x10 ] rdx
add rcx 0x40
mov [ rcx - 0x28 ] rdx
mov [ rcx - 0x20 ] rdx
dec r9
mov [ rcx - 0x18 ] rdx
mov [ rcx - 0x10 ] rdx
mov [ rcx - 0x8 ] rdx
jne r-xdata
[ rsp ] 0x0
jmp r-xdata
jmp r-xdata
sub_180011eac
push rbx
push rbp
push rsi
push rdi
push r12
push r13
push r14
sub rsp 0x50
mov rax [ rw-data ]
xor rax rsp
mov [ rsp + 0x48 ] rax
mov ebp r8d
mov r14 rdx
mov r13 rcx
call EncodePointer
xor ebx ebx
cmp [ rw-data ] rbx
mov rdi rax
jne r-xdata
mov rax [ rw-data ]
lea rcx [ r--data ]
call [ LoadLibraryW@IAT ]
mov rsi rax
test rax rax
je r-xdata
mov rcx [ rw-data ]
cmp rcx rdi
je r-xdata
cmp r11 rdi
je r-xdata
xor eax eax
lea rdx [ r--data ]
mov rcx rax
call [ GetProcAddress@IAT ]
test rax rax
je r-xdata
mov rcx [ rw-data ]
call [ DecodePointer@IAT ]
test rax rax
je r-xdata
call [ DecodePointer@IAT ]
test rax rax
je r-xdata
mov rcx rax
call [ DecodePointer@IAT ]
mov rcx [ rw-data ]
mov rsi rax
call [ DecodePointer@IAT ]
mov r12 rax
test rsi rsi
je r-xdata
mov rcx rax
call [ EncodePointer@IAT ]
lea rdx [ r--data ]
mov rcx rsi
mov [ rw-data ] rax
call [ GetProcAddress@IAT ]
mov rcx rax
call [ EncodePointer@IAT ]
lea rdx [ r--data ]
mov rcx rsi
mov [ rw-data ] rax
call [ GetProcAddress@IAT ]
mov rcx rax
call [ EncodePointer@IAT ]
lea rdx [ r--data ]
mov rcx rsi
mov [ rw-data ] rax
call [ GetProcAddress@IAT ]
mov rcx rax
call [ EncodePointer@IAT ]
mov r11 rax
mov [ rw-data ] rax
test rax rax
je r-xdata
mov r9d ebp
mov r8 r14
mov rdx r13
mov rcx rbx
call rax
jmp r-xdata
call rax
mov rbx rax
test rax rax
je r-xdata
test rax rax
je r-xdata
mov rax [ rw-data ]
jmp r-xdata
lea rdx [ r--data ]
mov rcx rsi
call [ GetProcAddress@IAT ]
mov rcx rax
call [ EncodePointer@IAT ]
mov [ rw-data ] rax
jmp r-xdata
mov rcx [ rsp + 0x48 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x50
pop r14
pop r13
pop r12
pop rdi
pop rsi
pop rbp
pop rbx
retn
mov rcx [ rw-data ]
cmp rcx rdi
je r-xdata
call rsi
test rax rax
je r-xdata
cmp rax rdi
je r-xdata
mov r11 [ rw-data ]
call [ DecodePointer@IAT ]
test rax rax
je r-xdata
bts ebp 0x15
jmp r-xdata
lea rcx [ rsp + 0x30 ]
mov r9d 0xc
lea r8 [ rsp + 0x38 ]
mov [ rsp + 0x20 ] rcx
lea edx [ r9 - 0xb ]
mov rcx rax
call r12
test eax eax
je r-xdata
mov rcx rbx
call rax
mov rbx rax
test [ rsp + 0x40 ] 0x1
jne r-xdata
sub_1800120b4
push rbx
sub rsp 0x20
xor r10d r10d
mov r9 rcx
test rcx rcx
je r-xdata
call sub_18000fe94
mov ebx 0x16
test rdx rdx
je r-xdata
test r8 r8
jne r-xdata
cmp [ rcx ] r10w
je r-xdata
mov [ rcx ] r10w
test rdx rdx
jne r-xdata
add rcx 0x2
dec rdx
jne r-xdata
sub rcx r8
mov [ r9 ] r10w
jmp r-xdata
test rdx rdx
jne r-xdata
dec rdx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ r9 ] r10w
call sub_18000fe94
mov ebx 0x22
jmp r-xdata
movzx eax [ r8 ]
mov [ rcx + r8 ] ax
add r8 0x2
test ax ax
je r-xdata
add rsp 0x20
pop rbx
retn
mov [ rax ] ebx
call sub_1800100ac
mov eax ebx
sub_18001213c
push rbx
sub rsp 0x20
xor ebx ebx
mov r10 r8
test r9 r9
jne r-xdata
test rcx rcx
je r-xdata
test rcx rcx
jne r-xdata
call sub_18000fe94
mov ebx 0x16
test rdx rdx
je r-xdata
test rdx rdx
jne r-xdata
test r9 r9
jne r-xdata
xor eax eax
jmp r-xdata
test r8 r8
jne r-xdata
mov [ rcx ] bx
jmp r-xdata
add rsp 0x20
pop rbx
retn
mov r11 rcx
mov r8 rdx
cmp r9 0xffffffffffffffff
jne r-xdata
mov [ rcx ] bx
sub r10 rcx
sub r11 r10
test r9 r9
jne r-xdata
dec r8
je r-xdata
test r8 r8
jne r-xdata
dec r8
jne r-xdata
mov [ r11 ] bx
dec r9
jne r-xdata
cmp r9 0xffffffffffffffff
jne r-xdata
movzx eax [ r10 ]
mov [ r11 + r10 ] ax
add r10 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx eax [ r10 + r11 ]
mov [ r11 ] ax
add r11 0x2
test ax ax
je r-xdata
mov [ rcx ] bx
call sub_18000fe94
mov ebx 0x22
jmp r-xdata
mov [ rcx + rdx * 2 - 0x2 ] bx
lea eax [ r8 + 0x50 ]
jmp r-xdata
mov [ rax ] ebx
call sub_1800100ac
mov eax ebx
sub_180012228
push rbx
sub rsp 0x20
xor r10d r10d
mov r9 rcx
test rcx rcx
je r-xdata
call sub_18000fe94
mov ebx 0x16
test rdx rdx
je r-xdata
test r8 r8
jne r-xdata
sub rcx r8
mov [ rcx ] r10w
test rdx rdx
jne r-xdata
dec rdx
jne r-xdata
xor eax eax
jmp r-xdata
mov [ r9 ] r10w
call sub_18000fe94
mov ebx 0x22
jmp r-xdata
movzx eax [ r8 ]
mov [ rcx + r8 ] ax
add r8 0x2
test ax ax
je r-xdata
add rsp 0x20
pop rbx
retn
mov [ rax ] ebx
call sub_1800100ac
mov eax ebx
sub_180012294
sub rsp 0x28
test ecx ecx
js r-xdata
call sub_18000fe94
mov [ rax ] 0x16
call sub_1800100ac
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
add rsp 0x28
retn
mov eax [ rw-data ]
jmp r-xdata
sub_1800122d4
test rcx rcx
je r-xdata
retn
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx + 0x8 ]
call sub_18000e204
mov rcx [ rbx + 0x10 ]
call sub_18000e204
mov rcx [ rbx + 0x18 ]
call sub_18000e204
mov rcx [ rbx + 0x20 ]
call sub_18000e204
mov rcx [ rbx + 0x28 ]
call sub_18000e204
mov rcx [ rbx + 0x30 ]
call sub_18000e204
mov rcx [ rbx ]
call sub_18000e204
mov rcx [ rbx + 0x40 ]
call sub_18000e204
mov rcx [ rbx + 0x48 ]
call sub_18000e204
mov rcx [ rbx + 0x50 ]
call sub_18000e204
mov rcx [ rbx + 0x58 ]
call sub_18000e204
mov rcx [ rbx + 0x60 ]
call sub_18000e204
mov rcx [ rbx + 0x68 ]
call sub_18000e204
mov rcx [ rbx + 0x38 ]
call sub_18000e204
mov rcx [ rbx + 0x70 ]
call sub_18000e204
mov rcx [ rbx + 0x78 ]
call sub_18000e204
mov rcx [ rbx + 0x80 ]
call sub_18000e204
mov rcx [ rbx + 0x88 ]
call sub_18000e204
mov rcx [ rbx + 0x90 ]
call sub_18000e204
mov rcx [ rbx + 0x98 ]
call sub_18000e204
mov rcx [ rbx + 0xa0 ]
call sub_18000e204
mov rcx [ rbx + 0xa8 ]
call sub_18000e204
mov rcx [ rbx + 0xb0 ]
call sub_18000e204
mov rcx [ rbx + 0xb8 ]
call sub_18000e204
mov rcx [ rbx + 0xc0 ]
call sub_18000e204
mov rcx [ rbx + 0xc8 ]
call sub_18000e204
mov rcx [ rbx + 0xd0 ]
call sub_18000e204
mov rcx [ rbx + 0xd8 ]
call sub_18000e204
mov rcx [ rbx + 0xe0 ]
call sub_18000e204
mov rcx [ rbx + 0xe8 ]
call sub_18000e204
mov rcx [ rbx + 0xf0 ]
call sub_18000e204
mov rcx [ rbx + 0xf8 ]
call sub_18000e204
mov rcx [ rbx + 0x100 ]
call sub_18000e204
mov rcx [ rbx + 0x108 ]
call sub_18000e204
mov rcx [ rbx + 0x110 ]
call sub_18000e204
mov rcx [ rbx + 0x118 ]
call sub_18000e204
mov rcx [ rbx + 0x120 ]
call sub_18000e204
mov rcx [ rbx + 0x128 ]
call sub_18000e204
mov rcx [ rbx + 0x130 ]
call sub_18000e204
mov rcx [ rbx + 0x138 ]
call sub_18000e204
mov rcx [ rbx + 0x140 ]
call sub_18000e204
mov rcx [ rbx + 0x148 ]
call sub_18000e204
mov rcx [ rbx + 0x150 ]
call sub_18000e204
mov rcx [ rbx + 0x170 ]
call sub_18000e204
mov rcx [ rbx + 0x178 ]
call sub_18000e204
mov rcx [ rbx + 0x180 ]
call sub_18000e204
mov rcx [ rbx + 0x188 ]
call sub_18000e204
mov rcx [ rbx + 0x190 ]
call sub_18000e204
mov rcx [ rbx + 0x198 ]
call sub_18000e204
mov rcx [ rbx + 0x168 ]
call sub_18000e204
mov rcx [ rbx + 0x1a8 ]
call sub_18000e204
mov rcx [ rbx + 0x1b0 ]
call sub_18000e204
mov rcx [ rbx + 0x1b8 ]
call sub_18000e204
mov rcx [ rbx + 0x1c0 ]
call sub_18000e204
mov rcx [ rbx + 0x1c8 ]
call sub_18000e204
mov rcx [ rbx + 0x1d0 ]
call sub_18000e204
mov rcx [ rbx + 0x1a0 ]
call sub_18000e204
mov rcx [ rbx + 0x1d8 ]
call sub_18000e204
mov rcx [ rbx + 0x1e0 ]
call sub_18000e204
mov rcx [ rbx + 0x1e8 ]
call sub_18000e204
mov rcx [ rbx + 0x1f0 ]
call sub_18000e204
mov rcx [ rbx + 0x1f8 ]
call sub_18000e204
mov rcx [ rbx + 0x200 ]
call sub_18000e204
mov rcx [ rbx + 0x208 ]
call sub_18000e204
mov rcx [ rbx + 0x210 ]
call sub_18000e204
mov rcx [ rbx + 0x218 ]
call sub_18000e204
mov rcx [ rbx + 0x220 ]
call sub_18000e204
mov rcx [ rbx + 0x228 ]
call sub_18000e204
mov rcx [ rbx + 0x230 ]
call sub_18000e204
mov rcx [ rbx + 0x238 ]
call sub_18000e204
mov rcx [ rbx + 0x240 ]
call sub_18000e204
mov rcx [ rbx + 0x248 ]
call sub_18000e204
mov rcx [ rbx + 0x250 ]
call sub_18000e204
mov rcx [ rbx + 0x258 ]
call sub_18000e204
mov rcx [ rbx + 0x260 ]
call sub_18000e204
mov rcx [ rbx + 0x268 ]
call sub_18000e204
mov rcx [ rbx + 0x270 ]
call sub_18000e204
mov rcx [ rbx + 0x278 ]
call sub_18000e204
mov rcx [ rbx + 0x280 ]
call sub_18000e204
mov rcx [ rbx + 0x288 ]
call sub_18000e204
mov rcx [ rbx + 0x290 ]
call sub_18000e204
mov rcx [ rbx + 0x298 ]
call sub_18000e204
mov rcx [ rbx + 0x2a0 ]
call sub_18000e204
mov rcx [ rbx + 0x2a8 ]
call sub_18000e204
mov rcx [ rbx + 0x2b0 ]
call sub_18000e204
mov rcx [ rbx + 0x2b8 ]
call sub_18000e204
add rsp 0x20
pop rbx
sub_1800126c4
test rcx rcx
je r-xdata
retn
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx ]
cmp rcx [ rw-data ]
je r-xdata
mov rcx [ rbx + 0x8 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x10 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x58 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x60 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
add rsp 0x20
pop rbx
call sub_18000e204
sub_180012730
test rcx rcx
je r-xdata
retn
push rbx
sub rsp 0x20
mov rbx rcx
mov rcx [ rcx + 0x18 ]
cmp rcx [ rw-data ]
je r-xdata
mov rcx [ rbx + 0x20 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x28 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x30 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x38 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x40 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x48 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x68 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x70 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x78 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x80 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x88 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
mov rcx [ rbx + 0x90 ]
cmp rcx [ rw-data ]
je r-xdata
call sub_18000e204
add rsp 0x20
pop rbx
call sub_18000e204
sub_18001283c
push rbp
push r12
push r13
push r14
push r15
sub rsp 0x50
lea rbp [ rsp + 0x40 ]
mov [ rbp + 0x40 ] rbx
mov [ rbp + 0x48 ] rsi
mov [ rbp + 0x50 ] rdi
mov rax [ rw-data ]
xor rax rbp
mov [ rbp + 0x8 ] rax
mov ebx [ rbp + 0x60 ]
xor edi edi
mov r14 r9
mov r15d r8d
mov [ rbp ] edx
test ebx ebx
jle r-xdata
mov r12d [ rbp + 0x78 ]
mov esi edi
test r12d r12d
jne r-xdata
mov r10d ebx
mov rax r9
neg [ rbp + 0x80 ]
mov r9d ebx
mov r8 r14
sbb edx edx
mov ecx r12d
mov [ rsp + 0x28 ] edi
and edx 0x8
mov [ rsp + 0x20 ] rdi
inc edx
call [ MultiByteToWideChar@IAT ]
movsxd r13 eax
test eax eax
jne r-xdata
mov rax [ rcx ]
mov r12d [ rax + 0x4 ]
mov eax ebx
sub eax r10d
dec eax
cmp eax ebx
lea ebx [ rax + 0x1 ]
jl r-xdata
inc rax
test r10d r10d
jne r-xdata
mov r8 0xffffffffffffff0
test eax eax
jle r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
dec r10d
cmp [ rax ] dil
je r-xdata
or r10d 0xffffffff
test rdi rdi
je r-xdata
xor edx edx
lea rax [ rdx - 0x20 ]
div r13
cmp rax 0x2
jb r-xdata
mov rcx [ rbp + 0x8 ]
xor rcx rbp
call sub_18000dc90
mov rbx [ rbp + 0x40 ]
mov rsi [ rbp + 0x48 ]
mov rdi [ rbp + 0x50 ]
lea rsp [ rbp + 0x10 ]
pop r15
pop r14
pop r13
pop r12
pop rbp
retn
mov r9d ebx
mov r8 r14
mov edx 0x1
mov ecx r12d
mov [ rsp + 0x28 ] r13d
mov [ rsp + 0x20 ] rdi
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea rcx [ r13 + r13 + 0x10 ]
cmp rcx 0x400
ja r-xdata
lea rcx [ rdi - 0x10 ]
cmp [ rcx ] 0xdddd
jne r-xdata
mov r14d [ rbp ]
and [ rsp + 0x28 ] esi
and [ rsp + 0x20 ] rsi
mov ecx r14d
mov r9d r13d
mov r8 rdi
mov edx r15d
call [ LCMapStringW@IAT ]
movsxd rsi eax
test eax eax
je r-xdata
call sub_18000e648
mov rdi rax
test rax rax
je r-xdata
lea rax [ rcx + 0xf ]
cmp rax rcx
ja r-xdata
mov eax esi
call sub_18000e204
mov r8d 0x400
test r8d r15d
je r-xdata
mov [ rax ] 0xdddd
and rax 0xfffffffffffffff0
call sub_180012de0
sub rsp rax
lea rdi [ rsp + 0x40 ]
test rdi rdi
je r-xdata
mov rax r8
test eax eax
jle r-xdata
mov ecx [ rbp + 0x70 ]
test ecx ecx
je r-xdata
mov [ rdi ] 0xcccc
jmp r-xdata
xor ebx ebx
xor edx edx
lea rax [ rdx - 0x20 ]
div rsi
cmp rax 0x2
jb r-xdata
cmp esi ecx
jg r-xdata
add rdi 0x10
mov r9d r13d
mov r8 rdi
mov edx r15d
mov ecx r14d
mov [ rsp + 0x28 ] esi
mov [ rsp + 0x20 ] rbx
call [ LCMapStringW@IAT ]
xor ecx ecx
test eax eax
je r-xdata
lea rcx [ rsi + rsi + 0x10 ]
cmp rcx r8
ja r-xdata
mov rax [ rbp + 0x68 ]
mov [ rsp + 0x28 ] ecx
mov r9d r13d
mov r8 rdi
mov edx r15d
mov ecx r14d
mov [ rsp + 0x20 ] rax
call [ LCMapStringW@IAT ]
jmp r-xdata
lea rcx [ rbx - 0x10 ]
cmp [ rcx ] 0xdddd
jne r-xdata
mov eax [ rbp + 0x70 ]
xor edx edx
mov [ rsp + 0x38 ] rcx
mov r9d esi
mov r8 rbx
mov [ rsp + 0x30 ] rcx
test eax eax
jne r-xdata
call sub_18000e648
mov rbx rax
test rax rax
je r-xdata
lea rax [ rcx + 0xf ]
cmp rax rcx
ja r-xdata
call sub_18000e204
mov [ rsp + 0x28 ] eax
mov rax [ rbp + 0x68 ]
mov [ rsp + 0x20 ] rax
mov [ rsp + 0x28 ] ecx
mov [ rsp + 0x20 ] rcx
jmp r-xdata
test rbx rbx
je r-xdata
mov [ rax ] 0xdddd
and rax 0xfffffffffffffff0
call sub_180012de0
sub rsp rax
lea rbx [ rsp + 0x40 ]
test rbx rbx
je r-xdata
mov rax 0xffffffffffffff0
mov ecx r12d
call [ WideCharToMultiByte@IAT ]
mov esi eax
mov [ rbx ] 0xcccc
jmp r-xdata
add rbx 0x10
jmp r-xdata
sub_180012b08
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x70
mov esi edx
mov rdx rcx
lea rcx [ rsp + 0x50 ]
mov rbx r9
mov edi r8d
call sub_180011288
mov eax [ rsp + 0xb8 ]
mov r11d [ rsp + 0xc0 ]
lea rcx [ rsp + 0x50 ]
mov [ rsp + 0x40 ] r11d
mov [ rsp + 0x38 ] eax
mov eax [ rsp + 0xb0 ]
mov [ rsp + 0x30 ] eax
mov rax [ rsp + 0xa8 ]
mov r9 rbx
mov [ rsp + 0x28 ] rax
mov eax [ rsp + 0xa0 ]
mov r8d edi
mov edx esi
mov [ rsp + 0x20 ] eax
call sub_18001283c
cmp [ rsp + 0x68 ] 0x0
je r-xdata
lea r11 [ rsp + 0x70 ]
mov rbx [ r11 + 0x10 ]
mov rsi [ r11 + 0x18 ]
mov rsp r11
pop rdi
retn
mov rcx [ rsp + 0x60 ]
and [ rcx + 0xc8 ] 0xfffffffd
sub_180012ba0
push rbp
push r12
push r13
push r14
push r15
sub rsp 0x40
lea rbp [ rsp + 0x30 ]
mov [ rbp + 0x40 ] rbx
mov [ rbp + 0x48 ] rsi
mov [ rbp + 0x50 ] rdi
mov rax [ rw-data ]
xor rax rbp
mov [ rbp ] rax
mov esi [ rbp + 0x68 ]
xor edi edi
mov r13d r9d
mov r14 r8
mov r15d edx
test esi esi
jne r-xdata
neg [ rbp + 0x70 ]
mov ecx esi
mov [ rsp + 0x28 ] edi
sbb edx edx
mov [ rsp + 0x20 ] rdi
and edx 0x8
inc edx
call [ MultiByteToWideChar@IAT ]
movsxd r12 eax
test eax eax
jne r-xdata
mov rax [ rcx ]
mov esi [ rax + 0x4 ]
jle r-xdata
xor eax eax
jmp r-xdata
mov rbx rdi
mov rax 0x7ffffffffffffff0
cmp r12 rax
ja r-xdata
mov rcx [ rbp ]
xor rcx rbp
call sub_18000dc90
mov rbx [ rbp + 0x40 ]
mov rsi [ rbp + 0x48 ]
mov rdi [ rbp + 0x50 ]
lea rsp [ rbp + 0x10 ]
pop r15
pop r14
pop r13
pop r12
pop rbp
retn
mov r8 r12
xor edx edx
mov rcx rbx
add r8 r8
call sub_180011dc0
mov r9d r13d
mov r8 r14
mov edx 0x1
mov ecx esi
mov [ rsp + 0x28 ] r12d
mov [ rsp + 0x20 ] rbx
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea rcx [ r12 + r12 + 0x10 ]
cmp rcx 0x400
ja r-xdata
lea rcx [ rbx - 0x10 ]
cmp [ rcx ] 0xdddd
jne r-xdata
mov r9 [ rbp + 0x60 ]
mov r8d eax
mov rdx rbx
mov ecx r15d
call [ GetStringTypeW@IAT ]
mov edi eax
call sub_18000e648
mov rbx rax
test rax rax
je r-xdata
lea rax [ rcx + 0xf ]
cmp rax rcx
ja r-xdata
mov eax edi
call sub_18000e204
test rbx rbx
je r-xdata
mov [ rax ] 0xdddd
and rax 0xfffffffffffffff0
call sub_180012de0
sub rsp rax
lea rbx [ rsp + 0x30 ]
test rbx rbx
je r-xdata
mov rax 0xffffffffffffff0
mov [ rbx ] 0xcccc
jmp r-xdata
add rbx 0x10
jmp r-xdata
sub_180012d00
mov [ rsp + 0x8 ] rbx
mov [ rsp + 0x10 ] rsi
push rdi
sub rsp 0x60
mov esi edx
mov rdx rcx
lea rcx [ rsp + 0x40 ]
mov ebx r9d
mov rdi r8
call sub_180011288
mov r11d [ rsp + 0xa8 ]
mov eax [ rsp + 0x98 ]
lea rcx [ rsp + 0x40 ]
mov [ rsp + 0x30 ] r11d
mov [ rsp + 0x28 ] eax
mov rax [ rsp + 0x90 ]
mov r9d ebx
mov r8 rdi
mov edx esi
mov [ rsp + 0x20 ] rax
call sub_180012ba0
cmp [ rsp + 0x58 ] 0x0
je r-xdata
mov rbx [ rsp + 0x70 ]
mov rsi [ rsp + 0x78 ]
add rsp 0x60
pop rdi
retn
mov rcx [ rsp + 0x50 ]
and [ rcx + 0xc8 ] 0xfffffffd
sub_180012d80
sub rsp 0x28
call sub_180011a10
test rax rax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
mov ecx 0x16
call sub_180011a20
mov ecx 0x3
call sub_18000f24c
int3
mov r8d 0x1
mov edx 0x40000015
lea ecx [ r8 + 0x2 ]
call sub_18000febc
sub_180012de0
sub rsp 0x10
mov [ rsp ] r10
mov [ rsp + 0x8 ] r11
xor r11 r11
lea r10 [ rsp + 0x18 ]
sub r10 rax
cmovb r10 r11
mov r11 [ gs : 0x10 ]
cmp r10 r11
jae r-xdata
mov r10 [ rsp ]
mov r11 [ rsp + 0x8 ]
add rsp 0x10
retn
and r10w 0xf000
lea r11 [ r11 - 0x1000 ]
mov [ r11 ] 0x0
cmp r10 r11
jne r-xdata
sub_180012e40
sub rdx rcx
cmp r8 0x8
jb r-xdata
test r8 r8
je r-xdata
test cl 0x7
je r-xdata
xor rax rax
retn
mov al [ rcx ]
cmp al [ rdx + rcx ]
jne r-xdata
mov r9 r8
shr r9 0x3
jne r-xdata
nop
sbb eax eax
sbb eax 0xffffffff
retn
inc rcx
dec r8
jne r-xdata
shr r9 0x2
je r-xdata
inc rcx
dec r8
test cl 0x7
jne r-xdata
mov r9 r8
shr r9 0x3
je r-xdata
mov rax [ rcx ]
cmp rax [ rdx + rcx ]
jne r-xdata
mov al [ rcx ]
cmp al [ rdx + rcx ]
jne r-xdata
mov rax [ rcx ]
cmp rax [ rdx + rcx ]
jne r-xdata
mov rcx [ rcx + rdx ]
bswap rax
bswap rcx
cmp rax rcx
sbb eax eax
sbb eax 0xffffffff
retn
mov rax [ rcx + 0x8 ]
cmp rax [ rdx + rcx + 0x8 ]
jne r-xdata
add rcx 0x8
dec r9
jne r-xdata
add rcx 0x8
mov rax [ rcx + 0x10 ]
cmp rax [ rdx + rcx + 0x10 ]
jne r-xdata
and r8 0x7
jmp r-xdata
add rcx 0x8
mov rax [ rcx + 0x18 ]
cmp rax [ rdx + rcx + 0x18 ]
jne r-xdata
add rcx 0x8
add rcx 0x20
dec r9
jne r-xdata
and r8 0x1f
sub_180012f20
test r8 r8
je r-xdata
xor rax rax
retn
sub rdx rcx
mov r9 rdx
mov r11 0x8101010101010100
test cl 0x7
je r-xdata
lea rdx [ rcx + r9 ]
and dx 0xfff
cmp dx 0xff8
ja r-xdata
mov al [ rcx ]
mov dl [ rcx + r9 ]
inc rcx
cmp al dl
jne r-xdata
mov rax [ rcx ]
mov rdx [ rcx + r9 ]
cmp rax rdx
jne r-xdata
sbb rax rax
sbb rax 0xffffffffffffffff
retn
dec r8
je r-xdata
add rcx 0x8
sub r8 0x8
mov r10 0x7efefefefefefeff
jbe r-xdata
test al al
je r-xdata
xor rax 0xffffffffffffffff
add r10 rdx
xor rax r10
test r11 rax
je r-xdata
test rcx 0x7
jne r-xdata
jmp r-xdata
test dl dl
je r-xdata
xor rax rax
retn
test dh dh
je r-xdata
shr rdx 0x10
test dl dl
je r-xdata
test dh dh
je r-xdata
shr rdx 0x10
test dl dl
je r-xdata
test dh dh
je r-xdata
shr edx 0x10
test dl dl
je r-xdata
test dh dh
jne r-xdata
sub_180012ff0
mov rax rsp
mov [ rax + 0x8 ] rbx
mov [ rax + 0x10 ] rbp
mov [ rax + 0x18 ] rsi
mov [ rax + 0x20 ] rdi
push r12
sub rsp 0x20
mov r10 [ r9 + 0x38 ]
mov rsi rdx
mov r12 r8
mov eax [ r10 ]
mov rbp rcx
mov rdx r9
add rax rax
mov rcx rsi
mov rdi r9
lea rbx [ r10 + rax * 8 + 0x4 ]
mov r8 rbx
call sub_180011d2c
mov r11d [ rbx ]
mov r10d [ rbp + 0x4 ]
mov eax r11d
and r11d 0x2
mov edx 0x1
and eax edx
and r10b 0x66
cmove r11d eax
test r11d r11d
je r-xdata
mov rbx [ rsp + 0x30 ]
mov rbp [ rsp + 0x38 ]
mov rsi [ rsp + 0x40 ]
mov rdi [ rsp + 0x48 ]
mov eax edx
add rsp 0x20
pop r12
retn
mov r9 rdi
mov r8 r12
mov rdx rsi
mov rcx rbp
call sub_18000e7d0
mov edx eax
sub_180013260
push rbp
sub rsp 0x40
mov rbp rdx
cmp [ rbp + 0x74 ] 0x0
jne r-xdata
cmp [ rbp + 0x40 ] 0x0
je r-xdata
mov rcx [ rbp + 0x60 ]
call sub_18000a460
nop
mov rax [ rbp + 0xe8 ]
mov [ rax ] 0x0
cmp [ rbp + 0x68 ] 0x0
je r-xdata
mov rcx [ rbp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x2e8 ]
nop
cmp [ rbp + 0x50 ] 0x0
je r-xdata
mov rcx [ rbp + 0x68 ]
mov rax [ rw-data ]
call [ rax + 0x2e8 ]
nop
cmp [ rbp + 0x58 ] 0xffffffffffffffff
je r-xdata
xor edx edx
mov rcx [ rbp + 0x50 ]
mov rax [ rw-data ]
call [ rax + 0x2e0 ]
nop
add rsp 0x40
pop rbp
retn
mov rcx [ rbp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
nop
sub_180013330
push rbp
sub rsp 0x40
mov rbp rdx
lea rcx [ rbp + 0x48 ]
call sub_1800052d0
nop
cmp [ rbp + 0x44 ] 0x0
je r-xdata
add rsp 0x40
pop rbp
retn
call sub_18000b380
nop
sub_180013360
push rbp
sub rsp 0x40
mov rbp rdx
cmp [ rbp + 0x48 ] 0x0
je r-xdata
cmp [ rbp + 0x40 ] 0xffffffffffffffff
je r-xdata
mov rcx [ rbp + 0x90 ]
call [ rw-data ]
nop
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rbp + 0x90 ]
mov rcx [ rbp + 0xa8 ]
call sub_18000a2e0
nop
add rsp 0x40
pop rbp
retn
mov rcx [ rbp + 0x40 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
nop
sub_1800133c0
push rbp
sub rsp 0x40
mov rbp rdx
cmp [ rbp + 0x70 ] 0x0
je r-xdata
cmp [ rbp + 0x68 ] 0xffffffffffffffff
je r-xdata
mov rcx [ rbp + 0xa0 ]
call [ rw-data ]
nop
cdqe
shl rax 0x1
mov r8d eax
mov rdx [ rbp + 0xa0 ]
mov rcx [ rbp + 0xa8 ]
call sub_18000a2e0
nop
add rsp 0x40
pop rbp
retn
mov rcx [ rbp + 0x68 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
nop
sub_180013440
push rbp
sub rsp 0x40
mov rbp rdx
mov rcx [ rbp + 0x88 ]
call sub_18000a460
nop
cmp [ rw-data ] 0x0
je r-xdata
add rsp 0x40
pop rbp
retn
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
nop
sub_180013480
push rbp
sub rsp 0x30
mov rbp rdx
cmp [ rw-data ] 0x0
je r-xdata
mov rcx [ rbp + 0x38 ]
call sub_18000a460
nop
mov [ rbp + 0x38 ] 0x0
add rsp 0x30
pop rbp
retn
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
nop
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
nop
mov [ rw-data ] 0x0
sub_180013530
push rbp
sub rsp 0x20
mov rbp rdx
cmp [ rw-data ] 0x0
je r-xdata
add rsp 0x20
pop rbp
retn
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
nop
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
nop
mov [ rw-data ] 0x0
sub_180013580
push rbp
sub rsp 0x40
mov rbp rdx
cmp [ rbp + 0x58 ] 0xffffffffffffffff
je r-xdata
mov rcx [ rbp + 0x70 ]
call sub_18000a460
nop
mov rcx [ rbp + 0x80 ]
call sub_18000a460
nop
add rsp 0x40
pop rbp
retn
mov rcx [ rbp + 0x58 ]
mov rax [ rw-data ]
call [ rax + 0x28 ]
nop
sub_180001110
mov [ rsp + 0x8 ] rcx
sub rsp 0x28
mov rcx [ rsp + 0x30 ]
call sub_180001130
mov rax [ rsp + 0x30 ]
add rsp 0x28
retn
sub_180001130
mov [ rsp + 0x8 ] rcx
mov rax [ rsp + 0x8 ]
retn
sub_180001140
mov [ rsp + 0x8 ] rcx
mov rax [ rsp + 0x8 ]
lea rcx [ r--data ]
mov [ rax ] rcx
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
retn
sub_180001170
mov [ rsp + 0x8 ] rcx
sub rsp 0x18
mov rax [ rsp + 0x20 ]
mov eax [ rax + 0x8 ]
inc eax
mov [ rsp ] eax
mov rax [ rsp + 0x20 ]
mov ecx [ rsp ]
mov [ rax + 0x8 ] ecx
mov eax [ rsp ]
add rsp 0x18
retn
sub_180001340
mov [ rsp + 0x8 ] rcx
mov rax [ rsp + 0x8 ]
lea rcx [ r--data ]
mov [ rax ] rcx
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
retn
InitW
sub rsp 0x28
call sub_180003250
test eax eax
je r-xdata
xor eax eax
add rsp 0x28
retn
mov edx 0xffffffff
mov rcx [ rw-data ]
call [ WaitForSingleObject@IAT ]
sub_1800038f3
jmp r-xdata
jmp sub_18000390f
sub_18000390f
mov rax [ rw-data ]
call [ rax + 0x48 ]
mov rcx [ rsp + 0x100 ]
xor rcx rsp
call sub_18000dc90
add rsp 0x110
pop rdi
retn
sub_180003940
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x28
mov edx 0x1
mov rax [ rsp + 0x38 ]
mov ecx [ rax ]
call sub_18000b8d0
add rsp 0x28
retn
sub_180003b80
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x28
xor r9d r9d
mov r8 [ rsp + 0x40 ]
mov rdx [ rsp + 0x38 ]
mov ecx [ rsp + 0x30 ]
call sub_180007230
add rsp 0x28
retn
sub_180003bb0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x28
mov r9d 0x1
mov r8 [ rsp + 0x40 ]
mov rdx [ rsp + 0x38 ]
mov ecx [ rsp + 0x30 ]
call sub_180007230
add rsp 0x28
retn
sub_1800046c0
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x28
mov rcx [ rsp + 0x40 ]
call sub_18000bda0
add rsp 0x28
retn
sub_180004810
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x38
mov rcx [ rsp + 0x48 ]
mov rax [ rw-data ]
call [ rax + 0x278 ]
mov [ rsp + 0x20 ] eax
mov ecx [ rsp + 0x20 ]
call sub_18000c1b0
add rsp 0x38
retn
sub_180004850
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x28
mov rcx [ rsp + 0x40 ]
call sub_180006f50
add rsp 0x28
retn
sub_180004880
mov [ rsp + 0x18 ] r8
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] ecx
sub rsp 0x28
lea rax [ rw-data ]
add rax 0xec
mov rdx [ rsp + 0x40 ]
mov rcx rax
call sub_18000c240
add rsp 0x28
retn
sub_180004bc0
sub rsp 0x28
mov r8 [ rw-data ]
xor edx edx
mov rcx [ rw-data ]
call [ rw-data ]
add rsp 0x28
retn
sub_1800057a0
mov [ rsp + 0x10 ] edx
mov [ rsp + 0x8 ] rcx
mov eax [ rsp + 0x10 ]
add eax 0x6
mov eax eax
mov rcx [ rsp + 0x8 ]
mov rcx [ rcx + 0x8 ]
movzx eax [ rax + rcx ]
retn
sub_1800057c0
mov [ rsp + 0x18 ] r8d
mov [ rsp + 0x10 ] rdx
mov [ rsp + 0x8 ] rcx
sub rsp 0x38
mov [ rsp + 0x20 ] 0x0
xor r9d r9d
mov r8d [ rsp + 0x50 ]
mov rdx [ rsp + 0x48 ]
mov rcx [ rsp + 0x40 ]
call sub_180005330
add rsp 0x38
retn
DllCanUnloadNow
cmp [ rw-data ] 0x0
jne r-xdata
mov eax 0x1
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
retn
sub_18000dc90
cmp rcx [ rw-data ]
jne r-xdata
jmp sub_18000e0b8
rol rcx 0x10
test cx 0xffff
jne r-xdata
ror rcx 0x10
retn
j_sub_18000e204
jmp sub_18000e204
sub_18000dcf4
lea rax [ r--data ]
mov [ rcx ] rax
jmp sub_18000e468
sub_18000dd40
push rbx
sub rsp 0x20
mov rbx rcx
call sub_18000e4b4
lea r11 [ r--data ]
mov [ rbx ] r11
mov rax rbx
add rsp 0x20
pop rbx
retn
sub_18000e368
sbb rax rax
sbb rax 0xffffffffffffffff
retn
sub_18000e370
lea rax [ r--data ]
mov [ rcx ] rax
mov rax [ rdx ]
mov [ rcx + 0x10 ] 0x0
mov [ rcx + 0x8 ] rax
mov rax rcx
retn
sub_18000e38c
cmp [ rcx + 0x8 ] 0x0
lea rax [ r--data ]
cmovne rax [ rcx + 0x8 ]
retn
sub_18000e3fc
push rbx
sub rsp 0x20
cmp [ rcx + 0x10 ] 0x0
mov rbx rcx
je r-xdata
and [ rbx + 0x8 ] 0x0
mov [ rbx + 0x10 ] 0x0
add rsp 0x20
pop rbx
retn
mov rcx [ rcx + 0x8 ]
call sub_18000e204
sub_18000e468
lea rax [ r--data ]
mov [ rcx ] rax
jmp sub_18000e3fc
sub_18000e4b4
push rbx
sub rsp 0x20
and [ rcx + 0x8 ] 0x0
lea rax [ r--data ]
mov rbx rcx
mov [ rcx ] rax
mov [ rcx + 0x10 ] 0x0
call sub_18000e424
mov rax rbx
add rsp 0x20
pop rbx
retn
sub_18000e630
sub rsp 0x28
call sub_18000e524
neg rax
sbb eax eax
neg eax
dec eax
add rsp 0x28
retn
sub_18000e700
mov [ rw-data ] rcx
retn
sub_18000e9dc
xor eax eax
retn
sub_18000e9e0
sub rsp 0x28
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
add rsp 0x28
jmp sub_180010150
call [ FlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_18000ef28
push rbx
sub rsp 0x20
mov ebx ecx
call sub_18000eeec
mov ecx ebx
call [ ExitProcess@IAT ]
sub_18000ef40
mov ecx 0x8
jmp sub_1800102d8
sub_18000ef4c
mov ecx 0x8
jmp sub_1800101d8
sub_18000f24c
xor r8d r8d
lea edx [ r8 + 0x1 ]
jmp sub_18000f0bc
sub_18000f258
xor edx edx
xor ecx ecx
lea r8d [ rdx + 0x1 ]
jmp sub_18000f0bc
sub_18000f268
push rbx
sub rsp 0x20
mov ebx ecx
call sub_18001077c
mov ecx ebx
call sub_18001051c
xor r8d r8d
mov ecx 0xff
lea edx [ r8 + 0x1 ]
call sub_18000f0bc
int3
sub_18000fb8c
sub rsp 0x28
mov rcx [ rw-data ]
call [ HeapDestroy@IAT ]
and [ rw-data ] 0x0
add rsp 0x28
retn
sub_18000fd7c
mov eax 0xe06d7363
cmp ecx eax
jne r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_18000fbac
sub_18000feb4
mov [ rw-data ] rcx
retn
sub_1800100ac
sub rsp 0x38
and [ rsp + 0x20 ] 0x0
xor r9d r9d
xor r8d r8d
xor edx edx
xor ecx ecx
call sub_18001003c
add rsp 0x38
retn
sub_1800101d8
movsxd rcx ecx
lea rax [ rw-data ]
add rcx rcx
mov rcx [ rax + rcx * 8 ]
jmp [ LeaveCriticalSection@IAT ]
sub_180010450
sub rsp 0x4d8
xor r8 r8
xor r9 r9
mov [ rsp + 0x20 ] rsp
mov [ rsp + 0x28 ] r8
call RtlUnwindEx
add rsp 0x4d8
retn
sub_180010480
mov [ rsp + 0x8 ] rcx
mov [ rsp + 0x18 ] rdx
mov [ rsp + 0x10 ] r8d
mov r9 0x19930520
jmp sub_1800104a0
sub_1800104a0
retn
sub_1800104b0
retn
sub_180011814
sub rsp 0x28
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
add rsp 0x28
retn
mov ecx 0xfffffffd
call sub_180011634
mov [ rw-data ] 0x1
sub_1800119ac
sub rsp 0x28
call sub_18000eb44
mov rcx [ rax + 0xd0 ]
test rcx rcx
je r-xdata
call sub_180012d80
call rcx
jmp r-xdata
sub_1800119ca
add rsp 0x28
retn
sub_1800119d0
sub rsp 0x28
lea rcx [ sub_1800119ac ]
call [ EncodePointer@IAT ]
mov [ rw-data ] rax
add rsp 0x28
retn
sub_1800119f0
mov [ rw-data ] rcx
mov [ rw-data ] rcx
mov [ rw-data ] rcx
mov [ rw-data ] rcx
retn
sub_180011a10
mov rcx [ rw-data ]
jmp [ DecodePointer@IAT ]
sub_180011c54
mov [ rw-data ] rcx
retn
sub_180011c5c
mov [ rw-data ] rcx
retn
sub_180011d18
mov edx ecx
mov r9d 0x4
xor r8d r8d
xor ecx ecx
jmp sub_180011c9c
sub_180011d90
sub rsp 0x28
mov r8 [ r9 + 0x38 ]
mov rcx rdx
mov rdx r9
call sub_180011d2c
mov eax 0x1
add rsp 0x28
retn
sub_18001220c
mov rax rcx
movzx edx [ rax ]
add rax 0x2
test dx dx
jne r-xdata
sub rax rcx
sar rax 0x1
dec rax
retn
RtlVirtualUnwind
jmp [ RtlVirtualUnwind@IAT ]
RtlLookupFunctionEntry
jmp [ RtlLookupFunctionEntry@IAT ]
RtlPcToFileHeader
jmp [ RtlPcToFileHeader@IAT ]
RtlUnwindEx
jmp [ RtlUnwindEx@IAT ]
sub_180013090
push rbp
sub rsp 0x20
mov rbp rdx
cmp [ rbp + 0x40 ] 0x0
jne r-xdata
add rsp 0x20
pop rbp
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
call sub_18000e9e0
nop
sub_1800130b6
push rbp
sub rsp 0x20
mov rbp rdx
mov rax [ rcx ]
mov rdx rcx
mov ecx [ rax ]
call sub_18000fd7c
nop
add rsp 0x20
pop rbp
retn
sub_1800130d4
push rbp
sub rsp 0x20
mov rbp rdx
mov ecx 0xe
call sub_1800101d8
nop
add rsp 0x20
pop rbp
retn
sub_1800130ef
push rbp
sub rsp 0x20
mov rbp rdx
call sub_18000ef4c
nop
add rsp 0x20
pop rbp
retn
sub_180013105
push rbp
sub rsp 0x20
mov rbp rdx
mov ecx 0xd
call sub_1800101d8
nop
add rsp 0x20
pop rbp
retn
sub_180013125
push rbp
sub rsp 0x20
mov rbp rdx
mov ecx 0xc
call sub_1800101d8
nop
add rsp 0x20
pop rbp
retn
sub_180013140
push rbp
sub rsp 0x20
mov rbp rdx
cmp [ rbp + 0x80 ] 0x0
je r-xdata
add rsp 0x20
pop rbp
retn
mov ecx 0x8
call sub_1800101d8
nop
sub_180013164
push rbp
sub rsp 0x20
mov rbp rdx
mov rcx [ rw-data ]
call [ LeaveCriticalSection@IAT ]
nop
add rsp 0x20
pop rbp
retn
sub_180013190
push rbp
sub rsp 0x20
mov rbp rdx
mov rax [ rcx ]
xor ecx ecx
cmp [ rax ] 0xc0000005
sete cl
mov eax ecx
mov eax ecx
add rsp 0x20
pop rbp
retn
sub_1800131b2
push rbp
sub rsp 0x20
mov rbp rdx
mov ecx 0xc
call sub_1800101d8
nop
add rsp 0x20
pop rbp
retn
sub_1800131cd
push rbp
sub rsp 0x20
mov rbp rdx
mov ecx 0xd
call sub_1800101d8
nop
add rsp 0x20
pop rbp
retn
sub_1800131e8
push rbp
sub rsp 0x20
mov rbp rdx
cmp [ rbp + 0x60 ] 0x0
je r-xdata
add rsp 0x20
pop rbp
retn
xor ecx ecx
call sub_1800101d8
nop
sub_180013210
push rbp
sub rsp 0x30
mov rbp rdx
cmp [ rbp + 0x30 ] 0x0
je r-xdata
add rsp 0x30
pop rbp
retn
mov rcx [ rbp + 0x30 ]
mov rax [ rw-data ]
call [ rax + 0x140 ]
nop
sub_180013240
push rbp
sub rsp 0x30
mov rbp rdx
mov rcx [ rbp + 0x38 ]
call sub_18000a460
nop
add rsp 0x30
pop rbp
retn
sub_180013300
push rbp
sub rsp 0x60
mov rbp rdx
cmp [ rbp + 0x888 ] 0x0
je r-xdata
add rsp 0x60
pop rbp
retn
mov rcx [ rbp + 0x888 ]
mov rax [ rw-data ]
call [ rax + 0x140 ]
nop
sub_180013420
push rbp
sub rsp 0x30
mov rbp rdx
mov rcx [ rbp + 0x70 ]
call sub_18000a460
nop
add rsp 0x30
pop rbp
retn
sub_1800134e0
push rbp
sub rsp 0x20
mov rbp rdx
lea rcx [ rbp + 0x38 ]
call sub_1800052d0
nop
mov rcx [ rbp + 0x28 ]
call sub_18000a460
nop
add rsp 0x20
pop rbp
retn
sub_180013510
push rbp
sub rsp 0x30
mov rbp rdx
lea rcx [ rbp + 0x38 ]
call sub_1800052d0
nop
add rsp 0x30
pop rbp
retn
sub_1800135c0
push rbp
sub rsp 0x20
mov rbp rdx
cmp [ rw-data ] 0x0
je r-xdata
add rsp 0x20
pop rbp
retn
mov rcx [ rw-data ]
mov rax [ rw-data ]
call [ rax + 0xe8 ]
nop
sub_1800135f0
push rbp
sub rsp 0x30
mov rbp rdx
cmp [ rbp + 0x30 ] 0x0
jne r-xdata
add rsp 0x30
pop rbp
retn
call sub_180002fe0
nop
sub_18001360c
lea rax [ r--data ]
lea rcx [ rw-data ]
mov [ rw-data ] rax
jmp sub_18000e468
