sub_4013c7
add [ ebx + 0x43 ] al
jb rwxdata
fbld [ ecx ]
clc
xchg esp eax
push 0x2e86f851
stc
iretd
arpl [ edi + 0x64 ] bp
imul ebp [ ebp + 0x44 ] 0x636f
add [ ebx + 0x43 ] al
jb rwxdata
push edi
inc edx
mov [ cs : esi - 0x7603ae9f ] 0x72
clc
mov ch [ esi ]
stc
add edi [ esi ]
push es
imul eax [ ecx ] 0x97d742db
inc ebx
mov dl [ edi + eax + 0xd ]
inc ebx
or [ edx + 0x38f1e8a ] 0xd7100a54
mov dl [ 0xffffffff8a4397b1 ]
push esp
pop es
pop es
pop esi
or [ edx + 0x38f1e8a ] 0xd7b00354
mov dl [ ebx ]
das
pop ebx
sar [ esi - 0x29 ] cl
pop es
add edx [ ecx + 0x6 ]
rcr [ edi ] cl
pushfd
add eax ebp
push esp
pop es
add edx [ ecx - 0x2d ]
inc edx
popfd
push edx
jae rwxdata
arpl [ edi + 0x64 ] bp
imul ebp [ ebp + 0x56 ] 0x776569
add [ edx + 0x5b ] bl
push es
pop es
xchg esi eax
into
add edx [ ecx + 0x7 ]
cmpsb [ esi ] [ edi ]
int3
add [ edi + 0x5bda87b9 ] ah
push es
add cl [ edx + eax * 2 - 0x7813a93c ]
pop edx
pop ebx
add al 0xdb
adc eax eax
or ah [ esi + eax ]
pop es
pop edx
push ebx
test eax 0x307d4bd
push ecx
rol [ ebx + 0x3065b55 ] 0x59
push cs
mov ebp 0x5a720ad1
pop ebx
push es
add [ edx + 0x75183b9 ] ah
pop es
stosd [ edi ]
int 0xf9
push ebp
push ebx
jae rwxdata
push esp
pop es
add eax [ 0x5403 ]
cmpsb [ esi ] [ edi ]
xchg ebp eax
scasb [ edi ]
push esi
push edi
add ebx [ ebx + 0x6 ]
add ebx ebp
xchg ecx eax
cld
add [ edi ] eax
pop es
pop edx
ficom [ eax + 0x36d54fc ]
push ecx
pop es
mov al 0x67
add eax [ esi ]
add edx [ esi - 0x6b ]
out 0x46 al
fld [ edi ]
add edx [ ecx - 0x26 ]
xchg ecx eax
movsd [ edi ] [ esi ]
pop ebx
push es
add esi [ ebp + 0x751fcb1 ]
or eax 0xfff9ede5
loop rwxdata
salc
stc
imul eax [ esi + 0x6d ] 0x6d063b11
pop edx
pop ebx
push es
cmpsb [ esi ] [ edi ]
retn 0x3f8
cmp edx [ edi + 0x7 ]
mov edi [ ecx ]
push edi
pop esi
or al 0xa4
push esi
add edx [ ecx + eax - 0x4e ]
xlat
mov al [ edi + 0x6b065b5a ]
push esp
insd
add edi [ ebx ]
add al 0x6d
pop edx
pop ebx
push es
cmp [ edi + eax ] 0x69
pop ecx
jb rwxdata
pop edx
pop eax
std
test ecx ebx
pop es
add edx [ eax + 0x16 ]
out dx al
pop edi
pop es
sti
xlat
out 0x56 eax
scasb [ edi ]
push edi
jecxz rwxdata
push esp
insd
add edi [ ebx ]
push edi
pop es
xchg esi eax
lahf
test edi ebp
fist [ edx + 0x2 ]
fild [ edi ]
sub_401446
and eax edi
push ebx
add [ edi + 0x57 ] edx
inc edx
mov [ cs : esi - 0x7603ae9f ] 0x72
clc
mov ch [ esi ]
stc
add edi [ esi ]
push es
imul eax [ ecx ] 0x97d742db
inc ebx
mov dl [ edi + eax + 0xd ]
inc ebx
or [ edx + 0x38f1e8a ] 0xd7100a54
mov dl [ 0xffffffff8a4397b1 ]
push esp
pop es
pop es
pop esi
or [ edx + 0x38f1e8a ] 0xd7b00354
mov dl [ ebx ]
das
pop ebx
sar [ esi - 0x29 ] cl
pop es
add edx [ ecx + 0x6 ]
rcr [ edi ] cl
pushfd
add eax ebp
push esp
pop es
add edx [ ecx - 0x2d ]
inc edx
popfd
push edx
jae rwxdata
add [ edi + 0x5bda87b9 ] ah
push es
add cl [ edx + eax * 2 - 0x7813a93c ]
pop edx
pop ebx
add al 0xdb
adc eax eax
or ah [ esi + eax ]
pop es
pop edx
push ebx
test eax 0x307d4bd
push ecx
rol [ ebx + 0x3065b55 ] 0x59
push cs
mov ebp 0x5a720ad1
pop ebx
push es
add [ edx + 0x75183b9 ] ah
pop es
stosd [ edi ]
int 0xf9
push ebp
push ebx
jae rwxdata
push esp
pop es
add eax [ 0x5403 ]
cmpsb [ esi ] [ edi ]
xchg ebp eax
scasb [ edi ]
push esi
push edi
add ebx [ ebx + 0x6 ]
add ebx ebp
xchg ecx eax
cld
add [ edi ] eax
pop es
pop edx
ficom [ eax + 0x36d54fc ]
push ecx
pop es
mov al 0x67
add eax [ esi ]
add edx [ esi - 0x6b ]
out 0x46 al
fld [ edi ]
add edx [ ecx - 0x26 ]
xchg ecx eax
movsd [ edi ] [ esi ]
pop ebx
push es
add esi [ ebp + 0x751fcb1 ]
or eax 0xfff9ede5
loop rwxdata
salc
stc
imul eax [ esi + 0x6d ] 0x6d063b11
pop edx
pop ebx
push es
cmpsb [ esi ] [ edi ]
retn 0x3f8
cmp edx [ edi + 0x7 ]
mov edi [ ecx ]
push edi
pop esi
or al 0xa4
push esi
add edx [ ecx + eax - 0x4e ]
xlat
mov al [ edi + 0x6b065b5a ]
push esp
insd
add edi [ ebx ]
add al 0x6d
pop edx
pop ebx
push es
cmp [ edi + eax ] 0x69
pop ecx
jb rwxdata
pop edx
pop eax
std
test ecx ebx
pop es
add edx [ eax + 0x16 ]
out dx al
pop edi
pop es
sti
xlat
out 0x56 eax
scasb [ edi ]
push edi
jecxz rwxdata
push esp
insd
add edi [ ebx ]
push edi
pop es
xchg esi eax
lahf
test edi ebp
fist [ edx + 0x2 ]
fild [ edi ]
sub_401525
push ecx
adc al 0x8f
xor bl [ ebx + 0x6 ]
add esi ecx
xchg ecx eax
cld
push ecx
pop es
dec ecx
jpe rwxdata
cmp [ edi + eax ] 0x69
pop ecx
jb rwxdata
out 0x46 al
fld [ edi ]
add edx [ ecx - 0x26 ]
xchg ecx eax
movsd [ edi ] [ esi ]
pop ebx
push es
add esi [ ebp + 0x751fcb1 ]
or eax 0xfff9ede5
loop rwxdata
push esp
insd
add edi [ ebx ]
push edi
pop es
xchg esi eax
lahf
test edi ebp
fist [ edx + 0x2 ]
fild [ edi ]
pop edx
pop eax
std
test ecx ebx
pop es
add edx [ eax + 0x16 ]
out dx al
pop edi
pop es
sti
xlat
out 0x56 eax
scasb [ edi ]
push edi
jecxz rwxdata
cmp edx [ edi + 0x7 ]
mov edi [ ecx ]
push edi
pop esi
or al 0xa4
push esi
add edx [ ecx + eax - 0x4e ]
xlat
mov al [ edi + 0x6b065b5a ]
push esp
insd
add edi [ ebx ]
add al 0x6d
pop edx
pop ebx
push es
salc
stc
imul eax [ esi + 0x6d ] 0x6d063b11
pop edx
pop ebx
push es
cmpsb [ esi ] [ edi ]
retn 0x3f8
sub_40179d
or [ esi ] ch
xor ecx [ esi ]
jbe rwxdata
mov eax [ ebx ]
push esp
pop es
add edx [ ecx + 0x7 ]
pmaxsw mm3 mm4
rol [ ebx ] 0x54
pop es
stosb [ edi ]
xbegin 0xfffffffff6e4bce7
pop es
add edx [ ecx + 0x7 ]
clc
movsd [ edi ] [ esi ]
mov ah 0x22
xchg [ ebx + 0x54065156 ] dl
push ecx
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
jmp 0xffffffffefc6a7dc
sub_4017ed
into
add al 0xa4
stc
std
mov ah 0x82
mov [ ecx + 0x7 ] dl
pop es
sti
int 0xf9
cld
stosd [ edi ]
stc
xlat
in al 0xf8
adc [ 0xffffffffd77e165b ] ch
pop ss
dec esi
scasb [ edi ]
daa
jb rwxdata
clc
movsd [ edi ] [ esi ]
mov ah 0x22
xchg [ ebx + 0x54065156 ] dl
push ecx
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
jmp 0xffffffffefc6a7dc
push eax
push es
add edx [ edx + ecx * 8 - 0x6b ]
scasb [ edi ]
push esi
clc
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cli
mov ds cx
or esi [ esi - 0x52 ]
inc eax
in al dx
pop edx
pop ebx
push es
mov esi 0xaefcf8c2
stc
shr edi cl
movsb [ edi ] [ esi ]
push edi
cld
stosd [ edi ]
stc
fcmovnu st4
mov al [ edi ]
pop edx
pop edx
cld
stosd [ edi ]
stc
fcmovnbe st4
sar al 0xa5
movsd [ edi ] [ esi ]
rol [ esi + 0x510307dd ] cl
mov esi 0x6c59a591
add edi [ esi ]
pcmpeqd mm3 mm2
push ecx
clc
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
rol bh cl
aad 0xeb
mov [ edi + eax ] al
pushfd
pop edx
sahf
push es
adc edx [ esi + 0x5f0f5cce ]
pop es
pop edx
pop ebx
mov bl 0x95
stosd [ edi ]
or esi [ esi - 0x52 ]
push edi
adc ebp [ edi ]
movsb [ edi ] [ esi ]
push ss
jbe rwxdata
push eax
[ edx + ecx * 4 ]
sub_401953
push eax
push es
push es
rcr [ ebx - 0x5 ] 0x3
mov esi 0x9a51de07
pop es
mov edi 0xbd034d5b
add dl [ edx + 0x51 ]
fiadd [ edi ]
pop edx
pop ebx
xor ch bl
push esp
pop es
add eax [ eax - 0x5bf3076f ]
stc
aam 0xb2
cld
push ecx
pop es
or dl [ ebp + 0x33 ]
or dh [ esi - 0x55 ]
clc
cld
mov eax [ 0xfffffffff7d38287 ]
jb rwxdata
push ecx
pop es
xchg edx eax
int3
lodsb [ esi ]
test [ ebx ] al
sub_4028dc
xlat
add [ ebx + 0x2e088d57 ] cl
pop ebx
inc [ eax - 0x45117364 ]
push es
vaddpd xmm0 xmm4 xmm0
and [ esp + eax + 0x3ccd2509 ] 0x5b
popfd
test [ 0xffffffff8330c7de ] eax
xor al 0xb
pop ss
rcl [ esi ] 0x1
jle rwxdata
pcmpeqd mm3 mm2
push eax
push ecx
mov dh 0xd0
push ebx
add edx [ eax - 0x3b ]
0xf8ae
sub_40295d
add dl [ ecx - 0x6f ]
cld
push es
push eax
push edi
pop edx
pop ebx
punpckhbw mm2 mm2
mov dl [ ebp - 0x57 ]
dec edx
mov [ 0x226ed6d ] cs
push 0xa9558ad2
rol [ edi ] 0x1
add edx [ ecx - 0x1e ]
xchg ecx eax
movsd [ edi ] [ esi ]
or eax 0x72a86906
cld
add edi edi
inc edx
xlat
pop edi
insb
pop ebp
sub ebp esp
add edx [ ecx + 0x72 ]
aaa
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
cli
aaa
rol eax 0x1
pop ebp
pop esp
jae rwxdata
clc
push esp
push ecx
insd
pop es
pop edx
fild [ esi ]
imul ebx [ ecx + 0x72 ] 0xffffffc3
pop edx
pop es
pop es
pop edx
mov esi 0x702fc90
imul ebp [ ebp - 0x5cf5078e ] 0x8cacfc73
and al [ edi ]
clc
pop es
xor [ ebx + 0x754fc73 ] ah
adc edx [ ecx + 0x6f ]
inc edi
xor [ ebx ] dh
jb rwxdata
ror [ edx - 0x73b556ab ] cl
or eax 0x226ed6d
test eax 0x60f9f9a4
mov edx 0xfcf8ae8e
outsb
out dx al
mov eax [ ebx ]
push esp
pop es
inc ebx
call 0x5b9a7bd9
push es
out 0xc2 al
clc
push ebp
push ecx
insd
sti
das
movsb [ edi ] [ esi ]
push esi
cld
stosd [ edi ]
std
aaa
aam 0x8a
pop es
pop edx
pop edx
push es
imul esi [ ecx - 0x7b57ec8e ] 0x6
fwait
fcom [ esi ]
sub_4029fe
xlat
pop es
add edx [ eax + 0x6 ]
xchg ecx eax
movsd [ edi ] [ esi ]
or al 0x51
push ebx
push esp
pop es
or bh [ edx ]
or [ edx + 0x335920c ] 0xc7e60754
clc
push ecx
pop ebx
xor edx edi
jbe rwxdata
test eax 0x60f9f9a4
mov edx 0xfcf8ae8e
outsb
out dx al
mov eax [ ebx ]
push esp
pop es
inc ebx
call 0x5b9a7bd9
push es
out 0xc2 al
clc
push ebp
push ecx
insd
sti
das
movsb [ edi ] [ esi ]
push esi
cld
stosd [ edi ]
std
aaa
aam 0x8a
pop es
pop edx
pop edx
push es
imul esi [ ecx - 0x7b57ec8e ] 0x6
fwait
fcom [ esi ]
push eax
add edx [ ecx + 0x6 ]
pop es
xor bh [ ebx + esi * 2 + 0x3065403 ]
test al 0x86
setpo al
add bh [ edx ]
add [ esi + 0x78e553a ] cl
pop edx
pop edx
sbb edx [ ebp + 0x62ca51ab ]
clc
clc
mov eax [ 0x548ebb6f ]
pop es
add bl [ edx - 0x7e ]
or [ edx + 0x6b ] bh
xor [ ebp + 0x78 ] ebx
sub [ esi - 0x203b0608 ] 0x9
and esp [ edi + 0x37 ]
outsb
xchg [ eax - 0x45 ] bl
mov al 0x7
sub_402a62
xlat
add ch al
push ebx
jb rwxdata
add edi [ esi ]
sti
jbe rwxdata
push edi
push ecx
or edi esi
sub eax [ esi - 0x1df8aefd ]
int3
add ebp [ eax - 0x2764f07a ]
add bh [ edx ]
add [ esi + 0x78e553a ] cl
pop edx
pop edx
sbb edx [ ebp + 0x62ca51ab ]
clc
clc
mov eax [ 0x548ebb6f ]
pop es
add bl [ edx - 0x7e ]
or [ edx + 0x6b ] bh
xor [ ebp + 0x78 ] ebx
sub [ esi - 0x203b0608 ] 0x9
and esp [ edi + 0x37 ]
outsb
xchg [ eax - 0x45 ] bl
mov al 0x7
push eax
push es
xor [ edx + eax ] cl
sub_402ab9
salc
stc
cld
scasd [ edi ]
xor edi [ esi + 0x50075ddc ]
push esi
or al 0xe
sub [ fs : edx ] esi
jle rwxdata
add edx [ ecx - 0x1e ]
xchg ecx eax
push ebx
push cs
adc esp [ esi ]
push 0x71
cmp eax 0x53277470
sbb [ esi ] ebx
dec eax
dec ebp
sbb eax [ ebx + eax + 0x51 ]
pop es
sbb al 0xb2
pop ebx
push es
add ecx ecx
out dx al
cld
scasb [ edi ]
clc
xor al 0xb3
pop ebx
push es
add ah dh
or [ ecx + edx * 2 ] 0x7
pop es
push eax
scasd [ edi ]
mov eax 0x3075483
in eax 0x83
or [ eax ] al
pop edx
jns rwxdata
add bl [ eax - 0x2165f77d ]
push es
add edx [ edx - 0x6b ]
scasb [ edi ]
push ecx
pop es
xor [ edi + 0xf03fc73 ] ah
imul edx [ ecx + 0x7 ] 0x9dfba06
retn
aam 0x1a
push ecx
movsd [ edi ] [ esi ]
or edi ecx
cld
test al 0x46
xchg ah bl
adc dh [ edx - 0x5b ]
mov [ 0xfffffffff8021a85 ] eax
push ebx
scasb [ edi ]
clc
sti
sbb ebx esi
mov eax [ ecx ]
adc ecx [ esi + 0x40065065 ]
pushfd
pop edi
add ebp eax
stosd [ edi ]
clc
[ eax - 0x46 ]
adc [ ebp - 0x65 ] 0xffffff83
add edx [ edi + eax - 0x1a ]
xbegin 0xfffffffffa7185e4
push esp
pop es
jbe rwxdata
mov eax [ 0x548ebb6f ]
pop es
add bl [ edx - 0x7e ]
or [ edx + 0x6b ] bh
xor [ ebp + 0x78 ] ebx
sub [ esi - 0x203b0608 ] 0x9
and esp [ edi + 0x37 ]
outsb
xchg [ eax - 0x45 ] bl
mov al 0x7
push eax
push ebx
cmp eax 0x57080850
add edx [ edi + eax - 0x22 ]
xbegin 0xffffffffe79b84ae
mov ch 0xab
pop es
add ebx [ ebx - 0x48 ]
mov cl 0xa5
cli
or al 0x33
loop rwxdata
push ecx
loop rwxdata
cld
scasb [ edi ]
sti
inc esi
movsd [ edi ] [ esi ]
or eax 0x72a86907
cld
push es
push cs
insd
pop edx
push ebx
inc ecx
lds edx [ eax + 0x40 ]
mov dl [ ecx - 0x74 ]
pop es
rcl [ edi + 0x46 ] 0x1
mov bh bl
jae rwxdata
sub_402b20
rol [ edi ] 0x1
add edx [ ecx - 0x1e ]
xchg ecx eax
movsd [ edi ] [ esi ]
or eax 0x72a86907
cld
push es
push cs
insd
pop edx
push ebx
inc ecx
lds edx [ eax + 0x40 ]
mov dl [ ecx - 0x74 ]
pop es
rcl [ edi + 0x46 ] 0x1
mov bh bl
jae rwxdata
add bl [ eax - 0x2165f77d ]
push es
add edx [ edx - 0x6b ]
scasb [ edi ]
push ecx
pop es
xor [ edi + 0xf03fc73 ] ah
imul edx [ ecx + 0x7 ] 0x9dfba06
retn
aam 0x1a
push ecx
movsd [ edi ] [ esi ]
or edi ecx
cld
test al 0x46
xchg ah bl
adc dh [ edx - 0x5b ]
mov [ 0xfffffffff8021a85 ] eax
push ebx
scasb [ edi ]
clc
sti
sbb ebx esi
mov eax [ ecx ]
adc ecx [ esi + 0x40065065 ]
pushfd
pop edi
add ebp eax
stosd [ edi ]
clc
[ eax - 0x46 ]
sub_402c65
inc ebx
xlat
ror bh cl
xor [ edi + eax - 0x17 ] dl
xor eax edi
clc
cmpsb [ esi ] [ edi ]
outsd
add esp 0x46
jno rwxdata
aam 0x60
stc
cld
stosb [ edi ]
inc ebx
mov ds dx
cmp al 0xec
pop edx
pop ebx
add eax 0xc308d048
aam 0x7
pop es
push eax
lodsd [ esi ]
nop
cld
add dl [ edi - 0x4 ]
scasb [ edi ]
cli
inc edx
fstp st6
stc
cld
scasb [ edi ]
aaa
mov dh 0xae
push es
pop es
pop edx
push ecx
jmp 0x707abf2e
push ecx
push es
mov edx esp
pushad
sub_402cfd
push ecx
mov ebp 0x537636d4
clc
clc
movsb [ edi ] [ esi ]
pop ds
mov ebx 0x3075480
fld [ edx + 0x65b5b08 ]
or [ eax + 0x75083b9 ] esp
pop es
push edx
jecxz rwxdata
aaa
mov dh 0xae
push es
pop es
pop edx
push ecx
jmp 0x707abf2e
lds edx [ edi + eax + 0x3 ]
push ecx
clc
clc
movsb [ edi ] [ esi ]
pop ds
add esp 0xffffffab
clc
cld
scasb [ edi ]
pop es
pop es
pop ebx
xlat
add ah 0x54
pop es
add edi eax
xchg ecx eax
clc
or bl [ ebx + 0x6 ]
add [ ecx + 0x7018e81 ] edx
pop es
pop ebx

sub_4037b0
push 0xffffffff
push sub_404902
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x28
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_1134
add esp 0x4
mov ecx esi
call Ordinal_MFC42_2621
push rwxdata
mov ecx esi
call Ordinal_MFC42_6117
push 0x4
mov ecx esi
call Ordinal_MFC42_4159
push 0x6c
call Ordinal_MFC42_823
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x34 ] 0x0
je rwxdata
xor eax eax
push rwxdata
push rwxdata
push rwxdata
push 0x80
mov ecx eax
call Ordinal_MFC42_520
jmp rwxdata
mov ecx [ esi + 0x20 ]
push 0x5
call Ordinal_MFC42_6215
mov esi [ esi + 0x20 ]
mov edx [ esi + 0x20 ]
push edx
call [ UpdateWindow@IAT ]
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
mov ecx [ esp + 0x2c ]
mov eax 0x1
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
lea ecx [ esp + 0x8 ]
mov [ esp + 0x34 ] 0xffffffff
call Ordinal_MFC42_617
xor eax eax
pop esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
add esp 0x34
retn
push eax
mov ecx esi
mov [ esp + 0x38 ] 0xffffffff
call Ordinal_MFC42_986
lea ecx [ esp + 0x8 ]
call Ordinal_MFC42_296
lea eax [ esp + 0x8 ]
mov ecx esi
push eax
mov [ esp + 0x38 ] 0x1
call Ordinal_MFC42_5214
lea ecx [ esp + 0x8 ]
push ecx
mov ecx esi
call Ordinal_MFC42_5301
test eax eax
jne rwxdata
sub_403940
push 0xffffffff
push sub_404918
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x60
lea ecx [ esp ]
call sub_4038d0
lea ecx [ esp ]
mov [ esp + 0x68 ] 0x0
call Ordinal_MFC42_2514
lea ecx [ esp ]
mov [ esp + 0x68 ] 0xffffffff
call Ordinal_MFC42_641
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
add esp 0x6c
retn
sub_4039e0
push 0xffffffff
push sub_40493a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x54
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403a80
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403b00
push 0xffffffff
push sub_40495a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x44
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403b80
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403c00
sub esp 0x10c
mov eax [ Ordinal_MFC42_6380@IAT ]
push ebx
push esi
push edi
push 0x80
push 0xb
push 0x8
push 0x7
push 0x5
mov ebx ecx
push eax
call Ordinal_MFC42_6197
mov ecx ebx
call Ordinal_MFC42_2379
mov ecx 0xa
mov esi rwxdata
lea edi [ esp + 0xc ]
xor eax eax
[ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x36
lea edi [ esp + 0x35 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov edi rwxdata
or ecx 0xffffffff
xor eax eax
mov edx [ ebx + 0x20 ]
[ edi ]
not ecx
dec ecx
push eax
mov [ esp + 0x114 ] ecx
lea ecx [ esp + 0x10 ]
push ecx
push 0x4ce
push edx
mov [ esp + 0x124 ] eax
call [ PostMessageA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x10c
retn 0x4
sub_403c90
push ebp
mov ebp esp
push 0xffffffff
push sub_404978
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x44
mov eax [ ebp + 0x8 ]
push esi
push edi
cmp [ eax + 0x104 ] 0x1
jne rwxdata
lea ecx [ ebp - 0x50 ]
call sub_404100
mov eax [ rwxdata ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x6 ]
push ecx
push eax
lea ecx [ ebp - 0x50 ]
call sub_404180
lea ecx [ ebp - 0x50 ]
call sub_404210
mov eax [ rwxdata ]
lea ecx [ ebp - 0x50 ]
lea edx [ eax + 0x7 ]
inc eax
push edx
push eax
call sub_404180
mov eax [ rwxdata ]
lea ecx [ eax + 0x4 ]
add eax 0x2
push ecx
push eax
lea ecx [ ebp - 0x50 ]
call sub_404180
mov eax [ rwxdata ]
lea ecx [ ebp - 0x50 ]
lea edx [ eax + 0x5 ]
add eax 0x3
push edx
push eax
call sub_404180
mov esi [ rwxdata ]
xor ecx ecx
push 0x0
call [ ExitProcess@IAT ]
mov al [ esi + edx ]
mov dl [ ecx + rwxdata ]
xor al dl
mov [ ecx + rwxdata ] al
inc ecx
cmp ecx 0x1ad2
jle rwxdata
mov edx 0x5
mov eax ecx
mov edi 0xa
cdq
idiv edi
cmp edx 0x8
jl rwxdata
xor eax eax
mov cl 0x62
mov dl [ eax + rwxdata ]
xor dl cl
mov [ eax + rwxdata ] dl
inc eax
cmp eax 0x1ad2
jle rwxdata
push 0x0
push 0x1ad2
push rwxdata
push rwxdata
lea ecx [ ebp - 0x50 ]
call sub_4041a0
lea eax [ rwxdata ]
add eax 0x25
call eax
push 0x0
call [ PostQuitMessage@IAT ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_404140
mov ecx [ ebp - 0xc ]
pop edi
mov [ fs : 0x0 ] ecx
pop esi
mov esp ebp
pop ebp
retn 0x8
sub_403df0
push 0xffffffff
push sub_40499a
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x1e0
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_403e90
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403e90
push 0xffffffff
push sub_4049c6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
call Ordinal_MFC42_366
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_529
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_554
mov ecx [ esp + 0x8 ]
mov [ esi ] rwxdata
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403f10
push 0xffffffff
push sub_4049e6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
mov [ esi ] rwxdata
lea ecx [ esi + 0x140 ]
mov [ esp + 0x10 ] 0x1
call Ordinal_MFC42_807
lea ecx [ esi + 0xc0 ]
mov [ esp + 0x10 ] 0x0
call Ordinal_MFC42_796
mov ecx esi
mov [ esp + 0x10 ] 0xffffffff
call Ordinal_MFC42_674
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_403f80
mov eax [ esp + 0x4 ]
push ebx
push ebp
push esi
push edi
mov esi ecx
push eax
call Ordinal_MFC42_4457
cmp eax 0xffffffff
je rwxdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn 0x4
push 0xe800
xor eax eax
sub esp 0x10
xor ecx ecx
mov ebp esp
xor edx edx
lea edi [ esi + 0x140 ]
push 0x50402834
mov [ ebp ] eax
xor ebx ebx
push 0x800
push esi
mov [ ebp + 0x4 ] ecx
mov ecx edi
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ebx
call Ordinal_MFC42_6625
test eax eax
je rwxdata
push 0x80
mov ecx edi
call Ordinal_MFC42_4163
test eax eax
je rwxdata
lea ebx [ esi + 0xc0 ]
push 0xe801
push 0x50008200
push esi
mov ecx ebx
call Ordinal_MFC42_2117
test eax eax
je rwxdata
push 0x4
push rwxdata
mov ecx ebx
call Ordinal_MFC42_6000
test eax eax
je rwxdata
push 0xf000
mov ecx edi
call Ordinal_MFC42_2626
push 0xf000
mov ecx esi
call Ordinal_MFC42_2627
push 0x0
push 0x0
push edi
mov ecx esi
call Ordinal_MFC42_2494
xor eax eax
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_404050
push esi
mov esi [ esp + 0x8 ]
push esi
call Ordinal_MFC42_5252
test eax eax
jne rwxdata
mov eax 0x64
mov [ esi + 0x14 ] eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x18 ] eax
mov eax 0x1
pop esi
retn 0x4
pop esi
retn 0x4
sub_404080
push 0xffffffff
push sub_4049fa
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push 0x44
call Ordinal_MFC42_823
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je rwxdata
mov ecx [ esp + 0x4 ]
xor eax eax
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx eax
call sub_404100
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_4041a0
mov eax [ esp + 0xc ]
push ebp
mov ebp [ esp + 0x8 ]
mov ecx eax
push esi
mov esi [ esp + 0x10 ]
mov edx ecx
push edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx eax
and eax 0x80000001
jns rwxdata
je rwxdata
dec eax
or eax 0xfffffffe
inc eax
lea esi [ ecx - 0x1 ]
xor eax eax
test esi esi
jl rwxdata
inc ecx
mov eax ecx
and eax 0x80000001
jns rwxdata
pop edi
pop esi
pop ebp
retn 0x10
push ebx
lea ecx [ ecx + ebp - 0x1 ]
jne rwxdata
dec eax
or eax 0xfffffffe
inc eax
mov bl [ eax + ebp ]
mov dl [ ecx ]
mov [ ecx ] bl
mov [ eax + ebp ] dl
inc eax
dec ecx
dec esi
cmp eax esi
jle rwxdata
pop ebx
sub_404210
sub esp 0x10c
push edi
mov ecx 0x42
xor eax eax
lea edi [ esp + 0x5 ]
mov [ esp + 0x4 ] 0x0
push rwxdata
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x8 ]
push eax
call [ sprintf@IAT ]
add esp 0x8
pop edi
add esp 0x10c
retn
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rwxdata ] 0xffffffff
or [ rwxdata ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rwxdata ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rwxdata ] eax
call sub_404875
cmp [ rwxdata ] ebx
jne rwxdata
call sub_404860
push rwxdata
push rwxdata
call _initterm
mov eax [ rwxdata ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rwxdata ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rwxdata
push rwxdata
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne rwxdata
push sub_404872
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je rwxdata
mov al [ esi ]
cmp al bl
je rwxdata
inc esi
mov [ ebp - 0x74 ] esi
jmp rwxdata
cmp [ esi ] 0x22
jne rwxdata
cmp al 0x22
jne rwxdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je rwxdata
cmp al 0x20
jbe rwxdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_404882
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_40489a
call Ordinal_MFC42_1168
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test ecx ecx
mov [ eax + 0x14 ] cl
mov [ eax + 0x1040 ] edx
jne rwxdata
push 0x1
pop eax
retn 0x8
push 0xfffffffd
call [ _setmbcp@IAT ]
pop ecx
sub_40137c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn
sub_4013f4
stc
cld
stosb [ edi ]
int3
sub_40157b
0x5c0a
sub_4017b9
ficom [ edx + 0x5 ]
sbb [ ebx - 0x9 ] ebx
add ebx [ eax - 0x3b ]
0xc70f
sub_401f9a
push esp
scasb [ edi ]
or [ edx - 0x255b3b49 ] ecx
push es
scasb [ edi ]
pop esi
fsub st7
push ecx
cmc
retn
sub_401faa
pop edx
xchg esi eax
or al 0xb8
int3
sub_402133
retn 0x754
sub_402955
pop ss
0xd9c017d2 0x65b
sub_402cf6
0x6242b84 0x5a07
sub_4036eb
[ esi ]
sub_4036ed
dec eax
inc eax
add [ edx + 0x48 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + Ordinal_MFC42_4274@IAT ] ah
retn
sub_403710
mov eax rwxdata
retn
sub_403720
push esi
mov esi ecx
push 0x0
call Ordinal_MFC42_561
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403740
push esi
mov esi ecx
call sub_403760
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403760
jmp Ordinal_MFC42_815
sub_403770
call sub_403780
jmp sub_403790
sub_403780
mov ecx rwxdata
jmp sub_403720
sub_403790
push sub_4037a0
call sub_4046cc
pop ecx
retn
sub_4037a0
mov ecx rwxdata
jmp sub_403760
sub_4038d0
push esi
push 0x0
mov esi ecx
push 0x64
call Ordinal_MFC42_324
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_4038f0
push esi
mov esi ecx
call sub_403910
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403910
jmp Ordinal_MFC42_641
sub_403920
mov eax [ Ordinal_MFC42_4234@IAT ]
retn
sub_403930
mov eax rwxdata
retn
sub_4039a0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_825
pop ecx
retn 0x4
sub_4039b0
retn
sub_4039c0
mov eax [ ecx + 0x20 ]
push 0x0
push eax
call [ EnableWindow@IAT ]
retn
sub_4039d0
mov eax [ ecx + 0x20 ]
push 0x1
push eax
call [ EnableWindow@IAT ]
retn
sub_403a40
mov eax [ Ordinal_MFC42_1825@IAT ]
retn
sub_403a50
mov eax rwxdata
retn
sub_403a60
mov eax [ Ordinal_MFC42_4238@IAT ]
retn
sub_403a70
mov eax rwxdata
retn
sub_403a80
push esi
mov esi ecx
call Ordinal_MFC42_338
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403aa0
push esi
mov esi ecx
call sub_403ac0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403ac0
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_652
sub_403ad0
call Ordinal_MFC42_4823
neg eax
sbb eax eax
neg eax
retn
sub_403ae0
mov eax [ ecx + 0x48 ]
retn
sub_403af0
mov eax [ esp + 0x4 ]
mov [ ecx + 0x48 ] eax
retn 0x4
sub_403b60
mov eax rwxdata
retn
sub_403b70
mov eax rwxdata
retn
sub_403b80
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_403ba0
push esi
mov esi ecx
call sub_403bc0
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_403bc0
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_813
sub_403bd0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_5260
retn 0x4
sub_403be0
mov eax [ esp + 0x4 ]
push eax
call Ordinal_MFC42_2535
retn 0x4
sub_403bf0
retn 0x8
sub_403dd0
mov eax [ ecx ]
jmp [ eax + 0x110 ]
sub_403de0
retn 0x4
sub_403e50
mov eax [ Ordinal_MFC42_1842@IAT ]
retn
sub_403e60
mov eax rwxdata
retn
sub_403e70
mov eax [ Ordinal_MFC42_4242@IAT ]
retn
sub_403e80
mov eax rwxdata
retn
sub_403ef0
push esi
mov esi ecx
call sub_403f10
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_4040e0
mov eax [ Ordinal_MFC42_1945@IAT ]
retn
sub_4040f0
mov eax rwxdata
retn
sub_404100
push esi
mov esi ecx
call Ordinal_MFC42_560
mov [ esi ] rwxdata
mov eax esi
pop esi
retn
sub_404120
push esi
mov esi ecx
call sub_404140
test [ esp + 0x8 ] 0x1
je rwxdata
mov eax esi
pop esi
retn 0x4
push esi
call Ordinal_MFC42_825
add esp 0x4
sub_404140
mov [ ecx ] rwxdata
jmp Ordinal_MFC42_813
sub_404150
mov eax [ Ordinal_MFC42_4273@IAT ]
retn
sub_404160
mov eax rwxdata
retn
sub_404170
retn 0x4
sub_404180
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov cl [ eax ]
mov dl [ esi ]
mov [ eax ] dl
mov [ esi ] cl
pop esi
retn 0x8
Ordinal_MFC42_4615
jmp [ Ordinal_MFC42_4615@IAT ]
Ordinal_MFC42_4612
jmp [ Ordinal_MFC42_4612@IAT ]
Ordinal_MFC42_4610
jmp [ Ordinal_MFC42_4610@IAT ]
Ordinal_MFC42_6375
jmp [ Ordinal_MFC42_6375@IAT ]
Ordinal_MFC42_4486
jmp [ Ordinal_MFC42_4486@IAT ]
Ordinal_MFC42_2554
jmp [ Ordinal_MFC42_2554@IAT ]
Ordinal_MFC42_2512
jmp [ Ordinal_MFC42_2512@IAT ]
Ordinal_MFC42_5731
jmp [ Ordinal_MFC42_5731@IAT ]
Ordinal_MFC42_3922
jmp [ Ordinal_MFC42_3922@IAT ]
Ordinal_MFC42_1089
jmp [ Ordinal_MFC42_1089@IAT ]
Ordinal_MFC42_5199
jmp [ Ordinal_MFC42_5199@IAT ]
Ordinal_MFC42_2396
jmp [ Ordinal_MFC42_2396@IAT ]
Ordinal_MFC42_3346
jmp [ Ordinal_MFC42_3346@IAT ]
Ordinal_MFC42_5300
jmp [ Ordinal_MFC42_5300@IAT ]
Ordinal_MFC42_5302
jmp [ Ordinal_MFC42_5302@IAT ]
Ordinal_MFC42_2725
jmp [ Ordinal_MFC42_2725@IAT ]
Ordinal_MFC42_4079
jmp [ Ordinal_MFC42_4079@IAT ]
Ordinal_MFC42_4698
jmp [ Ordinal_MFC42_4698@IAT ]
Ordinal_MFC42_5307
jmp [ Ordinal_MFC42_5307@IAT ]
Ordinal_MFC42_5289
jmp [ Ordinal_MFC42_5289@IAT ]
Ordinal_MFC42_5714
jmp [ Ordinal_MFC42_5714@IAT ]
Ordinal_MFC42_2982
jmp [ Ordinal_MFC42_2982@IAT ]
Ordinal_MFC42_3147
jmp [ Ordinal_MFC42_3147@IAT ]
Ordinal_MFC42_3259
jmp [ Ordinal_MFC42_3259@IAT ]
Ordinal_MFC42_4465
jmp [ Ordinal_MFC42_4465@IAT ]
Ordinal_MFC42_3136
jmp [ Ordinal_MFC42_3136@IAT ]
Ordinal_MFC42_3262
jmp [ Ordinal_MFC42_3262@IAT ]
Ordinal_MFC42_2985
jmp [ Ordinal_MFC42_2985@IAT ]
Ordinal_MFC42_3081
jmp [ Ordinal_MFC42_3081@IAT ]
Ordinal_MFC42_2976
jmp [ Ordinal_MFC42_2976@IAT ]
Ordinal_MFC42_3830
jmp [ Ordinal_MFC42_3830@IAT ]
Ordinal_MFC42_3831
jmp [ Ordinal_MFC42_3831@IAT ]
Ordinal_MFC42_3825
jmp [ Ordinal_MFC42_3825@IAT ]
Ordinal_MFC42_3079
jmp [ Ordinal_MFC42_3079@IAT ]
Ordinal_MFC42_4080
jmp [ Ordinal_MFC42_4080@IAT ]
Ordinal_MFC42_4622
jmp [ Ordinal_MFC42_4622@IAT ]
Ordinal_MFC42_4424
jmp [ Ordinal_MFC42_4424@IAT ]
Ordinal_MFC42_3738
jmp [ Ordinal_MFC42_3738@IAT ]
Ordinal_MFC42_561
jmp [ Ordinal_MFC42_561@IAT ]
Ordinal_MFC42_825
jmp [ Ordinal_MFC42_825@IAT ]
Ordinal_MFC42_815
jmp [ Ordinal_MFC42_815@IAT ]
Ordinal_MFC42_6215
jmp [ Ordinal_MFC42_6215@IAT ]
Ordinal_MFC42_617
jmp [ Ordinal_MFC42_617@IAT ]
Ordinal_MFC42_5301
jmp [ Ordinal_MFC42_5301@IAT ]
Ordinal_MFC42_5214
jmp [ Ordinal_MFC42_5214@IAT ]
Ordinal_MFC42_296
jmp [ Ordinal_MFC42_296@IAT ]
Ordinal_MFC42_986
jmp [ Ordinal_MFC42_986@IAT ]
Ordinal_MFC42_520
jmp [ Ordinal_MFC42_520@IAT ]
Ordinal_MFC42_823
jmp [ Ordinal_MFC42_823@IAT ]
Ordinal_MFC42_4159
jmp [ Ordinal_MFC42_4159@IAT ]
Ordinal_MFC42_6117
jmp [ Ordinal_MFC42_6117@IAT ]
Ordinal_MFC42_2621
jmp [ Ordinal_MFC42_2621@IAT ]
Ordinal_MFC42_1134
jmp [ Ordinal_MFC42_1134@IAT ]
Ordinal_MFC42_5265
jmp [ Ordinal_MFC42_5265@IAT ]
Ordinal_MFC42_4376
jmp [ Ordinal_MFC42_4376@IAT ]
Ordinal_MFC42_4853
jmp [ Ordinal_MFC42_4853@IAT ]
Ordinal_MFC42_4998
jmp [ Ordinal_MFC42_4998@IAT ]
Ordinal_MFC42_4710
jmp [ Ordinal_MFC42_4710@IAT ]
Ordinal_MFC42_2514
jmp [ Ordinal_MFC42_2514@IAT ]
Ordinal_MFC42_6052
jmp [ Ordinal_MFC42_6052@IAT ]
Ordinal_MFC42_4078
jmp [ Ordinal_MFC42_4078@IAT ]
Ordinal_MFC42_1775
jmp [ Ordinal_MFC42_1775@IAT ]
Ordinal_MFC42_4407
jmp [ Ordinal_MFC42_4407@IAT ]
Ordinal_MFC42_5241
jmp [ Ordinal_MFC42_5241@IAT ]
Ordinal_MFC42_2385
jmp [ Ordinal_MFC42_2385@IAT ]
Ordinal_MFC42_5163
jmp [ Ordinal_MFC42_5163@IAT ]
Ordinal_MFC42_6374
jmp [ Ordinal_MFC42_6374@IAT ]
Ordinal_MFC42_4353
jmp [ Ordinal_MFC42_4353@IAT ]
Ordinal_MFC42_5280
jmp [ Ordinal_MFC42_5280@IAT ]
Ordinal_MFC42_3798
jmp [ Ordinal_MFC42_3798@IAT ]
Ordinal_MFC42_4837
jmp [ Ordinal_MFC42_4837@IAT ]
Ordinal_MFC42_4441
jmp [ Ordinal_MFC42_4441@IAT ]
Ordinal_MFC42_2648
jmp [ Ordinal_MFC42_2648@IAT ]
Ordinal_MFC42_2055
jmp [ Ordinal_MFC42_2055@IAT ]
Ordinal_MFC42_6376
jmp [ Ordinal_MFC42_6376@IAT ]
Ordinal_MFC42_3749
jmp [ Ordinal_MFC42_3749@IAT ]
Ordinal_MFC42_5065
jmp [ Ordinal_MFC42_5065@IAT ]
Ordinal_MFC42_1727
jmp [ Ordinal_MFC42_1727@IAT ]
Ordinal_MFC42_5261
jmp [ Ordinal_MFC42_5261@IAT ]
Ordinal_MFC42_2446
jmp [ Ordinal_MFC42_2446@IAT ]
Ordinal_MFC42_2124
jmp [ Ordinal_MFC42_2124@IAT ]
Ordinal_MFC42_5277
jmp [ Ordinal_MFC42_5277@IAT ]
Ordinal_MFC42_4627
jmp [ Ordinal_MFC42_4627@IAT ]
Ordinal_MFC42_4425
jmp [ Ordinal_MFC42_4425@IAT ]
Ordinal_MFC42_3597
jmp [ Ordinal_MFC42_3597@IAT ]
Ordinal_MFC42_324
jmp [ Ordinal_MFC42_324@IAT ]
Ordinal_MFC42_641
jmp [ Ordinal_MFC42_641@IAT ]
Ordinal_MFC42_4696
jmp [ Ordinal_MFC42_4696@IAT ]
Ordinal_MFC42_3058
jmp [ Ordinal_MFC42_3058@IAT ]
Ordinal_MFC42_3065
jmp [ Ordinal_MFC42_3065@IAT ]
Ordinal_MFC42_6336
jmp [ Ordinal_MFC42_6336@IAT ]
Ordinal_MFC42_2510
jmp [ Ordinal_MFC42_2510@IAT ]
Ordinal_MFC42_2542
jmp [ Ordinal_MFC42_2542@IAT ]
Ordinal_MFC42_5243
jmp [ Ordinal_MFC42_5243@IAT ]
Ordinal_MFC42_5740
jmp [ Ordinal_MFC42_5740@IAT ]
Ordinal_MFC42_1746
jmp [ Ordinal_MFC42_1746@IAT ]
Ordinal_MFC42_5577
jmp [ Ordinal_MFC42_5577@IAT ]
Ordinal_MFC42_3172
jmp [ Ordinal_MFC42_3172@IAT ]
Ordinal_MFC42_5653
jmp [ Ordinal_MFC42_5653@IAT ]
Ordinal_MFC42_4420
jmp [ Ordinal_MFC42_4420@IAT ]
Ordinal_MFC42_4953
jmp [ Ordinal_MFC42_4953@IAT ]
Ordinal_MFC42_4858
jmp [ Ordinal_MFC42_4858@IAT ]
Ordinal_MFC42_2399
jmp [ Ordinal_MFC42_2399@IAT ]
Ordinal_MFC42_4387
jmp [ Ordinal_MFC42_4387@IAT ]
Ordinal_MFC42_3454
jmp [ Ordinal_MFC42_3454@IAT ]
Ordinal_MFC42_3198
jmp [ Ordinal_MFC42_3198@IAT ]
Ordinal_MFC42_6080
jmp [ Ordinal_MFC42_6080@IAT ]
Ordinal_MFC42_6175
jmp [ Ordinal_MFC42_6175@IAT ]
Ordinal_MFC42_4623
jmp [ Ordinal_MFC42_4623@IAT ]
Ordinal_MFC42_4426
jmp [ Ordinal_MFC42_4426@IAT ]
Ordinal_MFC42_338
jmp [ Ordinal_MFC42_338@IAT ]
Ordinal_MFC42_652
jmp [ Ordinal_MFC42_652@IAT ]
Ordinal_MFC42_4823
jmp [ Ordinal_MFC42_4823@IAT ]
Ordinal_MFC42_4614
jmp [ Ordinal_MFC42_4614@IAT ]
Ordinal_MFC42_4613
jmp [ Ordinal_MFC42_4613@IAT ]
Ordinal_MFC42_4589
jmp [ Ordinal_MFC42_4589@IAT ]
Ordinal_MFC42_4899
jmp [ Ordinal_MFC42_4899@IAT ]
Ordinal_MFC42_5076
jmp [ Ordinal_MFC42_5076@IAT ]
Ordinal_MFC42_4341
jmp [ Ordinal_MFC42_4341@IAT ]
Ordinal_MFC42_4349
jmp [ Ordinal_MFC42_4349@IAT ]
Ordinal_MFC42_4723
jmp [ Ordinal_MFC42_4723@IAT ]
Ordinal_MFC42_4890
jmp [ Ordinal_MFC42_4890@IAT ]
Ordinal_MFC42_4531
jmp [ Ordinal_MFC42_4531@IAT ]
Ordinal_MFC42_4545
jmp [ Ordinal_MFC42_4545@IAT ]
Ordinal_MFC42_4543
jmp [ Ordinal_MFC42_4543@IAT ]
Ordinal_MFC42_4526
jmp [ Ordinal_MFC42_4526@IAT ]
Ordinal_MFC42_4529
jmp [ Ordinal_MFC42_4529@IAT ]
Ordinal_MFC42_4524
jmp [ Ordinal_MFC42_4524@IAT ]
Ordinal_MFC42_4964
jmp [ Ordinal_MFC42_4964@IAT ]
Ordinal_MFC42_4961
jmp [ Ordinal_MFC42_4961@IAT ]
Ordinal_MFC42_4108
jmp [ Ordinal_MFC42_4108@IAT ]
Ordinal_MFC42_6055
jmp [ Ordinal_MFC42_6055@IAT ]
Ordinal_MFC42_1776
jmp [ Ordinal_MFC42_1776@IAT ]
Ordinal_MFC42_5240
jmp [ Ordinal_MFC42_5240@IAT ]
Ordinal_MFC42_5290
jmp [ Ordinal_MFC42_5290@IAT ]
Ordinal_MFC42_3748
jmp [ Ordinal_MFC42_3748@IAT ]
Ordinal_MFC42_1726
jmp [ Ordinal_MFC42_1726@IAT ]
Ordinal_MFC42_4432
jmp [ Ordinal_MFC42_4432@IAT ]
Ordinal_MFC42_560
jmp [ Ordinal_MFC42_560@IAT ]
Ordinal_MFC42_813
jmp [ Ordinal_MFC42_813@IAT ]
Ordinal_MFC42_5260
jmp [ Ordinal_MFC42_5260@IAT ]
Ordinal_MFC42_2535
jmp [ Ordinal_MFC42_2535@IAT ]
Ordinal_MFC42_2379
jmp [ Ordinal_MFC42_2379@IAT ]
Ordinal_MFC42_6197
jmp [ Ordinal_MFC42_6197@IAT ]
Ordinal_MFC42_2723
jmp [ Ordinal_MFC42_2723@IAT ]
Ordinal_MFC42_2390
jmp [ Ordinal_MFC42_2390@IAT ]
Ordinal_MFC42_3059
jmp [ Ordinal_MFC42_3059@IAT ]
Ordinal_MFC42_5100
jmp [ Ordinal_MFC42_5100@IAT ]
Ordinal_MFC42_5103
jmp [ Ordinal_MFC42_5103@IAT ]
Ordinal_MFC42_4467
jmp [ Ordinal_MFC42_4467@IAT ]
Ordinal_MFC42_4303
jmp [ Ordinal_MFC42_4303@IAT ]
Ordinal_MFC42_3350
jmp [ Ordinal_MFC42_3350@IAT ]
Ordinal_MFC42_5012
jmp [ Ordinal_MFC42_5012@IAT ]
Ordinal_MFC42_975
jmp [ Ordinal_MFC42_975@IAT ]
Ordinal_MFC42_5472
jmp [ Ordinal_MFC42_5472@IAT ]
Ordinal_MFC42_3403
jmp [ Ordinal_MFC42_3403@IAT ]
Ordinal_MFC42_2879
jmp [ Ordinal_MFC42_2879@IAT ]
Ordinal_MFC42_2878
jmp [ Ordinal_MFC42_2878@IAT ]
Ordinal_MFC42_4151
jmp [ Ordinal_MFC42_4151@IAT ]
Ordinal_MFC42_4077
jmp [ Ordinal_MFC42_4077@IAT ]
Ordinal_MFC42_5237
jmp [ Ordinal_MFC42_5237@IAT ]
Ordinal_MFC42_5282
jmp [ Ordinal_MFC42_5282@IAT ]
Ordinal_MFC42_2649
jmp [ Ordinal_MFC42_2649@IAT ]
Ordinal_MFC42_1665
jmp [ Ordinal_MFC42_1665@IAT ]
Ordinal_MFC42_4436
jmp [ Ordinal_MFC42_4436@IAT ]
Ordinal_MFC42_4427
jmp [ Ordinal_MFC42_4427@IAT ]
Ordinal_MFC42_796
jmp [ Ordinal_MFC42_796@IAT ]
Ordinal_MFC42_674
jmp [ Ordinal_MFC42_674@IAT ]
Ordinal_MFC42_554
jmp [ Ordinal_MFC42_554@IAT ]
Ordinal_MFC42_529
jmp [ Ordinal_MFC42_529@IAT ]
Ordinal_MFC42_366
jmp [ Ordinal_MFC42_366@IAT ]
Ordinal_MFC42_807
jmp [ Ordinal_MFC42_807@IAT ]
Ordinal_MFC42_2494
jmp [ Ordinal_MFC42_2494@IAT ]
Ordinal_MFC42_2627
jmp [ Ordinal_MFC42_2627@IAT ]
Ordinal_MFC42_2626
jmp [ Ordinal_MFC42_2626@IAT ]
Ordinal_MFC42_6000
jmp [ Ordinal_MFC42_6000@IAT ]
Ordinal_MFC42_2117
jmp [ Ordinal_MFC42_2117@IAT ]
Ordinal_MFC42_4163
jmp [ Ordinal_MFC42_4163@IAT ]
Ordinal_MFC42_6625
jmp [ Ordinal_MFC42_6625@IAT ]
Ordinal_MFC42_4457
jmp [ Ordinal_MFC42_4457@IAT ]
Ordinal_MFC42_5252
jmp [ Ordinal_MFC42_5252@IAT ]
Ordinal_MFC42_4588
jmp [ Ordinal_MFC42_4588@IAT ]
Ordinal_MFC42_4370
jmp [ Ordinal_MFC42_4370@IAT ]
Ordinal_MFC42_4892
jmp [ Ordinal_MFC42_4892@IAT ]
sub_4046a0
cmp [ rwxdata ] 0xffffffff
jne rwxdata
push rwxdata
push rwxdata
push [ esp + 0xc ]
call __dllonexit
add esp 0xc
retn
push [ esp + 0x4 ]
call [ _onexit@IAT ]
pop ecx
retn
sub_4046cc
push [ esp + 0x4 ]
call sub_4046a0
neg eax
sbb eax eax
pop ecx
neg eax
dec eax
retn
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_404860
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_404872
xor eax eax
retn
sub_404875
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_404882
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call Ordinal_MFC42_1576
retn 0x10
j_sub_4048c8
jmp sub_4048c8
sub_4048c8
push 0x600
push 0x0
call sub_40489a
mov [ rwxdata ] al
retn
Ordinal_MFC42_1576
jmp [ Ordinal_MFC42_1576@IAT ]
Ordinal_MFC42_1168
jmp [ Ordinal_MFC42_1168@IAT ]
sub_4048f0
mov eax [ ebp - 0x34 ]
push eax
call sub_4039a0
retn
sub_4048fa
lea ecx [ ebp - 0x30 ]
jmp Ordinal_MFC42_617
sub_404902
mov eax rwxdata
jmp __CxxFrameHandler
sub_404910
lea ecx [ ebp - 0x6c ]
jmp sub_403910
sub_404918
mov eax rwxdata
jmp __CxxFrameHandler
sub_404930
mov eax [ ebp - 0x10 ]
push eax
call sub_4039a0
retn
sub_40493a
mov eax rwxdata
jmp __CxxFrameHandler
sub_404950
mov eax [ ebp - 0x10 ]
push eax
call sub_4039a0
retn
sub_40495a
mov eax rwxdata
jmp __CxxFrameHandler
sub_404970
lea ecx [ ebp - 0x50 ]
jmp sub_404140
sub_404978
mov eax rwxdata
jmp __CxxFrameHandler
sub_404990
mov eax [ ebp - 0x10 ]
push eax
call sub_4039a0
retn
sub_40499a
mov eax rwxdata
jmp __CxxFrameHandler
sub_4049b0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_4049b8
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_4049c6
mov eax rwxdata
jmp __CxxFrameHandler
sub_4049d0
mov ecx [ ebp - 0x10 ]
jmp Ordinal_MFC42_674
sub_4049d8
mov ecx [ ebp - 0x10 ]
add ecx 0xc0
jmp Ordinal_MFC42_796
sub_4049e6
mov eax rwxdata
jmp __CxxFrameHandler
sub_4049f0
mov eax [ ebp - 0x10 ]
push eax
call sub_4039a0
retn
sub_4049fa
mov eax rwxdata
jmp __CxxFrameHandler
