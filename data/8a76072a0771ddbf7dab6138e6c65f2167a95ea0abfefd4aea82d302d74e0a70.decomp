sub_401040
push 0xffffffff
push sub_414739
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
call [ std::exception::exception@IAT ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x0
push eax
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_4010b0
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4010e0
push 0xffffffff
push sub_414709
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call [ std::exception::exception@IAT ]
add edi 0xc
mov [ esp + 0x18 ] 0x0
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_401170
push 0xffffffff
push sub_414709
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call [ std::exception::exception@IAT ]
add edi 0xc
mov [ esp + 0x18 ] 0x0
push edi
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_4011e0
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401230
push 0xffffffff
push sub_414cd4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov eax [ esp + 0x1c ]
push eax
call sub_401040
mov [ esp + 0x14 ] 0x0
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x44 ]
mov [ esp + 0x14 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_4012a0
push esi
mov esi ecx
lea ecx [ esi + 0x44 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401370
push 0xffffffff
push sub_41492a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
push r--data
lea ecx [ esp + 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
mov [ esp + 0x30 ] 0x0
call [ std::exception::exception@IAT ]
lea eax [ esp + 0xc ]
mov [ esp + 0x30 ] 0x1
push eax
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0xc ]
mov [ esp + 0x30 ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esi ] r--data
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x2c
retn
sub_4014c0
push esi
mov esi [ ecx + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
pop esi
jmp edx
sub_401530
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4086b9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
push eax
call [ LoadLibraryW@IAT ]
mov esi eax
test esi esi
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp + 0xc ] 0x0
mov eax r--data
je r-xdata
push eax
push esi
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov eax r--data
xor edi edi
call eax
test eax eax
jl r-xdata
mov edi 0x1
jmp r-xdata
push esi
call [ FreeLibrary@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax edi
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4015f0
sub esp 0x45c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x458 ] eax
push esi
push 0x400
lea eax [ esp + 0x60 ]
push 0x0
push eax
mov esi ecx
call memset
push esi
push r--data
lea ecx [ esp + 0x70 ]
push 0x200
push ecx
call [ swprintf_s@IAT ]
push 0x44
lea edx [ esp + 0x38 ]
push 0x0
push edx
call memset
add esp 0x28
lea eax [ esp + 0x8 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x7c ]
push edx
push 0x0
mov [ esp + 0x40 ] 0x44
mov [ esp + 0x70 ] 0x5
call [ CreateProcessW@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
push 0xbb8
push eax
call [ WaitForSingleObject@IAT ]
mov edx [ esp + 0x8 ]
lea ecx [ esp + 0x4 ]
push ecx
push edx
mov [ esp + 0xc ] 0x0
call [ GetExitCodeProcess@IAT ]
mov eax [ esp + 0x8 ]
mov esi [ CloseHandle@IAT ]
push eax
call esi
mov ecx [ esp + 0xc ]
push ecx
call esi
mov ecx [ esp + 0x45c ]
xor eax eax
cmp [ esp + 0x4 ] eax
pop esi
sete al
xor ecx esp
call sub_40808e
add esp 0x45c
retn
pop esi
mov ecx [ esp + 0x458 ]
xor ecx esp
call sub_40808e
add esp 0x45c
retn
sub_4016f0
sub esp 0x204
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x200 ] eax
push esi
push edi
mov ecx 0xa
mov esi r--data
lea edi [ esp + 0x8 ]
[ edi ] [ esi ]
push 0x1d4
lea eax [ esp + 0x36 ]
push 0x0
push eax
movsw [ edi ] [ esi ]
call memset
add esp 0xc
push 0x0
push r--data
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
call [ MessageBoxW@IAT ]
mov ecx [ esp + 0x208 ]
pop edi
pop esi
xor ecx esp
mov eax 0x1
call sub_40808e
add esp 0x204
retn
sub_401760
push ebp
lea ebp [ esp - 0x3e4 ]
sub esp 0x3e4
push 0xffffffff
push sub_41527d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x120
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x3e0 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x3f4 ]
push r--data
lea ecx [ ebp + 0x180 ]
mov [ ebp - 0x24 ] eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
lea ecx [ ebp + 0x19c ]
mov [ ebp - 0x4 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
lea ecx [ ebp + 0x1b8 ]
mov [ ebp - 0x4 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
lea ecx [ ebp + 0x164 ]
mov [ ebp - 0x4 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x4
mov ecx [ r--data ]
push ecx
lea edx [ ebp - 0x94 ]
push edx
lea ecx [ ebp + 0x114 ]
call sub_411e10
lea ecx [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x6
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call sub_404340
mov edi 0x10
cmp [ ebp + 0x1d0 ] edi
mov esi eax
jb r-xdata
lea ecx [ ebp + 0x1bc ]
mov [ ebp - 0x28 ] ecx
mov eax [ ebp + 0x1bc ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
call sub_404340
mov edx [ ebp + 0x184 ]
mov ecx 0x10
cmp [ ebp + 0x198 ] ecx
jae r-xdata
lea edi [ ebp + 0x1a0 ]
call sub_404340
cmp [ ebp + 0x1b4 ] edi
mov edi [ ebp + 0x1a0 ]
mov ebx eax
jae r-xdata
cmp [ ebp + 0x17c ] ecx
mov ecx [ ebp + 0x168 ]
jae r-xdata
lea edx [ ebp + 0x184 ]
push r--data
push esi
mov esi [ ebp - 0x28 ]
push esi
push r--data
push ebx
push edi
push r--data
push eax
push edx
push r--data
push ecx
push r--data
push r--data
lea edx [ ebp - 0x4c ]
push edx
lea ecx [ ebp + 0x114 ]
call sub_410b20
mov ecx eax
call sub_412520
mov ecx eax
call sub_412520
mov ecx eax
call sub_412640
mov ecx eax
call sub_412640
mov ecx eax
call sub_412640
lea ecx [ ebp - 0x48 ]
call sub_4108c0
mov edi [ ebp - 0x24 ]
push edi
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0x8
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x5c ]
push ecx
mov [ ebp - 0x4 ] 0x9
call sub_412c10
add esp 0x8
lea ecx [ ebp - 0x78 ]
mov [ ebp - 0x4 ] 0xb
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov eax [ ebp - 0x58 ]
test eax eax
je r-xdata
lea ecx [ ebp + 0x168 ]
call sub_4016f0
lea ecx [ ebp - 0x5c ]
mov esi eax
mov [ ebp - 0x4 ] 0x8
call sub_402a40
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x6
call sub_402080
lea ecx [ ebp + 0x114 ]
mov [ ebp - 0x4 ] 0x3
call sub_401fa0
lea ecx [ ebp + 0x164 ]
mov [ ebp - 0x4 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x1b8 ]
mov [ ebp - 0x4 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x19c ]
mov [ ebp - 0x4 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x180 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
jmp r-xdata
mov ecx [ ebp - 0x54 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x3e0 ]
xor ecx ebp
call sub_40808e
add ebp 0x3e4
mov esp ebp
pop ebp
retn 0x10
lea ecx [ ebp - 0x124 ]
push ecx
lea ecx [ ebp - 0x5c ]
call sub_403b70
mov esi eax
lea edx [ ebp + 0x114 ]
mov bl 0xc
push edx
mov ecx esi
mov [ ebp - 0x4 ] bl
call sub_40acb0
lea ecx [ ebp - 0xbc ]
lea eax [ ebp + 0x114 ]
push ecx
mov ecx esi
mov [ esi + 0x60 ] eax
call sub_403c10
lea edx [ ebp - 0x48 ]
push edx
push eax
mov [ ebp - 0x4 ] 0xd
call sub_4108a0
add esp 0x8
lea ecx [ ebp - 0xbc ]
mov [ ebp - 0x4 ] bl
call sub_402100
lea eax [ ebp - 0x124 ]
push eax
mov [ ebp - 0x4 ] 0xb
call sub_4021e0
lea ecx [ ebp - 0x48 ]
push ecx
call sub_40f9c0
add esp 0x4
lea ecx [ ebp - 0x5c ]
mov [ ebp - 0x4 ] 0x8
call sub_402a40
lea edx [ ebp + 0x164 ]
push edx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x7
call sub_4025d0
test eax eax
je r-xdata
push r--data
lea ecx [ ebp - 0x78 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ ebp - 0x78 ]
push eax
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0xf
call sub_4025d0
lea ecx [ ebp - 0x78 ]
mov esi eax
mov [ ebp - 0x4 ] 0x7
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor ebx ebx
cmp esi ebx
je r-xdata
push 0x20a
lea eax [ ebp + 0x1d4 ]
push 0x0
push eax
call memset
add esp 0xc
push 0x104
lea ecx [ ebp + 0x1d4 ]
push ecx
push 0x0
call [ GetModuleFileNameW@IAT ]
push 0x1
push 0x0
push edi
lea edx [ ebp + 0x1d4 ]
push edx
push r--data
call [ GetDesktopWindow@IAT ]
push eax
call [ ShellExecuteW@IAT ]
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x6
call sub_402080
lea ecx [ ebp + 0x114 ]
mov [ ebp - 0x4 ] 0x3
call sub_401fa0
lea ecx [ ebp + 0x164 ]
mov [ ebp - 0x4 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x1b8 ]
mov [ ebp - 0x4 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] 0x0
push 0x114
lea eax [ ebp ]
push ebx
push eax
call memset
add esp 0xc
lea ecx [ ebp ]
push ecx
mov [ ebp ] 0x114
call [ GetVersionExW@IAT ]
mov eax [ ebp + 0x4 ]
cmp eax 0x5
jae r-xdata
mov ecx 0x22
mov esi r--data
lea edi [ ebp + 0x1e0 ]
push 0x176
[ edi ] [ esi ]
lea ecx [ ebp + 0x268 ]
push ebx
push ecx
call memset
add esp 0xc
push ebx
push r--data
lea edx [ ebp + 0x1e0 ]
push edx
push ebx
jne r-xdata
push ebx
push r--data
push r--data
push ebx
jmp r-xdata
lea ecx [ ebp + 0x19c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x180 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
jmp r-xdata
push ebx
call [ CoInitialize@IAT ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
lea edx [ ebp + 0x180 ]
push edx
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x10
call sub_4025d0
test eax eax
je r-xdata
call sub_4022f0
test eax eax
jne r-xdata
call [ MessageBoxW@IAT ]
lea ecx [ ebp + 0x19c ]
push ecx
lea ecx [ ebp - 0x40 ]
call sub_4025d0
test eax eax
je r-xdata
lea eax [ ebp + 0x180 ]
push eax
lea ecx [ ebp - 0x48 ]
call sub_40f570
mov esi eax
call sub_4057e0
push eax
lea ecx [ ebp - 0x20 ]
call sub_4026c0
xor edi edi
push 0x20a
lea edx [ ebp + 0x1d4 ]
push ebx
push edx
call memset
add esp 0xc
push 0x104
lea eax [ ebp + 0x1d4 ]
push eax
push ebx
call [ GetModuleFileNameW@IAT ]
push 0x1
push ebx
push edi
lea ecx [ ebp + 0x1d4 ]
push ecx
push r--data
call [ GetDesktopWindow@IAT ]
push eax
call [ ShellExecuteW@IAT ]
jmp r-xdata
mov ebx [ _invalid_parameter_noinfo@IAT ]
lea edx [ ebp + 0x19c ]
push edx
lea ecx [ ebp - 0x48 ]
call sub_40f570
mov esi eax
call sub_4057e0
push eax
lea ecx [ ebp - 0x20 ]
call sub_4026c0
mov ebx [ _invalid_parameter_noinfo@IAT ]
xor esi esi
lea ecx [ ecx ]
xor ebx ebx
mov ecx [ ebp - 0x18 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jae r-xdata
lea ecx [ ebp - 0x48 ]
mov [ ebp - 0x4 ] 0x6
call sub_402080
lea ecx [ ebp + 0x114 ]
mov [ ebp - 0x4 ] 0x3
call sub_401fa0
lea ecx [ ebp + 0x164 ]
mov [ ebp - 0x4 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x1b8 ]
mov [ ebp - 0x4 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ ebp - 0x4 ] bl
jmp r-xdata
mov esi [ ebp - 0x1c ]
lea edx [ ebp + 0x1b8 ]
push edx
lea ecx [ ebp - 0x48 ]
call sub_40f570
mov esi eax
call sub_4057e0
push eax
lea ecx [ ebp - 0x20 ]
call sub_4026c0
xor edi edi
lea esp [ esp ]
call [ CoUninitialize@IAT ]
lea ecx [ ebp + 0x1b8 ]
push ecx
lea ecx [ ebp - 0x40 ]
call sub_4025d0
test eax eax
je r-xdata
mov ecx [ ebp - 0x18 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jae r-xdata
lea esi [ ebp - 0x20 ]
call sub_404a90
cmp [ eax + 0x18 ] 0x8
jb r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x12
call sub_402920
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x4 ] 0x11
call sub_4028e0
lea ecx [ ebp + 0x114 ]
mov [ ebp - 0x48 ] r--data
mov [ ebp - 0x4 ] 0x3
call sub_401fa0
lea ecx [ ebp + 0x164 ]
mov [ ebp - 0x4 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x1b8 ]
mov [ ebp - 0x4 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x19c ]
mov [ ebp - 0x4 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp + 0x180 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax ebx
jmp r-xdata
mov edi [ ebp - 0x18 ]
cmp esi edi
je r-xdata
xor eax eax
xor ebx ebx
cmp esi eax
mov [ ebp - 0x4 ] 0x7
je r-xdata
mov ecx [ ebp - 0x18 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jae r-xdata
lea eax [ esi * 8 ]
sub eax esi
cmp [ edi + eax * 4 + 0x18 ] 0x8
lea eax [ edi + eax * 4 ]
jb r-xdata
add eax 0x4
push 0x0
push eax
call sub_401530
add esp 0x8
add edi 0x1
jmp r-xdata
mov eax [ eax + 0x4 ]
push 0x0
push eax
call sub_401530
add esp 0x8
add edi 0x1
jmp r-xdata
push esi
call ??3@YAXPAX@Z
add esp 0x4
xor eax eax
lea ebx [ ebx ]
lea eax [ edi * 8 ]
sub eax edi
cmp [ esi + eax * 4 + 0x18 ] 0x8
lea eax [ esi + eax * 4 ]
jb r-xdata
add eax 0x4
push 0x1
push eax
call sub_401530
add esp 0x8
add esi 0x1
jmp r-xdata
mov eax [ eax + 0x4 ]
push 0x1
push eax
call sub_401530
add esp 0x8
add esi 0x1
jmp r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
mov esi [ ebp - 0x1c ]
add eax 0x4
mov ecx eax
call sub_4015f0
add edi 0x1
jmp r-xdata
mov eax [ eax + 0x4 ]
mov ecx eax
call sub_4015f0
add edi 0x1
jmp r-xdata
mov edi [ ebp - 0x1c ]
test edi edi
je r-xdata
mov esi [ ebp - 0x1c ]
test esi esi
je r-xdata
sub_401fa0
push 0xffffffff
push sub_414c9f
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0x10 ] edi
lea esi [ edi + 0x40 ]
mov [ esp + 0x1c ] 0x2
mov eax [ esi + 0x4 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
lea esi [ edi + 0x30 ]
mov [ esp + 0x1c ] 0x1
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esi + 0x8 ]
push edx
push esi
push ecx
push eax
call sub_404780
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x14
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
lea esi [ edi + 0x20 ]
mov [ esp + 0x1c ] bl
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx eax
push ecx
push eax
mov ecx esi
call [ std::allocator<char>::deallocate@IAT ]
mov ecx edi
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esp + 0x1c ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov edx [ esp + 0x10 ]
mov ecx [ esi + 0x8 ]
push edx
push esi
push ecx
push eax
call sub_404780
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x14
sub_402080
push 0xffffffff
push sub_41519f
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
lea ecx [ esi + 0x14 ]
mov [ esp + 0x18 ] 0x1
call sub_402920
xor ecx ecx
cmp esi ecx
mov [ esp + 0x18 ] cl
je r-xdata
call sub_4028e0
mov [ esi ] r--data
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x14
retn
lea ecx [ esi + 0x8 ]
sub_402100
push 0xffffffff
push sub_414c58
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x14 ] esi
xor ebp ebp
mov [ esp + 0x20 ] ebp
mov edi [ esi + 0x18 ]
cmp edi ebp
je r-xdata
mov [ esi + 0x18 ] ebp
mov [ esi + 0x1c ] ebp
mov [ esi + 0x20 ] ebp
mov [ esp + 0x20 ] 0xffffffff
mov edi [ esi + 0x4 ]
cmp edi ebp
je r-xdata
mov ebx [ esi + 0x1c ]
cmp edi ebx
je r-xdata
mov [ esi + 0x4 ] ebp
mov [ esi + 0x8 ] ebp
mov [ esi + 0xc ] ebp
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ebx [ esi + 0x8 ]
cmp edi ebx
je r-xdata
mov eax [ esi + 0x18 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
nop
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
lea esp [ esp ]
mov ecx edi
call sub_405f00
add edi 0x44
cmp edi ebx
jne r-xdata
mov ecx edi
call sub_405e30
add edi 0x44
cmp edi ebx
jne r-xdata
sub_4021e0
push 0xffffffff
push sub_4146e3
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x1
mov eax [ esi + 0x40 ]
xor ebx ebx
cmp eax ebx
je r-xdata
mov [ esp + 0x1c ] bl
mov eax [ esi + 0x20 ]
cmp eax ebx
je r-xdata
mov eax [ eax ]
cmp eax ebx
lea ecx [ esi + 0x48 ]
je r-xdata
mov [ esp + 0x1c ] 0xffffffff
mov edi [ esi + 0x4 ]
cmp edi ebx
je r-xdata
mov eax [ eax ]
cmp eax ebx
lea ecx [ esi + 0x28 ]
je r-xdata
mov [ esi + 0x40 ] ebx
push 0x2
push ecx
push ecx
call eax
add esp 0xc
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
mov ebp [ esi + 0x8 ]
cmp edi ebp
je r-xdata
mov [ esi + 0x20 ] ebx
push 0x2
push ecx
push ecx
call eax
add esp 0xc
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add edi 0x1c
cmp edi ebp
jne r-xdata
sub_4022a0
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
pop edi
mov ecx esi
call sub_405f00
add esi 0x44
cmp esi edi
jne r-xdata
sub_4022f0
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push ebx
xor ebx ebx
lea eax [ esp + 0x8 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push 0x220
push 0x20
push 0x2
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] bl
mov [ esp + 0x39 ] bl
mov [ esp + 0x3a ] bl
mov [ esp + 0x3b ] bl
mov [ esp + 0x3c ] bl
mov [ esp + 0x3d ] 0x5
call [ AllocateAndInitializeSid@IAT ]
cmp eax ebx
mov [ esp + 0x4 ] eax
je r-xdata
mov ecx [ esp + 0x14 ]
pop ebx
xor ecx esp
call sub_40808e
add esp 0x14
retn
mov eax [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
push edx
push eax
push ebx
call [ CheckTokenMembership@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call [ FreeSid@IAT ]
mov eax [ esp + 0x4 ]
mov [ esp + 0x4 ] ebx
sub_402380
push ebp
mov ebp esp
push 0xffffffff
push sub_414c30
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x18 ] edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
xor ecx ecx
xor esi esi
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi 0x9249249
jbe r-xdata
cmp esi ecx
mov [ edi + 0x4 ] ecx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] ecx
je r-xdata
push ecx
push esi
call sub_403d70
lea ecx [ esi * 8 ]
sub ecx esi
lea edx [ eax + ecx * 4 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x8 ]
add esp 0x8
cmp [ ebx + 0x4 ] eax
mov [ ebp - 0x14 ] eax
jbe r-xdata
call sub_404240
mov esi [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
push edi
push eax
mov eax [ ebp - 0x14 ]
push eax
push esi
call sub_405870
add esp 0x18
mov [ edi + 0x8 ] eax
call [ _invalid_parameter_noinfo@IAT ]
sub_402490
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
pop edi
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_4024e0
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_404780
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x14
sub_402520
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
retn
mov ecx [ esi + 0xc ]
sub ecx eax
push ecx
push eax
mov ecx esi
call [ std::allocator<char>::deallocate@IAT ]
sub_402550
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
mov eax [ eax ]
test eax eax
lea ecx [ esi + 0x8 ]
je r-xdata
mov [ esi ] 0x0
push 0x2
push ecx
push ecx
call eax
add esp 0xc
sub_402580
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
pop edi
mov ecx esi
call sub_405e30
add esi 0x44
cmp esi edi
jne r-xdata
sub_4025d0
push ebp
mov ebp esp
and esp 0xfffffff8
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_403180
test esi esi
mov ebx eax
jne r-xdata
push edi
mov ecx esi
call sub_403130
test esi esi
mov edi eax
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov [ esp + 0xc ] 0x0
mov eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push esi
push edi
push esi
call sub_4046e0
mov eax [ esp + 0x24 ]
add esp 0x18
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_402680
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
xor al al
retn 0x4
xor eax eax
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
jmp r-xdata
mov al 0x1
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov edx [ esp + 0x4 ]
mov ecx [ edx ]
test ecx ecx
mov [ edx ] eax
je r-xdata
sub_4026c0
push ebp
mov ebp [ esp + 0x8 ]
push esi
mov esi ecx
cmp esi ebp
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_402960
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
push ebx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ebx [ esi + 0x8 ]
sub ebx edi
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test edi edi
jne r-xdata
mov [ esp + 0x14 ] 0x0
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push edi
push eax
mov eax [ ebp + 0x4 ]
push eax
call sub_404720
mov ecx [ esi + 0x8 ]
add esp 0x18
push ecx
push eax
mov ecx esi
call sub_402a10
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
cmp ecx eax
ja r-xdata
mov ebx [ esi + 0xc ]
sub ebx edi
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esi + 0x4 ]
pop edi
lea ecx [ eax + edx * 4 ]
pop ebx
mov [ esi + 0x8 ] ecx
mov eax esi
pop esi
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
test edi edi
je r-xdata
mov ecx esi
call sub_402850
lea edx [ eax * 8 ]
sub edx eax
mov eax [ ebp + 0x4 ]
lea ebx [ eax + edx * 4 ]
push edi
push ebx
push eax
call sub_403d10
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
push eax
push ecx
push ebx
mov ecx esi
call sub_403d40
pop edi
mov [ esi + 0x8 ] eax
pop ebx
mov eax esi
pop esi
pop ebp
retn 0x4
cmp ecx eax
ja r-xdata
mov ecx ebp
call sub_402850
push eax
mov ecx esi
call sub_4029b0
test al al
je r-xdata
mov edx [ esi + 0x8 ]
push edx
push edi
mov ecx esi
call sub_402a10
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
pop edi
pop ebx
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x4 ]
push ecx
push edx
push eax
mov ecx esi
call sub_403d40
mov [ esi + 0x8 ] eax
sub_402850
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
retn
retn
sub_402880
push esi
xor eax eax
push edi
mov edi [ esp + 0xc ]
cmp edi eax
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x9249249
jbe r-xdata
xor al al
pop edi
pop esi
retn 0x4
push eax
push edi
call sub_403d70
lea ecx [ edi * 8 ]
sub ecx edi
add esp 0x8
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov [ esi + 0xc ] edx
mov al 0x1
pop esi
retn 0x4
call sub_404240
sub_4028e0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push esi
push ecx
push esi
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_402b40
mov ecx [ esi + 0x4 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
mov esp ebp
pop ebp
retn
sub_402920
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
push eax
push esi
push ecx
push esi
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_402c60
mov ecx [ esi + 0x4 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
xor eax eax
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop esi
mov esp ebp
pop ebp
retn
sub_402960
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
push ebx
push ebp
mov ebp [ _invalid_parameter_noinfo@IAT ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
jbe r-xdata
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jbe r-xdata
call ebp
push edi
push esi
push ebx
push esi
lea eax [ esp + 0x20 ]
push eax
mov ecx esi
call sub_402d80
pop edi
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn
call ebp
sub_4029b0
push esi
xor eax eax
push edi
mov edi [ esp + 0xc ]
cmp edi eax
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x9249249
jbe r-xdata
pop edi
xor al al
pop esi
retn 0x4
push eax
push edi
call sub_403d70
lea ecx [ edi * 8 ]
sub ecx edi
add esp 0x8
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov [ esi + 0xc ] edx
mov al 0x1
pop esi
retn 0x4
call sub_404240
sub_402a10
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_402a40
push ebx
mov ebx ecx
push esi
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
mov [ ebx + 0x4 ] 0x0
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0xc ] 0x0
pop ebx
retn
push edi
mov edi [ ebx + 0x8 ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
pop edi
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_402a90
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_402ae0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_405e30
add esi 0x44
cmp esi edi
jne r-xdata
sub_402b10
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov edi edi
mov ecx esi
call sub_405f00
add esi 0x44
cmp esi edi
jne r-xdata
sub_402b40
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax edi
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
mov ebx [ edi + 0x4 ]
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebx [ ebp + 0x14 ]
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebx
pop ebx
mov esp ebp
pop ebp
retn 0x14
test ebx ebx
mov [ esp + 0x14 ] esi
jne r-xdata
cmp esi [ ebp + 0x18 ]
je r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_403520
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x18 ] ebx
jne r-xdata
cmp [ esi + 0x39 ] 0x0
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x8 ]
cmp [ eax + 0x39 ] 0x0
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x39 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x39 ] 0x0
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
push ebx
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
call sub_402e20
jmp r-xdata
mov esi eax
jmp r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
cmp esi [ eax + 0x8 ]
jne r-xdata
jmp r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
sub_402c60
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax edi
je r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
mov ebx [ edi + 0x4 ]
je r-xdata
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebx [ ebp + 0x14 ]
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
mov [ eax ] ebx
pop ebx
mov esp ebp
pop ebp
retn 0x14
test ebx ebx
mov [ esp + 0x14 ] esi
jne r-xdata
cmp esi [ ebp + 0x18 ]
je r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ ecx + 0x4 ]
push edx
mov ecx edi
call sub_4036a0
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ edi + 0x8 ] 0x0
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
cmp [ ebp + 0x18 ] ebx
jne r-xdata
cmp [ esi + 0x29 ] 0x0
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x8 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov edx [ esp + 0x14 ]
push edx
push ebx
lea eax [ esp + 0x20 ]
push eax
mov ecx edi
call sub_4031d0
jmp r-xdata
mov esi eax
jmp r-xdata
mov esi eax
mov eax [ esi ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
cmp esi [ eax + 0x8 ]
jne r-xdata
jmp r-xdata
mov esi eax
mov eax [ eax + 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
sub_402d80
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
mov ebp ecx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp esi [ esp + 0x18 ]
je r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x14
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov [ esp + 0x20 ] 0x0
mov esi [ esp + 0x20 ]
push esi
mov esi [ esp + 0x18 ]
push esi
mov esi [ esp + 0x1c ]
push esi
push ecx
push eax
push edx
call sub_404720
mov ebx [ ebp + 0x8 ]
mov edi eax
add esp 0x18
cmp edi ebx
mov esi edi
je r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
cmp ecx edx
je r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
mov [ ebp + 0x8 ] edi
pop edi
pop ebx
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi ebx
jne r-xdata
sub_402e20
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41514b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] ecx
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov ebx eax
lea ecx [ ebp + 0xc ]
mov [ esp + 0x18 ] ebx
call sub_4037d0
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
push r--data
lea ecx [ esp + 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x3c ]
mov [ esp + 0x70 ] 0x0
call [ std::exception::exception@IAT ]
lea eax [ esp + 0x20 ]
mov [ esp + 0x70 ] 0x1
push eax
lea ecx [ esp + 0x4c ]
mov [ esp + 0x40 ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
lea ecx [ esp + 0x40 ]
mov [ esp + 0x74 ] 0x0
push ecx
mov [ esp + 0x44 ] r--data
call _CxxThrowException
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x39 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
mov edi [ ecx + 0x8 ]
jne r-xdata
mov edi eax
jmp r-xdata
cmp [ edi + 0x39 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ ebx ]
mov [ ecx ] eax
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x39 ] 0x0
mov esi [ ecx + 0x4 ]
jne r-xdata
mov esi ecx
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebx + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ edi + 0x4 ] esi
mov edx [ esp + 0x14 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] ebx
mov [ esp + 0x1c ] ecx
jne r-xdata
cmp [ edi + 0x39 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov dl [ ebx + 0x38 ]
mov al [ ecx + 0x38 ]
mov [ ecx + 0x38 ] dl
mov [ ebx + 0x38 ] al
mov eax [ esp + 0x18 ]
mov bl 0x1
cmp [ eax + 0x38 ] bl
jne r-xdata
cmp [ edi + 0x39 ] 0x0
je r-xdata
push edi
call sub_403620
mov ecx [ esp + 0x18 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov esi [ esp + 0x18 ]
add esi 0xc
mov [ esp + 0x1c ] esi
lea ecx [ esi + 0x1c ]
mov [ esp + 0x70 ] 0x2
call sub_403eb0
mov ecx esi
mov [ esp + 0x70 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
call ??3@YAXPAX@Z
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
test eax eax
jbe r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x4 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_403600
mov ecx [ esp + 0x20 ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
add eax 0xffffffff
mov [ ecx + 0x8 ] eax
mov [ edi + 0x38 ] bl
cmp [ edi + 0x38 ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0x39 ] 0x0
jne r-xdata
mov [ eax + 0x38 ] bl
push esi
mov [ esi + 0x38 ] 0x0
call sub_403640
mov eax [ esi ]
mov ecx [ esp + 0x14 ]
cmp [ eax + 0x39 ] 0x0
jne r-xdata
mov [ eax + 0x38 ] bl
push esi
mov [ esi + 0x38 ] 0x0
call sub_4035b0
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
mov edi esi
cmp edi [ eax + 0x4 ]
mov esi [ esi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x38 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x38 ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x38 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x38 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x38 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x38 ] bl
je r-xdata
mov dl [ esi + 0x38 ]
mov [ eax + 0x38 ] dl
mov [ esi + 0x38 ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x38 ] bl
call sub_403640
mov edx [ eax + 0x8 ]
mov [ edx + 0x38 ] bl
push eax
mov [ eax + 0x38 ] 0x0
call sub_4035b0
mov eax [ esi ]
mov ecx [ esp + 0x14 ]
mov [ eax + 0x38 ] 0x0
mov dl [ esi + 0x38 ]
mov [ eax + 0x38 ] dl
mov [ esi + 0x38 ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x38 ] bl
call sub_4035b0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x38 ] bl
push eax
mov [ eax + 0x38 ] 0x0
call sub_403640
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x14 ]
sub_403130
mov eax [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
cmp [ esi + 0x39 ] 0x0
push edi
mov edi eax
jne r-xdata
pop edi
pop esi
retn 0x4
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
lea esp [ esp ]
mov edi esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
lea eax [ esi + 0xc ]
push ebx
push eax
call ebp
add esp 0x8
test al al
je r-xdata
pop ebp
mov eax edi
pop ebx
cmp [ esi + 0x39 ] 0x0
je r-xdata
sub_403180
mov eax [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
cmp [ esi + 0x39 ] 0x0
push edi
mov edi eax
jne r-xdata
pop edi
pop esi
retn 0x4
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
lea esp [ esp ]
mov esi [ esi + 0x8 ]
mov edi esi
mov esi [ esi ]
jmp r-xdata
lea eax [ esi + 0xc ]
push eax
push ebx
call ebp
add esp 0x8
test al al
je r-xdata
pop ebp
mov eax edi
pop ebx
cmp [ esi + 0x39 ] 0x0
je r-xdata
sub_4031d0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_414c12
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] ecx
mov eax [ ebp + 0x10 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov ebx eax
lea ecx [ ebp + 0xc ]
mov [ esp + 0x18 ] ebx
call sub_403840
mov eax [ ebx ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
push r--data
lea ecx [ esp + 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x3c ]
mov [ esp + 0x70 ] 0x0
call [ std::exception::exception@IAT ]
lea eax [ esp + 0x20 ]
mov [ esp + 0x70 ] 0x1
push eax
lea ecx [ esp + 0x4c ]
mov [ esp + 0x40 ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
lea ecx [ esp + 0x40 ]
mov [ esp + 0x74 ] 0x0
push ecx
mov [ esp + 0x44 ] r--data
call _CxxThrowException
mov edx [ ebx + 0x8 ]
cmp [ edx + 0x29 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
mov edi [ ecx + 0x8 ]
jne r-xdata
mov edi eax
jmp r-xdata
cmp [ edi + 0x29 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ eax + 0x4 ] ecx
mov eax [ ebx ]
mov [ ecx ] eax
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x29 ] 0x0
mov esi [ ecx + 0x4 ]
jne r-xdata
mov esi ecx
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov edx [ ebx + 0x8 ]
mov [ ecx + 0x8 ] edx
mov eax [ ebx + 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ edi + 0x4 ] esi
mov edx [ esp + 0x14 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x8 ] ebx
mov [ esp + 0x1c ] ecx
jne r-xdata
cmp [ edi + 0x29 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov [ ecx + 0x4 ] eax
mov dl [ ebx + 0x28 ]
mov al [ ecx + 0x28 ]
mov [ ecx + 0x28 ] dl
mov [ ebx + 0x28 ] al
mov eax [ esp + 0x18 ]
mov bl 0x1
cmp [ eax + 0x28 ] bl
jne r-xdata
cmp [ edi + 0x29 ] 0x0
je r-xdata
push edi
call sub_403750
mov ecx [ esp + 0x18 ]
add esp 0x4
mov eax esi
jmp r-xdata
mov ecx [ esp + 0x18 ]
add ecx 0xc
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
call ??3@YAXPAX@Z
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
test eax eax
jbe r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x4 ]
cmp edi [ edx + 0x4 ]
je r-xdata
push edi
call sub_403730
mov ecx [ esp + 0x20 ]
add esp 0x4
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
add eax 0xffffffff
mov [ ecx + 0x8 ] eax
mov [ edi + 0x28 ] bl
cmp [ edi + 0x28 ] bl
jne r-xdata
mov eax [ esi ]
cmp edi eax
jne r-xdata
cmp [ eax + 0x28 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x28 ] 0x0
jne r-xdata
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov [ eax + 0x28 ] bl
push esi
mov [ esi + 0x28 ] 0x0
call sub_403770
mov eax [ esi ]
mov ecx [ esp + 0x14 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov [ eax + 0x28 ] bl
push esi
mov [ esi + 0x28 ] 0x0
call sub_4036e0
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x14 ]
mov eax [ ecx + 0x4 ]
mov edi esi
cmp edi [ eax + 0x4 ]
mov esi [ esi + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x28 ] bl
jne r-xdata
jmp r-xdata
mov edx [ eax ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x28 ] bl
jne r-xdata
mov edx [ eax + 0x8 ]
cmp [ edx + 0x28 ] bl
je r-xdata
mov dl [ esi + 0x28 ]
mov [ eax + 0x28 ] dl
mov [ esi + 0x28 ] bl
mov eax [ eax ]
push esi
mov [ eax + 0x28 ] bl
call sub_403770
mov edx [ eax + 0x8 ]
mov [ edx + 0x28 ] bl
push eax
mov [ eax + 0x28 ] 0x0
call sub_4036e0
mov eax [ esi ]
mov ecx [ esp + 0x14 ]
mov [ eax + 0x28 ] 0x0
mov dl [ esi + 0x28 ]
mov [ eax + 0x28 ] dl
mov [ esi + 0x28 ] bl
mov eax [ eax + 0x8 ]
push esi
mov [ eax + 0x28 ] bl
call sub_4036e0
jmp r-xdata
mov edx [ eax ]
mov [ edx + 0x28 ] bl
push eax
mov [ eax + 0x28 ] 0x0
call sub_403770
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x14 ]
sub_4034d0
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
push edi
mov edi [ esp + 0xc ]
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax [ edi ]
je r-xdata
mov eax [ esi + 0x4 ]
xor ecx ecx
cmp eax [ edi + 0x4 ]
pop edi
sete cl
mov al cl
pop esi
retn 0x4
sub_403520
push 0xffffffff
push sub_415109
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov edi [ esp + 0x24 ]
cmp [ edi + 0x39 ] 0x0
mov esi edi
jne r-xdata
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_403520
mov esi [ esi ]
lea ebp [ edi + 0xc ]
mov [ esp + 0x24 ] ebp
lea ecx [ ebp + 0x1c ]
mov [ esp + 0x1c ] 0x0
call sub_403eb0
mov ecx ebp
mov [ esp + 0x1c ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push edi
call ??3@YAXPAX@Z
add esp 0x4
cmp [ esi + 0x39 ] 0x0
mov edi esi
je r-xdata
sub_4035b0
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
pop esi
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
retn 0x4
sub_403640
mov edx [ esp + 0x4 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
pop esi
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
retn 0x4
sub_4036a0
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
cmp [ edi + 0x29 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_4036a0
mov esi [ esi ]
lea ecx [ edi + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push edi
call ??3@YAXPAX@Z
add esp 0x4
cmp [ esi + 0x29 ] 0x0
mov edi esi
je r-xdata
sub_4036e0
mov edx [ esp + 0x4 ]
mov eax [ edx + 0x8 ]
push esi
mov esi [ eax ]
mov [ edx + 0x8 ] esi
mov esi [ eax ]
cmp [ esi + 0x29 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
pop esi
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
retn 0x4
mov [ ecx ] eax
mov [ eax ] edx
mov [ edx + 0x4 ] eax
retn 0x4
sub_403770
mov edx [ esp + 0x4 ]
mov eax [ edx ]
push esi
mov esi [ eax + 0x8 ]
mov [ edx ] esi
mov esi [ eax + 0x8 ]
cmp [ esi + 0x29 ] 0x0
jne r-xdata
mov esi [ edx + 0x4 ]
mov [ eax + 0x4 ] esi
mov ecx [ ecx + 0x4 ]
cmp edx [ ecx + 0x4 ]
pop esi
jne r-xdata
mov [ esi + 0x4 ] edx
mov ecx [ edx + 0x4 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
retn 0x4
mov [ ecx ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
retn 0x4
mov [ ecx + 0x8 ] eax
mov [ eax + 0x8 ] edx
mov [ edx + 0x4 ] eax
retn 0x4
sub_4037d0
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
call edi
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x39 ] 0x0
jne r-xdata
call edi
pop edi
pop esi
retn
mov eax [ eax + 0x4 ]
cmp [ eax + 0x39 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x39 ] 0x0
jne r-xdata
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn
lea esp [ esp ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
sub_403840
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
call edi
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
call edi
pop edi
pop esi
retn
mov eax [ eax + 0x4 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
pop edi
mov [ esi + 0x4 ] eax
pop esi
retn
lea esp [ esp ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
sub_4038b0
push 0xffffffff
push sub_4148d6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x78
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x74 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8c ]
mov [ fs : 0x0 ] eax
mov ebx [ esp + 0x9c ]
xor ebp ebp
mov esi ecx
cmp [ esi + 0x2c ] ebp
mov [ esp + 0x14 ] ebp
je r-xdata
cmp [ esi + 0xc ] ebp
je r-xdata
cmp [ esi + 0x44 ] ebp
je r-xdata
push rw-data
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ esi + 0x24 ] ebp
je r-xdata
mov edi [ ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z@IAT ]
lea eax [ esi + 0x30 ]
push eax
lea ecx [ esp + 0x54 ]
push r--data
push ecx
call edi
push r--data
push eax
lea edx [ esp + 0x80 ]
mov [ esp + 0xa8 ] ebp
mov ebp [ ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z@IAT ]
push edx
call ebp
add esp 0x18
lea ecx [ esp + 0x50 ]
mov [ esp + 0x94 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ esi + 0xc ] 0x0
je r-xdata
mov edi [ ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z@IAT ]
push r--data
lea eax [ esp + 0x38 ]
push rw-data
push eax
call edi
add esi 0x10
push esi
push eax
lea ecx [ esp + 0x2c ]
push ecx
mov [ esp + 0xac ] 0x5
call [ ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@0@Z@IAT ]
push r--data
push eax
push ebx
mov [ esp + 0xb8 ] 0x6
call edi
add esp 0x24
lea ecx [ esp + 0x18 ]
mov [ esp + 0x94 ] 0x5
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x34 ]
mov [ esp + 0x94 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea edx [ esp + 0x6c ]
push edx
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x6c ]
mov [ esp + 0x94 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov eax ebx
mov ecx [ esp + 0x8c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x74 ]
xor ecx esp
call sub_40808e
add esp 0x84
retn 0x4
add esi 0x10
push esi
lea eax [ esp + 0x1c ]
push r--data
push eax
call edi
push r--data
push eax
lea ecx [ esp + 0x48 ]
push ecx
mov [ esp + 0xac ] 0x3
call ebp
add esp 0x18
push eax
lea ecx [ esp + 0x70 ]
mov [ esp + 0x98 ] 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
lea ecx [ esp + 0x34 ]
mov [ esp + 0x94 ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x18 ]
mov [ esp + 0x94 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_403a90
push edi
mov edi [ esp + 0xc ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
cmp [ ecx + 0x2c ] 0x0
je r-xdata
push esi
mov esi [ edi + 0x8 ]
sub esi eax
mov eax 0x92492493
imul esi
add edx esi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
pop esi
jne r-xdata
mov ecx [ esp + 0x8 ]
push edi
call sub_4043b0
add esp 0x4
mov ecx [ ecx + 0x2c ]
test ecx ecx
je r-xdata
xor eax eax
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
pop edi
retn 0x8
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
pop edi
retn 0x8
mov edx [ esp + 0x8 ]
mov ecx [ edx ]
test ecx ecx
mov [ edx ] eax
je r-xdata
sub_403b00
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
mov edi ecx
je r-xdata
xor esi esi
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax [ edi + 0x50 ]
lea ecx [ edi + 0x50 ]
neg eax
sbb eax eax
test eax sub_404180
je r-xdata
push esi
call sub_4026c0
mov eax rw-data
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
jmp r-xdata
pop edi
pop esi
retn 0x4
push esi
call sub_404590
mov esi [ esi ]
add esi 0x4
jmp r-xdata
push rw-data
mov ecx eax
call [ type_info::operator==@IAT ]
test al al
je r-xdata
mov ecx [ edi + 0x8 ]
test ecx ecx
je r-xdata
sub_403b70
push 0xffffffff
push sub_4150e2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x20 ]
mov [ fs : 0x0 ] eax
mov ebx [ esp + 0x30 ]
lea eax [ esp + 0x10 ]
push eax
mov esi ecx
call sub_404600
add esp 0x4
push eax
mov ecx ebx
mov [ esp + 0x2c ] 0x0
call sub_40c260
mov [ esp + 0x28 ] 0x2
mov esi [ esp + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
mov ecx [ esp + 0x20 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x1c
retn 0x4
mov edi [ esp + 0x18 ]
cmp esi edi
je r-xdata
push esi
call ??3@YAXPAX@Z
add esp 0x4
mov edi edi
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
mov esi [ esp + 0x14 ]
sub_403c10
push 0xffffffff
push sub_4150a9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x3c ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x4c ]
xor eax eax
mov [ esp + 0x14 ] eax
mov edx [ ecx + 0x60 ]
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] edx
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x48 ] 0x1
call sub_40db00
push eax
lea ebx [ esp + 0x2c ]
mov [ esp + 0x48 ] 0x2
call sub_403f40
mov ebx 0x1
mov [ esp + 0x44 ] bl
mov esi [ esp + 0x1c ]
test esi esi
je r-xdata
lea ecx [ esp + 0x28 ]
push ecx
mov ecx ebp
call sub_40f3e0
mov [ esp + 0x44 ] 0x0
mov esi [ esp + 0x2c ]
test esi esi
mov [ esp + 0x14 ] ebx
je r-xdata
mov edi [ esp + 0x20 ]
cmp esi edi
je r-xdata
mov eax ebp
mov ecx [ esp + 0x3c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn 0x4
mov edi [ esp + 0x30 ]
cmp esi edi
je r-xdata
push esi
call ??3@YAXPAX@Z
add esp 0x4
mov edi edi
push esi
call ??3@YAXPAX@Z
add esp 0x4
mov ecx esi
call sub_405f00
add esi 0x44
cmp esi edi
jne r-xdata
mov ecx esi
call sub_405f00
add esi 0x44
cmp esi edi
jne r-xdata
mov esi [ esp + 0x1c ]
mov esi [ esp + 0x2c ]
sub_403d10
push ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_404720
add esp 0x1c
retn
sub_403d40
push ecx
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edx
call sub_4078d0
add esp 0x1c
retn 0xc
sub_403d70
mov ecx [ esp + 0x4 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x1c
jae r-xdata
xor ecx ecx
lea edx [ ecx * 8 ]
sub edx ecx
add edx edx
add edx edx
push edx
call ??2@YAPAXI@Z
add esp 0x4
add esp 0xc
retn
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call [ std::exception::exception@IAT ]
push r--data
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] r--data
call _CxxThrowException
sub_403de0
push esi
mov esi ecx
push edi
mov edi [ esp + 0xc ]
mov [ esi ] r--data
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ esi + 0x4 ] ecx
je r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x8 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0xc ] ecx
mov edx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] edx
mov eax esi
pop esi
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
sub_403e50
push 0xffffffff
push sub_413699
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x1c ]
mov [ esp + 0x14 ] 0x0
call sub_403eb0
mov ecx esi
mov [ esp + 0x14 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_403eb0
push 0xffffffff
push sub_415058
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0xc ] edi
mov [ esp + 0x18 ] 0x0
mov esi [ edi + 0xc ]
test esi esi
je r-xdata
mov [ esp + 0x18 ] 0xffffffff
mov ecx [ edi ]
test ecx ecx
je r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_403f40
push ebp
mov ebp [ esp + 0x8 ]
cmp ebx ebp
je r-xdata
mov eax ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x4 ]
test eax eax
push esi
push edi
je r-xdata
mov esi ebx
call sub_4040f0
pop edi
pop esi
mov eax ebx
pop ebp
retn 0x4
mov edi [ ebp + 0x8 ]
mov ecx edi
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
mov esi [ ebx + 0x4 ]
test esi esi
jne r-xdata
mov edx [ ebx + 0x8 ]
sub edx esi
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test esi esi
jne r-xdata
mov eax edi
mov edi [ ebp + 0x4 ]
call sub_404830
mov ecx [ ebx + 0x8 ]
push ecx
push eax
mov ecx ebx
call sub_402b10
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
cmp ecx eax
ja r-xdata
mov edx [ ebx + 0xc ]
sub edx esi
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
mov edx eax
shl edx 0x4
add edx eax
mov eax [ ebx + 0x4 ]
pop edi
lea ecx [ eax + edx * 4 ]
pop esi
mov [ ebx + 0x8 ] ecx
mov eax ebx
pop ebp
retn 0x4
mov ebp [ ebp + 0x8 ]
sub ebp eax
mov eax 0x78787879
imul ebp
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
test esi esi
je r-xdata
test esi esi
jne r-xdata
cmp ecx eax
ja r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
push esi
mov ecx ebx
call sub_402b10
mov ecx [ ebx + 0x4 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebx + 0x8 ]
sub ecx esi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
push eax
mov ecx ebx
call sub_404130
test al al
je r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov edi [ ebp + 0x4 ]
mov edx eax
shl edx 0x4
add edx eax
lea eax [ edi + edx * 4 ]
mov [ esp + 0x10 ] eax
call sub_404830
mov eax [ ebx + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov edx [ esp + 0x10 ]
push eax
push ecx
push edx
mov edx ebx
call sub_404880
pop edi
pop esi
mov [ ebx + 0x8 ] eax
mov eax ebx
pop ebp
retn 0x4
pop edi
pop esi
mov edx [ ebx + 0x4 ]
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x4 ]
push edx
push eax
push ecx
mov edx ebx
call sub_404880
mov [ ebx + 0x8 ] eax
sub_4040d0
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
retn
retn
sub_4040f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
push ebx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
jbe r-xdata
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
push edi
push esi
push ebx
push esi
lea eax [ esp + 0x18 ]
push eax
push esi
call sub_404190
pop edi
pop ebx
mov esp ebp
pop ebp
retn
call [ _invalid_parameter_noinfo@IAT ]
sub_404130
push esi
xor eax eax
push edi
mov edi [ esp + 0xc ]
cmp edi eax
mov esi ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
jne r-xdata
cmp edi 0x3c3c3c3
jbe r-xdata
pop edi
xor al al
pop esi
retn 0x4
push edi
call sub_4042d0
mov ecx edi
shl ecx 0x4
add ecx edi
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
pop edi
mov [ esi + 0xc ] edx
mov al 0x1
pop esi
retn 0x4
call sub_404240
sub_404190
push ecx
push ebx
push ebp
push esi
mov esi [ esp + 0x1c ]
xor ebx ebx
cmp esi ebx
push edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp esi [ esp + 0x28 ]
je r-xdata
mov eax [ esp + 0x1c ]
pop edi
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ebp
pop ebp
pop ebx
pop ecx
retn 0x18
mov eax [ esp + 0x18 ]
mov esi [ eax + 0x8 ]
mov eax [ esp + 0x18 ]
mov [ esp + 0x28 ] bl
mov ecx [ esp + 0x28 ]
push ecx
mov [ esp + 0x14 ] bl
mov edx [ esp + 0x14 ]
push edx
push eax
mov eax ebp
mov ebx esi
mov ecx edi
call sub_406880
sub esi edi
mov eax 0x78787879
imul esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov edx [ esp + 0x24 ]
mov ebx [ edx + 0x8 ]
mov ecx eax
shl ecx 0x4
add ecx eax
lea esi [ ebp + ecx * 4 ]
add esp 0xc
cmp esi ebx
mov edi esi
je r-xdata
mov ebp [ esp + 0x24 ]
mov edi [ esp + 0x2c ]
cmp ebp edi
je r-xdata
mov eax [ esp + 0x18 ]
mov [ eax + 0x8 ] esi
mov esi [ esp + 0x20 ]
mov edi edi
mov ecx edi
call sub_405f00
add edi 0x44
cmp edi ebx
jne r-xdata
sub_404240
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_414be2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x50 ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ esp + 0xc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x58 ] 0x0
call [ std::exception::exception@IAT ]
lea eax [ esp + 0x8 ]
mov [ esp + 0x58 ] 0x1
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x28 ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
lea ecx [ esp + 0x28 ]
mov [ esp + 0x5c ] 0x0
push ecx
mov [ esp + 0x2c ] r--data
call _CxxThrowException
sub_4042d0
mov ecx [ esp + 0x4 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x44
jae r-xdata
xor ecx ecx
mov edx ecx
shl edx 0x4
add edx ecx
add edx edx
add edx edx
push edx
call ??2@YAPAXI@Z
add esp 0x4
add esp 0xc
retn 0x4
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call [ std::exception::exception@IAT ]
push r--data
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] r--data
call _CxxThrowException
sub_404340
push 0xffffffff
push sub_41487b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
push 0x70
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
push eax
call sub_404a00
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
sub_4043b0
push ebp
mov ebp esp
push 0xffffffff
push sub_41541c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
mov ecx [ ebx ]
xor edi edi
cmp ecx edi
jne r-xdata
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
call eax
jmp r-xdata
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edi
lea eax [ ebp - 0x24 ]
push eax
lea esi [ ebp - 0x14 ]
mov [ ebp - 0x4 ] edi
call sub_405520
mov ecx [ ebx ]
cmp ecx edi
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] ecx
mov [ ebx ] eax
je r-xdata
push rw-data
mov ecx eax
call [ type_info::operator==@IAT ]
test al al
je r-xdata
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_402a40
mov ecx [ ebx ]
cmp ecx edi
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov [ ebp - 0x2c ] edi
mov ebx [ ebx ]
add ebx 0x4
mov [ ebp - 0x2c ] ebx
jmp r-xdata
mov eax rw-data
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ecx ecx
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] 0x3
mov eax [ esi + 0x4 ]
cmp eax ecx
je r-xdata
mov esi [ ebp + 0x8 ]
mov ecx esi
mov [ ebp - 0x28 ] edi
call sub_402850
cmp edi eax
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov [ ebp - 0x4 ] 0x1
mov ecx [ ebp - 0x14 ]
cmp ecx eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] eax
je r-xdata
mov ebx [ ebp - 0x1c ]
mov edx [ esi + 0x4 ]
lea ecx [ edi * 8 ]
sub ecx edi
lea eax [ edx + ecx * 4 ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_404ad0
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x14 ]
call sub_405580
lea esi [ ebp - 0x14 ]
lea ebx [ ebp - 0x48 ]
call sub_405660
mov ecx [ ebp - 0x2c ]
push eax
mov [ ebp - 0x4 ] 0x4
call sub_404ad0
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov [ ebp - 0x4 ] 0x2
mov esi [ ebp - 0x20 ]
xor eax eax
cmp esi eax
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
add edi 0x1
jmp r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ecx [ ebp - 0x20 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
xor eax eax
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
jmp r-xdata
cmp esi ebx
je r-xdata
sub_404590
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_415318
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push edx
add ecx 0x8
push ecx
call eax
add esp 0x8
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ esp + 0x4 ]
call sub_401370
push eax
mov [ esp + 0x3c ] 0x0
call sub_405770
sub_404600
push 0xffffffff
push sub_415032
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push ebp
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov ebx [ esp + 0x40 ]
xor edi edi
mov [ esp + 0x10 ] edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] edi
mov [ ebx + 0xc ] edi
mov [ esp + 0x38 ] edi
mov ecx esi
mov [ esp + 0x10 ] 0x1
call sub_402850
test eax eax
jbe r-xdata
mov eax ebx
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebp
pop ebx
add esp 0x2c
retn
xor ebp ebp
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
add eax ebp
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_40aa40
add esp 0x8
push eax
mov ecx ebx
mov [ esp + 0x3c ] 0x1
call sub_404950
lea ecx [ esp + 0x14 ]
mov [ esp + 0x38 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
add edi 0x1
add ebp 0x1c
call sub_402850
cmp edi eax
jb r-xdata
sub_4046e0
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ _invalid_parameter_noinfo@IAT ]
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x1c ]
call ebp
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
add [ esi ] 0x1
lea ecx [ esp + 0x14 ]
call sub_4037d0
jmp r-xdata
cmp [ esp + 0x18 ] ebx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
sub_404720
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
mov ecx edi
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
sub ecx eax
cmp esi edi
lea ebp [ ebx + ecx * 4 ]
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
sub ebx esi
lea esp [ esp ]
push esi
lea ecx [ ebx + esi ]
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::operator=@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_404780
push ebx
mov ebx [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp edi ebx
je r-xdata
pop edi
pop ebx
retn
push esi
nop
add edi 0x8
cmp edi ebx
jne r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
pop esi
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_4047d0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
mov edi edi
mov ecx esi
call sub_405e30
add esi 0x44
cmp esi edi
jne r-xdata
sub_404800
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
mov edi edi
mov ecx esi
call sub_405f00
add esi 0x44
cmp esi edi
jne r-xdata
sub_404830
sub esp 0x8
push ebx
mov ebx eax
xor al al
mov [ esp + 0x8 ] al
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x8 ]
mov [ esp + 0x4 ] al
mov eax [ esp + 0x4 ]
push eax
push ecx
push edx
mov eax esi
mov ecx edi
call sub_406880
sub ebx edi
mov eax 0x78787879
imul ebx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
add esp 0xc
shl ecx 0x4
add ecx eax
lea eax [ esi + ecx * 4 ]
pop ebx
add esp 0x8
retn
sub_404880
push ecx
mov ecx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_4068d0
add esp 0x1c
retn 0xc
sub_4048b0
mov ecx [ esp + 0x4 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x44
jae r-xdata
xor ecx ecx
mov edx ecx
shl edx 0x4
add edx ecx
add edx edx
add edx edx
push edx
call ??2@YAPAXI@Z
add esp 0x4
add esp 0xc
retn
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call [ std::exception::exception@IAT ]
push r--data
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] r--data
call _CxxThrowException
sub_404910
push esi
mov esi ecx
lea ecx [ esi + 0x44 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
sub_404950
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x4 ]
test ebx ebx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
xor edi edi
jmp r-xdata
mov edi [ esi + 0x8 ]
cmp ebx edi
jbe r-xdata
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jae r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
lea ecx [ esp + 0x1c ]
push ecx
mov ecx esi
call sub_404c70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
mov edx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
push esi
push edx
push 0x1
push edi
call sub_406970
add esp 0x18
add edi 0x1c
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_404a00
push 0xffffffff
push sub_414855
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
lea ecx [ esi + 0x10 ]
mov [ esp + 0x14 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esi + 0x2c ] ebx
lea ecx [ esi + 0x30 ]
mov [ esp + 0x14 ] 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esi + 0x4c ] bl
mov [ esi + 0x4e ] bl
mov [ esi + 0x4f ] bl
mov [ esi + 0x50 ] ebx
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0xc
retn 0x4
sub_404a90
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ edi * 8 ]
sub eax edi
lea eax [ ecx + eax * 4 ]
retn
sub_404ad0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x4 ]
test ebx ebx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
xor edi edi
jmp r-xdata
mov edi [ esi + 0x8 ]
cmp ebx edi
jbe r-xdata
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jae r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
lea ecx [ esp + 0x1c ]
push ecx
mov ecx esi
call sub_404d70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
mov edx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
push esi
push edx
push 0x1
push edi
call sub_406a10
add esp 0x18
add edi 0x1c
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_404bb0
push 0xffffffff
push sub_414bad
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x5
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
lea ecx [ esi + 0x30 ]
mov [ esp + 0x14 ] 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esp + 0x14 ] 0x3
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
mov eax [ eax ]
test eax eax
lea ecx [ esi + 0x58 ]
je r-xdata
lea ecx [ esi + 0x10 ]
mov [ esp + 0x14 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esp + 0x14 ] 0x1
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ esi + 0x50 ] 0x0
push 0x2
push ecx
push ecx
call eax
add esp 0xc
mov [ esi + 0x4 ] r--data
mov [ esi ] r--data
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_404c70
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov ebx [ ebp + 0xc ]
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov ecx ebx
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push 0x1
push edx
push ebx
mov ecx esi
call sub_404ea0
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jbe r-xdata
cmp edi ebx
jbe r-xdata
lea eax [ edi * 8 ]
sub eax edi
lea edi [ ebx + eax * 4 ]
cmp edi [ esi + 0x8 ]
mov [ esp + 0x14 ] ebx
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi [ esi + 0x4 ]
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebx esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
pop edi
mov [ eax ] esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
sub_404d30
push ecx
mov edx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x1c ]
push edx
push ecx
push eax
push esi
push edi
call sub_406970
add esp 0x18
lea ecx [ esi * 8 ]
sub ecx esi
lea eax [ edi + ecx * 4 ]
pop edi
pop esi
pop ecx
retn 0xc
sub_404d70
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov ebx [ ebp + 0xc ]
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov ecx ebx
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x10 ]
push ecx
push 0x1
push edx
push ebx
mov ecx esi
call sub_4051e0
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jbe r-xdata
cmp edi ebx
jbe r-xdata
lea eax [ edi * 8 ]
sub eax edi
lea edi [ ebx + eax * 4 ]
cmp edi [ esi + 0x8 ]
mov [ esp + 0x14 ] ebx
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi [ esi + 0x4 ]
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebx esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
pop edi
mov [ eax ] esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp + 0x10 ]
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
sub_404e30
push ecx
mov edx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x1c ]
push edx
push ecx
push eax
push esi
push edi
call sub_406a10
add esp 0x18
lea ecx [ esi * 8 ]
sub ecx esi
lea eax [ edi + ecx * 4 ]
pop edi
pop esi
pop ecx
retn 0xc
sub_404e70
push ebx
push esi
mov esi ecx
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
mov [ edi ] 0x0
jbe r-xdata
mov [ edi ] esi
mov [ edi + 0x4 ] ebx
mov eax edi
pop edi
pop esi
pop ebx
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_404ea0
push ebp
mov ebp esp
push 0xffffffff
push sub_414fe9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x14 ]
mov esi ecx
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x44 ] esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x4 ]
cmp ebx eax
je r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
mov [ ebp - 0x34 ] eax
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40808e
mov esp ebp
pop ebp
retn 0x10
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test ebx ebx
jne r-xdata
call sub_404240
mov ecx 0x9249249
sub ecx eax
cmp ecx edi
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edx ecx
sub edx ebx
mov [ ebp - 0x3c ] edx
mov eax 0x92492493
imul edx
add edx [ ebp - 0x3c ]
mov [ ebp - 0x40 ] ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
lea eax [ edi * 8 ]
jae r-xdata
mov eax ecx
shr eax 0x1
mov edx 0x9249249
sub edx eax
cmp edx ecx
jae r-xdata
mov ecx [ ebp - 0x34 ]
add eax edi
cmp ecx eax
jae r-xdata
sub eax edi
add eax eax
push ecx
add eax eax
mov edi ecx
push ecx
sub edi eax
push edi
mov ecx esi
mov [ ebp - 0x38 ] eax
call sub_405910
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x40 ]
push eax
push edi
push ebx
call sub_405970
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x30 ]
push ecx
add edx ebx
push edx
push ebx
call sub_405940
add esp 0x18
sub eax edi
add eax eax
add eax eax
mov [ ebp - 0x38 ] eax
add eax ebx
push eax
push ecx
push ebx
mov ecx esi
call sub_405910
mov [ ebp - 0x4 ] 0x3
mov ecx [ esi + 0x8 ]
sub ecx ebx
lea edx [ ebp - 0x30 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
sub edi eax
mov eax [ esi + 0x8 ]
push edi
push eax
mov ecx esi
call sub_404d30
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x0
add [ esi + 0x8 ] eax
mov esi [ esi + 0x8 ]
lea ecx [ ebp - 0x30 ]
push ecx
sub esi eax
push esi
push ebx
call sub_405940
add esp 0xc
jmp r-xdata
add ecx eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x34 ]
push 0x0
push eax
call sub_403d70
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp - 0x3c ]
push edx
push esi
push eax
push ebx
push ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] eax
call sub_4074c0
add esp 0x20
lea ecx [ ebp - 0x30 ]
push ecx
push edi
push eax
mov ecx esi
mov [ ebp - 0x38 ] eax
call sub_404d30
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp - 0x3c ]
push edx
push esi
push eax
push ecx
push ebx
mov [ ebp - 0x38 ] eax
call sub_4074c0
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x4 ]
add esp 0x18
cmp ebx eax
je r-xdata
mov ecx esi
call sub_402850
add eax edi
mov [ ebp - 0x34 ] eax
add eax edi
cmp [ ebp - 0x34 ] eax
jae r-xdata
add edi eax
test ebx ebx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov eax [ ebp - 0x34 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x40 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0xc ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
push ebx
mov ecx esi
call sub_402a90
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_405148
mov ecx [ ebp + 0x10 ]
lea eax [ ecx * 8 ]
sub eax ecx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x8 ]
add eax eax
add eax eax
add edx eax
push edx
mov edx [ ebp + 0xc ]
add eax edx
push eax
call sub_402a90
push 0x0
push 0x0
call _CxxThrowException
sub_4051e0
push ebp
mov ebp esp
push 0xffffffff
push sub_414fb9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x14 ]
mov esi ecx
push eax
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x44 ] esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x4 ]
cmp ebx eax
je r-xdata
mov edi [ ebp + 0x10 ]
test edi edi
mov [ ebp - 0x34 ] eax
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40808e
mov esp ebp
pop ebp
retn 0x10
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test ebx ebx
jne r-xdata
call sub_404240
mov ecx 0x9249249
sub ecx eax
cmp ecx edi
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov ebx [ ebp + 0xc ]
mov edx ecx
sub edx ebx
mov [ ebp - 0x3c ] edx
mov eax 0x92492493
imul edx
add edx [ ebp - 0x3c ]
mov [ ebp - 0x40 ] ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax edi
lea eax [ edi * 8 ]
jae r-xdata
mov eax ecx
shr eax 0x1
mov edx 0x9249249
sub edx eax
cmp edx ecx
jae r-xdata
mov ecx [ ebp - 0x34 ]
add eax edi
cmp ecx eax
jae r-xdata
sub eax edi
add eax eax
push ecx
add eax eax
mov edi ecx
push ecx
sub edi eax
push edi
mov ecx esi
mov [ ebp - 0x38 ] eax
call sub_4059a0
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x40 ]
push eax
push edi
push ebx
call sub_405a00
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x30 ]
push ecx
add edx ebx
push edx
push ebx
call sub_4059d0
add esp 0x18
sub eax edi
add eax eax
add eax eax
mov [ ebp - 0x38 ] eax
add eax ebx
push eax
push ecx
push ebx
mov ecx esi
call sub_4059a0
mov [ ebp - 0x4 ] 0x3
mov ecx [ esi + 0x8 ]
sub ecx ebx
lea edx [ ebp - 0x30 ]
push edx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
sub edi eax
mov eax [ esi + 0x8 ]
push edi
push eax
mov ecx esi
call sub_404e30
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x0
add [ esi + 0x8 ] eax
mov esi [ esi + 0x8 ]
lea ecx [ ebp - 0x30 ]
push ecx
sub esi eax
push esi
push ebx
call sub_4059d0
add esp 0xc
jmp r-xdata
add ecx eax
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x34 ] 0x0
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x34 ]
push 0x0
push eax
call sub_403d70
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x1
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp - 0x3c ]
push edx
push esi
push eax
push ebx
push ecx
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] eax
call sub_4075a0
add esp 0x20
lea ecx [ ebp - 0x30 ]
push ecx
push edi
push eax
mov ecx esi
mov [ ebp - 0x38 ] eax
call sub_404e30
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x3c ] 0x0
mov edx [ ebp - 0x3c ]
push edx
mov edx [ ebp - 0x3c ]
push edx
push esi
push eax
push ecx
push ebx
mov [ ebp - 0x38 ] eax
call sub_4075a0
xor eax eax
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x4 ]
add esp 0x18
cmp ebx eax
je r-xdata
mov ecx esi
call sub_402850
add eax edi
mov [ ebp - 0x34 ] eax
add eax edi
cmp [ ebp - 0x34 ] eax
jae r-xdata
add edi eax
test ebx ebx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx ebx
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov eax [ ebp - 0x34 ]
lea ecx [ eax * 8 ]
sub ecx eax
mov eax [ ebp - 0x40 ]
lea edx [ eax + ecx * 4 ]
lea ecx [ edi * 8 ]
sub ecx edi
mov [ esi + 0xc ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
push ebx
mov ecx esi
call sub_402a10
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_405488
mov ecx [ ebp + 0x10 ]
lea eax [ ecx * 8 ]
sub eax ecx
mov ecx [ ebp - 0x44 ]
mov edx [ ecx + 0x8 ]
add eax eax
add eax eax
add edx eax
push edx
mov edx [ ebp + 0xc ]
add eax edx
push eax
call sub_402a10
push 0x0
push 0x0
call _CxxThrowException
sub_405520
push 0xffffffff
push sub_41487b
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
push 0x14
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0x18 ]
push ecx
push eax
call sub_405fd0
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn 0x4
sub_405580
push ebp
mov ebp esp
push 0xffffffff
push sub_4153bd
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa4
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push esi
mov edi edx
call sub_409ad0
push 0x0
push edi
call sub_406540
add esp 0xc
push eax
lea ecx [ ebp - 0x30 ]
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov [ ebp - 0x4 ] 0x0
mov ebx 0x1
lea eax [ ebp - 0x30 ]
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] bl
call sub_4066c0
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp - 0x4 ] 0x2
call sub_4066e0
mov ecx [ esi ]
test ecx ecx
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x34 ] ecx
mov [ esi ] eax
je r-xdata
lea ecx [ ebp - 0x50 ]
mov [ ebp - 0x4 ] bl
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40808e
mov esp ebp
pop ebp
retn
mov eax [ ecx ]
mov edx [ eax ]
push ebx
call edx
sub_405660
push 0xffffffff
push sub_414f88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
test esi esi
mov [ esp + 0x4 ] 0x0
je r-xdata
push r--data
lea ecx [ esp + 0xc ]
call [ std::bad_cast::bad_cast@IAT ]
mov [ esp + 0x8 ] r--data
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0x20 ] 0x0
call sub_406750
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax rw-data
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
jmp r-xdata
mov eax [ esi ]
add eax 0x4
jne r-xdata
push rw-data
mov ecx eax
call [ type_info::operator==@IAT ]
test al al
je r-xdata
push eax
mov ecx ebx
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov eax ebx
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x1c
retn
sub_405700
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41537b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xf8 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
lea esi [ esp + 0x80 ]
call sub_4067b0
mov ecx eax
lea esi [ esp + 0x8 ]
mov [ esp + 0x100 ] 0x0
call sub_4067f0
push r--data
mov eax esi
push eax
call _CxxThrowException
sub_405770
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4152eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x84
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x88 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ esp + 0xc ]
push ecx
call sub_406810
push eax
lea edx [ esp + 0x50 ]
push edx
mov [ esp + 0xa0 ] 0x0
call sub_406860
add esp 0x10
push r--data
lea eax [ esp + 0x48 ]
push eax
call _CxxThrowException
sub_4057e0
push 0xffffffff
push sub_414f58
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
test esi esi
je r-xdata
push r--data
lea ecx [ esp + 0x8 ]
call [ std::bad_cast::bad_cast@IAT ]
mov [ esp + 0x4 ] r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x1c ] 0x0
call sub_406750
mov ecx [ esi ]
test ecx ecx
je r-xdata
mov eax rw-data
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
call edx
jmp r-xdata
mov eax [ esi ]
add eax 0x4
jne r-xdata
push rw-data
mov ecx eax
call [ type_info::operator==@IAT ]
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x18
retn
sub_405870
push ebp
mov ebp esp
push 0xffffffff
push sub_414801
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x1c
jmp r-xdata
push edi
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp edi [ ebp + 0xc ]
je r-xdata
sub_4058da
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_405910
push ecx
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edx
call sub_4074c0
add esp 0x1c
retn 0xc
sub_405940
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ esp + 0x18 ]
push ebx
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
pop ebx
sub_405970
push ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_406ab0
add esp 0x1c
retn
sub_4059a0
push ecx
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edx
call sub_4075a0
add esp 0x1c
retn 0xc
sub_4059d0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ esp + 0x18 ]
push ebx
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::operator=@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
pop ebx
sub_405a00
push ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_406b10
add esp 0x1c
retn
sub_405a70
push 0xffffffff
push sub_4152b8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_405b30
mov [ esi ] r--data
test edi edi
mov [ esp + 0x18 ] 0x0
je r-xdata
xor edi edi
add edi 0x60
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x68 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0x6c ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x70 ] edx
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esi + 0x60 ] r--data
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ esi + 0x64 ] ecx
je r-xdata
sub_405b30
push 0xffffffff
push sub_4138f4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_401170
lea eax [ edi + 0x28 ]
mov [ esp + 0x18 ] 0x0
push eax
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add edi 0x44
push edi
lea ecx [ esi + 0x44 ]
mov [ esp + 0x1c ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_405c00
push 0xffffffff
push sub_414b28
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_4010e0
mov [ esi ] r--data
test edi edi
mov [ esp + 0x18 ] 0x0
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x38 ] edx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esi + 0x28 ] r--data
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ esi + 0x2c ] ecx
je r-xdata
sub_405d00
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov [ esi + 0x60 ] r--data
mov ecx [ esi + 0x64 ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x44 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_405d70
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_405dd0
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_405e30
push 0xffffffff
push sub_414b04
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x14 ] esi
mov [ esp + 0x20 ] 0x1
mov edi [ esi + 0x34 ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esp + 0x20 ] bl
mov edi [ esi + 0x24 ]
cmp edi ebx
je r-xdata
mov ebp [ esi + 0x38 ]
cmp edi ebp
je r-xdata
mov ecx esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esp + 0x20 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ebp [ esi + 0x28 ]
cmp edi ebp
je r-xdata
mov eax [ esi + 0x34 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx edi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add edi 0x1c
cmp edi ebp
jne r-xdata
mov eax [ esi + 0x24 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
lea esp [ esp ]
mov ecx edi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add edi 0x1c
cmp edi ebp
jne r-xdata
sub_405f00
push 0xffffffff
push sub_4147d4
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x14 ] esi
mov [ esp + 0x20 ] 0x1
mov edi [ esi + 0x34 ]
xor ebx ebx
cmp edi ebx
je r-xdata
mov [ esi + 0x34 ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi + 0x3c ] ebx
mov [ esp + 0x20 ] bl
mov edi [ esi + 0x24 ]
cmp edi ebx
je r-xdata
mov ebp [ esi + 0x38 ]
cmp edi ebp
je r-xdata
mov ecx esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x28 ] ebx
mov [ esi + 0x2c ] ebx
mov [ esp + 0x20 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov ebp [ esi + 0x28 ]
cmp edi ebp
je r-xdata
mov eax [ esi + 0x34 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add edi 0x1c
cmp edi ebp
jne r-xdata
mov eax [ esi + 0x24 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
lea esp [ esp ]
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add edi 0x1c
cmp edi ebp
jne r-xdata
sub_405fd0
push 0xffffffff
push sub_414f28
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov eax [ esp + 0x1c ]
mov [ esp + 0x10 ] 0x0
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call sub_406430
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x8
sub_406040
push 0xffffffff
push sub_41322b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x14
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
add esi 0x4
push esi
push eax
call sub_405fd0
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_4060b0
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov [ esi + 0x60 ] r--data
mov ecx [ esi + 0x64 ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x44 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_406110
push esi
mov esi ecx
mov [ esi + 0x74 ] r--data
mov [ esi + 0x74 ] r--data
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov [ esi + 0x60 ] r--data
mov ecx [ esi + 0x64 ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x44 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_406180
push 0xffffffff
push sub_414d2b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x78
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor eax eax
cmp esi eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi - 0x74 ]
push eax
mov ecx esi
call sub_405a70
lea eax [ esi + 0x74 ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov [ eax ] r--data
sub_406200
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x78
lea eax [ ecx - 0x74 ]
push eax
lea ecx [ esp + 0x4 ]
call sub_405a70
push r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] r--data
mov [ esp + 0x68 ] r--data
mov [ esp + 0x7c ] r--data
call _CxxThrowException
sub_406240
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_406280
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_4062d0
push 0xffffffff
push sub_414d2b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x40
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor eax eax
cmp esi eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi - 0x3c ]
push eax
mov ecx esi
call sub_405c00
lea eax [ esi + 0x3c ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ eax ] r--data
sub_406350
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x40
lea eax [ ecx - 0x3c ]
push eax
lea ecx [ esp + 0x4 ]
call sub_405c00
push r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] r--data
mov [ esp + 0x30 ] r--data
mov [ esp + 0x44 ] r--data
call _CxxThrowException
sub_4063b0
push 0xffffffff
push sub_414ac8
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov ebx [ esp + 0x24 ]
xor ebp ebp
mov [ esp + 0x1c ] ebp
mov esi [ ebx + 0x8 ]
cmp esi ebp
je r-xdata
mov [ ebx + 0x8 ] ebp
mov [ ebx + 0xc ] ebp
mov [ ebx + 0x10 ] ebp
mov [ ebx ] r--data
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
mov edi [ ebx + 0xc ]
cmp esi edi
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
lea esp [ esp ]
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_406430
push ebp
mov ebp esp
push 0xffffffff
push sub_414f00
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x18 ] edi
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
xor ecx ecx
cmp eax ecx
jne r-xdata
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov esi edx
shr esi 0x1f
add esi edx
xor ecx ecx
xor esi esi
jmp r-xdata
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi 0x9249249
jbe r-xdata
cmp esi ecx
mov [ edi + 0x4 ] ecx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] ecx
je r-xdata
push ecx
push esi
call sub_403d70
lea ecx [ esi * 8 ]
sub ecx esi
lea edx [ eax + ecx * 4 ]
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] edx
mov [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x8 ]
add esp 0x8
cmp [ ebx + 0x4 ] eax
mov [ ebp - 0x14 ] eax
jbe r-xdata
call sub_404240
mov esi [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
push edi
push eax
mov eax [ ebp - 0x14 ]
push eax
push esi
call sub_4078d0
add esp 0x18
mov [ edi + 0x8 ] eax
call [ _invalid_parameter_noinfo@IAT ]
sub_406540
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_414ed6
mov eax [ fs : 0x0 ]
push eax
sub esp 0x100
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x110 ]
mov [ fs : 0x0 ] eax
test [ rw-data ] 0x1
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
or [ rw-data ] 0x1
mov ecx rw-data
mov [ esp + 0x118 ] 0x0
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
push ??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
call sub_408161
add esp 0x4
mov [ esp + 0x118 ] 0xffffffff
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov ecx [ ebx + 0x8 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jbe r-xdata
push r--data
lea ecx [ esp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x11c ] 0x2
call sub_401230
push r--data
lea eax [ esp + 0xb0 ]
push eax
call _CxxThrowException
mov eax rw-data
mov ecx [ esp + 0x110 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test esi esi
je r-xdata
push r--data
lea ecx [ esp + 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x50 ]
mov [ esp + 0x11c ] 0x1
call sub_401230
push r--data
lea ecx [ esp + 0x50 ]
push ecx
call _CxxThrowException
mov edi [ ebx + 0x8 ]
mov ecx edi
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jne r-xdata
cmp esi edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jbe r-xdata
cmp esi [ ebx + 0x8 ]
jb r-xdata
call edi
mov eax esi
mov ecx [ esp + 0x110 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call edi
sub_4066e0
push 0xffffffff
push sub_41322b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x20
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0x1c ]
push ecx
mov ecx eax
call sub_407010
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_406750
push 0xffffffff
push sub_414e88
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4c ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x5c ]
lea esi [ esp + 0x8 ]
call sub_407460
mov ecx eax
lea esi [ esp + 0x28 ]
mov [ esp + 0x54 ] 0x0
call sub_4074a0
push r--data
mov eax esi
push eax
call _CxxThrowException
sub_4067b0
push ecx
push edi
xor edi edi
push eax
mov ecx esi
mov [ esp + 0x8 ] edi
call sub_405b30
mov [ esi + 0x60 ] r--data
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov eax esi
pop edi
pop ecx
retn
sub_406810
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
push eax
mov ecx esi
mov [ esp + 0xc ] edi
call sub_4010e0
mov [ esi + 0x28 ] r--data
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0xffffffff
pop edi
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
pop esi
pop ecx
retn
sub_406880
push esi
mov esi ecx
cmp esi ebx
push edi
mov edi eax
je r-xdata
pop edi
pop esi
retn
lea ebx [ ebx ]
push esi
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov eax [ esi + 0x1c ]
lea ecx [ esi + 0x20 ]
push ecx
lea ecx [ edi + 0x20 ]
mov [ edi + 0x1c ] eax
call sub_406d10
lea edx [ esi + 0x30 ]
push edx
lea ecx [ edi + 0x30 ]
call sub_406d10
mov al [ esi + 0x40 ]
mov [ edi + 0x40 ] al
add esi 0x44
add edi 0x44
cmp esi ebx
jne r-xdata
mov eax edi
sub_4068d0
push ebp
mov ebp esp
push 0xffffffff
push sub_414e61
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x44
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x44
jmp r-xdata
push edi
mov ecx esi
call sub_4076e0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_406939
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
mov ecx esi
call sub_405f00
add esi 0x44
cmp esi edi
jne r-xdata
sub_406970
push ebp
mov ebp esp
push 0xffffffff
push sub_414aa1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0xc ]
mov [ ebp - 0x14 ] esi
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
sub edi 0x1
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp edi ebx
jbe r-xdata
sub_4069dc
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_406a10
push ebp
mov ebp esp
push 0xffffffff
push sub_414a71
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0xc ]
mov [ ebp - 0x14 ] esi
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
sub edi 0x1
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
cmp edi ebx
jbe r-xdata
sub_406a7c
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_406ab0
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x18 ]
push edi
mov edi [ esp + 0x14 ]
mov ecx esi
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
sub ecx eax
add ecx ecx
add ecx ecx
mov ebx ebp
sub ebx ecx
cmp edi esi
je r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn
sub ebp esi
mov edi edi
sub esi 0x1c
push esi
lea ecx [ esi + ebp ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap@IAT ]
cmp esi edi
jne r-xdata
sub_406b10
push ebx
push ebp
push esi
mov esi [ esp + 0x14 ]
mov ebp [ esp + 0x18 ]
push edi
mov edi [ esp + 0x14 ]
mov ecx esi
sub ecx edi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
sub ecx eax
add ecx ecx
add ecx ecx
mov ebx ebp
sub ebx ecx
cmp edi esi
je r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn
sub ebp esi
mov edi edi
sub esi 0x1c
push esi
lea ecx [ esi + ebp ]
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::swap@IAT ]
cmp esi edi
jne r-xdata
sub_406ba0
push 0xffffffff
push sub_414a38
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call [ std::bad_cast::bad_cast@IAT ]
mov [ esi ] r--data
test edi edi
mov [ esp + 0x18 ] 0x0
je r-xdata
xor edi edi
add edi 0xc
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x14 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0x18 ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x1c ] edx
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esi + 0xc ] r--data
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ esi + 0x10 ] ecx
je r-xdata
sub_406c60
push esi
mov esi ecx
mov [ esi + 0x20 ] r--data
mov [ esi + 0x20 ] r--data
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0xc ] r--data
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call [ std::bad_cast::~bad_cast@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_406cc0
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0xc ] r--data
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call [ std::bad_cast::~bad_cast@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_406d10
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
mov esi ecx
cmp esi ebp
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_407290
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ebx [ esi + 0x8 ]
sub ebx edi
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test edi edi
jne r-xdata
mov [ esp + 0x14 ] 0x0
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push edx
push edi
push eax
mov eax [ ebp + 0x4 ]
push eax
call sub_407970
mov ecx [ esi + 0x8 ]
add esp 0x18
push ecx
push eax
mov ecx esi
call sub_402a90
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
cmp ecx eax
ja r-xdata
mov ebx [ esi + 0xc ]
sub ebx edi
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
lea edx [ eax * 8 ]
sub edx eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + edx * 4 ]
mov [ esi + 0x8 ] ecx
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
test edi edi
je r-xdata
mov ecx esi
call sub_402850
lea edx [ eax * 8 ]
sub edx eax
mov eax [ ebp + 0x4 ]
lea ebx [ eax + edx * 4 ]
push edi
push ebx
push eax
call sub_407680
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x8 ]
add esp 0xc
push eax
push ecx
push ebx
mov ecx esi
call sub_4076b0
mov [ esi + 0x8 ] eax
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
cmp ecx eax
ja r-xdata
mov ecx ebp
call sub_402850
push eax
mov ecx esi
call sub_402880
test al al
je r-xdata
mov edx [ esi + 0x8 ]
push edx
push edi
mov ecx esi
call sub_402a90
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0x4 ]
push ecx
push edx
push eax
mov ecx esi
call sub_4076b0
mov [ esi + 0x8 ] eax
sub_406ea0
push 0xffffffff
push sub_415353
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ esp + 0x20 ]
push edi
mov ecx esi
call sub_405a70
mov [ esp + 0x18 ] 0x0
mov [ esi + 0x74 ] r--data
test edi edi
mov [ esp + 0x18 ] 0x1
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov [ esi + 0x74 ] r--data
je r-xdata
xor ebx ebx
lea ebx [ edi + 0x60 ]
jmp r-xdata
test edi edi
mov [ esi + 0x64 ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x64 ]
test ecx ecx
mov edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x68 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x6c ] ecx
mov edx [ ebx + 0x10 ]
mov [ esi + 0x70 ] edx
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
sub_406f50
push 0xffffffff
push sub_414e33
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
mov edi [ esp + 0x24 ]
push edi
call sub_405c00
mov [ esp + 0x1c ] 0x0
mov [ esi + 0x3c ] r--data
test edi edi
mov [ esp + 0x1c ] 0x1
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
je r-xdata
xor ebx ebx
lea ebx [ edi + 0x28 ]
jmp r-xdata
test edi edi
mov [ esi + 0x2c ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x2c ]
test ecx ecx
mov edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ ebx + 0x10 ]
mov [ esi + 0x38 ] edx
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
sub_407010
push 0xffffffff
push sub_4131f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov eax [ esp + 0x1c ]
mov [ esp + 0x14 ] 0x0
push eax
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_407080
push 0xffffffff
push sub_41322b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x20
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
add esi 0x4
push esi
mov ecx eax
call sub_407010
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_407120
push esi
mov esi ecx
mov [ esi + 0x20 ] r--data
mov [ esi + 0x20 ] r--data
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0xc ] r--data
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
pop esi
jmp [ std::bad_cast::~bad_cast@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_407160
push 0xffffffff
push sub_414d2b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x24
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor eax eax
cmp esi eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi - 0x20 ]
push eax
mov ecx esi
call sub_406ba0
lea eax [ esi + 0x20 ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov [ eax ] r--data
sub_407220
push 0xffffffff
push sub_4131f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x4 ]
mov [ esp + 0x14 ] 0x0
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
test [ esp + 0x1c ] 0x1
mov [ esi ] r--data
je r-xdata
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_407290
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x8
push ebx
push ebp
mov ebp [ _invalid_parameter_noinfo@IAT ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x8 ]
cmp [ esi + 0x4 ] edi
jbe r-xdata
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jbe r-xdata
call ebp
push edi
push esi
push ebx
push esi
lea eax [ esp + 0x20 ]
push eax
mov ecx esi
call sub_4072e0
pop edi
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn
call ebp
sub_4072e0
push ebp
push esi
mov esi [ esp + 0x10 ]
test esi esi
mov ebp ecx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp esi [ esp + 0x18 ]
je r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] esi
pop esi
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x14
mov eax [ ebp + 0x8 ]
push ebx
push edi
mov [ esp + 0x20 ] 0x0
mov esi [ esp + 0x20 ]
push esi
mov esi [ esp + 0x18 ]
push esi
mov esi [ esp + 0x1c ]
push esi
push ecx
push eax
push edx
call sub_407970
mov ebx [ ebp + 0x8 ]
mov edi eax
add esp 0x18
cmp edi ebx
mov esi edi
je r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
cmp ecx edx
je r-xdata
mov ecx [ esp + 0x1c ]
mov esi [ esp + 0x18 ]
mov [ ebp + 0x8 ] edi
pop edi
pop ebx
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi ebx
jne r-xdata
sub_407360
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_414df1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x40
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x38 ] eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
xor esi esi
mov [ esp + 0x8 ] esi
cmp [ eax + 0x18 ] 0x8
jb r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
mov [ esp + 0x50 ] 0xffffffff
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
push r--data
lea ecx [ esp + 0x14 ]
call [ std::bad_cast::bad_cast@IAT ]
mov eax rw-data
mov [ esp + 0x10 ] r--data
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] eax
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0x54 ] 0x1
call sub_407870
push ecx
mov ecx edi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov ecx esi
mov [ esp + 0x50 ] 0xffffffff
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov eax edi
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
mov ecx [ esp + 0x38 ]
xor ecx esp
call sub_40808e
mov esp ebp
pop ebp
retn
mov eax [ eax + 0x14 ]
lea eax [ ecx + eax * 2 ]
mov [ esp + 0x8 ] ecx
lea ecx [ esp + 0x24 ]
mov [ esp + 0xc ] eax
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov [ esp + 0x50 ] esi
lea esi [ esp + 0x24 ]
lea eax [ esp + 0x8 ]
call sub_407810
test al al
mov ecx esi
je r-xdata
sub_407460
push ecx
push edi
xor edi edi
push eax
mov ecx esi
mov [ esp + 0x8 ] edi
call [ std::bad_cast::bad_cast@IAT ]
mov [ esi + 0xc ] r--data
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] 0xffffffff
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov eax esi
pop edi
pop ecx
retn
sub_4074c0
push ebp
mov ebp esp
push 0xffffffff
push sub_414a0a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ecx ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40808e
mov esp ebp
pop ebp
retn
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x40 ] esi
test esi esi
mov [ ebp - 0x4 ] 0x2
je r-xdata
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::swap@IAT ]
add esi 0x1c
mov [ ebp - 0x34 ] esi
add edi 0x1c
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp edi ebx
je r-xdata
sub_4075a0
push ebp
mov ebp esp
push 0xffffffff
push sub_4149ca
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0x0
lea ecx [ ecx ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x4 ] 0xffffffff
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40808e
mov esp ebp
pop ebp
retn
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x40 ] esi
test esi esi
mov [ ebp - 0x4 ] 0x2
je r-xdata
push edi
mov ecx esi
mov [ ebp - 0x4 ] 0x1
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::swap@IAT ]
add esi 0x1c
mov [ ebp - 0x34 ] esi
add edi 0x1c
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
cmp edi ebx
je r-xdata
sub_407680
push ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0xc ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_407970
add esp 0x1c
retn
sub_4076b0
push ecx
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edx
call sub_405870
add esp 0x1c
retn 0xc
sub_4076e0
push 0xffffffff
push sub_414dc4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esp + 0x18 ] 0x0
mov eax [ edi + 0x1c ]
lea ecx [ edi + 0x20 ]
push ecx
lea ecx [ esi + 0x20 ]
mov [ esi + 0x1c ] eax
call sub_402380
lea edx [ edi + 0x30 ]
push edx
lea ecx [ esi + 0x30 ]
mov [ esp + 0x1c ] 0x1
call sub_402380
mov al [ edi + 0x40 ]
mov [ esi + 0x40 ] al
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_407760
push 0xffffffff
push sub_414d93
mov eax [ fs : 0x0 ]
push eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov esi [ esp + 0x20 ]
push edi
mov ecx esi
call sub_406ba0
mov [ esp + 0x18 ] 0x0
mov [ esi + 0x20 ] r--data
test edi edi
mov [ esp + 0x18 ] 0x1
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x20 ] r--data
je r-xdata
xor ebx ebx
lea ebx [ edi + 0xc ]
jmp r-xdata
test edi edi
mov [ esi + 0x10 ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x10 ]
test ecx ecx
mov edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x14 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x18 ] ecx
mov edx [ ebx + 0x10 ]
mov [ esi + 0x1c ] edx
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
sub_407810
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x18
push ebx
mov ebx [ eax ]
push edi
mov edi [ eax + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::end@IAT ]
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
lea eax [ esp + 0x18 ]
mov [ esp + 0x8 ] ecx
push eax
mov ecx esi
mov [ esp + 0x10 ] edx
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::begin@IAT ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ esp + 0xc ]
push edi
push ebx
push edx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push ecx
push edx
push eax
mov ecx esi
call sub_407e10
pop edi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn
sub_407870
push 0xffffffff
push sub_414d58
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x5c ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x6c ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
call sub_407cd0
push eax
lea edx [ esp + 0x38 ]
push edx
mov [ esp + 0x74 ] 0x0
call sub_407d30
add esp 0x10
push r--data
lea eax [ esp + 0x30 ]
push eax
call _CxxThrowException
sub_4078d0
push ebp
mov ebp esp
push 0xffffffff
push sub_414991
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] esi
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x1c
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x1c
jmp r-xdata
push edi
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
cmp edi [ ebp + 0xc ]
je r-xdata
sub_40793a
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_407970
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
mov ebx [ esp + 0x18 ]
push edi
mov edi [ esp + 0x18 ]
mov ecx edi
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
lea ecx [ eax * 8 ]
sub ecx eax
cmp esi edi
lea ebp [ ebx + ecx * 4 ]
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
sub ebx esi
lea esp [ esp ]
push esi
lea ecx [ ebx + esi ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_407a00
push 0xffffffff
push sub_414958
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call [ std::bad_cast::bad_cast@IAT ]
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov [ esp + 0x18 ] 0x0
mov [ esi + 0x14 ] r--data
mov ecx [ edi + 0x18 ]
test ecx ecx
mov [ esi + 0x18 ] ecx
je r-xdata
mov ecx [ edi + 0x1c ]
mov [ esi + 0x1c ] ecx
mov edx [ edi + 0x20 ]
mov [ esi + 0x20 ] edx
mov eax [ edi + 0x24 ]
mov [ esi + 0x24 ] eax
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov edx [ ecx ]
mov eax [ edx + 0xc ]
call eax
sub_407aa0
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call [ std::bad_cast::bad_cast@IAT ]
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
pop edi
mov [ esi + 0x10 ] ecx
mov eax esi
pop esi
retn 0x4
sub_407ad0
push esi
mov esi ecx
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov ecx esi
mov [ esi ] r--data
call [ std::bad_cast::~bad_cast@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_407b30
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov ecx esi
mov [ esi ] r--data
call [ std::bad_cast::~bad_cast@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_407b80
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov [ esi ] r--data
mov ecx esi
pop esi
jmp [ std::bad_cast::~bad_cast@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_407bc0
push esi
mov esi ecx
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x14 ] r--data
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov [ esi ] r--data
mov ecx esi
pop esi
jmp [ std::bad_cast::~bad_cast@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_407c10
push 0xffffffff
push sub_414d2b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x2c
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor eax eax
cmp esi eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi - 0x28 ]
push eax
mov ecx esi
call sub_407a00
lea eax [ esi + 0x28 ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ eax ] r--data
sub_407cd0
push ecx
push ebx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x18 ]
xor ebx ebx
push edi
mov ecx esi
mov [ esp + 0x10 ] ebx
call [ std::bad_cast::bad_cast@IAT ]
mov [ esi ] r--data
mov eax [ edi + 0xc ]
mov [ esi + 0xc ] eax
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov [ esi + 0x14 ] r--data
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x24 ] 0xffffffff
pop edi
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov eax esi
pop esi
pop ebx
pop ecx
retn
sub_407d50
push 0xffffffff
push sub_414d03
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
mov edi [ esp + 0x24 ]
push edi
call sub_407a00
mov [ esp + 0x1c ] 0x0
mov [ esi + 0x28 ] r--data
test edi edi
mov [ esp + 0x1c ] 0x1
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x28 ] r--data
je r-xdata
xor ebx ebx
lea ebx [ edi + 0x14 ]
jmp r-xdata
test edi edi
mov [ esi + 0x18 ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x18 ]
test ecx ecx
mov edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x1c ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x20 ] ecx
mov edx [ ebx + 0x10 ]
mov [ esi + 0x24 ] edx
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
sub_407e10
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_414789
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x38 ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x18 ]
mov ebx [ ebp + 0x1c ]
push 0x0
mov esi ecx
push 0x0
lea ecx [ esp + 0x1c ]
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::_Tidy@IAT ]
mov eax [ esp + 0x10 ]
push eax
push ebx
push edi
lea ecx [ esp + 0x20 ]
call sub_407ed0
mov [ esp + 0x40 ] 0x0
mov edx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x8 ]
push eax
push ecx
push edx
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::replace@IAT ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x40 ] 0xffffffff
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov eax esi
mov ecx [ esp + 0x38 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_40808e
mov esp ebp
pop ebp
retn 0x1c
sub_407ed0
push ebp
mov ebp esp
push 0xffffffff
push sub_414760
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax ebx
sub eax esi
sar eax 0x1
push eax
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::reserve@IAT ]
mov [ ebp - 0x4 ] 0x0
lea ebx [ ebx ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx eax [ esi ]
push eax
push 0x1
mov ecx edi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::append@IAT ]
add esi 0x2
jmp r-xdata
cmp esi ebx
je r-xdata
sub_40803e
push ebx
mov bl [ esp + 0x8 ]
test bl 0x2
push esi
mov esi ecx
je r-xdata
call ?_type_info_dtor_internal_method@type_info@@QAEXXZ
test bl 0x1
je r-xdata
push edi
push ?_type_info_dtor_internal_method@type_info@@QAEXXZ
lea edi [ esi - 0x4 ]
push [ edi ]
push 0xc
push esi
call sub_4084e6
test bl 0x1
je r-xdata
mov eax esi
push esi
call ??3@YAXPAX@Z
pop ecx
mov eax edi
pop edi
jmp r-xdata
push edi
call operator delete
pop ecx
pop esi
pop ebx
retn 0x4
sub_4080bc
push 0x14
push r--data
call sub_408660
push [ rw-data ]
mov esi [ _decode_pointer@IAT ]
call esi
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x8
call _lock
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
call esi
mov [ ebp - 0x1c ] eax
push [ rw-data ]
call esi
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
mov esi [ _encode_pointer@IAT ]
call esi
pop ecx
push eax
call __dllonexit
mov [ ebp - 0x24 ] eax
push [ ebp - 0x1c ]
call esi
mov [ rw-data ] eax
push [ ebp - 0x20 ]
call esi
add esp 0x14
mov [ rw-data ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408158
mov eax [ ebp - 0x24 ]
push [ ebp + 0x8 ]
call [ _onexit@IAT ]
pop ecx
jmp r-xdata
call sub_4086a5
retn
sub_408173
push sub_408752
call sub_408161
mov eax [ rw-data ]
mov [ esp ] rw-data
push [ rw-data ]
mov [ rw-data ] eax
push rw-data
push rw-data
push rw-data
call [ __wgetmainargs@IAT ]
add esp 0x14
test eax eax
mov [ rw-data ] eax
jge r-xdata
retn
push 0x8
call _amsg_exit
pop ecx
sub_4081be
push 0x5c
push r--data
call sub_408660
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
lea eax [ ebp - 0x6c ]
push eax
call [ GetStartupInfoW@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x4 ] 0x1
mov eax [ fs : 0x18 ]
mov esi [ eax + 0x4 ]
mov [ ebp - 0x20 ] ebx
mov edi rw-data
xor esi esi
inc esi
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0x1f
call _amsg_exit
pop ecx
jmp r-xdata
push 0x3e8
call [ Sleep@IAT ]
jmp r-xdata
xor esi esi
inc esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov [ rw-data ] esi
mov [ rw-data ] esi
push r--data
push r--data
call _initterm_e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
push ebx
push esi
push edi
call [ InterlockedCompareExchange@IAT ]
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x20 ] ebx
jne r-xdata
push r--data
push r--data
call _initterm
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
cmp [ rw-data ] ebx
je r-xdata
push ebx
push edi
call [ InterlockedExchange@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
mov eax [ _wcmdln@IAT ]
cmp [ eax ] ebx
je r-xdata
push rw-data
call sub_408800
pop ecx
test eax eax
je r-xdata
mov eax [ eax ]
push ebx
push 0x2
push ebx
call [ rw-data ]
cmp cx 0x22
jne r-xdata
cmp cx bx
je r-xdata
inc eax
inc eax
jmp r-xdata
xor ecx ecx
cmp [ ebp - 0x1c ] ebx
sete cl
mov [ ebp - 0x1c ] ecx
movzx ecx [ eax ]
cmp cx bx
je r-xdata
cmp [ ebp - 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x24 ] eax
movzx ecx [ eax ]
cmp cx 0x20
ja r-xdata
test [ ebp - 0x40 ] 0x1
je r-xdata
cmp cx 0x20
ja r-xdata
push 0xa
pop ecx
movzx ecx [ ebp - 0x3c ]
jmp r-xdata
inc eax
inc eax
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call [ exit@IAT ]
push ecx
push eax
push ebx
push __dos_header
call sub_401760
mov [ rw-data ] eax
cmp [ rw-data ] ebx
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_4086a5
retn
sub_40834b
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x28 ]
mov [ rw-data ] eax
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
push eax
call [ _exit@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ rw-data ]
jmp r-xdata
call [ _cexit@IAT ]
call sub_4086a5
retn
sub_40839c
cmp [ __dos_header ] 0x5a4d
je r-xdata
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
xor eax eax
jmp r-xdata
movzx ecx [ eax + r--data ]
cmp ecx 0x10b
je r-xdata
push 0x2
mov [ rw-data ] eax
call [ __set_app_type@IAT ]
push 0xffffffff
call [ _encode_pointer@IAT ]
pop ecx
pop ecx
mov [ rw-data ] eax
mov [ rw-data ] eax
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40872e
call sub_4088f1
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
cmp ecx 0x20b
jne r-xdata
call sub_4088c8
cmp [ rw-data ] 0xffffffff
jne r-xdata
push sub_4088f1
call [ __setusermatherr@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + r--data ] ecx
cmp [ eax + r--data ] 0xe
jbe r-xdata
xor eax eax
retn
push 0xffffffff
call [ _configthreadlocale@IAT ]
pop ecx
xor ecx ecx
cmp [ eax + r--data ] ecx
jmp r-xdata
setne cl
mov eax ecx
sub_408488
push 0x14
push r--data
call sub_408660
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4086a5
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_4084ab
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call ?terminate@@YAXXZ
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4086a5
retn 0x10
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_4084e6
push 0xc
push r--data
call sub_408660
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
mov [ ebp - 0x4 ] 0xfffffffe
call sub_408531
call sub_4086a5
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_408549
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call _crt_debugger_hook
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call _crt_debugger_hook
pop ecx
sub_408660
push sub_4086b9
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_4086dc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call ?terminate@@YAXXZ
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40872e
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_408752
push esi
push edi
mov eax r--data
mov edi r--data
cmp eax edi
mov esi eax
jae r-xdata
pop edi
pop esi
retn
mov eax [ esi ]
test eax eax
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
sub_408780
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x5a4d
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
retn
xor ecx ecx
cmp [ eax + 0x18 ] 0x10b
sete cl
mov eax ecx
retn
sub_4087b0
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
test esi esi
push edi
lea eax [ eax + ecx + 0x18 ]
jbe r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
add edx 0x1
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
retn
sub_408800
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_4086b9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_408780
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_4087b0
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4088c8
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call _controlfp_s
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call _invoke_watson
add esp 0x14
sub_4088f4
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
cmp eax edi
mov ebx 0xffff0000
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_408a10
push ebp
mov ebp esp
push 0xffffffff
push sub_413190
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push eax
push esi
call sub_40a9c0
add esp 0x8
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408a90
push 0xffffffff
push sub_4131ca
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov eax [ esp + 0x58 ]
push eax
lea ecx [ esp + 0x30 ]
push ecx
call sub_408a10
add esp 0x8
mov edi eax
push r--data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x54 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
push edi
mov ecx eax
mov [ esp + 0x58 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
push eax
mov ecx esi
call sub_401230
lea ecx [ esp + 0x10 ]
mov [ esp + 0x50 ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x50 ] 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esi ] r--data
mov eax esi
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x48
retn 0x4
sub_408b60
sub esp 0x54
cmp [ ecx + 0x58 ] 0x0
je r-xdata
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
add esp 0x54
retn
mov eax [ ecx + 0x10 ]
add esp 0x54
retn
lea eax [ ecx + 0x10 ]
mov eax [ ecx + 0x10 ]
jmp r-xdata
pop edi
lea eax [ esi + 0x4 ]
pop esi
add esp 0x54
retn
mov eax [ esi + 0x4 ]
pop edi
pop esi
add esp 0x54
retn
push esi
push edi
push eax
lea esi [ ecx + 0x28 ]
push r--data
add ecx 0x44
push ecx
lea eax [ esp + 0x4c ]
push r--data
push eax
call [ ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z@IAT ]
mov edi [ ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@PBD@Z@IAT ]
add esp 0xc
push eax
lea ecx [ esp + 0x30 ]
push ecx
call edi
add esp 0xc
push eax
lea edx [ esp + 0x10 ]
push edx
call edi
add esp 0xc
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ esp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x40 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ esi + 0x18 ] 0x10
jb r-xdata
sub_408c10
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
xor ecx ecx
test eax eax
sete cl
mov al cl
retn
xor ecx ecx
test eax eax
sete cl
mov al cl
retn
sub_408c70
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_408cc0
push 0xffffffff
push sub_4131f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov eax [ esp + 0x1c ]
push eax
lea ecx [ esi + 0x4 ]
mov [ esp + 0x18 ] 0x0
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_408d30
push 0xffffffff
push sub_4131f8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x4 ]
mov [ esp + 0x14 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esi ] r--data
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_408d80
push 0xffffffff
push sub_41322b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x20
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
add esi 0x4
push esi
mov ecx eax
call sub_408cc0
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_408e10
push 0xffffffff
push sub_41322b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
push 0x20
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0x1c ]
push ecx
mov ecx eax
call sub_408cc0
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x4
sub_408e80
push 0xffffffff
push sub_413748
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_401170
mov [ esi ] r--data
test edi edi
mov [ esp + 0x18 ] 0x0
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x38 ] edx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esi + 0x28 ] r--data
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ esi + 0x2c ] ecx
je r-xdata
sub_408f30
push 0xffffffff
push sub_413748
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_401170
mov [ esi ] r--data
test edi edi
mov [ esp + 0x18 ] 0x0
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x38 ] edx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esi + 0x28 ] r--data
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ esi + 0x2c ] ecx
je r-xdata
sub_408fe0
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_409020
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_409080
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_4090c0
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_409120
push ebp
mov ebp esp
push 0xffffffff
push sub_413250
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x14 ] edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov eax ebx
sub eax esi
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::reserve@IAT ]
mov [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
movzx eax [ esi ]
push eax
push 0x1
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
add esi 0x1
jmp r-xdata
cmp esi ebx
je r-xdata
sub_409230
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_409290
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4092f0
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_409350
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4093b0
push 0xffffffff
push sub_414d2b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x40
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor eax eax
cmp esi eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi - 0x3c ]
push eax
mov ecx esi
call sub_408e80
lea eax [ esi + 0x3c ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ eax ] r--data
sub_409470
push 0xffffffff
push sub_414d2b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x40
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor eax eax
cmp esi eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi - 0x3c ]
push eax
mov ecx esi
call sub_408f30
lea eax [ esi + 0x3c ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ eax ] r--data
sub_409530
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
push eax
mov ecx esi
mov [ esp + 0xc ] edi
call sub_401170
mov [ esi + 0x28 ] r--data
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0xffffffff
pop edi
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
pop esi
pop ecx
retn
sub_409580
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
push eax
mov ecx esi
mov [ esp + 0xc ] edi
call sub_401170
mov [ esi + 0x28 ] r--data
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0xffffffff
pop edi
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
pop esi
pop ecx
retn
sub_4095d0
push 0xffffffff
push sub_413283
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
mov edi [ esp + 0x24 ]
push edi
call sub_408e80
mov [ esp + 0x1c ] 0x0
mov [ esi + 0x3c ] r--data
test edi edi
mov [ esp + 0x1c ] 0x1
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
je r-xdata
xor ebx ebx
lea ebx [ edi + 0x28 ]
jmp r-xdata
test edi edi
mov [ esi + 0x2c ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x2c ]
test ecx ecx
mov edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ ebx + 0x10 ]
mov [ esi + 0x38 ] edx
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
sub_409690
push 0xffffffff
push sub_4132b3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
mov edi [ esp + 0x24 ]
push edi
call sub_408f30
mov [ esp + 0x1c ] 0x0
mov [ esi + 0x3c ] r--data
test edi edi
mov [ esp + 0x1c ] 0x1
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
je r-xdata
xor ebx ebx
lea ebx [ edi + 0x28 ]
jmp r-xdata
test edi edi
mov [ esi + 0x2c ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x2c ]
test ecx ecx
mov edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ ebx + 0x10 ]
mov [ esi + 0x38 ] edx
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
sub_409750
push 0xffffffff
push sub_4132d9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x34 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x54 ]
mov ebx [ esp + 0x58 ]
push 0x0
mov esi ecx
push 0x0
lea ecx [ esp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
mov eax [ esp + 0x10 ]
push eax
push ebx
push edi
lea ecx [ esp + 0x20 ]
call sub_409120
mov edx [ esp + 0x50 ]
mov eax [ esp + 0x4c ]
lea ecx [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x4c ]
push edx
mov edx [ esp + 0x4c ]
push eax
push ecx
push edx
mov ecx esi
mov [ esp + 0x50 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::replace@IAT ]
lea ecx [ esp + 0x14 ]
mov [ esp + 0x3c ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x20 ]
xor ecx esp
call sub_40808e
add esp 0x30
retn 0x1c
sub_409850
push 0xffffffff
push sub_41331b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x90 ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
call sub_409530
push eax
lea edx [ esp + 0x4c ]
push edx
mov [ esp + 0x98 ] 0x0
call sub_409810
add esp 0x10
push r--data
lea eax [ esp + 0x44 ]
push eax
call _CxxThrowException
sub_4098c0
push 0xffffffff
push sub_41334b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x90 ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
call sub_409580
push eax
lea edx [ esp + 0x4c ]
push edx
mov [ esp + 0x98 ] 0x0
call sub_409830
add esp 0x10
push r--data
lea eax [ esp + 0x44 ]
push eax
call _CxxThrowException
sub_409930
push 0xffffffff
push sub_4133ac
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x78 ]
mov [ fs : 0x0 ] eax
xor ebp ebp
mov [ esp + 0x14 ] ebp
mov ebx [ esp + 0x88 ]
cmp [ ebx ] ebp
je r-xdata
mov edi [ esp + 0x8c ]
mov esi [ edi + 0x4 ]
cmp esi ebp
je r-xdata
push r--data
lea ecx [ esp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0x84 ] ebp
call sub_401040
mov [ esp + 0x50 ] r--data
lea ecx [ esp + 0x50 ]
push ecx
mov [ esp + 0x84 ] 0x1
call sub_409850
push r--data
lea ecx [ esp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esp + 0x80 ] 0x4
mov [ esp + 0x14 ] 0x1
jmp r-xdata
mov ecx [ edi + 0x8 ]
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jbe r-xdata
push eax
lea ecx [ esp + 0x8c ]
call sub_408e10
mov ecx [ eax ]
mov edx [ ebx ]
mov [ eax ] edx
mov [ ebx ] ecx
mov ecx [ esp + 0x88 ]
test ecx ecx
je r-xdata
cmp esi ebp
je r-xdata
push r--data
lea ecx [ esp + 0x1c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x54 ]
mov [ esp + 0x84 ] 0x2
call sub_401040
mov [ esp + 0x50 ] r--data
lea eax [ esp + 0x50 ]
push eax
mov [ esp + 0x84 ] 0x3
call sub_4098c0
test [ esp + 0x14 ] 0x1
mov [ esp + 0x80 ] 0xffffffff
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov ebp [ edi + 0x8 ]
mov ecx ebp
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
mov ecx [ esp + 0x78 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x70
retn 0x8
lea ecx [ esp + 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp esi ebp
mov ebp [ _invalid_parameter_noinfo@IAT ]
jbe r-xdata
cmp esi [ edi + 0x8 ]
jb r-xdata
call ebp
mov eax esi
call ebp
sub_409ad0
push 0xffffffff
push sub_4133e1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x58 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx [ esp + 0x48 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x50
retn
push r--data
lea ecx [ esp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x4 ]
push ecx
lea ecx [ esp + 0x24 ]
mov [ esp + 0x54 ] 0x0
call sub_401040
mov [ esp + 0x20 ] r--data
lea edx [ esp + 0x20 ]
push edx
mov [ esp + 0x54 ] 0x1
call sub_409850
sub_409b50
push 0xffffffff
push sub_41341a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x50 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
cmp [ esp + 0x80 ] 0x0
mov ebp [ esp + 0x78 ]
mov esi [ esp + 0x7c ]
mov ebx ecx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebp
je r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x20 ]
push esi
push ebp
call edx
xor edi edi
mov [ esp + 0x18 ] edi
mov [ esp + 0x1c ] edi
mov [ esp + 0x20 ] edi
mov ecx esi
mov [ esp + 0x70 ] edi
call sub_402850
test eax eax
jbe r-xdata
mov eax [ ebx ]
mov edx [ eax + 0x20 ]
lea ecx [ esp + 0x14 ]
push ecx
push ebp
mov ecx ebx
call edx
mov esi [ esp + 0x18 ]
test esi esi
mov [ esp + 0x70 ] 0xffffffff
je r-xdata
xor ebp ebp
lea ebx [ edi + 0x1 ]
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x50 ]
xor ecx esp
call sub_40808e
add esp 0x60
retn 0xc
mov edi [ esp + 0x1c ]
cmp esi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
push esi
call ??3@YAXPAX@Z
add esp 0x4
jmp r-xdata
lea esp [ esp ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ebx [ esp + 0x24 ]
mov ebp [ esp + 0x28 ]
mov eax [ esi + 0x4 ]
add eax ebp
push eax
lea eax [ esp + 0x4c ]
push eax
call sub_40a8e0
lea ecx [ esp + 0x50 ]
push ecx
lea edx [ esp + 0x38 ]
push edx
mov [ esp + 0x80 ] bl
call sub_40a9c0
add esp 0x10
push eax
lea ecx [ esp + 0x18 ]
mov [ esp + 0x74 ] 0x2
call sub_404950
lea ecx [ esp + 0x2c ]
mov [ esp + 0x70 ] bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x48 ]
mov [ esp + 0x70 ] 0x0
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov ecx esi
add edi ebx
add ebp 0x1c
call sub_402850
cmp edi eax
jb r-xdata
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
mov esi [ esp + 0x18 ]
sub_409ce0
push 0xffffffff
push sub_41346a
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x44 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x14 ] ecx
xor ebx ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x24 ] ebx
mov esi [ esp + 0x58 ]
mov ecx esi
mov [ esp + 0x4c ] ebx
xor edi edi
call sub_402850
cmp [ esp + 0x5c ] bl
je r-xdata
test eax eax
jbe r-xdata
test eax eax
jbe r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov edx [ edx + 0x20 ]
lea eax [ esp + 0x18 ]
push eax
mov eax [ esp + 0x58 ]
push eax
call edx
mov esi [ esp + 0x1c ]
cmp esi ebx
mov [ esp + 0x4c ] 0xffffffff
je r-xdata
xor ebp ebp
xor ebp ebp
lea ebx [ ebx ]
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn 0xc
mov edi [ esp + 0x20 ]
cmp esi edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
push esi
call ??3@YAXPAX@Z
add esp 0x4
lea esp [ esp ]
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
mov eax [ esi + 0x4 ]
add eax ebp
push eax
lea ecx [ esp + 0x2c ]
push ecx
call sub_40a940
add esp 0x8
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x50 ] 0x2
call sub_404ad0
lea ecx [ esp + 0x28 ]
mov [ esp + 0x4c ] bl
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov ecx esi
add edi 0x1
add ebp 0x1c
call sub_402850
cmp edi eax
jb r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebx
je r-xdata
jmp r-xdata
mov eax [ esi + 0x4 ]
add eax ebp
push eax
lea eax [ esp + 0x2c ]
push eax
call sub_40a8e0
add esp 0x8
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x50 ] 0x1
call sub_404ad0
lea ecx [ esp + 0x28 ]
mov [ esp + 0x4c ] bl
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov ecx esi
add edi 0x1
add ebp 0x1c
call sub_402850
cmp edi eax
jb r-xdata
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
mov esi [ esp + 0x1c ]
sub_409ec0
push 0xffffffff
push sub_413499
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov edi [ std::_Lockit::_Lockit@IAT ]
push 0x0
lea ecx [ esp + 0x1c ]
call edi
mov eax [ rw-data ]
mov esi [ std::codecvt<wchar_t,char,int32_t>::id@IAT ]
mov ebx [ std::_Lockit::~_Lockit@IAT ]
mov [ esp + 0x10 ] eax
cmp [ esi ] 0x0
mov [ esp + 0x30 ] 0x0
jne r-xdata
mov esi [ esi ]
mov ecx [ esp + 0x38 ]
push esi
call [ std::locale::_Getfacet@IAT ]
mov esi eax
test esi esi
jne r-xdata
push 0x0
lea ecx [ esp + 0x18 ]
call edi
cmp [ esi ] 0x0
jne r-xdata
lea ecx [ esp + 0x18 ]
mov [ esp + 0x30 ] 0xffffffff
call ebx
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x24
retn
mov esi [ esp + 0x10 ]
test esi esi
jne r-xdata
lea ecx [ esp + 0x14 ]
call ebx
mov eax [ std::locale::id::_Id_cnt@IAT ]
add [ eax ] 0x1
mov ecx [ std::locale::id::_Id_cnt@IAT ]
mov edx [ ecx ]
mov [ esi ] edx
lea eax [ esp + 0x10 ]
push eax
call [ std::codecvt<wchar_t,char,int32_t>::_Getcat@IAT ]
add esp 0x4
cmp eax 0xffffffff
jne r-xdata
mov ecx [ esp + 0x10 ]
mov esi ecx
mov [ rw-data ] ecx
mov edi ecx
call [ std::locale::facet::_Incref@IAT ]
push edi
call [ std::locale::facet::facet_Register@IAT ]
add esp 0x4
push r--data
lea ecx [ esp + 0x20 ]
call [ std::bad_cast::bad_cast@IAT ]
push r--data
lea ecx [ esp + 0x20 ]
push ecx
call _CxxThrowException
sub_409fd0
test [ esp + 0x4 ] 0x1
mov eax [ std::codecvt<wchar_t,char,int32_t>::`vbtable'@IAT ]
push esi
mov esi ecx
mov [ esi ] eax
mov ecx [ std::codecvt_base::`vbtable'@IAT ]
mov [ esi ] ecx
mov edx [ std::locale::facet::`vbtable'@IAT ]
mov [ esi ] edx
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40a000
push 0xffffffff
push sub_4143d8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_401170
test edi edi
mov [ esp + 0x18 ] 0x0
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x38 ] edx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esi + 0x28 ] r--data
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ esi + 0x2c ] ecx
je r-xdata
sub_40a0b0
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_40a0f0
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_40a190
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40a1f0
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40a250
push 0xffffffff
push sub_414d2b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x40
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor eax eax
cmp esi eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi - 0x3c ]
push eax
mov ecx esi
call sub_40a000
lea eax [ esi + 0x3c ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ eax ] r--data
sub_40a310
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
push eax
mov ecx esi
mov [ esp + 0xc ] edi
call sub_401170
mov [ esi + 0x28 ] r--data
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0xffffffff
pop edi
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
pop esi
pop ecx
retn
sub_40a360
push 0xffffffff
push sub_4134d3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
mov edi [ esp + 0x24 ]
push edi
call sub_40a000
mov [ esp + 0x1c ] 0x0
mov [ esi + 0x3c ] r--data
test edi edi
mov [ esp + 0x1c ] 0x1
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
je r-xdata
xor ebx ebx
lea ebx [ edi + 0x28 ]
jmp r-xdata
test edi edi
mov [ esi + 0x2c ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x2c ]
test ecx ecx
mov edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ ebx + 0x10 ]
mov [ esi + 0x38 ] edx
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
sub_40a440
push 0xffffffff
push sub_4134fb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x90 ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
call sub_40a310
push eax
lea edx [ esp + 0x4c ]
push edx
mov [ esp + 0x98 ] 0x0
call sub_40a420
add esp 0x10
push r--data
lea eax [ esp + 0x44 ]
push eax
call _CxxThrowException
sub_40a4b0
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_41356b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xb8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xd0 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov ecx esi
mov [ esp + 0xd8 ] edi
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] edi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov edx [ ebp + 0xc ]
mov [ esp + 0xd8 ] edi
mov [ esp + 0x24 ] edi
mov edi [ edx + 0x18 ]
cmp edi 0x10
mov [ esp + 0x20 ] 0x1
lea ecx [ edx + 0x4 ]
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ edx + 0x14 ]
add ecx edx
cmp eax ecx
mov [ esp + 0x18 ] ecx
jne r-xdata
mov ecx [ ecx ]
cmp edi 0x10
mov [ esp + 0x10 ] eax
jb r-xdata
lea edx [ esp + 0x84 ]
mov [ esp + 0x14 ] edx
lea edx [ esp + 0x14 ]
push edx
lea edx [ esp + 0xc8 ]
push edx
lea edx [ esp + 0x8c ]
push edx
lea edx [ esp + 0x1c ]
push edx
push ecx
mov ecx [ ebp + 0x14 ]
push eax
lea eax [ esp + 0x3c ]
push eax
call [ ebp + 0x10 ]
cmp eax 0x2
je r-xdata
mov eax esi
mov ecx [ esp + 0xd0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xb8 ]
xor ecx esp
call sub_40808e
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ esp + 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x60 ]
mov [ esp + 0xdc ] 0x1
call sub_401040
push eax
mov [ esp + 0xdc ] 0x2
call sub_40a440
mov edi [ esp + 0x14 ]
lea ecx [ esp + 0x84 ]
cmp edi ecx
je r-xdata
push r--data
lea ecx [ esp + 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x60 ]
mov [ esp + 0xdc ] 0x3
call sub_401040
push eax
mov [ esp + 0xdc ] 0x4
call sub_40a440
lea edx [ esp + 0x4c ]
push edx
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::end@IAT ]
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0x54 ]
push ecx
mov ecx esi
mov [ esp + 0x30 ] eax
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::end@IAT ]
mov edx [ esp + 0x1c ]
push edx
mov edx [ esp + 0x30 ]
push edi
lea ecx [ esp + 0x8c ]
push ecx
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ebx
push ecx
push edx
mov ecx esi
call sub_407e10
mov eax [ esp + 0x10 ]
cmp eax [ esp + 0x18 ]
jne r-xdata
mov ecx [ esp + 0x18 ]
jmp r-xdata
sub_40a690
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_4135eb
mov eax [ fs : 0x0 ]
push eax
sub esp 0xa0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x98 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xb0 ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor edi edi
mov ecx esi
mov [ esp + 0xb8 ] edi
mov [ esp + 0x20 ] esi
mov [ esp + 0x24 ] edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edx [ ebp + 0xc ]
mov [ esp + 0xb8 ] edi
mov [ esp + 0x28 ] edi
mov edi [ edx + 0x18 ]
cmp edi 0x8
mov [ esp + 0x24 ] 0x1
lea ecx [ edx + 0x4 ]
jb r-xdata
mov eax ecx
mov eax [ ecx ]
jmp r-xdata
mov edx [ edx + 0x14 ]
lea ecx [ ecx + edx * 2 ]
cmp eax ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov ecx [ ecx ]
cmp edi 0x8
mov [ esp + 0x14 ] eax
jb r-xdata
lea edx [ esp + 0x88 ]
mov [ esp + 0x18 ] edx
lea edx [ esp + 0x18 ]
push edx
lea edx [ esp + 0xac ]
push edx
lea edx [ esp + 0x90 ]
push edx
lea edx [ esp + 0x20 ]
push edx
push ecx
mov ecx [ ebp + 0x14 ]
push eax
lea eax [ esp + 0x40 ]
push eax
call [ ebp + 0x10 ]
cmp eax 0x2
je r-xdata
mov eax esi
mov ecx [ esp + 0xb0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x98 ]
xor ecx esp
call sub_40808e
mov esp ebp
pop ebp
retn
push r--data
lea ecx [ esp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x64 ]
mov [ esp + 0xbc ] 0x1
call sub_401040
push eax
mov [ esp + 0xbc ] 0x2
call sub_40a440
mov edi [ esp + 0x18 ]
lea ecx [ esp + 0x88 ]
cmp edi ecx
je r-xdata
push r--data
lea ecx [ esp + 0x38 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x34 ]
push ecx
lea ecx [ esp + 0x64 ]
mov [ esp + 0xbc ] 0x3
call sub_401040
push eax
mov [ esp + 0xbc ] 0x4
call sub_40a440
lea edx [ esp + 0x50 ]
push edx
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end@IAT ]
mov ebx [ eax ]
mov eax [ eax + 0x4 ]
lea ecx [ esp + 0x58 ]
push ecx
mov ecx esi
mov [ esp + 0x34 ] eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end@IAT ]
mov edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x34 ]
push edi
lea ecx [ esp + 0x90 ]
push ecx
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ebx
push ecx
push edx
mov ecx esi
call sub_409750
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x1c ]
jne r-xdata
mov ecx [ esp + 0x1c ]
jmp r-xdata
sub_40a880
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ std::codecvt<wchar_t,char,int32_t>::in@IAT ]
push esi
mov esi [ esp + 0xc ]
push ecx
push eax
mov eax [ esp + 0x18 ]
push eax
push esi
mov [ esp + 0x14 ] 0x0
call sub_40a4b0
add esp 0x10
mov eax esi
pop esi
pop ecx
retn
sub_40a8b0
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ std::codecvt<wchar_t,char,int32_t>::out@IAT ]
push esi
mov esi [ esp + 0xc ]
push ecx
push eax
mov eax [ esp + 0x18 ]
push eax
push esi
mov [ esp + 0x14 ] 0x0
call sub_40a690
add esp 0x10
mov eax esi
pop esi
pop ecx
retn
sub_40a8e0
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push rw-data
push eax
push esi
mov [ esp + 0x10 ] 0x0
call sub_40a880
add esp 0xc
mov eax esi
pop esi
pop ecx
retn
sub_40a910
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push rw-data
push eax
push esi
mov [ esp + 0x10 ] 0x0
call sub_40a8b0
add esp 0xc
mov eax esi
pop esi
pop ecx
retn
sub_40a940
push 0xffffffff
push sub_413629
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ esp + 0x8 ] esi
call [ std::locale::_Init@IAT ]
mov [ esp + 0x8 ] eax
call [ std::locale::_Getgloballocale@IAT ]
mov ecx eax
call [ std::locale::facet::_Incref@IAT ]
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0x18 ] esi
call sub_409ec0
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
push eax
push ecx
push esi
call sub_40a880
add esp 0x10
lea ecx [ esp + 0x8 ]
call [ std::locale::~locale@IAT ]
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_40a9c0
push 0xffffffff
push sub_413629
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ esp + 0x8 ] esi
call [ std::locale::_Init@IAT ]
mov [ esp + 0x8 ] eax
call [ std::locale::_Getgloballocale@IAT ]
mov ecx eax
call [ std::locale::facet::_Incref@IAT ]
lea eax [ esp + 0x8 ]
push eax
mov [ esp + 0x18 ] esi
call sub_409ec0
mov ecx [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
push eax
push ecx
push esi
call sub_40a8b0
add esp 0x10
lea ecx [ esp + 0x8 ]
call [ std::locale::~locale@IAT ]
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_40aa40
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
push esi
mov [ esp + 0xc ] 0x0
call sub_40a910
add esp 0x8
mov eax esi
pop esi
pop ecx
retn
sub_40aa70
push 0xffffffff
push sub_41366d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
mov edi [ esp + 0x44 ]
push edi
lea ecx [ esp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ebx [ esp + 0x40 ]
push r--data
push ebx
push r--data
mov ecx eax
mov [ esp + 0x44 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
push eax
mov ecx esi
call sub_401040
mov [ esi ] r--data
lea ecx [ esp + 0x14 ]
mov [ esp + 0x38 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ebx
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push edi
lea ecx [ esi + 0x44 ]
mov [ esp + 0x3c ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x2c
retn 0x8
sub_40ab30
push 0xffffffff
push sub_414411
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
push r--data
lea ecx [ esp + 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x38 ]
push ecx
mov ecx eax
mov [ esp + 0x34 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
push eax
mov ecx esi
call sub_401040
mov [ esi ] r--data
lea ecx [ esp + 0xc ]
mov [ esp + 0x30 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esi ] r--data
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x2c
retn 0x4
sub_40abd0
push ecx
mov eax [ esp + 0xc ]
add eax 0xffffffe2
cmp eax 0x5
mov [ esp ] 0x0
ja r-xdata
push esi
mov esi [ esp + 0xc ]
mov eax r--data
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ecx
retn
jmp [ eax * 4 + jump_table_40ac98 ]
push esi
mov esi [ esp + 0xc ]
mov eax r--data
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ecx
retn
push esi
mov esi [ esp + 0xc ]
mov eax r--data
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ecx
retn
push esi
mov esi [ esp + 0xc ]
mov eax r--data
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ecx
retn
push esi
mov esi [ esp + 0xc ]
mov eax r--data
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ecx
retn
push esi
mov esi [ esp + 0xc ]
mov eax r--data
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ecx
retn
push esi
mov esi [ esp + 0xc ]
mov eax r--data
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ecx
retn
sub_40acc0
push 0xffffffff
push sub_413699
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
lea ecx [ esi + 0x1c ]
mov [ esp + 0x14 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
mov [ esp + 0x14 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_40ad20
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
push edi
mov edi [ esp + 0xc ]
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov ecx [ esi + 0x4 ]
lea eax [ edi * 8 ]
sub eax edi
pop edi
lea eax [ ecx + eax * 4 ]
pop esi
retn 0x4
sub_40ad70
mov ecx [ esp + 0x4 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x20
jae r-xdata
xor ecx ecx
shl ecx 0x5
push ecx
call ??2@YAPAXI@Z
add esp 0x4
add esp 0xc
retn
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call [ std::exception::exception@IAT ]
push r--data
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] r--data
call _CxxThrowException
sub_40add0
push 0xffffffff
push sub_4140c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add edi 0x1c
push edi
lea ecx [ esi + 0x1c ]
mov [ esp + 0x1c ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_40ae50
mov eax [ esp + 0xc ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax [ esp + 0x8 ]
cmp eax ecx
je r-xdata
cmp eax 0x1
je r-xdata
retn
mov ecx [ esp + 0x4 ]
mov edx [ ecx ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
mov [ eax + 0x4 ] ecx
cmp eax 0x2
je r-xdata
cmp eax 0x3
jne r-xdata
mov eax [ esp + 0x8 ]
mov [ eax ] rw-data
mov [ eax + 0x4 ] cl
mov [ eax + 0x5 ] cl
retn
push esi
mov esi [ esp + 0xc ]
mov ecx [ esi ]
push rw-data
call [ type_info::operator==@IAT ]
neg al
sbb eax eax
and eax [ esp + 0x8 ]
mov [ esi ] eax
pop esi
retn
sub_40aeb0
push 0xffffffff
push sub_4136d1
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x10 ] 0x0
je r-xdata
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
mov ecx [ esp + 0x1c ]
mov [ eax ] 0x0
mov edx [ ecx ]
test edx edx
je r-xdata
mov [ eax ] edx
mov edx [ ecx ]
add eax 0x8
push 0x0
push eax
mov eax [ edx ]
add ecx 0x8
push ecx
call eax
add esp 0xc
sub_40af20
push 0xffffffff
push sub_413701
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x40 ]
lea eax [ esp + 0x10 ]
push edi
push eax
call sub_40abd0
add esp 0x8
mov ecx [ esp + 0x3c ]
push eax
push ecx
mov ecx esi
mov [ esp + 0x3c ] 0x0
call sub_40aa70
lea ecx [ esp + 0x10 ]
mov [ esp + 0x34 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esi ] r--data
mov [ esi + 0x60 ] edi
mov eax esi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x2c
retn 0x8
sub_40afa0
push esi
mov esi ecx
lea ecx [ esi + 0x44 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
sub_40afe0
push esi
mov esi ecx
lea ecx [ esi + 0x44 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x28 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40b030
push ebp
mov ebp esp
push 0xffffffff
push sub_413720
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ eax ]
test eax eax
lea ecx [ esi + 0x8 ]
je r-xdata
mov [ esi ] eax
mov eax [ edi ]
mov edx [ eax ]
push 0x0
lea ecx [ esi + 0x8 ]
push ecx
add edi 0x8
push edi
call edx
add esp 0xc
mov [ esi ] 0x0
push 0x2
push ecx
push ecx
call eax
add esp 0xc
sub_40b0d0
push 0xffffffff
push sub_413748
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_401170
mov [ esi ] r--data
test edi edi
mov [ esp + 0x18 ] 0x0
je r-xdata
xor edi edi
add edi 0x28
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x38 ] edx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esi + 0x28 ] r--data
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ esi + 0x2c ] ecx
je r-xdata
sub_40b180
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_40b1c0
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_40b220
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp esi edi
je r-xdata
pop edi
pop esi
retn
push ebx
mov ebx [ esp + 0x18 ]
push ebx
mov ecx esi
call sub_40b030
add esi 0x20
cmp esi edi
jne r-xdata
pop ebx
sub_40b290
push esi
mov esi ecx
mov [ esi + 0x3c ] r--data
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40b2f0
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x28 ] r--data
mov ecx [ esi + 0x2c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40b350
push 0xffffffff
push sub_414d2b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x40
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor eax eax
cmp esi eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi - 0x3c ]
push eax
mov ecx esi
call sub_40b0d0
lea eax [ esi + 0x3c ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ eax ] r--data
sub_40b410
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
push eax
mov ecx esi
mov [ esp + 0xc ] edi
call sub_401170
mov [ esi + 0x28 ] r--data
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] 0xffffffff
pop edi
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
pop esi
pop ecx
retn
sub_40b490
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn 0x4
mov eax [ eax ]
test eax eax
lea ecx [ esi + 0x8 ]
je r-xdata
mov [ esi ] 0x0
push 0x2
push ecx
push ecx
call eax
add esp 0xc
sub_40b4c0
push 0xffffffff
push sub_413783
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
mov edi [ esp + 0x24 ]
push edi
call sub_40b0d0
mov [ esp + 0x1c ] 0x0
mov [ esi + 0x3c ] r--data
test edi edi
mov [ esp + 0x1c ] 0x1
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
je r-xdata
xor ebx ebx
lea ebx [ edi + 0x28 ]
jmp r-xdata
test edi edi
mov [ esi + 0x2c ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x2c ]
test ecx ecx
mov edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x30 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x34 ] ecx
mov edx [ ebx + 0x10 ]
mov [ esi + 0x38 ] edx
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
sub_40b580
push ebp
mov ebp esp
push 0xffffffff
push sub_4137a0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
mov edi edi
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push esi
push edi
call sub_40aeb0
add edi 0x20
add esp 0x8
mov [ ebp + 0x10 ] edi
add esi 0x20
jmp r-xdata
cmp esi ebx
je r-xdata
sub_40b5d9
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call _CxxThrowException
mov ebx [ ebp + 0x14 ]
push esi
mov ecx ebx
call sub_40b490
add esi 0x20
cmp esi edi
jne r-xdata
sub_40b620
push ebx
mov ebx [ esp + 0x10 ]
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
mov edi [ esp + 0x14 ]
mov eax esi
sub eax edi
sar eax 0x5
shl eax 0x5
mov ebp ebx
sub ebp eax
cmp edi esi
je r-xdata
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
retn
sub ebx esi
sub esi 0x20
push esi
lea ecx [ ebx + esi ]
call sub_40b030
cmp esi edi
jne r-xdata
sub_40b680
push ebp
mov ebp esp
push 0xffffffff
push sub_4137c0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi [ ebp + 0x8 ]
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x0
mov edi edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebx
push edi
call sub_40aeb0
add esp 0x8
sub esi 0x1
add edi 0x20
mov [ ebp + 0x8 ] edi
jmp r-xdata
test esi esi
jbe r-xdata
sub_40b6d9
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call _CxxThrowException
mov ebx [ ebp + 0x14 ]
push esi
mov ecx ebx
call sub_40b490
add esi 0x20
cmp esi edi
jne r-xdata
sub_40b710
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
push edi
lea edi [ esi + 0x8 ]
add esi 0x20
add edi 0x20
cmp esi ebx
jne r-xdata
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
mov [ esi ] 0x0
push 0x2
push edi
push edi
call eax
add esp 0xc
sub_40b750
push ecx
mov edx [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
push edi
mov ebx ecx
mov ecx [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x8 ]
push ecx
push edx
push ebp
push eax
lea ecx [ ebp + 0x1c ]
push ecx
call sub_407970
mov edi [ ebx + 0x8 ]
lea esi [ edi - 0x1c ]
add esp 0x18
cmp esi edi
je r-xdata
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
add [ ebx + 0x8 ] 0xffffffe4
pop edi
pop esi
mov [ eax + 0x4 ] ebp
pop ebp
mov [ eax ] edx
pop ebx
pop ecx
retn 0xc
lea ebx [ ebx ]
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_40b7c0
push 0xffffffff
push sub_4137f4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] al
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_40b820
push 0xffffffff
push sub_41381b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x7c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x80 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x90 ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
call sub_40b410
push eax
lea edx [ esp + 0x4c ]
push edx
mov [ esp + 0x98 ] 0x0
call sub_40b660
add esp 0x10
push r--data
lea eax [ esp + 0x44 ]
push eax
call _CxxThrowException
sub_40b890
push ecx
mov edx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x1c ]
push edx
push ecx
push eax
push esi
push edi
call sub_40b680
mov eax esi
add esp 0x18
shl eax 0x5
add eax edi
pop edi
pop esi
pop ecx
retn 0xc
sub_40b8f0
push 0xffffffff
push sub_413869
mov eax [ fs : 0x0 ]
push eax
sub esp 0x64
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x6c ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x8 ] 0x0
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ esp + 0x80 ]
push edx
mov edx [ eax + 0x4 ]
add ecx 0x8
push ecx
lea ecx [ esp + 0x3c ]
push ecx
call edx
add esp 0xc
mov esi [ esp + 0x7c ]
push eax
mov ecx esi
mov [ esp + 0x78 ] 0x2
call sub_40add0
lea ecx [ esp + 0x34 ]
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x74 ] 0x0
call sub_40acc0
mov eax esi
mov ecx [ esp + 0x6c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x70
retn 0x8
lea ecx [ esp + 0xc ]
call sub_401370
push eax
mov [ esp + 0x78 ] 0x1
call sub_405770
sub_40b9a0
push 0xffffffff
push sub_4138b1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x104
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x118 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov ebx [ esp + 0x128 ]
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov ecx [ esp + 0x118 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110
retn 0x8
mov eax [ edi + 0x10 ]
mov ecx [ edi + 0x18 ]
shr eax 0x9
and eax 0xffffff01
push eax
push ebx
call sub_412290
mov esi eax
test esi esi
jne r-xdata
push ebx
mov ecx esi
call sub_410990
push eax
mov ecx ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_411150
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
mov [ esp + 0x120 ] 0x1
call eax
mov ebx eax
mov eax [ esp + 0x1c ]
or ebp 0xffffffff
test eax eax
mov [ esp + 0x120 ] ebp
je r-xdata
cmp [ edi + 0x14 ] al
je r-xdata
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
call sub_411150
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
mov [ esp + 0x120 ] 0x2
call eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1c ]
test eax eax
mov [ esp + 0x120 ] ebp
je r-xdata
mov edi eax
add eax 0x4
mov ecx ebp
[ eax ] ecx
jne r-xdata
push ebx
lea ecx [ esp + 0x2c ]
call sub_40ab30
push eax
mov [ esp + 0x124 ] 0x0
call sub_40b820
mov [ ebx + 0x40 ] 0x1
mov ebp [ esp + 0x128 ]
mov eax [ ebp + 0x24 ]
add ebp 0x20
test eax eax
jne r-xdata
mov esi eax
add eax 0x4
mov ecx ebp
[ eax ] ecx
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
mov edx ebp
[ ecx ] edx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov edi edx
shr edi 0x1f
add edi edx
xor edi edi
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] ebp
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
add eax edi
cmp eax ebx
jb r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov esi [ esp + 0x12c ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
mov eax [ esp + 0x128 ]
push 0x22
push eax
lea ecx [ esp + 0xbc ]
call sub_40af20
push r--data
lea ecx [ esp + 0xb8 ]
push ecx
call _CxxThrowException
mov ecx ebp
call sub_408c10
test al al
jne r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
cmp [ esp + 0x14 ] 0x0
jne r-xdata
sub [ esp + 0x14 ] eax
test ebx ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
mov ecx [ esp + 0x128 ]
push 0x23
push ecx
lea ecx [ esp + 0x58 ]
call sub_40af20
push r--data
lea edx [ esp + 0x54 ]
push edx
call _CxxThrowException
mov ecx esi
call sub_408c10
test al al
jne r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
mov ebx [ _invalid_parameter_noinfo@IAT ]
mov ecx ebp
call sub_408c10
test al al
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esp + 0x14 ] ebx
call ebx
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
call ebx
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ esi + 0x4 ]
push ecx
mov ecx ebp
call sub_404950
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push edi
push esi
lea edx [ esp + 0x28 ]
push edx
mov ecx esi
call sub_40b750
mov ecx esi
call sub_408c10
test al al
je r-xdata
call ebx
mov ecx [ esi + 0x4 ]
push ecx
mov ecx [ esp + 0x12c ]
add ecx 0x30
call sub_404950
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
jbe r-xdata
mov eax [ esp + 0x14 ]
mov ecx eax
sub eax 0x1
test ecx ecx
mov [ esp + 0x14 ] eax
je r-xdata
jmp r-xdata
sub_40bcc0
push 0xffffffff
push sub_4138f4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_401170
lea eax [ edi + 0x28 ]
push eax
lea ecx [ esi + 0x28 ]
mov [ esp + 0x1c ] 0x0
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add edi 0x44
push edi
lea ecx [ esi + 0x44 ]
mov [ esp + 0x1c ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_40bd40
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_40bcc0
mov [ esi ] r--data
mov eax [ edi + 0x60 ]
mov [ esi + 0x60 ] eax
pop edi
mov eax esi
pop esi
retn 0x4
sub_40bd70
push ecx
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edx
call sub_40b580
add esp 0x1c
retn 0xc
sub_40bda0
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
sub esi 0x44
sub edi 0x44
push esi
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov eax [ esi + 0x1c ]
lea ecx [ esi + 0x20 ]
push ecx
lea ecx [ edi + 0x20 ]
mov [ edi + 0x1c ] eax
call sub_406d10
lea edx [ esi + 0x30 ]
push edx
lea ecx [ edi + 0x30 ]
call sub_406d10
cmp esi ebx
mov al [ esi + 0x40 ]
mov [ edi + 0x40 ] al
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_40be00
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov [ esi + 0xc ] 0x0
pop esi
pop ecx
retn
mov ecx [ esp + 0x4 ]
mov edx [ esi + 0x8 ]
push ecx
push esi
push edx
push eax
call sub_40b710
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x14
sub_40be40
push ebp
mov ebp esp
push 0xffffffff
push sub_413918
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x14 ] esi
mov ecx [ ebp + 0x14 ]
mov eax [ ecx ]
xor ebx ebx
cmp eax ebx
mov [ ebp - 0x38 ] ebx
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx ebx
mov [ ebp - 0x4 ] ebx
je r-xdata
push ebx
lea edx [ ebp - 0x30 ]
push edx
add ecx 0x8
mov [ ebp - 0x38 ] eax
mov eax [ eax ]
push ecx
call eax
add esp 0xc
mov edi [ ebp + 0x10 ]
test edi edi
je r-xdata
mov ebx [ esi + 0xc ]
sub ebx ecx
sar ebx 0x5
mov eax [ ebp - 0x38 ]
test eax eax
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
test ecx ecx
jne r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x30 ]
push 0x2
push ecx
mov edx ecx
push edx
call eax
add esp 0xc
test ecx ecx
jne r-xdata
call sub_410b40
mov edx 0x7ffffff
sub edx eax
cmp edx edi
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ecx eax
sub ecx ebx
sar ecx 0x5
cmp ecx edi
mov [ ebp - 0x18 ] eax
jae r-xdata
mov eax ebx
shr eax 0x1
mov edx 0x7ffffff
sub edx eax
cmp edx ebx
jae r-xdata
add eax edi
cmp ebx eax
jae r-xdata
shl edi 0x5
mov ecx edi
push eax
mov edi eax
sub edi ecx
push eax
mov [ ebp + 0x14 ] ecx
push edi
mov ecx esi
call sub_40bd70
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x18 ]
push eax
push edi
push ebx
call sub_40b620
mov edx [ ebp + 0x14 ]
lea ecx [ ebp - 0x38 ]
push ecx
add edx ebx
push edx
push ebx
call sub_40b220
add esp 0x18
mov ecx edi
shl ecx 0x5
mov [ ebp + 0x14 ] ecx
add ecx ebx
push ecx
push eax
push ebx
mov ecx esi
call sub_40bd70
mov eax [ esi + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x5
lea edx [ ebp - 0x38 ]
push edx
sub edi ecx
push edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_40b890
mov eax [ ebp + 0x14 ]
add [ esi + 0x8 ] eax
mov esi [ esi + 0x8 ]
lea edx [ ebp - 0x38 ]
push edx
sub esi eax
push esi
push ebx
mov [ ebp - 0x4 ] 0x0
call sub_40b220
add esp 0xc
jmp r-xdata
add ebx eax
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
test ecx ecx
jne r-xdata
push 0x0
push ebx
call sub_40ad70
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x18 ]
push edx
mov [ ebp + 0x10 ] eax
mov edx [ ebp + 0x10 ]
push edx
push esi
push eax
mov [ ebp + 0x14 ] eax
mov eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_40b580
add esp 0x20
lea ecx [ ebp - 0x38 ]
push ecx
push edi
push eax
mov ecx esi
mov [ ebp + 0x10 ] eax
call sub_40b890
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x18 ] 0x0
mov edx [ ebp - 0x18 ]
push edx
mov [ ebp + 0x10 ] eax
mov edx [ ebp + 0x10 ]
push edx
push esi
push eax
mov eax [ ebp + 0xc ]
push ecx
push eax
call sub_40b580
mov ecx [ esi + 0x4 ]
add esp 0x18
test ecx ecx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
test ecx ecx
jne r-xdata
add eax edi
cmp ebx eax
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x5
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x8 ]
sub ebx ecx
sar ebx 0x5
xor ebx ebx
jmp r-xdata
mov eax [ ebp + 0x14 ]
shl ebx 0x5
add ebx eax
shl edi 0x5
add edi eax
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ esi + 0x8 ]
push edx
push esi
push eax
push ecx
call sub_40b710
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x14
add edi eax
test ecx ecx
je r-xdata
add ebx edi
sub_40c065
mov ecx [ ebp - 0x14 ]
mov eax [ ebp + 0x10 ]
mov edx [ ecx + 0x8 ]
shl eax 0x5
add edx eax
push edx
mov edx [ ebp + 0xc ]
add eax edx
push eax
call sub_40b8d0
push 0x0
push 0x0
call _CxxThrowException
sub_40c100
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
pop esi
retn
push ebx
push ebp
push edi
mov edi [ esp + 0x1c ]
lea ebx [ edi + 0x20 ]
lea ebp [ edi + 0x30 ]
jmp r-xdata
push edi
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov eax [ edi + 0x1c ]
push ebx
lea ecx [ esi + 0x20 ]
mov [ esi + 0x1c ] eax
call sub_406d10
push ebp
lea ecx [ esi + 0x30 ]
call sub_406d10
mov cl [ edi + 0x40 ]
mov [ esi + 0x40 ] cl
add esi 0x44
cmp esi [ esp + 0x18 ]
jne r-xdata
pop edi
pop ebp
pop ebx
sub_40c160
push ebp
mov ebp esp
push 0xffffffff
push sub_413951
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x44
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x44
jmp r-xdata
push edi
mov ecx esi
call sub_4076e0
cmp edi [ ebp + 0xc ]
je r-xdata
sub_40c1c9
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
mov ecx esi
call sub_405f00
add esi 0x44
cmp esi edi
jne r-xdata
sub_40c200
sub esp 0x8
mov edx [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x20 ]
xor al al
mov [ esp + 0x10 ] al
mov ecx [ esp + 0x10 ]
mov [ esp + 0xc ] al
mov eax [ esp + 0xc ]
push eax
push ecx
push edx
push edi
push esi
push ebx
call sub_40bda0
sub esi ebx
mov eax 0x78787879
imul esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
shl ecx 0x4
add esp 0x18
add ecx eax
mov eax edi
add ecx ecx
pop edi
add ecx ecx
pop esi
sub eax ecx
pop ebx
add esp 0x8
retn
sub_40c260
push 0xffffffff
push sub_41398e
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
xor ebx ebx
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
mov [ esp + 0x18 ] ebx
mov [ esi + 0x20 ] ebx
mov [ esi + 0x40 ] ebx
mov eax [ esp + 0x20 ]
push eax
mov [ esp + 0x1c ] 0x2
call sub_406d10
mov [ esi + 0x10 ] 0x3f7
mov [ esi + 0x18 ] ebx
mov [ esi + 0x1c ] ebx
mov [ esi + 0x14 ] bl
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebx
add esp 0x10
retn 0x4
sub_40c2e0
push ecx
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi ecx
mov ebx [ esi + 0x4 ]
test ebx ebx
push edi
je r-xdata
xor edi edi
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx eax
sub ecx ebx
sar ecx 0x5
jne r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push edx
push 0x1
push eax
push ebp
mov ecx esi
call sub_40be40
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jbe r-xdata
cmp ebx eax
jbe r-xdata
shl edi 0x5
add edi ebx
cmp edi [ esi + 0x8 ]
mov [ esp + 0x20 ] ebx
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test ebp ebp
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi [ esi + 0x4 ]
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebp esi
je r-xdata
mov eax [ esp + 0x18 ]
mov [ eax + 0x4 ] edi
pop edi
mov [ eax ] esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov edi [ esp + 0x20 ]
sub edi ebx
sar edi 0x5
sub_40c370
push ebp
mov ebp esp
push 0xffffffff
push sub_4139c1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
sub edi 0x1
add esi 0x44
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call sub_4076e0
cmp edi ebx
jbe r-xdata
sub_40c3db
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
mov ecx esi
call sub_405f00
add esi 0x44
cmp esi edi
jne r-xdata
sub_40c410
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x5
xor ecx ecx
jmp r-xdata
mov edi [ esi + 0x8 ]
cmp edx edi
jbe r-xdata
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x5
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
push eax
push edi
push esi
lea ecx [ esp + 0x14 ]
push ecx
mov ecx esi
call sub_40c2e0
pop edi
pop esi
add esp 0x8
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
mov edi [ esi + 0x8 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
push ecx
push esi
push edx
push 0x1
push edi
call sub_40b680
add esp 0x18
add edi 0x20
mov [ esi + 0x8 ] edi
pop edi
pop esi
add esp 0x8
retn 0x4
sub_40c4a0
push ecx
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_40c200
add esp 0x1c
retn
sub_40c4d0
push ecx
mov edx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x1c ]
push edx
push ecx
push eax
push esi
push edi
call sub_40c370
mov ecx esi
add esp 0x18
shl ecx 0x4
add ecx esi
lea eax [ edi + ecx * 4 ]
pop edi
pop esi
pop ecx
retn 0xc
sub_40c510
push ecx
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edx
call sub_4068d0
add esp 0x1c
retn 0xc
sub_40c540
push ebp
mov ebp esp
push 0xffffffff
push sub_4139e0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov edi ecx
mov [ ebp - 0x18 ] edi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
mov ecx edi
call sub_404130
test al al
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov eax edi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
cmp [ esi + 0x4 ] eax
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x14 ] eax
jbe r-xdata
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ edi + 0x4 ]
mov [ ebp + 0x8 ] 0x0
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
push ecx
push edx
push edi
push eax
mov eax [ ebp - 0x14 ]
push eax
push ebx
call sub_40c160
add esp 0x18
mov [ edi + 0x8 ] eax
call [ _invalid_parameter_noinfo@IAT ]
sub_40c610
push ebp
mov ebp esp
push 0xffffffff
push sub_413a08
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x14 ]
mov esi ecx
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x64 ] esi
call sub_4076e0
mov ecx [ esi + 0x4 ]
xor edi edi
cmp ecx edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov edx [ esi + 0xc ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov edi edx
shr edi 0x1f
add edi edx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_405f00
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40808e
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test ecx ecx
jne r-xdata
call sub_404240
mov edx 0x3c3c3c3
sub edx eax
cmp edx ebx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov edx ecx
sub edx edi
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
mov [ ebp - 0x5c ] ecx
mov eax ebx
jae r-xdata
mov eax edi
shr eax 0x1
mov edx 0x3c3c3c3
sub edx eax
cmp edx edi
jae r-xdata
add eax ebx
cmp edi eax
jae r-xdata
shl eax 0x4
add eax ebx
add eax eax
push ecx
add eax eax
mov ebx ecx
push ecx
sub ebx eax
push ebx
mov ecx esi
mov [ ebp - 0x60 ] eax
call sub_40c510
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x5c ]
push eax
push ebx
push edi
call sub_40c4a0
mov ecx [ ebp - 0x60 ]
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ecx + edi ]
push eax
push edi
call sub_40c100
add esp 0x18
shl eax 0x4
add eax ebx
add eax eax
add eax eax
mov [ ebp - 0x60 ] eax
add eax edi
push eax
push ecx
push edi
mov ecx esi
call sub_40c510
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x58 ]
push edx
mov edx ecx
sub edx edi
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
sub ebx eax
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_40c4d0
mov eax [ ebp - 0x60 ]
add [ esi + 0x8 ] eax
mov esi [ esi + 0x8 ]
lea ecx [ ebp - 0x58 ]
push ecx
sub esi eax
push esi
push edi
mov [ ebp - 0x4 ] 0x0
call sub_40c100
add esp 0xc
jmp r-xdata
add edi eax
xor edi edi
jmp r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test ecx ecx
jne r-xdata
push 0x0
push edi
call sub_4048b0
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x5c ] 0x0
mov edx [ ebp - 0x5c ]
push edx
mov edx [ ebp - 0x5c ]
push edx
push esi
push eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_4068d0
add esp 0x20
lea ecx [ ebp - 0x58 ]
push ecx
push ebx
push eax
mov ecx esi
mov [ ebp - 0x60 ] eax
call sub_40c4d0
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x5c ] 0x0
mov edx [ ebp - 0x5c ]
push edx
mov edx [ ebp - 0x5c ]
push edx
push esi
push eax
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0xc ]
push ecx
push eax
call sub_4068d0
mov ecx [ esi + 0x4 ]
xor eax eax
add esp 0x18
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx esi
call sub_4040d0
mov edi eax
add edi ebx
add eax ebx
cmp edi eax
jae r-xdata
add ebx eax
test ecx ecx
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov eax [ ebp - 0x68 ]
mov ecx edi
shl ecx 0x4
add ecx edi
lea edx [ eax + ecx * 4 ]
mov ecx ebx
shl ecx 0x4
add ecx ebx
mov [ esi + 0xc ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x5c ]
mov eax [ esi + 0x8 ]
push edx
push esi
push eax
push ecx
call sub_404800
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x14
sub_40c88e
mov ecx [ ebp + 0x10 ]
mov eax ecx
shl eax 0x4
add eax ecx
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0x8 ]
add eax eax
add eax eax
add edx eax
push edx
mov edx [ ebp + 0xc ]
add eax edx
push eax
call sub_402b10
push 0x0
push 0x0
call _CxxThrowException
sub_40c930
push 0xffffffff
push sub_413a59
mov eax [ fs : 0x0 ]
push eax
sub esp 0x3c
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x44 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x8 ] 0x0
mov eax [ ecx ]
test eax eax
jne r-xdata
mov edx [ esp + 0x58 ]
push edx
mov edx [ eax + 0x4 ]
add ecx 0x8
push ecx
lea ecx [ esp + 0x14 ]
push ecx
call edx
add esp 0xc
mov esi [ esp + 0x54 ]
push eax
mov ecx esi
mov [ esp + 0x50 ] 0x2
call sub_40c540
mov eax [ esp + 0x10 ]
test eax eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x4c ] 0x0
je r-xdata
lea ecx [ esp + 0x1c ]
call sub_401370
push eax
mov [ esp + 0x50 ] 0x1
call sub_405770
mov eax esi
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x48
retn 0x8
mov ecx [ esp + 0x58 ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
push edx
push ecx
push eax
call sub_404800
mov edx [ esp + 0x20 ]
push edx
call ??3@YAXPAX@Z
add esp 0x14
sub_40c9f0
push 0xffffffff
push sub_413aa1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov eax ecx
mov [ esp + 0x8 ] 0x0
mov ecx [ esp + 0x34 ]
mov eax [ eax ]
push ecx
mov ecx [ esp + 0x34 ]
lea edx [ esp + 0x10 ]
push edx
call eax
mov esi [ esp + 0x2c ]
push eax
mov ecx esi
mov [ esp + 0x28 ] 0x1
call sub_40c540
mov eax [ esp + 0x10 ]
test eax eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x24 ] 0x0
je r-xdata
mov eax esi
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x20
retn 0xc
mov ecx [ esp + 0x34 ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
push edx
push ecx
push eax
call sub_404800
mov edx [ esp + 0x20 ]
push edx
call ??3@YAXPAX@Z
add esp 0x14
sub_40ca90
push ecx
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov ebx [ esp + 0x1c ]
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov ecx ebx
sub ecx edi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ esp + 0x24 ]
push ecx
push 0x1
push ebp
push ebx
mov ecx esi
call sub_40c610
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jbe r-xdata
cmp edi ebx
jbe r-xdata
mov edx edi
shl edx 0x4
add edx edi
lea edi [ ebx + edx * 4 ]
cmp edi [ esi + 0x8 ]
mov [ esp + 0x20 ] ebx
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ebx [ esp + 0x1c ]
test ebx ebx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi [ esi + 0x4 ]
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0x18 ]
mov [ eax + 0x4 ] edi
pop edi
mov [ eax ] esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ecx ebp
sub ecx edi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov edi edx
shr edi 0x1f
add edi edx
sub_40cb50
push ecx
mov eax [ esp + 0x14 ]
mov edx [ eax ]
mov eax [ ecx ]
mov ecx [ esp + 0x10 ]
push esi
mov esi [ esp + 0xc ]
push edx
push eax
push esi
mov [ esp + 0x10 ] 0x0
call sub_40c9f0
mov eax esi
pop esi
pop ecx
retn 0x14
sub_40cb80
sub esp 0x8
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
xor ecx ecx
jmp r-xdata
push ebx
mov ebx [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
mov edx [ esi + 0xc ]
sub edx edi
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jae r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x18 ]
push eax
push ebx
push esi
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_40ca90
pop ebx
pop edi
pop esi
add esp 0x8
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
mov edi [ esi + 0x8 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
push ecx
push esi
push edx
push 0x1
push edi
call sub_40c370
add esp 0x18
add edi 0x44
mov [ esi + 0x8 ] edi
pop edi
pop esi
add esp 0x8
retn 0x4
sub_40cc30
push ecx
push esi
mov esi [ esp + 0xc ]
xor eax eax
mov [ esp + 0x4 ] eax
mov edx [ esp + 0x10 ]
push eax
mov [ esp + 0x8 ] al
lea eax [ esp + 0x14 ]
push eax
push ecx
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x10 ]
push edx
push esi
add ecx 0x4
call sub_40cb50
mov eax esi
pop esi
pop ecx
retn 0x8
sub_40cc70
push 0xffffffff
push sub_413b23
mov eax [ fs : 0x0 ]
push eax
sub esp 0x11c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x118 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x130 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x140 ]
mov ebp [ esp + 0x144 ]
xor ecx ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x18 ] edi
mov [ edi + 0x4 ] ecx
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] ecx
mov eax [ ebp + 0x4 ]
cmp eax ecx
mov [ esp + 0x138 ] ecx
mov [ esp + 0x1c ] 0x1
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax edi
mov ecx [ esp + 0x130 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x118 ]
xor ecx esp
call sub_40808e
add esp 0x128
retn 0x8
cmp [ esi + 0x18 ] 0x10
lea ebx [ esi + 0x4 ]
jb r-xdata
mov esi [ ebp + 0x4 ]
mov ecx [ esi + 0x14 ]
cmp ecx 0x3
jb r-xdata
mov eax ebx
mov eax [ ebx ]
jmp r-xdata
cmp ecx 0x1
jae r-xdata
cmp [ eax ] 0x2d
jne r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp [ ebx + 0x1 ] 0x2d
jne r-xdata
mov ebx [ ebx ]
lea ecx [ esp + 0xcc ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x138 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
mov ebx 0x2
mov ecx esi
mov [ esp + 0x144 ] bl
mov [ esp + 0x20 ] 0x3d
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov edi eax
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp edi [ eax ]
je r-xdata
mov eax [ eax ]
push eax
push ebx
lea ecx [ esp + 0x30 ]
push ecx
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ esp + 0xd0 ]
mov [ esp + 0x13c ] 0x5
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x138 ] bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea edx [ edi - 0x2 ]
push edx
push ebx
lea eax [ esp + 0x30 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ esp + 0xd0 ]
mov [ esp + 0x13c ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x138 ] bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov edx [ ecx ]
push edx
add edi 0x1
push edi
lea eax [ esp + 0x30 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ esp + 0xb4 ]
mov [ esp + 0x13c ] 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ esp + 0x28 ]
mov [ esp + 0x138 ] bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ esp + 0xc4 ] 0x0
jne r-xdata
push esi
lea ecx [ esp + 0x11c ]
call sub_404950
lea ecx [ esp + 0xe8 ]
push ecx
mov ecx [ esp + 0x1c ]
call sub_40cb80
lea edx [ esp + 0x20 ]
push edx
mov ecx ebp
call sub_404e70
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
lea eax [ esp + 0x4c ]
push eax
mov ecx ebp
call sub_40b750
lea ecx [ esp + 0xe8 ]
mov [ esp + 0x138 ] bl
call sub_405f00
lea ecx [ esp + 0xb0 ]
mov [ esp + 0x138 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0xcc ]
mov [ esp + 0x138 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi [ esp + 0x18 ]
lea eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x10c ]
call sub_404950
lea ecx [ esp + 0xe8 ]
call sub_40b7c0
lea edx [ esp + 0xcc ]
push edx
lea ecx [ esp + 0xec ]
mov [ esp + 0x13c ] 0x6
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
cmp [ esp + 0xc4 ] 0x0
je r-xdata
push 0x21
lea ecx [ esp + 0xd0 ]
push ecx
lea ecx [ esp + 0x54 ]
call sub_40af20
push r--data
lea edx [ esp + 0x50 ]
push edx
call _CxxThrowException
sub_40cf70
push 0xffffffff
push sub_413bca
mov eax [ fs : 0x0 ]
push eax
sub esp 0xf0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xec ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x104 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x118 ]
mov ebx [ esp + 0x114 ]
mov [ esp + 0x14 ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
mov edi [ _invalid_parameter_noinfo@IAT ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x18 ] esi
je r-xdata
call edi
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
mov eax ebx
cmp [ ebp + 0x18 ] 0x10
lea esi [ ebp + 0x4 ]
jb r-xdata
mov ebp [ esi + 0x4 ]
mov ecx [ ebp + 0x14 ]
cmp ecx 0x2
jb r-xdata
mov eax esi
mov eax [ esi ]
jmp r-xdata
cmp ecx 0x1
jae r-xdata
cmp [ eax ] 0x2d
jne r-xdata
cmp [ ebp + 0x18 ] 0x10
jb r-xdata
call edi
cmp [ esi + 0x1 ] 0x2d
je r-xdata
mov esi [ esi ]
xor ebx ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x30 ] ebx
push 0x2
push ebx
lea ecx [ esp + 0xa8 ]
push ecx
mov ecx ebp
mov [ esp + 0x118 ] ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov edx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov eax [ edx ]
push eax
push 0x2
lea ecx [ esp + 0x8c ]
push ecx
mov ecx ebp
mov [ esp + 0x118 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov edi [ ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@ABV10@D@Z@IAT ]
mov [ esp + 0x10c ] 0x2
nop
xor bl bl
test [ esi + 0x10 ] 0x100
je r-xdata
lea ecx [ esp + 0xbc ]
call sub_40b7c0
test bl bl
je r-xdata
mov esi [ esp + 0x48 ]
and [ esp + 0x14 ] 0xfffffffe
test esi esi
je r-xdata
lea ecx [ esp + 0x44 ]
push ecx
mov ecx eax
call sub_411150
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
or [ esp + 0x14 ] 0x1
mov [ esp + 0x10c ] 0x3
call eax
test eax eax
jne r-xdata
lea edx [ esp + 0xa0 ]
push edx
lea ecx [ esp + 0xc0 ]
mov [ esp + 0x110 ] 0x7
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push ebp
lea ecx [ esp + 0xf0 ]
call sub_404950
cmp [ esp + 0x98 ] 0x0
je r-xdata
lea ecx [ esp + 0xa0 ]
push ecx
lea ecx [ esp + 0xc0 ]
mov [ esp + 0x110 ] 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea edx [ esp + 0xbc ]
push edx
lea ecx [ esp + 0x28 ]
call sub_40cb80
cmp [ esp + 0x98 ] 0x0
je r-xdata
lea ecx [ esi + 0x4 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
cmp [ esp + 0x98 ] ebx
je r-xdata
lea ecx [ esp + 0xbc ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_40cb80
mov esi [ esp + 0x18 ]
lea edx [ esp + 0x34 ]
push edx
mov ecx esi
call sub_404e70
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x84 ]
push eax
lea ecx [ esp + 0xe0 ]
call sub_404950
mov esi [ esp + 0x18 ]
lea ecx [ esp + 0x34 ]
push ecx
mov ecx esi
call sub_404e70
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
lea ecx [ esp + 0x44 ]
push ecx
jmp r-xdata
push r--data
lea ecx [ esp + 0x50 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ esp + 0x9c ] 0x10
mov ecx [ esp + 0x88 ]
mov [ esp + 0x10c ] 0x5
jae r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esp + 0x104 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xec ]
xor ecx esp
call sub_40808e
add esp 0xfc
retn 0x8
mov ecx esi
call sub_40b750
lea ecx [ esp + 0xbc ]
mov [ esp + 0x10c ] 0x2
call sub_405f00
mov esi [ esp + 0x20 ]
lea ecx [ esp + 0x24 ]
push ecx
mov ecx esi
call sub_40c540
lea ecx [ esp + 0x84 ]
mov [ esp + 0x10c ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0xa0 ]
mov [ esp + 0x10c ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x10c ] 0xffffffff
call sub_4022a0
mov eax esi
jmp r-xdata
movzx ecx [ ecx ]
push ecx
push eax
lea edx [ esp + 0x70 ]
push edx
call edi
add esp 0xc
push eax
lea ecx [ esp + 0xa4 ]
mov [ esp + 0x110 ] 0x6
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ esp + 0x68 ]
mov [ esp + 0x10c ] 0x5
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x4c ]
mov [ esp + 0x10c ] 0x4
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x88 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
lea eax [ esp + 0x3c ]
push eax
lea ecx [ esp + 0x90 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::erase@IAT ]
lea ecx [ esp + 0xbc ]
mov [ esp + 0x10c ] 0x2
call sub_405f00
xor ebx ebx
jmp r-xdata
lea ecx [ esp + 0x88 ]
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
test [ esp + 0x14 ] 0x1
mov [ esp + 0x10c ] 0x2
je r-xdata
mov esi [ esp + 0x1c ]
mov ecx [ esi + 0x18 ]
push ebx
lea edx [ esp + 0xa4 ]
push edx
call sub_412290
cmp eax ebx
je r-xdata
sub_40d380
push 0xffffffff
push sub_413c4b
mov eax [ fs : 0x0 ]
push eax
sub esp 0xac
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa8 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc0 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0xd0 ]
mov esi [ esp + 0xd4 ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x18 ] ebp
mov [ ebp + 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0xc ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
mov [ esp + 0xc8 ] ebx
mov [ esp + 0x14 ] 0x1
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax ebp
mov ecx [ esp + 0xc0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xa8 ]
xor ecx esp
call sub_40808e
add esp 0xb8
retn 0x8
cmp [ edi + 0x18 ] 0x10
jb r-xdata
mov edi [ esi + 0x4 ]
mov eax [ edi + 0x14 ]
cmp eax 0x2
jb r-xdata
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
push 0x1
push 0x1
lea ecx [ esp + 0x2c ]
push ecx
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea edx [ esp + 0x60 ]
push r--data
push edx
mov [ esp + 0xd4 ] 0x1
call [ ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBDABV10@@Z@IAT ]
add esp 0xc
lea ecx [ esp + 0x24 ]
mov [ esp + 0xc8 ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov ecx [ eax ]
push ecx
push 0x2
lea edx [ esp + 0x48 ]
push edx
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
lea ecx [ esp + 0x78 ]
mov [ esp + 0xc8 ] 0x4
call sub_40b7c0
lea eax [ esp + 0x5c ]
push eax
lea ecx [ esp + 0x7c ]
mov [ esp + 0xcc ] 0x5
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
cmp [ esp + 0x54 ] ebx
je r-xdata
cmp [ eax ] 0x2f
jne r-xdata
push edi
lea ecx [ esp + 0xac ]
call sub_404950
lea edx [ esp + 0x78 ]
push edx
mov ecx ebp
call sub_40cb80
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
jbe r-xdata
lea ecx [ esp + 0x40 ]
push ecx
lea ecx [ esp + 0x9c ]
call sub_404950
push edi
push esi
lea eax [ esp + 0x24 ]
push eax
mov ecx esi
call sub_40b750
lea ecx [ esp + 0x78 ]
mov [ esp + 0xc8 ] 0x4
call sub_405f00
lea ecx [ esp + 0x40 ]
mov [ esp + 0xc8 ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x5c ]
mov [ esp + 0xc8 ] bl
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
sub_40d570
push 0xffffffff
push sub_413c89
mov eax [ fs : 0x0 ]
push eax
sub esp 0x24
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x34 ]
mov [ fs : 0x0 ] eax
mov [ esp + 0x10 ] ecx
mov ebp [ esp + 0x48 ]
mov eax [ ebp + 0x4 ]
xor edi edi
cmp eax edi
mov [ esp + 0x14 ] edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax [ esp + 0x44 ]
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] edi
mov [ eax + 0xc ] edi
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x30
retn 0x8
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
lea edi [ esi + 0x4 ]
jb r-xdata
mov esi [ ebp + 0x4 ]
mov edx [ esi + 0x14 ]
cmp edx 0x2
jb r-xdata
mov eax edi
mov eax [ edi ]
jmp r-xdata
mov edx [ esp + 0x10 ]
test [ edx + 0x10 ] 0x8
je r-xdata
cmp edx 0x1
jae r-xdata
cmp [ eax ] 0x2d
jne r-xdata
xor edi edi
cmp ecx 0x10
jb r-xdata
mov ecx [ esi + 0x18 ]
cmp ecx 0x10
jb r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp [ edi ] 0x2f
jne r-xdata
mov edi [ edi ]
mov eax edi
mov eax [ edi ]
jmp r-xdata
push 0x1
push 0x0
lea eax [ esp + 0x50 ]
push eax
mov ecx esi
mov [ esp + 0x54 ] 0x3d
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
add eax 0xffffffff
push eax
push 0x1
lea ecx [ esp + 0x20 ]
push ecx
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
mov edi [ esp + 0x10 ]
mov edx [ edi + 0x10 ]
mov ecx [ edi + 0x18 ]
shr edx 0x9
and edx 0xffffff01
push edx
push eax
mov [ esp + 0x44 ] 0x0
call sub_412290
lea ecx [ esp + 0x18 ]
mov esi eax
mov [ esp + 0x3c ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test esi esi
je r-xdata
cmp [ eax + 0x1 ] 0x2d
jne r-xdata
push r--data
push 0x0
push 0x0
mov ecx ebp
call sub_40ad20
mov ecx eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::insert@IAT ]
push 0x0
mov ecx ebp
call sub_40ad20
mov esi eax
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call [ _invalid_parameter_noinfo@IAT ]
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov esi [ esp + 0x44 ]
push ebp
push esi
mov ecx edi
call sub_40cc70
mov eax esi
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x30
retn 0x8
push 0x0
mov ecx ebp
call sub_40ad20
mov esi eax
cmp [ esi + 0x14 ] 0x1
jae r-xdata
cmp [ esi + 0x1 ] 0x2f
jne r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call [ _invalid_parameter_noinfo@IAT ]
add esi 0x4
mov esi [ esi + 0x4 ]
jmp r-xdata
mov [ esi + 0x1 ] 0x2d
sub_40d750
push 0xffffffff
push sub_413ce2
mov eax [ fs : 0x0 ]
push eax
sub esp 0x58
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x54 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x6c ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x7c ]
mov esi [ esp + 0x80 ]
xor ebx ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] ebp
mov [ ebp + 0x4 ] ebx
mov [ ebp + 0x8 ] ebx
mov [ ebp + 0xc ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
mov edi 0x1
mov [ esp + 0x74 ] ebx
mov [ esp + 0x1c ] edi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov eax ebp
mov ecx [ esp + 0x6c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x54 ]
xor ecx esp
call sub_40808e
add esp 0x64
retn 0x8
mov ecx esi
call sub_402850
cmp eax 0x1
jbe r-xdata
mov eax [ esi + 0x4 ]
push r--data
push eax
call [ ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@PBD@Z@IAT ]
add esp 0x8
test al al
je r-xdata
mov ebx [ esi + 0x8 ]
cmp [ esi + 0x4 ] ebx
jbe r-xdata
mov [ esp + 0x14 ] 0x1c
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
push ebx
push esi
push edi
push esi
lea eax [ esp + 0x24 ]
push eax
mov ecx esi
call sub_4072e0
call [ _invalid_parameter_noinfo@IAT ]
lea ecx [ esp + 0x24 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esp + 0x40 ] 0xffffffff
mov [ esp + 0x48 ] ebx
mov [ esp + 0x4c ] ebx
mov [ esp + 0x50 ] ebx
mov [ esp + 0x58 ] ebx
mov [ esp + 0x5c ] ebx
mov [ esp + 0x60 ] ebx
mov [ esp + 0x64 ] bl
mov eax [ esi + 0x4 ]
cmp eax ebx
mov [ esp + 0x74 ] 0x3
je r-xdata
mov ecx [ esi + 0x4 ]
add ecx [ esp + 0x14 ]
push ecx
lea ecx [ esp + 0x48 ]
call sub_404950
lea edx [ esp + 0x24 ]
push edx
mov ecx ebp
call sub_40cb80
lea ecx [ esp + 0x24 ]
mov [ esp + 0x74 ] bl
call sub_405f00
add [ esp + 0x14 ] 0x1c
mov ecx esi
add edi 0x1
call sub_402850
cmp edi eax
jb r-xdata
sub_40d900
push 0xffffffff
push sub_413d45
mov eax [ fs : 0x0 ]
push eax
sub esp 0x90
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8c ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa4 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0xb4 ]
mov esi [ esp + 0xb8 ]
xor ebx ebx
mov [ esp + 0x14 ] ebx
mov ebp ecx
mov [ esp + 0x20 ] edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + 0x4 ]
cmp eax ebx
mov [ esp + 0xac ] ebx
mov [ esp + 0x14 ] 0x1
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esi + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
lea ecx [ esp + 0x24 ]
mov [ esp + 0xac ] bl
call sub_40acc0
mov eax edi
mov ecx [ esp + 0xa4 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x8c ]
xor ecx esp
call sub_40808e
add esp 0x9c
retn 0x8
lea ecx [ esp + 0x5c ]
call sub_40b7c0
lea edx [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x60 ]
mov [ esp + 0xb0 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
cmp [ esp + 0x54 ] ebx
je r-xdata
mov eax [ esi + 0x4 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
lea ecx [ ebp + 0x20 ]
call sub_40b8f0
cmp [ esp + 0x38 ] ebx
mov [ esp + 0xac ] 0x1
je r-xdata
lea ecx [ esp + 0x5c ]
push ecx
mov ecx edi
call sub_40cb80
mov ebp [ esi + 0x4 ]
cmp ebp [ esi + 0x8 ]
jbe r-xdata
lea eax [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x80 ]
call sub_404950
push ebp
push esi
lea edx [ esp + 0x20 ]
push edx
mov ecx esi
call sub_40b750
lea ecx [ esp + 0x5c ]
mov [ esp + 0xac ] 0x1
call sub_405f00
call [ _invalid_parameter_noinfo@IAT ]
sub_40da70
push ecx
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
push esi
mov [ esp + 0xc ] 0x0
call sub_40cc30
mov eax esi
pop esi
pop ecx
retn
sub_40daa0
sub esp 0x8
mov eax [ esp + 0xc ]
push esi
mov esi ecx
mov ecx [ esp + 0x14 ]
lea edx [ esp + 0x4 ]
push edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] ecx
call sub_40abc0
add esp 0x4
test al al
jne r-xdata
mov [ esi ] 0x0
pop esi
add esp 0x8
retn 0x8
lea eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi ] rw-data
pop esi
add esp 0x8
retn 0x8
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
sub_40db00
push 0xffffffff
push sub_413e38
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xac ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc4 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0xd4 ]
xor esi esi
mov [ esp + 0x70 ] esi
mov ebx ecx
mov [ esp + 0x14 ] ebx
mov [ esp + 0x50 ] edi
mov [ esp + 0x58 ] esi
mov [ esp + 0x5c ] esi
mov [ esp + 0x60 ] esi
mov ecx [ ebx + 0x40 ]
lea eax [ ebx + 0x40 ]
neg ecx
sbb ecx ecx
test ecx sub_40e430
mov ebp 0x1
mov [ esp + 0xcc ] ebp
je r-xdata
mov edx [ ebx + 0x20 ]
neg edx
sbb edx edx
test edx sub_40e430
je r-xdata
push eax
lea ecx [ esp + 0x58 ]
call sub_40c410
test [ ebx + 0x10 ] 0x1
je r-xdata
mov eax sub_40d900
push ebx
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x38 ] esi
call sub_40daa0
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xd0 ] 0x2
call sub_40c410
mov eax [ esp + 0x30 ]
cmp eax esi
mov [ esp + 0xcc ] 0x1
je r-xdata
test [ ebx + 0x10 ] 0x800
je r-xdata
mov eax sub_40cc70
push ebx
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x38 ] esi
call sub_40daa0
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xd0 ] 0x3
call sub_40c410
mov eax [ esp + 0x30 ]
cmp eax esi
mov [ esp + 0xcc ] 0x1
je r-xdata
mov eax [ eax ]
cmp eax esi
je r-xdata
mov eax [ ebx + 0x10 ]
test al 0x2
je r-xdata
mov eax sub_40d570
push ebx
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x38 ] esi
call sub_40daa0
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xd0 ] 0x4
call sub_40c410
mov eax [ esp + 0x30 ]
cmp eax esi
mov [ esp + 0xcc ] 0x1
je r-xdata
mov eax [ eax ]
cmp eax esi
je r-xdata
lea ecx [ esp + 0x38 ]
push 0x2
push ecx
mov edx ecx
push edx
call eax
add esp 0xc
mov eax [ ebx + 0x10 ]
test al 0x2
je r-xdata
test al 0x4
je r-xdata
mov eax [ eax ]
cmp eax esi
je r-xdata
lea ecx [ esp + 0x38 ]
push 0x2
push ecx
mov edx ecx
push edx
call eax
add esp 0xc
mov eax sub_40d750
push ebx
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x38 ] esi
call sub_40daa0
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xd0 ] 0x7
call sub_40c410
mov eax [ esp + 0x30 ]
cmp eax esi
mov [ esp + 0xcc ] 0x1
je r-xdata
test al 0x8
je r-xdata
mov eax sub_40cf70
push ebx
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x38 ] esi
call sub_40daa0
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xd0 ] 0x5
call sub_40c410
mov eax [ esp + 0x30 ]
cmp eax esi
mov [ esp + 0xcc ] 0x1
je r-xdata
lea ecx [ esp + 0x38 ]
push 0x2
push ecx
mov edx ecx
push edx
call eax
add esp 0xc
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] esi
mov [ edi + 0xc ] esi
mov ecx ebx
mov [ esp + 0x70 ] ebp
call sub_408c10
test al al
jne r-xdata
mov eax [ eax ]
cmp eax esi
je r-xdata
mov eax sub_40d380
push ebx
push eax
lea ecx [ esp + 0x38 ]
mov [ esp + 0x38 ] esi
call sub_40daa0
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x58 ]
mov [ esp + 0xd0 ] 0x6
call sub_40c410
mov eax [ esp + 0x30 ]
cmp eax esi
mov [ esp + 0xcc ] 0x1
je r-xdata
mov eax [ eax ]
cmp eax esi
je r-xdata
mov ebp [ esp + 0x50 ]
xor esi esi
mov ecx ebp
mov [ esp + 0x2c ] esi
call sub_4040d0
test eax eax
jbe r-xdata
xor esi esi
xor ebp ebp
mov [ esp + 0x18 ] esi
lea ecx [ esp + 0x38 ]
push 0x2
push ecx
mov edx ecx
push edx
call eax
add esp 0xc
mov eax [ eax ]
cmp eax esi
je r-xdata
lea ecx [ esp + 0x38 ]
push 0x2
push ecx
mov edx ecx
push edx
call eax
add esp 0xc
cmp [ ebx + 0x1c ] 0x0
je r-xdata
xor edi edi
lea ecx [ esp + 0x7c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov [ esp + 0x98 ] 0xffffffff
mov [ esp + 0xa0 ] esi
mov [ esp + 0xa4 ] esi
mov [ esp + 0xa8 ] esi
mov [ esp + 0xb0 ] esi
mov [ esp + 0xb4 ] esi
mov [ esp + 0xb8 ] esi
mov [ esp + 0xbc ] 0x0
mov eax [ ebx + 0x4 ]
cmp eax esi
mov [ esp + 0xcc ] 0xc
je r-xdata
mov esi [ esp + 0x5c ]
sub esi edi
sar esi 0x5
cmp ebp esi
jae r-xdata
lea ecx [ esp + 0x38 ]
push 0x2
push ecx
mov edx ecx
push edx
call eax
add esp 0xc
mov esi [ esp + 0x58 ]
test esi esi
mov [ esp + 0xcc ] 0x0
je r-xdata
xor edi edi
mov ecx ebp
mov [ esp + 0x14 ] edi
call sub_4040d0
test eax eax
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov ecx edx
shr ecx 0x1f
add ecx edx
jne r-xdata
xor esi esi
mov ecx ebx
call sub_402850
cmp ebp esi
mov [ esp + 0x6c ] eax
jb r-xdata
mov eax ebp
mov ecx [ esp + 0xc4 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0xac ]
xor ecx esp
call sub_40808e
add esp 0xbc
retn 0x4
mov eax [ esp + 0x5c ]
cmp esi eax
mov edi eax
je r-xdata
mov [ esp + 0x18 ] edi
mov ecx ebp
add esi 0x1
add edi 0x44
call sub_4040d0
cmp esi eax
jb r-xdata
test eax eax
je r-xdata
mov eax [ ebp + 0x4 ]
cmp [ edi + eax + 0x14 ] 0x0
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov edx [ ebx + 0x4 ]
push edx
lea ecx [ esp + 0xa0 ]
call sub_404950
mov eax [ ebx + 0x4 ]
cmp eax esi
je r-xdata
mov eax [ esp + 0x18 ]
push ebx
lea edx [ esp + 0x20 ]
lea ecx [ eax + edi ]
push edx
call sub_40c930
mov esi [ esp + 0x20 ]
test esi esi
mov edi [ esp + 0x24 ]
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ esp + 0x58 ]
push esi
call ??3@YAXPAX@Z
add esp 0x4
lea esp [ esp ]
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebp + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
push esi
push ebx
lea eax [ esp + 0x7c ]
push eax
mov ecx ebx
call sub_40b750
mov esi [ esp + 0xb0 ]
xor ebp ebp
cmp esi ebp
mov [ esp + 0xcc ] 0xe
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebx + 0x4 ]
push ecx
lea ecx [ esp + 0xb0 ]
call sub_404950
mov ecx [ esp + 0x50 ]
lea edx [ esp + 0x7c ]
push edx
call sub_40cb80
mov esi [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jbe r-xdata
mov ecx ebx
call sub_402850
cmp eax [ esp + 0x6c ]
mov [ esp + 0xcc ] 0x1
jne r-xdata
mov ecx edi
sub ecx esi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
je r-xdata
add esi 0x20
cmp esi edi
jne r-xdata
mov ecx [ eax ]
test ecx ecx
je r-xdata
add [ esp + 0x18 ] 0x44
mov ecx ebp
add edi 0x1
call sub_4040d0
cmp edi eax
jb r-xdata
mov ecx [ ebx + 0x1c ]
call sub_413100
cmp [ esp + 0x14 ] eax
jae r-xdata
mov esi [ ebp + 0x4 ]
add esi [ esp + 0x18 ]
cmp [ esi + 0x1c ] 0xffffffff
je r-xdata
mov eax [ esp + 0x2c ]
mov ecx [ ebp + 0x4 ]
mov [ edi + ecx + 0x1c ] eax
add eax 0x1
mov [ esp + 0x2c ] eax
mov esi [ esp + 0xa0 ]
cmp esi ebp
mov [ esp + 0xb0 ] ebp
mov [ esp + 0xb4 ] ebp
mov [ esp + 0xb8 ] ebp
mov [ esp + 0xcc ] 0xd
je r-xdata
mov edi [ esp + 0xb4 ]
cmp esi edi
je r-xdata
xor ebp ebp
cmp esi ebp
je r-xdata
xor eax eax
cmp esi eax
je r-xdata
xor ebx ebx
mov [ esp + 0x34 ] ebx
mov [ esp + 0x38 ] ebx
mov [ esp + 0x3c ] ebx
mov [ esp + 0xcc ] 0x9
xor ebp ebp
mov eax [ esi ]
test eax eax
je r-xdata
mov esi [ esp + 0x58 ]
mov [ esi ] 0x0
lea eax [ esi + 0x8 ]
push 0x2
push eax
push eax
call ecx
add esp 0xc
mov eax [ ebp + 0x4 ]
test eax eax
je r-xdata
push r--data
lea ecx [ esp + 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov bl 0xf
lea ecx [ esp + 0x7c ]
mov [ esp + 0xcc ] bl
call [ std::exception::exception@IAT ]
lea eax [ esp + 0x30 ]
push eax
lea ecx [ esp + 0x8c ]
mov [ esp + 0xd0 ] 0x10
mov [ esp + 0x80 ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push r--data
lea ecx [ esp + 0x80 ]
push ecx
mov [ esp + 0xd4 ] bl
mov [ esp + 0x84 ] r--data
call _CxxThrowException
mov edx [ esp + 0x14 ]
mov ecx [ ebx + 0x1c ]
push edx
call sub_413130
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
add [ esp + 0x14 ] 0x1
lea ecx [ esp + 0x7c ]
mov [ esp + 0xa0 ] ebp
mov [ esp + 0xa4 ] ebp
mov [ esp + 0xa8 ] ebp
mov [ esp + 0xcc ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi [ esp + 0xa4 ]
cmp esi edi
je r-xdata
push esi
call operator delete
add esp 0x4
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
mov [ esp + 0x20 ] ebp
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebp
jmp r-xdata
mov ecx [ esp + 0x64 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push edi
push esi
call sub_404800
mov eax [ esp + 0x30 ]
push eax
call operator delete
add esp 0x14
add [ esp + 0x18 ] 0x20
add ebp 0x1
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] eax
xor esi esi
jmp r-xdata
mov ecx [ esp + 0x64 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
push edi
push esi
call sub_404800
mov eax [ esp + 0x30 ]
push eax
call operator delete
add esp 0x14
xor eax eax
mov ecx edi
sub ecx esi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
push esi
call operator delete
add esp 0x4
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
mov esi [ esp + 0xb0 ]
mov ecx ebx
call sub_408c10
test al al
je r-xdata
mov edi [ esp + 0x58 ]
cmp edi esi
mov [ esp + 0x2c ] ebp
je r-xdata
cmp esi edi
mov ebp edi
jbe r-xdata
test esi esi
je r-xdata
add eax 0xffffffff
cmp ebp eax
jae r-xdata
mov esi [ esp + 0xa0 ]
lea eax [ esp + 0x1c ]
mov ebx eax
lea eax [ ebp - 0x44 ]
cmp eax edi
mov [ esp + 0x68 ] ebp
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
call [ _invalid_parameter_noinfo@IAT ]
mov esi [ esp + 0x20 ]
sub edi esi
mov eax 0x78787879
imul edi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ebp eax
jb r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp eax esi
jae r-xdata
test esi esi
jne r-xdata
lea ecx [ esp + 0x30 ]
push ecx
mov ecx [ esp + 0x18 ]
lea edx [ ebx + esi ]
push edx
call sub_40b9a0
mov edi [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
add ebp 0x1
add ebx 0x44
jmp r-xdata
mov ecx [ esp + 0x14 ]
push ecx
push esi
call sub_40b9a0
xor ebp ebp
xor ebx ebx
mov edi edi
call [ _invalid_parameter_noinfo@IAT ]
lea esi [ ebp - 0x44 ]
cmp esi [ ebx + 0x8 ]
jb r-xdata
mov eax [ esp + 0x34 ]
test eax eax
mov [ esp + 0xcc ] 0x8
je r-xdata
mov ecx edi
sub ecx esi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ebp eax
jae r-xdata
mov ebp [ esp + 0x2c ]
mov ebx [ esp + 0x14 ]
xor eax eax
mov [ esp + 0x34 ] eax
mov [ esp + 0x38 ] eax
mov [ esp + 0x3c ] eax
mov edi [ esp + 0x38 ]
cmp eax edi
mov esi eax
je r-xdata
mov ecx [ esp + 0x50 ]
lea eax [ ebx + esi ]
push eax
call sub_40cb80
add ebp 0x1
add ebx 0x44
jmp r-xdata
push eax
call operator delete
mov edi [ esp + 0x28 ]
mov esi [ esp + 0x24 ]
add esp 0x4
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
mov esi [ esp + 0x20 ]
test esi esi
mov edi [ esp + 0x24 ]
je r-xdata
mov eax [ esp + 0x34 ]
sub_40e440
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
retn
retn
sub_40e460
mov ecx [ esp + 0x4 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x44
jae r-xdata
xor ecx ecx
mov edx ecx
shl edx 0x4
add edx ecx
add edx edx
add edx edx
push edx
call ??2@YAPAXI@Z
add esp 0x4
add esp 0xc
retn
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call [ std::exception::exception@IAT ]
push r--data
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] r--data
call _CxxThrowException
sub_40e4e0
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
call edi
mov ecx [ eax ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x29 ] 0x0
jne r-xdata
pop edi
pop esi
retn
call edi
pop edi
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
lea ebx [ ebx ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
lea esp [ esp ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_40e570
push ebp
mov ebp esp
push 0xffffffff
push sub_413e81
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x2c
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esi
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x4 ] ecx
push eax
lea ecx [ esi + 0xc ]
mov [ esi + 0x8 ] edx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov cl [ ebp + 0x18 ]
mov [ esi + 0x28 ] cl
mov [ esi + 0x29 ] 0x0
sub_40e610
push 0xffffffff
push sub_413ec3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x44 ]
mov edx [ esp + 0x40 ]
mov [ esp + 0x8 ] 0x0
mov eax [ eax ]
push eax
mov eax [ edx ]
lea ecx [ esp + 0x10 ]
push ecx
call eax
add esp 0x8
mov esi [ esp + 0x38 ]
push eax
mov ecx esi
mov [ esp + 0x34 ] 0x1
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
lea ecx [ esp + 0xc ]
mov [ esp + 0x8 ] 0x1
mov [ esp + 0x30 ] 0x0
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x2c
retn 0x14
sub_40e6a0
push 0x2c
call ??2@YAPAXI@Z
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x28 ] 0x1
mov [ eax + 0x29 ] 0x0
retn
mov [ ecx ] 0x0
sub_40e6e0
push 0xffffffff
push sub_413ee9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x8 ] 0x9249248
jb r-xdata
mov edx [ esp + 0x74 ]
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x70 ]
push 0x0
push edx
push eax
push esi
push eax
call sub_40e570
mov ebp eax
mov eax [ edi + 0x4 ]
mov ebx 0x1
add [ edi + 0x8 ] ebx
cmp esi eax
jne r-xdata
push r--data
lea ecx [ esp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] 0x0
call sub_401040
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call _CxxThrowException
cmp [ esp + 0x6c ] 0x0
je r-xdata
mov [ eax + 0x4 ] ebp
mov eax [ edi + 0x4 ]
mov [ eax ] ebp
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] ebp
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov eax [ edi + 0x4 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ebp
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ebp + 0x4 ]
cmp [ edx + 0x28 ] 0x0
lea eax [ ebp + 0x4 ]
mov esi ebp
jne r-xdata
mov [ eax + 0x8 ] ebp
mov [ eax ] ebp
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x28 ] bl
mov eax [ esp + 0x68 ]
mov [ eax + 0x4 ] ebp
mov [ eax ] edi
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x10
lea esp [ esp ]
mov edx [ edx ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x28 ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x28 ] bl
mov [ edx + 0x28 ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x28 ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x28 ] bl
mov [ edx + 0x28 ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x28 ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x28 ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x28 ] 0x0
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ecx ]
cmp [ edx + 0x29 ] 0x0
jne r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_403770
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x28 ] 0x0
lea eax [ esi + 0x4 ]
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x28 ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x28 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx edi
call sub_403770
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_4036e0
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ edi + 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] eax
mov [ eax + 0x4 ] ecx
sub_40e8d0
push ecx
push esi
mov esi [ esp + 0xc ]
xor eax eax
mov [ esp + 0x4 ] eax
mov edx [ esp + 0x10 ]
push eax
mov [ esp + 0x8 ] al
lea eax [ esp + 0x14 ]
push eax
push ecx
mov [ esp + 0x1c ] edx
mov edx [ esp + 0x10 ]
push edx
push esi
add ecx 0x4
call sub_40e610
mov eax esi
pop esi
pop ecx
retn 0x8
sub_40e910
sub esp 0xc
push ebx
mov ebx [ esp + 0x18 ]
push ebp
push esi
mov ebp ecx
push edi
mov edi [ ebp + 0x4 ]
mov esi [ edi + 0x4 ]
cmp [ esi + 0x29 ] 0x0
mov al 0x1
mov [ esp + 0x10 ] al
jne r-xdata
test al al
mov esi edi
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] ebp
je r-xdata
nop
lea edx [ esi + 0xc ]
push ebx
push edx
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x4 ]
cmp edi [ ecx ]
jne r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
pop ebp
mov [ eax + 0x8 ] 0x0
mov [ eax ] edx
pop ebx
add esp 0xc
retn 0x8
mov eax [ esp + 0x10 ]
push ebx
push edi
push eax
lea ecx [ esp + 0x20 ]
push ecx
mov ecx ebp
call sub_40e6e0
pop edi
mov ecx eax
mov edx [ ecx ]
mov eax [ esp + 0x1c ]
mov ecx [ ecx + 0x4 ]
pop esi
pop ebp
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax ] edx
pop ebx
add esp 0xc
retn 0x8
lea ecx [ esp + 0x14 ]
call sub_40e4e0
mov esi [ esp + 0x18 ]
push ebx
push edi
push 0x1
lea edx [ esp + 0x20 ]
push edx
mov ecx ebp
call sub_40e6e0
pop edi
mov ecx eax
mov edx [ ecx ]
mov eax [ esp + 0x1c ]
mov ecx [ ecx + 0x4 ]
pop esi
pop ebp
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax ] edx
pop ebx
add esp 0xc
retn 0x8
lea eax [ esi + 0xc ]
push eax
push ebx
mov edi esi
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
mov [ esp + 0x10 ] al
je r-xdata
cmp [ esi + 0x29 ] 0x0
je r-xdata
sub_40ea10
push 0xffffffff
push sub_413f24
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ edi + 0x1c ]
lea ecx [ edi + 0x20 ]
push ecx
lea ecx [ esi + 0x20 ]
mov [ esp + 0x1c ] 0x0
mov [ esi + 0x1c ] eax
call sub_406430
lea edx [ edi + 0x30 ]
push edx
lea ecx [ esi + 0x30 ]
mov [ esp + 0x1c ] 0x1
call sub_406430
mov al [ edi + 0x40 ]
mov [ esi + 0x40 ] al
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_40ea90
push 0xffffffff
push sub_413f54
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
xor eax eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] al
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_40eaf0
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x10 ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0x14 ]
pop esi
pop ebx
retn
push edi
mov edi [ esp + 0x18 ]
sub esi 0x44
sub edi 0x44
push esi
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov eax [ esi + 0x1c ]
lea ecx [ esi + 0x20 ]
push ecx
lea ecx [ edi + 0x20 ]
mov [ edi + 0x1c ] eax
call sub_4026c0
lea edx [ esi + 0x30 ]
push edx
lea ecx [ edi + 0x30 ]
call sub_4026c0
cmp esi ebx
mov al [ esi + 0x40 ]
mov [ edi + 0x40 ] al
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_40eb50
push 0xffffffff
push sub_413f79
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x40 ]
mov edi [ esp + 0x44 ]
cmp esi edi
mov ebx [ esp + 0x4c ]
je r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x48 ]
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x28
retn
push esi
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x58 ]
call sub_40e8d0
push eax
mov ecx ebx
mov [ esp + 0x38 ] 0x0
call sub_404ad0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x34 ] 0xffffffff
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_40ebe0
push esi
mov esi [ esp + 0x8 ]
cmp esi [ esp + 0xc ]
je r-xdata
pop esi
retn
push ebx
push ebp
push edi
mov edi [ esp + 0x1c ]
lea ebx [ edi + 0x20 ]
lea ebp [ edi + 0x30 ]
jmp r-xdata
push edi
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov eax [ edi + 0x1c ]
push ebx
lea ecx [ esi + 0x20 ]
mov [ esi + 0x1c ] eax
call sub_4026c0
push ebp
lea ecx [ esi + 0x30 ]
call sub_4026c0
mov cl [ edi + 0x40 ]
mov [ esi + 0x40 ] cl
add esi 0x44
cmp esi [ esp + 0x18 ]
jne r-xdata
pop edi
pop ebp
pop ebx
sub_40ec40
sub esp 0x8
mov edx [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x20 ]
xor al al
mov [ esp + 0x10 ] al
mov ecx [ esp + 0x10 ]
mov [ esp + 0xc ] al
mov eax [ esp + 0xc ]
push eax
push ecx
push edx
push edi
push esi
push ebx
call sub_40eaf0
sub esi ebx
mov eax 0x78787879
imul esi
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov ecx eax
shl ecx 0x4
add esp 0x18
add ecx eax
mov eax edi
add ecx ecx
pop edi
add ecx ecx
pop esi
sub eax ecx
pop ebx
add esp 0x8
retn
sub_40eca0
push ebp
mov ebp esp
push 0xffffffff
push sub_413fb1
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
add esi 0x44
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x10 ] esi
add edi 0x44
jmp r-xdata
push edi
mov ecx esi
call sub_40ea10
cmp edi [ ebp + 0xc ]
je r-xdata
sub_40ed09
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x10 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
mov ecx esi
call sub_405e30
add esi 0x44
cmp esi edi
jne r-xdata
sub_40ed40
push 0xffffffff
push sub_413fe9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x14
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x38 ]
mov edi [ esp + 0x3c ]
xor ebx ebx
mov ecx esi
mov [ esp + 0x30 ] ebx
mov [ esp + 0x20 ] esi
mov [ esp + 0x1c ] ebx
call sub_40ea90
push edi
mov ecx esi
mov [ esp + 0x34 ] ebx
mov [ esp + 0x20 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x24 ] ebp
jbe r-xdata
mov ecx [ edi + 0x24 ]
cmp ecx [ edi + 0x28 ]
mov [ esp + 0x14 ] ecx
jbe r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esp + 0x20 ]
mov [ esp + 0x14 ] bl
mov edx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x28 ]
push eax
push edx
mov eax sub_40a8e0
push eax
lea eax [ esi + 0x20 ]
push eax
xor eax eax
push eax
push ebp
push ecx
lea eax [ esp + 0x34 ]
push eax
call sub_40eb50
add esp 0x24
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esp + 0x14 ]
sub_40ee10
push ecx
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push ecx
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x14 ]
push eax
push ecx
push edx
call sub_40ec40
add esp 0x1c
retn
sub_40ee40
push ebp
mov ebp esp
push 0xffffffff
push sub_414021
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] ebx
lea esp [ esp ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp + 0xc ] esi
mov [ ebp - 0x18 ] esi
cmp esi ebx
mov [ ebp - 0x4 ] 0x1
je r-xdata
sub edi 0x1
add esi 0x44
mov [ ebp - 0x4 ] bl
mov [ ebp + 0x8 ] esi
jmp r-xdata
mov eax [ ebp + 0x10 ]
push eax
mov ecx esi
call sub_40ea10
cmp edi ebx
jbe r-xdata
sub_40eeab
mov esi [ ebp - 0x14 ]
mov edi [ ebp + 0x8 ]
cmp esi edi
je r-xdata
xor ebx ebx
push ebx
push ebx
call _CxxThrowException
mov ecx esi
call sub_405e30
add esi 0x44
cmp esi edi
jne r-xdata
sub_40eee0
push ecx
mov edx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x1c ]
push edx
push ecx
push eax
push esi
push edi
call sub_40ee40
mov ecx esi
add esp 0x18
shl ecx 0x4
add ecx esi
lea eax [ edi + ecx * 4 ]
pop edi
pop esi
pop ecx
retn 0xc
sub_40ef20
push ecx
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edx
call sub_40eca0
add esp 0x1c
retn 0xc
sub_40ef50
push ebp
mov ebp esp
push 0xffffffff
push sub_414048
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x14 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov eax [ ebp + 0x14 ]
mov esi ecx
push eax
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x64 ] esi
call sub_40ea10
mov ecx [ esi + 0x4 ]
xor edi edi
cmp ecx edi
mov [ ebp - 0x4 ] edi
je r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov edx [ esi + 0xc ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov edi edx
shr edi 0x1f
add edi edx
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0xffffffff
call sub_405e30
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_40808e
mov esp ebp
pop ebp
retn 0x10
test ecx ecx
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test ecx ecx
jne r-xdata
call sub_410b40
mov edx 0x3c3c3c3
sub edx eax
cmp edx ebx
jae r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov edx ecx
sub edx edi
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp eax ebx
mov [ ebp - 0x5c ] ecx
mov eax ebx
jae r-xdata
mov eax edi
shr eax 0x1
mov edx 0x3c3c3c3
sub edx eax
cmp edx edi
jae r-xdata
add eax ebx
cmp edi eax
jae r-xdata
shl eax 0x4
add eax ebx
add eax eax
push ecx
add eax eax
mov ebx ecx
push ecx
sub ebx eax
push ebx
mov ecx esi
mov [ ebp - 0x60 ] eax
call sub_40ef20
mov [ esi + 0x8 ] eax
mov eax [ ebp - 0x5c ]
push eax
push ebx
push edi
call sub_40ee10
mov ecx [ ebp - 0x60 ]
lea edx [ ebp - 0x58 ]
push edx
lea eax [ ecx + edi ]
push eax
push edi
call sub_40ebe0
add esp 0x18
shl eax 0x4
add eax ebx
add eax eax
add eax eax
mov [ ebp - 0x60 ] eax
add eax edi
push eax
push ecx
push edi
mov ecx esi
call sub_40ef20
mov ecx [ esi + 0x8 ]
lea edx [ ebp - 0x58 ]
push edx
mov edx ecx
sub edx edi
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
sub ebx eax
push ebx
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_40eee0
mov eax [ ebp - 0x60 ]
add [ esi + 0x8 ] eax
mov esi [ esi + 0x8 ]
lea ecx [ ebp - 0x58 ]
push ecx
sub esi eax
push esi
push edi
mov [ ebp - 0x4 ] 0x0
call sub_40ebe0
add esp 0xc
jmp r-xdata
add edi eax
xor edi edi
jmp r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
xor eax eax
jmp r-xdata
test ecx ecx
jne r-xdata
push 0x0
push edi
call sub_40e460
mov ecx [ esi + 0x4 ]
mov [ ebp - 0x5c ] 0x0
mov edx [ ebp - 0x5c ]
push edx
mov edx [ ebp - 0x5c ]
push edx
push esi
push eax
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0xc ]
push eax
push ecx
mov [ ebp - 0x4 ] 0x1
call sub_40eca0
add esp 0x20
lea ecx [ ebp - 0x58 ]
push ecx
push ebx
push eax
mov ecx esi
mov [ ebp - 0x60 ] eax
call sub_40eee0
mov ecx [ esi + 0x8 ]
mov [ ebp - 0x5c ] 0x0
mov edx [ ebp - 0x5c ]
push edx
mov edx [ ebp - 0x5c ]
push edx
push esi
push eax
mov [ ebp - 0x60 ] eax
mov eax [ ebp + 0xc ]
push ecx
push eax
call sub_40eca0
mov ecx [ esi + 0x4 ]
xor eax eax
add esp 0x18
cmp ecx eax
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx esi
call sub_40e440
mov edi eax
add edi ebx
add eax ebx
cmp edi eax
jae r-xdata
add ebx eax
test ecx ecx
je r-xdata
mov edx [ esi + 0x8 ]
sub edx ecx
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
mov eax [ ebp - 0x68 ]
mov ecx edi
shl ecx 0x4
add ecx edi
lea edx [ eax + ecx * 4 ]
mov ecx ebx
shl ecx 0x4
add ecx ebx
mov [ esi + 0xc ] edx
lea edx [ eax + ecx * 4 ]
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edx [ ebp - 0x5c ]
mov eax [ esi + 0x8 ]
push edx
push esi
push eax
push ecx
call sub_4047d0
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x14
sub_40f1ce
mov ecx [ ebp + 0x10 ]
mov eax ecx
shl eax 0x4
add eax ecx
mov ecx [ ebp - 0x64 ]
mov edx [ ecx + 0x8 ]
add eax eax
add eax eax
add edx eax
push edx
mov edx [ ebp + 0xc ]
add eax edx
push eax
call sub_402ae0
push 0x0
push 0x0
call _CxxThrowException
sub_40f270
push ecx
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov ebx [ esp + 0x1c ]
xor edi edi
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov ecx ebx
sub ecx edi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
jne r-xdata
mov ecx [ esp + 0x24 ]
push ecx
push 0x1
push ebp
push ebx
mov ecx esi
call sub_40ef50
mov ebx [ esi + 0x4 ]
cmp ebx [ esi + 0x8 ]
jbe r-xdata
cmp edi ebx
jbe r-xdata
mov edx edi
shl edx 0x4
add edx edi
lea edi [ ebx + edx * 4 ]
cmp edi [ esi + 0x8 ]
mov [ esp + 0x20 ] ebx
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ebx [ esp + 0x1c ]
test ebx ebx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi [ esi + 0x4 ]
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebx esi
je r-xdata
mov eax [ esp + 0x18 ]
mov [ eax + 0x4 ] edi
pop edi
mov [ eax ] esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ecx ebp
sub ecx edi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov edi edx
shr edi 0x1f
add edi edx
sub_40f330
sub esp 0x8
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edi
mov eax 0x78787879
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add ecx edx
xor ecx ecx
jmp r-xdata
push ebx
mov ebx [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
mov edx [ esi + 0xc ]
sub edx edi
mov eax 0x78787879
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp ecx eax
jae r-xdata
test edi edi
je r-xdata
mov eax [ esp + 0x18 ]
push eax
push ebx
push esi
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_40f270
pop ebx
pop edi
pop esi
add esp 0x8
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
mov edi [ esi + 0x8 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
push ecx
push esi
push edx
push 0x1
push edi
call sub_40ee40
add esp 0x18
add edi 0x44
mov [ esi + 0x8 ] edi
pop edi
pop esi
add esp 0x8
retn 0x4
sub_40f3e0
push 0xffffffff
push sub_41409c
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ esp + 0x18 ] ebx
xor ebp ebp
mov [ ebx + 0x4 ] ebp
mov [ ebx + 0x8 ] ebp
mov [ ebx + 0xc ] ebp
mov edi [ esp + 0x70 ]
mov eax [ edi + 0x10 ]
lea esi [ ebx + 0x14 ]
push edi
mov ecx esi
mov [ esp + 0x6c ] ebp
mov [ ebx + 0x10 ] eax
call sub_40c540
mov ecx [ edi + 0x10 ]
mov [ esi + 0x10 ] ecx
mov ecx edi
mov [ esp + 0x68 ] 0x1
mov [ esp + 0x70 ] ebp
call sub_4040d0
test eax eax
jbe r-xdata
mov eax ebx
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn 0x4
mov [ esp + 0x14 ] ebp
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ edi + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ esp + 0x70 ] eax
jb r-xdata
mov esi [ esp + 0x40 ]
cmp esi ebp
mov [ esp + 0x50 ] ebp
mov [ esp + 0x54 ] ebp
mov [ esp + 0x58 ] ebp
mov [ esp + 0x68 ] 0x3
je r-xdata
mov ebp [ esp + 0x54 ]
cmp esi ebp
je r-xdata
mov eax [ edi + 0x4 ]
add eax [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
push eax
push edx
call sub_40ed40
add esp 0x8
push eax
mov ecx ebx
mov [ esp + 0x6c ] 0x2
call sub_40f330
mov esi [ esp + 0x50 ]
cmp esi ebp
mov [ esp + 0x68 ] 0x4
je r-xdata
lea ecx [ esp + 0x1c ]
mov [ esp + 0x40 ] ebp
mov [ esp + 0x44 ] ebp
mov [ esp + 0x48 ] ebp
mov [ esp + 0x68 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi [ esp + 0x70 ]
add [ esp + 0x14 ] 0x44
add esi 0x1
mov ecx edi
mov [ esp + 0x70 ] esi
call sub_4040d0
cmp esi eax
jb r-xdata
mov ebp [ esp + 0x44 ]
cmp esi ebp
je r-xdata
push esi
call ??3@YAXPAX@Z
add esp 0x4
xor ebp ebp
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi ebp
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebp
je r-xdata
push esi
call operator delete
add esp 0x4
xor ebp ebp
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi ebp
jne r-xdata
mov esi [ esp + 0x50 ]
mov esi [ esp + 0x40 ]
sub_40f570
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push edi
push ebx
call edx
mov edi eax
cmp [ edi ] 0x0
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov eax edi
mov esi [ esi + 0x4 ]
test esi esi
je r-xdata
mov esi eax
mov eax [ esi ]
mov edx [ eax + 0x4 ]
push ebx
mov ecx esi
call edx
mov edi eax
cmp [ edi ] 0x0
je r-xdata
push ebx
mov ecx esi
call sub_40f570
cmp [ eax ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_40f5d0
push esi
mov esi ecx
cmp [ esi ] 0x0
push edi
mov edi [ _invalid_parameter_noinfo@IAT ]
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
call edi
mov ecx [ eax ]
cmp [ ecx + 0x39 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ esi + 0x4 ] eax
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ eax + 0x4 ]
cmp [ eax + 0x39 ] 0x0
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x39 ] 0x0
jne r-xdata
pop edi
pop esi
retn
call edi
pop edi
pop esi
retn
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x39 ] 0x0
jne r-xdata
lea ebx [ ebx ]
pop edi
mov [ esi + 0x4 ] ecx
pop esi
retn
lea esp [ esp ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] eax
mov edx eax
mov eax [ edx + 0x4 ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_40f660
mov eax [ esp + 0x4 ]
push ebx
mov ebx [ eax ]
push edi
mov edi ecx
cmp ebx [ edi ]
je r-xdata
mov eax edi
pop edi
pop ebx
retn 0x4
test ebx ebx
je r-xdata
push esi
mov esi [ edi ]
test esi esi
je r-xdata
lea ecx [ ebx + 0x4 ]
mov edx 0x1
[ ecx ] edx
mov [ edi ] ebx
pop esi
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_40f6c0
mov eax [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
cmp [ esi + 0x29 ] 0x0
push edi
mov edi eax
jne r-xdata
pop edi
pop esi
retn 0x4
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
lea esp [ esp ]
mov edi esi
mov esi [ esi ]
mov esi [ esi + 0x8 ]
jmp r-xdata
lea eax [ esi + 0xc ]
push ebx
push eax
call ebp
add esp 0x8
test al al
je r-xdata
pop ebp
mov eax edi
pop ebx
cmp [ esi + 0x29 ] 0x0
je r-xdata
sub_40f710
mov eax [ ecx + 0x4 ]
push esi
mov esi [ eax + 0x4 ]
cmp [ esi + 0x29 ] 0x0
push edi
mov edi eax
jne r-xdata
pop edi
pop esi
retn 0x4
push ebx
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
lea esp [ esp ]
mov esi [ esi + 0x8 ]
mov edi esi
mov esi [ esi ]
jmp r-xdata
lea eax [ esi + 0xc ]
push eax
push ebx
call ebp
add esp 0x8
test al al
je r-xdata
pop ebp
mov eax edi
pop ebx
cmp [ esi + 0x29 ] 0x0
je r-xdata
sub_40f760
push ebx
mov ebx [ esp + 0x14 ]
push ebp
mov ebp [ _invalid_parameter_noinfo@IAT ]
push esi
mov esi [ esp + 0x20 ]
push edi
mov edi [ esp + 0x1c ]
call ebp
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
add [ esi ] 0x1
lea ecx [ esp + 0x14 ]
call sub_403840
jmp r-xdata
cmp [ esp + 0x18 ] ebx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
sub_40f7a0
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
mov ecx [ edi ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
jmp r-xdata
mov al [ edi + 0x4 ]
mov [ esi + 0x4 ] al
mov ecx [ edi + 0x8 ]
mov [ esi + 0x8 ] ecx
add edi 0xc
push edi
lea ecx [ esi + 0xc ]
call sub_40f660
pop edi
mov eax esi
pop esi
retn 0x4
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov ecx [ esi ]
test ecx ecx
mov [ esi ] eax
je r-xdata
sub_40f7f0
push 0x3c
call ??2@YAPAXI@Z
add esp 0x4
test eax eax
je r-xdata
lea ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov [ eax ] 0x0
lea ecx [ eax + 0x8 ]
test ecx ecx
je r-xdata
mov [ ecx ] 0x0
mov [ eax + 0x38 ] 0x1
mov [ eax + 0x39 ] 0x0
retn
mov [ ecx ] 0x0
sub_40f830
push 0xffffffff
push sub_4140c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ edi + 0x1c ]
test ecx ecx
mov [ esp + 0x18 ] 0x0
je r-xdata
xor eax eax
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
jmp r-xdata
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
add edi 0x4
mov edx 0x1
[ edi ] edx
mov [ esi + 0x1c ] eax
mov al [ edi + 0x20 ]
mov [ esi + 0x20 ] al
mov ecx [ edi + 0x24 ]
mov [ esi + 0x24 ] ecx
mov edi [ edi + 0x28 ]
test edi edi
mov [ esi + 0x28 ] edi
je r-xdata
sub_40f8c0
sub esp 0x10
push ebx
mov ebx [ esp + 0x1c ]
push esi
push edi
push ebx
mov esi ecx
call sub_403130
test esi esi
mov edi eax
mov [ esp + 0x10 ] edi
jne r-xdata
cmp edi [ esi + 0x4 ]
mov [ esp + 0xc ] esi
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x4 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] esi
lea ecx [ esp + 0x14 ]
add edi 0xc
push edi
push ebx
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
jne r-xdata
lea ecx [ esp + 0xc ]
jmp r-xdata
mov edx [ ecx ]
mov eax [ esp + 0x20 ]
mov ecx [ ecx + 0x4 ]
pop edi
pop esi
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
pop ebx
add esp 0x10
retn 0x8
sub_40f930
push 0xffffffff
push sub_4140c9
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov eax [ esp + 0x20 ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi [ esp + 0x24 ]
mov ecx [ edi ]
test ecx ecx
mov [ esp + 0x18 ] 0x0
je r-xdata
xor eax eax
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x8
add eax 0x4
mov ecx 0x1
[ eax ] ecx
mov [ esi + 0x1c ] eax
mov cl [ edi + 0x4 ]
mov [ esi + 0x20 ] cl
mov edx [ edi + 0x8 ]
mov [ esi + 0x24 ] edx
mov eax [ edi + 0xc ]
test eax eax
mov [ esi + 0x28 ] eax
je r-xdata
sub_40f9c0
sub esp 0x8
push ebx
push ebp
mov ebp [ esp + 0x14 ]
mov eax [ ebp + 0xc ]
add ebp 0x8
push esi
push edi
mov edi [ eax ]
mov esi ebp
mov [ esp + 0x14 ] edi
mov [ esp + 0x10 ] esi
lea ecx [ ecx ]
call [ _invalid_parameter_noinfo@IAT ]
cmp esi ebp
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
test esi esi
jne r-xdata
cmp edi ebx
je r-xdata
cmp edi [ esi + 0x4 ]
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp edi [ esi + 0x4 ]
mov ebx [ edi + 0x30 ]
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edx [ ebx ]
mov eax [ edx + 0x18 ]
add edi 0x28
push edi
mov ecx ebx
call eax
lea ecx [ esp + 0x10 ]
call sub_4037d0
mov edi [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
jmp r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test esi esi
mov ebx [ ebp + 0x4 ]
je r-xdata
sub_40fa40
push 0xffffffff
push sub_4140fe
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax 0x1
xor ebx ebx
test [ rw-data ] al
jne r-xdata
mov eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x18 ]
add esi 0x8
push ecx
mov ecx esi
call sub_40f8c0
mov edi [ esp + 0x14 ]
cmp edi ebx
mov ebp [ esi + 0x4 ]
je r-xdata
or [ rw-data ] eax
push sub_4154c0
mov [ esp + 0x28 ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] bl
mov [ rw-data ] ebx
mov [ rw-data ] ebx
call sub_408161
add esp 0x4
mov [ esp + 0x24 ] 0xffffffff
call [ _invalid_parameter_noinfo@IAT ]
cmp edi esi
je r-xdata
cmp edi ebx
jne r-xdata
mov eax rw-data
jmp r-xdata
mov esi [ esp + 0x18 ]
cmp esi ebp
jne r-xdata
cmp esi [ edi + 0x4 ]
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
lea eax [ esi + 0x28 ]
call [ _invalid_parameter_noinfo@IAT ]
sub_40fb20
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
push edi
mov esi ecx
call sub_40f710
test esi esi
mov ebp [ _invalid_parameter_noinfo@IAT ]
mov ebx eax
jne r-xdata
push edi
mov ecx esi
call sub_40f6c0
test esi esi
mov edi eax
jne r-xdata
call ebp
mov [ esp + 0x14 ] 0x0
mov eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push ebx
push esi
push edi
push esi
call sub_40f760
mov eax [ esp + 0x2c ]
add esp 0x18
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
call ebp
sub_40fb80
push ebp
mov ebp esp
push 0xffffffff
push sub_414131
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
push 0x3c
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] esi
test esi esi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x4 ] ecx
push eax
lea ecx [ esi + 0xc ]
mov [ esi + 0x8 ] edx
call sub_40f830
mov cl [ ebp + 0x18 ]
mov [ esi + 0x38 ] cl
mov [ esi + 0x39 ] 0x0
sub_40fc20
sub esp 0x10
push ebx
mov ebx [ _invalid_parameter_noinfo@IAT ]
push ebp
mov ebp [ esp + 0x28 ]
push esi
push edi
mov [ esp + 0x10 ] ecx
call ebx
cmp esi [ esp + 0x2c ]
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x10
test esi esi
jne r-xdata
mov edi [ esp + 0x28 ]
cmp edi ebp
je r-xdata
cmp edi [ esi + 0x4 ]
jne r-xdata
call ebx
mov ecx [ esp + 0x10 ]
add edi 0xc
push edi
lea eax [ esp + 0x18 ]
push eax
call sub_40e910
lea ecx [ esp + 0x24 ]
call sub_403840
jmp r-xdata
call ebx
mov esi [ esp + 0x24 ]
test esi esi
je r-xdata
sub_40fc90
push 0xffffffff
push sub_413ee9
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x8 ] 0x5d1745c
jb r-xdata
mov edx [ esp + 0x74 ]
mov eax [ edi + 0x4 ]
mov esi [ esp + 0x70 ]
push 0x0
push edx
push eax
push esi
push eax
call sub_40fb80
mov ebp eax
mov eax [ edi + 0x4 ]
mov ebx 0x1
add [ edi + 0x8 ] ebx
cmp esi eax
jne r-xdata
push r--data
lea ecx [ esp + 0x18 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x34 ]
mov [ esp + 0x64 ] 0x0
call sub_401040
push r--data
lea ecx [ esp + 0x34 ]
push ecx
mov [ esp + 0x38 ] r--data
call _CxxThrowException
cmp [ esp + 0x6c ] 0x0
je r-xdata
mov [ eax + 0x4 ] ebp
mov eax [ edi + 0x4 ]
mov [ eax ] ebp
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] ebp
jmp r-xdata
mov [ esi + 0x8 ] ebp
mov eax [ edi + 0x4 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov [ esi ] ebp
mov eax [ edi + 0x4 ]
cmp esi [ eax ]
jne r-xdata
mov edx [ ebp + 0x4 ]
cmp [ edx + 0x38 ] 0x0
lea eax [ ebp + 0x4 ]
mov esi ebp
jne r-xdata
mov [ eax + 0x8 ] ebp
mov [ eax ] ebp
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax [ edx + 0x4 ]
mov [ eax + 0x38 ] bl
mov eax [ esp + 0x68 ]
mov [ eax + 0x4 ] ebp
mov [ eax ] edi
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x10
lea esp [ esp ]
mov edx [ edx ]
cmp [ edx + 0x38 ] 0x0
jne r-xdata
mov edx [ edx + 0x8 ]
cmp [ edx + 0x38 ] 0x0
jne r-xdata
cmp esi [ ecx ]
jne r-xdata
mov [ ecx + 0x38 ] bl
mov [ edx + 0x38 ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x38 ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov [ ecx + 0x38 ] bl
mov [ edx + 0x38 ] bl
mov edx [ eax ]
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x38 ] 0x0
mov edx [ eax ]
mov esi [ edx + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x38 ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x38 ] 0x0
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
mov edx [ ecx ]
mov [ eax + 0x8 ] edx
mov edx [ ecx ]
cmp [ edx + 0x39 ] 0x0
jne r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_403640
mov ecx [ esi + 0x4 ]
cmp [ ecx + 0x38 ] 0x0
lea eax [ esi + 0x4 ]
je r-xdata
mov eax [ esi + 0x4 ]
mov [ eax + 0x38 ] bl
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov [ edx + 0x38 ] 0x0
mov eax [ esi + 0x4 ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx edi
call sub_403640
jmp r-xdata
mov esi ecx
push esi
mov ecx edi
call sub_4035b0
mov edx [ eax + 0x4 ]
mov [ ecx + 0x4 ] edx
mov edx [ edi + 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov ecx [ eax ]
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov edx [ eax + 0x4 ]
cmp eax [ edx ]
jne r-xdata
mov [ edx + 0x4 ] ecx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ edx ] ecx
jmp r-xdata
mov [ ecx ] eax
mov [ eax + 0x4 ] ecx
sub_40fe80
sub esp 0xc
push ebx
mov ebx [ esp + 0x18 ]
push ebp
push esi
mov ebp ecx
push edi
mov edi [ ebp + 0x4 ]
mov esi [ edi + 0x4 ]
cmp [ esi + 0x39 ] 0x0
mov al 0x1
mov [ esp + 0x10 ] al
jne r-xdata
test al al
mov esi edi
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] ebp
je r-xdata
nop
lea edx [ esi + 0xc ]
push ebx
push edx
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
je r-xdata
mov ecx [ ebp + 0x4 ]
cmp edi [ ecx ]
jne r-xdata
mov esi [ esi + 0x8 ]
mov esi [ esi ]
jmp r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x14 ]
pop edi
mov [ eax + 0x4 ] esi
pop esi
pop ebp
mov [ eax + 0x8 ] 0x0
mov [ eax ] edx
pop ebx
add esp 0xc
retn 0x8
mov eax [ esp + 0x10 ]
push ebx
push edi
push eax
lea ecx [ esp + 0x20 ]
push ecx
mov ecx ebp
call sub_40fc90
pop edi
mov ecx eax
mov edx [ ecx ]
mov eax [ esp + 0x1c ]
mov ecx [ ecx + 0x4 ]
pop esi
pop ebp
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax ] edx
pop ebx
add esp 0xc
retn 0x8
lea ecx [ esp + 0x14 ]
call sub_40f5d0
mov esi [ esp + 0x18 ]
push ebx
push edi
push 0x1
lea edx [ esp + 0x20 ]
push edx
mov ecx ebp
call sub_40fc90
pop edi
mov ecx eax
mov edx [ ecx ]
mov eax [ esp + 0x1c ]
mov ecx [ ecx + 0x4 ]
pop esi
pop ebp
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
mov [ eax ] edx
pop ebx
add esp 0xc
retn 0x8
lea eax [ esi + 0xc ]
push eax
push ebx
mov edi esi
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
mov [ esp + 0x10 ] al
je r-xdata
cmp [ esi + 0x39 ] 0x0
je r-xdata
sub_40ff80
sub esp 0xc
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
push edi
jne r-xdata
mov edx [ esi + 0x4 ]
mov edi [ edx ]
push ebp
mov ebp [ esp + 0x20 ]
test ebp ebp
je r-xdata
mov eax [ esp + 0x24 ]
mov ecx [ esi + 0x4 ]
mov edi [ esp + 0x18 ]
push eax
push ecx
push 0x1
push edi
mov ecx esi
call sub_40fc90
mov eax edi
pop edi
pop esi
add esp 0xc
retn 0x10
call [ _invalid_parameter_noinfo@IAT ]
cmp ebp esi
je r-xdata
test ebp ebp
mov edi [ esi + 0x4 ]
je r-xdata
mov edi [ esp + 0x2c ]
lea eax [ ebx + 0xc ]
push eax
push edi
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
je r-xdata
push ebx
mov ebx [ esp + 0x28 ]
cmp ebx edi
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebp esi
je r-xdata
push edi
lea ecx [ esp + 0x14 ]
push ecx
mov ecx esi
call sub_40fe80
mov edx [ eax ]
mov ecx [ esp + 0x20 ]
pop ebx
pop ebp
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
pop edi
mov [ ecx + 0x4 ] eax
mov eax ecx
pop esi
add esp 0xc
retn 0x10
push edi
mov edi [ esp + 0x24 ]
push ebx
push 0x1
push edi
mov ecx esi
call sub_40fc90
pop ebx
pop ebp
mov eax edi
pop edi
pop esi
add esp 0xc
retn 0x10
lea eax [ ebx + 0xc ]
push eax
push edi
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
je r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x8 ]
add eax 0xc
push edi
push eax
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
je r-xdata
cmp ebx edi
mov edi [ esp + 0x2c ]
jne r-xdata
lea eax [ ebx + 0xc ]
push edi
push eax
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
je r-xdata
lea ecx [ esp + 0x24 ]
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebx
call sub_40f5d0
mov ecx [ esp + 0x28 ]
add ecx 0xc
push edi
push ecx
mov ecx esi
call sub_403500
test al al
je r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx + 0x8 ]
push edi
mov edi [ esp + 0x24 ]
push eax
push 0x0
push edi
mov ecx esi
call sub_40fc90
pop ebx
pop ebp
mov eax edi
pop edi
pop esi
add esp 0xc
retn 0x10
mov eax [ esi + 0x4 ]
lea ecx [ esp + 0x24 ]
mov [ esp + 0x24 ] ebp
mov [ esp + 0x28 ] ebx
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] esi
call sub_4037d0
lea ecx [ esp + 0x10 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_4034d0
test al al
mov ebp [ esp + 0x28 ]
jne r-xdata
mov eax [ esp + 0x28 ]
mov edx [ eax + 0x8 ]
cmp [ edx + 0x39 ] 0x0
push edi
mov edi [ esp + 0x24 ]
mov ecx esi
je r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x39 ] 0x0
push edi
mov edi [ esp + 0x24 ]
mov ecx esi
je r-xdata
lea edx [ ebp + 0xc ]
push edx
push edi
mov ecx esi
call sub_403500
test al al
je r-xdata
push ebx
push 0x1
push edi
call sub_40fc90
pop ebx
pop ebp
mov eax edi
pop edi
pop esi
add esp 0xc
retn 0x10
push eax
push 0x0
push edi
call sub_40fc90
pop ebx
pop ebp
mov eax edi
pop edi
pop esi
add esp 0xc
retn 0x10
push ebp
push 0x1
push edi
call sub_40fc90
pop ebx
pop ebp
mov eax edi
pop edi
pop esi
add esp 0xc
retn 0x10
push ebx
push 0x0
push edi
call sub_40fc90
pop ebx
pop ebp
mov eax edi
pop edi
pop esi
add esp 0xc
retn 0x10
sub_410190
push 0xffffffff
push sub_414160
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x58 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov ebp [ esp + 0x68 ]
push ebp
call sub_403130
xor ebx ebx
cmp esi ebx
mov edi eax
jne r-xdata
cmp edi [ esi + 0x4 ]
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] bl
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
lea ecx [ esp + 0x1c ]
push ecx
push ebp
lea ecx [ esp + 0x34 ]
mov [ esp + 0x68 ] ebx
call sub_40f930
push eax
push edi
push esi
lea edx [ esp + 0x20 ]
push edx
mov ecx esi
mov [ esp + 0x70 ] 0x1
call sub_40ff80
mov esi [ eax ]
mov edi [ eax + 0x4 ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x60 ] bl
call sub_403e50
lea ecx [ esp + 0x1c ]
mov [ esp + 0x60 ] 0xffffffff
call sub_403eb0
lea eax [ edi + 0xc ]
push eax
push ebp
call [ ??$?MDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
je r-xdata
cmp edi [ esi + 0x4 ]
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp esi ebx
jne r-xdata
lea eax [ edi + 0x28 ]
mov ecx [ esp + 0x58 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
sub_410270
push ebp
lea ebp [ esp - 0x6c ]
sub esp 0x6c
push 0xffffffff
push sub_4141da
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp + 0x68 ] eax
push ebx
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx [ ebp + 0x74 ]
mov esi [ ebp + 0x78 ]
mov eax [ ebx + 0x10 ]
xor edi edi
cmp esi edi
mov [ ebp + 0x30 ] esi
mov [ ebp + 0x3c ] eax
je r-xdata
mov [ ebp + 0x34 ] edi
lea ecx [ esi + 0x8 ]
mov [ ebp + 0x34 ] ecx
jmp r-xdata
mov eax [ ebp + 0x28 ]
mov edx [ eax ]
push eax
lea ecx [ ebp + 0x24 ]
push ecx
mov edi ecx
push edx
push edi
lea ecx [ esi + 0x14 ]
call sub_40fc20
mov ecx [ ebp + 0x3c ]
call sub_410b30
mov esi eax
xor edi edi
mov ecx esi
mov [ ebp + 0x30 ] esi
mov [ ebp + 0x40 ] edi
call sub_40e4c0
test eax eax
jbe r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
lea ecx [ ebp + 0x24 ]
call sub_40e6a0
mov [ ebp + 0x28 ] eax
mov [ eax + 0x29 ] 0x1
mov eax [ ebp + 0x28 ]
mov [ eax + 0x4 ] eax
mov eax [ ebp + 0x28 ]
mov [ eax ] eax
mov eax [ ebp + 0x28 ]
mov [ eax + 0x8 ] eax
mov [ ebp + 0x2c ] edi
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x28 ]
mov edx [ eax ]
push eax
lea ecx [ ebp + 0x24 ]
push ecx
push edx
mov esi ecx
push esi
lea eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0xffffffff
call sub_402c60
mov ecx [ ebp + 0x28 ]
push ecx
call ??3@YAXPAX@Z
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ ebp + 0x68 ]
xor ecx ebp
call sub_40808e
add ebp 0x6c
mov esp ebp
pop ebp
retn
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
cmp edi eax
jb r-xdata
mov esi [ ebp + 0x30 ]
add edi 0x1
jmp r-xdata
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
mov esi edi
shl esi 0x4
add esi edi
add esi esi
add esi esi
cmp [ esi + eax + 0x14 ] 0x0
lea ecx [ esi + eax ]
mov [ ebp + 0x48 ] ecx
je r-xdata
mov esi [ ebp + 0x34 ]
lea edx [ ebp + 0x4c ]
push edx
mov ecx esi
call sub_403180
test esi esi
mov [ ebp + 0xc ] eax
jne r-xdata
lea ecx [ ebp + 0x4c ]
mov [ ebp - 0x4 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + edi * 8 ]
push r--data
lea ecx [ ebp - 0x38 ]
mov [ ebp + 0x38 ] ebx
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0x7
call sub_410990
push eax
lea ecx [ ebp + 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] 0x9
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
cmp [ ebp + 0x60 ] 0x0
jne r-xdata
mov ecx ebx
mov [ ebp + 0x40 ] edi
call sub_4040d0
cmp edi eax
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp edi eax
jb r-xdata
lea eax [ ebp + 0x4c ]
push eax
mov ecx esi
call sub_403130
test esi esi
mov edi eax
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
add edi 0x1
mov ecx esi
mov [ ebp + 0x40 ] edi
call sub_40e4c0
cmp edi eax
jb r-xdata
mov eax [ ebp + 0x48 ]
mov ecx [ ebp + 0x30 ]
push eax
add ecx 0x14
call sub_40fb20
test eax eax
jne r-xdata
mov edx [ ebx + 0x4 ]
cmp [ esi + edx + 0x40 ] 0x0
jne r-xdata
mov ecx [ ebp + 0x38 ]
mov eax [ ebp + 0xc ]
push ecx
lea edx [ ebp + 0x3c ]
push edx
push eax
push esi
push edi
push esi
mov [ ebp + 0x3c ] 0x0
call sub_4046e0
add esp 0x18
cmp [ ebp + 0x3c ] 0x0
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov edi [ ebp + 0x48 ]
mov ecx [ ebp + 0x3c ]
push eax
push edi
call sub_412740
mov ecx [ ebp + 0x34 ]
push edi
mov [ ebp + 0x20 ] eax
call sub_410190
mov edi eax
cmp [ edi + 0x4 ] 0x0
je r-xdata
lea ecx [ ebp + 0x4c ]
mov [ ebp - 0x4 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov esi [ ebp + 0x30 ]
mov edi [ ebp + 0x40 ]
mov [ ebp + 0x48 ] 0x0
lea ecx [ ebp ]
push ecx
mov ecx ebx
mov [ ebp - 0x4 ] 0xa
call sub_411150
mov ecx [ eax ]
mov edx [ ecx ]
mov edx [ edx + 0x14 ]
lea eax [ ebp + 0x48 ]
push eax
mov [ ebp - 0x4 ] 0xb
call edx
mov bl al
mov eax [ ebp + 0x4 ]
test eax eax
mov [ ebp - 0x4 ] 0xa
je r-xdata
mov ecx [ ebp + 0x20 ]
lea edx [ ebp - 0x18 ]
push edx
mov [ ebp - 0x4 ] 0x2
call sub_411150
mov eax [ eax ]
mov [ ebp + 0x38 ] eax
mov eax [ ebx + 0x4 ]
test eax eax
mov [ ebp - 0x4 ] 0x3
je r-xdata
xor eax eax
mov [ ebp + 0x58 ] eax
mov [ ebp + 0x5c ] al
mov [ ebp + 0x60 ] eax
mov [ ebp + 0x64 ] eax
lea ecx [ ebp + 0x58 ]
push ecx
mov ecx edi
mov [ ebp - 0x4 ] 0x1
call sub_40f7a0
lea ecx [ ebp + 0x58 ]
mov [ ebp - 0x4 ] 0x0
call sub_403eb0
test bl bl
je r-xdata
mov edi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ ebx + 0x8 ]
sub ecx eax
mov eax 0x78787879
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add eax edx
cmp [ ebp + 0x40 ] eax
jb r-xdata
mov ecx [ ebp + 0x48 ]
test ecx ecx
mov [ ebp - 0x4 ] 0x9
je r-xdata
mov ecx [ ebp + 0x48 ]
xor edi edi
cmp ecx edi
je r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ ebp + 0x20 ]
lea eax [ ebp ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x0
call sub_411150
mov ecx [ eax ]
add eax 0x4
mov [ edi + 0x8 ] ecx
push eax
lea ecx [ edi + 0xc ]
mov [ ebp - 0x4 ] 0x5
call sub_40f660
mov eax [ ebp + 0x4 ]
test eax eax
mov [ ebp - 0x4 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ ebp + 0x7c ]
mov ecx [ ebp + 0x38 ]
mov edx [ ecx ]
mov edx [ edx + 0x10 ]
push eax
mov eax [ ebx + 0x4 ]
lea eax [ esi + eax + 0x20 ]
push eax
push edi
call edx
mov esi [ ebp - 0x14 ]
test esi esi
mov [ ebp - 0x4 ] 0x2
je r-xdata
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
mov [ ebp + 0x10 ] edi
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
call edx
mov [ ebp + 0x10 ] eax
jmp r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx esi
call sub_411150
mov ecx [ eax ]
mov edx [ ecx ]
mov eax [ edx + 0xc ]
mov [ ebp - 0x4 ] 0x6
call eax
test al al
mov eax [ ebp + 0xc ]
sete [ ebp + 0x47 ]
test eax eax
mov [ ebp - 0x4 ] 0x0
je r-xdata
mov edi eax
add eax 0x4
or edx 0xffffffff
[ eax ] edx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
xor eax eax
mov edx [ ecx ]
mov eax [ edx + 0x8 ]
call eax
jmp r-xdata
mov [ ebp + 0x14 ] 0x1
mov [ ebp + 0x18 ] edi
mov [ ebp + 0x1c ] edi
lea eax [ ebp + 0x4c ]
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0xc
call sub_410190
mov ecx [ ebp + 0x10 ]
test ecx ecx
mov esi eax
je r-xdata
cmp [ ebp + 0x47 ] 0x0
je r-xdata
mov esi eax
add eax 0x4
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x4 ]
mov ecx edi
call edx
lea eax [ edi + 0x8 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov cl [ ebp + 0x14 ]
mov [ esi + 0x4 ] cl
mov edx [ ebp + 0x18 ]
mov [ esi + 0x8 ] edx
mov eax [ ebp + 0x1c ]
cmp eax [ esi + 0xc ]
mov ebx eax
je r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
mov ecx [ esi ]
test ecx ecx
mov [ esi ] eax
je r-xdata
mov edi [ ebp + 0x40 ]
mov eax [ ebp + 0x48 ]
push eax
lea ecx [ ebp + 0x14 ]
push ecx
lea ecx [ ebp + 0x24 ]
call sub_40e910
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x8 ]
mov ecx edi
call eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0xa
call sub_403eb0
mov ecx [ ebp + 0x38 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_411150
mov edi eax
lea ecx [ ebp + 0x4c ]
push ecx
mov ecx [ ebp + 0x34 ]
mov [ ebp - 0x4 ] 0xd
call sub_410190
mov edx [ edi ]
mov esi eax
add esi 0x8
mov [ esi ] edx
mov edi [ edi + 0x4 ]
cmp edi [ esi + 0x4 ]
je r-xdata
test eax eax
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov esi [ ebp - 0x14 ]
test esi esi
mov [ ebp - 0x4 ] 0xa
je r-xdata
test edi edi
je r-xdata
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
add eax 0x4
mov ecx 0x1
[ eax ] ecx
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
lea eax [ edi + 0x4 ]
mov ecx 0x1
[ eax ] ecx
mov [ esi + 0xc ] ebx
lea edx [ edi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov [ esi + 0x4 ] edi
lea edx [ ebx + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
mov edx [ ebx ]
mov eax [ edx + 0x4 ]
mov ecx ebx
call eax
lea ecx [ ebx + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ ebx ]
mov edx [ eax + 0x8 ]
mov ecx ebx
call edx
sub_4108c0
push 0xffffffff
push sub_414213
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
xor ebp ebp
mov [ esi ] r--data
mov [ esi + 0x4 ] ebp
lea edi [ esi + 0x8 ]
mov ecx edi
mov [ esp + 0x1c ] ebp
call sub_40f7f0
mov [ edi + 0x4 ] eax
mov [ eax + 0x39 ] 0x1
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] ebp
lea edi [ esi + 0x14 ]
mov ecx edi
mov [ esp + 0x1c ] 0x1
mov [ esi ] r--data
call sub_40e6a0
mov [ edi + 0x4 ] eax
mov [ eax + 0x29 ] 0x1
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] ebp
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x10
retn
sub_410990
push ecx
cmp [ ecx + 0x34 ] 0x0
je r-xdata
lea eax [ ecx + 0x4 ]
pop ecx
retn 0x4
push esi
push 0x1
lea esi [ ecx + 0x20 ]
push 0x0
lea eax [ esp + 0xc ]
push eax
mov ecx esi
mov [ esp + 0x10 ] 0x2a
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
mov eax esi
pop esi
pop ecx
retn 0x4
mov eax [ esp + 0xc ]
pop esi
pop ecx
retn 0x4
sub_4109e0
push 0xffffffff
push sub_414254
mov eax [ fs : 0x0 ]
push eax
sub esp 0x5c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x58 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x78 ]
mov edi ecx
push eax
lea ecx [ esp + 0x4c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x54 ]
mov [ esp + 0x7c ] 0x0
mov [ esp + 0x18 ] 0x2c
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
mov esi eax
cmp esi [ ecx ]
je r-xdata
lea edx [ esp + 0x48 ]
push edx
lea ecx [ edi + 0x20 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
push esi
push 0x0
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ edi + 0x20 ]
mov [ esp + 0x74 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x70 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push 0x1
add esi 0x1
push esi
lea eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x54 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
push eax
lea ecx [ esp + 0x14 ]
push 0x2d
push ecx
mov [ esp + 0x7c ] 0x2
call [ ??$?HDU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA?AV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@DABV10@@Z@IAT ]
add esp 0xc
push eax
lea ecx [ edi + 0x4 ]
mov [ esp + 0x74 ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0x70 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esp + 0x2c ]
mov [ esp + 0x70 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
jmp r-xdata
lea ecx [ esp + 0x48 ]
mov [ esp + 0x70 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax edi
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x58 ]
xor ecx esp
call sub_40808e
add esp 0x68
retn 0x4
sub_410b40
push 0xffffffff
push sub_414289
mov eax [ fs : 0x0 ]
push eax
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x48 ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ esp + 0x8 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x24 ]
mov [ esp + 0x54 ] 0x0
call sub_401040
push r--data
lea ecx [ esp + 0x24 ]
push ecx
mov [ esp + 0x28 ] r--data
call _CxxThrowException
sub_410ba0
mov ecx [ esp + 0x4 ]
sub esp 0xc
test ecx ecx
ja r-xdata
or eax 0xffffffff
xor edx edx
div ecx
cmp eax 0x8
jae r-xdata
xor ecx ecx
lea edx [ ecx * 8 ]
push edx
call ??2@YAPAXI@Z
add esp 0x4
add esp 0xc
retn
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0x14 ] 0x0
call [ std::exception::exception@IAT ]
push r--data
lea ecx [ esp + 0x4 ]
push ecx
mov [ esp + 0x8 ] r--data
call _CxxThrowException
sub_410c50
push 0xffffffff
push sub_4142d4
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov [ esi ] r--data
mov edi [ esi + 0x5c ]
test edi edi
mov [ esp + 0x18 ] 0x2
je r-xdata
lea ecx [ esi + 0x3c ]
mov [ esp + 0x18 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x20 ]
mov [ esp + 0x18 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x4 ]
mov [ esp + 0x18 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
sub_410d00
push ebp
mov ebp [ _invalid_parameter_noinfo@IAT ]
push esi
mov esi [ ecx + 0x4 ]
cmp esi 0xfffffffe
push edi
mov edi [ ecx + 0x8 ]
je r-xdata
sub edi 0x1
cmp esi 0xfffffffe
je r-xdata
test esi esi
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn
test esi esi
jne r-xdata
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call ebp
cmp [ esi + 0x18 ] 0x10
jb r-xdata
call ebp
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
lea eax [ esi + 0x4 ]
mov eax [ esi + 0x4 ]
jmp r-xdata
call ebp
cmp edi eax
ja r-xdata
call ebp
mov ecx [ esi + 0x14 ]
add ecx eax
cmp edi ecx
jb r-xdata
sub_410d60
push ebp
mov ebp esp
push 0xffffffff
push sub_4142f0
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
call ??2@YAPAXI@Z
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_410df0
push ebp
mov ebp esp
push 0xffffffff
push sub_414310
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
push 0x10
mov [ esi ] 0x0
mov [ ebp - 0x4 ] 0x0
call ??2@YAPAXI@Z
add esp 0x4
test eax eax
je r-xdata
xor eax eax
mov ecx 0x1
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov [ eax + 0xc ] ecx
jmp r-xdata
mov [ esi ] eax
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_410e80
push edi
mov edi [ esp + 0x8 ]
cmp edi [ esp + 0xc ]
je r-xdata
pop edi
retn
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
add edi 0x8
cmp edi [ esp + 0x18 ]
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp ]
mov [ edi ] eax
mov ebx [ ebp + 0x4 ]
cmp ebx [ edi + 0x4 ]
je r-xdata
pop esi
pop ebp
pop ebx
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
lea ecx [ ebx + 0x4 ]
mov edx 0x1
[ ecx ] edx
mov [ edi + 0x4 ] ebx
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_410f30
push ebp
mov ebp [ esp + 0xc ]
cmp [ esp + 0x8 ] ebp
je r-xdata
mov eax [ esp + 0x10 ]
pop ebp
retn
push ebx
push esi
push edi
mov edi [ esp + 0x1c ]
cmp ebp [ esp + 0x14 ]
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
sub ebp 0x8
sub edi 0x8
mov [ edi ] eax
mov ebx [ ebp + 0x4 ]
cmp ebx [ edi + 0x4 ]
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
lea ecx [ ebx + 0x4 ]
mov edx 0x1
[ ecx ] edx
mov [ edi + 0x4 ] ebx
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_411010
push 0xffffffff
push sub_414339
mov eax [ fs : 0x0 ]
push eax
sub esp 0x2c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x40 ]
mov [ fs : 0x0 ] eax
mov ebp ecx
mov edi [ esp + 0x50 ]
xor ebx ebx
cmp [ ebp + 0x34 ] ebx
mov [ esp + 0x14 ] ebx
je r-xdata
push edi
add ebp 0x4
push ebp
call [ ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
mov eax 0x1
jne r-xdata
lea eax [ esp + 0x18 ]
lea esi [ ebp + 0x20 ]
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::rbegin@IAT ]
mov ecx eax
call sub_410d00
cmp [ eax ] 0x2a
jne r-xdata
mov ecx [ esp + 0x40 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x38
retn 0x8
mov eax [ esp + 0x14 ]
cmp [ esp + 0x54 ] 0x0
je r-xdata
mov eax [ ebp + 0x34 ]
add eax 0xffffffff
push eax
push ebx
lea ecx [ esp + 0x2c ]
push ecx
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::substr@IAT ]
cmp [ eax + 0x18 ] 0x10
mov ecx [ eax + 0x14 ]
mov [ esp + 0x48 ] ebx
jb r-xdata
push edi
push esi
call [ ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
test al al
je r-xdata
cmp [ edi + 0x18 ] 0x10
mov ecx [ edi + 0x14 ]
jb r-xdata
add eax 0x4
mov eax [ eax + 0x4 ]
jmp r-xdata
mov [ esp + 0x14 ] 0x1
lea eax [ edi + 0x4 ]
mov eax [ edi + 0x4 ]
jmp r-xdata
mov [ esp + 0x14 ] 0x2
push ecx
push ebx
push eax
mov ecx edi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
test eax eax
lea ecx [ esp + 0x24 ]
sete bl
mov [ esp + 0x48 ] 0xffffffff
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
test bl bl
je r-xdata
push edi
push esi
call [ ??$?8DU?$char_traits@D@std@@V?$allocator@D@1@@std@@YA_NABV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@0@0@Z@IAT ]
add esp 0x8
neg al
sbb eax eax
add eax 0x2
mov [ esp + 0x14 ] eax
jmp r-xdata
push ecx
push 0x0
push eax
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
test eax eax
jne r-xdata
sub_411150
push ecx
mov edx [ ecx + 0x58 ]
mov eax [ esp + 0x8 ]
mov [ eax ] edx
mov ecx [ ecx + 0x5c ]
test ecx ecx
mov [ esp ] 0x0
mov [ eax + 0x4 ] ecx
je r-xdata
pop ecx
retn 0x4
add ecx 0x4
mov edx 0x1
[ ecx ] edx
sub_411180
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
cmp eax ecx
je r-xdata
retn
push esi
mov esi [ esp + 0x10 ]
mov dl [ esi ]
mov [ eax ] dl
add eax 0x1
cmp eax ecx
jne r-xdata
pop esi
sub_4111a0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
sub eax ecx
sub esi eax
test eax eax
jle r-xdata
mov eax esi
pop esi
retn
push eax
push ecx
push eax
push esi
call [ memmove_s@IAT ]
add esp 0x10
sub_4111d0
push 0xffffffff
push sub_41438f
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
lea ecx [ esi + 0x4 ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
lea ecx [ esi + 0x20 ]
mov [ esp + 0x1c ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ esp + 0x2c ]
push eax
lea ecx [ esi + 0x3c ]
mov [ esp + 0x20 ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edi [ esp + 0x28 ]
lea ebx [ esi + 0x5c ]
push edi
mov ecx ebx
mov [ esp + 0x20 ] 0x2
mov [ esi + 0x58 ] edi
call sub_410d60
push edi
push edi
push ebx
call sub_40e430
add esp 0xc
mov ecx [ esp + 0x24 ]
push ecx
mov ecx esi
mov [ esp + 0x20 ] 0x3
call sub_4109e0
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0xc
sub_411280
mov ecx [ esp + 0x4 ]
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
cmp ecx esi
je r-xdata
pop esi
retn
push edi
add ecx 0x8
add eax 0x8
cmp ecx esi
jne r-xdata
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x4 ]
test edx edx
mov [ eax + 0x4 ] edx
je r-xdata
test eax eax
je r-xdata
pop edi
add edx 0x4
mov edi 0x1
[ edx ] edi
sub_4112c0
sub esp 0x8
mov edx [ esp + 0x14 ]
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x18 ]
push edi
mov edi [ esp + 0x20 ]
xor al al
mov [ esp + 0x10 ] al
mov ecx [ esp + 0x10 ]
mov [ esp + 0xc ] al
mov eax [ esp + 0xc ]
push eax
push ecx
push edx
push edi
push esi
push ebx
call sub_410f30
sub esi ebx
sar esi 0x3
add esi esi
add esp 0x18
add esi esi
add esi esi
mov eax edi
pop edi
sub eax esi
pop esi
pop ebx
add esp 0x8
retn
sub_411310
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0xc ]
sub eax ecx
push esi
lea esi [ eax + edx ]
je r-xdata
mov eax esi
pop esi
retn 0xc
push eax
push ecx
push eax
push edx
call [ memmove_s@IAT ]
add esp 0x10
sub_411340
mov edx [ esp + 0x8 ]
test edx edx
jbe r-xdata
retn
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0x10 ]
push edi
sub edx 0x1
add eax 0x8
test edx edx
ja r-xdata
mov ecx [ esi ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
test ecx ecx
mov [ eax + 0x4 ] ecx
je r-xdata
test eax eax
je r-xdata
pop edi
pop esi
add ecx 0x4
mov edi 0x1
[ ecx ] edi
sub_411380
push ebp
mov ebp [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
test edi edi
mov eax edi
mov ecx ebp
jbe r-xdata
lea eax [ edi + ebp ]
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esp + 0x18 ]
mov dl [ esi ]
mov [ ecx ] dl
sub eax 0x1
add ecx 0x1
test eax eax
ja r-xdata
pop esi
sub_4113b0
push ebp
mov ebp esp
push 0xffffffff
push sub_4143b0
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ ebp + 0x14 ]
mov cl [ eax ]
mov eax [ esi + 0x4 ]
test eax eax
mov [ ebp + 0x17 ] cl
jne r-xdata
mov ecx [ esi + 0xc ]
sub ecx eax
mov edx ecx
xor edx edx
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
test eax eax
jne r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
test eax eax
jne r-xdata
call sub_410b40
or edi 0xffffffff
sub edi ecx
cmp edi ebx
jae r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov edx eax
sub edx edi
cmp edx ebx
mov [ ebp + 0x10 ] eax
jae r-xdata
mov ecx edx
shr ecx 0x1
or edi 0xffffffff
sub edi ecx
cmp edi edx
jae r-xdata
add ecx ebx
cmp edx ecx
jae r-xdata
push eax
mov ecx eax
sub ecx ebx
push eax
mov [ ebp + 0xc ] ecx
push ecx
mov ecx esi
call sub_411310
mov ecx [ ebp + 0xc ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edi
call sub_4111a0
lea edx [ ebp + 0x17 ]
push edx
lea eax [ edi + ebx ]
push eax
push edi
call sub_411180
add esp 0x18
lea ecx [ edi + ebx ]
push ecx
push eax
push edi
mov ecx esi
call sub_411310
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
lea edx [ ebp + 0x17 ]
push edx
add ecx ebx
push ecx
push eax
mov ecx esi
call sub_411380
add [ esi + 0x8 ] ebx
mov esi [ esi + 0x8 ]
lea edx [ ebp + 0x17 ]
push edx
sub esi ebx
push esi
push edi
call sub_411180
add esp 0xc
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
add edx ecx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x14 ]
jmp r-xdata
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
test eax eax
jne r-xdata
push edx
mov ecx esi
call [ std::allocator<char>::allocate@IAT ]
mov edi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
mov edx eax
mov eax edi
sub eax ecx
mov [ ebp + 0x10 ] edx
lea edx [ eax + edx ]
mov [ ebp - 0x4 ] 0x0
mov [ ebp + 0xc ] edx
je r-xdata
test eax eax
jne r-xdata
add ecx ebx
cmp edx ecx
jae r-xdata
mov edx [ ebp + 0xc ]
lea ecx [ ebp + 0x17 ]
push ecx
push ebx
push edx
mov ecx esi
call sub_411380
mov ecx [ esi + 0x8 ]
sub ecx edi
je r-xdata
push eax
push ecx
push eax
mov eax [ ebp + 0x10 ]
push eax
call [ memmove_s@IAT ]
add esp 0x10
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
mov eax [ esi + 0x4 ]
test eax eax
mov [ ebp - 0x4 ] 0xffffffff
jne r-xdata
push ecx
push edi
push ecx
push eax
call [ memmove_s@IAT ]
add esp 0x10
add ecx ebx
mov [ ebp - 0x14 ] ecx
mov edx ecx
mov ecx [ esi + 0x8 ]
sub ecx eax
xor ecx ecx
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x14 ]
lea edx [ eax + ecx ]
lea ecx [ eax + ebx ]
mov [ esi + 0xc ] edx
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov edx [ esi + 0xc ]
sub edx eax
push edx
push eax
mov ecx esi
call [ std::allocator<char>::deallocate@IAT ]
add ebx ecx
test eax eax
je r-xdata
sub_4115f0
push ecx
mov edx [ esp + 0x10 ]
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x1c ]
push edx
push ecx
push eax
push esi
push edi
call sub_411340
add esp 0x18
lea eax [ edi + esi * 8 ]
pop edi
pop esi
pop ecx
retn 0xc
sub_411630
push ecx
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx eax
sub ecx edi
jne r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push edx
push 0x1
push eax
push ebp
mov ecx esi
call sub_4113b0
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
jbe r-xdata
cmp edi eax
jbe r-xdata
mov [ esp + 0x20 ] edi
add edi ebx
cmp edi [ esi + 0x8 ]
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test ebp ebp
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi [ esi + 0x4 ]
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebp esi
je r-xdata
mov eax [ esp + 0x18 ]
mov [ eax + 0x4 ] edi
pop edi
mov [ eax ] esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ebx [ esp + 0x20 ]
sub ebx edi
sub_4116c0
sub esp 0x8
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
mov edx [ esi + 0x8 ]
sub edx eax
xor edx edx
jmp r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp eax edi
jbe r-xdata
mov ecx [ esi + 0xc ]
sub ecx eax
cmp edx ecx
jae r-xdata
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
push eax
push edi
push esi
lea ecx [ esp + 0x14 ]
push ecx
mov ecx esi
call sub_411630
pop edi
pop esi
add esp 0x8
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x8 ]
mov ecx [ esp + 0x10 ]
mov dl [ ecx ]
mov [ eax ] dl
add eax 0x1
mov [ esi + 0x8 ] eax
pop esi
add esp 0x8
retn 0x4
sub_411730
push ecx
mov edx [ esp + 0x10 ]
mov [ esp ] 0x0
mov eax [ esp ]
push eax
mov eax [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
mov ecx [ esp + 0x18 ]
push eax
push ecx
push edx
call sub_411280
add esp 0x1c
retn 0xc
sub_411760
push 0xffffffff
push sub_4143d8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_401170
add edi 0x28
push edi
lea ecx [ esi + 0x28 ]
mov [ esp + 0x1c ] 0x0
mov [ esi ] r--data
call sub_402380
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
sub_4117d0
push 0xffffffff
push sub_414411
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x28 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
push r--data
lea ecx [ esp + 0x10 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x38 ]
push ecx
mov ecx eax
mov [ esp + 0x34 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
push eax
mov ecx esi
call sub_401040
mov [ esi ] r--data
lea ecx [ esp + 0xc ]
mov [ esp + 0x30 ] 0x2
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov edx [ esp + 0x3c ]
push edx
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
call sub_402380
mov eax esi
mov ecx [ esp + 0x28 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x2c
retn 0x8
sub_4118a0
push esi
mov esi ecx
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
call sub_402490
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4118e0
push ebp
mov ebp esp
push 0xffffffff
push sub_414438
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x18 ] esi
mov eax [ ebp + 0x14 ]
mov edi [ eax + 0x4 ]
mov ecx [ eax ]
xor eax eax
cmp edi eax
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] edi
je r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx eax
mov [ ebp - 0x4 ] eax
jne r-xdata
lea edx [ edi + 0x4 ]
mov ecx 0x1
[ edx ] ecx
mov ebx [ esi + 0xc ]
sub ebx ecx
sar ebx 0x3
xor ebx ebx
jmp r-xdata
test edi edi
mov [ ebp - 0x4 ] 0xffffffff
je r-xdata
cmp ecx eax
je r-xdata
mov edx [ ebp + 0x10 ]
cmp edx eax
mov [ ebp + 0x14 ] ebx
je r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
lea eax [ edi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edi 0x1fffffff
sub edi eax
cmp edi edx
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
mov edx [ edi ]
mov eax [ edx + 0x4 ]
mov ecx edi
call eax
lea ecx [ edi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
test ecx ecx
jne r-xdata
call sub_410b40
mov eax [ edi ]
mov edx [ eax + 0x8 ]
mov ecx edi
call edx
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov ecx ebx
sub ecx edi
sar ecx 0x3
cmp ecx edx
jae r-xdata
mov eax ebx
shr eax 0x1
mov edi 0x1fffffff
sub edi eax
cmp edi [ ebp + 0x14 ]
jae r-xdata
add eax edx
cmp ebx eax
jae r-xdata
lea ecx [ edx * 8 ]
push ebx
mov eax ebx
sub eax ecx
push ebx
mov [ ebp + 0x14 ] ecx
push eax
mov ecx esi
mov [ ebp + 0x10 ] eax
call sub_411730
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push eax
push edi
call sub_4112c0
mov ecx [ ebp + 0x14 ]
lea edx [ ebp - 0x28 ]
push edx
lea eax [ ecx + edi ]
push eax
push edi
call sub_410e80
add esp 0x18
lea eax [ edx * 8 ]
mov [ ebp + 0x14 ] eax
add eax edi
push eax
push ebx
push edi
mov ecx esi
call sub_411730
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x28 ]
push edx
mov edx eax
sub edx edi
sar edx 0x3
sub ecx edx
push ecx
push eax
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call sub_4115f0
mov eax [ ebp + 0x14 ]
add [ esi + 0x8 ] eax
mov esi [ esi + 0x8 ]
sub esi eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push edi
mov [ ebp - 0x4 ] 0x0
call sub_410e80
add esp 0xc
jmp r-xdata
add [ ebp + 0x14 ] eax
mov [ ebp + 0x14 ] 0x0
jmp r-xdata
mov edi [ ebp - 0x24 ]
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
test ecx ecx
jne r-xdata
mov edx [ ebp + 0x14 ]
push 0x0
push edx
call sub_410ba0
mov edx [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x0
mov ecx [ ebp - 0x1c ]
push ecx
push edx
mov edi eax
mov eax [ esi + 0x4 ]
push esi
push edi
push ebx
push eax
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] 0x1
call sub_411280
mov edx [ ebp + 0x10 ]
add esp 0x20
lea ecx [ ebp - 0x28 ]
push ecx
push edx
push eax
mov ecx esi
mov [ ebp - 0x14 ] eax
call sub_4115f0
mov ecx [ esi + 0x8 ]
mov [ ebp + 0xc ] 0x0
mov edx [ ebp + 0xc ]
push edx
mov edx [ ebp + 0x10 ]
push edx
push esi
push eax
push ecx
push ebx
mov [ ebp - 0x14 ] eax
call sub_411280
mov ecx [ esi + 0x4 ]
add esp 0x18
test ecx ecx
mov [ ebp - 0x4 ] 0x0
jne r-xdata
test ecx ecx
jne r-xdata
add eax edx
cmp [ ebp + 0x14 ] eax
jae r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax ecx
sar eax 0x3
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
lea ecx [ edi + eax * 8 ]
lea edx [ edi + ebx * 8 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x8 ] edx
mov [ esi + 0x4 ] edi
jmp r-xdata
mov edx [ ebp + 0x10 ]
mov eax [ esi + 0x8 ]
push edx
push esi
push eax
push ecx
call sub_404780
mov eax [ esi + 0x4 ]
push eax
call ??3@YAXPAX@Z
add esp 0x14
mov ebx [ ebp + 0x10 ]
add ebx eax
test ecx ecx
je r-xdata
add eax edx
mov [ ebp + 0x14 ] eax
sub_411b18
mov eax [ ebp + 0x10 ]
mov ecx [ ebp - 0x18 ]
mov edx [ ecx + 0x8 ]
add eax eax
add eax eax
add eax eax
add edx eax
push edx
mov edx [ ebp + 0xc ]
add eax edx
push eax
call sub_402ac0
push 0x0
push 0x0
call _CxxThrowException
sub_411bd0
push 0xffffffff
push sub_414468
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
mov edi [ esp + 0x20 ]
push edi
call sub_411760
test edi edi
mov [ esp + 0x18 ] 0x0
je r-xdata
xor edi edi
add edi 0x38
jmp r-xdata
mov eax [ edi + 0x8 ]
mov [ esi + 0x40 ] eax
mov ecx [ edi + 0xc ]
mov [ esi + 0x44 ] ecx
mov edx [ edi + 0x10 ]
mov [ esi + 0x48 ] edx
mov [ esi ] r--data
mov [ esi + 0x38 ] r--data
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
mov [ esi + 0x38 ] r--data
mov ecx [ edi + 0x4 ]
test ecx ecx
mov [ esi + 0x3c ] ecx
je r-xdata
sub_411c80
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x38 ] r--data
mov ecx [ esi + 0x3c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
call sub_402490
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_411cd0
push esi
mov esi ecx
mov [ esi + 0x4c ] r--data
mov [ esi + 0x4c ] r--data
mov [ esi ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x38 ] r--data
mov ecx [ esi + 0x3c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
call sub_402490
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_411d40
push 0xffffffff
push sub_4144a3
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x10 ] esi
mov edi [ esp + 0x24 ]
push edi
call sub_411bd0
mov [ esp + 0x1c ] 0x0
mov [ esi + 0x4c ] r--data
test edi edi
mov [ esp + 0x1c ] 0x1
mov [ esi ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x4c ] r--data
je r-xdata
xor ebx ebx
lea ebx [ edi + 0x38 ]
jmp r-xdata
test edi edi
mov [ esi + 0x3c ] edi
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov ecx [ esi + 0x3c ]
test ecx ecx
mov edi [ ebx + 0x4 ]
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x40 ] eax
mov ecx [ ebx + 0xc ]
mov [ esi + 0x44 ] ecx
mov edx [ ebx + 0x10 ]
mov [ esi + 0x48 ] edx
mov eax esi
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn 0x4
mov eax [ edi ]
mov edx [ eax + 0xc ]
mov ecx edi
call edx
sub_411e10
push 0xffffffff
push sub_4144df
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov eax [ esp + 0x1c ]
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x20 ]
xor eax eax
mov [ esi + 0x1c ] ecx
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x8
sub_411e80
push ecx
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esi + 0x8 ]
mov ecx eax
sub ecx edi
sar ecx 0x3
jne r-xdata
mov edx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
push edx
push 0x1
push eax
push ebp
mov ecx esi
call sub_4118e0
mov edi [ esi + 0x4 ]
cmp edi [ esi + 0x8 ]
jbe r-xdata
cmp edi eax
jbe r-xdata
mov [ esp + 0x20 ] edi
lea edi [ edi + ebx * 8 ]
cmp edi [ esi + 0x8 ]
ja r-xdata
call [ _invalid_parameter_noinfo@IAT ]
test ebp ebp
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
call [ _invalid_parameter_noinfo@IAT ]
cmp edi [ esi + 0x4 ]
jae r-xdata
call [ _invalid_parameter_noinfo@IAT ]
cmp ebp esi
je r-xdata
mov eax [ esp + 0x18 ]
mov [ eax + 0x4 ] edi
pop edi
mov [ eax ] esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x10
mov ebx [ esp + 0x20 ]
sub ebx edi
sar ebx 0x3
sub_411f60
push esi
mov esi ecx
mov [ esi ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x38 ] r--data
mov ecx [ esi + 0x3c ]
test ecx ecx
je r-xdata
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
call sub_402490
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_411fc0
push 0xffffffff
push sub_414d2b
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x50
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0xc ] esi
xor eax eax
cmp esi eax
mov [ esp + 0x18 ] eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
lea eax [ edi - 0x4c ]
push eax
mov ecx esi
call sub_411bd0
lea eax [ esi + 0x4c ]
mov [ eax ] r--data
mov [ esi ] r--data
mov [ esi + 0x38 ] r--data
mov [ eax ] r--data
sub_412080
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push edi
xor edi edi
push eax
mov ecx esi
mov [ esp + 0xc ] edi
call sub_411760
mov [ esi + 0x38 ] r--data
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] 0xffffffff
pop edi
mov [ esi ] r--data
mov [ esi + 0x38 ] r--data
mov eax esi
pop esi
pop ecx
retn
sub_4120f0
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x4 ]
test edx edx
push edi
jne r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
sar ecx 0x3
xor ecx ecx
jmp r-xdata
mov edi [ esi + 0x8 ]
cmp edx edi
jbe r-xdata
mov eax [ esi + 0xc ]
sub eax edx
sar eax 0x3
cmp ecx eax
jae r-xdata
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
push eax
push edi
push esi
lea ecx [ esp + 0x14 ]
push ecx
mov ecx esi
call sub_411e80
pop edi
pop esi
add esp 0x8
retn 0x4
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x14 ]
mov edi [ esi + 0x8 ]
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x8 ]
push eax
push ecx
push esi
push edx
push 0x1
push edi
call sub_411340
add esp 0x18
add edi 0x8
mov [ esi + 0x8 ] edi
pop edi
pop esi
add esp 0x8
retn 0x4
sub_412180
push 0xffffffff
push sub_414508
mov eax [ fs : 0x0 ]
push eax
sub esp 0x9c
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xa0 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0xb0 ]
push eax
lea ecx [ esp + 0x58 ]
push ecx
call sub_412080
push eax
lea edx [ esp + 0x10 ]
push edx
mov [ esp + 0xb8 ] 0x0
call sub_4120d0
add esp 0x10
push r--data
lea eax [ esp + 0x8 ]
push eax
call _CxxThrowException
sub_4121f0
push 0xffffffff
push sub_414538
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esi + 0x20 ]
mov [ esp + 0x18 ] 0x0
call sub_4120f0
lea ecx [ esp + 0xb ]
push ecx
lea ecx [ esi + 0x30 ]
mov [ esp + 0xf ] 0x0
call sub_4116c0
mov esi [ esp + 0x20 ]
test esi esi
mov [ esp + 0x14 ] 0xffffffff
je r-xdata
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x8
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
sub_412290
push 0xffffffff
push sub_414578
mov eax [ fs : 0x0 ]
push eax
sub esp 0x54
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x68 ]
mov [ fs : 0x0 ] eax
mov esi ecx
xor ebx ebx
mov [ esp + 0x18 ] ebx
mov [ esp + 0x1c ] ebx
mov [ esp + 0x70 ] ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x70 ] 0x1
xor ebp ebp
lea ebx [ ebx ]
mov esi [ esp + 0x24 ]
cmp esi ebx
mov edi [ esp + 0x28 ]
je r-xdata
mov eax [ esi + 0x28 ]
sub eax ecx
sar eax 0x3
cmp ebp eax
jae r-xdata
cmp esi ebx
mov [ esp + 0x70 ] bl
je r-xdata
mov ecx edi
sub ecx esi
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp eax 0x1
jbe r-xdata
cmp ecx ebx
je r-xdata
mov esi [ esp + 0x1c ]
cmp esi ebx
mov [ esp + 0x24 ] ebx
mov [ esp + 0x28 ] ebx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x70 ] 0xffffffff
je r-xdata
cmp esi edi
je r-xdata
mov ecx [ esp + 0x78 ]
lea eax [ esp + 0x20 ]
push eax
push ecx
lea ecx [ esp + 0x38 ]
call sub_4117d0
push eax
mov [ esp + 0x74 ] 0x2
call sub_412180
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x28 ]
sub eax ecx
sar eax 0x3
cmp ebp eax
jb r-xdata
mov eax [ esp + 0x18 ]
lea edx [ esi + 0x4 ]
or eax 0xffffffff
[ edx ] eax
jne r-xdata
push esi
call ??3@YAXPAX@Z
add esp 0x4
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
add ebp 0x1
jmp r-xdata
cmp eax 0x1
mov ecx [ esi + 0x24 ]
je r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ esp + 0x7c ]
mov edx [ esp + 0x78 ]
lea edi [ ebp * 8 ]
add eax edi
mov eax [ eax ]
push ecx
push edx
mov ecx eax
call sub_411010
cmp eax ebx
je r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
mov esi [ esp + 0x24 ]
mov ecx [ esi + 0x24 ]
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
cmp ecx ebx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x28 ]
sub eax ecx
sar eax 0x3
cmp ebp eax
jb r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x28 ]
sub eax ecx
sar eax 0x3
cmp ebp eax
jb r-xdata
mov eax ebp
jmp r-xdata
lea eax [ esi + 0x4 ]
or ecx 0xffffffff
[ eax ] ecx
jne r-xdata
mov edx [ esi + 0x24 ]
mov ebp [ edx + ebp * 8 ]
lea ecx [ esp + 0x20 ]
mov [ esp + 0x70 ] bl
call sub_402490
mov esi [ esp + 0x1c ]
cmp esi ebx
mov [ esp + 0x70 ] 0xffffffff
je r-xdata
call [ _invalid_parameter_noinfo@IAT ]
mov eax [ esi + 0x28 ]
sub eax ecx
sar eax 0x3
cmp ebp eax
jb r-xdata
mov eax [ esi + 0x24 ]
mov ecx [ eax + edi ]
add eax edi
add eax 0x4
mov [ esp + 0x18 ] ecx
push eax
lea ecx [ esp + 0x20 ]
call sub_40f660
mov ecx [ esi + 0x24 ]
cmp ecx ebx
je r-xdata
mov ecx [ esp + 0x68 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x60
retn 0x8
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
or edx 0xffffffff
[ ecx ] edx
jne r-xdata
add edi 0x4
push 0x1
push ebx
lea eax [ esp + 0x1c ]
add edi 0x20
push eax
mov ecx edi
mov [ esp + 0x20 ] 0x2a
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::find@IAT ]
mov ecx [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::npos@IAT ]
cmp eax [ ecx ]
je r-xdata
mov edx [ esi + 0x24 ]
mov edi [ edi + edx ]
cmp [ edi + 0x34 ] ebx
je r-xdata
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov ecx esi
call edx
push edi
lea ecx [ esp + 0x24 ]
call sub_404950
mov edi [ esp + 0x78 ]
push edi
lea ecx [ esp + 0x24 ]
call sub_404950
add ebp 0x1
jmp r-xdata
sub_412520
push 0xffffffff
push sub_4145b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov ebp ecx
push 0x60
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
mov [ esp + 0x14 ] esi
test esi esi
mov [ esp + 0x24 ] 0x0
mov ebx 0x1
je r-xdata
xor esi esi
push 0x8
call operator new
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp ]
call sub_4121f0
test esi esi
mov [ esp + 0x24 ] edi
je r-xdata
lea edx [ esi + 0x4 ]
[ edx ] ebx
xor eax eax
mov [ eax ] r--data
mov [ eax + 0x4 ] bl
jmp r-xdata
mov eax ebp
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x8
lea eax [ esi + 0x4 ]
mov ecx edi
[ eax ] ecx
jne r-xdata
or edi 0xffffffff
push esi
lea ecx [ esp + 0x1c ]
mov [ esp + 0x28 ] edi
mov [ esp + 0x18 ] esi
call sub_410df0
push esi
lea eax [ esp + 0x1c ]
push esi
push eax
call sub_40e430
mov esi [ esp + 0x24 ]
mov ecx [ esp + 0x20 ]
add esp 0x4
test esi esi
mov eax esp
mov [ eax ] ecx
mov [ esp + 0x2c ] ebx
mov [ esp + 0x38 ] esp
mov [ eax + 0x4 ] esi
je r-xdata
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
push ecx
push eax
push edx
mov ecx esi
call sub_4111d0
mov esi eax
jmp r-xdata
mov edx [ esi ]
mov eax [ edx + 0x4 ]
mov ecx esi
call eax
lea ecx [ esi + 0x8 ]
[ ecx ] edi
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
sub_412640
push 0xffffffff
push sub_4145e3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x60
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x10 ] eax
test eax eax
mov [ esp + 0x20 ] 0x0
je r-xdata
xor esi esi
mov ecx [ esp + 0x30 ]
mov edx [ esp + 0x2c ]
push ecx
mov ecx [ esp + 0x2c ]
push edx
push ecx
mov ecx eax
call sub_4111d0
mov esi eax
jmp r-xdata
mov ecx [ edi ]
call sub_4121f0
test esi esi
mov [ esp + 0x20 ] ebx
je r-xdata
lea edx [ esi + 0x4 ]
mov eax 0x1
[ edx ] eax
or ebx 0xffffffff
push esi
lea ecx [ esp + 0x18 ]
mov [ esp + 0x24 ] ebx
mov [ esp + 0x14 ] esi
call sub_410df0
push esi
lea edx [ esp + 0x18 ]
push esi
push edx
call sub_40e430
mov esi [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
add esp 0x4
test esi esi
mov eax esp
mov [ eax ] ecx
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x38 ] esp
mov [ eax + 0x4 ] esi
je r-xdata
mov eax edi
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x14
retn 0xc
lea ecx [ esi + 0x4 ]
mov edx ebx
[ ecx ] edx
jne r-xdata
mov eax [ esi ]
mov edx [ eax + 0x4 ]
mov ecx esi
call edx
lea eax [ esi + 0x8 ]
[ eax ] ebx
jne r-xdata
mov edx [ esi ]
mov eax [ edx + 0x8 ]
mov ecx esi
call eax
sub_412740
push 0xffffffff
push sub_414608
mov eax [ fs : 0x0 ]
push eax
sub esp 0x28
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x44 ]
mov esi [ esp + 0x40 ]
push eax
push esi
call sub_412290
test eax eax
jne r-xdata
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x34
retn 0x8
push esi
lea ecx [ esp + 0xc ]
call sub_40ab30
push eax
mov [ esp + 0x3c ] 0x0
call sub_40b820
sub_4127b0
push 0xffffffff
push sub_414652
mov eax [ fs : 0x0 ]
push eax
sub esp 0x38
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x34 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4c ]
mov [ fs : 0x0 ] eax
mov ebx [ esp + 0x5c ]
mov esi [ esp + 0x60 ]
xor ebp ebp
mov [ esp + 0x28 ] ebp
mov [ esp + 0x24 ] ebx
mov [ ebx + 0x4 ] ebp
mov [ ebx + 0x8 ] ebp
mov [ ebx + 0xc ] ebp
lea eax [ esp + 0x14 ]
push eax
mov ecx esi
mov [ esp + 0x58 ] ebp
mov [ esp + 0x2c ] 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::begin@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::end@IAT ]
mov esi [ _invalid_parameter_noinfo@IAT ]
mov eax [ esp + 0x14 ]
lea edi [ ebp + 0x10 ]
mov edx [ esp + 0x18 ]
cmp edx [ esp + 0x20 ]
je r-xdata
cmp eax ebp
je r-xdata
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xfffffffe
je r-xdata
call esi
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x1c ]
je r-xdata
mov eax [ esp + 0x20 ]
cmp [ esp + 0x18 ] eax
je r-xdata
cmp eax ebp
je r-xdata
mov ecx [ esp + 0x18 ]
movzx edx [ ecx ]
push edx
call [ isspace@IAT ]
add esp 0x4
test eax eax
mov eax [ esp + 0x14 ]
je r-xdata
cmp eax ebp
jne r-xdata
mov eax ebx
lea ecx [ esp + 0x2c ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ esp + 0x14 ]
xor bl bl
mov [ esp + 0x54 ] 0x1
xor edi edi
call esi
cmp eax [ esp + 0x1c ]
je r-xdata
cmp eax 0xfffffffe
je r-xdata
cmp [ eax + 0x18 ] edi
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x20 ]
cmp [ esp + 0x18 ] ecx
je r-xdata
cmp eax ebp
je r-xdata
add [ esp + 0x18 ] 0x1
jmp r-xdata
cmp eax ebp
jne r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
cmp edi ebp
je r-xdata
cmp eax 0xfffffffe
je r-xdata
call esi
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x1c ]
je r-xdata
cmp eax 0xfffffffe
je r-xdata
cmp [ eax + 0x18 ] edi
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
call esi
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esp + 0x18 ] eax
jb r-xdata
cmp [ esp + 0x40 ] ebp
jne r-xdata
push 0x5c
push edi
lea ecx [ esp + 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
mov ecx [ esp + 0x18 ]
cmp [ ecx ] 0x22
jne r-xdata
cmp eax ebp
jne r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x24 ]
lea eax [ esp + 0x2c ]
push eax
call sub_404950
test bl bl
je r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edx edi
and edx 0x80000001
jns r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
call esi
mov eax [ esp + 0x14 ]
mov edx [ eax + 0x14 ]
add edx ecx
cmp [ esp + 0x18 ] edx
jb r-xdata
mov ecx [ esp + 0x4c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x34 ]
xor ecx esp
call sub_40808e
add esp 0x44
retn
lea ecx [ esp + 0x2c ]
mov [ esp + 0x54 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax [ esp + 0x24 ]
jmp r-xdata
mov ecx [ esp + 0x18 ]
cmp [ ecx ] 0x5c
jne r-xdata
cmp eax ebp
jne r-xdata
mov eax edi
push 0x5c
lea ecx [ esp + 0x30 ]
cdq
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
cmp edi ebp
je r-xdata
add edi 0x1
jmp r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
sub eax edx
sar eax 0x1
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
push 0x22
lea ecx [ esp + 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
xor edi edi
jmp r-xdata
sub eax edx
sar eax 0x1
push eax
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
test bl bl
sete bl
xor edi edi
jmp r-xdata
call esi
mov eax [ esp + 0x14 ]
mov edx [ eax + 0x14 ]
add edx ecx
cmp [ esp + 0x18 ] edx
jb r-xdata
cmp eax 0xfffffffe
je r-xdata
push 0x5c
push edi
lea ecx [ esp + 0x34 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::append@IAT ]
mov eax [ esp + 0x14 ]
xor edi edi
cmp eax 0xfffffffe
je r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
mov eax [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
movzx ecx [ eax ]
push ecx
call [ isspace@IAT ]
add esp 0x4
test eax eax
je r-xdata
cmp eax ebp
jne r-xdata
add [ esp + 0x18 ] 0x1
jmp r-xdata
cmp eax ebp
jne r-xdata
call esi
mov eax [ esp + 0x14 ]
mov edx [ eax + 0x14 ]
add edx ecx
cmp [ esp + 0x18 ] edx
jb r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0xfffffffe
je r-xdata
test bl bl
jne r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
cmp eax 0xfffffffe
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
movzx edx [ ecx ]
push edx
lea ecx [ esp + 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator-=@IAT ]
cmp eax ebp
jne r-xdata
mov ecx [ esp + 0x24 ]
lea edx [ esp + 0x2c ]
push edx
call sub_404950
push ebp
lea ecx [ esp + 0x30 ]
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::resize@IAT ]
mov eax [ esp + 0x14 ]
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
cmp ecx [ esp + 0x20 ]
je r-xdata
cmp eax ebp
je r-xdata
call esi
mov edx [ eax + 0x14 ]
add edx ecx
cmp [ esp + 0x18 ] edx
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
mov edx [ eax + 0x14 ]
add edx ecx
cmp [ esp + 0x18 ] edx
jb r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
cmp eax 0xfffffffe
je r-xdata
cmp eax 0xfffffffe
je r-xdata
call esi
mov eax [ esp + 0x14 ]
cmp eax [ esp + 0x1c ]
je r-xdata
call esi
mov eax [ eax + 0x14 ]
add eax ecx
cmp [ esp + 0x18 ] eax
jb r-xdata
sub [ esp + 0x18 ] 0x1
jmp r-xdata
cmp eax ebp
jne r-xdata
mov eax [ esp + 0x18 ]
movzx ecx [ eax ]
push ecx
call [ isspace@IAT ]
add esp 0x4
test eax eax
mov eax [ esp + 0x14 ]
je r-xdata
cmp eax ebp
jne r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
cmp eax 0xfffffffe
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
add [ esp + 0x18 ] 0x1
jmp r-xdata
cmp eax ebp
jne r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call esi
mov eax [ esp + 0x14 ]
cmp [ esp + 0x18 ] ecx
ja r-xdata
cmp eax 0xfffffffe
je r-xdata
cmp [ eax + 0x18 ] 0x10
jb r-xdata
call esi
mov eax [ esp + 0x14 ]
call esi
mov edx [ eax + 0x14 ]
add edx ecx
cmp [ esp + 0x18 ] edx
jb r-xdata
lea ecx [ eax + 0x4 ]
mov ecx [ eax + 0x4 ]
jmp r-xdata
call esi
mov eax [ esp + 0x14 ]
mov edx [ eax + 0x14 ]
add edx ecx
cmp [ esp + 0x18 ] edx
jb r-xdata
sub_412c10
push 0xffffffff
push sub_4146b3
mov eax [ fs : 0x0 ]
push eax
sub esp 0x4c
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x60 ]
mov [ fs : 0x0 ] eax
xor esi esi
mov [ esp + 0x14 ] esi
mov ebp [ esp + 0x70 ]
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0xc ] esi
mov eax [ esp + 0x74 ]
push eax
lea ecx [ esp + 0x2c ]
mov edi 0x1
push ecx
mov [ esp + 0x70 ] esi
mov [ esp + 0x1c ] edi
call sub_40aa40
push eax
lea edx [ esp + 0x24 ]
push edx
mov [ esp + 0x78 ] edi
call sub_4127b0
add esp 0x10
lea ecx [ esp + 0x28 ]
mov [ esp + 0x68 ] 0x3
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx [ esp + 0x1c ]
cmp ecx esi
mov edi [ esp + 0x20 ]
je r-xdata
cmp ecx esi
mov [ esp + 0x68 ] 0x0
je r-xdata
mov ebx edi
sub ebx ecx
mov eax 0x92492493
imul ebx
add edx ebx
sar edx 0x4
mov ebx edx
shr ebx 0x1f
add ebx edx
je r-xdata
mov eax ebp
mov ecx [ esp + 0x60 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x58
retn
cmp ecx edi
mov esi ecx
je r-xdata
xor esi esi
xor ebp ebp
push ecx
call ??3@YAXPAX@Z
add esp 0x4
nop
call [ _invalid_parameter_noinfo@IAT ]
mov ecx [ esp + 0x1c ]
sub edi ecx
mov eax 0x92492493
imul edi
add edx edi
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jb r-xdata
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
je r-xdata
mov ebp [ esp + 0x70 ]
lea eax [ ecx + ebp ]
push eax
lea eax [ esp + 0x48 ]
push eax
call sub_40a8e0
add esp 0x8
mov ecx [ esp + 0x70 ]
push eax
mov [ esp + 0x6c ] 0x4
call sub_404ad0
lea ecx [ esp + 0x44 ]
mov [ esp + 0x68 ] 0x3
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
mov edi [ esp + 0x20 ]
mov ecx [ esp + 0x1c ]
add esi 0x1
add ebp 0x1c
cmp esi ebx
jb r-xdata
sub_412d70
sub esp 0x18
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x28 ]
mov ecx [ esp + 0x34 ]
push ebx
mov ebx [ esp + 0x28 ]
push ebp
mov ebp [ esp + 0x34 ]
mov [ esp + 0xc ] eax
mov eax [ esp + 0x28 ]
cmp eax ebx
push esi
push edi
mov [ esp + 0x10 ] ecx
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
xor ecx ecx
cmp eax ebx
setne cl
mov eax ecx
cmp ebp [ esp + 0x40 ]
je r-xdata
mov dl [ eax ]
cmp dl 0x7f
jbe r-xdata
cmp dl 0xfd
ja r-xdata
cmp dl 0xc0
jb r-xdata
mov ecx [ esp + 0x14 ]
mov [ ecx ] eax
mov eax 0x2
jmp r-xdata
cmp dl 0x7f
ja r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x24 ]
pop edi
pop esi
mov [ edx ] ebp
pop ebp
pop ebx
xor ecx esp
call sub_40808e
add esp 0x18
retn 0x1c
mov cl dl
add cl 0x40
cmp cl 0x1f
ja r-xdata
mov ecx 0x1
jmp r-xdata
mov cl dl
add cl 0x20
cmp cl 0xf
ja r-xdata
mov ecx 0x2
jmp r-xdata
xor esi esi
movzx dx dl
add ecx 0xffffffff
mov [ esp + 0x18 ] si
mov [ esp + 0x1a ] 0xc0
mov [ esp + 0x1c ] 0xe0
mov [ esp + 0x1e ] 0xf0
mov [ esp + 0x20 ] 0xf8
mov [ esp + 0x22 ] 0xfc
sub dx [ esp + ecx * 2 + 0x18 ]
add eax 0x1
test ecx ecx
movzx edi dx
je r-xdata
mov cl dl
add cl 0x10
cmp cl 0x7
ja r-xdata
mov ecx 0x3
jmp r-xdata
cmp eax ebx
jne r-xdata
lea ecx [ ecx ]
movzx ecx dl
add cl 0x8
mov bl 0x3
cmp bl cl
mov ebx [ esp + 0x34 ]
sbb ecx ecx
neg ecx
add ecx 0x5
mov ecx 0x4
jmp r-xdata
mov [ ebp ] di
add ebp 0x2
cmp eax ebx
jne r-xdata
cmp esi ecx
jne r-xdata
mov dl [ eax ]
mov bl dl
add bl 0x80
cmp bl 0x3f
ja r-xdata
mov ecx [ esp + 0x14 ]
sub eax esi
sub eax 0x1
mov [ ecx ] eax
mov eax 0x1
jmp r-xdata
mov ebx [ esp + 0x34 ]
shl edi 0x6
movzx dx dl
add di dx
sub di 0x80
add esi 0x1
add eax 0x1
cmp esi ecx
movzx edi di
jne r-xdata
cmp eax ebx
je r-xdata
sub_412ef0
mov eax [ esp + 0x8 ]
push esi
push edi
mov edi [ esp + 0x14 ]
xor ecx ecx
xor esi esi
cmp eax edi
ja r-xdata
sub eax edi
pop edi
pop esi
retn 0x10
push ebp
mov ebp [ esp + 0x1c ]
pop ebp
add eax ecx
mov cl [ eax ]
cmp cl 0x7f
ja r-xdata
mov dl cl
add dl 0x40
cmp dl 0x1f
ja r-xdata
mov ecx 0x1
jmp r-xdata
mov dl cl
add dl 0x20
cmp dl 0xf
ja r-xdata
mov ecx 0x2
jmp r-xdata
lea edx [ ecx + eax ]
add esi 0x1
cmp edx edi
jbe r-xdata
mov dl cl
add dl 0x10
cmp dl 0x7
ja r-xdata
mov ecx 0x3
jmp r-xdata
cmp esi ebp
ja r-xdata
add cl 0x8
mov dl 0x3
cmp dl cl
sbb ecx ecx
neg ecx
add ecx 0x5
mov ecx 0x4
jmp r-xdata
sub_412f70
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x2c ]
mov ecx [ esp + 0x38 ]
push ebx
push ebp
mov ebp [ esp + 0x2c ]
cmp ebp [ esp + 0x30 ]
push esi
mov esi [ esp + 0x3c ]
push edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] ecx
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x1e ] 0xc0
mov [ esp + 0x20 ] 0xe0
mov [ esp + 0x22 ] 0xf0
mov [ esp + 0x24 ] 0xf8
mov [ esp + 0x26 ] 0xfc
je r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
mov [ eax ] ebp
pop edi
mov [ ecx ] esi
xor eax eax
cmp ebp [ esp + 0x34 ]
pop esi
pop ebp
setne al
pop ebx
mov ecx [ esp + 0x18 ]
xor ecx esp
call sub_40808e
add esp 0x1c
retn 0x1c
mov edi edi
movzx eax [ ebp ]
cmp ax 0xffff
ja r-xdata
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
pop edi
mov [ edx ] ebp
mov [ eax ] esi
pop esi
pop ebp
mov eax 0x2
pop ebx
mov ecx [ esp + 0x18 ]
xor ecx esp
call sub_40808e
add esp 0x1c
retn 0x1c
movzx ecx ax
cmp cx 0x80
jae r-xdata
cmp cx 0x800
sbb edi edi
add edi 0x2
xor edi edi
jmp r-xdata
cmp esi [ esp + 0x44 ]
jne r-xdata
cmp esi [ esp + 0x44 ]
je r-xdata
lea ecx [ edi + edi * 2 ]
movzx eax ax
add ecx ecx
mov ebx 0x1
shl ebx cl
cdq
add esi 0x1
idiv ebx
xor ebx ebx
add al [ esp + edi * 2 + 0x1c ]
test edi edi
mov [ esi - 0x1 ] al
je r-xdata
add ebp 0x2
cmp ebp [ esp + 0x38 ]
mov [ esp + 0x34 ] ebp
jne r-xdata
cmp ebx edi
jne r-xdata
sub ecx 0x6
mov eax 0x1
shl eax cl
mov [ esp + 0x18 ] eax
movzx eax [ ebp ]
mov ebp [ esp + 0x18 ]
cdq
idiv ebp
and eax 0x8000003f
jns r-xdata
cmp esi [ esp + 0x44 ]
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
sub esi ebx
mov [ ecx ] ebp
mov ecx [ esp + 0x28 ]
sub esi 0x1
pop edi
mov [ edx ] esi
pop esi
pop ebp
pop ebx
xor ecx esp
mov eax 0x1
call sub_40808e
add esp 0x1c
retn 0x1c
mov ebp [ esp + 0x34 ]
add al 0x80
mov [ esi ] al
add ebx 0x1
add esi 0x1
cmp ebx edi
jne r-xdata
dec eax
or eax 0xffffffc0
inc eax
sub_413100
cmp [ ecx + 0x24 ] 0x0
jne r-xdata
or eax 0xffffffff
retn
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x8 ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
retn
retn
sub_413130
push esi
push edi
mov edi ecx
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
retn 0x4
mov ecx [ edi + 0x8 ]
mov esi [ esp + 0xc ]
sub ecx eax
mov eax 0x92492493
imul ecx
add edx ecx
sar edx 0x4
mov eax edx
shr eax 0x1f
add eax edx
cmp esi eax
jae r-xdata
mov ecx [ edi + 0x4 ]
lea eax [ esi * 8 ]
sub eax esi
pop edi
lea eax [ ecx + eax * 4 ]
pop esi
retn 0x4
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_42e27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_42ef70
add esp 0x4
call sub_42f130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_42f160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_42f160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_42ef70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_42ef70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_42ef70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_42ef70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_42ef70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_42ef70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_42f0a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_42e27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_42ef70
add esp 0x4
call sub_42f130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_42f160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_42f160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_42ef70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_42ef70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_42ef70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_42ef70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_42ef70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_42ef70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_42f0a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_42ef70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_42f0a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_42f130
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_42f160
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_401000
mov [ ecx ] r--data
jmp [ std::exception::~exception@IAT ]
sub_401010
push esi
mov esi ecx
mov [ esi ] r--data
call [ std::exception::~exception@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4010a0
cmp [ ecx + 0x24 ] 0x10
jb r-xdata
lea eax [ ecx + 0x10 ]
retn
mov eax [ ecx + 0x10 ]
retn
sub_401150
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401170
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_401210
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
sub_4012f0
mov [ ecx ] r--data
retn
sub_401300
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401320
mov ecx [ ecx ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_401330
mov [ ecx ] r--data
retn
sub_401340
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401360
mov eax r--data
retn
sub_401400
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
sub_401420
mov eax r--data
retn
sub_401430
mov [ ecx ] r--data
jmp [ std::bad_cast::~bad_cast@IAT ]
sub_401440
push esi
mov esi ecx
mov [ esi ] r--data
call [ std::bad_cast::~bad_cast@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401470
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401490
mov [ ecx ] r--data
retn
sub_4014a0
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401500
mov [ ecx ] r--data
retn
sub_401510
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4015c7
mov eax 0x1
retn
sub_401efb
call sub_4016f0
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] 0x7
mov eax r-xdata
retn
sub_4020f0
push eax
call sub_4021e0
retn
j_sub_4028e0
jmp sub_4028e0
j_sub_402920
jmp sub_402920
sub_402470
mov ecx [ ebp - 0x18 ]
call sub_402490
push 0x0
push 0x0
call _CxxThrowException
sub_402630
mov al [ ecx + 0x4c ]
retn
sub_402640
cmp [ ecx + 0x4f ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ ecx + 0x2c ] 0x0
jne r-xdata
mov eax 0x1
retn
sub_402660
cmp [ ecx + 0x4e ] 0x0
je r-xdata
xor eax eax
cmp [ ecx + 0x4f ] al
sete al
retn
mov eax 0x7d00
retn
sub_402ac0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push ecx
push edx
call sub_404780
add esp 0x10
retn 0x8
sub_402e00
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401170
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_403600
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x39 ] 0x0
jne r-xdata
retn
lea ecx [ ecx ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x39 ] 0x0
je r-xdata
sub_403620
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
cmp [ ecx + 0x39 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x39 ] 0x0
je r-xdata
sub_403730
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
retn
lea ecx [ ecx ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x29 ] 0x0
je r-xdata
sub_403750
mov eax [ esp + 0x4 ]
mov ecx [ eax ]
cmp [ ecx + 0x29 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax ]
cmp [ ecx + 0x29 ] 0x0
je r-xdata
sub_403e20
mov eax ecx
mov [ eax ] r--data
retn 0x4
sub_403e30
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call [ std::exception::exception@IAT ]
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_404180
retn
sub_40454f
mov edi [ ebp - 0x28 ]
mov esi [ ebp + 0x8 ]
call sub_404a90
push eax
lea ecx [ ebp - 0xa8 ]
call sub_408a90
push eax
mov [ ebp - 0x4 ] 0x6
call sub_405700
sub_404b80
push esi
mov esi ecx
push esi
call sub_404bb0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_404ba0
mov [ eax ] r--data
retn
sub_40508e
mov eax [ ebp - 0x38 ]
mov esi [ ebp - 0x40 ]
mov ecx [ ebp - 0x44 ]
push eax
push esi
call sub_402a90
push esi
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_4053ce
mov eax [ ebp - 0x38 ]
mov esi [ ebp - 0x40 ]
mov ecx [ ebp - 0x44 ]
push eax
push esi
call sub_402a10
push esi
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_405644
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xb0 ]
call sub_408a90
push eax
mov [ ebp - 0x4 ] 0x4
call sub_405700
??1bad_cast@std@@UAE@XZ
jmp [ std::bad_cast::~bad_cast@IAT ]
sub_405a40
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_405a70
mov [ esi + 0x74 ] r--data
mov [ esi ] r--data
mov [ esi + 0x60 ] r--data
mov [ esi + 0x74 ] r--data
mov eax esi
pop esi
retn 0x4
sub_405b10
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_405b30
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_405bb0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401170
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_405bd0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_405c00
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_405ca0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_4010e0
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_405cc0
push esi
mov esi ecx
call [ std::bad_cast::~bad_cast@IAT ]
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_405ce0
push esi
mov esi ecx
call sub_406110
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_406030
mov eax rw-data
retn
sub_406390
push esi
mov esi ecx
push esi
call sub_4063b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_406520
mov ecx [ ebp - 0x18 ]
call sub_402a40
push 0x0
push 0x0
call _CxxThrowException
sub_4066c0
push ecx
push edi
mov edi ecx
push eax
mov [ esp + 0x8 ] 0x0
call sub_407360
add esp 0x4
mov eax edi
pop edi
pop ecx
retn
sub_4067f0
push ecx
push esi
mov [ esp + 0x4 ] 0x0
call sub_406ea0
mov eax esi
pop ecx
retn
sub_406860
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_406f50
mov eax esi
pop esi
pop ecx
retn
sub_406b70
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_406ba0
mov [ esi + 0x20 ] r--data
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0x20 ] r--data
mov eax esi
pop esi
retn 0x4
sub_406c40
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call [ std::bad_cast::bad_cast@IAT ]
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_407070
mov eax rw-data
retn
sub_4070f0
mov [ esi ] r--data
mov [ esi + 0xc ] r--data
mov [ esi + 0xc ] r--data
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
jmp [ std::bad_cast::~bad_cast@IAT ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
call edx
sub_4071e0
sub esp 0x24
lea eax [ ecx - 0x20 ]
push eax
lea ecx [ esp + 0x4 ]
call sub_406ba0
push r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] r--data
mov [ esp + 0x14 ] r--data
mov [ esp + 0x28 ] r--data
call _CxxThrowException
sub_4074a0
push ecx
push esi
mov [ esp + 0x4 ] 0x0
call sub_407760
mov eax esi
pop ecx
retn
sub_407546
mov esi [ ebp - 0x38 ]
mov edi [ ebp - 0x34 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call _CxxThrowException
mov ecx esi
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_407626
mov esi [ ebp - 0x38 ]
mov edi [ ebp - 0x34 ]
cmp esi edi
je r-xdata
push 0x0
push 0x0
call _CxxThrowException
mov ecx esi
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
add esi 0x1c
cmp esi edi
jne r-xdata
sub_4079d0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_407a00
mov [ esi + 0x28 ] r--data
mov [ esi ] r--data
mov [ esi + 0x14 ] r--data
mov [ esi + 0x28 ] r--data
mov eax esi
pop esi
retn 0x4
sub_407c90
sub esp 0x2c
lea eax [ ecx - 0x28 ]
push eax
lea ecx [ esp + 0x4 ]
call sub_407a00
push r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] r--data
mov [ esp + 0x1c ] r--data
mov [ esp + 0x30 ] r--data
call _CxxThrowException
sub_407d30
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_407d50
mov eax esi
pop esi
pop ecx
retn
sub_407f37
mov ecx [ ebp - 0x14 ]
push 0x0
push 0x1
call [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::_Tidy@IAT ]
push 0x0
push 0x0
call _CxxThrowException
sub_407f70
sub ecx 0x4
jmp sub_404b80
sub_407f80
sub ecx 0x28
jmp sub_405dd0
sub_407f90
sub ecx 0x60
jmp sub_405d00
sub_407fa0
sub ecx 0x28
jmp sub_407ad0
sub_407fb0
sub ecx 0x3c
jmp sub_405d70
sub_407fc0
sub ecx 0x20
jmp sub_406c60
sub_407fd0
sub ecx 0xc
jmp sub_406cc0
sub_407fe0
sub ecx 0x14
jmp sub_407ad0
sub_407ff0
sub ecx 0x74
jmp sub_405ce0
sub_408000
sub ecx 0x28
jmp sub_405d70
sub_408010
sub ecx 0x14
jmp sub_407b30
sub_408020
sub ecx 0xc
jmp sub_406c60
sub_408030
sub ecx 0x60
jmp sub_405ce0
?what@exception@std@@UBEPBDXZ
jmp [ std::exception::what@IAT ]
??0exception@std@@QAE@ABV01@@Z
jmp [ std::exception::exception@IAT ]
__imp_??1bad_cast@std@@UAE@XZ
jmp [ std::bad_cast::~bad_cast@IAT ]
_purecall
jmp [ _purecall@IAT ]
??0bad_cast@std@@QAE@ABV01@@Z
jmp [ std::bad_cast::bad_cast@IAT ]
sub_408158
push 0x8
call _unlock
pop ecx
retn
sub_408161
push [ esp + 0x4 ]
call sub_4080bc
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_408337
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x28 ] ecx
push eax
push ecx
call _XcptFilter
pop ecx
pop ecx
retn
sub_408383
xor eax eax
inc eax
retn
sub_408387
mov esp [ ebp - 0x18 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
call sub_4086a5
retn
sub_40847e
call sub_4088f4
jmp sub_4081be
sub_408531
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_408488
_unlock
jmp [ _unlock@IAT ]
__dllonexit
jmp [ __dllonexit@IAT ]
_lock
jmp [ _lock@IAT ]
sub_4086a5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_4086b9
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push sub_40808e
push rw-data
call _except_handler4_common
add esp 0x18
retn
sub_408719
push sub_4086dc
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
_amsg_exit
jmp [ _amsg_exit@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
sub_408889
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
sub_4088f1
xor eax eax
retn
?terminate@@YAXXZ
jmp [ terminate@IAT ]
?_type_info_dtor_internal_method@type_info@@QAEXXZ
jmp [ type_info::_type_info_dtor_internal_method@IAT ]
_crt_debugger_hook
jmp [ _crt_debugger_hook@IAT ]
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
_invoke_watson
jmp [ _invoke_watson@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
sub_4089b0
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
sub_4089d0
push ecx
push esi
mov esi [ esp + 0xc ]
push rw-data
mov ecx esi
mov [ esp + 0x8 ] 0x0
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax esi
pop esi
pop ecx
retn 0x4
sub_408a00
xor eax eax
cmp [ ecx + 0x4 ] al
sete al
retn
sub_408a67
mov ecx [ ebp + 0x8 ]
push r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov eax sub_408a7b
retn
sub_408a7b
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_408b50
add ecx 0x44
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::operator=@IAT ]
sub_408c50
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401170
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_408ca0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401170
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_408d20
mov eax rw-data
retn
sub_408df0
push esi
mov esi ecx
call sub_408d30
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_408f20
sub ecx 0x28
jmp sub_409290
sub_408fd0
sub ecx 0x28
jmp sub_409350
sub_409070
sub ecx 0x3c
jmp sub_409230
sub_409110
sub ecx 0x3c
jmp sub_4092f0
sub_40917f
mov ecx [ ebp - 0x14 ]
push 0x0
push 0x1
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::_Tidy@IAT ]
push 0x0
push 0x0
call _CxxThrowException
sub_4091b0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_408e80
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_4091e0
sub ecx 0x28
jmp sub_409230
sub_4091f0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_408f30
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_409220
sub ecx 0x28
jmp sub_4092f0
sub_409430
sub esp 0x40
lea eax [ ecx - 0x3c ]
push eax
lea ecx [ esp + 0x4 ]
call sub_408e80
push r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] r--data
mov [ esp + 0x30 ] r--data
mov [ esp + 0x44 ] r--data
call _CxxThrowException
sub_4094f0
sub esp 0x40
lea eax [ ecx - 0x3c ]
push eax
lea ecx [ esp + 0x4 ]
call sub_408f30
push r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] r--data
mov [ esp + 0x30 ] r--data
mov [ esp + 0x44 ] r--data
call _CxxThrowException
sub_409810
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_4095d0
mov eax esi
pop esi
pop ecx
retn
sub_409830
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_409690
mov eax esi
pop esi
pop ecx
retn
sub_409e90
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
xor eax eax
retn 0x10
sub_409ea0
xor eax eax
retn
sub_409eb0
mov eax 0x6
retn
sub_40a0a0
sub ecx 0x28
jmp sub_40a1f0
sub_40a140
sub ecx 0x3c
jmp sub_40a190
sub_40a150
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_40a000
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_40a180
sub ecx 0x28
jmp sub_40a190
sub_40a2d0
sub esp 0x40
lea eax [ ecx - 0x3c ]
push eax
lea ecx [ esp + 0x4 ]
call sub_40a000
push r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] r--data
mov [ esp + 0x30 ] r--data
mov [ esp + 0x44 ] r--data
call _CxxThrowException
sub_40a420
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_40a360
mov eax esi
pop esi
pop ecx
retn
sub_40abc0
xor al al
retn
sub_40acb0
mov eax [ esp + 0x4 ]
mov [ ecx + 0x18 ] eax
retn 0x4
sub_40ae30
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401170
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_40b0bd
mov eax [ ebp - 0x14 ]
push 0x0
push 0x0
mov [ eax ] 0x0
call _CxxThrowException
sub_40b170
sub ecx 0x28
jmp sub_40b2f0
sub_40b210
sub ecx 0x3c
jmp sub_40b290
sub_40b250
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_40b0d0
mov [ esi + 0x3c ] r--data
mov [ esi ] r--data
mov [ esi + 0x28 ] r--data
mov [ esi + 0x3c ] r--data
mov eax esi
pop esi
retn 0x4
sub_40b280
sub ecx 0x28
jmp sub_40b290
sub_40b3d0
sub esp 0x40
lea eax [ ecx - 0x3c ]
push eax
lea ecx [ esp + 0x4 ]
call sub_40b0d0
push r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] r--data
mov [ esp + 0x30 ] r--data
mov [ esp + 0x44 ] r--data
call _CxxThrowException
sub_40b460
mov eax [ esp + 0xc ]
cmp eax 0x4
je r-xdata
mov eax [ esp + 0x8 ]
xor cl cl
mov [ eax ] rw-data
mov [ eax + 0x4 ] cl
mov [ eax + 0x5 ] cl
retn
mov [ esp + 0xc ] eax
jmp sub_40ae50
sub_40b660
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_40b4c0
mov eax esi
pop esi
pop ecx
retn
sub_40b8d0
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
mov ecx [ esp + 0x10 ]
push ecx
push edx
call sub_40b710
add esp 0x10
retn 0x8
sub_40bfdc
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov ecx [ ebp - 0x14 ]
push eax
push esi
call sub_40b8d0
push esi
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_40c5f9
mov ecx [ ebp - 0x18 ]
call sub_4022a0
push 0x0
push 0x0
call _CxxThrowException
sub_40c7df
mov eax [ ebp - 0x60 ]
mov esi [ ebp - 0x68 ]
mov ecx [ ebp - 0x64 ]
push eax
push esi
call sub_402b10
push esi
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_40e3e0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_401170
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_40e400
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_40e410
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_40e430
retn
sub_40e5fa
mov edx [ ebp - 0x14 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_40f11f
mov eax [ ebp - 0x60 ]
mov esi [ ebp - 0x68 ]
mov ecx [ ebp - 0x64 ]
push eax
push esi
call sub_402ae0
push esi
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_40fc09
mov edx [ ebp - 0x14 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_41053b
mov edx [ ebp + 0x48 ]
mov ecx [ ebp - 0x1c ]
push edx
call sub_408b50
push 0x0
push 0x0
call _CxxThrowException
sub_4108a0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x1
push eax
add ecx 0x14
push ecx
call sub_410270
add esp 0xc
retn
sub_410970
push esi
mov esi ecx
call sub_402080
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_410b20
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
retn 0x4
sub_410b30
lea eax [ ecx + 0x20 ]
retn
sub_410c10
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
push 0x1
call edx
sub_410c30
mov ecx [ esp + 0x4 ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_410dd9
mov edx [ ebp + 0x8 ]
push edx
call sub_410c10
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_410e69
mov edx [ ebp + 0x8 ]
push edx
call sub_410c30
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_410f00
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x1c ]
push 0x1
call edx
sub_410f20
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push 0x1
call edx
sub_410fb0
xor al al
retn 0x4
sub_410fc0
retn 0x4
sub_410fd0
test [ esp + 0x4 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_410ff0
push esi
mov esi ecx
call sub_410c50
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4114e9
mov eax [ ebp - 0x14 ]
mov ecx [ ebp + 0x10 ]
push eax
push ecx
mov ecx [ ebp - 0x18 ]
call [ std::allocator<char>::deallocate@IAT ]
push 0x0
push 0x0
call _CxxThrowException
sub_411870
push esi
mov esi ecx
lea ecx [ esi + 0x28 ]
mov [ esi ] r--data
call sub_402490
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
mov ecx esi
pop esi
jmp [ std::exception::~exception@IAT ]
sub_411a8d
mov eax [ ebp - 0x14 ]
mov esi [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
push eax
push esi
call sub_402ac0
push esi
call ??3@YAXPAX@Z
add esp 0x4
push 0x0
push 0x0
call _CxxThrowException
sub_411c70
sub ecx 0x38
jmp sub_411f60
sub_411d30
sub ecx 0x4c
jmp sub_411f40
sub_411e00
sub ecx 0x38
jmp sub_411f40
sub_411f10
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_411bd0
mov [ esi + 0x4c ] r--data
mov [ esi ] r--data
mov [ esi + 0x38 ] r--data
mov [ esi + 0x4c ] r--data
mov eax esi
pop esi
retn 0x4
sub_411f40
push esi
mov esi ecx
call sub_411cd0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_412040
sub esp 0x50
lea eax [ ecx - 0x4c ]
push eax
lea ecx [ esp + 0x4 ]
call sub_411bd0
push r--data
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] r--data
mov [ esp + 0x40 ] r--data
mov [ esp + 0x54 ] r--data
call _CxxThrowException
sub_4120d0
push ecx
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
push eax
mov ecx esi
mov [ esp + 0x8 ] 0x0
call sub_411d40
mov eax esi
pop esi
pop ecx
retn
__CxxFrameHandler3
jmp [ __CxxFrameHandler3@IAT ]
_CxxThrowException
jmp [ _CxxThrowException@IAT ]
memset
jmp [ memset@IAT ]
sub_413190
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4131b0
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4131b9
lea ecx [ ebp - 0x44 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4131c2
mov ecx [ ebp - 0x48 ]
jmp sub_404910
sub_4131ca
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4131f0
mov ecx [ ebp - 0x10 ]
jmp sub_401330
sub_4131f8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413220
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41322b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413250
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413270
mov ecx [ ebp - 0x10 ]
jmp sub_408fe0
sub_413278
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_4012f0
sub_413283
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4132a0
mov ecx [ ebp - 0x10 ]
jmp sub_409080
sub_4132a8
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_4012f0
sub_4132b3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4132d0
lea ecx [ ebp - 0x2c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4132d9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x30 ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40808e
add eax 0xc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413310
lea ecx [ ebp - 0x88 ]
jmp sub_408fe0
sub_41331b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413340
lea ecx [ ebp - 0x88 ]
jmp sub_409080
sub_41334b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413370
lea ecx [ ebp - 0x6c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413379
lea ecx [ ebp - 0x34 ]
jmp sub_4089b0
sub_413381
lea ecx [ ebp - 0x6c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41338a
lea ecx [ ebp - 0x34 ]
jmp sub_4089b0
sub_413392
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
lea ecx [ ebp - 0x50 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4133ac
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x74 ]
mov ecx [ edx - 0x78 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4133d0
lea ecx [ ebp - 0x50 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4133d9
lea ecx [ ebp - 0x34 ]
jmp sub_4089b0
sub_4133e1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413400
lea ecx [ ebp - 0x60 ]
jmp sub_402490
sub_413408
lea ecx [ ebp - 0x2c ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_413411
lea ecx [ ebp - 0x48 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41341a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_40808e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413450
lea ecx [ ebp - 0x38 ]
jmp sub_402a40
sub_413458
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_413461
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_41346a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x40 ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413490
lea ecx [ ebp - 0x1c ]
jmp [ std::_Lockit::~_Lockit@IAT ]
sub_413499
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4134c0
mov ecx [ ebp - 0x10 ]
jmp sub_40a0b0
sub_4134c8
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_4012f0
sub_4134d3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4134f0
lea ecx [ ebp - 0x88 ]
jmp sub_40a0b0
sub_4134fb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413520
mov eax [ ebp - 0xbc ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xbc ] 0xfffffffe
mov ecx [ ebp - 0xc0 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_413543
lea ecx [ ebp - 0xac ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41354f
lea ecx [ ebp - 0x80 ]
jmp sub_401210
sub_413557
lea ecx [ ebp - 0xac ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413563
lea ecx [ ebp - 0x80 ]
jmp sub_401210
sub_41356b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xcc ]
mov ecx [ edx - 0xd0 ]
xor ecx eax
call sub_40808e
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4135a0
mov eax [ ebp - 0x98 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x98 ] 0xfffffffe
mov ecx [ ebp - 0x9c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4135c3
lea ecx [ ebp - 0x88 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4135cf
lea ecx [ ebp - 0x5c ]
jmp sub_401210
sub_4135d7
lea ecx [ ebp - 0x88 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4135e3
lea ecx [ ebp - 0x5c ]
jmp sub_401210
sub_4135eb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xac ]
mov ecx [ edx - 0xb0 ]
xor ecx eax
call sub_40808e
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413620
lea ecx [ ebp - 0x10 ]
jmp [ std::locale::~locale@IAT ]
sub_413629
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413650
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413659
mov ecx [ ebp - 0x2c ]
jmp sub_401210
sub_413661
mov ecx [ ebp - 0x2c ]
add ecx 0x28
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41366d
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413690
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413699
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4136c0
mov eax [ ebp + 0x4 ]
push eax
mov ecx [ ebp - 0x10 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_4136d1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4136f0
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4136f9
mov ecx [ ebp - 0x2c ]
jmp sub_40afa0
sub_413701
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413720
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413740
mov ecx [ ebp - 0x10 ]
jmp sub_4089b0
sub_413748
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413770
mov ecx [ ebp - 0x10 ]
jmp sub_40b180
sub_413778
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_4012f0
sub_413783
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4137a0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4137c0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4137e0
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4137e9
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402490
sub_4137f4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413810
lea ecx [ ebp - 0x88 ]
jmp sub_40b180
sub_41381b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x7c ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413840
lea ecx [ ebp - 0x6c ]
jmp sub_401400
sub_413848
lea ecx [ ebp - 0x44 ]
jmp sub_40acc0
sub_413850
mov eax [ ebp - 0x70 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x70 ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp sub_40acc0
sub_413869
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x68 ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413890
lea ecx [ ebp - 0xfc ]
jmp sub_4089b0
sub_41389b
lea ecx [ ebp - 0x10c ]
jmp sub_4014c0
sub_4138a6
lea ecx [ ebp - 0x10c ]
jmp sub_4014c0
sub_4138b1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x114 ]
mov ecx [ edx - 0x118 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4138e0
mov ecx [ ebp - 0x10 ]
jmp sub_401210
sub_4138e8
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4138f4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413910
lea ecx [ ebp - 0x38 ]
jmp sub_402550
sub_413918
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413940
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_413951
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413970
mov ecx [ ebp - 0x10 ]
jmp sub_402490
sub_413978
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402550
sub_413983
mov ecx [ ebp - 0x10 ]
add ecx 0x40
jmp sub_402550
sub_41398e
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4139b0
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_4139c1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4139e0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413a00
lea ecx [ ebp - 0x58 ]
jmp sub_405f00
sub_413a08
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_40808e
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413a30
lea ecx [ ebp - 0x34 ]
jmp sub_401400
sub_413a38
lea ecx [ ebp - 0x44 ]
jmp sub_4022a0
sub_413a40
mov eax [ ebp - 0x48 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x48 ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp sub_4022a0
sub_413a59
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x40 ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413a80
lea ecx [ ebp - 0x1c ]
jmp sub_4022a0
sub_413a88
mov eax [ ebp - 0x20 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x20 ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp sub_4022a0
sub_413aa1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413ac0
mov eax [ ebp - 0x120 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x120 ] 0xfffffffe
mov ecx [ ebp - 0x124 ]
jmp sub_4022a0
sub_413ae2
lea ecx [ ebp - 0x70 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413aeb
lea ecx [ ebp - 0x8c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413af7
lea ecx [ ebp - 0x114 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413b03
lea ecx [ ebp - 0x114 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413b0f
lea ecx [ ebp - 0x114 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413b1b
lea ecx [ ebp - 0x54 ]
jmp sub_405f00
sub_413b23
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x12c ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_40808e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413b60
lea ecx [ ebp - 0xec ]
jmp sub_4022a0
sub_413b6b
lea ecx [ ebp - 0x70 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413b74
lea ecx [ ebp - 0x8c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413b80
mov eax [ ebp - 0xfc ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xfc ] 0xfffffffe
lea ecx [ ebp - 0xcc ]
jmp sub_4014c0
sub_413ba2
lea ecx [ ebp - 0x54 ]
jmp sub_405f00
sub_413baa
lea ecx [ ebp - 0xc4 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413bb6
lea ecx [ ebp - 0xa8 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413bc2
lea ecx [ ebp - 0x54 ]
jmp sub_405f00
sub_413bca
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x100 ]
mov ecx [ edx - 0x104 ]
xor ecx eax
call sub_40808e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413c00
mov eax [ ebp - 0xb8 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0xb8 ] 0xfffffffe
mov ecx [ ebp - 0xb4 ]
jmp sub_4022a0
sub_413c22
lea ecx [ ebp - 0xa8 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413c2e
lea ecx [ ebp - 0x70 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413c37
lea ecx [ ebp - 0x8c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413c43
lea ecx [ ebp - 0x54 ]
jmp sub_405f00
sub_413c4b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xbc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_40808e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413c80
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413c89
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x30 ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413cb0
mov eax [ ebp - 0x5c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x5c ] 0xfffffffe
mov ecx [ ebp - 0x58 ]
jmp sub_4022a0
sub_413cc9
lea ecx [ ebp - 0x54 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413cd2
lea ecx [ ebp - 0x34 ]
jmp sub_402490
sub_413cda
lea ecx [ ebp - 0x54 ]
jmp sub_405f00
sub_413ce2
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x68 ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_40808e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413d10
mov eax [ ebp - 0x9c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x9c ] 0xfffffffe
mov ecx [ ebp - 0x90 ]
jmp sub_4022a0
sub_413d32
lea ecx [ ebp - 0x8c ]
jmp sub_40acc0
sub_413d3d
lea ecx [ ebp - 0x54 ]
jmp sub_405f00
sub_413d45
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xa0 ]
mov ecx [ edx - 0xa4 ]
xor ecx eax
call sub_40808e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413d80
lea ecx [ ebp - 0x7c ]
jmp sub_40be00
sub_413d88
lea ecx [ ebp - 0xa0 ]
jmp sub_402550
sub_413d93
lea ecx [ ebp - 0xa0 ]
jmp sub_402550
sub_413d9e
lea ecx [ ebp - 0xa0 ]
jmp sub_402550
sub_413da9
lea ecx [ ebp - 0xa0 ]
jmp sub_402550
sub_413db4
lea ecx [ ebp - 0xa0 ]
jmp sub_402550
sub_413dbf
lea ecx [ ebp - 0xa0 ]
jmp sub_402550
sub_413dca
mov eax [ ebp - 0x60 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x60 ] 0xfffffffe
mov ecx [ ebp - 0x80 ]
jmp sub_4022a0
sub_413de3
lea ecx [ ebp - 0xb4 ]
jmp sub_4022a0
sub_413dee
lea ecx [ ebp - 0xa0 ]
jmp sub_402490
sub_413df9
lea ecx [ ebp - 0x54 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413e02
lea ecx [ ebp - 0x34 ]
jmp sub_402490
sub_413e0a
lea ecx [ ebp - 0x54 ]
jmp sub_405f00
sub_413e12
lea ecx [ ebp - 0x54 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413e1b
lea ecx [ ebp - 0x34 ]
jmp sub_402490
sub_413e23
lea ecx [ ebp - 0xa0 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413e2f
lea ecx [ ebp - 0x54 ]
jmp [ std::exception::~exception@IAT ]
sub_413e38
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc0 ]
mov ecx [ edx - 0xc4 ]
xor ecx eax
call sub_40808e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413e70
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_413e81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413ea0
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_413ea9
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_413ec3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413ee0
lea ecx [ ebp - 0x50 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413ee9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413f10
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413f19
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402a40
sub_413f24
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413f40
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_413f49
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402a40
sub_413f54
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413f70
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_413f79
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413fa0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_413fb1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_413fd0
mov eax [ ebp - 0x18 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x18 ] 0xfffffffe
mov ecx [ ebp - 0x14 ]
jmp sub_405e30
sub_413fe9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414010
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_414021
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414040
lea ecx [ ebp - 0x58 ]
jmp sub_405e30
sub_414048
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x6c ]
xor ecx eax
call sub_40808e
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414070
mov ecx [ ebp - 0x54 ]
jmp sub_402580
sub_414078
mov ecx [ ebp - 0x54 ]
add ecx 0x14
jmp sub_4022a0
sub_414083
lea ecx [ ebp - 0x50 ]
jmp sub_405e30
sub_41408b
lea ecx [ ebp - 0x50 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414094
lea ecx [ ebp - 0x30 ]
jmp sub_402a40
sub_41409c
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4140c0
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4140c9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4140f0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_4140fe
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414120
mov eax [ ebp - 0x14 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_414131
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414150
lea ecx [ ebp - 0x48 ]
jmp sub_403eb0
sub_414158
lea ecx [ ebp - 0x38 ]
jmp sub_403e50
sub_414160
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x54 ]
mov ecx [ edx - 0x58 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414180
lea ecx [ ebp + 0x24 ]
jmp j_sub_402920
sub_414188
lea ecx [ ebp + 0x58 ]
jmp sub_403eb0
sub_414190
lea ecx [ ebp - 0x18 ]
jmp sub_4014c0
sub_4141da
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_40808e
mov ecx [ edx + 0x74 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414200
mov ecx [ ebp - 0x10 ]
jmp sub_401500
sub_414208
mov ecx [ ebp - 0x10 ]
add ecx 0x8
jmp j_sub_4028e0
sub_414213
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414230
lea ecx [ ebp - 0x2c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414239
lea ecx [ ebp - 0x64 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414242
lea ecx [ ebp - 0x48 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41424b
lea ecx [ ebp - 0x64 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414254
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_40808e
add eax 0x8
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414280
lea ecx [ ebp - 0x50 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414289
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4142b0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4142bc
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4142c8
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4142d4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4142f0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414310
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414330
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414339
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x3c ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414360
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41436c
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414378
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414384
mov ecx [ ebp - 0x10 ]
add ecx 0x58
jmp sub_4014c0
sub_41438f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4143b0
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4143d0
mov ecx [ ebp - 0x10 ]
jmp sub_401210
sub_4143d8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414400
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414409
mov ecx [ ebp - 0x2c ]
jmp sub_401210
sub_414411
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414430
lea ecx [ ebp - 0x28 ]
jmp sub_4014c0
sub_414438
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414460
mov ecx [ ebp - 0x10 ]
jmp sub_411870
sub_414468
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414490
mov ecx [ ebp - 0x10 ]
jmp sub_411c80
sub_414498
mov ecx [ ebp - 0x10 ]
add ecx 0x4c
jmp sub_4012f0
sub_4144a3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4144c0
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4144c9
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_4024e0
sub_4144d4
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_402520
sub_4144df
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414500
lea ecx [ ebp - 0x58 ]
jmp sub_411c80
sub_414508
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x9c ]
mov ecx [ edx - 0xa0 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414530
lea ecx [ ebp + 0x4 ]
jmp sub_4014c0
sub_414538
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414560
lea ecx [ ebp - 0x5c ]
jmp sub_4014c0
sub_414568
lea ecx [ ebp - 0x54 ]
jmp sub_402490
sub_414570
lea ecx [ ebp - 0x44 ]
jmp sub_411870
sub_414578
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4145a0
mov eax [ ebp - 0x14 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_4145ab
lea ecx [ ebp - 0x14 ]
jmp sub_4014c0
sub_4145b3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4145d0
mov eax [ ebp - 0x14 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_4145db
lea ecx [ ebp - 0x14 ]
jmp sub_4014c0
sub_4145e3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414600
lea ecx [ ebp - 0x34 ]
jmp sub_4089b0
sub_414608
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414630
mov eax [ ebp - 0x30 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x30 ] 0xfffffffe
mov ecx [ ebp - 0x34 ]
jmp sub_402490
sub_414649
lea ecx [ ebp - 0x2c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414652
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x48 ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_40808e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414680
mov eax [ ebp - 0x58 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x58 ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp sub_402a40
sub_414699
lea ecx [ ebp - 0x44 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4146a2
lea ecx [ ebp - 0x54 ]
jmp sub_402490
sub_4146aa
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_4146b3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x5c ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4146d0
mov ecx [ ebp + 0x4 ]
jmp sub_402490
sub_4146d8
mov ecx [ ebp + 0x4 ]
add ecx 0x20
jmp sub_402550
sub_4146e3
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414700
mov ecx [ ebp - 0x10 ]
jmp [ std::exception::~exception@IAT ]
sub_414709
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414730
mov ecx [ ebp - 0x10 ]
jmp [ std::exception::~exception@IAT ]
sub_414739
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414760
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414780
lea ecx [ ebp - 0x30 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_414789
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x34 ]
mov ecx [ edx - 0x38 ]
xor ecx eax
call sub_40808e
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4147c0
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4147c9
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402490
sub_4147d4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4147f0
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_414801
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414820
mov eax [ ebp + 0x4 ]
jmp sub_404ba0
sub_414828
mov ecx [ ebp + 0x4 ]
add ecx 0x4
jmp sub_401490
sub_414833
mov ecx [ ebp + 0x4 ]
add ecx 0xc
jmp sub_401320
sub_41483e
mov ecx [ ebp + 0x4 ]
add ecx 0x10
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41484a
mov ecx [ ebp + 0x4 ]
add ecx 0x2c
jmp sub_401320
sub_414855
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414870
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_41487b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4148a0
lea ecx [ ebp - 0x48 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4148a9
lea ecx [ ebp - 0x2c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4148b2
lea ecx [ ebp - 0x80 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4148bb
lea ecx [ ebp - 0x64 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4148c4
lea ecx [ ebp - 0x64 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4148cd
lea ecx [ ebp - 0x80 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4148d6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x88 ]
mov ecx [ edx - 0x8c ]
xor ecx eax
call sub_40808e
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414910
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414919
mov ecx [ ebp - 0x2c ]
jmp [ std::exception::~exception@IAT ]
sub_414922
mov ecx [ ebp - 0x2c ]
jmp sub_401400
sub_41492a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x24 ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414950
mov ecx [ ebp - 0x10 ]
jmp sub_401430
sub_414958
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414980
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_414991
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4149b0
lea ecx [ ebp - 0x30 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_4149b9
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_4149ca
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_40808e
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4149f0
lea ecx [ ebp - 0x30 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4149f9
mov eax [ ebp - 0x3c ]
push eax
mov ecx [ ebp - 0x40 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_414a0a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_40808e
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414a30
mov ecx [ ebp - 0x10 ]
jmp ??1bad_cast@std@@UAE@XZ
sub_414a38
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414a60
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_414a71
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414a90
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_414aa1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414ac0
mov ecx [ ebp + 0x4 ]
jmp sub_401330
sub_414ac8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414af0
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414af9
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402a40
sub_414b04
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414b20
mov ecx [ ebp - 0x10 ]
jmp sub_401400
sub_414b28
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414b50
mov eax [ ebp + 0x4 ]
jmp sub_404ba0
sub_414b58
cmp [ ebp + 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp + 0x4 ]
add eax 0x4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
jmp sub_401490
sub_414b7f
mov ecx [ ebp + 0x4 ]
add ecx 0xc
jmp sub_401320
sub_414b8a
mov ecx [ ebp + 0x4 ]
add ecx 0x10
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414b96
mov ecx [ ebp + 0x4 ]
add ecx 0x2c
jmp sub_401320
sub_414ba1
mov ecx [ ebp + 0x4 ]
add ecx 0x30
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414bad
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414bd0
lea ecx [ ebp - 0x54 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414bd9
lea ecx [ ebp - 0x38 ]
jmp [ std::exception::~exception@IAT ]
sub_414be2
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4c ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414c00
lea ecx [ ebp - 0x54 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414c09
lea ecx [ ebp - 0x38 ]
jmp [ std::exception::~exception@IAT ]
sub_414c12
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414c30
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414c50
mov ecx [ ebp - 0x10 ]
jmp sub_402580
sub_414c58
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414c80
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414c89
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_4024e0
sub_414c94
mov ecx [ ebp - 0x10 ]
add ecx 0x30
jmp sub_402520
sub_414c9f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414cc0
mov ecx [ ebp - 0x10 ]
jmp sub_401210
sub_414cc8
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414cd4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414cf0
mov ecx [ ebp - 0x10 ]
jmp sub_407b80
sub_414cf8
mov ecx [ ebp - 0x10 ]
add ecx 0x28
jmp sub_4012f0
sub_414d03
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414d20
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_414d2b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414d50
lea ecx [ ebp - 0x64 ]
jmp sub_407b80
sub_414d58
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x58 ]
mov ecx [ edx - 0x5c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414d80
mov esi [ ebp + 0x4 ]
jmp sub_4070f0
sub_414d88
mov ecx [ ebp + 0x4 ]
add ecx 0x20
jmp sub_4012f0
sub_414d93
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414db0
mov ecx [ ebp - 0x10 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414db9
mov ecx [ ebp - 0x10 ]
add ecx 0x20
jmp sub_402490
sub_414dc4
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414de0
lea ecx [ ebp - 0x30 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_414de9
lea ecx [ ebp - 0x44 ]
jmp sub_401430
sub_414df1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x44 ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_40808e
add eax 0x4
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414e20
mov ecx [ ebp - 0x10 ]
jmp sub_406240
sub_414e28
mov ecx [ ebp - 0x10 ]
add ecx 0x3c
jmp sub_4012f0
sub_414e33
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414e50
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x18 ]
push ecx
call sub_404180
add esp 0x8
retn
sub_414e61
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414e80
lea esi [ ebp - 0x50 ]
jmp sub_4070f0
sub_414e88
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x48 ]
mov ecx [ edx - 0x4c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414eb0
mov eax [ rw-data ]
and eax 0xfffffffe
mov [ rw-data ] eax
retn
sub_414ebe
lea ecx [ ebp - 0xec ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414eca
lea ecx [ ebp - 0x108 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414ed6
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10c ]
mov ecx [ edx - 0x110 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414f00
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414f20
mov ecx [ ebp + 0x4 ]
jmp sub_401330
sub_414f28
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414f50
lea ecx [ ebp - 0x18 ]
jmp ??1bad_cast@std@@UAE@XZ
sub_414f58
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414f80
lea ecx [ ebp - 0x18 ]
jmp ??1bad_cast@std@@UAE@XZ
sub_414f88
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414fb0
lea ecx [ ebp - 0x30 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_414fb9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_40808e
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_414fe0
lea ecx [ ebp - 0x30 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_414fe9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_40808e
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415010
mov eax [ ebp - 0x2c ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x2c ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp sub_402490
sub_415029
lea ecx [ ebp - 0x28 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_415032
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415050
mov ecx [ ebp - 0x10 ]
jmp sub_401320
sub_415058
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415080
lea ecx [ ebp - 0x20 ]
jmp sub_4022a0
sub_415088
lea ecx [ ebp - 0x30 ]
jmp sub_4022a0
sub_415090
mov eax [ ebp - 0x34 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x34 ] 0xfffffffe
mov ecx [ ebp + 0x4 ]
jmp sub_402100
sub_4150a9
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x38 ]
mov ecx [ edx - 0x3c ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4150d0
lea ecx [ ebp - 0x1c ]
jmp sub_402490
sub_4150d8
mov eax [ ebp + 0x4 ]
push eax
call sub_4021e0
retn
sub_4150e2
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x1c ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415100
mov ecx [ ebp + 0x4 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_415109
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415130
lea ecx [ ebp - 0x54 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_415139
lea ecx [ ebp - 0x38 ]
jmp [ std::exception::~exception@IAT ]
sub_415142
mov ecx [ ebp - 0x58 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41514b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x64 ]
mov ecx [ edx - 0x68 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415170
mov ecx [ ebp - 0x10 ]
jmp sub_401500
sub_415178
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x10 ]
add eax 0x8
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ecx [ ebp - 0x14 ]
jmp j_sub_4028e0
sub_41519f
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4151c0
lea ecx [ ebp + 0x180 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4151cc
lea ecx [ ebp + 0x19c ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4151d8
lea ecx [ ebp + 0x1b8 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4151e4
lea ecx [ ebp + 0x164 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4151f0
lea ecx [ ebp - 0x94 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4151fc
lea ecx [ ebp + 0x114 ]
jmp sub_401fa0
sub_415207
lea ecx [ ebp - 0x48 ]
jmp sub_402080
sub_41520f
lea ecx [ ebp - 0x78 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_415218
lea ecx [ ebp - 0x5c ]
jmp sub_402a40
sub_415220
lea eax [ ebp - 0x124 ]
jmp sub_4020f0
sub_41522b
lea ecx [ ebp - 0xbc ]
jmp sub_402100
sub_415236
lea ecx [ ebp - 0x78 ]
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_41523f
lea ecx [ ebp - 0x20 ]
jmp sub_402a40
sub_415247
lea ecx [ ebp - 0x48 ]
jmp sub_401500
sub_41524f
lea eax [ ebp - 0x48 ]
test eax eax
je r-xdata
mov [ ebp - 0x510 ] 0x0
lea ecx [ ebp - 0x40 ]
mov [ ebp - 0x510 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x510 ]
jmp j_sub_4028e0
sub_41527d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x130 ]
xor ecx eax
call sub_40808e
mov ecx [ edx + 0x3ec ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4152b0
mov ecx [ ebp - 0x10 ]
jmp sub_404910
sub_4152b8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4152e0
lea ecx [ ebp - 0x8c ]
jmp sub_406240
sub_4152eb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x84 ]
mov ecx [ edx - 0x88 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415310
lea ecx [ ebp - 0x38 ]
jmp sub_401400
sub_415318
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415340
mov esi [ ebp + 0x4 ]
jmp sub_4060b0
sub_415348
mov ecx [ ebp + 0x4 ]
add ecx 0x74
jmp sub_4012f0
sub_415353
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415370
lea esi [ ebp - 0x84 ]
jmp sub_4060b0
sub_41537b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xf4 ]
mov ecx [ edx - 0xf8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4153a0
lea ecx [ ebp - 0x30 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_4153a9
lea ecx [ ebp - 0x50 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_4153b2
lea ecx [ ebp - 0xb0 ]
jmp sub_404910
sub_4153bd
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xb4 ]
xor ecx eax
call sub_40808e
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_4153f0
lea ecx [ ebp - 0x24 ]
jmp sub_402a40
sub_4153f8
lea ecx [ ebp - 0x14 ]
jmp sub_401320
sub_415400
lea ecx [ ebp - 0x24 ]
jmp sub_402a40
sub_415408
lea ecx [ ebp - 0x48 ]
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
sub_415411
lea ecx [ ebp - 0xa8 ]
jmp sub_404910
sub_41541c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0xac ]
xor ecx eax
call sub_40808e
mov eax r--data
jmp __CxxFrameHandler3
sub_415440
push r--data
mov ecx rw-data
call [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
push ??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
call sub_408161
pop ecx
retn
sub_415460
push 0x0
mov ecx rw-data
call [ std::codecvt<wchar_t,char,int32_t>::codecvt<wchar_t,char,int32_t>@IAT ]
push sub_4154b0
mov [ rw-data ] r--data
call sub_408161
pop ecx
retn
??1?$basic_string@_WU?$char_traits@_W@std@@V?$allocator@_W@2@@std@@QAE@XZ
mov ecx rw-data
jmp [ std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::~basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >@IAT ]
??1?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@QAE@XZ
mov ecx rw-data
jmp [ std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> >::~basic_string<char,struct std::char_traits<char>,class std::allocator<char> >@IAT ]
sub_4154b0
mov eax [ std::locale::facet::`vbtable'@IAT ]
mov [ rw-data ] eax
retn
sub_4154c0
mov ecx rw-data
jmp sub_403eb0
