sub_401114
push ebx
add esp 0xfffffff4
mov ebx rw-data
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ esp ] eax
push 0x644
push 0x0
call sub_4010d4
mov [ esp + 0x8 ] eax
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ rw-data ]
mov [ eax ] edx
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov edx eax
add edx edx
mov ecx [ esp + 0x8 ]
lea edx [ ecx + edx * 8 + 0x4 ]
mov [ esp + 0x4 ] edx
mov edx [ esp + 0x4 ]
mov ecx [ ebx ]
mov [ edx ] ecx
mov edx [ esp + 0x4 ]
mov [ ebx ] edx
inc eax
cmp eax 0x64
jne r-xdata
mov eax [ esp ]
add esp 0xc
pop ebx
retn
sub_4011a0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
call sub_401114
mov [ esp + 0x4 ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebx ]
mov [ esp ] eax
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
mov [ eax + 0x4 ] ebx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ esp + 0x4 ]
mov [ ebx ] eax
mov al 0x1
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4011fc
add esp 0xfffffff8
mov edx [ eax + 0x4 ]
mov [ esp ] edx
mov edx [ eax ]
mov [ esp + 0x4 ] edx
mov edx [ esp ]
mov ecx [ esp + 0x4 ]
mov [ edx ] ecx
mov edx [ esp + 0x4 ]
mov ecx [ esp ]
mov [ edx + 0x4 ] ecx
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
pop ecx
pop edx
retn
sub_401230
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov esi eax
mov edi esp
mov eax [ esi ]
mov [ edi ] eax
mov eax [ edx ]
mov [ ebx ] eax
mov eax [ edx + 0x4 ]
mov [ ebx + 0x4 ] eax
add eax [ ebx + 0x4 ]
cmp edx eax
jne r-xdata
mov eax [ edi ]
call sub_4011fc
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov [ ebx ] eax
mov eax [ edi ]
mov eax [ eax + 0xc ]
add [ ebx + 0x4 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
cmp esi [ edi ]
jne r-xdata
mov eax [ edi ]
call sub_4011fc
mov eax [ edi ]
mov eax [ eax + 0xc ]
add [ ebx + 0x4 ] eax
mov eax [ edi ]
mov eax [ eax ]
mov [ esp + 0x4 ] eax
mov edx [ edi ]
mov edx [ edx + 0x8 ]
mov ecx edx
mov ebp [ edi ]
add ecx [ ebp + 0xc ]
mov eax [ ebx ]
cmp ecx eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_4011a0
test al al
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ ebx ] eax
sub_4012b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] eax
mov esi esp
mov eax [ esi ]
mov [ esp + 0xc ] eax
mov eax [ esi ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ esi ]
cmp eax [ esp + 0xc ]
jne r-xdata
mov ebx eax
mov edi [ esi ]
add ebx [ edi + 0xc ]
mov edi ecx
add edi [ edx + 0x4 ]
cmp ebx edi
jb r-xdata
mov ecx [ edx ]
mov eax [ esi ]
mov eax [ eax + 0x8 ]
cmp ecx eax
jb r-xdata
xor eax eax
cmp ecx eax
jne r-xdata
mov ebx eax
mov edi [ esi ]
add ebx [ edi + 0xc ]
mov edi ecx
add edi [ edx + 0x4 ]
cmp ebx edi
jne r-xdata
mov eax [ edx + 0x4 ]
mov ecx [ esi ]
add [ ecx + 0x8 ] eax
mov eax [ edx + 0x4 ]
mov edx [ esi ]
sub [ edx + 0xc ] eax
mov eax [ esi ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ebx [ edx ]
add ebx [ edx + 0x4 ]
mov [ esp + 0x4 ] ebx
mov edi [ esi ]
mov edi [ edi + 0x8 ]
mov ebp [ esi ]
add edi [ ebp + 0xc ]
sub edi ebx
mov [ esp + 0x8 ] edi
sub ecx eax
mov eax [ esi ]
mov [ eax + 0xc ] ecx
lea edx [ esp + 0x4 ]
mov eax [ esi ]
call sub_4011a0
test al al
jne r-xdata
mov eax [ edx + 0x4 ]
mov edx [ esi ]
sub [ edx + 0xc ] eax
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4011fc
jmp r-xdata
xor eax eax
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40137c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4011a0
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call VirtualAlloc
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4013e0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call VirtualAlloc
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call VirtualAlloc
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4011a0
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401458
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov edi ecx
mov esi esp
mov [ esp + 0x8 ] 0xffffffff
xor ecx ecx
mov [ esp + 0xc ] ecx
mov [ esp + 0x10 ] eax
add edx [ esp + 0x10 ]
mov [ esp + 0x14 ] edx
mov eax [ rw-data ]
mov [ esi ] eax
jmp r-xdata
mov eax rw-data
cmp eax [ esi ]
jne r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov [ esp + 0x4 ] eax
mov eax [ esi ]
mov ebx [ eax + 0x8 ]
cmp ebx [ esp + 0x10 ]
jb r-xdata
xor eax eax
mov [ edi ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
mov [ esi ] eax
mov eax ebx
mov edx [ esi ]
add eax [ edx + 0xc ]
cmp eax [ esp + 0x14 ]
ja r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov [ edi + 0x4 ] eax
cmp ebx [ esp + 0x8 ]
jae r-xdata
mov eax [ esi ]
mov ebp [ eax + 0x8 ]
mov eax [ esi ]
add ebp [ eax + 0xc ]
cmp ebp [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] ebx
push 0x8000
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x8 ]
push eax
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] ebp
mov eax [ esi ]
call sub_4011fc
mov [ rw-data ] 0x1
sub_401520
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebx ecx
mov [ esp ] edx
lea esi [ esp + 0x8 ]
lea edi [ esp + 0x4 ]
lea ebp [ esp + 0xc ]
mov edx eax
mov ecx edx
and ecx 0xfffff000
mov [ esp + 0x10 ] ecx
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x10 ]
mov [ ebx ] eax
mov eax [ esp + 0x14 ]
sub eax [ esp + 0x10 ]
mov [ ebx + 0x4 ] eax
mov eax [ rw-data ]
mov [ edi ] eax
jmp r-xdata
mov eax rw-data
cmp eax [ edi ]
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov [ esi ] eax
mov eax [ edi ]
mov eax [ eax + 0xc ]
add eax [ esi ]
mov [ ebp ] eax
mov eax [ esi ]
cmp eax [ esp + 0x10 ]
jae r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp ]
cmp eax [ esp + 0x14 ]
jbe r-xdata
mov eax [ esp + 0x10 ]
mov [ esi ] eax
mov eax [ esi ]
cmp eax [ ebp ]
jae r-xdata
mov eax [ esp + 0x14 ]
mov [ ebp ] eax
mov eax [ edi ]
mov eax [ eax ]
mov [ edi ] eax
push 0x4
push 0x1000
mov eax [ ebp ]
sub eax [ esi ]
push eax
mov eax [ esi ]
push eax
call VirtualAlloc
test eax eax
jne r-xdata
xor eax eax
mov [ ebx ] eax
jmp r-xdata
sub_4015e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp ] edx
lea esi [ esp + 0x8 ]
lea edi [ esp + 0x4 ]
lea ebx [ esp + 0xc ]
mov edx eax
mov ebp edx
add ebp 0xfff
and ebp 0xfffff000
mov [ esp + 0x10 ] ebp
add edx [ esp ]
and edx 0xfffff000
mov [ esp + 0x14 ] edx
mov eax [ esp + 0x10 ]
mov [ ecx ] eax
mov eax [ esp + 0x14 ]
sub eax [ esp + 0x10 ]
mov [ ecx + 0x4 ] eax
mov eax [ rw-data ]
mov [ edi ] eax
jmp r-xdata
mov eax rw-data
cmp eax [ edi ]
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov [ esi ] eax
mov eax [ edi ]
mov eax [ eax + 0xc ]
add eax [ esi ]
mov [ ebx ] eax
mov eax [ esi ]
cmp eax [ esp + 0x10 ]
jae r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
cmp eax [ esp + 0x14 ]
jbe r-xdata
mov eax [ esp + 0x10 ]
mov [ esi ] eax
mov eax [ esi ]
cmp eax [ ebx ]
jae r-xdata
mov eax [ esp + 0x14 ]
mov [ ebx ] eax
mov eax [ edi ]
mov eax [ eax ]
mov [ edi ] eax
push 0x4000
mov eax [ ebx ]
sub eax [ esi ]
push eax
mov eax [ esi ]
push eax
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_40169c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebx edx
mov esi eax
mov edi esp
mov ebp rw-data
add esi 0x3fff
and esi 0xffffc000
cmp ebp [ edi ]
jne r-xdata
mov eax [ edi ]
cmp esi [ eax + 0xc ]
jg r-xdata
mov edx ebx
mov eax esi
call sub_40137c
cmp [ ebx ] 0x0
je r-xdata
mov eax [ edi ]
mov eax [ eax ]
mov [ edi ] eax
mov ecx ebx
mov eax [ edi ]
mov eax [ eax + 0x8 ]
mov edx esi
call sub_401520
cmp [ ebx ] 0x0
je r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx ebx
mov eax ebp
call sub_401230
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x4 ]
mov edx [ edi ]
add [ edx + 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov edx [ edi ]
sub [ edx + 0xc ] eax
mov eax [ edi ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp ]
mov [ edi ] eax
jmp r-xdata
lea ecx [ esp + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_401458
xor eax eax
mov [ ebx ] eax
mov eax [ edi ]
call sub_4011fc
jmp r-xdata
sub_401744
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov [ esp ] ecx
mov edi edx
mov ebx eax
lea esi [ esp + 0x4 ]
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebp [ esi ]
je r-xdata
mov eax [ esi ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_4013e0
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ esi ]
cmp edi [ eax + 0xc ]
jle r-xdata
mov eax [ esi ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ esi ]
mov ebp [ eax + 0x8 ]
cmp ebx ebp
jne r-xdata
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax ebp
call sub_401230
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx edi
sub edx [ eax + 0xc ]
mov eax [ esi ]
mov eax [ eax + 0x8 ]
mov ecx [ esi ]
add eax [ ecx + 0xc ]
lea ecx [ esp + 0x8 ]
call sub_4013e0
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esi ]
cmp edi [ eax + 0xc ]
jg r-xdata
mov eax [ ebp ]
mov [ esi ] eax
jmp r-xdata
lea ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
call sub_401458
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax ebp
call sub_401230
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov ecx [ esp ]
mov eax ebp
mov edx edi
call sub_401520
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
call sub_401458
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
mov edx [ esi ]
add [ edx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
mov edx [ esi ]
sub [ edx + 0xc ] eax
mov eax [ esi ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ esi ]
call sub_4011fc
jmp r-xdata
sub_401888
push ebx
add esp 0xffffffe8
mov ebx ecx
lea ecx [ eax + 0x3fff ]
and ecx 0xffffc000
mov [ esp ] ecx
add edx eax
and edx 0xffffc000
mov [ esp + 0x4 ] edx
mov eax [ esp + 0x4 ]
cmp eax [ esp ]
jbe r-xdata
xor eax eax
mov [ ebx ] eax
mov ecx ebx
mov edx [ esp + 0x4 ]
sub edx [ esp ]
mov eax [ esp ]
call sub_4015e0
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax rw-data
call sub_401230
mov ebx [ esp + 0x8 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
lea ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax ebx
call sub_401458
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0xc ] eax
add esp 0x18
pop ebx
retn
lea edx [ esp + 0x8 ]
mov eax rw-data
call sub_4012b8
jmp r-xdata
sub_40191c
push ebp
mov ebp esp
push ecx
xor edx edx
push ebp
push sub_4019e4
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call InitializeCriticalSection
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_401198
mov eax rw-data
call sub_401198
mov eax rw-data
call sub_401198
push 0xff8
push 0x0
call sub_4010d4
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4019eb
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call LeaveCriticalSection
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov [ ebp - 0x4 ] rw-data
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_4019f4
push ebp
mov ebp esp
add esp 0xfffffff8
cmp [ rw-data ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_401ae8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push rw-data
call EnterCriticalSection
mov eax rw-data
cmp eax [ ebp - 0x8 ]
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call VirtualFree
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax rw-data
call sub_401198
mov eax rw-data
call sub_401198
mov eax rw-data
call sub_401198
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
push eax
call LocalFree
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push rw-data
call DeleteCriticalSection
retn
push rw-data
call LeaveCriticalSection
sub_401af4
push ebx
add esp 0xfffffff8
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov [ esp ] edx
mov edx [ eax + 0x8 ]
cmp edx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov [ eax + 0x4 ] edx
cmp eax [ esp ]
jne r-xdata
test edx edx
jns r-xdata
test edx edx
jns r-xdata
sar edx 0x2
mov ecx [ rw-data ]
mov ebx [ esp ]
mov [ ecx + edx * 4 - 0xc ] ebx
mov eax [ eax ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov [ eax + 0x4 ] edx
jmp r-xdata
add edx 0x3
sar edx 0x2
mov eax [ rw-data ]
xor ecx ecx
mov [ eax + edx * 4 - 0xc ] ecx
jmp r-xdata
add edx 0x3
pop ecx
pop edx
pop ebx
retn
sub_401b88
push ebx
push ecx
mov ecx esp
mov edx [ rw-data ]
mov [ ecx ] edx
jmp r-xdata
mov edx rw-data
cmp edx [ ecx ]
jne r-xdata
mov edx [ ecx ]
mov edx [ edx + 0x8 ]
cmp eax edx
jb r-xdata
mov [ rw-data ] 0x3
xor eax eax
mov [ ecx ] eax
mov edx [ ecx ]
mov edx [ edx ]
mov [ ecx ] edx
mov ebx [ ecx ]
add edx [ ebx + 0xc ]
cmp eax edx
jb r-xdata
mov eax [ ecx ]
pop edx
pop ebx
retn
sub_401bcc
push ebx
push ecx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
mov [ esp ] ebx
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov edx [ esp ]
mov [ edx ] 0x80000007
mov edx ecx
call sub_401dc8
pop edx
pop ebx
retn
pop edx
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov eax [ esp ]
mov [ eax ] ecx
sub_401c2c
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c08
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401c54
push ebx
push esi
push ecx
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
mov [ esp ] eax
mov eax [ esp ]
cmp esi [ eax + 0x8 ]
je r-xdata
mov eax [ esp ]
call sub_401af4
add ebx esi
mov [ rw-data ] 0x6
sub_401ccc
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add esi eax
add ebx eax
mov eax [ ebx ]
mov eax esi
pop edx
pop esi
pop ebx
retn
mov [ esp ] ebx
mov eax [ esp ]
call sub_401af4
mov eax [ esp ]
mov eax [ eax + 0x8 ]
add esi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d0c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov esi edx
mov ebp eax
xor ebx ebx
mov eax ebp
call sub_401b88
mov [ esp + 0x8 ] eax
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x8 ]
mov edi [ eax + 0x8 ]
mov eax edi
mov edx [ esp + 0x8 ]
add eax [ edx + 0xc ]
mov edx eax
lea ecx [ esi + ebp ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax ebp
sub eax edi
cmp eax 0xc
jge r-xdata
mov esi eax
sub esi ebp
mov ecx esp
mov edx esi
sub edx 0x4
lea eax [ ebp + 0x4 ]
call sub_401888
mov eax [ esp + 0x8 ]
mov edx ebp
sub edx [ eax + 0x8 ]
add edx esi
mov ecx esp
mov eax edi
call sub_401888
jmp r-xdata
mov edx edi
sub edx ebp
mov eax ebp
call sub_401bcc
mov edx [ esp + 0x8 ]
mov edx [ edx + 0x8 ]
mov ecx [ esp + 0x8 ]
add edx [ ecx + 0xc ]
mov eax edi
add eax [ esp + 0x4 ]
cmp edx eax
jbe r-xdata
mov edi [ esp ]
test edi edi
je r-xdata
mov edx esp
mov eax [ esp + 0x8 ]
call sub_4012b8
mov bl 0x1
lea edx [ esi + ebp ]
sub edx eax
call sub_401c2c
sub_401dc8
push ebx
push esi
add esp 0xfffffff4
mov ebx edx
mov esi eax
mov [ esp ] esi
mov eax [ esp ]
mov [ eax + 0x8 ] ebx
mov eax [ esp ]
add eax ebx
sub eax 0xc
mov [ eax + 0x8 ] ebx
cmp ebx 0x1000
jg r-xdata
cmp ebx 0x3c00
jl r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov [ eax ] edx
mov eax [ esp + 0x8 ]
mov edx [ esp ]
mov [ eax + 0x4 ] edx
mov edx ebx
mov eax esi
call sub_401d0c
test al al
jne r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
mov [ esp + 0x4 ] edx
cmp [ esp + 0x4 ] 0x0
jne r-xdata
add eax 0x3
add esp 0xc
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0x4 ]
mov edx [ esp ]
mov [ eax ] edx
mov eax [ esp + 0x8 ]
mov edx [ esp ]
mov [ eax + 0x4 ] edx
jmp r-xdata
mov edx [ rw-data ]
mov ecx [ esp ]
mov [ edx + eax * 4 - 0xc ] ecx
mov eax [ esp ]
mov edx [ esp ]
mov [ eax + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp ]
mov [ eax ] edx
jmp r-xdata
sub_401ec0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c08
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401f0c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401ec0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401230
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401c54
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401ccc
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401bcc
sub [ edi + 0x4 ] 0x4
sub_401f98
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_40169c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f0c
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fc4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_401744
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401f0c
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401ff8
push ecx
mov edx esp
xor ecx ecx
mov [ edx ] ecx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax [ edx ]
pop edx
retn
mov ecx [ rw-data ]
mov ecx [ ecx + eax * 4 - 0xc ]
mov [ edx ] ecx
cmp [ edx ] 0x0
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402030
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebx eax
lea esi [ esp + 0x8 ]
mov edi rw-data
mov ebp rw-data
mov eax [ esi ]
call sub_401af4
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov eax edx
sub eax ebx
cmp eax 0xc
jl r-xdata
mov eax [ edi ]
mov [ esi ] eax
mov eax [ esi ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jle r-xdata
mov ebx edx
mov eax [ esi ]
cmp eax [ edi ]
jne r-xdata
mov edx [ esi ]
add edx ebx
xchg edx eax
call sub_401dc8
jmp r-xdata
mov edx [ esi ]
mov [ edx + 0x8 ] ebx
mov eax [ esi ]
add eax ebx
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
and [ eax ] 0xfffffffe
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov eax [ esi ]
mov [ esp + 0x4 ] eax
mov eax ebx
or eax 0x2
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov eax [ esp + 0x4 ]
add eax 0x4
mov [ esp ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
mov edx [ esi ]
mov edx [ edx + 0x4 ]
mov [ esi ] edx
mov edx [ esi ]
cmp ebx [ edx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
mov eax [ esi ]
cmp eax [ edi ]
je r-xdata
cmp ebx 0x1000
jg r-xdata
mov eax [ esi ]
mov [ edi ] eax
jmp r-xdata
mov eax ebx
call sub_401f98
test al al
jne r-xdata
mov eax ebx
call sub_401ff8
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
cmp ebx [ ebp ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax [ rw-data ]
mov [ esi ] eax
mov eax [ esi ]
cmp ebx [ eax + 0x8 ]
jle r-xdata
sub [ ebp ] ebx
cmp [ ebp ] 0xc
jge r-xdata
mov eax [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov [ esp + 0x4 ] eax
add [ rw-data ] ebx
mov eax ebx
or eax 0x2
mov edx [ esp + 0x4 ]
mov [ edx ] eax
mov eax [ esp + 0x4 ]
add eax 0x4
mov [ esp ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
jmp r-xdata
add ebx [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402178
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_40191c
test al al
je r-xdata
xor edx edx
push ebp
push sub_402314
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call EnterCriticalSection
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402030
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
add eax 0x3
retn
push rw-data
call LeaveCriticalSection
mov eax [ rw-data ]
mov [ ebp - 0x14 ] eax
add [ rw-data ] ebx
mov eax ebx
or eax 0x2
mov edx [ ebp - 0x14 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_402ed0
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov edx [ ebp - 0x8 ]
add edx ebx
mov [ ebp - 0x14 ] edx
mov edx [ ebp - 0x14 ]
and [ edx ] 0xfffffffe
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x10 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov edx [ rw-data ]
mov ecx [ ebp - 0x10 ]
mov [ edx + eax * 4 - 0xc ] ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
or eax 0x2
mov edx [ ebp - 0x14 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_402ed0
jmp r-xdata
sub_402324
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4024eb
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_40191c
test al al
jne r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
sub eax 0x4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
test bl 0x2
jne r-xdata
push rw-data
call EnterCriticalSection
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
and ebx 0x7ffffffc
mov eax [ ebp - 0x8 ]
add eax ebx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x8 ]
sub eax 0xc
mov eax [ eax + 0x8 ]
cmp eax 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
test al 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test eax 0x80000003
je r-xdata
retn
push rw-data
call LeaveCriticalSection
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
and eax 0x7ffffffc
cmp eax 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_402ed0
jmp r-xdata
call sub_401ec0
mov edx [ ebp - 0x8 ]
sub edx eax
mov [ ebp - 0x10 ] edx
mov edx [ ebp - 0x10 ]
cmp eax [ edx + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
call sub_401af4
mov [ rw-data ] 0xa
jmp r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_401dc8
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
add ebx eax
mov eax [ ebp - 0x10 ]
call sub_401af4
sub_4024fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov ebx edx
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
sub eax 0x4
mov [ esp ] eax
mov eax [ esp ]
mov esi [ eax ]
and esi 0x7ffffffc
mov eax [ esp ]
add eax esi
mov [ esp + 0x4 ] eax
cmp esi ebx
jne r-xdata
mov ebx 0xc
cmp esi ebx
jle r-xdata
mov al 0x1
jmp r-xdata
mov edi ebx
sub edi esi
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov ebp esi
sub ebp ebx
mov edx [ esp + 0x4 ]
cmp edx [ rw-data ]
jne r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
test [ eax ] 0x2
jne r-xdata
cmp edi [ rw-data ]
jg r-xdata
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
test [ eax ] 0x2
jne r-xdata
sub [ rw-data ] ebp
add [ rw-data ] ebp
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test eax 0x80000000
je r-xdata
mov eax [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
mov edx [ esp + 0x8 ]
mov ebp [ edx + 0x8 ]
cmp edi ebp
jle r-xdata
call sub_401ec0
mov eax [ esp ]
add eax esi
mov [ esp + 0x4 ] eax
sub [ rw-data ] edi
add [ rw-data ] edi
cmp [ rw-data ] 0xc
jge r-xdata
cmp ebp 0xc
jl r-xdata
mov eax [ esp + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
add ebp [ eax + 0x8 ]
mov eax [ esp + 0x8 ]
call sub_401af4
mov eax ebx
sub eax esi
add [ rw-data ] eax
mov eax [ esp ]
mov eax [ eax ]
and eax 0x80000003
or ebx eax
mov eax [ esp ]
mov [ eax ] ebx
mov al 0x1
add [ rw-data ] ebp
sub [ rw-data ] ebp
mov ebx esi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax [ esp + 0x4 ]
mov [ esp + 0x4 ] eax
mov edx edi
mov eax [ esp + 0x4 ]
call sub_401fc4
test al al
je r-xdata
mov eax [ esp + 0x8 ]
call sub_401af4
sub ebp edi
cmp ebp 0xc
jl r-xdata
add eax ebp
mov [ esp + 0x4 ] eax
sub edi ebp
jmp r-xdata
mov eax ebx
sub eax esi
add [ rw-data ] eax
mov eax [ esp ]
mov eax [ eax ]
and eax 0x80000003
or ebx eax
mov eax [ esp ]
mov [ eax ] ebx
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov ebx esi
jmp r-xdata
mov eax [ esp ]
add eax ebx
mov [ esp + 0x4 ] eax
or ebp 0x2
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x4 ]
add eax 0x4
call sub_401c08
jmp r-xdata
mov eax [ esp ]
add eax esi
mov [ esp + 0x4 ] eax
jmp r-xdata
add ebx ebp
mov eax [ esp ]
add eax ebx
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
and [ eax ] 0xfffffffe
jmp r-xdata
mov eax [ esp ]
add eax ebx
mov edx ebp
call sub_401dc8
jmp r-xdata
sub_402700
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4027b9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_40191c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4024fc
test al al
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402178
mov [ ebp - 0x8 ] eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x8 ]
mov ecx ebx
xchg ecx eax
call sub_4028e0
mov eax ebx
call sub_402324
retn
push rw-data
call LeaveCriticalSection
sub_4027cc
push ebx
push ecx
mov ebx eax
test ebx ebx
jle r-xdata
xor eax eax
mov [ esp ] eax
mov eax ebx
call [ rw-data ]
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov al 0x1
call sub_4028c4
sub_4027fc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_4028c4
sub_40281c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_4028c4
mov [ ecx ] eax
mov al 0x2
jmp sub_4028c4
retn
mov [ ecx ] eax
retn
sub_402878
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_403d2c
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_40286c
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_4028e0
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402938
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_4028d0
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_4028d0
jmp r-xdata
sub_402990
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_4029b0
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402a84
cmp edx 0x1
jae r-xdata
push ecx
test eax eax
jne r-xdata
retn
mov ecx [ edx - 0x4 ]
test ecx ecx
jl r-xdata
mov eax [ edx - 0x8 ]
test eax eax
je r-xdata
xor edx edx
test eax eax
pop ecx
retn
mov [ ecx + eax ] edx
xor edx edx
cmp eax 0x1
pop ecx
retn
push edx
call sub_4027cc
pop edx
test eax eax
je r-xdata
xor edx edx
pop ecx
retn
push edi
mov ecx [ edx - 0x8 ]
mov edi eax
push eax
xor eax eax
shr ecx 0x2
[ edi ]
mov ecx [ edx - 0x8 ]
and ecx 0x3
[ edi ]
pop eax
pop edi
mov ecx [ edx - 0x4 ]
test ecx ecx
jl r-xdata
test eax eax
pop ecx
retn
mov [ ecx + eax ] edx
sub_402aec
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402b1c
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_402b8d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call RegQueryValueExA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_401068
retn
sub_402c14
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_402c50
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_402c64
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_402c84
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_402c64
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_402ce8
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_402be0
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_403d2c
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_402c50
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_402c14
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_402e14
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_402c84
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_402e4c
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_403d2c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_402bec
call sub_402bf8
sub_402ea0
call sub_403d2c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_402bec
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_402cac
jmp edx
sub_402ee8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_40286c
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403048
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403070
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi rw-data
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov ebx [ esi + 0xc ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_402ce8
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ esi + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + ebx * 8 + 0x4 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
test ebx ebx
jg r-xdata
call [ ebp - 0x8 ]
sub_4030e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_402ce8#2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + ebx * 8 ]
mov [ ebp - 0x8 ] eax
inc ebx
mov [ edi + 0xc ] ebx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp esi ebx
jg r-xdata
call [ ebp - 0x8 ]
sub_403190
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4031ec
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_40321c
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call MessageBoxA
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call GetStdHandle
push eax
call sub_401020
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call GetStdHandle
push eax
call sub_401020
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_4032a8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx rw-data
mov esi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403190
call sub_40321c
xor eax eax
mov [ rw-data ] eax
mov eax [ esi ]
mov [ esp ] eax
xor eax eax
mov [ esi ] eax
call [ esp ]
cmp [ esi ] 0x0
jne r-xdata
call sub_403070
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov edi [ ebx + 0x10 ]
test edi edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403048
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
mov eax edi
call sub_403a94
mov ebp [ ebx + 0x10 ]
mov esi [ ebp + 0x10 ]
cmp esi [ ebp + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test esi esi
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_4031ec
push esi
call sub_401038
mov eax [ ebx ]
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call ExitProcess
call [ rw-data ]
sub_4033a0
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4027fc
pop eax
sub_4033c4
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4027cc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_4033f0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4033c4
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_4033a0
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028e0
sub_403420
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_403440
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_401060
pop ebp
retn 0x4
sub_40345c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4033a0
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_403558
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403420
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_403420
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_403558
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4033f0
jmp r-xdata
sub_4034e8
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4033f0
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_403518
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_4033f0
not ecx
sub_403558
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_4033a0
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4033c4
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40281c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028e0
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_403604
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_403628
test edx edx
je sub_4035ec
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_4035ec
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c4
retn
sub_403654
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_4035ec
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4039b8
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_403440
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_403440
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4039b8
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4036e0
jmp r-xdata
sub_4036e0
test ecx ecx
je sub_4035ec
push eax
push ecx
push edx
call sub_401088
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c4
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_403704
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4036e0
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_403740
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_4036e0
not ecx
sub_403788
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov ebp eax
mov eax edi
call sub_40377c
mov ebx eax
test ebx ebx
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp ]
call sub_40377c
mov esi eax
lea eax [ ebx + esi ]
call sub_4035c4
mov [ esp ] eax
test esi esi
jle r-xdata
mov ecx ebx
add ecx ecx
mov eax [ esp ]
lea edx [ eax + esi * 2 ]
mov eax edi
call sub_4028e0
mov eax ebp
mov edx [ esp ]
call sub_4035dc
mov ecx esi
add ecx ecx
mov edx [ esp ]
mov eax [ ebp ]
call sub_4028e0
sub_4037e8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp ecx
mov edi edx
mov [ esp ] eax
mov eax edi
call sub_40377c
mov ebx eax
mov eax ebp
call sub_40377c
mov esi eax
test ebx ebx
jne r-xdata
lea eax [ esi + ebx ]
call sub_4035c4
mov [ esp + 0x4 ] eax
mov ecx ebx
add ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4028e0
mov ecx esi
add ecx ecx
mov eax [ esp + 0x4 ]
lea edx [ eax + ebx * 2 ]
mov eax ebp
call sub_4028e0
mov eax [ esp ]
mov edx [ esp + 0x4 ]
call sub_4035dc
test esi esi
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403850
push ebx
push esi
push edx
push eax
mov ebx edx
xor eax eax
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
mov ecx [ esp + edx * 4 + 0x10 ]
test ecx ecx
je r-xdata
shr eax 0x1
call sub_4035c4
push eax
mov esi eax
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028e0
mov eax [ esp + ebx * 4 + 0x14 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
call sub_4035dc
pop edx
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
sub_403898
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_40391c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_40377c
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_4036e0
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_403968
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
shr ecx 0x1
push edi
mov edx [ esi - 0x4 ]
shr edx 0x1
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov ax [ esi ]
add esi 0x2
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
shr eax 0x1
mov ecx ebx
jmp r-xdata
sub_4039b8
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax esi
mov edx [ esp ]
call sub_4035dc
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4035c4
mov [ esp ] eax
mov eax [ esi ]
call sub_40377c
test eax eax
jle r-xdata
cmp ebx eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx [ esp ]
mov eax [ esi ]
call sub_4028e0
mov eax ebx
sub_403a00
mov edx [ eax ]
test edx edx
je r-xdata
retn
push eax
mov ecx [ edx - 0x4 ]
shr ecx 0x1
push ecx
push edx
call sub_401088
pop edx
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c4
mov [ edx ] eax
sub_403a28
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_402ce8#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_403a94
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_403b0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403b14
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
jmp r-xdata
sub_403b18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push j_sub_402e14#8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_403518
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_4029b0
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403b85
lea eax [ ebp - 0x10 ]
call sub_4033a0
retn
xor ebx ebx
sub_403b8c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_403bd6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403bdd
retn
mov eax rw-data
call sub_402938
mov eax rw-data
call sub_402938
mov eax rw-data
call sub_402938
call sub_4019f4
sub_403be0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] RaiseException
mov [ rw-data ] RtlUnwind
mov [ rw-data ] 0x2
mov [ rw-data ] sub_403a20
call sub_402aec
test al al
je r-xdata
call sub_402be0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_4010b0
mov [ rw-data ] eax
call GetVersion
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402b1c
call GetThreadLocale
call sub_403b18
mov [ rw-data ] eax
call GetVersion
and eax 0xff
cmp ax 0x4
jbe r-xdata
call GetThreadLocale
call sub_403b18
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call GetCurrentThreadId
mov [ rw-data ] eax
sub_403ce8
push ebx
call sub_403ce0
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_403cd4
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403394
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403394
sub_403d2c
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_403ce8
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_403d78
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call GetModuleHandleA
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_403d6c
mov edx rw-data
mov eax ebx
call sub_403150
pop ebx
retn
sub_403dbc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_403de1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403de8
retn
sub_403df4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_403e19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403e20
retn
sub_403ff4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402930
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExW
mov esi eax
mov eax ebx
call sub_402920
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_40404c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_404071
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404078
retn
sub_404084
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_402e14#7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4040b0
retn
sub_4040bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4040e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4040e8
retn
sub_40425c
push ebx
push esi
add esp 0xfffffff4
mov esi eax
call InitCommonControls
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov ebx eax
mov [ esp ] ebx
test ebx ebx
je r-xdata
push r-xdata
call LoadLibraryW
mov [ rw-data ] eax
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x8
mov [ esp + 0x8 ] esi
lea eax [ esp + 0x4 ]
push eax
call [ esp + 0x4 ]
sub_404310
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa ] 0x0
je r-xdata
mov edi [ ebx + 0x10 ]
test edi edi
je r-xdata
mov edx ebx
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
call sub_4062fc
xor eax eax
mov [ ebx + 0x10 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp [ edi + 0x1c ] 0x0
jg r-xdata
mov esi [ edi + 0x1c ]
sub esi 0x2
mov eax edi
mov edx esi
call sub_4043c8
mov [ ebp - 0x8 ] eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x10 ]
call sub_4043c8
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x10 ]
mov ecx 0x2
mov edx esi
call sub_4063f0
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
sub_4043dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x18 ] edi
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x99 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
dec [ eax + 0x99 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
push 0xffffffeb
push ebx
call GetWindowLongW
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ eax + 0x28 ] ebx
mov eax [ rw-data ]
push eax
push 0xffffffeb
push ebx
call SetWindowLongW
xor eax eax
mov [ rw-data ] eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
push ebx
call DefWindowProcW
mov ebx eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x99 ] 0x0
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x98 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4062fc
jmp r-xdata
sub_4044d0
push ebx
push esi
push ecx
mov esi eax
mov bl [ rw-data ]
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
mov eax [ rw-data ]
mov [ esp ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ esp ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ esp ]
call sub_404308
test bl bl
jne r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ esp ]
call sub_4062fc
mov eax [ esp ]
call sub_4062fc
mov eax [ esp ]
call sub_4075b8
push 0x0
push 0x0
push 0x10
mov eax [ esp + 0xc ]
push eax
call sub_407c10
sub_404554
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov ecx esi
xor edx edx
call sub_406614
mov eax esi
call sub_40655c
mov [ ebx + 0x21 ] eax
pop esi
pop ebx
retn
sub_40459c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_402e14#9
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
lea edx [ ebx + 0x4d ]
mov ecx 0x20
call sub_403740
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_403898
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40461e
lea eax [ ebp - 0x4 ]
call sub_4035ec
retn
lea eax [ ebx + 0x4d ]
xor ecx ecx
mov edx 0x20
call sub_402990
mov eax esi
call sub_40377c
push eax
mov eax esi
call sub_40376c
mov edx eax
lea eax [ ebx + 0x4d ]
pop ecx
call sub_405d50
mov eax ebx
call sub_4065b8
sub_404650
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
shr ecx 0x1
shr ecx 0x1
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
inc eax
sub_404670
push ecx
jmp r-xdata
mov dx [ eax ]
test dx dx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
cmp dx 0x20
jbe r-xdata
mov [ esp ] eax
mov eax [ esp ]
pop edx
retn
cmp [ eax + 0x2 ] 0x22
jne r-xdata
add eax 0x2
add eax 0x4
jmp r-xdata
sub_4046a0
push ebx
add esp 0xfffffff8
mov [ esp ] eax
mov ebx esp
mov eax [ ebx ]
call sub_404670
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebx ]
mov dx [ eax ]
cmp dx 0x20
ja r-xdata
cmp dx 0x22
jne r-xdata
mov eax [ ebx ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
add [ ebx ] 0x2
add [ ebx ] 0x2
jmp r-xdata
mov eax [ ebx ]
mov ax [ eax ]
test ax ax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x0
je r-xdata
cmp ax 0x22
jne r-xdata
add [ ebx ] 0x2
jmp r-xdata
add [ ebx ] 0x2
sub_4046fc
push ebp
mov ebp esp
add esp 0xfffffde8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x218 ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_404800
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
call GetCommandLineW
mov [ edi ] eax
push 0x20a
lea eax [ ebp - 0x212 ]
push eax
push 0x0
call GetModuleFileNameW
mov ecx eax
lea edx [ ebp - 0x212 ]
mov eax esi
call sub_4036e0
jmp r-xdata
push esi
lea eax [ ebp - 0x218 ]
mov edx [ ebp - 0x8 ]
call sub_403704
mov eax [ ebp - 0x218 ]
mov ecx [ edi ]
sub ecx [ ebp - 0x8 ]
sar ecx 0x1
jns r-xdata
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_404807
lea eax [ ebp - 0x218 ]
call sub_4035ec
retn
mov edx 0x1
call sub_40391c
mov eax [ esi ]
call sub_40377c
cmp eax 0x2
jl r-xdata
adc ecx 0x0
mov eax [ edi ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax [ esi ]
cmp [ eax ] 0x22
jne r-xdata
mov eax [ edi ]
call sub_404670
mov [ edi ] eax
mov eax [ edi ]
mov [ ebp - 0x8 ] eax
mov eax [ edi ]
call sub_4046a0
mov [ edi ] eax
test ebx ebx
je r-xdata
mov eax [ esi ]
call sub_40377c
mov edx [ esi ]
cmp [ edx + eax * 2 - 0x2 ] 0x22
jne r-xdata
push esi
mov eax [ esi ]
call sub_40377c
mov ecx eax
sub ecx 0x2
mov eax [ esi ]
mov edx 0x2
call sub_40391c
sub_404810
push ebx
mov ebx eax
mov eax ebx
call sub_40376c
push eax
call GetFileAttributesW
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop ebx
retn
test al 0x10
je r-xdata
mov al 0x1
pop ebx
retn
sub_404834
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push 0x20019
push 0x0
mov eax esi
call sub_40376c
push eax
push ebx
call RegOpenKeyExW
test eax eax
je r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
sub_404864
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_40376c
push eax
push ebx
call RegCreateKeyExW
test eax eax
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
sub_4048a4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0xfffffff8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
push eax
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_40376c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
call RegQueryValueExW
test eax eax
sete al
pop ebp
retn
sub_4048e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] eax
mov eax ebx
call sub_4035ec
cmp [ ebp - 0xc ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
push ebp
call sub_4048a4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax eax
call sub_4027cc
mov [ ebp - 0x14 ] eax
push ebp
call sub_4048a4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027fc
mov eax ebx
mov edx [ ebp - 0x14 ]
call sub_403704
sub_404948
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_40377c
inc eax
add eax eax
push eax
mov eax esi
call sub_40376c
push eax
push 0x1
push 0x0
mov eax edi
call sub_40376c
push eax
push ebx
call RegSetValueExW
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_404994
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4049ed
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_40375c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404834
test eax eax
setne bl
test eax eax
je r-xdata
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4049f4
lea eax [ ebp - 0x4 ]
call sub_4035ec
retn
call sub_404988
sub_404a14
push ebx
push esi
mov esi eax
mov edx [ r-xdata ]
xor eax eax
call sub_4062ec
mov ebx eax
lea edx [ ebx + 0x1c ]
mov eax esi
mov ecx 0x20
call sub_4028e0
lea eax [ ebx + 0x1c ]
mov [ ebx + 0x18 ] eax
mov eax ebx
pop esi
pop ebx
retn
sub_404aa0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4049fc
mov esi eax
mov edx edi
mov eax ebx
call sub_404a08
mov eax ebx
call sub_404a10
push eax
call SetEndOfFile
cmp edi esi
jbe r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_404a08
sub_404ad8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax rw-data
call sub_404a14
mov [ esp ] eax
mov eax [ esp ]
mov edx [ rw-data ]
mov [ eax + 0x28 ] edx
mov eax [ esp ]
mov [ eax + 0x2c ] sub_404a78
mov eax [ esp ]
mov [ eax + 0x24 ] sub_404aa0
mov edx esi
mov eax ebx
call sub_4066f4
mov edx [ esp ]
mov [ edx + 0x40 ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_404b24
push ebp
mov ebp esp
push eax
mov eax 0x2
add esp 0xfffff004
push eax
dec eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax edi
mov edx esi
call sub_403628
mov eax [ ebx + 0x19 ]
call sub_40376c
push eax
mov eax esi
call sub_40376c
push eax
mov eax [ ebp - 0x4 ]
call sub_40376c
push eax
mov eax [ ebx + 0x1d ]
call sub_40376c
push eax
call WritePrivateProfileStringW
mov [ ebp - 0x2004 ] 0x0
mov eax [ ebx + 0x19 ]
call sub_40376c
push eax
push 0x1000
lea eax [ ebp - 0x2004 ]
push eax
mov eax esi
call sub_40376c
push eax
mov eax [ ebp - 0x4 ]
call sub_40376c
push eax
mov eax [ ebx + 0x1d ]
call sub_40376c
push eax
call GetPrivateProfileStringW
test eax eax
je r-xdata
mov eax edi
call sub_4035ec
jmp r-xdata
mov eax edi
lea edx [ ebp - 0x2004 ]
mov ecx 0x1000
call sub_403740
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_404be8
push ebx
push esi
mov esi eax
mov edx [ r-xdata ]
xor eax eax
call sub_4062ec
mov ebx eax
lea eax [ ebx + 0x19 ]
mov edx esi
call sub_403628
mov eax ebx
pop esi
pop ebx
retn
sub_404c24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov cl [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4067b4
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xbe ] 0x1
mov eax esi
or eax 0x4000000
or eax 0x2000000
mov edx [ ebp - 0x8 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x8 ]
mov [ eax + 0x59 ] 0x1
test esi 0x10000000
setne al
mov edx [ ebp - 0x8 ]
mov [ edx + 0x52 ] al
mov eax esi
and eax 0x10000
test eax eax
setne al
mov edx [ ebp - 0x8 ]
mov [ edx + 0x53 ] al
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
push esi
mov esi edi
lea edi [ eax + 0x204 ]
mov ecx 0x16
[ edi ] [ esi ]
pop esi
mov eax [ ebp - 0x8 ]
mov dl [ r-xdata ]
mov [ eax + 0xd0 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x110 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x129
mov edx [ ebx + 0x125 ]
add edx [ ebx + 0x141 ]
mov [ eax ] edx
mov edx [ ebx + 0x125 ]
add edx [ ebx + 0x139 ]
mov [ eax + 0x4 ] edx
mov edx [ eax ]
add edx 0x40
mov [ eax + 0x8 ] edx
mov edx [ eax + 0x4 ]
add edx 0x40
mov [ eax + 0xc ] edx
mov eax ebx
call sub_407618
inc [ eax + 0x54 ]
mov eax ebx
call sub_407618
mov eax [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x54 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x3c ]
mov [ eax + 0x3c ] edx
and esi 0x10000
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x34 ] 0xff7fffff
mov eax [ ebp - 0x8 ]
or [ eax + 0x38 ] 0x200
movzx eax [ rw-data ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x9d ] eax
inc [ rw-data ]
mov edx sub_4058dc
mov eax [ ebp - 0x8 ]
call sub_405e1c
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
call sub_407618
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x16f ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x16f ] edx
sub_404dac
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push 0x0
push rw-data
mov edx r-xdata
mov ecx 0x5000018c
mov eax ebx
call sub_404c24
mov [ esp ] eax
mov eax [ esp ]
inc [ eax + 0xbf ]
mov eax [ esp ]
mov [ eax + 0x4ed ] 0x1
mov eax [ esp ]
add eax 0x129
mov edx [ eax + 0x4 ]
add edx 0x16
mov [ eax + 0xc ] edx
mov eax [ esp ]
mov edx esi
call sub_4070d8
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_404e14
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edi esp
push 0x0
push rw-data
mov edx r-xdata
mov ecx 0x56000007
mov eax ebx
call sub_404c24
mov [ edi ] eax
mov eax [ edi ]
or [ eax + 0x38 ] 0x10000
mov eax [ edi ]
mov edx esi
call sub_4070d8
mov eax [ edi ]
add eax 0x129
mov edx [ eax ]
add edx 0x64
mov [ eax + 0x8 ] edx
mov edx [ eax + 0x4 ]
add edx 0x64
mov [ eax + 0xc ] edx
mov eax [ edi ]
mov [ eax + 0x139 ] 0x16
mov eax [ edi ]
mov [ eax + 0x13d ] 0x2
mov eax [ edi ]
mov [ eax + 0x141 ] 0x2
mov eax [ edi ]
mov [ eax + 0x145 ] 0x2
mov eax [ edi ]
mov [ eax + 0x53 ] 0x0
mov eax [ edi ]
mov [ eax + 0x691 ] 0x1
mov edx sub_40697c
mov eax [ edi ]
call sub_405e1c
mov eax [ edi ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_404ec4
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
push 0x0
push rw-data
mov edx sub_404f28
mov ecx 0x5000018c
mov eax esi
call sub_404c24
mov [ esp ] eax
mov eax [ esp ]
add eax 0x129
mov edx [ eax ]
add edx 0x64
mov [ eax + 0x8 ] edx
mov edx [ eax + 0x4 ]
add edx 0x64
mov [ eax + 0xc ] edx
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov edx [ esp ]
or [ edx + 0x34 ] eax
mov eax [ esp ]
or [ eax + 0x38 ] 0x10000
mov eax [ esp ]
mov [ eax + 0x59 ] 0x1
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_404f28
push ebx
add [ eax + eax + 0x41 ] dl
add [ eax + eax + 0x49 ] dl
add [ ebx ] al
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor eax eax
mov [ ebp - 0x8 ] eax
push ebx
call GetParent
mov edi eax
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0xffffffeb
push edi
call GetWindowLongW
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call DefWindowProcW
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] esi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x8 ]
call sub_407618
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x8 ]
call [ rw-data ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_405e80
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp esi 0x7
jne r-xdata
cmp esi 0x100
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0xc ]
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x154 ] 0x0
je r-xdata
mov [ ebp - 0x2c ] ebx
push rw-data
push ebx
call GetPropW
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0x10 ] 0x9
jne r-xdata
cmp esi 0x101
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x2c ]
mov edi [ rw-data ]
mov eax [ edi + 0x156 ]
call [ edi + 0x152 ]
test al al
jne r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CallWindowProcW
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x16f ] edx
cmp esi 0x102
jne r-xdata
sub esi 0x100
jne r-xdata
cmp esi 0x102
jne r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x154 ] 0x0
je r-xdata
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x2c ]
mov esi [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
call [ esi + 0xf5 ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x1b
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x10b ] 0x0
je r-xdata
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x2c ]
mov edi [ ebp - 0xc ]
mov eax [ edi + 0x156 ]
call [ edi + 0x152 ]
test al al
jne r-xdata
push 0x0
push 0x0
push 0x157
mov eax [ ebp - 0x8 ]
push eax
call sub_407c10
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xd
jne r-xdata
mov esi [ ebp - 0x8 ]
xor ecx ecx
mov edx [ ebp + 0x10 ]
mov eax [ ebp - 0x8 ]
call [ esi + 0x10b ]
test al al
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax [ ebp - 0x8 ]
push eax
call sub_407c10
cmp [ ebp + 0x10 ] 0x1b
jne r-xdata
jmp r-xdata
lea ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x2c ]
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
call [ ebx + 0xf5 ]
jmp r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x182 ]
push eax
push 0x14e
mov eax [ ebp - 0x8 ]
push eax
call sub_407c10
sub_405184
push ebx
push esi
push 0x5
mov eax [ eax + 0x28 ]
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push 0xfffffffc
push ebx
call SetWindowLongW
mov esi eax
push esi
push rw-data
push ebx
call SetPropW
push 0x2
push ebx
call GetWindow
mov ebx eax
test ebx ebx
jne r-xdata
sub_4051c4
push ebx
push esi
mov esi rw-data
push 0x5
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push esi
push ebx
call GetPropW
test eax eax
je r-xdata
push 0x2
push ebx
call GetWindow
mov ebx eax
test ebx ebx
jne r-xdata
push esi
push ebx
call RemovePropW
sub_4051fc
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ edi + 0x4 ]
cmp esi 0x132
jb r-xdata
mov eax [ edi + 0x4 ]
cmp eax 0xbd32
jb r-xdata
cmp esi 0x138
ja r-xdata
cmp [ edi + 0x4 ] 0xb005
jne r-xdata
cmp eax 0xbd38
ja r-xdata
mov eax [ edi + 0xc ]
push eax
mov eax [ edi + 0x8 ]
push eax
add esi 0xbc00
push esi
push ebp
call sub_407c10
mov edx [ esp ]
mov [ edx ] eax
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x4 ] 0x2
jne r-xdata
mov eax ebp
call sub_405e80
test al al
je r-xdata
cmp [ ebp + 0x14a ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x28 ]
call sub_4051c4
mov eax [ edi + 0x8 ]
call sub_403fe8
dec ax
je r-xdata
sub eax 0xbd34
jne r-xdata
push 0x0
push 0xf0000
push 0xb005
mov eax [ ebp + 0x28 ]
push eax
call PostMessageW
jmp r-xdata
sub ax 0x6
je r-xdata
push 0x2
mov eax [ edi + 0x8 ]
push eax
call SetBkMode
mov eax [ ebp + 0x115 ]
call sub_40655c
push eax
mov eax [ edi + 0x8 ]
push eax
call SetBkColor
mov eax ebp
call [ rw-data ]
mov edx [ esp ]
mov [ edx ] eax
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x181 ] 0x1
mov eax ebp
call sub_407b68
mov [ ebp + 0x182 ] eax
mov eax ebp
call [ ebp + 0x17d ]
jmp r-xdata
dec ax
je r-xdata
mov [ ebp + 0x181 ] 0x0
cmp [ ebp + 0x2ff ] 0x0
je r-xdata
jmp r-xdata
mov edx ebp
mov eax [ ebp + 0x301 ]
call [ ebp + 0x2fd ]
jmp r-xdata
sub_405338
push ecx
mov [ eax + 0xc0 ] 0x1
mov edx [ eax + 0x4d ]
mov [ esp ] edx
cmp [ esp ] 0x0
je r-xdata
pop edx
retn
mov edx sub_406b70
call sub_405e1c
mov edx sub_406b44
mov eax [ esp ]
call sub_405e1c
sub_405368
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xff
call sub_40425c
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_404c24
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405338
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4053b0
push ebx
push esi
push edi
push ebp
add esp 0xfffff7fc
mov ebx eax
mov eax ebx
call sub_403544
mov esi eax
mov eax ebx
call sub_403544
cmp eax 0x400
jge r-xdata
push 0x0
push 0x0
push esi
mov ebp ebx
push ebp
push 0x0
push 0x0
call MultiByteToWideChar
mov edi eax
push edi
push 0x0
call SysAllocStringLen
mov [ esp ] eax
push edi
mov eax [ esp + 0x4 ]
push eax
push esi
push ebp
push 0x0
push 0x0
call MultiByteToWideChar
push 0x400
lea eax [ esp + 0x8 ]
push eax
push esi
mov eax ebx
call sub_40354c
push eax
push 0x0
push 0x0
call MultiByteToWideChar
push eax
lea eax [ esp + 0x8 ]
push eax
call SysAllocStringLen
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
add esp 0x804
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40543c
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
pop ebx
retn
cmp [ ebx + 0x173 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
mov eax ebx
xor edx edx
call sub_407134
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebx + 0x174 ] 0x1
jmp r-xdata
sub_405474
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x104 ] edx
mov [ ebp - 0x108 ] edx
mov edi eax
lea esi [ ebp - 0x100 ]
xor eax eax
push ebp
push sub_405776
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp [ edi + 0x4d ] 0x0
je r-xdata
cmp [ edi + 0x28 ] 0x0
je r-xdata
mov eax [ edi + 0x4d ]
call sub_40543c
test eax eax
je r-xdata
mov eax esi
xor ecx ecx
mov edx 0xd8
call sub_402990
push 0x7f00
push 0x0
call LoadCursorW
mov [ esi + 0xc8 ] eax
mov eax [ rw-data ]
mov [ esi + 0xc0 ] eax
mov eax [ edi + 0x48 ]
mov [ esi + 0xb4 ] eax
mov eax [ edi + 0x30 ]
mov [ esi + 0xb0 ] eax
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_405810
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x104 ]
call sub_403530
mov eax [ ebp - 0x104 ]
call sub_4053b0
push eax
lea eax [ esi + 0x30 ]
push eax
call lstrcpyW
xor eax eax
mov [ esi + 0x2c ] eax
mov eax [ rw-data ]
mov [ esi + 0x28 ] eax
mov eax [ edi + 0x9d ]
mov [ esi + 0x24 ] eax
mov eax edi
mov dl 0x1
call sub_40752c
mov [ esi + 0x20 ] eax
mov eax [ edi + 0x135 ]
sub eax [ edi + 0x12d ]
mov [ esi + 0x1c ] eax
test eax eax
jne r-xdata
cmp [ edi + 0x174 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40577d
lea eax [ ebp - 0x108 ]
call sub_4035ec
lea eax [ ebp - 0x104 ]
call sub_4033a0
retn
mov eax [ edi + 0x131 ]
sub eax [ edi + 0x129 ]
mov [ esi + 0x18 ] eax
test eax eax
jne r-xdata
mov [ esi + 0x1c ] 0x80000000
mov eax edi
call sub_407544
mov eax edi
call sub_407544
mov eax edi
mov dl 0x1
call sub_407134
mov [ edi + 0x174 ] 0x0
jmp r-xdata
mov eax [ edi + 0x12d ]
mov [ esi + 0x14 ] eax
mov eax [ edi + 0x129 ]
mov [ esi + 0x10 ] eax
cmp [ edi + 0xbe ] 0x0
jne r-xdata
mov [ esi + 0x18 ] 0x80000000
mov bl 0x1
jmp r-xdata
mov eax [ edi + 0x34 ]
mov [ esi + 0xc ] eax
mov eax [ edi + 0x5a9 ]
call sub_40376c
mov [ esi + 0x8 ] eax
lea eax [ esi + 0x30 ]
mov [ esi + 0x4 ] eax
mov eax [ edi + 0x38 ]
mov [ esi ] eax
mov eax [ edi + 0x101 ]
test eax eax
je r-xdata
test [ edi + 0xc1 ] 0x3
jne r-xdata
cmp [ edi + 0x48 ] 0x0
jne r-xdata
lea edx [ esi + 0xb0 ]
push edx
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoW
mov eax [ esi + 0x28 ]
mov [ esi + 0xc0 ] eax
mov eax [ esi + 0xb0 ]
and eax 0xffffbf1f
or eax 0x0
mov [ esi + 0xb0 ] eax
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0xb4 ]
mov [ edi + 0x48 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0xc0 ]
push eax
call sub_403f04
cmp eax 0x1
sbb eax eax
inc eax
test al al
jne r-xdata
test [ esi + 0xf ] 0x40
jne r-xdata
mov [ rw-data ] edi
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x10 ]
push eax
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x18 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x24 ]
push eax
mov eax [ esi + 0xc0 ]
push eax
mov eax [ esi + 0x2c ]
push eax
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_403ff4
mov ebx eax
mov [ edi + 0x28 ] ebx
push 0x0
push 0x10002
push 0x128
push ebx
call SendMessageW
xor eax eax
mov [ rw-data ] eax
push edi
push 0xffffffeb
mov eax [ edi + 0x28 ]
push eax
call SetWindowLongW
cmp [ edi + 0xbe ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ esi + 0xd4 ] eax
mov [ esi + 0xb4 ] sub_4043dc
lea eax [ esi + 0xb0 ]
push eax
call RegisterClassW
test ax ax
je r-xdata
cmp [ edi + 0x5ee ] 0x0
je r-xdata
mov eax edi
call sub_4072dc
push eax
push 0x1
push 0x80
push edi
call sub_407c10
mov eax edi
call sub_405a2c
mov eax edi
call sub_405a2c
mov eax edi
call sub_407544
mov bl 0x1
mov eax edi
call [ edi + 0x5ee ]
sub_40578c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ ebx + 0x46 ] 0x0
jne r-xdata
mov eax edi
mov edx [ ebx + 0x5a9 ]
call sub_403628
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x28 ]
push eax
call GetWindowTextLengthW
mov esi eax
lea eax [ ebx + 0x5a9 ]
mov edx esi
call sub_4039b8
test esi esi
jle r-xdata
inc esi
push esi
mov eax [ ebx + 0x5a9 ]
call sub_40376c
push eax
mov eax [ ebx + 0x28 ]
push eax
call GetWindowTextW
sub_4057e4
push esi
mov esi eax
call sub_407354
mov dl [ esi + 0x36 ]
or dl [ esi + 0x53 ]
and al dl
je r-xdata
pop esi
retn
inc [ esi + 0x18a ]
push [ esi + 0x28 ]
call SetFocus
dec [ esi + 0x18a ]
mov al 0x1
sub_405810
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x101 ]
call sub_403704
cmp [ ebx + 0x106 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4037e8
sub_405850
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax [ ebx + 0x65 ]
mov edx esi
call sub_4043c8
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_40586c
cmp [ edx + 0x4 ] 0x7
jne r-xdata
xor eax eax
retn
push ebx
push esi
xor ebx ebx
inc ebx
xchg esi eax
mov ecx [ esi + 0x16f ]
jecxz r-xdata
dec ebx
xchg ecx eax
push eax
call sub_40453c
test al al
pop eax
je r-xdata
xchg ebx eax
pop esi
pop ebx
retn
cmp ecx esi
je r-xdata
mov ecx [ rw-data ]
jecxz r-xdata
push [ eax + 0x28 ]
call SetFocus
inc ebx
mov [ ecx + 0x16f ] esi
sub_4058b0
push ebx
push esi
push ecx
mov esi ecx
mov ebx eax
test edx edx
jle r-xdata
test esi esi
jle r-xdata
mov eax ebx
call sub_40772c
mov [ esp ] ebx
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_40770c
sub_4058dc
push ebx
xchg ebx eax
push esi
push edi
mov edi edx
mov edx [ edi + 0x4 ]
sub dx 0xbd32
cmp dx 0x6
ja r-xdata
cmp [ edi + 0x4 ] 0xb005
jne r-xdata
push ecx
mov eax [ ebx + 0x111 ]
call sub_40655c
xchg esi eax
push esi
push [ edi + 0x8 ]
call SetTextColor
cmp [ ebx + 0x14a ] 0x0
je r-xdata
xor eax eax
cmp [ edi + 0x4 ] 0x7
jne r-xdata
push ecx
movzx ecx [ edi + 0xa ]
cmp cx [ ebx + 0x20c ]
jne r-xdata
mov eax [ ebx + 0x115 ]
call sub_40655c
xchg esi eax
push 0x2
push [ edi + 0x8 ]
call SetBkMode
push esi
push [ edi + 0x8 ]
call SetBkColor
mov eax ebx
call [ rw-data ]
push 0x1
push [ edi + 0x8 ]
call SetBkMode
push 0x5
call GetStockObject
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ecx ] eax
mov eax ebx
call sub_407618
test eax eax
je r-xdata
lea eax [ ebx + 0x1e4 ]
cmp cx [ ebx + 0x20e ]
je r-xdata
cmp [ ebx + 0x18a ] 0x0
jg r-xdata
xchg ecx eax
pop eax
mov [ eax ] ecx
mov al 0x1
jmp r-xdata
push eax
mov ecx [ eax + 0x16f ]
jecxz r-xdata
mov ecx [ eax ]
jecxz r-xdata
lea eax [ ebx + 0xdc ]
cmp cx [ ebx + 0x210 ]
je r-xdata
xchg ebx eax
mov edx edi
call sub_407334
jmp r-xdata
mov eax ebx
mov dl 0x1
call sub_405d78
mov eax ebx
call sub_4075fc
jmp r-xdata
pop eax
mov [ eax + 0x16f ] ebx
xor eax eax
push edx
pop edx
cmp ecx ebx
je r-xdata
jmp r-xdata
mov eax [ eax + 0x4 ]
mov edx ebx
call ecx
lea eax [ ebx + 0x1dc ]
cmp cx [ ebx + 0x212 ]
jne r-xdata
xchg ecx eax
mov ecx [ eax + 0x673 ]
jecxz r-xdata
cmp cx [ ebx + 0x214 ]
jne r-xdata
xchg edx eax
mov eax [ edx + 0x677 ]
call ecx
pop ecx
mov eax ebx
call sub_405e24
sub_405a3c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4077b4
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ esi + 0x34 ]
and eax 0xff30ffff
cmp [ esi + 0xbe ] 0x0
jne r-xdata
cmp [ esi + 0xbe ] 0x0
jne r-xdata
mov edx esi
xchg edx eax
call sub_40706c
mov edx [ esi + 0x38 ]
and edx 0xfffefcfe
mov eax esi
call sub_40709c
or eax 0x80000000
cmp [ esi + 0x110 ] 0x0
je r-xdata
mov edx [ esi + 0x34 ]
or edx 0x40000
or edx 0x800000
or edx __dos_header
or edx 0xc00000
or edx 0x20000
or edx 0x10000
or edx 0x80000
mov eax esi
call sub_40706c
jmp r-xdata
cmp [ esi + 0x53 ] 0x0
je r-xdata
mov edx [ esi + 0x34 ]
or edx 0x800000
mov eax esi
call sub_40706c
jmp r-xdata
mov edx [ esi + 0x38 ]
or edx 0x200
mov eax esi
call sub_40709c
jmp r-xdata
cmp [ esi + 0xbe ] 0x0
je r-xdata
mov edx [ esi + 0x34 ]
and edx 0xfffeffff
mov eax esi
call sub_40706c
mov edx [ esi + 0x34 ]
or edx 0x10000
mov eax esi
call sub_40706c
jmp r-xdata
sub_405b24
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4077d4
test al al
jne r-xdata
xor eax eax
mov eax [ esi + 0x4 ]
cmp eax 0x24
jne r-xdata
cmp eax 0x84
jne r-xdata
mov edx esi
mov eax ebx
call sub_407334
mov [ edi ] eax
mov eax [ ebx + 0x581 ]
mov edx [ ebx + 0x585 ]
mov ecx [ esi + 0xc ]
mov [ esp ] ecx
mov ecx [ esp ]
mov [ ecx + 0x18 ] eax
mov eax [ esp ]
mov [ eax + 0x1c ] edx
mov eax [ esp ]
mov edx [ esp ]
mov ecx [ edx + 0x18 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x1c ]
mov [ eax + 0x24 ] ecx
mov al 0x1
jmp r-xdata
cmp eax 0x116
jne r-xdata
mov edx esi
mov eax ebx
call sub_407334
mov [ edi ] eax
cmp [ edi ] 0xa
jl r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4077d4
test al al
jne r-xdata
cmp [ edi ] 0x11
jg r-xdata
push 0x1
push 0xf000
push 0x0
mov eax [ ebx + 0x28 ]
push eax
call GetSystemMenu
push eax
call EnableMenuItem
xor eax eax
mov [ edi ] eax
mov al 0x1
jmp r-xdata
sub_405be4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
mov eax [ esp ]
call sub_4035ec
mov eax ebx
mov edx ebp
call sub_40791c
mov esi eax
mov eax ebx
mov edx esi
call sub_40792c
mov ebp eax
mov ax [ ebx + 0x21a ]
test ax ax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
movzx eax ax
push eax
push ebx
call sub_407c10
mov edi eax
test edi edi
je r-xdata
lea eax [ edi + 0x4 ]
add eax eax
call sub_4027cc
mov esi eax
lea eax [ edi + 0x1 ]
mov [ esi ] eax
mov ax [ ebx + 0x21c ]
test ax ax
je r-xdata
mov [ esi + edi * 2 ] 0x0
mov eax [ esp ]
mov edx esi
call sub_403704
mov eax esi
call sub_4027fc
push esi
push ebp
movzx eax ax
push eax
push ebx
call sub_407c10
sub_405c74
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x21e ] 0x0
je r-xdata
cmp [ ebx + 0x226 ] 0x0
je r-xdata
mov eax ebx
mov edx esi
call sub_40791c
mov edi eax
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_40791c
sub eax edi
mov esi eax
mov eax ebx
mov edx edi
call sub_405bdc
mov eax ebx
mov edx esi
call sub_4078c0
mov eax ebp
call sub_40376c
push eax
push 0x0
movzx eax [ ebx + 0x21e ]
push eax
push ebx
call sub_407c10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_407b68
mov edi eax
mov eax ebx
mov edx esi
call sub_406260
mov [ esp ] eax
mov eax ebx
mov edx esi
call sub_40793c
mov eax ebx
mov ecx ebp
mov edx esi
call sub_405d1c
mov eax ebx
mov edx edi
call sub_407b98
mov eax ebx
mov ecx [ esp ]
mov edx esi
call sub_406284
sub_405d1c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov si [ ebx + 0x228 ]
test si si
je r-xdata
or eax 0xffffffff
mov eax ebp
call sub_40376c
push eax
push edi
movzx eax si
push eax
push ebx
call sub_407c10
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_405d50
push ebx
test ecx ecx
jle r-xdata
pop ebx
retn
mov bx [ edx ]
mov [ eax ] bx
cmp [ edx ] 0x0
je r-xdata
add eax 0x2
add edx 0x2
dec ecx
test ecx ecx
jne r-xdata
test ecx ecx
jg r-xdata
mov bx [ edx ]
mov [ eax ] bx
sub_405d78
push ebx
push esi
push ecx
mov ebx eax
test dl dl
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x53 ] 0x0
je r-xdata
cmp [ ebx + 0xbe ] 0x0
je r-xdata
mov eax ebx
call sub_40543c
push eax
call SetForegroundWindow
mov eax ebx
call sub_407618
mov [ esp ] eax
mov eax [ esp ]
mov eax [ eax + 0x16f ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ eax + 0x16f ] ebx
cmp [ ebx + 0x669 ] 0x0
je r-xdata
cmp eax ebx
je r-xdata
mov eax ebx
call sub_40543c
push eax
call SetFocus
jmp r-xdata
mov eax [ ebx + 0x66b ]
call [ ebx + 0x667 ]
jmp r-xdata
cmp [ eax + 0x675 ] 0x0
je r-xdata
push 0x0
call SetFocus
mov esi eax
mov edx eax
mov eax [ esi + 0x677 ]
call [ esi + 0x673 ]
jmp r-xdata
sub_405e24
push ebx
cmp [ eax + 0x358 ] 0x0
je r-xdata
cmp [ eax + 0x1de ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x35a ]
call [ ebx + 0x356 ]
pop ebx
retn
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e0 ]
call [ ebx + 0x1dc ]
sub_405e60
push ebx
push ecx
mov ebx eax
push 0x0
xor eax eax
mov al dl
push eax
push 0x2005
push ebx
call sub_407c10
mov [ esp ] ebx
mov eax [ esp ]
pop edx
pop ebx
retn
sub_405e80
push ebx
push esi
mov esi eax
mov al [ esi + 0x52 ]
test al al
jne r-xdata
mov bl 0x1
cmp [ esi + 0x174 ] 0x0
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx [ esi + 0x4d ]
test edx edx
je r-xdata
cmp [ esi + 0x604 ] 0x0
jne r-xdata
cmp [ esi + 0x604 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax edx
call sub_407114
test bl bl
je r-xdata
mov ebx eax
jmp r-xdata
cmp [ esi + 0xbe ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x4d ]
call sub_405e80
test al al
jne r-xdata
mov ebx eax
mov al 0x1
sub_405ee4
push ebx
push esi
push ecx
mov esi ecx
mov ebx eax
mov eax ebx
call sub_40742c
mov eax ebx
mov edx esi
call sub_407450
mov [ esp ] ebx
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_405f08
push ebx
push esi
push edi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x15c ] 0x0
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx ebx
mov eax [ esi + 0x15e ]
call [ esi + 0x15a ]
test al al
jne r-xdata
add esp 0xc
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov [ esp + 0x8 ] edx
mov edx [ esp + 0x8 ]
cmp [ edx + 0xba ] 0x0
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x4 ]
cmp eax 0x100
je r-xdata
mov edx [ esp + 0x8 ]
mov edx [ edx + 0x16f ]
mov [ esp + 0x8 ] edx
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov edx [ ebx + 0x8 ]
cmp edx 0xd
je r-xdata
cmp eax 0x101
jne r-xdata
cmp [ ebx + 0x8 ] 0xd
jne r-xdata
cmp edx 0x1b
jne r-xdata
xor eax eax
cmp [ ebx + 0x8 ] 0x1b
jne r-xdata
mov eax [ esp + 0x8 ]
cmp [ eax + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0xd
jne r-xdata
mov eax [ esp + 0x8 ]
cmp [ eax + 0x1a9 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1a5 ]
call sub_405e80
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
cmp [ eax + 0x1ad ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1a9 ]
call sub_405e80
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1a5 ]
call sub_407354
test al al
je r-xdata
cmp [ ebx + 0x4 ] 0x100
jne r-xdata
mov eax [ esp + 0x8 ]
cmp [ eax + 0x16f ] 0x0
je r-xdata
cmp [ esi + 0x1ad ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1a9 ]
call sub_407354
test al al
je r-xdata
mov eax [ esp + 0x8 ]
cmp [ eax + 0x16f ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
push eax
push 0x20
mov eax [ ebx + 0x4 ]
push eax
mov eax [ esp + 0x10 ]
push eax
call sub_407c10
xor eax eax
mov [ ebx + 0x8 ] eax
mov al 0x1
mov edx [ esp ]
xor ecx ecx
mov [ edx ] ecx
jmp r-xdata
mov eax [ esp + 0x4 ]
mov dl 0x1
call sub_405d78
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x16f ]
call sub_405e80
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1a9 ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x1a5 ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
mov edi [ eax + 0x16f ]
cmp [ edi + 0x1a4 ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x16f ]
cmp [ eax + 0xbb ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x16f ]
mov edx [ esp + 0x8 ]
cmp eax [ edx + 0x1a5 ]
jne r-xdata
cmp [ edi + 0x1ae ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x16f ]
call sub_4078f4
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ eax + 0x16f ]
mov [ esp + 0x4 ] eax
sub_406134
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx ecx
mov esi edx
mov edi eax
cmp esi 0xd
jne r-xdata
cmp esi 0x1b
jne r-xdata
mov [ edi + 0x1a3 ] bl
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ edi + 0x1a4 ] bl
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_407618
mov [ esp ] eax
cmp [ esp ] 0x0
je r-xdata
test bl bl
je r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx [ edx + 0x15a ]
mov [ eax + 0x152 ] ecx
mov ecx [ edx + 0x15e ]
mov [ eax + 0x156 ] ecx
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x15a ] edx
mov [ eax + 0x15e ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x152 ]
cmp eax sub_405f08
je r-xdata
cmp esi 0xd
jne r-xdata
mov [ esp + 0x4 ] edi
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ edx + 0x156 ] eax
mov [ edx + 0x152 ] sub_405f08
jmp r-xdata
mov eax [ rw-data ]
mov edx [ rw-data ]
mov ecx [ edx + 0x152 ]
mov [ eax + 0x15a ] ecx
mov ecx [ edx + 0x156 ]
mov [ eax + 0x15e ] ecx
cmp esi 0x1b
jne r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax + 0x1a5 ] edx
test bl bl
je r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
test bl bl
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
mov [ eax + 0x1a9 ] edx
mov edx [ edi + 0x34 ]
and edx 0xfffffffe
mov eax edi
call sub_40706c
jmp r-xdata
mov edx [ edi + 0x34 ]
or edx 0x1
mov eax edi
call sub_40706c
jmp r-xdata
sub_406260
push esi
xor ecx ecx
mov si [ eax + 0x220 ]
test si si
je r-xdata
mov eax ecx
pop esi
retn
push 0x0
push edx
movzx edx si
push edx
push eax
call sub_407c10
mov ecx eax
sub_4062bc
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ eax ]
mov esi edx
xor edx edx
inc ecx
je r-xdata
xchg edx eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lodsd [ esi ]
test eax eax
jge r-xdata
test bl 0x1
je r-xdata
not eax
test bl 0x1
je r-xdata
shr ebx 0x1
loop r-xdata
or edx eax
dec ebx
sub_40631c
push ebx
push edx
xchg ebx eax
mov eax [ ebx + 0x10 ]
test eax eax
jne r-xdata
mov ebx eax
xor edx edx
pop ecx
call sub_406444
xchg ebx eax
xor edx edx
mov ecx sub_4062fc
call sub_406444
pop ebx
retn
call sub_40438c
mov [ ebx + 0x10 ] eax
sub_406348
push ebx
xchg ebx eax
mov ecx [ ebx + 0x10 ]
jecxz r-xdata
pop ebx
retn
xchg ecx eax
push eax
call sub_406428
test eax eax
pop edx
xchg edx eax
jl r-xdata
push eax
and edx 0xfffffffe
xor ecx ecx
mov cl 0x2
call sub_4063f0
pop eax
mov ecx [ eax + 0x1c ]
inc ecx
loop r-xdata
lea eax [ ebx + 0x10 ]
call sub_4042f0
sub_4063c0
push edx
lea ecx [ eax + 0x1c ]
mov edx [ ecx ]
inc [ ecx ]
push edx
cmp edx [ eax + 0x20 ]
push eax
jl r-xdata
pop ecx
pop eax
pop edx
mov ecx [ ecx + 0x18 ]
mov [ ecx + eax * 4 ] edx
retn
mov ecx [ eax + 0x24 ]
test ecx ecx
jne r-xdata
add edx ecx
call sub_40638c
mov ecx edx
shr ecx 0x2
inc ecx
sub_4063f0
test ecx ecx
jle r-xdata
retn
cmp edx [ eax + 0x1c ]
jge r-xdata
push ebx
xchg ebx eax
lea eax [ ecx + edx ]
cmp eax [ ebx + 0x1c ]
jbe r-xdata
mov eax [ ebx + 0x18 ]
push [ ebx + 0x1c ]
sub [ ebx + 0x1c ] ecx
mov ebx edx
lea edx [ eax + edx * 4 ]
lea eax [ edx + ecx * 4 ]
add ebx ecx
pop ecx
sub ecx ebx
shl ecx 0x2
call sub_4028e0
pop ebx
mov ecx [ ebx + 0x1c ]
sub ecx edx
sub_406428
push edi
mov edi [ eax + 0x18 ]
mov ecx [ eax + 0x1c ]
push edi
dec eax
mov eax edx
[ edi ]
pop edx
je r-xdata
mov eax edi
stc
sbb eax edx
sar eax 0x2
pop edi
retn
mov edi edx
sub_406444
push ecx
push eax
push [ eax + 0x1c ]
push edx
call sub_4063c0
pop edx
pop eax
sub eax edx
shl eax 0x2
mov ecx eax
pop eax
mov eax [ eax + 0x18 ]
lea eax [ eax + edx * 4 ]
jl r-xdata
pop ecx
mov [ eax ] ecx
retn
push eax
lea edx [ eax + 0x4 ]
call sub_4028e0
pop eax
sub_406470
push ebx
xchg ebx eax
inc [ rw-data ]
mov eax [ ebx ]
mov [ rw-data ] eax
call sub_40453c
jmp r-xdata
movzx ecx [ rw-data ]
jecxz r-xdata
call WaitMessage
mov eax [ ebx ]
call sub_4075b8
mov ecx [ ebx ]
xchg ebx eax
pop ebx
jecxz r-xdata
retn
call sub_4044d0
sub_406514
mov eax sub_4076a0
mov [ rw-data ] eax
call sub_404544
mov [ eax + 0x8d ] sub_406514
mov [ eax + 0x18 ] 0x1
mov [ eax + 0x91 ] sub_404634
mov edx [ rw-data ]
mov [ eax + 0x2d ] edx
push eax
lea edx [ eax + 0x31 ]
mov eax rw-data
xor ecx ecx
mov cl 0x5c
call sub_4028e0
pop eax
retn
sub_40656c
test edx edx
jne r-xdata
push edi
mov edi edx
test eax eax
jne r-xdata
call sub_4062fc
xor eax eax
retn
cmp eax edi
je r-xdata
xchg edx eax
call [ eax + 0x8d ]
pop edi
retn
push ebx
xchg ebx eax
mov ecx [ ebx + 0x19 ]
jecxz r-xdata
mov eax ebx
call sub_4065b8
lea edx [ ebx + 0x2d ]
lea eax [ edi + 0x2d ]
mov ecx 0x60
call sub_4028e0
mov eax ebx
call sub_4065b8
cmp ecx [ edi + 0x19 ]
je r-xdata
xchg ebx eax
pop ebx
sub_4065b8
xor ecx ecx
xchg [ eax + 0x19 ] ecx
jecxz sub_4065cc
push eax
push ecx
call sub_4065cc
call DeleteObject
pop eax
mov ecx [ eax + 0x25 ]
jecxz r-xdata
retn
push eax
xchg edx eax
mov eax [ edx + 0x29 ]
call ecx
pop eax
sub_4065dc
push eax
cmp [ eax + 0x18 ] 0x1
je r-xdata
mov ecx [ eax + 0x19 ]
jecxz r-xdata
mov ecx [ eax + 0x31 ]
jecxz r-xdata
pop eax
call sub_40630c
retn
push ecx
call DeleteObject
push ecx
call DeleteObject
pop eax
push eax
sub_406624
push ebx
mov ecx [ ebx + 0x19 ]
inc ecx
loop r-xdata
mov eax [ ebx + 0x2d ]
call sub_40655c
cmp eax [ ebx + 0x21 ]
je r-xdata
xchg ecx eax
pop ebx
retn
mov ecx [ ebx + 0x1d ]
jecxz r-xdata
mov eax ebx
call sub_406604
push eax
call DeleteObject
mov eax [ ebx + 0x2d ]
call sub_40655c
mov [ ebx + 0x21 ] eax
xchg ebx eax
call [ eax + 0x91 ]
xchg ecx eax
lea edx [ ecx + 0x2d ]
lea eax [ ebx + 0x2d ]
mov ecx 0x60
call sub_404650
test al al
mov eax [ ebx + 0x1d ]
jne r-xdata
xchg ebx eax
mov ecx [ ebx + 0x19 ]
jecxz r-xdata
sub_406680
xor ecx ecx
push ecx
add esp 0xfffffff4
push ebx
lea ebx [ esp + 0x13 ]
push edx
cmp eax ecx
pushfd
jge r-xdata
mov cl 0xa
neg eax
dec ebx
xor edx edx
div ecx
add dl 0x30
mov [ ebx ] dl
test eax eax
jne r-xdata
popfd
jge r-xdata
pop eax
mov edx ebx
call sub_4034e8
pop ebx
add esp 0x10
retn
dec ebx
mov [ ebx ] 0x2d
sub_4066b8
xchg edx eax
xor eax eax
test edx edx
je r-xdata
retn
xor ecx ecx
mov cl [ edx ]
inc edx
cmp cl 0x2d
pushfd
je r-xdata
mov cl [ edx ]
inc edx
cmp cl 0x2b
jne r-xdata
popfd
jne r-xdata
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
jmp r-xdata
sub cl 0x30
cmp cl 0x9
ja r-xdata
neg eax
sub_4066f4
xor ecx ecx
push ecx
mov ecx edx
shr ecx 0x10
and cx 0x1fff
jne r-xdata
push ecx
mov cl dh
push ecx
push 0x0
mov cl dl
push ecx
mov dx 0x0
push edx
push eax
call CreateFileW
retn
mov cl 0x80
sub_406738
push ebp
push 0x0
mov ebp esp
push 0x0
push ebp
push ecx
push edx
push eax
call ReadFile
test eax eax
pop eax
jne r-xdata
pop ebp
retn
xor eax eax
sub_406754
push ebp
push ebp
mov ebp esp
push 0x0
push ebp
push ecx
push edx
push eax
call WriteFile
test eax eax
pop eax
jne r-xdata
pop ebp
retn
xor eax eax
sub_4067b4
push ebx
push esi
push edi
push ecx
push edx
mov esi eax
call sub_4067a4
xchg ebx eax
pop [ ebx + 0x101 ]
pop edx
test esi esi
je r-xdata
xchg ebx eax
pop edi
pop esi
pop ebx
retn
lea esi [ esi + 0x107 ]
lea edi [ ebx + 0x107 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lodsb [ esi ]
stosb [ edi ]
dec al
lodsb [ esi ]
je r-xdata
xchg edx eax
stosb [ edi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lodsd [ esi ]
xchg edx eax
xor eax eax
push edx
call sub_40656c
stosd [ edi ]
pop edx
xchg ecx eax
jecxz r-xdata
xor edx edx
lodsd [ esi ]
xchg edx eax
xor eax eax
push edx
call sub_40656c
stosd [ edi ]
pop edx
xchg ecx eax
jecxz r-xdata
mov [ ecx + 0x1d ] edx
mov [ ecx + 0x25 ] sub_407664
mov [ ecx + 0x29 ] ebx
mov eax ebx
mov edx ecx
call sub_407664
mov eax ebx
mov edx [ ebx + 0x119 ]
call sub_40631c
lodsd [ esi ]
add edi 0x4
lodsd [ esi ]
stosd [ edi ]
mov [ ecx + 0x1d ] edx
mov [ ecx + 0x25 ] sub_40767c
mov [ ecx + 0x29 ] ebx
mov eax ebx
mov edx ecx
call sub_40767c
mov eax ebx
mov edx [ ebx + 0x11d ]
call sub_40631c
sub_40685c
push ebx
push edx
mov edx rw-data
mov cl 0x1
call sub_4067b4
mov ebx eax
or [ ebx + 0x30 ] 0x8
mov edx sub_40586c
call sub_405e1c
mov edx sub_40697c
mov eax ebx
call sub_405e1c
pop edx
inc [ ebx + 0xbc ]
mov eax ebx
call sub_4070d8
dec [ ebx + 0xba ]
xchg ebx eax
pop ebx
retn
sub_4068a0
push ebx
push edx
push 0x0
push rw-data
mov edx rw-data
mov ecx 0x50015000
call sub_404c24
xchg ebx eax
inc [ ebx + 0x1ae ]
mov edx [ ebx + 0x12d ]
add edx 0x16
mov [ ebx + 0x135 ] edx
mov [ ebx + 0x58 ] 0x2
inc [ ebx + 0xbb ]
pop edx
mov eax ebx
call sub_4070d8
mov eax ebx
mov edx r-xdata
call sub_405e1c
xchg ebx eax
pop ebx
retn
sub_406938
push ebx
push eax
call sub_4068f0
xchg ebx eax
mov [ ebx + 0x34 ] 0x50034004
mov [ ebx + 0xf9 ] sub_406918
pop ecx
jecxz r-xdata
xchg ebx eax
pop ebx
retn
mov edx [ ebx + 0x9d ]
mov [ ecx + 0x179 ] edx
mov eax [ ecx + 0x175 ]
test eax eax
jne r-xdata
mov [ ecx + 0x175 ] edx
mov eax ebx
call sub_407890
sub_40697c
cmp [ edx + 0x4 ] 0x14
jne r-xdata
xor eax eax
retn
mov [ ecx ] 0x1
push ebx
push edi
mov ebx eax
mov edi [ edx + 0x8 ]
call sub_407544
cmp [ ebx + 0x14a ] 0x0
jne r-xdata
pop edi
pop ebx
push 0x2
push edi
call SetBkMode
mov eax [ ebx + 0x115 ]
call sub_40655c
push eax
push edi
call SetBkColor
xor eax eax
push eax
push eax
push eax
push edi
call SetBrushOrgEx
sub esp 0x10
push esp
push [ ebx + 0x28 ]
call GetClientRect
mov eax ebx
call [ rw-data ]
mov edx esp
push eax
push edx
push edi
call FillRect
add esp 0x10
sub_4069e8
push ebx
xchg ebx eax
push edx
mov eax esp
xor ecx ecx
mov cl 0xb
mov edx rw-data
call sub_4062bc
xchg ecx eax
pop eax
push eax
test al 0x8
jne r-xdata
or ecx 0x50810000
push 0x1
push rw-data
mov edx rw-data
xchg ebx eax
call sub_404c24
xchg ebx eax
lea ecx [ ebx + 0x129 ]
mov edx [ ecx ]
add edx 0x64
mov [ ecx + 0x8 ] edx
mov edx [ ecx + 0x4 ]
add edx 0x16
mov [ ecx + 0xc ] edx
pop eax
test al 0x8
mov dl 0xd
je r-xdata
and ecx 0xffcfffff
test ah 0x4
je r-xdata
add [ ecx + 0x8 ] 0x64
add [ ecx + 0xc ] 0xb2
mov dl 0x1
inc [ ebx + 0x1ae ]
mov [ ebx + 0xd0 ] dl
xchg ebx eax
pop ebx
retn
and dl 0xfe
sub_406a64
push ebx
push esi
mov ebx eax
call sub_4078f4
cmp eax 0x1
jge r-xdata
cmp eax 0x8
jle r-xdata
mov al 0x1
xor esi esi
push 0x5f
push esi
push esi
push 0x9e
push eax
mov eax ebx
call sub_40749c
pop ecx
inc ecx
imul ecx
inc eax
inc eax
push eax
mov eax ebx
call sub_407474
push eax
inc esi
xor eax eax
mov al 0x8
xor edx edx
push edx
push edx
push edx
push [ ebx + 0x28 ]
call SetWindowPos
dec esi
je r-xdata
mov ecx [ ebx + 0x2f5 ]
jecxz r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x2f9 ]
mov edx ebx
call ecx
sub_406ac8
push edx
push eax
push edx
mov eax esp
mov edx rw-data
xor ecx ecx
mov cl 0xa
call sub_4062bc
pop edx
xchg ecx eax
pop eax
push 0x1
push rw-data
mov edx rw-data
or ecx 0x50210200
test ecx 0x1
jne r-xdata
call sub_404c24
mov [ eax + 0x5ee ] sub_405184
mov [ eax + 0x17d ] sub_406a64
or [ eax + 0x30 ] 0x8
add [ eax + 0x131 ] 0x24
add [ eax + 0x135 ] 0xffffffd6
mov cl 0x1
pop edx
test dl 0x1
je r-xdata
or ecx 0x2
mov [ eax + 0xd0 ] cl
push eax
mov edx sub_4051fc
call sub_405e1c
pop eax
retn
mov cl 0x3
sub_406b44
cmp [ edx + 0x4 ] 0x4e
jne r-xdata
xor eax eax
retn
push ecx
push edx
mov ecx [ edx + 0xc ]
push 0xffffffeb
push [ ecx ]
call GetWindowLongW
pop edx
test eax eax
je r-xdata
pop ecx
mov ecx [ eax + 0x28 ]
mov [ edx ] ecx
pop ecx
jmp sub_407c30
sub_406b70
cmp [ edx + 0x4 ] 0x4e
jne r-xdata
xor eax eax
retn
push ebx
mov ebx [ edx + 0xc ]
mov edx [ ebx + 0x8 ]
xor ecx ecx
cmp edx 0xfffffffe
je r-xdata
mov [ eax + 0x16e ] cl
mov ecx [ eax + 0x162 ]
jecxz r-xdata
cmp edx 0xfffffffb
jne r-xdata
pop ebx
mov edx [ eax + 0x166 ]
jmp r-xdata
cmp edx 0xfffffff8
jne r-xdata
inc ecx
xchg edx eax
call ecx
pop ebx
mov al 0x1
retn
cmp edx 0xfffffffc
je r-xdata
mov ecx [ eax + 0xdc ]
jecxz r-xdata
mov ecx [ eax + 0x1e4 ]
jecxz r-xdata
cmp edx 0xfffffff9
jne r-xdata
mov edx [ eax + 0xe0 ]
jmp r-xdata
mov edx [ eax + 0x1e8 ]
sub_406bdc
push ebx
push edi
mov ebx eax
mov eax sub_405788
lea edi [ ebx + 0xed ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
lea edi [ ebx + 0x107 ]
stosd [ edi ]
mov [ ebx + 0x7d ] sub_4043dc
mov edx sub_404c0c
mov [ ebx + 0x204 ] edx
inc [ ebx + 0x105 ]
mov [ ebx + 0x115 ] 0x8000000f
mov [ ebx + 0x111 ] 0x8
mov [ ebx + 0x125 ] 0x2
inc [ ebx + 0x10f ]
inc [ ebx + 0x110 ]
dec [ ebx + 0x5c ]
mov [ ebx + 0x30 ] 0x20
mov [ ebx + 0x34 ] 0x16cf0000
inc [ ebx + 0x3a ]
dec [ ebx + 0x51 ]
lea edi [ ebx + 0x61 ]
mov ebx sub_40438c
call ebx
stosd [ edi ]
call ebx
stosd [ edi ]
pop edi
pop ebx
retn
sub_406c7c
push ebx
push esi
mov ebx eax
call sub_407618
xchg ecx eax
jecxz r-xdata
mov ecx [ ebx + 0x28 ]
jecxz r-xdata
mov edx ebx
xor edx [ ecx + 0x16f ]
jne r-xdata
mov eax ebx
call sub_404310
xor ecx ecx
cmp [ ebx + 0x97 ] cl
jne r-xdata
push 0x0
push ecx
call ShowWindow
mov [ ecx + 0x16f ] edx
pop esi
pop ebx
retn
inc [ ebx + 0x97 ]
xor eax eax
xchg [ ebx + 0x121 ] eax
call sub_4062fc
mov eax [ ebx + 0x5b5 ]
call sub_4062fc
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
push 0x0
movzx ecx [ ebx + 0x106 ]
jecxz r-xdata
mov ecx [ ebx + 0x41 ]
jecxz r-xdata
lea esi [ ebx + 0x5ad ]
mov dl 0x2
push [ ebx + 0x101 ]
push [ ebx + 0x28 ]
call IsWindow
test eax eax
je r-xdata
inc ecx
je r-xdata
dec dl
jne r-xdata
push ecx
xor eax eax
mov [ ebx + 0x28 ] eax
push 0x0
push 0xffffffeb
push [ ebx + 0x28 ]
call SetWindowLongW
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
cmp [ ebx + 0x45 ] 0x0
jne r-xdata
lodsd [ esi ]
xchg ecx eax
jecxz r-xdata
pop ecx
jecxz r-xdata
push [ ebx + 0x28 ]
call DestroyWindow
dec ecx
push ecx
call DestroyIcon
xor ecx ecx
xchg [ ebx + 0x86 ] ecx
jecxz r-xdata
xchg ecx eax
call sub_4027fc
jmp r-xdata
mov ecx [ ebx + 0x4d ]
jecxz r-xdata
push ecx
call DeleteObject
lea esi [ ebx + 0x61 ]
lodsd [ esi ]
call sub_4062fc
lodsd [ esi ]
call sub_4062fc
lea eax [ ebx + 0x5a9 ]
call sub_4035ec
xchg ebx eax
call sub_40630c
cmp [ ecx + 0x16f ] ebx
jne r-xdata
push ecx
mov eax [ ecx + 0x65 ]
mov edx ebx
call sub_4043b0
pop eax
mov edx ebx
call sub_406348
xor eax eax
mov [ ecx + 0x16f ] eax
sub_406da8
push ebx
mov ebx eax
movzx edx dl
push edx
call sub_407354
pop edx
cmp al dl
je r-xdata
pop ebx
retn
mov [ ebx + 0x51 ] dl
test edx edx
jne r-xdata
and [ ebx + 0x37 ] 0xf7
or [ ebx + 0x37 ] 0x8
jmp r-xdata
xchg ebx eax
call sub_4072c8
push edx
push ecx
call EnableWindow
mov ecx [ ebx + 0x28 ]
jecxz r-xdata
sub_406de0
push ebx
push esi
push edi
xchg esi eax
mov edi edx
xor eax eax
cmp eax [ edx ]
je r-xdata
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
cmp eax [ esi + 0x28 ]
jne r-xdata
mov ecx esi
call sub_406e87
mov ebx [ esi + 0xf1 ]
mov eax esi
call sub_406e93
mov eax esi
mov edx edi
push 0x0
mov ecx esp
call [ esi + 0x107 ]
test al al
pop eax
jne r-xdata
mov ecx [ rw-data ]
jecxz r-xdata
mov eax [ edx ]
mov [ esi + 0x28 ] eax
push eax
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ edi + 0x4 ]
cmp eax 0x10
jne r-xdata
cmp ecx esi
je r-xdata
pop eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp ax 0x2
jne r-xdata
cmp esi [ rw-data ]
je r-xdata
call sub_406e87
mov ecx esp
xchg esi eax
mov edx edi
call [ eax + 0xed ]
cmp ax 0x82
jne r-xdata
mov [ esi + 0x98 ] al
jmp r-xdata
push 0x0
call PostQuitMessage
jmp r-xdata
mov eax esi
call sub_407368
test al al
je r-xdata
cmp ax 0x5
jne r-xdata
xor eax eax
jmp r-xdata
xchg esi eax
mov edx edi
call sub_407334
jmp r-xdata
cmp ax 0x112
jne r-xdata
mov edx edi
mov eax esi
call sub_407334
push eax
mov ecx [ edi + 0x8 ]
mov [ esi + 0x47 ] cl
xchg esi eax
call [ rw-data ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp ax 0x7
jne r-xdata
mov eax [ edi + 0x8 ]
and al 0xf0
cmp ax 0xf020
jne r-xdata
mov edx eax
sub dx 0x132
cmp dx 0x6
ja r-xdata
mov eax esi
call sub_4057e4
test al al
je r-xdata
mov eax esi
call sub_407368
test al al
je r-xdata
cmp ax 0x111
jne r-xdata
push [ edi + 0xc ]
push [ edi + 0x8 ]
add ax 0xbc00
push eax
push [ edi + 0xc ]
call SendMessageW
jmp r-xdata
xor eax eax
inc [ esi + 0x18a ]
mov eax esi
mov edx edi
call sub_407334
dec [ esi + 0x18a ]
jmp r-xdata
cmp esi [ rw-data ]
je r-xdata
mov edx eax
sub dx 0x100
cmp dx 0x8
ja r-xdata
push 0xffffffeb
push [ edi + 0xc ]
call GetWindowLongW
test eax eax
je r-xdata
push 0x0
push 0xf020
push 0x112
mov eax [ rw-data ]
push [ eax + 0x28 ]
call PostMessageW
jmp r-xdata
call GetFocus
cmp eax [ esi + 0x2c ]
je r-xdata
push [ edi + 0xc ]
push [ edi + 0x8 ]
push 0xb005
push [ edi + 0xc ]
call SendMessageW
jmp r-xdata
push eax
mov ecx esp
mov edx edi
mov eax esi
call [ rw-data ]
test al al
jne r-xdata
cmp eax [ esi + 0x28 ]
pop eax
jne r-xdata
mov ecx esp
mov edx edi
mov eax esi
call [ esi + 0xf5 ]
test al al
push 0x11
call GetKeyState
xchg ebx eax
push 0x12
call GetKeyState
or eax ebx
js r-xdata
cmp [ edi + 0x4 ] 0x102
jne r-xdata
mov eax esi
call sub_407618
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x9
je r-xdata
mov ecx [ eax + 0x10b ]
jecxz r-xdata
xor eax eax
mov [ edi + 0x8 ] eax
jmp r-xdata
jmp r-xdata
mov ebx ecx
cmp [ edi + 0x4 ] 0x100
setne cl
cmp [ edi + 0x4 ] 0x104
setne ch
and cl ch
mov edx [ edi + 0x8 ]
mov eax esi
call ebx
test al al
je r-xdata
sub_406e93
test ebx ebx
jne r-xdata
push 0x0
mov edx edi
mov ecx esp
call ebx
test al al
pop eax
je r-xdata
retn
pop edx
jmp r-xdata
push eax
cmp [ rw-data ] 0x0
jne r-xdata
pop eax
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov ecx esp
xchg esi eax
mov edx edi
call [ eax + 0xed ]
sub_40706c
cmp edx [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] edx
mov ecx [ eax + 0x28 ]
jecxz r-xdata
push eax
push 0x37
xor eax eax
push eax
push eax
push eax
push eax
push eax
push ecx
push edx
push 0xfffffff0
push ecx
call SetWindowLongW
call SetWindowPos
pop eax
call sub_4072c8
sub_40709c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov ecx [ eax + 0x28 ]
jecxz r-xdata
push eax
push 0x37
xor eax eax
push eax
push eax
push eax
push eax
push eax
push ecx
push edx
push 0xffffffec
push ecx
call SetWindowLongW
call SetWindowPos
pop eax
call sub_4072c8
sub_4070d8
push ebx
xchg ebx eax
lea eax [ ebx + 0x5a9 ]
call sub_403628
mov ecx [ ebx + 0x28 ]
jecxz r-xdata
movzx ecx [ ebx + 0xbf ]
inc ecx
loop r-xdata
push [ ebx + 0x5a9 ]
push 0x0
push 0xc
push ecx
call sub_403f9c
xchg ebx eax
pop ebx
push [ eax + 0xfd ]
retn
mov eax ebx
call sub_4072c8
sub_407134
and [ eax + 0x37 ] 0xef
test dl dl
je r-xdata
mov [ eax + 0x52 ] dl
mov ecx [ eax + 0x28 ]
jecxz r-xdata
or [ eax + 0x37 ] 0x10
retn
push eax
je r-xdata
mov [ eax + 0x174 ] dl
push 0x0
push ecx
call ShowWindow
pop eax
call [ rw-data ]
retn
call [ rw-data ]
pop eax
push 0x5
push [ eax + 0x28 ]
call ShowWindow
sub_407174
push esi
push edi
lea esi [ eax + 0x129 ]
mov edi edx
push edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
xchg esi eax
mov ecx [ esi + 0x28 ]
jecxz r-xdata
pop edi
pop esi
retn
push edi
push ecx
call GetWindowRect
mov al [ esi + 0xbd ]
or al [ esi + 0xbe ]
je r-xdata
xchg edi esi
lea edi [ edi + 0x129 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ esi + 0x4d ]
test eax eax
je r-xdata
xor edx edx
push edx
push edx
mov ecx esp
push edx
push edx
mov edx esp
call sub_40726c
pop eax
pop eax
pop eax
neg eax
pop ecx
neg ecx
push ecx
push eax
push edi
call OffsetRect
sub_4071e4
push edi
mov edi eax
push esi
mov esi edx
call sub_4071d4
mov eax esi
mov edx esp
call sub_4062b0
test al al
jne r-xdata
add esp 0x10
pop esi
pop edi
retn
pop edx
pop ecx
pop eax
push eax
push ecx
push edx
sub eax edx
cmp edx [ esi ]
mov dl 0x0
je r-xdata
cmp ecx [ esi + 0x4 ]
je r-xdata
inc edx
or [ edi + 0xc1 ] dl
push eax
mov eax [ edi + 0x135 ]
sub eax ecx
push eax
push edi
lea edi [ edi + 0x129 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edi
pop edi
mov ecx [ edi + 0x28 ]
jecxz r-xdata
or dl 0x2
pop edx
pop eax
cmp [ edi + 0x4ed ] 0x0
je r-xdata
std
push 0x14
lodsd [ esi ]
lodsd [ esi ]
xchg edx eax
lodsd [ esi ]
xchg ecx eax
lodsd [ esi ]
sub edx eax
push edx
xchg edx eax
lodsd [ esi ]
cld
sub ecx eax
push ecx
push edx
push eax
push 0x0
push [ edi + 0x28 ]
call SetWindowPos
xchg edi eax
call sub_4072c8
sub_40726c
push esi
push edi
mov esi edx
mov edi ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ecx
mov ecx [ eax + 0x28 ]
jecxz r-xdata
pop ecx
pop edi
pop esi
retn
push ecx
call ClientToScreen
push ecx
sub_407288
push esi
xchg esi eax
push edx
push edx
lea eax [ esi + 0x129 ]
xor ecx ecx
mov cl 0x10
call sub_4028e0
mov eax esi
call sub_40543c
xchg ecx eax
jecxz r-xdata
pop edx
pop edx
lea esi [ esi + 0x139 ]
lodsd [ esi ]
add [ edx + 0x4 ] eax
lodsd [ esi ]
sub [ edx + 0xc ] eax
lodsd [ esi ]
add [ edx ] eax
lodsd [ esi ]
sub [ edx + 0x8 ] eax
pop esi
retn
push ecx
call GetClientRect
push edx
sub_4072dc
push ebx
xchg ebx eax
mov eax [ ebx + 0x41 ]
inc eax
je r-xdata
pop ebx
retn
dec eax
jne r-xdata
mov ecx [ rw-data ]
jecxz r-xdata
push r-xdata
push [ rw-data ]
call LoadIconW
cmp ecx ebx
je r-xdata
xchg ecx eax
call sub_4072dc
test eax eax
je r-xdata
xor edx edx
push edx
push edx
push edx
inc edx
push edx
push eax
call CopyImage
jmp r-xdata
mov [ ebx + 0x41 ] eax
sub_407368
xchg ecx eax
xor edx edx
mov eax [ rw-data ]
test eax eax
jne r-xdata
cmp [ rw-data ] dl
je r-xdata
cmp [ ecx + 0xbe ] al
jmp r-xdata
cmp ecx eax
push ecx
call sub_405850
pop ecx
sete al
retn
sub_407394
push ebx
push edi
xchg ebx eax
mov edi edx
mov ecx [ ebx + 0x4d ]
cmp edi ecx
je r-xdata
pop edi
pop ebx
retn
jecxz r-xdata
mov [ ebx + 0x4d ] edi
test edi edi
je r-xdata
push ecx
mov eax [ ecx + 0x65 ]
mov edx ebx
call sub_4043b0
pop eax
push eax
mov edx ebx
call sub_406348
pop eax
mov ecx [ eax + 0x634 ]
jecxz r-xdata
mov eax [ edi + 0x65 ]
mov edx ebx
call sub_4063c0
mov eax edi
mov edx ebx
call sub_40631c
mov ecx [ ebx + 0x28 ]
jecxz r-xdata
xor edx edx
call ecx
mov ecx [ edi + 0x634 ]
jecxz r-xdata
mov eax edi
call sub_40543c
push eax
push [ ebx + 0x28 ]
call SetParent
mov ecx [ ebx + 0x634 ]
jecxz r-xdata
mov eax edi
mov edx ebx
call ecx
xchg ebx eax
call sub_4072c8
mov eax edi
mov edx ebx
call ecx
sub_40742c
push edi
push edx
call sub_4071d4
pop edx
pop ecx
pop edi
sub edi edx
mov edx [ esp + 0x4 ]
add edi edx
push edi
push ecx
push edx
mov edx esp
call sub_4071e4
add esp 0x14
pop edi
retn
sub_407450
push esi
push edi
push edx
call sub_4071d4
pop edx
pop ecx
pop edi
pop esi
sub esi ecx
pop ecx
add esi ecx
push esi
push edi
push ecx
push edx
mov edx esp
call sub_4071e4
add esp 0x10
pop edi
pop esi
retn
sub_4074c8
push ebx
mov ebx eax
push edx
call sub_40543c
xchg ecx eax
pop edx
jecxz r-xdata
cmp edx [ ebx + 0x115 ]
je r-xdata
movzx ecx [ ebx + 0x258 ]
jecxz r-xdata
pop ebx
retn
mov [ ebx + 0x115 ] edx
xor ecx ecx
xchg [ ebx + 0x86 ] ecx
jecxz r-xdata
push edx
xchg edx eax
push ecx
call sub_40655c
pop ecx
push eax
push 0x0
push ecx
push ebx
call sub_407c10
pop edx
mov ecx [ ebx + 0x11d ]
jecxz r-xdata
push edx
push ecx
call DeleteObject
pop edx
xchg ebx eax
call sub_4072c8
xchg ecx eax
mov ecx edx
xor edx edx
call sub_406614
sub_40755c
push ebx
xchg ebx eax
add esp 0xffffffe0
mov edx esp
push 0x1
xor ecx ecx
push ecx
push ecx
push ecx
push edx
call PeekMessageW
test eax eax
je r-xdata
add esp 0x20
pop ebx
retn
mov edx [ esp + 0x4 ]
cmp dx 0x12
jne r-xdata
mov ecx [ ebx + 0x81 ]
jecxz r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov eax esp
push eax
push eax
call TranslateMessage
call DispatchMessageW
mov eax ebx
mov edx esp
call ecx
test al al
jne r-xdata
mov ax [ esp + 0x4 ]
test ax ax
setne al
sub_4075c4
push ebx
xchg ebx eax
sub esp 0x10
xchg edx eax
mov edx esp
push ecx
push eax
mov eax ebx
call sub_407174
pop ecx
jecxz r-xdata
pop ecx
jecxz r-xdata
add ecx [ esp + 0x4 ]
mov [ esp + 0xc ] ecx
mov eax ebx
mov edx esp
call sub_4071e4
add esp 0x10
xchg ebx eax
pop ebx
retn
add ecx [ esp + 0x4 ]
mov [ esp + 0xc ] ecx
sub_40762c
mov ecx [ eax + 0x119 ]
inc ecx
loop r-xdata
xchg ecx eax
retn
push eax
call sub_406514
pop edx
push edx
push eax
xchg edx eax
call sub_40631c
pop eax
pop edx
mov [ edx + 0x119 ] eax
mov ecx [ edx + 0x111 ]
mov [ eax + 0x2d ] ecx
mov [ eax + 0x25 ] sub_407664
mov [ eax + 0x29 ] edx
retn
sub_4076a0
push ebx
xchg ebx eax
mov ecx [ ebx + 0x119 ]
jecxz r-xdata
pop ebx
retn
xchg ecx eax
mov ecx [ ebx + 0x28 ]
jecxz r-xdata
xor ecx ecx
xchg [ ebx + 0x121 ] ecx
jecxz r-xdata
mov edx [ eax + 0x2d ]
mov [ ebx + 0x111 ] edx
push 0xffff
call sub_406624
push eax
push 0x30
push ebx
call sub_407c10
xchg ebx eax
call sub_4070cc
xchg ecx eax
call sub_4062fc
sub_40770c
push ebx
push edx
mov ebx eax
call sub_4076e4
push eax
mov eax ebx
call sub_40749c
pop edx
sub eax edx
pop edx
add edx eax
xchg ebx eax
call sub_4074a8
pop ebx
retn
sub_40772c
push ebx
push edx
mov ebx eax
call sub_4076f8
push eax
mov eax ebx
call sub_407474
pop edx
sub eax edx
pop edx
add edx eax
xchg ebx eax
call sub_407480
pop ebx
retn
sub_40774c
pushad
xchg esi eax
mov ecx [ esi + 0x4d ]
jecxz r-xdata
push 0x1
call GetSystemMetrics
push eax
push 0x0
call GetSystemMetrics
push eax
push 0x0
push 0x0
jmp r-xdata
cmp [ esi + 0xbe ] 0x0
jne r-xdata
mov eax esi
call sub_40543c
mov eax esi
call sub_407474
pop edx
add eax edx
pop edi
pop edx
sub edx eax
sar edx 0x1
mov eax esi
call sub_40742c
mov eax esi
call sub_40749c
add eax edi
pop edx
sub edx eax
sar edx 0x1
xchg esi eax
call sub_407450
popad
retn
add esp 0xfffffff0
mov edx esp
xchg ecx eax
call sub_407288
sub_4077dc
push ebx
mov ebx eax
call sub_4077d4
cmp al dl
je r-xdata
pop ebx
retn
mov [ ebx + 0x5b ] al
mov eax ebx
call sub_40543c
mov eax ebx
call sub_407474
mov [ ebx + 0x581 ] eax
mov eax ebx
call sub_40749c
mov [ ebx + 0x585 ] eax
xchg ebx eax
mov edx sub_405b24
call sub_405e1c
sub_40781c
mov ecx [ eax + 0x28 ]
jecxz r-xdata
retn
push ebx
xchg ebx eax
push 0xffffffe6
push ecx
push 0xffffffec
push ecx
push 0xfffffff0
push ecx
call GetWindowLongW
mov [ ebx + 0x34 ] eax
call GetWindowLongW
mov [ ebx + 0x38 ] eax
call GetClassLongW
mov [ ebx + 0x30 ] eax
xchg ebx eax
pop ebx
sub_4078a4
movzx ecx [ eax + 0x234 ]
jecxz r-xdata
xchg ecx eax
retn
xor edx edx
push edx
push edx
lea edx [ esp + 0x4 ]
push edx
push ecx
push eax
call sub_407c10
pop ecx
sub_4078c0
push ebp
mov ebp esp
push eax
push edx
call sub_4078a4
pop ecx
pop edx
add ecx eax
push ecx
movzx ecx [ edx + 0x23c ]
jecxz r-xdata
movzx ecx [ edx + 0x23e ]
jecxz r-xdata
push eax
jmp r-xdata
mov esp ebp
pop ebp
retn
push eax
push esp
push 0x0
push ecx
push edx
call sub_407c10
sub_407950
push edx
push ecx
movzx ecx [ eax + 0x238 ]
jecxz r-xdata
pop ecx
movzx ecx [ eax + 0x23a ]
jecxz r-xdata
push ecx
push eax
call sub_407c10
retn
movzx ecx [ eax + 0x23c ]
jecxz r-xdata
pop edx
push 0x0
jmp r-xdata
movzx ecx [ eax + 0x23e ]
jecxz r-xdata
push edx
jmp r-xdata
mov [ eax + 0x18f ] edx
call sub_4072c8
pop ecx
retn
push edx
push esp
push 0x0
push ecx
push eax
call sub_407c10
pop ecx
pop ecx
retn
sub_4079b5
push ebp
xor ebp ebp
push esi
push ebx
mov edx [ eax + 0x65 ]
mov ecx [ edx + 0x1c ]
mov esi [ edx + 0x18 ]
jecxz r-xdata
pop ebx
pop esi
test ebp ebp
pop ebp
retn
push ecx
lodsd [ esi ]
push eax
test [ eax + 0x36 ] 0x1
je r-xdata
or ebp 0x1
pop eax
movzx ecx [ eax + 0x51 ]
jecxz r-xdata
mov dl [ eax + 0x53 ]
and dl [ eax + 0x51 ]
je r-xdata
pop ecx
loop r-xdata
push eax
call sub_4079b5
pop edx
je r-xdata
call sub_405e80
test al al
pop eax
je r-xdata
mov eax edi
call sub_4043b0
push eax
xchg edx eax
push esi
mov ecx [ edi + 0x1c ]
mov esi [ edi + 0x18 ]
xor ebx ebx
jecxz r-xdata
pop esi
mov eax edi
call sub_4063c0
lodsd [ esi ]
mov eax [ eax + 0x54 ]
cmp eax [ edx + 0x54 ]
jle r-xdata
inc ebx
loop r-xdata
pop esi
mov ecx edx
mov edx ebx
mov eax edi
call sub_406444
jmp r-xdata
sub_407a34
pushad
push eax
mov ebx eax
mov ebp edx
call sub_4079a4
xchg edi eax
mov ecx [ ebx + 0x16f ]
xor ebx ebx
jecxz r-xdata
mov ecx [ edi + 0x1c ]
mov esi [ edi + 0x18 ]
xor edx edx
push edx
push edx
test ecx ecx
je r-xdata
mov ebx [ ecx + 0x54 ]
pop edx
pop ecx
inc ecx
loop r-xdata
push ecx
lodsd [ esi ]
cmp [ eax + 0x54 ] ebx
je r-xdata
pop ebx
jecxz r-xdata
mov ecx edx
pop ecx
dec ecx
jne r-xdata
mov ecx [ esp + 0x8 ]
jecxz r-xdata
xchg edi eax
call sub_4062fc
popad
retn
xchg ecx eax
mov ecx [ eax + 0x28 ]
jecxz r-xdata
test ebp ebp
jl r-xdata
mov ecx [ ecx + 0x54 ]
test ebp ebp
jge r-xdata
mov [ ebx + 0x16f ] eax
inc [ eax + 0x18a ]
push eax
mov dl 0x1
call sub_405d78
pop eax
dec [ eax + 0x18a ]
cmp [ eax + 0x54 ] ebx
jl r-xdata
cmp [ eax + 0x54 ] ebx
jg r-xdata
cmp [ eax + 0x54 ] ebx
jle r-xdata
cmp [ eax + 0x54 ] ebx
jge r-xdata
mov [ esp + 0x8 ] eax
jmp r-xdata
mov ecx [ esp + 0x4 ]
jecxz r-xdata
jmp r-xdata
cmp [ eax + 0x54 ] ecx
jl r-xdata
cmp [ eax + 0x54 ] ecx
jle r-xdata
mov [ esp + 0x4 ] eax
mov ecx [ ecx + 0x54 ]
test ebp ebp
jl r-xdata
jmp r-xdata
cmp [ eax + 0x54 ] ecx
jle r-xdata
cmp [ eax + 0x54 ] ecx
jge r-xdata
jmp r-xdata
sub_407af0
push esi
mov esi sub_407b0c
push eax
mov ah 0x9
or edx 0xffffffff
jmp r-xdata
lodsb [ esi ]
cmp dl al
je r-xdata
pop esi
mov al ah
and al 0x1
test [ esi + 0xd0 ] al
je r-xdata
xor edx edx
test ah 0x1
je r-xdata
add ah ah
jae r-xdata
xor eax eax
pop esi
retn
test cl cl
jne r-xdata
push ecx
push eax
push 0x10
call GetKeyState
cwde
xchg edx eax
pop eax
pop ecx
lodsb [ esi ]
cmp dl al
je r-xdata
pop eax
pop esi
retn
push edx
mov eax esi
call sub_407618
pop edx
call sub_407a34
sub_407b0c
dec [ ecx ]
and eax 0x21282627
and al [ ebx + 0x14ebffca ]
xor edx edx
test ah 0x1
je r-xdata
pop esi
mov al ah
and al 0x1
test [ esi + 0xd0 ] al
je r-xdata
push ecx
push eax
push 0x10
call GetKeyState
cwde
xchg edx eax
pop eax
pop ecx
xor eax eax
pop esi
retn
test cl cl
jne r-xdata
pop esi
retn
push edx
mov eax esi
call sub_407618
pop edx
call sub_407a34
sub_407b68
push ebx
xchg ebx eax
mov eax [ ebx + 0x18f ]
movzx ecx [ ebx + 0x236 ]
jecxz r-xdata
pop ebx
retn
xor eax eax
cdq
cmp cx 0x100c
jne r-xdata
cmp cl 0xbb
jne r-xdata
inc eax
inc eax
jmp r-xdata
push eax
push edx
push ecx
push ebx
call sub_407c10
dec edx
sub_407b98
movzx ecx [ eax + 0x23a ]
jecxz r-xdata
inc ecx
call sub_407950
retn
pushad
push 0x0
push edx
push ecx
push eax
call sub_407c10
popad
cmp cx 0x130c
jne r-xdata
retn
push 0xfffffdd9
push eax
push [ eax + 0x28 ]
push esp
push 0x0
push 0x4e
push eax
call sub_407c10
pop ecx
pop ecx
pop ecx
sub_407bd4
mov [ eax + 0x58 ] dl
xor ecx ecx
mov cx [ eax + 0x244 ]
or cx [ eax + 0x248 ]
or cx [ eax + 0x246 ]
not ecx
and ecx [ eax + 0x34 ]
and edx 0x3
or cx [ eax + edx * 2 + 0x244 ]
mov dl [ eax + 0x24a ]
not edx
and edx ecx
call sub_40706c
retn
sub_407c30
cmp [ eax + 0x4 ] 0x0
jl r-xdata
xor eax eax
retn
pushad
mov ebx eax
mov ebp ecx
mov ecx [ ebx + 0x61 ]
jecxz r-xdata
popad
mov esi ecx
mov ecx [ esi + 0x1c ]
jecxz r-xdata
mov edi ecx
shr edi 0x1
call sub_404308
xor eax eax
inc eax
cmp [ ebx + 0x4 ] eax
je r-xdata
push edx
push ebx
xor eax eax
cmp [ rw-data ] al
je r-xdata
mov eax ebx
call sub_4062fc
popad
mov al 0x1
retn
mov eax ebx
call sub_4062fc
mov eax [ esi + 0x18 ]
mov eax [ eax + edi * 8 ]
xchg ebx eax
mov ecx ebp
call ebx
mov ecx [ esi + 0x18 ]
mov ecx [ ecx + edi * 8 + 0x4 ]
jecxz r-xdata
dec edi
js r-xdata
pop ebx
pop edx
test al al
je r-xdata
sub_407c98
push ebx
push edi
push ecx
xchg ebx eax
mov edi edx
mov [ ebx + 0xf1 ] sub_407c30
mov eax [ ebx + 0x61 ]
mov edx edi
call sub_406428
test eax eax
jge r-xdata
mov eax [ ebx + 0x61 ]
call [ rw-data ]
pop ecx
pop edi
pop ebx
retn
mov eax [ ebx + 0x61 ]
push eax
mov edx edi
call sub_4063c0
pop eax
pop edx
push edx
call sub_4063c0
sub_407cd8
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_402e14#6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407d2e
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4033a0
mov eax rw-data
call sub_4033a0
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_407d30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_407d56
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407d5d
retn
sub_407d74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov esi eax
mov edx [ r-xdata ]
xor eax eax
call sub_4062ec
mov ebx eax
mov edx ebx
mov eax esi
call sub_40631c
push 0x0
push 0x0
xor eax eax
mov al [ ebp - 0x1 ]
mov ecx [ eax * 4 + rw-data ]
or ecx 0x40000000
or ecx 0x40
or ecx 0x1
or ecx 0x20
xor eax eax
mov al [ ebp + 0x1c ]
or ecx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebp + 0x18 ]
or ecx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebp - 0x2 ]
or ecx [ eax * 4 + rw-data ]
mov edx r-xdata
mov eax esi
call sub_405368
mov [ ebx + 0x18 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov eax [ ebx + 0x18 ]
call sub_405338
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x14 ]
call sub_40742c
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x10 ]
call sub_407450
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0xc ]
call sub_407480
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
call sub_4074a8
mov al [ ebp + 0x1c ]
mov [ ebx + 0x1c ] al
mov al [ ebp - 0x2 ]
mov [ ebx + 0x2c ] al
mov al [ ebp + 0x18 ]
mov [ ebx + 0x1d ] al
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x18
sub_407ea0
push ebx
mov ebx eax
push 0x0
push edx
push 0x41b
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x28 ]
push eax
call SendMessageA
push 0x0
push 0x1
push 0x413
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x28 ]
push eax
call SendMessageA
pop ebx
retn
sub_407f30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_407f55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407f5c
retn
sub_407f6c
xor al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x43
inc eax
add al bh
add [ eax ] 0x53
add esp 0xfffffff0
mov [ esp ] ecx
xor ecx ecx
mov [ esp + 0xc ] 0x1
cmp [ edx + 0x4 ] 0x4e
jne r-xdata
mov eax ecx
add esp 0x10
pop ebx
retn
mov edx [ edx + 0xc ]
mov [ esp + 0x4 ] edx
mov edx [ esp + 0x4 ]
cmp [ edx + 0x8 ] 0xfffffd2e
jne r-xdata
mov eax [ eax + 0x14 ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ esp + 0x4 ]
add eax [ edx + 0x10 ]
mov edx [ esp + 0x8 ]
movsx edx [ edx + 0x30 ]
cmp eax edx
jle r-xdata
mov edx [ esp + 0x8 ]
movsx edx [ edx + 0x32 ]
cmp eax edx
jge r-xdata
mov eax edx
mov edx [ esp + 0x8 ]
cmp [ edx + 0x2a ] 0x0
je r-xdata
mov eax edx
push eax
lea eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0xc ]
mov cx [ eax + 0xc ]
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0x10 ]
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
mov cl 0x1
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] 0x1
jmp r-xdata
sub_408024
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov esi eax
mov edx [ r-xdata ]
xor eax eax
call sub_4062ec
mov ebx eax
mov edx ebx
mov eax esi
call sub_40631c
mov eax 0x10
call sub_40425c
mov edx rw-data
mov eax esp
mov ecx 0x7
call sub_4062bc
mov edi eax
push 0x0
push 0x0
mov ecx edi
or ecx 0x50000000
mov edx r-xdata
mov eax esi
call sub_405368
mov ebp eax
mov [ ebx + 0x18 ] ebp
mov eax ebp
mov edx 0x200
call sub_40709c
mov eax [ ebx + 0x18 ]
mov [ eax + 0x53 ] 0x0
xor edx edx
call sub_405a3c
mov eax [ ebx + 0x18 ]
call sub_40543c
mov [ ebx + 0x20 ] eax
mov eax [ ebx + 0x18 ]
mov edx esi
call sub_407394
mov eax [ ebx + 0x18 ]
mov [ eax + 0x14 ] ebx
mov [ ebx + 0x30 ] 0x64
mov [ ebx + 0x32 ] 0x0
mov edx r-xdata
mov eax [ ebx + 0x18 ]
call sub_405e1c
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_408110
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x1c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax esi
call sub_40543c
push eax
push 0x469
mov eax [ ebx + 0x20 ]
push eax
call SendMessageW
sub_408138
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax esi
call sub_403fdc
push eax
push 0x0
push 0x467
mov eax [ ebx + 0x20 ]
push eax
call SendMessageW
pop esi
pop ebx
retn
sub_40815c
add esp 0xfffffff8
mov ecx [ rw-data ]
mov [ esp ] ecx
mov [ esp + 0x4 ] edx
mov edx esp
push edx
push 0x1
push 0x46b
mov eax [ eax + 0x20 ]
push eax
call SendMessageW
pop ecx
pop edx
retn
sub_408184
push ebx
push esi
push ecx
mov esi ecx
mov ebx eax
mov eax [ ebx + 0x18 ]
call sub_40742c
mov eax [ ebx + 0x18 ]
mov edx esi
call sub_407450
mov [ esp ] ebx
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4081a8
push ebx
push esi
push ecx
mov esi ecx
mov ebx eax
mov eax [ ebx + 0x18 ]
call sub_407480
mov eax [ ebx + 0x18 ]
mov edx esi
call sub_4074a8
mov [ esp ] ebx
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_4081cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4081f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4081f8
retn
sub_408204
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_402e14#5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408230
retn
sub_408250
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov edx [ r-xdata ]
xor eax eax
call sub_4062ec
mov [ ebx ] eax
mov edx r-xdata
mov eax [ esp ]
call sub_40685c
mov ecx 0xa4
mov edx 0x104
call sub_405ee4
call sub_407b50
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x18 ] esi
mov eax [ rw-data ]
mov [ eax ] esi
mov edx [ ebx ]
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
call sub_40631c
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx [ eax + 0x34 ]
and edx 0xfffeffff
call sub_40706c
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov ecx 0x16b
mov edx 0x209
call sub_4058b0
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
call sub_40762c
mov ecx 0xfffffff4
mov edx 0x4
call sub_406614
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
call sub_40762c
mov edx r-xdata
call sub_40459c
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
call sub_40762c
xor edx edx
call sub_404574
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
call sub_40762c
mov dl 0x2
call sub_404624
mov eax [ ebx ]
mov edx [ ebx ]
mov edx [ edx + 0x18 ]
mov [ edx + 0x156 ] eax
mov [ edx + 0x152 ] sub_40ed3c
call InitCommonControls
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x153
mov edx 0xd8
call sub_405ee4
mov ecx 0xf
mov edx 0x29
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0xc4 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx r-xdata
call sub_4068a0
mov ecx 0x14c
mov edx 0x160
call sub_405ee4
mov ecx 0x19
mov edx 0x49
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x24 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx r-xdata
call sub_404e14
mov ecx 0xbe
mov edx 0x10
call sub_405ee4
mov ecx 0x7b
mov edx 0x1e9
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x78 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov esi [ eax + 0x78 ]
mov [ esi + 0x53 ] 0x0
mov eax esi
mov edx r-xdata
call sub_404dac
mov ecx 0x1a
mov edx 0xec
call sub_405ee4
mov ecx 0xf
mov edx 0x5
call sub_4075c4
mov edi eax
mov eax [ ebx ]
mov [ eax + 0x84 ] edi
mov eax edi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x59
mov edx 0xec
call sub_405ee4
mov ecx 0xf
mov edx 0x5
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0xe8 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x3c
mov edx 0xec
call sub_405ee4
mov ecx 0xf
mov edx 0x5
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x88 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x3a
mov edx 0x132
call sub_405ee4
mov ecx 0xf
mov edx 0xa7
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x8c ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov edx r-xdata
call sub_4068f0
mov ecx 0x18
mov edx 0x8
call sub_405ee4
mov ecx 0x12
mov edx 0x81
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0xa8 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x1a
mov edx 0x89
call sub_405ee4
mov ecx 0x11
mov edx 0x60
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x90 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x1a
mov edx 0xf3
call sub_405ee4
mov ecx 0x11
mov edx 0x21
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x94 ] esi
mov eax esi
mov dl 0x1
call sub_407bd4
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov edx r-xdata
call sub_4068f0
mov ecx 0x38
mov edx 0x8
call sub_405ee4
mov ecx 0x12
mov edx 0x81
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x7c ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x3a
mov edx 0x89
call sub_405ee4
mov ecx 0x11
mov edx 0x60
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x98 ] esi
mov [ esi + 0x14 ] 0x4
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x3a
mov edx 0xf3
call sub_405ee4
mov ecx 0x11
mov edx 0x21
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x9c ] esi
mov [ esi + 0x14 ] 0x5
mov eax esi
mov dl 0x1
call sub_407bd4
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x58
mov edx 0x130
call sub_405ee4
mov ecx 0x11
mov edx 0xb1
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0xa0 ] esi
mov [ esi + 0x14 ] 0x6
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov edx r-xdata
call sub_4068f0
mov ecx 0x18
mov edx 0x130
call sub_405ee4
mov ecx 0x12
mov edx 0x81
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x80 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x80 ]
mov [ eax + 0x14 ] 0x7
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x19
mov edx 0x1b8
call sub_405ee4
mov ecx 0x11
mov edx 0x27
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0xa4 ] esi
mov [ esi + 0x14 ] 0x8
mov eax esi
mov dl 0x1
call sub_407bd4
mov eax [ ebx ]
mov eax [ eax + 0xa4 ]
mov edx r-xdata
call sub_4070d8
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov edx r-xdata
call sub_4068f0
mov ecx 0x58
mov edx 0x8
call sub_405ee4
mov ecx 0x12
mov edx 0x81
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0xe0 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x58
mov edx 0x89
call sub_405ee4
mov ecx 0x11
mov edx 0x60
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xe4 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x58
mov edx 0xf3
call sub_405ee4
mov ecx 0x11
mov edx 0x21
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xec ] eax
mov eax [ ebx ]
mov eax [ eax + 0x78 ]
mov dl 0x1
call sub_404ec4
mov ecx 0x18
mov edx 0x120
call sub_405ee4
mov ecx 0x51
mov edx 0x2
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0xf0 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx r-xdata
call sub_4068a0
mov ecx 0x14c
mov edx 0x1b0
call sub_405ee4
mov ecx 0x19
mov edx 0x49
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x28 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx r-xdata
call sub_404e14
mov ecx 0xa
mov edx 0x10
call sub_405ee4
mov ecx 0x51
mov edx 0x101
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x2c ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov esi [ eax + 0x2c ]
mov [ esi + 0x53 ] 0x0
mov eax esi
mov edx r-xdata
call sub_404dac
mov ecx 0x18
mov edx 0x8
call sub_405ee4
mov ecx 0xf
mov edx 0x59
call sub_4075c4
mov edi eax
mov eax [ ebx ]
mov [ eax + 0x38 ] edi
mov eax edi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x2c ]
mov edx r-xdata
call sub_404dac
mov ecx 0x38
mov edx 0x8
call sub_405ee4
mov ecx 0xf
mov edx 0x59
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x3c ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x2c ]
mov dx [ r-xdata ]
call sub_406ac8
mov ecx 0x13
mov edx 0x62
call sub_405ee4
xor ecx ecx
mov edx 0x93
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x30 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov ecx r-xdata
xor edx edx
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov ecx r-xdata
mov edx 0x1
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov ecx r-xdata
mov edx 0x2
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov ecx r-xdata
mov edx 0x3
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov ecx r-xdata
mov edx 0x4
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov ecx r-xdata
mov edx 0x5
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov ecx r-xdata
mov edx 0x6
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
mov ecx r-xdata
mov edx 0x7
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x30 ]
xor edx edx
call sub_407b98
mov eax [ ebx ]
mov eax [ eax + 0x2c ]
mov dx [ r-xdata ]
call sub_406ac8
mov ecx 0x33
mov edx 0x62
call sub_405ee4
xor ecx ecx
mov edx 0x93
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x34 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov ecx r-xdata
xor edx edx
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov ecx r-xdata
mov edx 0x1
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov ecx r-xdata
mov edx 0x2
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov ecx r-xdata
mov edx 0x3
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov ecx r-xdata
mov edx 0x4
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov ecx r-xdata
mov edx 0x5
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov ecx r-xdata
mov edx 0x6
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
mov ecx r-xdata
mov edx 0x7
call sub_405c74
mov eax [ ebx ]
mov eax [ eax + 0x34 ]
xor edx edx
call sub_407b98
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx r-xdata
call sub_404e14
mov ecx 0xa
mov edx 0x120
call sub_405ee4
mov ecx 0x51
mov edx 0xd9
call sub_4075c4
mov esi eax
mov eax [ ebx ]
mov [ eax + 0x68 ] esi
mov eax esi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov esi [ eax + 0x68 ]
mov [ esi + 0x53 ] 0x0
mov eax esi
mov edx r-xdata
call sub_404dac
mov ecx 0x18
mov edx 0x10
call sub_405ee4
mov ecx 0xf
mov edx 0x69
call sub_4075c4
mov edi eax
mov eax [ ebx ]
mov [ eax + 0x6c ] edi
mov eax edi
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x18
mov edx 0x7f
call sub_405ee4
mov ecx 0xd
mov edx 0x49
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x70 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x70 ]
mov dl 0x1
call sub_407bd4
push 0x0
push 0x0
push 0xe
push 0x28
push 0xbb
push 0x1d
mov eax [ ebx ]
mov eax [ eax + 0x68 ]
mov cl 0x1
mov dl 0x1
call sub_407d74
mov edx [ ebx ]
mov [ edx + 0x74 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov edx 0x4
call sub_407f18
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov edx 0x14
call sub_407ea0
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov edx 0x2
call sub_407ed0
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov edx 0x1
call sub_407e88
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx r-xdata
call sub_404e14
mov ecx 0x5e
mov edx 0x10
call sub_405ee4
mov ecx 0x5c
mov edx 0xb9
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x40 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov [ eax + 0x53 ] 0x0
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x44
mov edx 0x8
call sub_405ee4
mov ecx 0xf
mov edx 0x61
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x48 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x48 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x2c
mov edx 0x98
call sub_405ee4
mov ecx 0xf
mov edx 0x19
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x64 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x14
mov edx 0x98
call sub_405ee4
mov ecx 0xf
mov edx 0x19
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x54 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x54 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x44
mov edx 0x98
call sub_405ee4
mov ecx 0xf
mov edx 0x19
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x58 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x58 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x2c
mov edx 0x8
call sub_405ee4
mov ecx 0xf
mov edx 0x61
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x5c ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov edx r-xdata
call sub_404dac
mov ecx 0x14
mov edx 0x8
call sub_405ee4
mov ecx 0xf
mov edx 0x61
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x44 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x44 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x2b
mov edx 0x72
call sub_405ee4
mov ecx 0x11
mov edx 0x21
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x60 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl 0x1
call sub_407bd4
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x13
mov edx 0x72
call sub_405ee4
mov ecx 0x11
mov edx 0x21
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x4c ] eax
mov eax [ ebx ]
mov eax [ eax + 0x4c ]
mov dl 0x1
call sub_407bd4
mov eax [ ebx ]
mov eax [ eax + 0x40 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x43
mov edx 0x72
call sub_405ee4
mov ecx 0x11
mov edx 0x21
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x50 ]
mov dl 0x1
call sub_407bd4
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx r-xdata
call sub_404e14
mov ecx 0x5e
mov edx 0xd8
call sub_405ee4
mov ecx 0x5c
mov edx 0x131
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xac ] eax
mov eax [ ebx ]
mov eax [ eax + 0xac ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0xac ]
mov [ eax + 0x53 ] 0x0
mov eax [ ebx ]
mov eax [ eax + 0xac ]
mov edx r-xdata
call sub_4068f0
mov ecx 0x44
mov edx 0x98
call sub_405ee4
mov ecx 0x12
mov edx 0x81
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xbc ] eax
mov eax [ ebx ]
mov eax [ eax + 0xbc ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0xac ]
mov edx r-xdata
call sub_4068f0
mov ecx 0xf
mov edx 0x9
call sub_405ee4
mov ecx 0x10
mov edx 0x110
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xb8 ] eax
mov eax [ ebx ]
mov eax [ eax + 0xb8 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0xb8 ]
call sub_40762c
xor edx edx
call sub_404554
mov eax [ ebx ]
mov eax [ eax + 0xb8 ]
call sub_40762c
mov edx r-xdata
call sub_40459c
mov eax [ ebx ]
mov eax [ eax + 0xb8 ]
call sub_40762c
mov dl 0x86
call sub_404574
mov eax [ ebx ]
mov eax [ eax + 0xac ]
mov edx r-xdata
call sub_4068f0
mov ecx 0x20
mov edx 0x9
call sub_405ee4
mov ecx 0x12
mov edx 0x110
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xb0 ] eax
mov eax [ ebx ]
mov eax [ eax + 0xb0 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0xac ]
mov edx r-xdata
call sub_4068f0
mov ecx 0x32
mov edx 0x9
call sub_405ee4
mov ecx 0x12
mov edx 0xb0
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xb4 ] eax
mov eax [ ebx ]
mov eax [ eax + 0xb4 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0xac ]
mov edx r-xdata
call sub_4068f0
mov ecx 0x44
mov edx 0x9
call sub_405ee4
mov ecx 0x12
mov edx 0x88
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xc0 ] eax
mov eax [ ebx ]
mov eax [ eax + 0xc0 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov dl [ r-xdata ]
call sub_408024
mov ecx 0x151
mov edx 0x149
call sub_408184
mov ecx 0x12
mov edx 0xd
call sub_4081a8
mov edx [ ebx ]
mov [ edx + 0xcc ] eax
mov eax [ ebx ]
mov eax [ eax + 0xcc ]
or edx 0xffffffff
call sub_40815c
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov dx [ r-xdata ]
call sub_4069e8
mov ecx 0x151
mov edx 0x108
call sub_405ee4
mov ecx 0x12
mov edx 0x41
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xc8 ] eax
mov eax [ ebx ]
mov eax [ eax + 0xc8 ]
mov edx r-xdata
call sub_4070d8
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov edx r-xdata
call sub_404e14
mov ecx 0x140
mov edx 0x10
call sub_405ee4
mov ecx 0x29
mov edx 0xb9
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xd0 ] eax
mov eax [ ebx ]
mov eax [ eax + 0xd0 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0xd0 ]
mov [ eax + 0x53 ] 0x0
mov eax [ ebx ]
mov eax [ eax + 0xd0 ]
mov edx 0x8000000f
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0xd0 ]
mov edx r-xdata
call sub_406938
mov ecx 0x10
mov edx 0x8
call sub_405ee4
mov ecx 0x12
mov edx 0x51
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xd4 ] eax
mov eax [ ebx ]
mov eax [ eax + 0xd4 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov eax [ eax + 0xd0 ]
mov edx r-xdata
call sub_406938
mov ecx 0x10
mov edx 0x60
call sub_405ee4
mov ecx 0x12
mov edx 0x53
call sub_4075c4
mov edx [ ebx ]
mov [ edx + 0xd8 ] eax
mov eax [ ebx ]
mov eax [ eax + 0xd8 ]
mov dl 0x1
call sub_405e60
mov eax [ ebx ]
mov edx [ ebx ]
mov edx [ edx + 0x28 ]
mov [ edx + 0x166 ] eax
mov [ edx + 0x162 ] r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x28 ]
mov cl 0x1
mov edx 0x1b
call sub_406134
mov eax [ ebx ]
mov eax [ eax + 0x4c ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0x50 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov edx [ ebx ]
mov edx [ edx + 0x7c ]
mov [ edx + 0x166 ] eax
mov [ edx + 0x162 ] sub_40d240
mov eax [ ebx ]
mov edx [ ebx ]
mov edx [ edx + 0x80 ]
mov [ edx + 0x166 ] eax
mov [ edx + 0x162 ] sub_40d2e4
mov eax [ ebx ]
mov edx [ ebx ]
mov edx [ edx + 0x24 ]
mov [ edx + 0x166 ] eax
mov [ edx + 0x162 ] r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x24 ]
mov cl 0x1
mov edx 0xd
call sub_406134
mov eax [ ebx ]
mov eax [ eax + 0x94 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0x98 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0x9c ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0xa0 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0xa4 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov edx [ ebx ]
mov edx [ edx + 0xa8 ]
mov [ edx + 0x166 ] eax
mov [ edx + 0x162 ] r-xdata
mov eax [ ebx ]
mov edx [ ebx ]
mov edx [ edx + 0xe0 ]
mov [ edx + 0x166 ] eax
mov [ edx + 0x162 ] r-xdata
mov eax [ ebx ]
mov eax [ eax + 0xe4 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0xec ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0xc8 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov edx [ eax + 0xc8 ]
mov eax [ ebx ]
mov eax [ eax + 0xcc ]
call sub_408110
mov eax [ ebx ]
mov eax [ eax + 0xcc ]
mov dx 0x64
call sub_408138
mov eax [ ebx ]
mov eax [ eax + 0xd4 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0xd4 ]
call sub_407890
mov eax [ ebx ]
mov eax [ eax + 0x90 ]
mov edx 0x80000005
call sub_4074c8
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
call sub_40774c
xor edx edx
call sub_4077dc
push 0x0
push 0x0
push 0x116
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
push eax
call sub_407c10
mov edx [ ebx ]
mov eax [ ebx ]
call sub_409898
pop edx
pop edi
pop esi
pop ebx
retn
sub_409442
add [ eax ] al
push cs
add [ eax ] al
add [ edx ] dl
add [ gs : ecx ] ah
insb
add [ eax ] ah
add [ esi + 0x7f6e8b ] bh
add [ eax + eax ] cl
add [ eax ] al
push esp
add [ ecx ] ah
push 0x6d006f00
add [ ecx ] ah
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add bl dh
xchg edi eax
iretd
sub_40961d
fcomp [ edx + 0x29 ]
or al 0x0
add [ eax ] al
push esp
add [ ecx ] dh
add [ edi ] ch
add [ eax + eax + 0x41 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
push cs
add [ eax ] al
add [ ecx ] dh
add [ eax ] dh
add [ ebp ] cl
das
add [ eax + eax + 0x41 ] cl
add [ esi ] cl
add [ eax ] al
or [ eax ] al
add [ eax ] al
lodsd [ esi ]
daa
pushad
std
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add [ eax ] al
dec esi
dec edi
and [ eax ] al
inc ebx
add [ eax ] dl
push ebp
cmp al [ gs : eax ]
add [ eax ] al
or [ eax ] al
add [ eax ] al
push ecx
jg r-xdata
daa
pushad
std
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add [ eax ] al
lodsd [ esi ]
mov esi 0x7f6e8b
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
or eax 0x6852a167
add [ ebx ] dl
jg r-xdata
jle r-xdata
add [ eax ] ah
add [ edi + 0x4f ] bh
sub [ ebp ] dh
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] al
jae r-xdata
push ecx
mul [ ebp - 0xc ]
xchg ebp eax
cmp al [ eax ]
add [ eax ] al
or al [ eax ]
add [ eax ] al
fimul [ edi - 0x727a9c5b ]
mul [ ebp + 0x3a ]
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ ecx + 0x7f ] dl
fdivr [ esi - 0x42 ]
push esi
test [ ebp + 0x3a65f6 ] ecx
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
sar [ ecx ] cl
add [ edx ] cl
add [ eax ] al
add [ 0x6852a167 ] cl
mov ebp [ esi + 0x7f ]
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
inc edi
push eax
0x2862115b 0xbf57
jle r-xdata
add [ eax + eax ] ah
add [ eax ] al
rcl [ ebx + 0x1 ] 0x1
nop
fimul [ edi - 0x72d79c5b ]
iretd
sub_409804
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x4 ]
call sub_403a00
xor eax eax
push ebp
push sub_40988c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x7 ] 0xff
mov [ ebp - 0x6 ] 0xfe
mov edx 0xc0000100
mov eax [ ebp - 0x4 ]
call sub_404ad8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push j_sub_402e14#4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x7 ]
mov eax [ ebp - 0xc ]
mov ecx 0x2
call sub_40676c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409876
mov eax [ ebp - 0xc ]
call sub_4062fc
retn
sub_409898
push ebp
mov ebp esp
mov ecx 0x44
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
lea edi [ ebp - 0xc ]
xor eax eax
push ebp
push sub_40bd3c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x28 ]
push eax
call GetSystemMenu
mov esi eax
push r-xdata
push 0x0
push 0x800
push esi
call AppendMenuW
push r-xdata
push 0x401
push 0x8
push esi
call AppendMenuW
lea eax [ ebp - 0x8 ]
call sub_4035ec
mov edx r-xdata
mov eax 0x80000002
call sub_404834
lea ecx [ ebp - 0x14 ]
mov edx r-xdata
call sub_4048e0
mov edx [ ebp - 0x14 ]
lea eax [ ebx + 0x100 ]
call sub_403628
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebx + 0x100 ]
call sub_40377c
mov ecx eax
sub ecx 0x3
mov eax [ ebx + 0x100 ]
mov edx 0x1
call sub_40391c
mov edx [ ebp - 0x18 ]
lea eax [ ebx + 0x100 ]
mov ecx r-xdata
call sub_4037e8
lea eax [ ebp - 0x1c ]
push eax
lea edx [ ebp - 0x20 ]
xor eax eax
call sub_4046fc
mov eax [ ebp - 0x20 ]
call sub_40377c
sub eax 0x4
push eax
lea edx [ ebp - 0x24 ]
xor eax eax
call sub_4046fc
mov eax [ ebp - 0x24 ]
mov edx 0x1
pop ecx
call sub_40391c
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403788
mov eax [ ebp - 0x1c ]
call sub_404810
test al al
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
lea edx [ ebp - 0x38 ]
xor eax eax
call sub_4046fc
mov eax [ ebp - 0x38 ]
call sub_40377c
sub eax 0x4
push eax
lea edx [ ebp - 0x3c ]
xor eax eax
call sub_4046fc
mov eax [ ebp - 0x3c ]
mov edx 0x1
pop ecx
call sub_40391c
lea eax [ ebp - 0x34 ]
mov edx r-xdata
call sub_403788
mov eax [ ebp - 0x34 ]
call sub_404be8
mov [ edi ] eax
mov eax [ edi ]
mov [ eax + 0x18 ] 0x1
lea eax [ ebp - 0x40 ]
push eax
lea edx [ ebp - 0x44 ]
xor eax eax
call sub_4046fc
mov eax [ ebp - 0x44 ]
call sub_40377c
sub eax 0x4
push eax
lea edx [ ebp - 0x48 ]
xor eax eax
call sub_4046fc
mov eax [ ebp - 0x48 ]
mov edx 0x1
pop ecx
call sub_40391c
lea eax [ ebp - 0x40 ]
mov edx r-xdata
call sub_403788
mov eax [ ebp - 0x40 ]
call sub_409804
lea eax [ ebp - 0x28 ]
push eax
lea edx [ ebp - 0x2c ]
xor eax eax
call sub_4046fc
mov eax [ ebp - 0x2c ]
call sub_40377c
sub eax 0x4
push eax
lea edx [ ebp - 0x30 ]
xor eax eax
call sub_4046fc
mov eax [ ebp - 0x30 ]
mov edx 0x1
pop ecx
call sub_40391c
lea eax [ ebp - 0x28 ]
mov edx r-xdata
call sub_403788
mov eax [ ebp - 0x28 ]
call sub_404be8
mov [ edi ] eax
mov eax [ edi ]
mov [ eax + 0x18 ] 0x0
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0xf4 ]
call sub_4048e0
mov eax [ ebx + 0x100 ]
call sub_404be8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
add eax 0x1d
mov edx r-xdata
call sub_403628
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebx + 0xf4 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
call sub_404b24
mov eax [ ebp - 0x10 ]
call sub_4062fc
jmp r-xdata
mov eax [ edi ]
add eax 0x1d
mov edx r-xdata
call sub_403628
lea eax [ ebp - 0x4c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x4c ]
lea eax [ ebx + 0xf4 ]
call sub_403628
lea eax [ ebp - 0x50 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x50 ]
lea eax [ ebx + 0xf8 ]
call sub_403628
lea eax [ ebp - 0x54 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x54 ]
lea eax [ ebx + 0xfc ]
call sub_403628
mov eax [ ebx + 0x100 ]
call sub_404810
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call j_sub_403628
lea eax [ ebp - 0x8 ]
push eax
mov edx [ ebp - 0x8 ]
mov eax r-xdata
call sub_403968
mov edx eax
inc edx
mov ecx 0x1
mov eax [ ebp - 0x8 ]
call sub_40391c
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
call sub_403898
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ ebx + 0xd4 ]
mov dl 0x1
call sub_407868
mov eax [ ebx + 0xd8 ]
xor edx edx
call sub_407868
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ edi ]
add eax 0x1d
mov edx r-xdata
call sub_403628
lea eax [ ebp - 0x5c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x5c ]
lea eax [ ebp - 0x58 ]
call sub_403530
mov eax [ ebp - 0x58 ]
call sub_4066e8
push eax
mov eax [ ebx + 0x18 ]
call sub_40762c
pop edx
call sub_404574
lea eax [ ebp - 0x64 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_403530
mov eax [ ebp - 0x60 ]
call sub_4066e8
push eax
mov eax [ ebx + 0x18 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
lea eax [ ebp - 0x68 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebx + 0x18 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x24 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x24 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x6c ]
call sub_404584
mov eax [ ebp - 0x6c ]
push eax
mov eax [ ebx + 0x24 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x28 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x28 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x70 ]
call sub_404584
mov eax [ ebp - 0x70 ]
push eax
mov eax [ ebx + 0x28 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x78 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x78 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x74 ]
call sub_404584
mov eax [ ebp - 0x74 ]
push eax
mov eax [ ebx + 0x78 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x2c ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x2c ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x78 ]
call sub_404584
mov eax [ ebp - 0x78 ]
push eax
mov eax [ ebx + 0x2c ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x68 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x68 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x7c ]
call sub_404584
mov eax [ ebp - 0x7c ]
push eax
mov eax [ ebx + 0x68 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x40 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x40 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x80 ]
call sub_404584
mov eax [ ebp - 0x80 ]
push eax
mov eax [ ebx + 0x40 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xac ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xac ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x84 ]
call sub_404584
mov eax [ ebp - 0x84 ]
push eax
mov eax [ ebx + 0xac ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xd0 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xd0 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x88 ]
call sub_404584
mov eax [ ebp - 0x88 ]
push eax
mov eax [ ebx + 0xd0 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xa8 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xa8 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x8c ]
call sub_404584
mov eax [ ebp - 0x8c ]
push eax
mov eax [ ebx + 0xa8 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x7c ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x7c ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x90 ]
call sub_404584
mov eax [ ebp - 0x90 ]
push eax
mov eax [ ebx + 0x7c ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x84 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x84 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x94 ]
call sub_404584
mov eax [ ebp - 0x94 ]
push eax
mov eax [ ebx + 0x84 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x88 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x88 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x98 ]
call sub_404584
mov eax [ ebp - 0x98 ]
push eax
mov eax [ ebx + 0x88 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x8c ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x8c ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x9c ]
call sub_404584
mov eax [ ebp - 0x9c ]
push eax
mov eax [ ebx + 0x8c ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x38 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x38 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xa0 ]
call sub_404584
mov eax [ ebp - 0xa0 ]
push eax
mov eax [ ebx + 0x38 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x3c ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x3c ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xa4 ]
call sub_404584
mov eax [ ebp - 0xa4 ]
push eax
mov eax [ ebx + 0x3c ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x6c ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x6c ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xa8 ]
call sub_404584
mov eax [ ebp - 0xa8 ]
push eax
mov eax [ ebx + 0x6c ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x70 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x70 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xac ]
call sub_404584
mov eax [ ebp - 0xac ]
push eax
mov eax [ ebx + 0x70 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x5c ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x5c ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xb0 ]
call sub_404584
mov eax [ ebp - 0xb0 ]
push eax
mov eax [ ebx + 0x5c ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xb4 ]
call sub_404584
mov eax [ ebp - 0xb4 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x48 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x48 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xb8 ]
call sub_404584
mov eax [ ebp - 0xb8 ]
push eax
mov eax [ ebx + 0x48 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xe8 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xe8 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xbc ]
call sub_404584
mov eax [ ebp - 0xbc ]
push eax
mov eax [ ebx + 0xe8 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x64 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x64 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xc0 ]
call sub_404584
mov eax [ ebp - 0xc0 ]
push eax
mov eax [ ebx + 0x64 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xc4 ]
call sub_404584
mov eax [ ebp - 0xc4 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x58 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x58 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xc8 ]
call sub_404584
mov eax [ ebp - 0xc8 ]
push eax
mov eax [ ebx + 0x58 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x90 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x90 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xcc ]
call sub_404584
mov eax [ ebp - 0xcc ]
push eax
mov eax [ ebx + 0x90 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x94 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x94 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xd0 ]
call sub_404584
mov eax [ ebp - 0xd0 ]
push eax
mov eax [ ebx + 0x94 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x98 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x98 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xd4 ]
call sub_404584
mov eax [ ebp - 0xd4 ]
push eax
mov eax [ ebx + 0x98 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x9c ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x9c ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xd8 ]
call sub_404584
mov eax [ ebp - 0xd8 ]
push eax
mov eax [ ebx + 0x9c ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xa4 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xa4 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xdc ]
call sub_404584
mov eax [ ebp - 0xdc ]
push eax
mov eax [ ebx + 0xa4 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xe4 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xe4 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xe0 ]
call sub_404584
mov eax [ ebp - 0xe0 ]
push eax
mov eax [ ebx + 0xe4 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xec ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xec ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xe4 ]
call sub_404584
mov eax [ ebp - 0xe4 ]
push eax
mov eax [ ebx + 0xec ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xa0 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xa0 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xe8 ]
call sub_404584
mov eax [ ebp - 0xe8 ]
push eax
mov eax [ ebx + 0xa0 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xe0 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xe0 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xec ]
call sub_404584
mov eax [ ebp - 0xec ]
push eax
mov eax [ ebx + 0xe0 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x80 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x80 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xf0 ]
call sub_404584
mov eax [ ebp - 0xf0 ]
push eax
mov eax [ ebx + 0x80 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xf4 ]
call sub_404584
mov eax [ ebp - 0xf4 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x34 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x34 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xf8 ]
call sub_404584
mov eax [ ebp - 0xf8 ]
push eax
mov eax [ ebx + 0x34 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xb8 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xb8 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0xfc ]
call sub_404584
mov eax [ ebp - 0xfc ]
push eax
mov eax [ ebx + 0xb8 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xb0 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xb0 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x100 ]
call sub_404584
mov eax [ ebp - 0x100 ]
push eax
mov eax [ ebx + 0xb0 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xb4 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xb4 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x104 ]
call sub_404584
mov eax [ ebp - 0x104 ]
push eax
mov eax [ ebx + 0xb4 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xc0 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xc0 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x108 ]
call sub_404584
mov eax [ ebp - 0x108 ]
push eax
mov eax [ ebx + 0xc0 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x4c ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x10c ]
call sub_404584
mov eax [ ebp - 0x10c ]
push eax
mov eax [ ebx + 0x4c ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x60 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x60 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x110 ]
call sub_404584
mov eax [ ebp - 0x110 ]
push eax
mov eax [ ebx + 0x60 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0x50 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0x50 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x114 ]
call sub_404584
mov eax [ ebp - 0x114 ]
push eax
mov eax [ ebx + 0x50 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xbc ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xbc ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x118 ]
call sub_404584
mov eax [ ebp - 0x118 ]
push eax
mov eax [ ebx + 0xbc ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xc4 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xc4 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x11c ]
call sub_404584
mov eax [ ebp - 0x11c ]
push eax
mov eax [ ebx + 0xc4 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xc8 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xc8 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x120 ]
call sub_404584
mov eax [ ebp - 0x120 ]
push eax
mov eax [ ebx + 0xc8 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xd4 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xd4 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x124 ]
call sub_404584
mov eax [ ebp - 0x124 ]
push eax
mov eax [ ebx + 0xd4 ]
call sub_40762c
pop edx
call sub_40459c
mov eax [ ebx + 0x18 ]
call sub_40762c
mov al [ eax + 0x48 ]
push eax
mov eax [ ebx + 0xd8 ]
call sub_40762c
pop edx
call sub_404574
mov eax [ ebx + 0x18 ]
call sub_40762c
mov eax [ eax + 0x31 ]
push eax
mov eax [ ebx + 0xd8 ]
call sub_40762c
mov edx 0x4
pop ecx
call sub_406614
mov eax [ ebx + 0x18 ]
call sub_40762c
lea edx [ ebp - 0x128 ]
call sub_404584
mov eax [ ebp - 0x128 ]
push eax
mov eax [ ebx + 0xd8 ]
call sub_40762c
pop edx
call sub_40459c
lea eax [ ebp - 0x12c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x12c ]
mov eax [ ebx + 0x18 ]
call sub_4070d8
lea eax [ ebp - 0x130 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x130 ]
mov eax [ ebx + 0x24 ]
call sub_4070d8
lea eax [ ebp - 0x134 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x134 ]
mov eax [ ebx + 0x28 ]
call sub_4070d8
lea eax [ ebp - 0x138 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x138 ]
mov eax [ ebx + 0x78 ]
call sub_4070d8
lea eax [ ebp - 0x13c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x13c ]
mov eax [ ebx + 0xa8 ]
call sub_4070d8
lea eax [ ebp - 0x140 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x140 ]
mov eax [ ebx + 0x7c ]
call sub_4070d8
lea eax [ ebp - 0x144 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x144 ]
mov eax [ ebx + 0x8c ]
call sub_4070d8
lea eax [ ebp - 0x148 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x148 ]
mov eax [ ebx + 0x80 ]
call sub_4070d8
lea eax [ ebp - 0x14c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x14c ]
mov eax [ ebx + 0x2c ]
call sub_4070d8
lea eax [ ebp - 0x150 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x150 ]
mov eax [ ebx + 0x38 ]
call sub_4070d8
lea eax [ ebp - 0x154 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x154 ]
mov eax [ ebx + 0x3c ]
call sub_4070d8
lea eax [ ebp - 0x158 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov ecx [ ebp - 0x158 ]
mov eax [ ebx + 0x30 ]
xor edx edx
call sub_405c74
lea eax [ ebp - 0x15c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov ecx [ ebp - 0x15c ]
mov eax [ ebx + 0x30 ]
mov edx 0x1
call sub_405c74
lea eax [ ebp - 0x160 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov ecx [ ebp - 0x160 ]
mov eax [ ebx + 0x30 ]
mov edx 0x2
call sub_405c74
lea eax [ ebp - 0x164 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov ecx [ ebp - 0x164 ]
mov eax [ ebx + 0x30 ]
mov edx 0x3
call sub_405c74
lea eax [ ebp - 0x168 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov ecx [ ebp - 0x168 ]
mov eax [ ebx + 0x30 ]
mov edx 0x4
call sub_405c74
lea eax [ ebp - 0x16c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov ecx [ ebp - 0x16c ]
mov eax [ ebx + 0x30 ]
mov edx 0x5
call sub_405c74
lea eax [ ebp - 0x170 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov ecx [ ebp - 0x170 ]
mov eax [ ebx + 0x30 ]
mov edx 0x6
call sub_405c74
lea eax [ ebp - 0x174 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov ecx [ ebp - 0x174 ]
mov eax [ ebx + 0x30 ]
mov edx 0x7
call sub_405c74
xor esi esi
mov eax [ ebx + 0xd4 ]
xor edx edx
call sub_407868
mov eax [ ebx + 0xd8 ]
mov dl 0x1
call sub_407868
lea ecx [ ebp - 0x178 ]
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_405be4
mov ecx [ ebp - 0x178 ]
mov eax [ ebx + 0x34 ]
mov edx esi
call sub_405c74
inc esi
cmp esi 0x8
jne r-xdata
lea eax [ ebp - 0x17c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x17c ]
mov eax [ ebx + 0x68 ]
call sub_4070d8
lea eax [ ebp - 0x180 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x180 ]
mov eax [ ebx + 0x6c ]
call sub_4070d8
lea eax [ ebp - 0x184 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x184 ]
mov eax [ ebx + 0x70 ]
call sub_4070d8
lea eax [ ebp - 0x188 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x188 ]
mov eax [ ebx + 0x40 ]
call sub_4070d8
lea eax [ ebp - 0x18c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x18c ]
mov eax [ ebx + 0x5c ]
call sub_4070d8
lea eax [ ebp - 0x190 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x190 ]
mov eax [ ebx + 0x44 ]
call sub_4070d8
lea eax [ ebp - 0x194 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x194 ]
mov eax [ ebx + 0x48 ]
call sub_4070d8
lea eax [ ebp - 0x198 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x198 ]
mov eax [ ebx + 0xac ]
call sub_4070d8
lea eax [ ebp - 0x19c ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x19c ]
mov eax [ ebx + 0xb8 ]
call sub_4070d8
lea eax [ ebp - 0x1a0 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x1a0 ]
mov eax [ ebx + 0xb0 ]
call sub_4070d8
lea eax [ ebp - 0x1a4 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x1a4 ]
mov eax [ ebx + 0xb4 ]
call sub_4070d8
lea eax [ ebp - 0x1a8 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x1a8 ]
mov eax [ ebx + 0xc0 ]
call sub_4070d8
lea eax [ ebp - 0x1ac ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x1ac ]
mov eax [ ebx + 0x64 ]
call sub_4070d8
lea edx [ ebp - 0x1b0 ]
mov eax [ ebx + 0x64 ]
call sub_40578c
mov edx [ ebp - 0x1b0 ]
mov eax [ ebx + 0x54 ]
call sub_4070d8
lea edx [ ebp - 0x1b4 ]
mov eax [ ebx + 0x64 ]
call sub_40578c
mov edx [ ebp - 0x1b4 ]
mov eax [ ebx + 0x58 ]
call sub_4070d8
lea eax [ ebp - 0x1b8 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x1b8 ]
mov eax [ ebx + 0xbc ]
call sub_4070d8
lea eax [ ebp - 0x1bc ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x1bc ]
mov eax [ ebx + 0xc4 ]
call sub_4070d8
lea eax [ ebp - 0x1c0 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x1c0 ]
lea eax [ ebx + 0x104 ]
call sub_403628
lea eax [ ebp - 0x1c4 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x1c4 ]
mov eax [ ebx + 0xd0 ]
call sub_4070d8
lea eax [ ebp - 0x1c8 ]
push eax
mov eax [ edi ]
mov ecx r-xdata
mov edx r-xdata
call sub_404b24
mov edx [ ebp - 0x1c8 ]
mov eax [ ebx + 0xe0 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1cc ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x1cc ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ ebx + 0xa8 ]
xor edx edx
call sub_407868
mov eax [ ebx + 0xa8 ]
mov dl 0x1
call sub_407868
jmp r-xdata
mov eax [ ebx + 0x7c ]
xor edx edx
call sub_407868
mov eax [ ebx + 0x7c ]
mov dl 0x1
call sub_407868
jmp r-xdata
mov eax [ ebx + 0xa8 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x90 ]
call sub_406da8
mov eax [ ebx + 0xa8 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x94 ]
call sub_406da8
mov eax [ ebx + 0xa8 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_406da8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1d0 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x1d0 ]
mov eax [ ebx + 0x90 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1d4 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x1d4 ]
mov eax [ ebx + 0x94 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1d8 ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x1d8 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ ebx + 0xe0 ]
xor edx edx
call sub_407868
mov eax [ ebx + 0xe0 ]
mov dl 0x1
call sub_407868
jmp r-xdata
mov eax [ ebx + 0x7c ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x98 ]
call sub_406da8
mov eax [ ebx + 0x7c ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x9c ]
call sub_406da8
mov eax [ ebx + 0x7c ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_406da8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1dc ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x1dc ]
mov eax [ ebx + 0x98 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1e0 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x1e0 ]
mov eax [ ebx + 0x9c ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1e4 ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x1e4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ ebx + 0xa0 ]
mov dl 0x1
call sub_406da8
mov eax [ ebx + 0x7c ]
call sub_407848
test al al
jne r-xdata
mov eax [ ebx + 0xe0 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0xe4 ]
call sub_406da8
mov eax [ ebx + 0xe0 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0xec ]
call sub_406da8
mov eax [ ebx + 0xe0 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0xe8 ]
call sub_406da8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1e8 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x1e8 ]
mov eax [ ebx + 0xe4 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1ec ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x1ec ]
mov eax [ ebx + 0xec ]
call sub_4070d8
mov eax [ ebx + 0xa8 ]
call sub_407848
test al al
jne r-xdata
mov eax [ ebx + 0x80 ]
xor edx edx
call sub_407868
mov eax [ ebx + 0x80 ]
mov dl 0x1
call sub_407868
jmp r-xdata
mov eax [ ebx + 0xe0 ]
call sub_407848
test al al
jne r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_40d304
mov edx eax
mov eax [ ebx + 0x30 ]
call sub_407b98
mov eax [ ebx + 0x30 ]
mov edx 0x7
call sub_407b98
jmp r-xdata
mov eax [ ebx + 0x80 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0xa4 ]
call sub_406da8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1f8 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x1f8 ]
mov eax [ ebx + 0xa4 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_403898
jne r-xdata
mov eax [ ebx + 0xa0 ]
xor edx edx
call sub_406da8
jmp r-xdata
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_40d304
mov edx eax
mov eax [ ebx + 0x34 ]
call sub_407b98
mov eax [ ebx + 0x34 ]
mov edx 0x7
call sub_407b98
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_403898
jne r-xdata
mov eax [ ebx + 0xa0 ]
call sub_407354
mov edx eax
mov eax [ ebx + 0x8c ]
call sub_406da8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1f0 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x1f0 ]
mov eax [ ebx + 0xa0 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x1f4 ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x1f4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x200 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x200 ]
lea eax [ ebp - 0x1fc ]
call sub_403530
mov eax [ ebp - 0x1fc ]
call sub_4066e8
mov edx eax
mov eax [ ebx + 0x74 ]
call sub_407ee8
mov eax [ ebx + 0x74 ]
mov edx 0x4
call sub_407ee8
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404994
test al al
jne r-xdata
mov eax [ ebx + 0xb8 ]
xor edx edx
call sub_407868
mov eax [ ebx + 0xb8 ]
mov dl 0x1
call sub_407868
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x204 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x204 ]
mov eax [ ebx + 0x60 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x208 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x208 ]
mov eax [ ebx + 0x4c ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x20c ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x20c ]
mov eax [ ebx + 0x50 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x210 ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x210 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ ebx + 0xb0 ]
xor edx edx
call sub_407868
mov eax [ ebx + 0xb0 ]
mov dl 0x1
call sub_407868
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x214 ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x214 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ ebx + 0xb4 ]
xor edx edx
call sub_407868
mov eax [ ebx + 0xb4 ]
mov dl 0x1
call sub_407868
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x218 ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x218 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ ebx + 0xc0 ]
xor edx edx
call sub_407868
mov eax [ ebx + 0xc0 ]
mov dl 0x1
call sub_407868
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x21c ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x21c ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ ebx + 0xbc ]
xor edx edx
call sub_407868
mov eax [ ebx + 0xbc ]
mov dl 0x1
call sub_407868
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x220 ]
xor edx edx
call sub_4048e0
mov eax [ ebp - 0x220 ]
mov edx r-xdata
call sub_403898
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd43
lea eax [ ebp - 0x224 ]
mov edx 0xa
call sub_403604
lea eax [ ebp - 0x1fc ]
call sub_4033a0
lea eax [ ebp - 0x1f8 ]
mov edx 0x59
call sub_403604
lea eax [ ebp - 0x94 ]
mov edx 0xd
call sub_403604
lea eax [ ebp - 0x60 ]
call sub_4033a0
lea eax [ ebp - 0x5c ]
call sub_4035ec
lea eax [ ebp - 0x58 ]
call sub_4033a0
lea eax [ ebp - 0x54 ]
mov edx 0x11
call sub_403604
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403604
retn
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0x224 ]
xor edx edx
call sub_4048e0
mov edx [ ebp - 0x224 ]
mov eax [ ebx + 0xc8 ]
call sub_4070d8
mov edx r-xdata
mov eax 0x80000001
call sub_404994
test al al
je r-xdata
sub_40c199
fcomp [ edx + 0x29 ]
add al 0x0
add [ eax ] al
xor [ eax ] eax
aaa
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
push esp
add [ ecx ] dh
add [ edi ] ch
add [ eax + eax + 0x41 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add al 0x0
add [ eax ] al
xor [ eax ] eax
cmp [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
add [ eax ] al
add [ ecx ] dh
add [ eax ] dh
add [ ebp ] cl
das
add [ eax + eax + 0x41 ] cl
add [ esi ] cl
add [ eax ] al
add al 0x0
add [ eax ] al
xor [ eax ] eax
cmp [ eax ] eax
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
lodsd [ esi ]
daa
pushad
std
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add [ eax ] al
xor al [ eax ]
xor [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
dec esi
dec edi
and [ eax ] al
inc ebx
add [ eax ] dl
push ebp
add [ eax ] ah
add [ edi + 0x4f ] bh
sub [ ebp ] dh
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
xor al [ eax ]
xor [ eax ] eax
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
add [ edi + 0x73 ] ah
dec edi
daa
pushad
std
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add [ eax ] al
xor al [ eax ]
xor al [ eax ]
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
lodsd [ esi ]
mov esi 0x7f6e8b
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
xor al [ eax ]
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
adc edi [ edi - 0x4e ]
push ecx
mul [ ebp - 0xc ]
xchg ebp eax
cmp al [ eax ]
add [ eax ] al
add al 0x0
add [ eax ] al
xor al [ eax ]
xor al 0x0
add [ eax ] al
add [ eax ] al
or al [ eax ]
add [ eax ] al
fimul [ edi - 0x727a9c5b ]
mul [ ebp + 0x3a ]
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
xor al [ eax ]
xor eax 0x0
add [ eax + eax ] cl
add [ eax ] al
or eax 0x6852a167
push esi
test [ ebp + 0x3a65f6 ] ecx
add [ eax ] al
add [ eax ] al
add al 0x0
add [ eax ] al
xor al [ eax ]
add [ ss : eax ] al
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ ecx + 0x7f ] dl
fdivr [ esi - 0x42 ]
mov ebp [ esi + 0x7f ]
add [ eax ] al
add [ eax ] al
add al 0x0
add [ eax ] al
xor al [ eax ]
aaa
add [ eax ] al
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
rcl [ ebx + 0x1 ] 0x1
nop
fimul [ edi - 0x72d79c5b ]
iretd
sub_40d18f
inc ebx
lea eax [ eax ]
push ebx
mov ebx eax
mov eax [ ebx + 0xa8 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x90 ]
call sub_406da8
mov eax [ ebx + 0xa8 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x94 ]
call sub_406da8
mov eax [ ebx + 0xa8 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_406da8
mov eax [ ebx + 0xa8 ]
call sub_407848
test al al
jne r-xdata
mov eax [ ebx + 0xa0 ]
mov dl 0x1
call sub_406da8
mov eax [ ebx + 0x7c ]
call sub_407848
test al al
jne r-xdata
mov eax [ ebx + 0xe0 ]
call sub_407848
test al al
jne r-xdata
mov eax [ ebx + 0xa0 ]
xor edx edx
call sub_406da8
jmp r-xdata
mov eax [ ebx + 0xa0 ]
call sub_407354
mov edx eax
mov eax [ ebx + 0x8c ]
call sub_406da8
pop ebx
retn
sub_40d240
push ebx
mov ebx eax
mov eax [ ebx + 0x7c ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x98 ]
call sub_406da8
mov eax [ ebx + 0x7c ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x9c ]
call sub_406da8
mov eax [ ebx + 0x7c ]
call sub_407848
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_406da8
mov eax [ ebx + 0xa8 ]
call sub_407848
test al al
jne r-xdata
mov eax [ ebx + 0xa0 ]
mov dl 0x1
call sub_406da8
mov eax [ ebx + 0x7c ]
call sub_407848
test al al
jne r-xdata
mov eax [ ebx + 0xe0 ]
call sub_407848
test al al
jne r-xdata
mov eax [ ebx + 0xa0 ]
xor edx edx
call sub_406da8
jmp r-xdata
mov eax [ ebx + 0xa0 ]
call sub_407354
mov edx eax
mov eax [ ebx + 0x8c ]
call sub_406da8
pop ebx
retn
sub_40d304
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
lea eax [ ebp - 0x4 ]
call sub_403a00
xor eax eax
push ebp
push j_sub_402e14#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x7
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov ebx 0x1
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov ebx 0x2
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov ebx 0x3
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov ebx 0x5
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403898
jne r-xdata
mov ebx 0x6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d3e1
lea eax [ ebp - 0x4 ]
call sub_4035ec
retn
mov ebx 0x7
sub_40d3e7
add [ edx ] cl
add [ eax ] al
add [ edx ] dh
add [ eax ] bh
add [ eax ] bh
add [ eax ] dh
add [ eax ] dh
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ 0x36003700 ] dh
add [ eax ] dh
add [ eax ] dh
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ esi ] dh
add [ 0x33003500 ] dh
add [ esi ] dh
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
xor [ eax ] eax
xor [ eax ] eax
xor eax 0x30003200
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
xor al [ eax ]
add [ ss : edx ] dh
add [ edx ] dh
add [ eax ] dh
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
xor eax [ eax ]
cmp [ eax ] eax
xor eax [ eax ]
xor al [ eax ]
xor [ eax ] eax
add [ ss : eax ] al
add [ eax ] al
add [ esi ] cl
add [ eax ] al
add [ ecx ] dh
add [ 0x34003400 ] dh
add [ eax ] dh
add [ eax ] dh
add [ eax ] dh
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ ecx ] dh
add [ eax ] dh
add [ eax + eax ] dh
cmp [ eax ] al
xor eax 0x30003800
add [ eax ] dh
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0xd
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40debd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xd4 ]
call sub_407848
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call j_sub_403628
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0xc ]
mov edx [ ebx + 0xf4 ]
call sub_4048e0
mov eax [ ebp - 0xc ]
xor edx edx
call sub_403898
je r-xdata
mov eax [ ebx + 0x100 ]
call sub_404be8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
add eax 0x1d
mov edx r-xdata
call sub_403628
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebx + 0xf4 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
call sub_404b24
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40377c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40391c
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_4037e8
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x1
lea eax [ ebp - 0x18 ]
push eax
mov edx [ ebx + 0xf4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
call sub_404b24
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
add eax 0x1d
mov edx r-xdata
call sub_403628
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebx + 0xf8 ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
call sub_404b24
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
call sub_40377c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40391c
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_4037e8
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x1
lea eax [ ebp - 0x20 ]
push eax
mov edx [ ebx + 0xf8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
call sub_404b24
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x10 ]
add eax 0x1d
mov edx r-xdata
call sub_403628
lea eax [ ebp - 0xc ]
push eax
mov edx [ ebx + 0xfc ]
mov eax [ ebp - 0x10 ]
xor ecx ecx
call sub_404b24
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40377c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40391c
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_4037e8
mov eax [ ebp - 0x10 ]
mov [ eax + 0x18 ] 0x1
lea eax [ ebp - 0x28 ]
push eax
mov edx [ ebx + 0xfc ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
call sub_404b24
mov eax [ ebp - 0x10 ]
call sub_4062fc
jmp r-xdata
mov eax [ ebx + 0x100 ]
call sub_404810
test al al
je r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0xc ]
mov edx [ ebx + 0xf8 ]
call sub_4048e0
mov eax [ ebp - 0xc ]
xor edx edx
call sub_403898
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
call sub_40377c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40391c
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_4037e8
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov edx [ ebx + 0xf4 ]
mov ecx [ ebp - 0xc ]
call sub_404948
mov eax [ ebx + 0xa8 ]
call sub_407848
test al al
je r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404834
lea ecx [ ebp - 0xc ]
mov edx [ ebx + 0xfc ]
call sub_4048e0
mov eax [ ebp - 0xc ]
xor edx edx
call sub_403898
je r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40377c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40391c
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_4037e8
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov edx [ ebx + 0xf8 ]
mov ecx [ ebp - 0xc ]
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor ecx ecx
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor ecx ecx
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
lea edx [ ebp - 0x38 ]
mov eax [ ebx + 0x90 ]
call sub_40578c
mov eax [ ebp - 0x38 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
lea edx [ ebp - 0x3c ]
mov eax [ ebx + 0x94 ]
call sub_40578c
mov eax [ ebp - 0x3c ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
jmp r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40377c
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_40391c
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
call sub_4037e8
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov edx [ ebx + 0xfc ]
mov ecx [ ebp - 0xc ]
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor ecx ecx
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor ecx ecx
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x98 ]
call sub_40578c
mov eax [ ebp - 0x40 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x9c ]
call sub_40578c
mov eax [ ebp - 0x44 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
jmp r-xdata
mov eax [ ebx + 0x7c ]
call sub_407848
test al al
je r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor ecx ecx
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor ecx ecx
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0xe4 ]
call sub_40578c
mov eax [ ebp - 0x48 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
lea edx [ ebp - 0x4c ]
mov eax [ ebx + 0xec ]
call sub_40578c
mov eax [ ebp - 0x4c ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
jmp r-xdata
mov eax [ ebx + 0xe0 ]
call sub_407848
test al al
je r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
jmp r-xdata
lea edx [ ebp - 0x50 ]
mov eax [ ebx + 0xa0 ]
call sub_40578c
mov eax [ ebp - 0x50 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
mov eax [ ebx + 0x80 ]
call sub_407848
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp [ eax * 4 + jump_table_40daa6 ]
lea edx [ ebp - 0x54 ]
mov eax [ ebx + 0xa4 ]
call sub_40578c
mov eax [ ebp - 0x54 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
mov eax [ ebx + 0x30 ]
call sub_407b68
cmp eax 0x7
ja r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp [ eax * 4 + jump_table_40db7c ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call j_sub_403628
jmp r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx [ ebp - 0x4 ]
xor edx edx
call sub_404948
mov eax [ ebx + 0x34 ]
call sub_407b68
cmp eax 0x7
ja r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
jmp r-xdata
mov eax [ ebx + 0xb4 ]
call sub_407848
test al al
je r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx [ ebp - 0x4 ]
xor edx edx
call sub_404948
mov eax [ ebx + 0x74 ]
call sub_407f00
lea edx [ ebp - 0x5c ]
call sub_406680
mov edx [ ebp - 0x5c ]
lea eax [ ebp - 0x58 ]
call sub_40375c
mov eax [ ebp - 0x58 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x60 ]
call sub_40578c
mov eax [ ebp - 0x60 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x4c ]
call sub_40578c
mov eax [ ebp - 0x64 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x50 ]
call sub_40578c
mov eax [ ebp - 0x68 ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
mov eax [ ebx + 0xb8 ]
call sub_407848
test al al
je r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
jmp r-xdata
mov eax [ ebx + 0xb0 ]
call sub_407848
test al al
je r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
jmp r-xdata
mov eax [ ebx + 0xc0 ]
call sub_407848
test al al
je r-xdata
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
mov edx r-xdata
mov eax 0x80000001
call sub_404864
mov ecx r-xdata
xor edx edx
call sub_404948
jmp r-xdata
mov eax [ ebx + 0xbc ]
call sub_407848
test al al
je r-xdata
lea edx [ ebp - 0x6c ]
mov eax [ ebx + 0xc8 ]
call sub_40578c
mov eax [ ebp - 0x6c ]
push eax
mov edx r-xdata
mov eax 0x80000001
call sub_404864
xor edx edx
pop ecx
call sub_404948
mov eax 0x80000001
call sub_404988
mov eax [ ebx + 0x18 ]
call sub_4062a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dec4
lea eax [ ebp - 0x6c ]
mov edx 0x4
call sub_403604
lea eax [ ebp - 0x5c ]
call sub_4033a0
lea eax [ ebp - 0x58 ]
mov edx 0x12
call sub_403604
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403604
retn
sub_40ed3c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push j_sub_402e14#2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edx + 0x4 ] 0x112
jne r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eddc
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403604
retn
cmp [ edx + 0x8 ] 0x401
jne r-xdata
push 0x40
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_40578c
mov eax [ ebp - 0x4 ]
call sub_40376c
push eax
lea edx [ ebp - 0xc ]
mov esi [ ebx + 0x18 ]
mov eax esi
call sub_40578c
push [ ebp - 0xc ]
push r-xdata
push r-xdata
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_403850
mov eax [ ebp - 0x8 ]
call sub_40376c
push eax
mov eax [ esi + 0x28 ]
push eax
call MessageBoxW
sub_40eeec
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_402e14
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef12
retn
sub_40ef29
cmp eax [ eax ]
and al 0x3e
inc eax
add ah dh
cmp eax 0x407c0040
inc eax
add [ eax + eax * 2 + 0x40 ] cl
add [ eax + eax * 2 + 0x40840040 ] dh
inc eax
add ah ch
inc eax
inc eax
add [ eax + eax * 2 + 0x7d300040 ] bh
inc eax
add al bl
jl r-xdata
call sub_408250
mov eax [ rw-data ]
mov eax [ eax ]
add eax 0x18
add [ eax + 0x7f ] ah
inc eax
add [ eax ] dh
jg r-xdata
call sub_406470
call sub_4032a8
inc eax
add [ ebx + 0x18c08300 ] cl
add ah bh
add [ eax ] sub_4081cc
xor al 0x82
inc eax
add [ edx + eax * 4 ] al
inc eax
add ah ah
out dx al
inc eax
add [ esi + ebp * 8 + 0x40 ] dh
add [ eax ] al
in al dx
out dx al
inc eax
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax r-xdata
call sub_403d78
mov eax [ rw-data ]
xor edx edx
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_41c27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_41cf70
add esp 0x4
call sub_41d130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_41d160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_41d160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_41cf70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_41cf70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_41cf70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_41cf70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_41cf70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_41cf70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xeb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_41d0a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xeb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_41c27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_41cf70
add esp 0x4
call sub_41d130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_41d160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_41d160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_41cf70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_41cf70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_41cf70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_41cf70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_41cf70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_41cf70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xeb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_41d0a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xeb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_41cf70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_41d0a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80de78ac
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_41d130
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_41d160
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
RaiseException
jmp [ RaiseException@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
MessageBoxA
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401038
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_401060
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_401068
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_401088
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
sub_4010b0
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_4010d4
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
InitializeCriticalSection
jmp [ InitializeCriticalSection@IAT ]
EnterCriticalSection
jmp [ EnterCriticalSection@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
DeleteCriticalSection
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_4019e4
jmp sub_402e14
sub_4019eb
mov al [ rw-data ]
pop ecx
pop ebp
retn
sub_401ae8
jmp sub_402e14
sub_401c08
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402324
retn
sub_402314
jmp sub_402e14
sub_4024eb
jmp sub_402e14
sub_4027b9
jmp sub_402e14
sub_40286c
mov [ rw-data ] edx
call sub_403388
sub_4028c4
and eax 0x7f
mov edx [ esp ]
jmp sub_402878
sub_402920
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402930
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402b8d
jmp sub_402e14
sub_402be0
fninit
fwait
fldcw [ rw-data ]
retn
sub_402bec
test eax eax
je r-xdata
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_402bf8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_402cac
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_402cc8
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_402ed0
xor edx edx
mov ecx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
add ecx 0x5
mov [ fs : edx ] eax
call ecx
retn 0xc
sub_402ee5
retn
sub_403028
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
j_sub_402ce8
jmp sub_402ce8
j_sub_402ce8#2
jmp sub_402ce8
sub_403150
mov [ rw-data ] RaiseException
mov [ rw-data ] RtlUnwind
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403028
mov [ rw-data ] 0x0
call sub_4030e0
retn
sub_403219
retn
sub_403382
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403388
mov [ rw-data ] eax
call sub_4032a8
sub_403514
retn
sub_40352f
retn
sub_403540
retn
sub_40354c
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4035c4
test eax eax
je r-xdata
retn
push eax
push 0x0
call sub_401088
test eax eax
je r-xdata
mov al 0x1
jmp sub_4028c4
sub_4035dc
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_403651
retn
sub_40373c
retn
sub_403758
retn
sub_40375c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_403654
mov ecx [ edx - 0x4 ]
sub_40376a
retn
sub_403a20
mov al 0x11
jmp sub_4028c4
j_sub_402ce8#3
jmp sub_402ce8
sub_403a84
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_403b0d
jmp sub_402e14
sub_403b14
pop ecx
pop ecx
pop ebp
retn
j_sub_402e14#8
jmp sub_402e14
sub_403b85
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_403bd6
jmp sub_402e14
sub_403bdd
pop ebp
retn
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_403cd4
push eax
push 0x40
call LocalAlloc
retn
sub_403ce0
mov eax 0x8
retn
sub_403d6c
mov eax rw-data
call sub_403a84
retn
sub_403de1
jmp sub_402e14
sub_403de8
pop ebp
retn
sub_403dec
sub [ rw-data ] 0x1
retn
sub_403e19
jmp sub_402e14
sub_403e20
pop ebp
retn
sub_403e24
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
CloseHandle
jmp [ __import_lookup_table_6(kernel32:CloseHandle) ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
lstrcpyW
jmp [ lstrcpyW@IAT ]
CreateSolidBrush
jmp [ __import_lookup_table_7(gdi32:CreateSolidBrush) ]
GetStockObject
jmp [ __import_lookup_table_7(gdi32:GetStockObject) ]
SetBkColor
jmp [ __import_lookup_table_7(gdi32:SetBkColor) ]
SetBrushOrgEx
jmp [ __import_lookup_table_7(gdi32:SetBrushOrgEx) ]
SetTextColor
jmp [ __import_lookup_table_7(gdi32:SetTextColor) ]
CheckRadioButton
jmp [ __import_lookup_table_8(user32:CheckRadioButton) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CopyImage
jmp [ CopyImage@IAT ]
sub_403ed4
jmp [ __import_lookup_table_8(user32:DefWindowProcW) ]
DestroyIcon
jmp [ __import_lookup_table_8(user32:DestroyIcon) ]
DestroyWindow
jmp [ __import_lookup_table_8(user32:DestroyWindow) ]
EnableMenuItem
jmp [ EnableMenuItem@IAT ]
EnableWindow
jmp [ EnableWindow@IAT ]
FillRect
jmp [ FillRect@IAT ]
sub_403f04
jmp [ __import_lookup_table_8(user32:GetClassInfoW) ]
GetClientRect
jmp [ __import_lookup_table_8(user32:GetClientRect) ]
GetFocus
jmp [ __import_lookup_table_8(user32:GetFocus) ]
GetParent
jmp [ __import_lookup_table_8(user32:GetParent) ]
GetSysColor
jmp [ __import_lookup_table_8(user32:GetSysColor) ]
GetSystemMenu
jmp [ __import_lookup_table_8(user32:GetSystemMenu) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextW
jmp [ __import_lookup_table_8(user32:GetWindowTextW) ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsWindowVisible
jmp [ IsWindowVisible@IAT ]
OffsetRect
jmp [ OffsetRect@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
RegisterClassW
jmp [ RegisterClassW@IAT ]
sub_403f9c
jmp [ __import_lookup_table_8(user32:SendMessageW) ]
SetForegroundWindow
jmp [ __import_lookup_table_8(user32:SetForegroundWindow) ]
SetParent
jmp [ __import_lookup_table_8(user32:SetParent) ]
SetWindowPos
jmp [ __import_lookup_table_8(user32:SetWindowPos) ]
TranslateMessage
jmp [ __import_lookup_table_8(user32:TranslateMessage) ]
WaitMessage
jmp [ __import_lookup_table_8(user32:WaitMessage) ]
sub_403fdc
movzx eax ax
movzx edx dx
shl edx 0x10
or eax edx
retn
sub_403fe8
shr eax 0x10
retn
CreateWindowExW
jmp [ CreateWindowExW@IAT ]
sub_404071
jmp sub_402e14
sub_404078
pop ebp
retn
sub_40407c
sub [ rw-data ] 0x1
retn
j_sub_402e14#7
jmp sub_402e14
sub_4040b0
pop ebp
retn
sub_4040b4
sub [ rw-data ] 0x1
retn
sub_4040e1
jmp sub_402e14
sub_4040e8
pop ebp
retn
sub_4040ec
sub [ rw-data ] 0x1
retn
RegCreateKeyExW
jmp [ __import_lookup_table_9(advapi32:RegCreateKeyExW) ]
RegOpenKeyExW
jmp [ __import_lookup_table_9(advapi32:RegOpenKeyExW) ]
RegQueryValueExW
jmp [ __import_lookup_table_9(advapi32:RegQueryValueExW) ]
RegSetValueExW
jmp [ __import_lookup_table_9(advapi32:RegSetValueExW) ]
CreateFileW
jmp [ CreateFileW@IAT ]
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
GetFileAttributesW
jmp [ GetFileAttributesW@IAT ]
GetModuleFileNameW
jmp [ GetModuleFileNameW@IAT ]
GetPrivateProfileStringW
jmp [ GetPrivateProfileStringW@IAT ]
LoadLibraryW
jmp [ LoadLibraryW@IAT ]
WritePrivateProfileStringW
jmp [ __import_lookup_table_10(kernel32:WritePrivateProfileStringW) ]
CreateFontIndirectW
jmp [ CreateFontIndirectW@IAT ]
CallWindowProcW
jmp [ CallWindowProcW@IAT ]
DefWindowProcW
jmp [ DefWindowProcW@IAT ]
DispatchMessageW
jmp [ DispatchMessageW@IAT ]
GetClassInfoW
jmp [ GetClassInfoW@IAT ]
GetClassLongW
jmp [ GetClassLongW@IAT ]
GetPropW
jmp [ GetPropW@IAT ]
GetWindowTextLengthW
jmp [ GetWindowTextLengthW@IAT ]
LoadCursorW
jmp [ __import_lookup_table_12(user32:LoadCursorW) ]
LoadIconW
jmp [ LoadIconW@IAT ]
MessageBoxW
jmp [ MessageBoxW@IAT ]
PeekMessageW
jmp [ PeekMessageW@IAT ]
PostMessageW
jmp [ PostMessageW@IAT ]
RemovePropW
jmp [ RemovePropW@IAT ]
SetPropW
jmp [ SetPropW@IAT ]
SetWindowLongW
jmp [ __import_lookup_table_12(user32:SetWindowLongW) ]
InitCommonControls
jmp [ InitCommonControls@IAT ]
sub_4042e0
test eax eax
jne r-xdata
retn
mov eax rw-data
sub_4042ec
retn
sub_4042f0
push ecx
mov edx [ eax ]
mov [ esp ] edx
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
call sub_4062fc
pop edx
retn
sub_404304
retn
sub_404308
add [ eax + 0x4 ] 0x2
retn
sub_40438c
mov edx [ r-xdata ]
xor eax eax
call sub_4062ec
mov [ eax + 0x24 ] 0x4
retn
sub_4043a4
mov ecx 0x1
call sub_4063f0
retn
sub_4043b0
push ebx
mov ebx eax
mov eax ebx
call sub_406428
test eax eax
jl r-xdata
pop ebx
retn
mov edx ebx
xchg edx eax
call sub_4043a4
sub_4043c8
test edx edx
jl r-xdata
xor eax eax
retn
cmp edx [ eax + 0x1c ]
jge r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax + edx * 4 ]
retn
sub_40453c
mov edx [ eax ]
call [ edx + 0xc ]
retn
sub_404544
mov edx [ r-xdata ]
xor eax eax
call sub_4062ec
retn
j_sub_402e14#9
jmp sub_402e14
sub_40461e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_404624
cmp dl [ eax + 0x4c ]
je r-xdata
retn
mov [ eax + 0x4c ] dl
call sub_4065b8
sub_404634
push ebx
mov ebx eax
cmp [ ebx + 0x19 ] 0x0
jne r-xdata
mov eax [ ebx + 0x19 ]
pop ebx
retn
lea eax [ ebx + 0x31 ]
push eax
call CreateFontIndirectW
mov [ ebx + 0x19 ] eax
sub_404800
jmp sub_402e14
sub_404807
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_404988
test eax eax
je r-xdata
retn
push eax
call RegCloseKey
sub_4049ed
jmp sub_402e14
sub_4049f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4049fc
mov cl 0x1
xor edx edx
call sub_406770
retn
sub_404a10
mov eax [ eax + 0x40 ]
retn
sub_404a44
mov eax [ eax + 0x40 ]
call sub_406728
retn
sub_404a50
push 0x0
mov eax [ eax + 0x40 ]
push eax
call GetFileSize
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_404a64
retn
sub_404a68
xor eax eax
retn
sub_404a6c
mov eax [ eax + 0x40 ]
call sub_406738
retn
sub_404a78
mov eax [ eax + 0x40 ]
call sub_406754
retn
sub_404a84
push ebx
mov ebx eax
mov eax [ ebx + 0x40 ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x40 ] 0xffffffff
pop ebx
retn
call sub_40671c
sub_404c0c
xor edx edx
call sub_4070d8
retn
sub_404c14
push 0x0
push 0x0
push 0x14b
push eax
call sub_407c10
retn
sub_404d95
add [ eax ] al
add [ ebx ] dh
rol [ ecx + 0x203047a ] 0x0
add [ ebp + 0x7 ] dh
mov [ edx + 0x4 ] 0x201
retn
sub_405776
jmp sub_402e14
sub_40577d
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_405788
xor eax eax
retn
sub_405a2c
cmp [ rw-data ] 0x0
je r-xdata
retn
call [ rw-data ]
sub_405bdc
mov cl 0x1
call sub_407950
retn
sub_405e18
retn
sub_406284
push esi
mov si [ eax + 0x222 ]
test si si
je r-xdata
pop esi
retn
push ecx
push edx
movzx edx si
push edx
push eax
call sub_407c10
sub_4062a0
push 0x0
push 0x0
push 0x10
mov eax [ eax + 0x28 ]
push eax
call PostMessageW
retn
sub_4062b0
mov ecx 0x10
call sub_404650
retn
sub_4062ec
call sub_402a84
je r-xdata
retn
push eax
mov edx [ eax ]
call [ edx ]
pop eax
sub_40630c
push eax
call sub_404310
pop eax
xor edx edx
call sub_4027fc
retn
sub_40637c
push eax
call sub_4063a8
pop eax
call sub_40630c
retn
sub_40638c
cmp edx [ eax + 0x1c ]
jge r-xdata
cmp edx [ eax + 0x20 ]
je r-xdata
mov edx [ eax + 0x1c ]
retn
mov [ eax + 0x20 ] edx
shl edx 0x2
lea eax [ eax + 0x18 ]
call sub_40281c
sub_4063a8
push [ eax + 0x18 ]
xor edx edx
mov [ eax + 0x18 ] edx
mov [ eax + 0x1c ] edx
mov [ eax + 0x20 ] edx
pop eax
call sub_4027fc
retn
sub_4065cc
mov ecx [ eax + 0x25 ]
jecxz r-xdata
retn
push eax
xchg edx eax
mov eax [ edx + 0x29 ]
call ecx
pop eax
sub_406604
push eax
call sub_4065b8
pop edx
xor eax eax
xchg [ edx + 0x19 ] eax
retn
sub_40671c
push eax
call CloseHandle
test eax eax
setne al
retn
sub_406728
movzx ecx cl
push ecx
push 0x0
push edx
push eax
call SetFilePointer
retn
sub_40676c
call [ eax + 0x2c ]
retn
sub_406770
call [ eax + 0x1c ]
retn
sub_406774
push eax
push [ eax + 0x50 ]
call [ eax + 0x30 ]
pop eax
call sub_4062fc
pop eax
call sub_40630c
retn
sub_406788
push eax
lea edx [ eax + 0x19 ]
push edx
lea eax [ eax + 0x1d ]
call sub_4035ec
pop eax
call sub_4035ec
pop eax
call sub_40630c
retn
sub_4067a4
mov ecx eax
mov edx [ r-xdata ]
xor eax eax
call sub_407418
retn
sub_406918
mov ecx [ eax + 0x4d ]
jecxz r-xdata
retn
push [ eax + 0x9d ]
push [ ecx + 0x179 ]
push [ ecx + 0x175 ]
push [ ecx + 0x28 ]
call CheckRadioButton
sub_406c5c
push eax
push edx
mov edx [ eax ]
call [ edx ]
pop edx
pop eax
test edx edx
je r-xdata
call sub_407394
retn
mov ecx [ edx + 0x115 ]
mov [ eax + 0x115 ] ecx
sub_406e87
mov eax [ ecx + 0x156 ]
mov ebx [ ecx + 0x152 ]
sub_4070cc
mov ecx [ eax + 0xfd ]
jecxz r-xdata
retn
push ecx
sub_407114
mov ecx [ eax + 0x28 ]
jecxz r-xdata
movzx eax [ eax + 0x52 ]
retn
cmp [ eax + 0xbe ] 0x0
jne r-xdata
push eax
push ecx
call IsWindowVisible
xchg edx eax
pop eax
mov [ eax + 0x52 ] dl
sub_4071d4
pop ecx
add esp 0xfffffff0
mov edx esp
push ecx
push eax
call sub_407174
pop eax
retn
sub_4072c8
mov ecx [ eax + 0x28 ]
jecxz r-xdata
retn
push 0xff
push 0x0
push ecx
call InvalidateRect
sub_407334
push [ edx + 0xc ]
push [ edx + 0x8 ]
push [ edx + 0x4 ]
mov ecx [ eax + 0x48 ]
jecxz r-xdata
push [ edx ]
call sub_403ed4
retn
push [ eax + 0x28 ]
push ecx
call CallWindowProcW
retn
sub_407354
mov ecx [ eax + 0x28 ]
jecxz r-xdata
test [ eax + 0x37 ] 0x8
sete al
retn
push ecx
call IsWindowEnabled
retn
sub_407418
call sub_402a84
je r-xdata
retn
push eax
mov edx ecx
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop eax
sub_407474
call sub_4071d4
pop edx
pop ecx
pop eax
sub eax edx
pop ecx
retn
sub_407480
push edx
call sub_4071d4
pop edx
push edx
add edx [ esp + 0x10 ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_4071e4
add esp 0x14
retn
sub_40749c
call sub_4071d4
pop ecx
pop edx
pop ecx
pop eax
sub eax edx
retn
sub_4074a8
push edx
call sub_4071d4
mov edx [ esp + 0x4 ]
add edx [ esp + 0x10 ]
mov [ esp + 0xc ] edx
mov edx esp
call sub_4071e4
add esp 0x14
retn
sub_40752c
mov ecx [ eax + 0x4d ]
jecxz r-xdata
xchg ecx eax
retn
push ecx
test dl dl
je r-xdata
pop ecx
mov ecx [ ecx + 0x28 ]
xchg ecx eax
call sub_40543c
sub_407544
push esi
mov esi [ eax + 0x65 ]
mov ecx [ esi + 0x1c ]
mov esi [ esi + 0x18 ]
jecxz r-xdata
pop esi
retn
push ecx
lodsd [ esi ]
call sub_40453c
pop ecx
loop r-xdata
sub_4075b8
push eax
call sub_40755c
dec al
pop eax
je sub_4075b8
retn
sub_4075fc
push eax
call [ eax + 0xf9 ]
pop edx
mov ecx [ edx + 0x162 ]
jecxz r-xdata
retn
mov eax [ edx + 0x166 ]
call ecx
sub_407618
cmp [ eax + 0xbe ] 0x0
je r-xdata
retn
mov eax [ eax + 0x4d ]
test eax eax
jne sub_407618
sub_407664
mov ecx [ edx + 0x2d ]
mov [ eax + 0x111 ] ecx
push eax
call sub_405a2c
pop eax
call sub_4072c8
retn
sub_40767c
mov ecx [ edx + 0x2d ]
mov [ eax + 0x115 ] ecx
xor ecx ecx
xchg [ eax + 0x86 ] ecx
jecxz r-xdata
call sub_4072c8
retn
push eax
push ecx
call DeleteObject
pop eax
sub_4076e4
add esp 0xfffffff0
mov edx esp
call sub_407288
pop edx
pop ecx
pop edx
pop eax
sub eax ecx
retn
sub_4076f8
add esp 0xfffffff0
mov edx esp
call sub_407288
pop ecx
pop edx
pop eax
sub eax ecx
pop edx
retn
sub_4077b4
call sub_40781c
mov edx [ eax + 0x34 ]
and edx 0xc40000
setne dl
mov eax [ eax + 0x38 ]
and eax 0x200
setne al
or al dl
retn
sub_4077d4
mov al [ eax + 0x5b ]
xor al 0x1
retn
sub_407890
push eax
push [ eax + 0x53 ]
mov [ eax + 0x53 ] 0x0
call sub_4075fc
pop edx
pop eax
mov [ eax + 0x53 ] dl
retn
sub_4078f4
push 0x0
movzx ecx [ eax + 0x216 ]
jecxz r-xdata
pop eax
retn
push 0x0
push ecx
push eax
call sub_407c10
push eax
sub_40790c
jecxz r-xdata
xchg edx eax
retn
push 0x0
push edx
push ecx
push eax
call sub_407c10
xchg edx eax
sub_40791c
movzx ecx [ eax + 0x22e ]
jmp sub_40790c
sub_407928
retn
sub_40792c
movzx ecx [ eax + 0x22f ]
jmp sub_40790c
sub_407938
retn
sub_40793c
movzx ecx [ eax + 0x226 ]
jecxz r-xdata
retn
push 0x0
push edx
push ecx
push eax
call sub_407c10
sub_4079a4
push edi
push eax
call sub_40438c
xchg edi eax
pop eax
call sub_4079b5
xchg edi eax
pop edi
retn
sub_407b50
push eax
call sub_407618
test eax eax
je r-xdata
pop eax
retn
mov [ eax + 0x10b ] sub_407af0
sub_407c10
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
call sub_40543c
push eax
call sub_403f9c
pop ebp
retn 0x10
j_sub_402e14#6
jmp sub_402e14
sub_407d2e
pop ebp
retn
sub_407d56
jmp sub_402e14
sub_407d5d
pop ebp
retn
sub_407e88
mov [ eax + 0x20 ] edx
push 0x1
push edx
push 0x414
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x28 ]
push eax
call SendMessageA
retn
sub_407ed0
push edx
push 0x1
push 0x415
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x28 ]
push eax
call SendMessageA
retn
sub_407f00
push 0x0
push 0x0
push 0x400
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x28 ]
push eax
call SendMessageA
retn
sub_407f18
push edx
push 0x1
push 0x408
mov eax [ eax + 0x18 ]
mov eax [ eax + 0x28 ]
push eax
call SendMessageA
retn
sub_407f55
jmp sub_402e14
sub_407f5c
pop ebp
retn
sub_407f60
sub [ rw-data ] 0x1
retn
sub_4081f1
jmp sub_402e14
sub_4081f8
pop ebp
retn
sub_4081fc
sub [ rw-data ] 0x1
retn
j_sub_402e14#5
jmp sub_402e14
sub_408230
pop ebp
retn
sub_408234
sub [ rw-data ] 0x1
retn
j_sub_402e14#4
jmp sub_402e14
sub_409876
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409893
lea eax [ ebp - 0x4 ]
call sub_4035ec
retn
sub_40988c
jmp sub_402e14
sub_409893
mov esp ebp
pop ebp
retn
sub_40bd3c
jmp sub_402e14
sub_40bd43
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40d2e4
push ebx
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_407848
mov edx eax
mov eax [ ebx + 0xa4 ]
call sub_406da8
pop ebx
retn
j_sub_402e14#3
jmp sub_402e14
sub_40d3e1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_40debd
jmp sub_402e14
sub_40dec4
pop ebx
mov esp ebp
pop ebp
retn
j_sub_402e14#2
jmp sub_402e14
sub_40eddc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eed8
retn
sub_40eed9
jmp sub_402e14
j_sub_40eed8
jmp sub_40eed8
sub_40eee0
pop ebp
retn
sub_40eee4
sub [ rw-data ] 0x1
retn
j_sub_402e14
jmp sub_402e14
sub_40ef12
pop ebp
retn
